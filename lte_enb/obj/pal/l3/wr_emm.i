static const char* RLOG_MODULE_NAME="EMM";
static int RLOG_MODULE_ID=1;
static int RLOG_FILE_ID=3;

typedef void *Ptr;
typedef unsigned char Bool;


typedef char S8;




typedef unsigned char U8;

typedef short S16;
typedef unsigned short U16;


typedef long S32;
typedef unsigned long U32;





__extension__ typedef long long S64;
__extension__ typedef unsigned long long U64;
typedef float F32;
typedef double F64;
typedef void Void;



typedef S8 (*PFS8) (void );
typedef S16 (*PFS16) (void );
typedef S32 (*PFS32) (void );
typedef Void (*PFVOID) (void );
typedef Void ( *PIF) (void );
typedef U32 MFTYPE;




typedef S8 *ARGTYPE;










typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;






static __inline unsigned int
__bswap_32 (unsigned int __bsx)
{
  return __builtin_bswap32 (__bsx);
}
static __inline __uint64_t
__bswap_64 (__uint64_t __bsx)
{
  return __builtin_bswap64 (__bsx);
}
typedef unsigned int size_t;







typedef __time_t time_t;



struct timespec
  {
    __time_t tv_sec;
    __syscall_slong_t tv_nsec;
  };


typedef __pid_t pid_t;





struct sched_param
  {
    int __sched_priority;
  };





extern int clone (int (*__fn) (void *__arg), void *__child_stack,
    int __flags, void *__arg, ...) __attribute__ ((__nothrow__ , __leaf__));


extern int unshare (int __flags) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_getcpu (void) __attribute__ ((__nothrow__ , __leaf__));


extern int setns (int __fd, int __nstype) __attribute__ ((__nothrow__ , __leaf__));











struct __sched_param
  {
    int __sched_priority;
  };
typedef unsigned long int __cpu_mask;






typedef struct
{
  __cpu_mask __bits[1024 / (8 * sizeof (__cpu_mask))];
} cpu_set_t;


extern int __sched_cpucount (size_t __setsize, const cpu_set_t *__setp)
  __attribute__ ((__nothrow__ , __leaf__));
extern cpu_set_t *__sched_cpualloc (size_t __count) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern void __sched_cpufree (cpu_set_t *__set) __attribute__ ((__nothrow__ , __leaf__));









extern int sched_setparam (__pid_t __pid, const struct sched_param *__param)
     __attribute__ ((__nothrow__ , __leaf__));


extern int sched_getparam (__pid_t __pid, struct sched_param *__param) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_setscheduler (__pid_t __pid, int __policy,
          const struct sched_param *__param) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_getscheduler (__pid_t __pid) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_yield (void) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_get_priority_max (int __algorithm) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_get_priority_min (int __algorithm) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_rr_get_interval (__pid_t __pid, struct timespec *__t) __attribute__ ((__nothrow__ , __leaf__));
extern int sched_setaffinity (__pid_t __pid, size_t __cpusetsize,
         const cpu_set_t *__cpuset) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_getaffinity (__pid_t __pid, size_t __cpusetsize,
         cpu_set_t *__cpuset) __attribute__ ((__nothrow__ , __leaf__));














struct timeval
  {
    __time_t tv_sec;
    __suseconds_t tv_usec;
  };
struct timex
{
  unsigned int modes;
  __syscall_slong_t offset;
  __syscall_slong_t freq;
  __syscall_slong_t maxerror;
  __syscall_slong_t esterror;
  int status;
  __syscall_slong_t constant;
  __syscall_slong_t precision;
  __syscall_slong_t tolerance;
  struct timeval time;
  __syscall_slong_t tick;
  __syscall_slong_t ppsfreq;
  __syscall_slong_t jitter;
  int shift;
  __syscall_slong_t stabil;
  __syscall_slong_t jitcnt;
  __syscall_slong_t calcnt;
  __syscall_slong_t errcnt;
  __syscall_slong_t stbcnt;

  int tai;


  int :32; int :32; int :32; int :32;
  int :32; int :32; int :32; int :32;
  int :32; int :32; int :32;
};




extern int clock_adjtime (__clockid_t __clock_id, struct timex *__utx) __attribute__ ((__nothrow__ , __leaf__));




typedef __clock_t clock_t;



typedef __clockid_t clockid_t;
typedef __timer_t timer_t;


struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;


  long int tm_gmtoff;
  const char *tm_zone;




};








struct itimerspec
  {
    struct timespec it_interval;
    struct timespec it_value;
  };


struct sigevent;



extern clock_t clock (void) __attribute__ ((__nothrow__ , __leaf__));


extern time_t time (time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));


extern double difftime (time_t __time1, time_t __time0)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern time_t mktime (struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));





extern size_t strftime (char *__restrict __s, size_t __maxsize,
   const char *__restrict __format,
   const struct tm *__restrict __tp) __attribute__ ((__nothrow__ , __leaf__));





extern char *strptime (const char *__restrict __s,
         const char *__restrict __fmt, struct tm *__tp)
     __attribute__ ((__nothrow__ , __leaf__));





typedef struct __locale_struct
{

  struct __locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
} *__locale_t;


typedef __locale_t locale_t;

extern size_t strftime_l (char *__restrict __s, size_t __maxsize,
     const char *__restrict __format,
     const struct tm *__restrict __tp,
     __locale_t __loc) __attribute__ ((__nothrow__ , __leaf__));



extern char *strptime_l (const char *__restrict __s,
    const char *__restrict __fmt, struct tm *__tp,
    __locale_t __loc) __attribute__ ((__nothrow__ , __leaf__));






extern struct tm *gmtime (const time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));



extern struct tm *localtime (const time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));





extern struct tm *gmtime_r (const time_t *__restrict __timer,
       struct tm *__restrict __tp) __attribute__ ((__nothrow__ , __leaf__));



extern struct tm *localtime_r (const time_t *__restrict __timer,
          struct tm *__restrict __tp) __attribute__ ((__nothrow__ , __leaf__));





extern char *asctime (const struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));


extern char *ctime (const time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));







extern char *asctime_r (const struct tm *__restrict __tp,
   char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));


extern char *ctime_r (const time_t *__restrict __timer,
        char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));




extern char *__tzname[2];
extern int __daylight;
extern long int __timezone;




extern char *tzname[2];



extern void tzset (void) __attribute__ ((__nothrow__ , __leaf__));



extern int daylight;
extern long int timezone;





extern int stime (const time_t *__when) __attribute__ ((__nothrow__ , __leaf__));
extern time_t timegm (struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));


extern time_t timelocal (struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));


extern int dysize (int __year) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
extern int nanosleep (const struct timespec *__requested_time,
        struct timespec *__remaining);



extern int clock_getres (clockid_t __clock_id, struct timespec *__res) __attribute__ ((__nothrow__ , __leaf__));


extern int clock_gettime (clockid_t __clock_id, struct timespec *__tp) __attribute__ ((__nothrow__ , __leaf__));


extern int clock_settime (clockid_t __clock_id, const struct timespec *__tp)
     __attribute__ ((__nothrow__ , __leaf__));






extern int clock_nanosleep (clockid_t __clock_id, int __flags,
       const struct timespec *__req,
       struct timespec *__rem);


extern int clock_getcpuclockid (pid_t __pid, clockid_t *__clock_id) __attribute__ ((__nothrow__ , __leaf__));




extern int timer_create (clockid_t __clock_id,
    struct sigevent *__restrict __evp,
    timer_t *__restrict __timerid) __attribute__ ((__nothrow__ , __leaf__));


extern int timer_delete (timer_t __timerid) __attribute__ ((__nothrow__ , __leaf__));


extern int timer_settime (timer_t __timerid, int __flags,
     const struct itimerspec *__restrict __value,
     struct itimerspec *__restrict __ovalue) __attribute__ ((__nothrow__ , __leaf__));


extern int timer_gettime (timer_t __timerid, struct itimerspec *__value)
     __attribute__ ((__nothrow__ , __leaf__));


extern int timer_getoverrun (timer_t __timerid) __attribute__ ((__nothrow__ , __leaf__));





extern int timespec_get (struct timespec *__ts, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
extern int getdate_err;
extern struct tm *getdate (const char *__string);
extern int getdate_r (const char *__restrict __string,
        struct tm *__restrict __resbufp);




typedef unsigned long int pthread_t;


union pthread_attr_t
{
  char __size[36];
  long int __align;
};

typedef union pthread_attr_t pthread_attr_t;
typedef struct __pthread_internal_slist
{
  struct __pthread_internal_slist *__next;
} __pthread_slist_t;





typedef union
{
  struct __pthread_mutex_s
  {
    int __lock;
    unsigned int __count;
    int __owner;





    int __kind;
    unsigned int __nusers;
    __extension__ union
    {
      struct
      {
 short __espins;
 short __elision;



      } __elision_data;
      __pthread_slist_t __list;
    };

  } __data;
  char __size[24];
  long int __align;
} pthread_mutex_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  struct
  {
    int __lock;
    unsigned int __futex;
    __extension__ unsigned long long int __total_seq;
    __extension__ unsigned long long int __wakeup_seq;
    __extension__ unsigned long long int __woken_seq;
    void *__mutex;
    unsigned int __nwaiters;
    unsigned int __broadcast_seq;
  } __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;





typedef union
{
  struct
  {
    int __lock;
    unsigned int __nr_readers;
    unsigned int __readers_wakeup;
    unsigned int __writer_wakeup;
    unsigned int __nr_readers_queued;
    unsigned int __nr_writers_queued;


    unsigned char __flags;
    unsigned char __shared;
    signed char __rwelision;

    unsigned char __pad2;
    int __writer;
  } __data;

  char __size[32];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[20];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
typedef int __jmp_buf[6];



enum
{
  PTHREAD_CREATE_JOINABLE,

  PTHREAD_CREATE_DETACHED

};



enum
{
  PTHREAD_MUTEX_TIMED_NP,
  PTHREAD_MUTEX_RECURSIVE_NP,
  PTHREAD_MUTEX_ERRORCHECK_NP,
  PTHREAD_MUTEX_ADAPTIVE_NP

  ,
  PTHREAD_MUTEX_NORMAL = PTHREAD_MUTEX_TIMED_NP,
  PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,
  PTHREAD_MUTEX_ERRORCHECK = PTHREAD_MUTEX_ERRORCHECK_NP,
  PTHREAD_MUTEX_DEFAULT = PTHREAD_MUTEX_NORMAL



  , PTHREAD_MUTEX_FAST_NP = PTHREAD_MUTEX_TIMED_NP

};




enum
{
  PTHREAD_MUTEX_STALLED,
  PTHREAD_MUTEX_STALLED_NP = PTHREAD_MUTEX_STALLED,
  PTHREAD_MUTEX_ROBUST,
  PTHREAD_MUTEX_ROBUST_NP = PTHREAD_MUTEX_ROBUST
};





enum
{
  PTHREAD_PRIO_NONE,
  PTHREAD_PRIO_INHERIT,
  PTHREAD_PRIO_PROTECT
};
enum
{
  PTHREAD_RWLOCK_PREFER_READER_NP,
  PTHREAD_RWLOCK_PREFER_WRITER_NP,
  PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
  PTHREAD_RWLOCK_DEFAULT_NP = PTHREAD_RWLOCK_PREFER_READER_NP
};
enum
{
  PTHREAD_INHERIT_SCHED,

  PTHREAD_EXPLICIT_SCHED

};



enum
{
  PTHREAD_SCOPE_SYSTEM,

  PTHREAD_SCOPE_PROCESS

};



enum
{
  PTHREAD_PROCESS_PRIVATE,

  PTHREAD_PROCESS_SHARED

};
struct _pthread_cleanup_buffer
{
  void (*__routine) (void *);
  void *__arg;
  int __canceltype;
  struct _pthread_cleanup_buffer *__prev;
};


enum
{
  PTHREAD_CANCEL_ENABLE,

  PTHREAD_CANCEL_DISABLE

};
enum
{
  PTHREAD_CANCEL_DEFERRED,

  PTHREAD_CANCEL_ASYNCHRONOUS

};





extern int pthread_create (pthread_t *__restrict __newthread,
      const pthread_attr_t *__restrict __attr,
      void *(*__start_routine) (void *),
      void *__restrict __arg) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));





extern void pthread_exit (void *__retval) __attribute__ ((__noreturn__));







extern int pthread_join (pthread_t __th, void **__thread_return);




extern int pthread_tryjoin_np (pthread_t __th, void **__thread_return) __attribute__ ((__nothrow__ , __leaf__));







extern int pthread_timedjoin_np (pthread_t __th, void **__thread_return,
     const struct timespec *__abstime);






extern int pthread_detach (pthread_t __th) __attribute__ ((__nothrow__ , __leaf__));



extern pthread_t pthread_self (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern int pthread_equal (pthread_t __thread1, pthread_t __thread2)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));







extern int pthread_attr_init (pthread_attr_t *__attr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_destroy (pthread_attr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_getdetachstate (const pthread_attr_t *__attr,
     int *__detachstate)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setdetachstate (pthread_attr_t *__attr,
     int __detachstate)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getguardsize (const pthread_attr_t *__attr,
          size_t *__guardsize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setguardsize (pthread_attr_t *__attr,
          size_t __guardsize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getschedparam (const pthread_attr_t *__restrict __attr,
           struct sched_param *__restrict __param)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setschedparam (pthread_attr_t *__restrict __attr,
           const struct sched_param *__restrict
           __param) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_getschedpolicy (const pthread_attr_t *__restrict
     __attr, int *__restrict __policy)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setschedpolicy (pthread_attr_t *__attr, int __policy)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_getinheritsched (const pthread_attr_t *__restrict
      __attr, int *__restrict __inherit)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setinheritsched (pthread_attr_t *__attr,
      int __inherit)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getscope (const pthread_attr_t *__restrict __attr,
      int *__restrict __scope)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setscope (pthread_attr_t *__attr, int __scope)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_getstackaddr (const pthread_attr_t *__restrict
          __attr, void **__restrict __stackaddr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2))) __attribute__ ((__deprecated__));





extern int pthread_attr_setstackaddr (pthread_attr_t *__attr,
          void *__stackaddr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__deprecated__));


extern int pthread_attr_getstacksize (const pthread_attr_t *__restrict
          __attr, size_t *__restrict __stacksize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int pthread_attr_setstacksize (pthread_attr_t *__attr,
          size_t __stacksize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getstack (const pthread_attr_t *__restrict __attr,
      void **__restrict __stackaddr,
      size_t *__restrict __stacksize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2, 3)));




extern int pthread_attr_setstack (pthread_attr_t *__attr, void *__stackaddr,
      size_t __stacksize) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int pthread_attr_setaffinity_np (pthread_attr_t *__attr,
     size_t __cpusetsize,
     const cpu_set_t *__cpuset)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 3)));



extern int pthread_attr_getaffinity_np (const pthread_attr_t *__attr,
     size_t __cpusetsize,
     cpu_set_t *__cpuset)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 3)));


extern int pthread_getattr_default_np (pthread_attr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_setattr_default_np (const pthread_attr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));




extern int pthread_getattr_np (pthread_t __th, pthread_attr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));







extern int pthread_setschedparam (pthread_t __target_thread, int __policy,
      const struct sched_param *__param)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3)));


extern int pthread_getschedparam (pthread_t __target_thread,
      int *__restrict __policy,
      struct sched_param *__restrict __param)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));


extern int pthread_setschedprio (pthread_t __target_thread, int __prio)
     __attribute__ ((__nothrow__ , __leaf__));




extern int pthread_getname_np (pthread_t __target_thread, char *__buf,
          size_t __buflen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));


extern int pthread_setname_np (pthread_t __target_thread, const char *__name)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));





extern int pthread_getconcurrency (void) __attribute__ ((__nothrow__ , __leaf__));


extern int pthread_setconcurrency (int __level) __attribute__ ((__nothrow__ , __leaf__));







extern int pthread_yield (void) __attribute__ ((__nothrow__ , __leaf__));




extern int pthread_setaffinity_np (pthread_t __th, size_t __cpusetsize,
       const cpu_set_t *__cpuset)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3)));


extern int pthread_getaffinity_np (pthread_t __th, size_t __cpusetsize,
       cpu_set_t *__cpuset)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3)));
extern int pthread_once (pthread_once_t *__once_control,
    void (*__init_routine) (void)) __attribute__ ((__nonnull__ (1, 2)));
extern int pthread_setcancelstate (int __state, int *__oldstate);



extern int pthread_setcanceltype (int __type, int *__oldtype);


extern int pthread_cancel (pthread_t __th);




extern void pthread_testcancel (void);




typedef struct
{
  struct
  {
    __jmp_buf __cancel_jmp_buf;
    int __mask_was_saved;
  } __cancel_jmp_buf[1];
  void *__pad[4];
} __pthread_unwind_buf_t __attribute__ ((__aligned__));
struct __pthread_cleanup_frame
{
  void (*__cancel_routine) (void *);
  void *__cancel_arg;
  int __do_it;
  int __cancel_type;
};
extern void __pthread_register_cancel (__pthread_unwind_buf_t *__buf)
     __attribute__ ((__regparm__ (1)));
extern void __pthread_unregister_cancel (__pthread_unwind_buf_t *__buf)
  __attribute__ ((__regparm__ (1)));
extern void __pthread_register_cancel_defer (__pthread_unwind_buf_t *__buf)
     __attribute__ ((__regparm__ (1)));
extern void __pthread_unregister_cancel_restore (__pthread_unwind_buf_t *__buf)
  __attribute__ ((__regparm__ (1)));



extern void __pthread_unwind_next (__pthread_unwind_buf_t *__buf)
     __attribute__ ((__regparm__ (1))) __attribute__ ((__noreturn__))

     __attribute__ ((__weak__))

     ;



struct __jmp_buf_tag;
extern int __sigsetjmp (struct __jmp_buf_tag *__env, int __savemask) __attribute__ ((__nothrow__));





extern int pthread_mutex_init (pthread_mutex_t *__mutex,
          const pthread_mutexattr_t *__mutexattr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutex_destroy (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutex_trylock (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutex_lock (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutex_timedlock (pthread_mutex_t *__restrict __mutex,
        const struct timespec *__restrict
        __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_mutex_unlock (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutex_getprioceiling (const pthread_mutex_t *
      __restrict __mutex,
      int *__restrict __prioceiling)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_mutex_setprioceiling (pthread_mutex_t *__restrict __mutex,
      int __prioceiling,
      int *__restrict __old_ceiling)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 3)));




extern int pthread_mutex_consistent (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern int pthread_mutex_consistent_np (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
extern int pthread_mutexattr_init (pthread_mutexattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutexattr_destroy (pthread_mutexattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutexattr_getpshared (const pthread_mutexattr_t *
      __restrict __attr,
      int *__restrict __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_mutexattr_setpshared (pthread_mutexattr_t *__attr,
      int __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutexattr_gettype (const pthread_mutexattr_t *__restrict
          __attr, int *__restrict __kind)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int pthread_mutexattr_settype (pthread_mutexattr_t *__attr, int __kind)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutexattr_getprotocol (const pthread_mutexattr_t *
       __restrict __attr,
       int *__restrict __protocol)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_mutexattr_setprotocol (pthread_mutexattr_t *__attr,
       int __protocol)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutexattr_getprioceiling (const pthread_mutexattr_t *
          __restrict __attr,
          int *__restrict __prioceiling)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_mutexattr_setprioceiling (pthread_mutexattr_t *__attr,
          int __prioceiling)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutexattr_getrobust (const pthread_mutexattr_t *__attr,
     int *__robustness)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int pthread_mutexattr_getrobust_np (const pthread_mutexattr_t *__attr,
        int *__robustness)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_mutexattr_setrobust (pthread_mutexattr_t *__attr,
     int __robustness)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern int pthread_mutexattr_setrobust_np (pthread_mutexattr_t *__attr,
        int __robustness)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
extern int pthread_rwlock_init (pthread_rwlock_t *__restrict __rwlock,
    const pthread_rwlockattr_t *__restrict
    __attr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_destroy (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_rdlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_tryrdlock (pthread_rwlock_t *__rwlock)
  __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_rwlock_timedrdlock (pthread_rwlock_t *__restrict __rwlock,
           const struct timespec *__restrict
           __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_rwlock_wrlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_trywrlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_rwlock_timedwrlock (pthread_rwlock_t *__restrict __rwlock,
           const struct timespec *__restrict
           __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_rwlock_unlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));





extern int pthread_rwlockattr_init (pthread_rwlockattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlockattr_destroy (pthread_rwlockattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlockattr_getpshared (const pthread_rwlockattr_t *
       __restrict __attr,
       int *__restrict __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_rwlockattr_setpshared (pthread_rwlockattr_t *__attr,
       int __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlockattr_getkind_np (const pthread_rwlockattr_t *
       __restrict __attr,
       int *__restrict __pref)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_rwlockattr_setkind_np (pthread_rwlockattr_t *__attr,
       int __pref) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







extern int pthread_cond_init (pthread_cond_t *__restrict __cond,
         const pthread_condattr_t *__restrict __cond_attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_cond_destroy (pthread_cond_t *__cond)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_cond_signal (pthread_cond_t *__cond)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_cond_broadcast (pthread_cond_t *__cond)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));






extern int pthread_cond_wait (pthread_cond_t *__restrict __cond,
         pthread_mutex_t *__restrict __mutex)
     __attribute__ ((__nonnull__ (1, 2)));
extern int pthread_cond_timedwait (pthread_cond_t *__restrict __cond,
       pthread_mutex_t *__restrict __mutex,
       const struct timespec *__restrict __abstime)
     __attribute__ ((__nonnull__ (1, 2, 3)));




extern int pthread_condattr_init (pthread_condattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_condattr_destroy (pthread_condattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_condattr_getpshared (const pthread_condattr_t *
     __restrict __attr,
     int *__restrict __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_condattr_setpshared (pthread_condattr_t *__attr,
     int __pshared) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_condattr_getclock (const pthread_condattr_t *
          __restrict __attr,
          __clockid_t *__restrict __clock_id)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_condattr_setclock (pthread_condattr_t *__attr,
          __clockid_t __clock_id)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
extern int pthread_spin_init (pthread_spinlock_t *__lock, int __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_destroy (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_lock (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_trylock (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_unlock (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));






extern int pthread_barrier_init (pthread_barrier_t *__restrict __barrier,
     const pthread_barrierattr_t *__restrict
     __attr, unsigned int __count)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrier_destroy (pthread_barrier_t *__barrier)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrier_wait (pthread_barrier_t *__barrier)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_barrierattr_init (pthread_barrierattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrierattr_destroy (pthread_barrierattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrierattr_getpshared (const pthread_barrierattr_t *
        __restrict __attr,
        int *__restrict __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_barrierattr_setpshared (pthread_barrierattr_t *__attr,
        int __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
extern int pthread_key_create (pthread_key_t *__key,
          void (*__destr_function) (void *))
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_key_delete (pthread_key_t __key) __attribute__ ((__nothrow__ , __leaf__));


extern void *pthread_getspecific (pthread_key_t __key) __attribute__ ((__nothrow__ , __leaf__));


extern int pthread_setspecific (pthread_key_t __key,
    const void *__pointer) __attribute__ ((__nothrow__ , __leaf__)) ;




extern int pthread_getcpuclockid (pthread_t __thread_id,
      __clockid_t *__clock_id)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
extern int pthread_atfork (void (*__prepare) (void),
      void (*__parent) (void),
      void (*__child) (void)) __attribute__ ((__nothrow__ , __leaf__));




extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) pthread_equal (pthread_t __thread1, pthread_t __thread2)
{
  return __thread1 == __thread2;
}









typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;




typedef __loff_t loff_t;



typedef __ino_t ino_t;






typedef __ino64_t ino64_t;




typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;





typedef __off_t off_t;






typedef __off64_t off64_t;
typedef __id_t id_t;




typedef __ssize_t ssize_t;





typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;
typedef __useconds_t useconds_t;



typedef __suseconds_t suseconds_t;








typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;
typedef int int8_t __attribute__ ((__mode__ (__QI__)));
typedef int int16_t __attribute__ ((__mode__ (__HI__)));
typedef int int32_t __attribute__ ((__mode__ (__SI__)));
typedef int int64_t __attribute__ ((__mode__ (__DI__)));


typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));


typedef int __sig_atomic_t;




typedef struct
  {
    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
  } __sigset_t;



typedef __sigset_t sigset_t;
typedef long int __fd_mask;
typedef struct
  {



    __fd_mask fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];





  } fd_set;






typedef __fd_mask fd_mask;

extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);





extern long int __fdelt_chk (long int __d);
extern long int __fdelt_warn (long int __d)
  __attribute__((__warning__ ("bit outside of fd_set selected")));







__extension__
extern unsigned int gnu_dev_major (unsigned long long int __dev)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__
extern unsigned int gnu_dev_minor (unsigned long long int __dev)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__
extern unsigned long long int gnu_dev_makedev (unsigned int __major,
            unsigned int __minor)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


__extension__ extern __inline __attribute__ ((__gnu_inline__)) __attribute__ ((__const__)) unsigned int
__attribute__ ((__nothrow__ , __leaf__)) gnu_dev_major (unsigned long long int __dev)
{
  return ((__dev >> 8) & 0xfff) | ((unsigned int) (__dev >> 32) & ~0xfff);
}

__extension__ extern __inline __attribute__ ((__gnu_inline__)) __attribute__ ((__const__)) unsigned int
__attribute__ ((__nothrow__ , __leaf__)) gnu_dev_minor (unsigned long long int __dev)
{
  return (__dev & 0xff) | ((unsigned int) (__dev >> 12) & ~0xff);
}

__extension__ extern __inline __attribute__ ((__gnu_inline__)) __attribute__ ((__const__)) unsigned long long int
__attribute__ ((__nothrow__ , __leaf__)) gnu_dev_makedev (unsigned int __major, unsigned int __minor)
{
  return ((__minor & 0xff) | ((__major & 0xfff) << 8)
   | (((unsigned long long int) (__minor & ~0xff)) << 12)
   | (((unsigned long long int) (__major & ~0xfff)) << 32));
}







typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
typedef __blkcnt64_t blkcnt64_t;
typedef __fsblkcnt64_t fsblkcnt64_t;
typedef __fsfilcnt64_t fsfilcnt64_t;







typedef union
{
  char __size[16];
  long int __align;
} sem_t;






extern int sem_init (sem_t *__sem, int __pshared, unsigned int __value)
     __attribute__ ((__nothrow__ , __leaf__));

extern int sem_destroy (sem_t *__sem) __attribute__ ((__nothrow__ , __leaf__));


extern sem_t *sem_open (const char *__name, int __oflag, ...) __attribute__ ((__nothrow__ , __leaf__));


extern int sem_close (sem_t *__sem) __attribute__ ((__nothrow__ , __leaf__));


extern int sem_unlink (const char *__name) __attribute__ ((__nothrow__ , __leaf__));





extern int sem_wait (sem_t *__sem);






extern int sem_timedwait (sem_t *__restrict __sem,
     const struct timespec *__restrict __abstime);



extern int sem_trywait (sem_t *__sem) __attribute__ ((__nothrow__));


extern int sem_post (sem_t *__sem) __attribute__ ((__nothrow__));


extern int sem_getvalue (sem_t *__restrict __sem, int *__restrict __sval)
     __attribute__ ((__nothrow__ , __leaf__));







struct _IO_FILE;



typedef struct _IO_FILE FILE;





typedef struct _IO_FILE __FILE;




typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
typedef __builtin_va_list __gnuc_va_list;
struct _IO_jump_t; struct _IO_FILE;





typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
  __off64_t _offset;







  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;

  size_t __pad5;
  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);




typedef __io_read_fn cookie_read_function_t;
typedef __io_write_fn cookie_write_function_t;
typedef __io_seek_fn cookie_seek_function_t;
typedef __io_close_fn cookie_close_function_t;


typedef struct
{
  __io_read_fn *read;
  __io_write_fn *write;
  __io_seek_fn *seek;
  __io_close_fn *close;
} _IO_cookie_io_functions_t;
typedef _IO_cookie_io_functions_t cookie_io_functions_t;

struct _IO_cookie_file;


extern void _IO_cookie_init (struct _IO_cookie_file *__cfile, int __read_write,
        void *__cookie, _IO_cookie_io_functions_t __fns);







extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));




typedef __gnuc_va_list va_list;


typedef _G_fpos_t fpos_t;





typedef _G_fpos64_t fpos64_t;



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));




extern int renameat (int __oldfd, const char *__old, int __newfd,
       const char *__new) __attribute__ ((__nothrow__ , __leaf__));








extern FILE *tmpfile (void) __attribute__ ((__warn_unused_result__));
extern FILE *tmpfile64 (void) __attribute__ ((__warn_unused_result__));



extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));





extern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern char *tempnam (const char *__dir, const char *__pfx)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));








extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

extern int fflush_unlocked (FILE *__stream);
extern int fcloseall (void);









extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) __attribute__ ((__warn_unused_result__));




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));


extern FILE *fopen64 (const char *__restrict __filename,
        const char *__restrict __modes) __attribute__ ((__warn_unused_result__));
extern FILE *freopen64 (const char *__restrict __filename,
   const char *__restrict __modes,
   FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));




extern FILE *fdopen (int __fd, const char *__modes) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));





extern FILE *fopencookie (void *__restrict __magic_cookie,
     const char *__restrict __modes,
     _IO_cookie_io_functions_t __io_funcs) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));






extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));





extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) __attribute__ ((__nothrow__ , __leaf__));


extern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));








extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));






extern int vasprintf (char **__restrict __ptr, const char *__restrict __f,
        __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 0))) __attribute__ ((__warn_unused_result__));
extern int __asprintf (char **__restrict __ptr,
         const char *__restrict __fmt, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3))) __attribute__ ((__warn_unused_result__));
extern int asprintf (char **__restrict __ptr,
       const char *__restrict __fmt, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3))) __attribute__ ((__warn_unused_result__));




extern int vdprintf (int __fd, const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));








extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) __attribute__ ((__warn_unused_result__));




extern int scanf (const char *__restrict __format, ...) __attribute__ ((__warn_unused_result__));

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) __attribute__ ((__warn_unused_result__));





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) __attribute__ ((__warn_unused_result__));


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
extern int fgetc_unlocked (FILE *__stream);











extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);








extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     __attribute__ ((__warn_unused_result__));

extern char *fgets_unlocked (char *__restrict __s, int __n,
        FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern __ssize_t __getdelim (char **__restrict __lineptr,
          size_t *__restrict __n, int __delimiter,
          FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern __ssize_t getdelim (char **__restrict __lineptr,
        size_t *__restrict __n, int __delimiter,
        FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));







extern __ssize_t getline (char **__restrict __lineptr,
       size_t *__restrict __n,
       FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));








extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

extern int fputs_unlocked (const char *__restrict __s,
      FILE *__restrict __stream);
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);








extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) __attribute__ ((__warn_unused_result__));




extern void rewind (FILE *__stream);

extern int fseeko (FILE *__stream, __off_t __off, int __whence);




extern __off_t ftello (FILE *__stream) __attribute__ ((__warn_unused_result__));






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);



extern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);
extern __off64_t ftello64 (FILE *__stream) __attribute__ ((__warn_unused_result__));
extern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);
extern int fsetpos64 (FILE *__stream, const fpos64_t *__pos);




extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
extern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));








extern void perror (const char *__s);






extern int sys_nerr;
extern const char *const sys_errlist[];


extern int _sys_nerr;
extern const char *const _sys_errlist[];




extern int fileno (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern FILE *popen (const char *__command, const char *__modes) __attribute__ ((__warn_unused_result__));





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) __attribute__ ((__nothrow__ , __leaf__));





extern char *cuserid (char *__s);




struct obstack;


extern int obstack_printf (struct obstack *__restrict __obstack,
      const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3)));
extern int obstack_vprintf (struct obstack *__restrict __obstack,
       const char *__restrict __format,
       __gnuc_va_list __args)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 0)));







extern void flockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));



extern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));


extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return _IO_getc (stdin);
}




extern __inline __attribute__ ((__gnu_inline__)) int
fgetc_unlocked (FILE *__fp)
{
  return (__builtin_expect (((__fp)->_IO_read_ptr >= (__fp)->_IO_read_end), 0) ? __uflow (__fp) : *(unsigned char *) (__fp)->_IO_read_ptr++);
}





extern __inline __attribute__ ((__gnu_inline__)) int
getc_unlocked (FILE *__fp)
{
  return (__builtin_expect (((__fp)->_IO_read_ptr >= (__fp)->_IO_read_end), 0) ? __uflow (__fp) : *(unsigned char *) (__fp)->_IO_read_ptr++);
}


extern __inline __attribute__ ((__gnu_inline__)) int
getchar_unlocked (void)
{
  return (__builtin_expect (((stdin)->_IO_read_ptr >= (stdin)->_IO_read_end), 0) ? __uflow (stdin) : *(unsigned char *) (stdin)->_IO_read_ptr++);
}




extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return _IO_putc (__c, stdout);
}




extern __inline __attribute__ ((__gnu_inline__)) int
fputc_unlocked (int __c, FILE *__stream)
{
  return (__builtin_expect (((__stream)->_IO_write_ptr >= (__stream)->_IO_write_end), 0) ? __overflow (__stream, (unsigned char) (__c)) : (unsigned char) (*(__stream)->_IO_write_ptr++ = (__c)));
}





extern __inline __attribute__ ((__gnu_inline__)) int
putc_unlocked (int __c, FILE *__stream)
{
  return (__builtin_expect (((__stream)->_IO_write_ptr >= (__stream)->_IO_write_end), 0) ? __overflow (__stream, (unsigned char) (__c)) : (unsigned char) (*(__stream)->_IO_write_ptr++ = (__c)));
}


extern __inline __attribute__ ((__gnu_inline__)) int
putchar_unlocked (int __c)
{
  return (__builtin_expect (((stdout)->_IO_write_ptr >= (stdout)->_IO_write_end), 0) ? __overflow (stdout, (unsigned char) (__c)) : (unsigned char) (*(stdout)->_IO_write_ptr++ = (__c)));
}





extern __inline __attribute__ ((__gnu_inline__)) __ssize_t
getline (char **__lineptr, size_t *__n, FILE *__stream)
{
  return __getdelim (__lineptr, __n, '\n', __stream);
}





extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) feof_unlocked (FILE *__stream)
{
  return (((__stream)->_flags & 0x10) != 0);
}


extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) ferror_unlocked (FILE *__stream)
{
  return (((__stream)->_flags & 0x20) != 0);
}


extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
      const char *__restrict __format,
      __gnuc_va_list __ap) __attribute__ ((__nothrow__ , __leaf__));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) sprintf (char *__restrict __s, const char *__restrict __fmt, ...)
{
  return __builtin___sprintf_chk (__s, 2 - 1,
      __builtin_object_size (__s, 2 > 1), __fmt, __builtin_va_arg_pack ());
}






extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) vsprintf (char *__restrict __s, const char *__restrict __fmt, __gnuc_va_list __ap)

{
  return __builtin___vsprintf_chk (__s, 2 - 1,
       __builtin_object_size (__s, 2 > 1), __fmt, __ap);
}



extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
      size_t __slen, const char *__restrict __format,
      ...) __attribute__ ((__nothrow__ , __leaf__));
extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
       size_t __slen, const char *__restrict __format,
       __gnuc_va_list __ap) __attribute__ ((__nothrow__ , __leaf__));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) snprintf (char *__restrict __s, size_t __n, const char *__restrict __fmt, ...)

{
  return __builtin___snprintf_chk (__s, __n, 2 - 1,
       __builtin_object_size (__s, 2 > 1), __fmt, __builtin_va_arg_pack ());
}






extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) vsnprintf (char *__restrict __s, size_t __n, const char *__restrict __fmt, __gnuc_va_list __ap)

{
  return __builtin___vsnprintf_chk (__s, __n, 2 - 1,
        __builtin_object_size (__s, 2 > 1), __fmt, __ap);
}





extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
     const char *__restrict __format, ...);
extern int __printf_chk (int __flag, const char *__restrict __format, ...);
extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
      const char *__restrict __format, __gnuc_va_list __ap);
extern int __vprintf_chk (int __flag, const char *__restrict __format,
     __gnuc_va_list __ap);


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
{
  return __fprintf_chk (__stream, 2 - 1, __fmt,
   __builtin_va_arg_pack ());
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
printf (const char *__restrict __fmt, ...)
{
  return __printf_chk (2 - 1, __fmt, __builtin_va_arg_pack ());
}







extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __ap)
{

  return __vfprintf_chk (stdout, 2 - 1, __fmt, __ap);



}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
vfprintf (FILE *__restrict __stream,
   const char *__restrict __fmt, __gnuc_va_list __ap)
{
  return __vfprintf_chk (__stream, 2 - 1, __fmt, __ap);
}


extern int __dprintf_chk (int __fd, int __flag, const char *__restrict __fmt,
     ...) __attribute__ ((__format__ (__printf__, 3, 4)));
extern int __vdprintf_chk (int __fd, int __flag,
      const char *__restrict __fmt, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 3, 0)));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
dprintf (int __fd, const char *__restrict __fmt, ...)
{
  return __dprintf_chk (__fd, 2 - 1, __fmt,
   __builtin_va_arg_pack ());
}





extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
vdprintf (int __fd, const char *__restrict __fmt, __gnuc_va_list __ap)
{
  return __vdprintf_chk (__fd, 2 - 1, __fmt, __ap);
}




extern int __asprintf_chk (char **__restrict __ptr, int __flag,
      const char *__restrict __fmt, ...)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__printf__, 3, 4))) __attribute__ ((__warn_unused_result__));
extern int __vasprintf_chk (char **__restrict __ptr, int __flag,
       const char *__restrict __fmt, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__printf__, 3, 0))) __attribute__ ((__warn_unused_result__));
extern int __obstack_printf_chk (struct obstack *__restrict __obstack,
     int __flag, const char *__restrict __format,
     ...)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__printf__, 3, 4)));
extern int __obstack_vprintf_chk (struct obstack *__restrict __obstack,
      int __flag,
      const char *__restrict __format,
      __gnuc_va_list __args)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__printf__, 3, 0)));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) asprintf (char **__restrict __ptr, const char *__restrict __fmt, ...)
{
  return __asprintf_chk (__ptr, 2 - 1, __fmt,
    __builtin_va_arg_pack ());
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) __asprintf (char **__restrict __ptr, const char *__restrict __fmt, ...)

{
  return __asprintf_chk (__ptr, 2 - 1, __fmt,
    __builtin_va_arg_pack ());
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) obstack_printf (struct obstack *__restrict __obstack, const char *__restrict __fmt, ...)

{
  return __obstack_printf_chk (__obstack, 2 - 1, __fmt,
          __builtin_va_arg_pack ());
}
extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) vasprintf (char **__restrict __ptr, const char *__restrict __fmt, __gnuc_va_list __ap)

{
  return __vasprintf_chk (__ptr, 2 - 1, __fmt, __ap);
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) obstack_vprintf (struct obstack *__restrict __obstack, const char *__restrict __fmt, __gnuc_va_list __ap)

{
  return __obstack_vprintf_chk (__obstack, 2 - 1, __fmt,
    __ap);
}
extern char *__fgets_chk (char *__restrict __s, size_t __size, int __n,
     FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern char *__fgets_alias (char *__restrict __s, int __n, FILE *__restrict __stream) __asm__ ("" "fgets")

                                        __attribute__ ((__warn_unused_result__));
extern char *__fgets_chk_warn (char *__restrict __s, size_t __size, int __n, FILE *__restrict __stream) __asm__ ("" "__fgets_chk")


     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("fgets called with bigger size than length " "of destination buffer")))
                                 ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) char *
fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
{
  if (__builtin_object_size (__s, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__n) || __n <= 0)
 return __fgets_chk (__s, __builtin_object_size (__s, 2 > 1), __n, __stream);

      if ((size_t) __n > __builtin_object_size (__s, 2 > 1))
 return __fgets_chk_warn (__s, __builtin_object_size (__s, 2 > 1), __n, __stream);
    }
  return __fgets_alias (__s, __n, __stream);
}

extern size_t __fread_chk (void *__restrict __ptr, size_t __ptrlen,
      size_t __size, size_t __n,
      FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern size_t __fread_alias (void *__restrict __ptr, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "fread")


            __attribute__ ((__warn_unused_result__));
extern size_t __fread_chk_warn (void *__restrict __ptr, size_t __ptrlen, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "__fread_chk")




     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("fread called with bigger size * nmemb than length " "of destination buffer")))
                                 ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) size_t
fread (void *__restrict __ptr, size_t __size, size_t __n,
       FILE *__restrict __stream)
{
  if (__builtin_object_size (__ptr, 0) != (size_t) -1)
    {
      if (!__builtin_constant_p (__size)
   || !__builtin_constant_p (__n)
   || (__size | __n) >= (((size_t) 1) << (8 * sizeof (size_t) / 2)))
 return __fread_chk (__ptr, __builtin_object_size (__ptr, 0), __size, __n, __stream);

      if (__size * __n > __builtin_object_size (__ptr, 0))
 return __fread_chk_warn (__ptr, __builtin_object_size (__ptr, 0), __size, __n, __stream);
    }
  return __fread_alias (__ptr, __size, __n, __stream);
}


extern char *__fgets_unlocked_chk (char *__restrict __s, size_t __size,
       int __n, FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern char *__fgets_unlocked_alias (char *__restrict __s, int __n, FILE *__restrict __stream) __asm__ ("" "fgets_unlocked")

                                                 __attribute__ ((__warn_unused_result__));
extern char *__fgets_unlocked_chk_warn (char *__restrict __s, size_t __size, int __n, FILE *__restrict __stream) __asm__ ("" "__fgets_unlocked_chk")


     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("fgets_unlocked called with bigger size than length " "of destination buffer")))
                                 ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) char *
fgets_unlocked (char *__restrict __s, int __n, FILE *__restrict __stream)
{
  if (__builtin_object_size (__s, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__n) || __n <= 0)
 return __fgets_unlocked_chk (__s, __builtin_object_size (__s, 2 > 1), __n, __stream);

      if ((size_t) __n > __builtin_object_size (__s, 2 > 1))
 return __fgets_unlocked_chk_warn (__s, __builtin_object_size (__s, 2 > 1), __n, __stream);
    }
  return __fgets_unlocked_alias (__s, __n, __stream);
}




extern size_t __fread_unlocked_chk (void *__restrict __ptr, size_t __ptrlen,
        size_t __size, size_t __n,
        FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern size_t __fread_unlocked_alias (void *__restrict __ptr, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "fread_unlocked")


                     __attribute__ ((__warn_unused_result__));
extern size_t __fread_unlocked_chk_warn (void *__restrict __ptr, size_t __ptrlen, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "__fread_unlocked_chk")




     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("fread_unlocked called with bigger size * nmemb than " "length of destination buffer")))
                                        ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) size_t
fread_unlocked (void *__restrict __ptr, size_t __size, size_t __n,
  FILE *__restrict __stream)
{
  if (__builtin_object_size (__ptr, 0) != (size_t) -1)
    {
      if (!__builtin_constant_p (__size)
   || !__builtin_constant_p (__n)
   || (__size | __n) >= (((size_t) 1) << (8 * sizeof (size_t) / 2)))
 return __fread_unlocked_chk (__ptr, __builtin_object_size (__ptr, 0), __size, __n,
         __stream);

      if (__size * __n > __builtin_object_size (__ptr, 0))
 return __fread_unlocked_chk_warn (__ptr, __builtin_object_size (__ptr, 0), __size, __n,
       __stream);
    }


  if (__builtin_constant_p (__size)
      && __builtin_constant_p (__n)
      && (__size | __n) < (((size_t) 1) << (8 * sizeof (size_t) / 2))
      && __size * __n <= 8)
    {
      size_t __cnt = __size * __n;
      char *__cptr = (char *) __ptr;
      if (__cnt == 0)
 return 0;

      for (; __cnt > 0; --__cnt)
 {
   int __c = (__builtin_expect (((__stream)->_IO_read_ptr >= (__stream)->_IO_read_end), 0) ? __uflow (__stream) : *(unsigned char *) (__stream)->_IO_read_ptr++);
   if (__c == 
             (-1)
                )
     break;
   *__cptr++ = __c;
 }
      return (__cptr - (char *) __ptr) / __size;
    }

  return __fread_unlocked_alias (__ptr, __size, __n, __stream);
}





















extern void *memcpy (void *__restrict __dest, const void *__restrict __src,
       size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern void *memmove (void *__dest, const void *__src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));






extern void *memccpy (void *__restrict __dest, const void *__restrict __src,
        int __c, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int memcmp (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
extern void *memchr (const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


extern void *rawmemchr (const void *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern void *memrchr (const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));






extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strcat (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncat (char *__restrict __dest, const char *__restrict __src,
        size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern int strncmp (const char *__s1, const char *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcoll (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern size_t strxfrm (char *__restrict __dest,
         const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int strcoll_l (const char *__s1, const char *__s2, __locale_t __l)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));

extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
    __locale_t __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));




extern char *strdup (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));






extern char *strndup (const char *__string, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));

extern char *strchr (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern char *strrchr (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


extern char *strchrnul (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));






extern size_t strcspn (const char *__s, const char *__reject)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern size_t strspn (const char *__s, const char *__accept)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *strpbrk (const char *__s, const char *__accept)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *strstr (const char *__haystack, const char *__needle)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strtok (char *__restrict __s, const char *__restrict __delim)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));




extern char *__strtok_r (char *__restrict __s,
    const char *__restrict __delim,
    char **__restrict __save_ptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, const char *__restrict __delim,
         char **__restrict __save_ptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
extern char *strcasestr (const char *__haystack, const char *__needle)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));







extern void *memmem (const void *__haystack, size_t __haystacklen,
       const void *__needle, size_t __needlelen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 3)));



extern void *__mempcpy (void *__restrict __dest,
   const void *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern void *mempcpy (void *__restrict __dest,
        const void *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern size_t strlen (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern size_t strnlen (const char *__string, size_t __maxlen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern char *strerror (int __errnum) __attribute__ ((__nothrow__ , __leaf__));

extern char *strerror_r (int __errnum, char *__buf, size_t __buflen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2))) __attribute__ ((__warn_unused_result__));





extern char *strerror_l (int __errnum, __locale_t __l) __attribute__ ((__nothrow__ , __leaf__));





extern void __bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern void bcopy (const void *__src, void *__dest, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern void bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int bcmp (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *index (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern char *rindex (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




extern int ffs (int __i) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




extern int ffsl (long int __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__ extern int ffsll (long long int __ll)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern int strcasecmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));





extern int strcasecmp_l (const char *__s1, const char *__s2,
    __locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));

extern int strncasecmp_l (const char *__s1, const char *__s2,
     size_t __n, __locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 4)));





extern char *strsep (char **__restrict __stringp,
       const char *__restrict __delim)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strsignal (int __sig) __attribute__ ((__nothrow__ , __leaf__));


extern char *__stpcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern char *__stpncpy (char *__restrict __dest,
   const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int strverscmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strfry (char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern void *memfrob (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
extern char *basename (const char *__filename) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern void *__rawmemchr (const void *__s, int __c);
extern __inline __attribute__ ((__gnu_inline__)) char *__strtok_r_1c (char *__s, char __sep, char **__nextp);
extern __inline __attribute__ ((__gnu_inline__)) char *
__strtok_r_1c (char *__s, char __sep, char **__nextp)
{
  char *__result;
  if (__s == ((void *)0))
    __s = *__nextp;
  while (*__s == __sep)
    ++__s;
  __result = ((void *)0);
  if (*__s != '\0')
    {
      __result = __s++;
      while (*__s != '\0')
 if (*__s++ == __sep)
   {
     __s[-1] = '\0';
     break;
   }
    }
  *__nextp = __s;
  return __result;
}
extern char *__strsep_g (char **__stringp, const char *__delim);
extern __inline __attribute__ ((__gnu_inline__)) char *__strsep_1c (char **__s, char __reject);
extern __inline __attribute__ ((__gnu_inline__)) char *
__strsep_1c (char **__s, char __reject)
{
  char *__retval = *__s;
  if (__retval != ((void *)0) && (*__s = (__extension__ (__builtin_constant_p (__reject) && !__builtin_constant_p (__retval) && (__reject) == '\0' ? (char *) __rawmemchr (__retval, __reject) : __builtin_strchr (__retval, __reject)))) != ((void *)0))
    *(*__s)++ = '\0';
  return __retval;
}

extern __inline __attribute__ ((__gnu_inline__)) char *__strsep_2c (char **__s, char __reject1, char __reject2);
extern __inline __attribute__ ((__gnu_inline__)) char *
__strsep_2c (char **__s, char __reject1, char __reject2)
{
  char *__retval = *__s;
  if (__retval != ((void *)0))
    {
      char *__cp = __retval;
      while (1)
 {
   if (*__cp == '\0')
     {
       __cp = ((void *)0);
   break;
     }
   if (*__cp == __reject1 || *__cp == __reject2)
     {
       *__cp++ = '\0';
       break;
     }
   ++__cp;
 }
      *__s = __cp;
    }
  return __retval;
}

extern __inline __attribute__ ((__gnu_inline__)) char *__strsep_3c (char **__s, char __reject1, char __reject2,
       char __reject3);
extern __inline __attribute__ ((__gnu_inline__)) char *
__strsep_3c (char **__s, char __reject1, char __reject2, char __reject3)
{
  char *__retval = *__s;
  if (__retval != ((void *)0))
    {
      char *__cp = __retval;
      while (1)
 {
   if (*__cp == '\0')
     {
       __cp = ((void *)0);
   break;
     }
   if (*__cp == __reject1 || *__cp == __reject2 || *__cp == __reject3)
     {
       *__cp++ = '\0';
       break;
     }
   ++__cp;
 }
      *__s = __cp;
    }
  return __retval;
}




extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));






extern char *__strdup (const char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__));
extern char *__strndup (const char *__string, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__));




extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
__attribute__ ((__nothrow__ , __leaf__)) memcpy (void *__restrict __dest, const void *__restrict __src, size_t __len)

{
  return __builtin___memcpy_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
__attribute__ ((__nothrow__ , __leaf__)) memmove (void *__dest, const void *__src, size_t __len)
{
  return __builtin___memmove_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
__attribute__ ((__nothrow__ , __leaf__)) mempcpy (void *__restrict __dest, const void *__restrict __src, size_t __len)

{
  return __builtin___mempcpy_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
}
extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
__attribute__ ((__nothrow__ , __leaf__)) memset (void *__dest, int __ch, size_t __len)
{
  return __builtin___memset_chk (__dest, __ch, __len, __builtin_object_size (__dest, 0));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void
__attribute__ ((__nothrow__ , __leaf__)) bcopy (const void *__src, void *__dest, size_t __len)
{
  (void) __builtin___memmove_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void
__attribute__ ((__nothrow__ , __leaf__)) bzero (void *__dest, size_t __len)
{
  (void) __builtin___memset_chk (__dest, '\0', __len, __builtin_object_size (__dest, 0));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strcpy (char *__restrict __dest, const char *__restrict __src)
{
  return __builtin___strcpy_chk (__dest, __src, __builtin_object_size (__dest, 2 > 1));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) stpcpy (char *__restrict __dest, const char *__restrict __src)
{
  return __builtin___stpcpy_chk (__dest, __src, __builtin_object_size (__dest, 2 > 1));
}



extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strncpy (char *__restrict __dest, const char *__restrict __src, size_t __len)

{
  return __builtin___strncpy_chk (__dest, __src, __len, __builtin_object_size (__dest, 2 > 1));
}


extern char *__stpncpy_chk (char *__dest, const char *__src, size_t __n,
       size_t __destlen) __attribute__ ((__nothrow__ , __leaf__));
extern char *__stpncpy_alias (char *__dest, const char *__src, size_t __n) __asm__ ("" "stpncpy") __attribute__ ((__nothrow__ , __leaf__))
                                 ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) stpncpy (char *__dest, const char *__src, size_t __n)
{
  if (__builtin_object_size (__dest, 2 > 1) != (size_t) -1
      && (!__builtin_constant_p (__n) || __n > __builtin_object_size (__dest, 2 > 1)))
    return __stpncpy_chk (__dest, __src, __n, __builtin_object_size (__dest, 2 > 1));
  return __stpncpy_alias (__dest, __src, __n);
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strcat (char *__restrict __dest, const char *__restrict __src)
{
  return __builtin___strcat_chk (__dest, __src, __builtin_object_size (__dest, 2 > 1));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strncat (char *__restrict __dest, const char *__restrict __src, size_t __len)

{
  return __builtin___strncat_chk (__dest, __src, __len, __builtin_object_size (__dest, 2 > 1));
}







struct iovec
  {
    void *iov_base;
    size_t iov_len;
  };



extern ssize_t process_vm_readv (pid_t __pid, const struct iovec *__lvec,
     unsigned long int __liovcnt,
     const struct iovec *__rvec,
     unsigned long int __riovcnt,
     unsigned long int __flags)
  __attribute__ ((__nothrow__ , __leaf__));


extern ssize_t process_vm_writev (pid_t __pid, const struct iovec *__lvec,
      unsigned long int __liovcnt,
      const struct iovec *__rvec,
      unsigned long int __riovcnt,
      unsigned long int __flags)
  __attribute__ ((__nothrow__ , __leaf__));


extern ssize_t readv (int __fd, const struct iovec *__iovec, int __count)
  __attribute__ ((__warn_unused_result__));
extern ssize_t writev (int __fd, const struct iovec *__iovec, int __count)
  __attribute__ ((__warn_unused_result__));
extern ssize_t preadv (int __fd, const struct iovec *__iovec, int __count,
         __off_t __offset) __attribute__ ((__warn_unused_result__));
extern ssize_t pwritev (int __fd, const struct iovec *__iovec, int __count,
   __off_t __offset) __attribute__ ((__warn_unused_result__));
extern ssize_t preadv64 (int __fd, const struct iovec *__iovec, int __count,
    __off64_t __offset) __attribute__ ((__warn_unused_result__));
extern ssize_t pwritev64 (int __fd, const struct iovec *__iovec, int __count,
     __off64_t __offset) __attribute__ ((__warn_unused_result__));


















typedef __socklen_t socklen_t;




enum __socket_type
{
  SOCK_STREAM = 1,


  SOCK_DGRAM = 2,


  SOCK_RAW = 3,

  SOCK_RDM = 4,

  SOCK_SEQPACKET = 5,


  SOCK_DCCP = 6,

  SOCK_PACKET = 10,







  SOCK_CLOEXEC = 02000000,


  SOCK_NONBLOCK = 00004000


};
typedef unsigned short int sa_family_t;


struct sockaddr
  {
    sa_family_t sa_family;
    char sa_data[14];
  };
struct sockaddr_storage
  {
    sa_family_t ss_family;
    char __ss_padding[(128 - (sizeof (unsigned short int)) - sizeof (unsigned long int))];
    unsigned long int __ss_align;
  };



enum
  {
    MSG_OOB = 0x01,

    MSG_PEEK = 0x02,

    MSG_DONTROUTE = 0x04,



    MSG_TRYHARD = MSG_DONTROUTE,


    MSG_CTRUNC = 0x08,

    MSG_PROXY = 0x10,

    MSG_TRUNC = 0x20,

    MSG_DONTWAIT = 0x40,

    MSG_EOR = 0x80,

    MSG_WAITALL = 0x100,

    MSG_FIN = 0x200,

    MSG_SYN = 0x400,

    MSG_CONFIRM = 0x800,

    MSG_RST = 0x1000,

    MSG_ERRQUEUE = 0x2000,

    MSG_NOSIGNAL = 0x4000,

    MSG_MORE = 0x8000,

    MSG_WAITFORONE = 0x10000,

    MSG_BATCH = 0x40000,

    MSG_FASTOPEN = 0x20000000,


    MSG_CMSG_CLOEXEC = 0x40000000



  };




struct msghdr
  {
    void *msg_name;
    socklen_t msg_namelen;

    struct iovec *msg_iov;
    size_t msg_iovlen;

    void *msg_control;
    size_t msg_controllen;




    int msg_flags;
  };


struct cmsghdr
  {
    size_t cmsg_len;




    int cmsg_level;
    int cmsg_type;

    __extension__ unsigned char __cmsg_data [];

  };
extern struct cmsghdr *__cmsg_nxthdr (struct msghdr *__mhdr,
          struct cmsghdr *__cmsg) __attribute__ ((__nothrow__ , __leaf__));




extern __inline __attribute__ ((__gnu_inline__)) struct cmsghdr *
__attribute__ ((__nothrow__ , __leaf__)) __cmsg_nxthdr (struct msghdr *__mhdr, struct cmsghdr *__cmsg)
{
  if ((size_t) __cmsg->cmsg_len < sizeof (struct cmsghdr))

    return (struct cmsghdr *) 0;

  __cmsg = (struct cmsghdr *) ((unsigned char *) __cmsg
          + (((__cmsg->cmsg_len) + sizeof (size_t) - 1) & (size_t) ~(sizeof (size_t) - 1)));
  if ((unsigned char *) (__cmsg + 1) > ((unsigned char *) __mhdr->msg_control
     + __mhdr->msg_controllen)
      || ((unsigned char *) __cmsg + (((__cmsg->cmsg_len) + sizeof (size_t) - 1) & (size_t) ~(sizeof (size_t) - 1))
   > ((unsigned char *) __mhdr->msg_control + __mhdr->msg_controllen)))

    return (struct cmsghdr *) 0;
  return __cmsg;
}




enum
  {
    SCM_RIGHTS = 0x01


    , SCM_CREDENTIALS = 0x02


  };



struct ucred
{
  pid_t pid;
  uid_t uid;
  gid_t gid;
};



struct linger
  {
    int l_onoff;
    int l_linger;
  };




struct osockaddr
  {
    unsigned short int sa_family;
    unsigned char sa_data[14];
  };




enum
{
  SHUT_RD = 0,

  SHUT_WR,

  SHUT_RDWR

};
typedef union { struct sockaddr *__restrict __sockaddr__; struct sockaddr_at *__restrict __sockaddr_at__; struct sockaddr_ax25 *__restrict __sockaddr_ax25__; struct sockaddr_dl *__restrict __sockaddr_dl__; struct sockaddr_eon *__restrict __sockaddr_eon__; struct sockaddr_in *__restrict __sockaddr_in__; struct sockaddr_in6 *__restrict __sockaddr_in6__; struct sockaddr_inarp *__restrict __sockaddr_inarp__; struct sockaddr_ipx *__restrict __sockaddr_ipx__; struct sockaddr_iso *__restrict __sockaddr_iso__; struct sockaddr_ns *__restrict __sockaddr_ns__; struct sockaddr_un *__restrict __sockaddr_un__; struct sockaddr_x25 *__restrict __sockaddr_x25__;
       } __SOCKADDR_ARG __attribute__ ((__transparent_union__));


typedef union { const struct sockaddr *__restrict __sockaddr__; const struct sockaddr_at *__restrict __sockaddr_at__; const struct sockaddr_ax25 *__restrict __sockaddr_ax25__; const struct sockaddr_dl *__restrict __sockaddr_dl__; const struct sockaddr_eon *__restrict __sockaddr_eon__; const struct sockaddr_in *__restrict __sockaddr_in__; const struct sockaddr_in6 *__restrict __sockaddr_in6__; const struct sockaddr_inarp *__restrict __sockaddr_inarp__; const struct sockaddr_ipx *__restrict __sockaddr_ipx__; const struct sockaddr_iso *__restrict __sockaddr_iso__; const struct sockaddr_ns *__restrict __sockaddr_ns__; const struct sockaddr_un *__restrict __sockaddr_un__; const struct sockaddr_x25 *__restrict __sockaddr_x25__;
       } __CONST_SOCKADDR_ARG __attribute__ ((__transparent_union__));





struct mmsghdr
  {
    struct msghdr msg_hdr;
    unsigned int msg_len;

  };






extern int socket (int __domain, int __type, int __protocol) __attribute__ ((__nothrow__ , __leaf__));





extern int socketpair (int __domain, int __type, int __protocol,
         int __fds[2]) __attribute__ ((__nothrow__ , __leaf__));


extern int bind (int __fd, __CONST_SOCKADDR_ARG __addr, socklen_t __len)
     __attribute__ ((__nothrow__ , __leaf__));


extern int getsockname (int __fd, __SOCKADDR_ARG __addr,
   socklen_t *__restrict __len) __attribute__ ((__nothrow__ , __leaf__));
extern int connect (int __fd, __CONST_SOCKADDR_ARG __addr, socklen_t __len);



extern int getpeername (int __fd, __SOCKADDR_ARG __addr,
   socklen_t *__restrict __len) __attribute__ ((__nothrow__ , __leaf__));






extern ssize_t send (int __fd, const void *__buf, size_t __n, int __flags);






extern ssize_t recv (int __fd, void *__buf, size_t __n, int __flags);






extern ssize_t sendto (int __fd, const void *__buf, size_t __n,
         int __flags, __CONST_SOCKADDR_ARG __addr,
         socklen_t __addr_len);
extern ssize_t recvfrom (int __fd, void *__restrict __buf, size_t __n,
    int __flags, __SOCKADDR_ARG __addr,
    socklen_t *__restrict __addr_len);







extern ssize_t sendmsg (int __fd, const struct msghdr *__message,
   int __flags);







extern int sendmmsg (int __fd, struct mmsghdr *__vmessages,
       unsigned int __vlen, int __flags);







extern ssize_t recvmsg (int __fd, struct msghdr *__message, int __flags);







extern int recvmmsg (int __fd, struct mmsghdr *__vmessages,
       unsigned int __vlen, int __flags,
       struct timespec *__tmo);






extern int getsockopt (int __fd, int __level, int __optname,
         void *__restrict __optval,
         socklen_t *__restrict __optlen) __attribute__ ((__nothrow__ , __leaf__));




extern int setsockopt (int __fd, int __level, int __optname,
         const void *__optval, socklen_t __optlen) __attribute__ ((__nothrow__ , __leaf__));





extern int listen (int __fd, int __n) __attribute__ ((__nothrow__ , __leaf__));
extern int accept (int __fd, __SOCKADDR_ARG __addr,
     socklen_t *__restrict __addr_len);






extern int accept4 (int __fd, __SOCKADDR_ARG __addr,
      socklen_t *__restrict __addr_len, int __flags);
extern int shutdown (int __fd, int __how) __attribute__ ((__nothrow__ , __leaf__));




extern int sockatmark (int __fd) __attribute__ ((__nothrow__ , __leaf__));







extern int isfdtype (int __fd, int __fdtype) __attribute__ ((__nothrow__ , __leaf__));





extern ssize_t __recv_chk (int __fd, void *__buf, size_t __n, size_t __buflen,
      int __flags);
extern ssize_t __recv_alias (int __fd, void *__buf, size_t __n, int __flags) __asm__ ("" "recv")
                          ;
extern ssize_t __recv_chk_warn (int __fd, void *__buf, size_t __n, size_t __buflen, int __flags) __asm__ ("" "__recv_chk")


     __attribute__((__warning__ ("recv called with bigger length than size of destination " "buffer")))
            ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) ssize_t
recv (int __fd, void *__buf, size_t __n, int __flags)
{
  if (__builtin_object_size (__buf, 0) != (size_t) -1)
    {
      if (!__builtin_constant_p (__n))
 return __recv_chk (__fd, __buf, __n, __builtin_object_size (__buf, 0), __flags);

      if (__n > __builtin_object_size (__buf, 0))
 return __recv_chk_warn (__fd, __buf, __n, __builtin_object_size (__buf, 0), __flags);
    }
  return __recv_alias (__fd, __buf, __n, __flags);
}

extern ssize_t __recvfrom_chk (int __fd, void *__restrict __buf, size_t __n,
          size_t __buflen, int __flags,
          __SOCKADDR_ARG __addr,
          socklen_t *__restrict __addr_len);
extern ssize_t __recvfrom_alias (int __fd, void *__restrict __buf, size_t __n, int __flags, __SOCKADDR_ARG __addr, socklen_t *__restrict __addr_len) __asm__ ("" "recvfrom")


                                                   ;
extern ssize_t __recvfrom_chk_warn (int __fd, void *__restrict __buf, size_t __n, size_t __buflen, int __flags, __SOCKADDR_ARG __addr, socklen_t *__restrict __addr_len) __asm__ ("" "__recvfrom_chk")




     __attribute__((__warning__ ("recvfrom called with bigger length than size of " "destination buffer")))
                        ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) ssize_t
recvfrom (int __fd, void *__restrict __buf, size_t __n, int __flags,
   __SOCKADDR_ARG __addr, socklen_t *__restrict __addr_len)
{
  if (__builtin_object_size (__buf, 0) != (size_t) -1)
    {
      if (!__builtin_constant_p (__n))
 return __recvfrom_chk (__fd, __buf, __n, __builtin_object_size (__buf, 0), __flags,
          __addr, __addr_len);
      if (__n > __builtin_object_size (__buf, 0))
 return __recvfrom_chk_warn (__fd, __buf, __n, __builtin_object_size (__buf, 0), __flags,
        __addr, __addr_len);
    }
  return __recvfrom_alias (__fd, __buf, __n, __flags, __addr, __addr_len);
}



typedef unsigned char uint8_t;
typedef unsigned short int uint16_t;

typedef unsigned int uint32_t;





__extension__
typedef unsigned long long int uint64_t;






typedef signed char int_least8_t;
typedef short int int_least16_t;
typedef int int_least32_t;



__extension__
typedef long long int int_least64_t;



typedef unsigned char uint_least8_t;
typedef unsigned short int uint_least16_t;
typedef unsigned int uint_least32_t;



__extension__
typedef unsigned long long int uint_least64_t;






typedef signed char int_fast8_t;





typedef int int_fast16_t;
typedef int int_fast32_t;
__extension__
typedef long long int int_fast64_t;



typedef unsigned char uint_fast8_t;





typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
__extension__
typedef unsigned long long int uint_fast64_t;
typedef int intptr_t;


typedef unsigned int uintptr_t;
__extension__
typedef long long int intmax_t;
__extension__
typedef unsigned long long int uintmax_t;







typedef uint32_t in_addr_t;
struct in_addr
  {
    in_addr_t s_addr;
  };


struct ip_opts
  {
    struct in_addr ip_dst;
    char ip_opts[40];
  };


struct ip_mreqn
  {
    struct in_addr imr_multiaddr;
    struct in_addr imr_address;
    int imr_ifindex;
  };


struct in_pktinfo
  {
    int ipi_ifindex;
    struct in_addr ipi_spec_dst;
    struct in_addr ipi_addr;
  };


enum
  {
    IPPROTO_IP = 0,

    IPPROTO_ICMP = 1,

    IPPROTO_IGMP = 2,

    IPPROTO_IPIP = 4,

    IPPROTO_TCP = 6,

    IPPROTO_EGP = 8,

    IPPROTO_PUP = 12,

    IPPROTO_UDP = 17,

    IPPROTO_IDP = 22,

    IPPROTO_TP = 29,

    IPPROTO_DCCP = 33,

    IPPROTO_IPV6 = 41,

    IPPROTO_RSVP = 46,

    IPPROTO_GRE = 47,

    IPPROTO_ESP = 50,

    IPPROTO_AH = 51,

    IPPROTO_MTP = 92,

    IPPROTO_BEETPH = 94,

    IPPROTO_ENCAP = 98,

    IPPROTO_PIM = 103,

    IPPROTO_COMP = 108,

    IPPROTO_SCTP = 132,

    IPPROTO_UDPLITE = 136,

    IPPROTO_MPLS = 137,

    IPPROTO_RAW = 255,

    IPPROTO_MAX
  };





enum
  {
    IPPROTO_HOPOPTS = 0,

    IPPROTO_ROUTING = 43,

    IPPROTO_FRAGMENT = 44,

    IPPROTO_ICMPV6 = 58,

    IPPROTO_NONE = 59,

    IPPROTO_DSTOPTS = 60,

    IPPROTO_MH = 135

  };



typedef uint16_t in_port_t;


enum
  {
    IPPORT_ECHO = 7,
    IPPORT_DISCARD = 9,
    IPPORT_SYSTAT = 11,
    IPPORT_DAYTIME = 13,
    IPPORT_NETSTAT = 15,
    IPPORT_FTP = 21,
    IPPORT_TELNET = 23,
    IPPORT_SMTP = 25,
    IPPORT_TIMESERVER = 37,
    IPPORT_NAMESERVER = 42,
    IPPORT_WHOIS = 43,
    IPPORT_MTP = 57,

    IPPORT_TFTP = 69,
    IPPORT_RJE = 77,
    IPPORT_FINGER = 79,
    IPPORT_TTYLINK = 87,
    IPPORT_SUPDUP = 95,


    IPPORT_EXECSERVER = 512,
    IPPORT_LOGINSERVER = 513,
    IPPORT_CMDSERVER = 514,
    IPPORT_EFSSERVER = 520,


    IPPORT_BIFFUDP = 512,
    IPPORT_WHOSERVER = 513,
    IPPORT_ROUTESERVER = 520,


    IPPORT_RESERVED = 1024,


    IPPORT_USERRESERVED = 5000
  };
struct in6_addr
  {
    union
      {
 uint8_t __u6_addr8[16];

 uint16_t __u6_addr16[8];
 uint32_t __u6_addr32[4];

      } __in6_u;





  };


extern const struct in6_addr in6addr_any;
extern const struct in6_addr in6addr_loopback;
struct sockaddr_in
  {
    sa_family_t sin_family;
    in_port_t sin_port;
    struct in_addr sin_addr;


    unsigned char sin_zero[sizeof (struct sockaddr) -
      (sizeof (unsigned short int)) -
      sizeof (in_port_t) -
      sizeof (struct in_addr)];
  };



struct sockaddr_in6
  {
    sa_family_t sin6_family;
    in_port_t sin6_port;
    uint32_t sin6_flowinfo;
    struct in6_addr sin6_addr;
    uint32_t sin6_scope_id;
  };




struct ip_mreq
  {

    struct in_addr imr_multiaddr;


    struct in_addr imr_interface;
  };

struct ip_mreq_source
  {

    struct in_addr imr_multiaddr;


    struct in_addr imr_interface;


    struct in_addr imr_sourceaddr;
  };




struct ipv6_mreq
  {

    struct in6_addr ipv6mr_multiaddr;


    unsigned int ipv6mr_interface;
  };




struct group_req
  {

    uint32_t gr_interface;


    struct sockaddr_storage gr_group;
  };

struct group_source_req
  {

    uint32_t gsr_interface;


    struct sockaddr_storage gsr_group;


    struct sockaddr_storage gsr_source;
  };



struct ip_msfilter
  {

    struct in_addr imsf_multiaddr;


    struct in_addr imsf_interface;


    uint32_t imsf_fmode;


    uint32_t imsf_numsrc;

    struct in_addr imsf_slist[1];
  };





struct group_filter
  {

    uint32_t gf_interface;


    struct sockaddr_storage gf_group;


    uint32_t gf_fmode;


    uint32_t gf_numsrc;

    struct sockaddr_storage gf_slist[1];
};
extern uint32_t ntohl (uint32_t __netlong) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
extern uint16_t ntohs (uint16_t __netshort)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
extern uint32_t htonl (uint32_t __hostlong)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
extern uint16_t htons (uint16_t __hostshort)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




extern int bindresvport (int __sockfd, struct sockaddr_in *__sock_in) __attribute__ ((__nothrow__ , __leaf__));


extern int bindresvport6 (int __sockfd, struct sockaddr_in6 *__sock_in)
     __attribute__ ((__nothrow__ , __leaf__));
struct cmsghdr;



struct in6_pktinfo
  {
    struct in6_addr ipi6_addr;
    unsigned int ipi6_ifindex;
  };


struct ip6_mtuinfo
  {
    struct sockaddr_in6 ip6m_addr;
    uint32_t ip6m_mtu;
  };



extern int inet6_option_space (int __nbytes)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));
extern int inet6_option_init (void *__bp, struct cmsghdr **__cmsgp,
         int __type) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));
extern int inet6_option_append (struct cmsghdr *__cmsg,
    const uint8_t *__typep, int __multx,
    int __plusy) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));
extern uint8_t *inet6_option_alloc (struct cmsghdr *__cmsg, int __datalen,
        int __multx, int __plusy)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));
extern int inet6_option_next (const struct cmsghdr *__cmsg,
         uint8_t **__tptrp)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));
extern int inet6_option_find (const struct cmsghdr *__cmsg,
         uint8_t **__tptrp, int __type)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));



extern int inet6_opt_init (void *__extbuf, socklen_t __extlen) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_opt_append (void *__extbuf, socklen_t __extlen, int __offset,
        uint8_t __type, socklen_t __len, uint8_t __align,
        void **__databufp) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_opt_finish (void *__extbuf, socklen_t __extlen, int __offset)
     __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_opt_set_val (void *__databuf, int __offset, void *__val,
         socklen_t __vallen) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_opt_next (void *__extbuf, socklen_t __extlen, int __offset,
      uint8_t *__typep, socklen_t *__lenp,
      void **__databufp) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_opt_find (void *__extbuf, socklen_t __extlen, int __offset,
      uint8_t __type, socklen_t *__lenp,
      void **__databufp) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_opt_get_val (void *__databuf, int __offset, void *__val,
         socklen_t __vallen) __attribute__ ((__nothrow__ , __leaf__));



extern socklen_t inet6_rth_space (int __type, int __segments) __attribute__ ((__nothrow__ , __leaf__));
extern void *inet6_rth_init (void *__bp, socklen_t __bp_len, int __type,
        int __segments) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_rth_add (void *__bp, const struct in6_addr *__addr) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_rth_reverse (const void *__in, void *__out) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_rth_segments (const void *__bp) __attribute__ ((__nothrow__ , __leaf__));
extern struct in6_addr *inet6_rth_getaddr (const void *__bp, int __index)
     __attribute__ ((__nothrow__ , __leaf__));





extern int getipv4sourcefilter (int __s, struct in_addr __interface_addr,
    struct in_addr __group, uint32_t *__fmode,
    uint32_t *__numsrc, struct in_addr *__slist)
     __attribute__ ((__nothrow__ , __leaf__));


extern int setipv4sourcefilter (int __s, struct in_addr __interface_addr,
    struct in_addr __group, uint32_t __fmode,
    uint32_t __numsrc,
    const struct in_addr *__slist)
     __attribute__ ((__nothrow__ , __leaf__));



extern int getsourcefilter (int __s, uint32_t __interface_addr,
       const struct sockaddr *__group,
       socklen_t __grouplen, uint32_t *__fmode,
       uint32_t *__numsrc,
       struct sockaddr_storage *__slist) __attribute__ ((__nothrow__ , __leaf__));


extern int setsourcefilter (int __s, uint32_t __interface_addr,
       const struct sockaddr *__group,
       socklen_t __grouplen, uint32_t __fmode,
       uint32_t __numsrc,
       const struct sockaddr_storage *__slist) __attribute__ ((__nothrow__ , __leaf__));







typedef S8 Txt;

typedef U8 Ent;

typedef U8 Inst;

typedef struct entityId
{
   Ent ent;
   Inst inst;
} EntityId;



typedef S16 Elmnt;

typedef S16 ElmntInst1;

typedef S16 ElmntInst2;

typedef S16 ElmntInst3;

typedef struct elmntId
{
   Elmnt elmnt;
   ElmntInst1 elmntInst1;
   ElmntInst2 elmntInst2;
   ElmntInst3 elmntInst3;
} ElmntId;

typedef U8 Region;

typedef U8 Pool;

typedef U8 Prior;

typedef Prior Priority;

typedef U8 Route;

typedef U8 Data;

typedef U8 Selector;

typedef S16 Reason;

typedef U16 ProcId;

typedef U8 Event;

typedef U32 TranId;

typedef S16 IntNum;

typedef U16 TranNum;

typedef U16 CmIntfId;
typedef U16 CmIntfVer;
typedef struct pst
{
   ProcId dstProcId;
   ProcId srcProcId;

   Ent dstEnt;
   Inst dstInst;
   Ent srcEnt;
   Inst srcInst;

   Prior prior;
   Route route;
   Event event;
   Region region;

   Pool pool;
   Selector selector;
   CmIntfVer intfVer;
} Pst;



typedef struct systemId
{
   S16 mVer;
   S16 mRev;
   S16 bVer;
   S16 bRev;
   Txt *ptNmb;
} SystemId;





typedef struct protAddr
{
   U16 protType;
   U8 len;
   U8 preLen;
   U8 address[16];





}ProtAddr;

typedef struct protAddrTbl
{
   U8 count;
   ProtAddr addr[4];
}ProtAddrTbl;



typedef struct addrs
{
   U8 length;
   U8 strg[20];
} Addrs;

typedef struct shrtAddr
{
   U8 length;
   U8 strg[32];
} ShrtAddrs;

typedef struct lngAddr
{
   U8 length;
   U8 strg[64];
} LngAddrs;



typedef struct bndCfg
{
   Txt *usrId;
   U8 bufOwnshp;
   U8 flcTyp;
   U8 wdw;
   Ent ent;
   Inst inst;
   Region region;
   Pool pool;
   Prior prior;
   Route route;
   Addrs sapAdr;
   Selector selector;
} BndCfg;
typedef struct tskInit
{



   Ent ent;
   Inst inst;
   Region region;
   Pool pool;
   Reason reason;
   Bool cfgDone;
   Bool acnt;
   Bool usta;
   Bool trc;

   U32 dbgMask;
   Txt prntBuf[255];

   Txt *prntCirBuf;




   BndCfg lmBnd;
   ProcId procId;
   Pst lmPst;
} TskInit;


typedef S32 Cntr;

typedef U32 StsCntr;

typedef S16 LnkNmb;

typedef S8 VBit;

typedef S16 SuId;

typedef S16 SpId;

typedef S16 SuInstId;

typedef S16 SpInstId;

typedef U16 PortId;

typedef U8 Sapi;

typedef U8 Tei;

typedef U8 Ces;

typedef U32 Dlci;

typedef U16 CalRef;

typedef S16 Origin;

typedef U16 NwId;

typedef S16 Swtch;

typedef U8 Cause;

typedef U8 Dgn;

typedef S16 Action;

typedef S16 SeqS16;

typedef U16 SeqU16;

typedef S32 SeqS24;

typedef U32 SeqU24;

typedef U8 SetUpArb;

typedef U8 EvntType;

typedef U8 State;

typedef U8 Mode;

typedef S32 ConnId;

typedef U32 UConnId;

typedef U16 ProtId;

typedef U16 ChannelId;

typedef U8 Arr64U8[64];

typedef U16 Efa;

typedef U32 BitState;

typedef U8 CChanId;

typedef U16 MibOpCode;


typedef U16 MibStatus;

typedef U16 MibTblType;

typedef S32 MibReqId;

typedef U8 UstaType;
typedef S8 ChannelNo;
typedef S16 Baud;

typedef S16 PhysIntType;

typedef S16 PathConnType;

typedef S16 Parity;

typedef S16 CharLength;

typedef S16 StopBits;



typedef U32 IpAddr;

typedef U16 Port;

typedef U8 Cmd;

typedef U8 Flags;

typedef U8 Ttl;

typedef U8 Prec;

typedef U32 Window;

typedef U8 MtpStatus;

typedef U8 Credit;



typedef U32 CirId;

typedef U16 Cic;

typedef U32 SiInstId;



typedef U32 BiInstId;



typedef U32 TpInstId;



typedef U32 Oui;
typedef U16 Pid;
typedef U32 LlcId;
typedef struct octStrg
{
   S32 length;
   U8 val[132];
} OctStrg;

typedef struct tknHdr
{
   U8 pres;
   U8 spare1;
   U16 spare2;



} TknHdr;

typedef struct elmtHdr
{
   U8 pres;
   U8 actnInd;
   U16 compInd;



} ElmtHdr;



typedef struct tknU8
{
   U8 pres;
   U8 val;
   U16 spare1;



} TknU8;

typedef struct tknS8
{
   U8 pres;
   S8 val;
   U16 spare1;



} TknS8;

typedef struct tknU16
{
   U8 pres;
   U8 spare1;
   U16 val;



} TknU16;

typedef struct tknU32
{
   U8 pres;
   U8 spare1;
   U16 spare2;
   U32 val;
} TknU32;

typedef struct tknS32
{
   U8 pres;
   U8 spare1;
   U16 spare2;
   S32 val;
} TknS32;

typedef struct tknStrS
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(22 + 3) & 0xffc];

} TknStrS;

typedef struct tknStrM
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(32 + 3) & 0xffc];

} TknStrM;

typedef struct tknStr
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(132 + 3) & 0xffc];

} TknStr;

typedef struct tknStrE
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(255 + 3) & 0xffc];

} TknStrE;

typedef struct tknStrXL
{
   U16 len;
   U8 pres;
   U8 spare1;



   U8 *val;
} TknStrXL;

typedef struct tknStr4
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[4];

} TknStr4;

typedef struct tknStr12
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[12];

} TknStr12;

typedef struct tknStr32
{
   U8 pres;
   U8 len;
   U16 spare1;



   U8 val[32];
} TknStr32;

typedef struct tknStr64
{
   U8 pres;
   U8 len;
   U16 spare1;



   U8 val[64];
} TknStr64;

typedef struct tknStr132
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[132];

} TknStr132;

typedef struct tknStr256
{
   U8 pres;
   U8 len;
   U16 spare1;



   U8 val[256];
} TknStr256;

typedef struct tknOid
{
   U8 pres;
   U8 len;
   U16 spare1;






   U32 val[32];



} TknOid;

typedef struct tknBits
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(7 + 3) & 0xffc];

} TknBits;

typedef struct elmtStr
{
   ElmtHdr eh;
   TknStr str;
} ElmtStr;

typedef struct cdPtyNmb
{
   ElmtHdr eh;
   TknU8 nmbPlanId;
   TknU8 typeNmb0;



   TknStrS nmbDigits;

} CdPtyNmb;

typedef struct redirNmb
{
   ElmtHdr eh;
   TknU8 nmbPlanId;
   TknU8 typeNmb;
   TknU8 screenInd;
   TknU8 presInd;
   TknU8 rsnRedirect;
   TknStrS nmbDigits;
} RedirNmb;

typedef struct srvClass
{
   U8 type;
   union
   {
      struct
      {
         Bool cr;
         Bool de;
      } fr;
      struct
      {
         Prior prior;
      } ma;
   } s;
} SrvClass;



typedef struct _ip
{
   U8 ip_hl;
   Prec ip_tos;
   U16 ip_len;
   U16 ip_id;
   U16 ip_off;
   Ttl ip_ttl;
   U8 ip_p;
   U16 ip_sum;
   IpAddr ip_src;
   IpAddr ip_dst;
} Ip;
typedef struct smCfg
{
   Ent ent;
   Inst inst;
   Region region;
   Pool pool;
   Priority prior;
   Route route;
   Selector selector;
} SmCfg;

typedef struct mem
{
   Region region;
   Pool pool;
   U16 spare;
} Mem;

typedef Mem MemoryId;


typedef struct resp
{
   Selector selector;
   Priority prior;
   Route route;
   MemoryId mem;
}Resp;

typedef struct tds_header
{
   U16 msgLen;
   U8 msgType;
   U8 version;
   U16 seqNmb;
   EntityId entId;
   ElmntId elmId;

   TranId transId;
   Resp response;

} Header;

typedef struct tmrCfg
{
   Bool enb;
   U16 val;
} TmrCfg;

typedef struct asyncCfg
{
   StopBits stopBits;
   CharLength charLength;
   Parity rxParity;
   Parity txParity;
} AsyncCfg;




typedef struct dateTime
{
   U8 month;
   U8 day;
   U8 year;
   U8 hour;
   U8 min;
   U8 sec;
   U8 tenths;




} DateTime;


typedef U64 EpcTime;


typedef struct cmStatus
{
   U16 status;
   U16 reason;
}CmStatus;


typedef struct cmAlarm
{
   DateTime dt;
   U16 category;
   U16 event;
   U16 cause;
}CmAlarm;



typedef struct duration
{
   U8 days;
   U8 hours;
   U8 mins;
   U8 secs;
   U8 tenths;
} Duration;
typedef struct ssmsgb Buffer;
typedef struct tknBuf
{
   U8 pres;
   U8 spare1;
   U16 spare2;



   Buffer *val;
} TknBuf;



typedef U32 CmIpAddr;







extern S16 cmPkDateTime (DateTime *dateTime, Buffer *mBuf);
extern S16 cmPkDuration (Duration *duration, Buffer *mBuf);
extern S16 cmPkPtr (U32 ptr, Buffer *mBuf);
extern S16 cmPkEntityId (EntityId *entityId, Buffer *mBuf);
extern S16 cmPkElmntId (ElmntId *elmntId, Buffer *mBuf);
extern S16 cmPkMemoryId (MemoryId *memoryId, Buffer *mBuf);


extern S16 cmPkSystemId (SystemId *systemId, Buffer *mBuf);
extern S16 cmPkAddrs (Addrs *addrs, Buffer *mBuf);
extern S16 cmPkProtAddr (ProtAddr *protAddr, Buffer *mBuf);
extern S16 cmPkProtAddrTbl (ProtAddrTbl *protAddr, Buffer *mBuf);
extern S16 cmPkShrtAddrs (ShrtAddrs *addrs, Buffer *mBuf);
extern S16 cmPkAddrMask (U8 *mask, Buffer *mBuf);
extern S16 cmPkBndCfg (BndCfg *bndCfg, Buffer *mBuf);
extern S16 cmPkPst (Pst *pst, Buffer *mBuf);
extern S16 cmPkElmtHdr (ElmtHdr *m, Buffer *mBuf);
extern S16 cmPkTknU8 (TknU8 *tknU8, Buffer *mBuf);
extern S16 cmPkTknS8 (TknS8 *tknS8, Buffer *mBuf);
extern S16 cmPkTknU16 (TknU16 *tknU16, Buffer *mBuf);
extern S16 cmPkTknU32 (TknU32 *tknU32, Buffer *mBuf);
extern S16 cmPkTknStr (TknStr *tknStr, Buffer *mBuf);
extern S16 cmPkTknStrM (TknStrM *tknStr, Buffer *mBuf);
extern S16 cmPkTknStrS (TknStrS *tknStr, Buffer *mBuf);
extern S16 cmPkTknStrE (TknStrE *tknStr, Buffer *mBuf);

extern S16 cmPkTknStr4 (TknStr4 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr12 (TknStr12 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr32 (TknStr32 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr64 (TknStr64 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr132 (TknStr132 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr256 (TknStr256 *tknStr, Buffer *mBuf);

 S16 cmPkTknS32 (TknS32 *tknS32, Buffer *mBuf);
 S16 cmPkTknOid (TknOid *tknOid, Buffer *mBuf);
 S16 cmPkTknBuf (TknBuf *tknBuf, Buffer *mBuf);






extern S16 cmPkHeader (Header *header, Buffer *mBuf);
extern S16 cmPkSmCfg (SmCfg *smCfg, Buffer *mBuf);
extern S16 cmPkTmrCfg (TmrCfg *tmrCfg, Buffer *mBuf);
extern S16 cmPkCmStatus (CmStatus *status, Buffer *mBuf);
extern S16 cmPkCmAlarm (CmAlarm *alrm, Buffer *mBuf);





extern S16 cmUnpkDateTime (DateTime *dateTime, Buffer *mBuf);
extern S16 cmUnpkDuration (Duration *duration, Buffer *mBuf);
extern S16 cmUnpkPtr (U32 *ptr, Buffer *mBuf);
extern S16 cmUnpkEntityId (EntityId *entityId, Buffer *mBuf);
extern S16 cmUnpkElmntId (ElmntId *elmntId, Buffer *mBuf);
extern S16 cmUnpkMemoryId (MemoryId *memoryId, Buffer *mBuf);


extern S16 cmUnpkSystemId (SystemId *systemId, Buffer *mBuf);
extern S16 cmUnpkAddrs (Addrs *addrs, Buffer *mBuf);
extern S16 cmUnpkProtAddr (ProtAddr *protAddr, Buffer *mBuf);
extern S16 cmUnpkProtAddrTbl (ProtAddrTbl *protAddr, Buffer *mBuf);
extern S16 cmUnpkShrtAddrs (ShrtAddrs *addrs, Buffer *mBuf);
extern S16 cmUnpkAddrMask (U8 *mask, Buffer *mBuf);
extern S16 cmUnpkBndCfg (BndCfg *bndCfg, Buffer *mBuf);
extern S16 cmUnpkPst (Pst *pst, Buffer *mBuf);
extern S16 cmUnpkElmtHdr (ElmtHdr *m, Buffer *mBuf);
extern S16 cmUnpkTknU8 (TknU8 *tknU8, Buffer *mBuf);
extern S16 cmUnpkTknS8 (TknS8 *tknS8, Buffer *mBuf);
extern S16 cmUnpkTknU16 (TknU16 *tknU16, Buffer *mBuf);
extern S16 cmUnpkTknU32 (TknU32 *tknU32, Buffer *mBuf);
extern S16 cmUnpkTknStr (TknStr *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStrM (TknStrM *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStrS (TknStrS *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStrE (TknStrE *tknStr, Buffer *mBuf);

extern S16 cmUnpkTknStr4 (TknStr4 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr12 (TknStr12 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr32 (TknStr32 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr64 (TknStr64 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr132 (TknStr132 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr256 (TknStr256 *tknStr, Buffer *mBuf);

 S16 cmUnpkTknS32 (TknS32 *tknS32, Buffer *mBuf);
 S16 cmUnpkTknOid (TknOid *tknOid, Buffer *mBuf);
 S16 cmUnpkTknBuf (TknBuf *tknBuf, Buffer **mBuf);






extern S16 cmUnpkHeader (Header *header, Buffer *mBuf);
extern S16 cmUnpkSmCfg (SmCfg *smCfg, Buffer *mBuf);
extern S16 cmUnpkTmrCfg (TmrCfg *tmrCfg, Buffer *mBuf);
extern S16 cmUnpkCmStatus (CmStatus *status, Buffer *mBuf);
extern S16 cmUnpkCmAlarm (CmAlarm *alrm, Buffer *mBuf);
typedef S16 Status;

typedef U32 Ticks;




typedef S16 MsgLen;


typedef S16 Order;




typedef U32 Size;
typedef S32 PtrOff;


typedef U32 QLen;

typedef QLen BufQLen;

typedef S16 RegSize;

typedef S16 DPoolSize;

typedef U16 Random;

typedef S16 Seq;

typedef U32 CoreId;


typedef U32 ErrCls;

typedef U32 ErrCode;

typedef U32 ErrVal;

typedef S16 VectNmb;

typedef S16 Ttype;

typedef S8 Sema;
extern S16 msOptInd;
extern S8 *msOptArg;
extern Txt **msArgv;
extern S16 msArgc;




typedef U8 SSTskId;




typedef S32 SSTskPrior;
struct ssmsgb
{
   S8 refCnt;
   struct ssmsgb *b_next;
   struct ssmsgb *b_prev;
   struct ssmsgb *b_cont;
   U8 *b_rptr;
   U8 *b_wptr;
   struct ssdatab *b_datap;
};


typedef struct ssQueue
{
   Buffer *head;
   Buffer *tail;
   QLen crntSize;

} Queue;



typedef struct sMemCtl
{
   U8 op;

   union
   {
      struct
      {
         Data *vaddr;
         Data **paddr;
      } vtop;

      struct
      {
         Size size;
         Status *status;
      } chkres;
   } u;

} SMemCtl;
typedef S16 (*SsAlloc) (Void *, Size *, U32, Data **);





typedef S16 (*SsFree) (Void *, Data *, Size);

typedef S16 (*SsCtl) (Void *, Event, SMemCtl *);




typedef struct sRegInfo
{
   Void *regCb;
   U32 flags;




   Data *start;
   Size size;
   SsAlloc alloc;
   SsFree free;
   SsCtl ctl;

} SRegInfo;
typedef struct cmTimer
{
   S16 tmrEvnt;
   U32 tqExpire;
   U32 cb;
   struct cmTimer *next;
   struct cmTimer *prev;
   U8 ent2bUpd;

   U16 entIdx;
} CmTimer;

typedef struct cmTqCp
{
   U32 nxtEnt;
   U32 tmrLen;
   CmTimer *tmp;
} CmTqCp;

typedef struct cmTqType
{
   CmTimer *first;
   CmTimer *tail;
} CmTqType;

typedef struct cmTmrArg
{
   CmTqCp *tqCp;
   CmTqType *tq;
   CmTimer *timers;
   U32 cb;
   S16 evnt;
   U32 wait;
   U8 tNum;
   U8 max;
} CmTmrArg;




typedef Void (*PFV) (U32, S16);

extern Void cmInitTimers (CmTimer* timers, U8 max);
extern Void cmPlcCbTq (CmTmrArg* arg);
extern Void cmRmvCbTq (CmTmrArg* arg);
extern Void cmPrcTmr (CmTqCp* tqCp, CmTqType* tq, PFV func);
extern Void cmRstCbTq (CmTmrArg* arg);
typedef S8 SsdTTskEntry;



typedef struct ssdSTskEntry
{
   pthread_t tId;
   Ent ent;
   Inst inst;
   pthread_mutex_t lock;


   U32 lwpId;

} SsdSTskEntry;




typedef struct ssdDrvrTskEntry
{
   Bool flag;

} SsdDrvrTskEntry;




typedef struct ssdTmrEntry
{
   CmTimer timers[1];

} SsdTmrEntry;



typedef S8 SsdDPoolEntry;



typedef S8 SsdSPoolEntry;



typedef S8 SsdPoolEntry;



typedef S8 SsdRegionEntry;





typedef struct ssdOs
{
   unsigned randSeed;

   Ticks sysTicks;

   pthread_t tmrHdlrTID;
   CmTqCp tmrTqCp;
   CmTqType tmrTq[45];

   sem_t ssStarted;

   FILE *conInFp;
   FILE *conOutFp;
   pthread_t conHdlrTID;



   FILE *fileOutFp;



   pthread_t isTskHdlrTID;
   int isFildes[2];

   Bool sigEvnt;

} SsdOs;


typedef struct mtBktCfg
{
   Size blkSize;
   U32 numBlks;
} MtBktCfg;

typedef struct mtRegCfg
{
   Region regionId;
   U16 numBkts;
   Size heapsize;
   MtBktCfg bkt[5];
} MtRegCfg;

typedef struct mtMemCfg
{
   U8 numRegions;
   MtRegCfg region[8];
} MtMemCfg;
extern U32 gt[128];
typedef S16 (*PAIFS16) (Ent ent,Inst inst,Region region,Reason reason );





typedef S16 (*PAIFTMRS16) (Ent ent, Inst inst);
typedef S16 (*PATFS16) (Prior prior,Route route,Ent ent,Inst inst,Buffer *mBuf);



typedef S16 (*ActvTsk) (Pst *pst, Buffer *mBuf);

typedef struct uProc UProc;

typedef void (*ISTsk) (Inst inst);




struct uProc
{
   Inst inst;
   ProcId low;
   ProcId high;
   ActvTsk actvTsk;
   U16 isFlag;
   ISTsk isTsk;
};






extern S16 SChekMemUtilization (Region region,Bool *memAlarm);

extern Void prntMem (Data *strtAdr,S16 len);
extern Void prntMsg (Buffer *mBuf);
extern Void prntMsg1 (Buffer *mBuf,S16 src,S16 dst);
extern S16 tst (void );
extern S16 rdConQ (Data data);

extern S16 SPkS8 (S8 val,Buffer *mBuf);
extern S16 SPkU8 (U8 val,Buffer *mBuf);
extern S16 SPkS16 (S16 val,Buffer *mBuf);
extern S16 SPkU16 (U16 val,Buffer *mBuf);
extern S16 SPkS32 (S32 val,Buffer *mBuf);
extern S16 SPkU32 (U32 val,Buffer *mBuf);


extern S16 SPkF32 (F32 val,Buffer *mBuf);
extern S16 SPkF64 (F64 val,Buffer *mBuf);

extern S16 SUnpkS8 (S8 *val,Buffer *mBuf);
extern S16 SUnpkU8 (U8 *val,Buffer *mBuf);
extern S16 SUnpkS16 (S16 *val,Buffer *mBuf);
extern S16 SUnpkU16 (U16 *val,Buffer *mBuf);
extern S16 SUnpkS32 (S32 *val,Buffer *mBuf);
extern S16 SUnpkU32 (U32 *val,Buffer *mBuf);


extern S16 SUnpkF32 (F32 *val,Buffer *mBuf);
extern S16 SUnpkF64 (F64 *val,Buffer *mBuf);

extern S16 SPrint (Txt *buf);
extern S16 SDisplay (S16 chan,Txt *buf);
extern S16 SPrntMsg (Buffer *mBuf,S16 src,S16 dst);
extern S16 SInitQueue (Queue *q);

extern S16 SQueueFirst (Buffer *buf,Queue *q);
extern S16 SQueueLast (Buffer *buf,Queue *q);
extern S16 SDequeueFirst (Buffer * *bufPtr,Queue *q);
extern S16 SDequeueLast (Buffer * *bufPtr,Queue *q);

extern S16 SFlushQueue (Queue *q);
extern S16 SCatQueue (Queue *q1,Queue *q2,Order order);
extern S16 SFndLenQueue (Queue *q,QLen *lngPtr);
extern S16 SExamQueue (Buffer **bufPtr,Queue *q,QLen idx);
extern S16 SAddQueue (Buffer *buf,Queue *q,QLen idx);
extern S16 SRemQueue (Buffer **bufPtr,Queue *q,QLen idx);
extern S16 SGetDBuf (Region region,Pool pool,Buffer * *bufPtr);
extern S16 SPutDBuf (Region region,Pool pool,Buffer *buf);
extern S16 SPutMsgToRegion (Region region, Buffer *buf);
extern S16 SPutMsg (Buffer *mBuf);
extern S16 SGetMsg (Region region, Pool pool, Buffer * *mBufPtr);
extern S16 SGetSBuf (Region region,Pool pool, Data * *bufPtr, Size size);
extern S16 SPutSBuf (Region region, Pool pool, Data *buf, Size size);
extern S16 SGetStaticBuffer (Region region,Pool pool, Data * *bufPtr, Size size, U8 memType);
extern S16 SPutStaticBuffer (Region region, Pool pool, Data *buf, Size size, U8 memType);
extern S16 SGetSMem (Region region,Size size,Pool *poolPtr);
extern S16 SPutSMem (Region region,Pool pool);
extern S16 SInitMsg (Buffer *mBuf);
extern S16 SAddPreMsg (Data data,Buffer *mBuf);
extern S16 SAddPstMsg (Data data,Buffer *mBuf);

extern S16 SAddPreMsgMultInOrder (Data *src,MsgLen cnt,Buffer *mBuf);
extern S16 SRemPreMsg (Data *dataPtr,Buffer *mBuf);
extern S16 SRemPreMsgRegion (Region region, Data *dataPtr,Buffer *mBuf);
extern S16 SCatMsgRegion (Region region, Buffer *mBuf1,Buffer *mBuf2,Order order);
extern S16 SSegMsgRegion (Region region, Buffer *mBuf1,MsgLen idx,Buffer **mBuf2);
extern int SCreatePThread (pthread_t* tid, pthread_attr_t* attr, void *(*start_routine) (void *), void* arg);
extern S16 SRemPstMsg (Data *dataPtr,Buffer *mBuf);







extern S16 SAddPreMsgMult (Data *src,MsgLen cnt,Buffer *mBuf);
extern S16 SAddPstMsgMult (Data *src,MsgLen cnt,Buffer *mBuf);

extern S16 SGetPstMsgMult (MsgLen cnt,Buffer *mBuf);
extern S16 SRemPreMsgMult (Data *dst,MsgLen cnt,Buffer *mBuf);
extern S16 SRemPstMsgMult (Data *dst,MsgLen cnt,Buffer *mBuf);
extern S16 SRepMsg (Data data,Buffer *mBuf,MsgLen idx);
extern S16 SExamMsg (Data *dataPtr,Buffer *mBuf,MsgLen idx);

extern S16 SGetDataFrmMsg (Buffer *mBuf, Data *dataPtr, MsgLen idx, MsgLen dataLen);
extern S16 SFndLenMsg (Buffer *mBuf,MsgLen *lngPtr);
extern S16 SCatMsg (Buffer *mBuf1,Buffer *mBuf2,Order order);




extern S16 SSegMsg (Buffer *mBuf1,MsgLen idx,Buffer **mBuf2);

extern S16 SSwapMsg (Buffer *mBuf1, Buffer *mBuf2);
extern S16 SCpyMsgFix (Buffer *srcMbuf,MsgLen srcIdx,MsgLen cnt, Data *dstBuf,MsgLen *cCnt)
                                       ;
extern S16 SCpyFixMsg (Data *srcBuf,Buffer *dstMbuf, MsgLen dstIdx,MsgLen cnt,MsgLen *cCnt)
                                                   ;
extern S16 SCompressMsg (Buffer *mBuf);
extern S16 SCpyMsgMsg (Buffer *mBuf, Region region, Pool pool, Buffer **dstBuf)
                             ;
extern S16 SAddMsgRef (Buffer *mBuf, Region region, Pool pool, Buffer **dstBuf)
                             ;
extern S16 SIncMsgRef(Buffer *srcBuf, Region dstRegion, Pool dstPool, Buffer **dstBuf);






extern S16 SChkRes (Region region,Pool pool,Status *status);
extern S16 SChkResUtl (Region region,U8 *wSum);
extern S16 SSetDateTime (DateTime *dt);
extern S16 SGetDateTime (DateTime *dt);






extern S16 SGetEpcTime (EpcTime *et);

extern S16 SGetTimeStamp ( S8 *ts);
extern S16 SGetSysTime (Ticks *sysTime);
extern S16 SGetRefTime (U32 refTime, U32 *sec, U32 *usec);
extern S16 SRandom (Random *value);
extern S16 SError (Seq seq,Reason reason);
extern Void SLogError (Ent ent, Inst inst, ProcId procId, Txt *file, S32 line, ErrCls errCls, ErrCode errCode, ErrVal errVal, Txt *errDesc)

                                                    ;

extern U32 SGetSystemTsk (Void);




extern S16 SRegInit (Ent ent,Inst inst,PAIFS16 initFnct);
extern S16 SRegActvTsk (Ent ent,Inst inst,Ttype ttype,Prior prior, ActvTsk actvTsk)
                                               ;




extern S16 SRegCfgTmr (Ent ent, Inst inst, S16 period, S16 units, PFS16 tmrFnct)



                                            ;


extern S16 SRegCfgTmrMt (Ent ent, Inst inst, S16 period, S16 units, PAIFTMRS16 tmrFnctMt)



                                                     ;

extern S16 SDeregCfgTmr (Ent ent, Inst inst, S16 period, S16 units, PFS16 tmrFnct)



                                              ;


extern S16 SDeregCfgTmrMt (Ent ent, Inst inst, S16 period, S16 units, PAIFTMRS16 tmrFnctMt)



                                                       ;
extern S16 SPstTsk (Pst *pst, Buffer *mBuf);






extern S16 SRegDrvrTsk (Inst inst, ProcId low, ProcId high, ActvTsk actvTsk, ISTsk isTsk)
                                                            ;

extern S16 SDeregDrvrTsk (Inst channel);



extern S16 SRegRtrTsk (Route *, Cntr, ActvTsk);
extern S16 SDeregRtrTsk (Route *, Cntr);



extern S16 SAttachPtrToBuf ( Region region, Pool pool, Data *ptr, MsgLen totalLen, Buffer** mBuf )





  ;





typedef S8 SsAffinityMode;


typedef struct {
  U32 numCores;
  U32 threadsPerCore;
  U32 threadRegister[64];
} SCpuInfo;

extern S16 SRegCpuInfo (SCpuInfo *cpuInfo);
extern S16 SSetAffinity (SSTskId *tskId, SsAffinityMode mode, U32 coreId, SSTskId *tskAssociatedTskId);
extern S16 SGetAffinity (SSTskId *tskId, U32 *coreId);







extern S16 SAddDBufPst (Buffer *mBuf, Buffer *dBuf);
extern S16 SAddDBufPre (Buffer *mBuf, Buffer *dBuf);
extern S16 SRemDBufPst (Buffer *mBuf, Buffer **dBuf);
extern S16 SRemDBufPre (Buffer *mBuf, Buffer **dBuf);
extern S16 SGetDataRx (Buffer *dBuf, MsgLen pad, Data **dat, MsgLen *mLen);
extern S16 SGetDataTx (Buffer *dBuf, Data **dat, MsgLen *mLen);
extern S16 SUpdMsg (Buffer *mBuf, Buffer *dBuf, MsgLen mLen);
extern S16 SCacheFlush (U16 cache_type, Data *addr, Size size);
extern S16 SCacheInvalidate (U16 cache_type, Data *addr, Size size);
extern S16 SAlignDBufEven (Buffer *dBuf);
extern S16 SAlignDBuf (Buffer *dBuf, U32 align);
extern S16 SInitNxtDBuf (Buffer *mBuf);
extern S16 SGetNxtDBuf (Buffer *mBuf, Buffer **dBuf);
extern S16 SChkNxtDBuf (Buffer *mBuf);
extern S16 SSetIntPend (U16 id, Bool flag);
extern S16 SChkMsg (Buffer *mBuf);
extern S16 SDeregInitTskTmr (Ent ent,Inst inst);
extern S16 SExitTsk (void );
extern S16 SExitInt (void );
extern S16 SHoldInt (void );
extern S16 SRelInt (void );
extern S16 SEnbInt (void );
extern S16 SDisInt (void );
extern S16 SGetVect (VectNmb vectNmb,PIF *vectFnct);
extern S16 SPutVect (VectNmb vectNmb,PIF vectFnct);






extern S16 SInitSema (Region region, Sema *sema);
extern S16 SRelSema (Region region, Sema sema);
extern S16 SGetSema (Region region, Sema sema);
extern S16 SActvInit (Ent ent,Inst inst,Region region,Reason reason);
extern S16 SActvTsk (Prior prior,Route route,Ent srcEnt, Inst srcInst,Buffer *mBuf)
                                       ;
extern S16 SActvTmr (void );
extern S16 SGetOpt (int argc,char **argv,char *opts);



extern S16 SGetEntInst (Ent *ent, Inst *inst);
extern S16 SSetEntInst (Ent ent, Inst inst);
extern ProcId SFndProcId (void);
extern Void SSetProcId (ProcId pId);


extern S16 SGetDBufSiz (Region region, Pool pool, S16 *size);
extern S16 SGetStrtIdx (Region region, Pool pool, S16 *idx);
extern S16 SGetEndIdx (Region region, Pool pool, S16 *idx);
extern S16 SGetStrtPad (Region region, Pool pool, S16 *pad);
extern Void SExit (Void);




extern S16 SRegTTsk (Ent ent, Inst inst, Ttype type, Prior prior, PAIFS16 initTsk, ActvTsk actvTsk)




                                           ;

extern S16 SRegCbTsk (Ent ent, Inst inst, ActvTsk actvTsk)

                                           ;
extern S16 SDeregTTsk (Ent ent, Inst inst);
extern S16 SCreateSTsk (SSTskPrior tskPrior, SSTskId *tskId);
extern S16 SDestroySTsk (SSTskId tskId);



extern S16 SAttachTTsk (Ent ent, Inst inst, SSTskId tskId);
extern S16 SDetachTTsk (Ent ent, Inst inst);







extern S16 SRegRegion (Region region, SRegInfo *regInfo);
extern S16 SDeregRegion (Region region);
extern S16 SRegDynRegion (Region region, SRegInfo *regInfo);
extern S16 SAlloc (Region region, Size *size, U32 flags, Data **ptr);
extern S16 SFree (Region region, Data *ptr, Size size);


extern S16 SGetBufRegionPool (Buffer *mBuf, Region *region, Pool *pool);
extern S16 SThreadYield (void);


extern S16 SInitLock (pthread_mutex_t *lock,U8 type);
extern S16 SLock (pthread_mutex_t *lock);
extern S16 SUnlock (pthread_mutex_t *lock);
extern S16 SDestroyLock (pthread_mutex_t *lock);


extern S16 SInitSemaphore (sem_t *sem, U8 value);
extern S16 SWaitSemaphore (sem_t *sem);
extern S16 SPostSemaphore (sem_t *sem);
extern S16 SDestroySemaphore (sem_t *sem);
extern S16 smActvInit (Ent ent, Inst inst, Region region, Reason reason);
extern S16 smInitExt (void);


extern S16 smActvTsk (Pst *pst, Buffer *mBuf);
extern S8* SGetConfigPath (Void);


extern S16 SCpyPartMsg (Buffer *srcBuf, MsgLen idx, MsgLen cnt, Buffer *dstBuf);
extern S16 SRepPartMsg (Buffer *srcBuf, MsgLen idx, MsgLen cnt, Buffer *dstBuf);
extern S16 SMovPartMsg (Buffer *srcBuf, MsgLen idx, Buffer *dstBuf);
extern S16 SPkMsgMult (Data *src, MsgLen cnt, Buffer *mBuf);
extern S16 SGetReadPtr (Buffer *mBuf, U8** data, MsgLen *len);

typedef enum
{
   SS_SHARABLE_MEMORY,
   SS_NON_SHARABLE_MEMORY
}ssMemoryType;
extern S16 SStartTask (volatile U32 *startTime, U32 tarkId);
extern S16 SStopTask (volatile U32 startTime,U32 taskId);
extern Void SIncrementTtiCount(Void);
extern Ticks SGetTtiCount(Void);
extern Void ysPrntBkTrace(Void);
extern Void ssMlogInit(Void);
extern Void ssMlogIncrCounter(Void);


extern Void ssRegMainThread(Void);






extern S16 ssGetDBufOfSize(Region region,Size size,Buffer **dBuf);


typedef TknU8 TknPres;


typedef TknU8 TknBool;

typedef struct tknS16
{
   U8 pres;
   U8 spare1;
   S16 val;



} TknS16;


typedef struct tknStr8
{
   U8 pres;
   U8 len;
   U16 spare1;



   U8 val[8];
} TknStr8;


typedef struct tknStr16
{
   U8 pres;
   U8 len;
   U16 spare1;



   U8 val[16];
} TknStr16;

typedef struct tknStrOSXL
{
   U8 pres;
   U8 spare1;
   U16 len;



   U8 *val;
} TknStrOSXL;


typedef TknStr4 TknBStr32;


typedef TknStrOSXL TknStrBSXL;







typedef struct tknStrBMP4
{
   U8 pres;
   U8 len;
   U16 spare1;



   U16 val[4];
} TknStrBMP4;


typedef struct tknStrBMPXL
{
   U8 pres;
   U8 spare1;
   U16 len;



   U16 *val;
} TknStrBMPXL;







typedef struct tknStrUNI4
{
   U8 pres;
   U8 len;
   U16 spare1;



   U32 val[4];
} TknStrUNI4;

typedef struct tknStrUNIXL
{
   U8 pres;
   U8 spare1;
   U16 len;



   U32 *val;
} TknStrUNIXL;


extern S16 cmPkTknPres (TknPres *tknPres, Buffer *mBuf);
extern S16 cmPkTknS16 (TknS16 *tknS16, Buffer *mBuf);
extern S16 cmPkTknBStr32 (TknBStr32 *tknbStr32, Buffer *mBuf);
extern S16 cmPkTknStr8 (TknStr8 *tknStr8, Buffer *mBuf);
extern S16 cmPkTknStr16 (TknStr16 *tknStr16, Buffer *mBuf);
extern S16 cmPkTknStrOSXL (TknStrOSXL *tknStrOSXL, Buffer *mBuf);
extern S16 cmPkTknStrBSXL (TknStrBSXL *tknStrBSXL, Buffer *mBuf);
extern S16 cmPkTknStrBMP4 (TknStrBMP4 *tknStrBMP4, Buffer *mBuf);
extern S16 cmPkTknStrBMPXL (TknStrBMPXL *tknStrBMPXL, Buffer *mBuf);
extern S16 cmPkTknStrUNI4 (TknStrUNI4 *tknStrUNI4, Buffer *mBuf);
extern S16 cmPkTknStrUNIXL (TknStrUNIXL *tknStrUNIXL, Buffer *mBuf);




extern S16 cmUnpkTknPres (TknPres *tknPres, Buffer *mBuf);
extern S16 cmUnpkTknS16 (TknS16 *tknS16, Buffer *mBuf);
extern S16 cmUnpkTknBStr32 (TknBStr32 *tknBStr32, Buffer *mBuf);
extern S16 cmUnpkTknStr8 (TknStr8 *tknStr8, Buffer *mBuf);
extern S16 cmUnpkTknStr16 (TknStr16 *tknStr16, Buffer *mBuf);
extern S16 cmUnpkTknStrOSXL (TknStrOSXL *tknStrOSXL, Buffer *mBuf, Ptr ptr)
                                                ;
extern S16 cmUnpkTknStrBSXL (TknStrBSXL *tknStrBSXL, Ptr ptr, Buffer *mBuf)
                                                     ;
extern S16 cmUnpkTknStrBMP4 (TknStrBMP4 *tknStrBMP4, Buffer *mBuf);
extern S16 cmUnpkTknStrBMPXL (TknStrBMPXL *tknStrBMPXL, Buffer *mBuf, Ptr ptr)
                                                ;
extern S16 cmUnpkTknStrUNI4 (TknStrUNI4 *tknStrUNI4, Buffer *mBuf);
extern S16 cmUnpkTknStrUNIXL (TknStrUNIXL *tknStrUNIXL, Buffer *mBuf, Ptr ptr)
                                                ;
typedef struct cmMemCb
{
   Size maxSize;
   Mem sMem;
   U32 memAllocated;
   U32 initPtr;
   U32 runPtr;
} CmMemCb;




typedef struct cmMemList CmMemList;

struct cmMemList
{
   CmMemList *next;
   CmMemList *prev;

   Size size;
};





typedef struct cmMemListCp
{
   CmMemList *first;
   CmMemList *last;
   U32 count;
   CmMemCb memCb;
}CmMemListCp;




typedef struct cmMemStatus
{
   Mem sMem;
   U32 memBlkCnt;
   Size maxBlkSize;
   Size memAllocated;
} CmMemStatus;
extern S16 cmAllocEvnt ( Size evntSize, Size maxBlkSize, Mem *sMem, Ptr *ptr)



                                              ;

extern Void cmInitMemCp ( CmMemListCp *memCp, Size maxBlkSize, Mem *sMem )


                                                 ;







extern S16 cmGetMem ( Ptr memPtr, Size size, Ptr *allocPtr)


                                               ;

extern Void cmFreeMem ( Ptr memPtr)
                                            ;

extern Void cmGetMemStatus ( Ptr memPtr, CmMemStatus *status)

                                                       ;
typedef struct cmLList CmLList;
typedef struct cmLListCp CmLListCp;


struct cmLList
{
   CmLList *next;
   CmLList *prev;
   U32 node;
};

struct cmLListCp
{
   CmLList *first;
   CmLList *last;
   CmLList *crnt;
   U32 count;
};

extern Void cmLListInit (CmLListCp *lList);
extern Void cmLListAdd2Head (CmLListCp *lList, CmLList *node);
extern Void cmLListAdd2Tail (CmLListCp *lList, CmLList *node);
extern Void cmLListInsCrnt (CmLListCp *lList, CmLList *node);

extern Void cmLListInsAfterCrnt (CmLListCp *lList, CmLList *node);
extern CmLList *cmLListDelFrm (CmLListCp *lList, CmLList *node);
extern Void cmLListCatLList ( CmLListCp *list1, CmLListCp *list2);
typedef struct cmHashListCp CmHashListCp;




typedef S16 (* CmHashFunc) (CmHashListCp *hashListCp, U8 *key, U16 keyLen, U16 *idx)
                                                        ;


typedef struct cmListEnt CmListEnt;

struct cmListEnt
{
   CmListEnt *next;
   CmListEnt *prev;
};
typedef struct cmHashListEnt
{
   CmListEnt list;
   U8 *key;
   U16 keyLen;
   U16 hashVal;
} CmHashListEnt;



struct cmHashListCp
{

   CmListEnt *hl;



   Region region;
   Pool pool;
   U16 nmbBins;
   U16 binBitMask;
   U8 nmbBinBits;

   U16 nmbEnt;

   U16 offset;
   Bool dupFlg;
   U16 keyType;
   CmHashFunc hashFunc;
};




extern S16 cmHashListInit ( CmHashListCp *hashListCp, U16 nmbBins, U16 offset, Bool dupFlg, U16 keyType, Region region, Pool pool)






                                 ;

extern S16 cmHashListDeinit ( CmHashListCp *hashListCp)
                                        ;

extern S16 cmHashListInsert ( CmHashListCp *hashListCp, U32 entry, U8 *key, U16 keyLen)



                                   ;

extern S16 cmHashListDelete ( CmHashListCp *hashListCp, U32 entry)

                                  ;

extern S16 cmHashListFind ( CmHashListCp *hashListCp, U8 *key, U16 keyLen, U16 seqNmb, U32 *entry)




                                   ;

extern S16 cmHashListGetNext ( CmHashListCp *hashListCp, U32 prevEnt, U32 *entry)


                                   ;
extern S16 cmHashListQuery ( CmHashListCp *hashListCp, U8 queryType, U16 *result)


                                    ;



extern S16 cmHashListOAInsert ( CmHashListCp *hashListCp, U32 entry, U8 *key, U16 keyLen)



                                   ;
typedef U8 CmLteRbId;


typedef U16 CmLteCellId;


typedef U16 CmLteRnti;


typedef U8 CmLteRlcMode;


typedef U8 CmLteLcId;


typedef U8 CmLteLcType;


typedef U8 CmLteTrchType;


typedef U8 CmLteContResId[6];


typedef struct cmLteRlcId
{
  CmLteRbId rbId;
  U8 rbType;
  CmLteRnti ueId;
  CmLteCellId cellId;
}CmLteRlcId;


typedef struct cmLteTimingInfo
{
   U16 sfn;
   U8 subframe;
} CmLteTimingInfo;


typedef struct cmLtePdcpId
{
   CmLteCellId cellId;
   CmLteRnti ueId;
   CmLteRbId rbId;
   U8 rbType;
} CmLtePdcpId;


typedef struct cmLtePoolInfo
{
   U32 poolSize;
   U32 totAvailable;
   U32 crntUsed;
   U32 maxUsed;
} CmLtePoolInfo;

typedef struct cmLteRegionInfo
{
   U8 regionType;
   U8 regionId;
   U8 numPools;
   U8 isGenMemInfoUpdated;
   CmLtePoolInfo poolInfo[6];
}CmLteRegionInfo;

typedef struct cmLteMemInfo
{
   U8 numRegions;
   U8 idx;
   CmLteRegionInfo regInfo[5];
}CmLteMemInfo;


typedef struct cmLteCpuUtilInfo
{
   U32 avgCpuUtil;
   U32 maxCpuUtil;
}CmLteCpuUtilInfo;


typedef struct cmLteCpuInfo
{
   U8 numCores;
   CmLteCpuUtilInfo cpuUtil[10];
}CmLteCpuInfo;

typedef struct cmCpuUtilStatsInfo
{
   U32 numSamples;
   U32 maxCpuUtil;
   U32 totCpuUtil;
}CmCpuUtilStatsInfo;


typedef struct cmCpuStatsInfo
{
   U8 numCores;
   CmCpuUtilStatsInfo cpuUtil[10];
}CmCpuStatsInfo;





typedef U32 CntrSts;


typedef enum cmLteAggrLvl
{
   CM_LTE_AGGR_LVL1 = 1,
   CM_LTE_AGGR_LVL2 = 2,
   CM_LTE_AGGR_LVL4 = 3,
   CM_LTE_AGGR_LVL8 = 4
} CmLteAggrLvl;


typedef enum cmLteUeCategory
{
   CM_LTE_UE_CAT_1 = 1,
   CM_LTE_UE_CAT_2,
   CM_LTE_UE_CAT_3,
   CM_LTE_UE_CAT_4,
   CM_LTE_UE_CAT_5,
   CM_LTE_UE_CAT_6,
   CM_LTE_UE_CAT_7,
   CM_LTE_UE_CAT_8
} CmLteUeCategory;





extern S16 cmUpdateSsiMemInfo(CmLteMemInfo *mInfo);

extern S16 cmFillMemUtilizationMeas(CmLteMemInfo *memoryInfo,CmLteMemInfo *memInfo);

extern S16 cmClearMemUtilizationCounter(CmLteMemInfo *memInfo);
extern S16 UpdateSocMemInfo(U8 area , CmLteMemInfo *mInfo);

extern S16 cmFillCpuUtilizationMeas(CmLteCpuInfo *cpuMeasInfo,CmCpuStatsInfo *cpuInfo);

extern S16 cmClearCpuUtilizationCounter(CmCpuStatsInfo *cpuInfo);
extern Void UpdateSocCpuInfo(CmCpuStatsInfo *cpuInfo,U8 Idx);

extern S16 SGetRegPoolInfo(U8* numRegion, U8* numPool);


extern S16 cmPkLteRlcId ( CmLteRlcId *param, Buffer *mBuf )


  ;

extern S16 cmPkLteTimingInfo ( CmLteTimingInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkLtePdcpId ( CmLtePdcpId *param, Buffer *mBuf )


  ;


extern S16 cmUnpkLteRlcId ( CmLteRlcId *param, Buffer *mBuf )


  ;

extern S16 cmUnpkLteTimingInfo ( CmLteTimingInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkLtePdcpId ( CmLtePdcpId *param, Buffer *mBuf )


  ;



typedef struct cmTtiProc
{
 U32 totTtiProcessingTime;
 U32 numOfTti;
 U32 maxTtiProcessingTime;
 U32 ttiStretchCount;
 U32 ttiThresholdExceedCount;

 U32 phyReptTtiStretchCount;
}CmTtiProc;

extern CmTtiProc ttiProc;

extern Void cmUpdateTtiCounters(U32 ttiProcessingTime);
extern Void cmResetTtiCounters(Void);
 U8 *cmMemcpy (U8 *tgt, const U8 *src, U32 len);
 S16 cmMemcmp (const U8 *s1, const U8 *s2, U32 len);
 U8 *cmMemset (U8 *src, U8 val, U32 len);

 S16 cmStrcmp (const U8 *s1, const U8 *s2);

 S16 cmStrncmp (const U8 *s1, const U8 *s2, MsgLen len);
 MsgLen cmStrlen (const U8 *s);










typedef unsigned long int nfds_t;


struct pollfd
  {
    int fd;
    short int events;
    short int revents;
  };



extern int poll (struct pollfd *__fds, nfds_t __nfds, int __timeout);
extern int ppoll (struct pollfd *__fds, nfds_t __nfds,
    const struct timespec *__timeout,
    const __sigset_t *__ss);









extern int __poll_alias (struct pollfd *__fds, nfds_t __nfds, int __timeout) __asm__ ("" "poll")
                               ;
extern int __poll_chk (struct pollfd *__fds, nfds_t __nfds, int __timeout,
         unsigned int __fdslen);
extern int __poll_chk_warn (struct pollfd *__fds, nfds_t __nfds, int __timeout, unsigned int __fdslen) __asm__ ("" "__poll_chk")


  __attribute__((__warning__ ("poll called with fds buffer too small file nfds entries")));

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
poll (struct pollfd *__fds, nfds_t __nfds, int __timeout)
{
  if (__builtin_object_size (__fds, 2 > 1) != (unsigned int) -1)
    {
      if (! __builtin_constant_p (__nfds))
 return __poll_chk (__fds, __nfds, __timeout, __builtin_object_size (__fds, 2 > 1));
      else if (__builtin_object_size (__fds, 2 > 1) / sizeof (*__fds) < __nfds)
 return __poll_chk_warn (__fds, __nfds, __timeout, __builtin_object_size (__fds, 2 > 1));
    }

  return __poll_alias (__fds, __nfds, __timeout);
}



extern int __ppoll_alias (struct pollfd *__fds, nfds_t __nfds, const struct timespec *__timeout, const __sigset_t *__ss) __asm__ ("" "ppoll")

                                          ;
extern int __ppoll_chk (struct pollfd *__fds, nfds_t __nfds,
   const struct timespec *__timeout,
   const __sigset_t *__ss, unsigned int __fdslen);
extern int __ppoll_chk_warn (struct pollfd *__fds, nfds_t __nfds, const struct timespec *__timeout, const __sigset_t *__ss, unsigned int __fdslen) __asm__ ("" "__ppoll_chk")




  __attribute__((__warning__ ("ppoll called with fds buffer too small file nfds entries")));

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
ppoll (struct pollfd *__fds, nfds_t __nfds, const struct timespec *__timeout,
       const __sigset_t *__ss)
{
  if (__builtin_object_size (__fds, 2 > 1) != (unsigned int) -1)
    {
      if (! __builtin_constant_p (__nfds))
 return __ppoll_chk (__fds, __nfds, __timeout, __ss, __builtin_object_size (__fds, 2 > 1));
      else if (__builtin_object_size (__fds, 2 > 1) / sizeof (*__fds) < __nfds)
 return __ppoll_chk_warn (__fds, __nfds, __timeout, __ss,
     __builtin_object_size (__fds, 2 > 1));
    }

  return __ppoll_alias (__fds, __nfds, __timeout, __ss);
}






struct rpcent
{
  char *r_name;
  char **r_aliases;
  int r_number;
};

extern void setrpcent (int __stayopen) __attribute__ ((__nothrow__ , __leaf__));
extern void endrpcent (void) __attribute__ ((__nothrow__ , __leaf__));
extern struct rpcent *getrpcbyname (const char *__name) __attribute__ ((__nothrow__ , __leaf__));
extern struct rpcent *getrpcbynumber (int __number) __attribute__ ((__nothrow__ , __leaf__));
extern struct rpcent *getrpcent (void) __attribute__ ((__nothrow__ , __leaf__));


extern int getrpcbyname_r (const char *__name, struct rpcent *__result_buf,
      char *__buffer, size_t __buflen,
      struct rpcent **__result) __attribute__ ((__nothrow__ , __leaf__));

extern int getrpcbynumber_r (int __number, struct rpcent *__result_buf,
        char *__buffer, size_t __buflen,
        struct rpcent **__result) __attribute__ ((__nothrow__ , __leaf__));

extern int getrpcent_r (struct rpcent *__result_buf, char *__buffer,
   size_t __buflen, struct rpcent **__result) __attribute__ ((__nothrow__ , __leaf__));














typedef union sigval
  {
    int sival_int;
    void *sival_ptr;
  } sigval_t;
typedef struct sigevent
  {
    sigval_t sigev_value;
    int sigev_signo;
    int sigev_notify;

    union
      {
 int _pad[((64 / sizeof (int)) - 3)];



 __pid_t _tid;

 struct
   {
     void (*_function) (sigval_t);
     pthread_attr_t *_attribute;
   } _sigev_thread;
      } _sigev_un;
  } sigevent_t;






enum
{
  SIGEV_SIGNAL = 0,

  SIGEV_NONE,

  SIGEV_THREAD,


  SIGEV_THREAD_ID = 4

};




struct netent
{
  char *n_name;
  char **n_aliases;
  int n_addrtype;
  uint32_t n_net;
};








extern int *__h_errno_location (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
extern void herror (const char *__str) __attribute__ ((__nothrow__ , __leaf__));


extern const char *hstrerror (int __err_num) __attribute__ ((__nothrow__ , __leaf__));




struct hostent
{
  char *h_name;
  char **h_aliases;
  int h_addrtype;
  int h_length;
  char **h_addr_list;



};






extern void sethostent (int __stay_open);





extern void endhostent (void);






extern struct hostent *gethostent (void);






extern struct hostent *gethostbyaddr (const void *__addr, __socklen_t __len,
          int __type);





extern struct hostent *gethostbyname (const char *__name);
extern struct hostent *gethostbyname2 (const char *__name, int __af);
extern int gethostent_r (struct hostent *__restrict __result_buf,
    char *__restrict __buf, size_t __buflen,
    struct hostent **__restrict __result,
    int *__restrict __h_errnop);

extern int gethostbyaddr_r (const void *__restrict __addr, __socklen_t __len,
       int __type,
       struct hostent *__restrict __result_buf,
       char *__restrict __buf, size_t __buflen,
       struct hostent **__restrict __result,
       int *__restrict __h_errnop);

extern int gethostbyname_r (const char *__restrict __name,
       struct hostent *__restrict __result_buf,
       char *__restrict __buf, size_t __buflen,
       struct hostent **__restrict __result,
       int *__restrict __h_errnop);

extern int gethostbyname2_r (const char *__restrict __name, int __af,
        struct hostent *__restrict __result_buf,
        char *__restrict __buf, size_t __buflen,
        struct hostent **__restrict __result,
        int *__restrict __h_errnop);
extern void setnetent (int __stay_open);





extern void endnetent (void);






extern struct netent *getnetent (void);






extern struct netent *getnetbyaddr (uint32_t __net, int __type);





extern struct netent *getnetbyname (const char *__name);
extern int getnetent_r (struct netent *__restrict __result_buf,
   char *__restrict __buf, size_t __buflen,
   struct netent **__restrict __result,
   int *__restrict __h_errnop);

extern int getnetbyaddr_r (uint32_t __net, int __type,
      struct netent *__restrict __result_buf,
      char *__restrict __buf, size_t __buflen,
      struct netent **__restrict __result,
      int *__restrict __h_errnop);

extern int getnetbyname_r (const char *__restrict __name,
      struct netent *__restrict __result_buf,
      char *__restrict __buf, size_t __buflen,
      struct netent **__restrict __result,
      int *__restrict __h_errnop);




struct servent
{
  char *s_name;
  char **s_aliases;
  int s_port;
  char *s_proto;
};






extern void setservent (int __stay_open);





extern void endservent (void);






extern struct servent *getservent (void);






extern struct servent *getservbyname (const char *__name, const char *__proto);






extern struct servent *getservbyport (int __port, const char *__proto);
extern int getservent_r (struct servent *__restrict __result_buf,
    char *__restrict __buf, size_t __buflen,
    struct servent **__restrict __result);

extern int getservbyname_r (const char *__restrict __name,
       const char *__restrict __proto,
       struct servent *__restrict __result_buf,
       char *__restrict __buf, size_t __buflen,
       struct servent **__restrict __result);

extern int getservbyport_r (int __port, const char *__restrict __proto,
       struct servent *__restrict __result_buf,
       char *__restrict __buf, size_t __buflen,
       struct servent **__restrict __result);




struct protoent
{
  char *p_name;
  char **p_aliases;
  int p_proto;
};






extern void setprotoent (int __stay_open);





extern void endprotoent (void);






extern struct protoent *getprotoent (void);





extern struct protoent *getprotobyname (const char *__name);





extern struct protoent *getprotobynumber (int __proto);
extern int getprotoent_r (struct protoent *__restrict __result_buf,
     char *__restrict __buf, size_t __buflen,
     struct protoent **__restrict __result);

extern int getprotobyname_r (const char *__restrict __name,
        struct protoent *__restrict __result_buf,
        char *__restrict __buf, size_t __buflen,
        struct protoent **__restrict __result);

extern int getprotobynumber_r (int __proto,
          struct protoent *__restrict __result_buf,
          char *__restrict __buf, size_t __buflen,
          struct protoent **__restrict __result);
extern int setnetgrent (const char *__netgroup);







extern void endnetgrent (void);
extern int getnetgrent (char **__restrict __hostp,
   char **__restrict __userp,
   char **__restrict __domainp);
extern int innetgr (const char *__netgroup, const char *__host,
      const char *__user, const char *__domain);







extern int getnetgrent_r (char **__restrict __hostp,
     char **__restrict __userp,
     char **__restrict __domainp,
     char *__restrict __buffer, size_t __buflen);
extern int rcmd (char **__restrict __ahost, unsigned short int __rport,
   const char *__restrict __locuser,
   const char *__restrict __remuser,
   const char *__restrict __cmd, int *__restrict __fd2p);
extern int rcmd_af (char **__restrict __ahost, unsigned short int __rport,
      const char *__restrict __locuser,
      const char *__restrict __remuser,
      const char *__restrict __cmd, int *__restrict __fd2p,
      sa_family_t __af);
extern int rexec (char **__restrict __ahost, int __rport,
    const char *__restrict __name,
    const char *__restrict __pass,
    const char *__restrict __cmd, int *__restrict __fd2p);
extern int rexec_af (char **__restrict __ahost, int __rport,
       const char *__restrict __name,
       const char *__restrict __pass,
       const char *__restrict __cmd, int *__restrict __fd2p,
       sa_family_t __af);
extern int ruserok (const char *__rhost, int __suser,
      const char *__remuser, const char *__locuser);
extern int ruserok_af (const char *__rhost, int __suser,
         const char *__remuser, const char *__locuser,
         sa_family_t __af);
extern int iruserok (uint32_t __raddr, int __suser,
       const char *__remuser, const char *__locuser);
extern int iruserok_af (const void *__raddr, int __suser,
   const char *__remuser, const char *__locuser,
   sa_family_t __af);
extern int rresvport (int *__alport);
extern int rresvport_af (int *__alport, sa_family_t __af);






struct addrinfo
{
  int ai_flags;
  int ai_family;
  int ai_socktype;
  int ai_protocol;
  socklen_t ai_addrlen;
  struct sockaddr *ai_addr;
  char *ai_canonname;
  struct addrinfo *ai_next;
};



struct gaicb
{
  const char *ar_name;
  const char *ar_service;
  const struct addrinfo *ar_request;
  struct addrinfo *ar_result;

  int __return;
  int __glibc_reserved[5];
};
extern int getaddrinfo (const char *__restrict __name,
   const char *__restrict __service,
   const struct addrinfo *__restrict __req,
   struct addrinfo **__restrict __pai);


extern void freeaddrinfo (struct addrinfo *__ai) __attribute__ ((__nothrow__ , __leaf__));


extern const char *gai_strerror (int __ecode) __attribute__ ((__nothrow__ , __leaf__));





extern int getnameinfo (const struct sockaddr *__restrict __sa,
   socklen_t __salen, char *__restrict __host,
   socklen_t __hostlen, char *__restrict __serv,
   socklen_t __servlen, int __flags);
extern int getaddrinfo_a (int __mode, struct gaicb *__list[__restrict],
     int __ent, struct sigevent *__restrict __sig);
extern int gai_suspend (const struct gaicb *const __list[], int __ent,
   const struct timespec *__timeout);


extern int gai_error (struct gaicb *__req) __attribute__ ((__nothrow__ , __leaf__));


extern int gai_cancel (struct gaicb *__gaicbp) __attribute__ ((__nothrow__ , __leaf__));







typedef CmIpAddr CmInetIpAddr;




typedef struct cmInetIpAddrTbl
{
   U16 count;
   CmInetIpAddr netAddr[16];
}CmInetIpAddrTbl;

typedef CmInetIpAddrTbl CmInetIpv4AddrArr;
typedef struct cmInetIpAddrArr
{
   U8 type;
   union
   {
      CmInetIpv4AddrArr ipv4AddrArr;



   } u;

} CmInetIpAddrArr;



typedef struct cmInetCmnSockAddr
{
   U32 type;
   U32 len;
   union
   {
      struct sockaddr_in addr;



   }u;
}CmInetCmnSockAddr;
typedef S32 CmInetFdType;
typedef struct pollfd CmInetPollFd;

typedef struct cmInetFd
{
   CmInetFdType fd;
   U8 blocking;
   U8 type;




}CmInetFd;

typedef fd_set CmInetFdSet;
typedef struct cmInetAddr1
{
   U16 port;
   CmInetIpAddr address;
} CmInetAddr;
typedef CmInetAddr CmInetIpv4Addr;


typedef struct cmInetMemInfo
{
   Region region;
   Pool pool;
} CmInetMemInfo;

typedef struct cmInetMCastInf
{
   CmInetIpAddr mCastAddr;
   CmInetIpAddr localAddr;
}CmInetMCastInf;



typedef struct cmInetNetAddr
{
   U8 type;
   union
   {
      CmInetIpAddr ipv4NetAddr;



   }u;
} CmInetNetAddr;
typedef struct cmInetIpv4HdrParm
{
   TknU8 proto;
   TknU8 dfBit;
   TknU8 tos;
   TknU8 ttl;




} CmInetIpv4HdrParm;
typedef struct cmInetIpHdrParm
{
   U8 type;
   union
   {
      CmInetIpv4HdrParm hdrParmIpv4;



   } u;
} CmInetIpHdrParm;
typedef struct cmInetFdSetInfo
{
   Bool initDone;
   Bool bigEndian;
   U16 arIdx;
   U32 numArElems;
   U8 ar[256];
} CmInetFdSetInfo;
typedef struct iovec CmInetIovec;



typedef struct sockaddr CmInetSockAddr;
typedef struct sockaddr_in6 CmInet6SockAddr;
typedef struct sockaddr_in CmInet4SockAddr;




typedef struct addrinfo CmInetAddrInfo;
extern S16 cmInetSocket (U8 type, CmInetFd *sockFd, U8 protocol);
extern S16 cmInetBind (CmInetFd *sockFd, CmInetAddr *myAddr);
extern S16 cmInetConnect (CmInetFd *sockFd, CmInetAddr *servAddr);
extern S16 cmInetListen (CmInetFd *sockFd, S16 backLog);
extern S16 cmInetAccept (CmInetFd *sockFd, CmInetAddr *fromAddr, CmInetFd *newSockFd)
                                                   ;
extern S16 cmInetRecvMsg (CmInetFd *sockFd, CmInetAddr *dstAddr, CmInetMemInfo *info, Buffer **mPtr, MsgLen *len, S32 flags)

                                                       ;


extern S16 cmInetSendDscpMsg (CmInetFd *sockFd, CmInetAddr *dstAddr, CmInetMemInfo *info, Buffer *mBuf, MsgLen *len, CmInetIpHdrParm *ipHdrParams, S16 flags)

                                                                        ;






extern S16 cmInetSendMsg (CmInetFd *sockFd, CmInetAddr *dstAddr, CmInetMemInfo *info, Buffer *mBuf, MsgLen *len, S16 flags)

                                          ;

extern S16 cmInetPeek (CmInetFd *sockFd, CmInetAddr *fromAddr, CmInetMemInfo *info, MsgLen dataPos, MsgLen dataLen, U8 *data)

                                                      ;

extern S16 cmInetPeekNew (CmInetFd *sockFd, CmInetAddr *fromAddr, CmInetMemInfo *info, MsgLen dataPos, MsgLen dataLen, U8 *data)

                                                      ;
extern S16 cmInetClose (CmInetFd *sockFd);
extern S16 cmInetShutdown (CmInetFd *sockFd, S32 howTo);
extern S16 cmInetSelect (CmInetFdSet *readFdS, CmInetFdSet *writeFdS, U32 *mSecTimeout, S16 *numFdS)
                                                             ;
extern S16 cmInetSetOpt (CmInetFd *sockFd, U32 level, U32 type, Ptr value)
                                        ;
extern S16 cmInetGetNumRead (CmInetFd *sockFd, U32 *dataLen);

extern S16 cmInetGetHostByName (S8 *hostName, CmInetIpAddrTbl *addrTbl);
extern S16 cmInetGetIpNodeByName (S8 *hostName, CmInetIpAddrArr *addrArr);
extern S16 cmInetAddr (S8 *asciiAddr, CmInetIpAddr *address);
extern S16 cmInetNtoa (CmInetIpAddr address, S8 **asciiAddr);
extern S16 cmInetPton (CmInetIpAddr *address, S8 *asciiAddr);







extern S16 cmInetFdSetInfoInit (CmInetFdSetInfo *fdSetInfo);
extern S16 cmInetGetFd (CmInetFdSetInfo *fdSetInfo, CmInetFdSet *fdSet, CmInetFdType *sockFd)
                                                   ;


extern S16 cmInetGetMemSize (S32 *size);
extern S16 cmInetInit (Void);
extern S16 cmInetDeInit (Void);
extern S16 cmInetGetSockName (CmInetFd *sockFd, CmInetAddr *locAddr);

extern S16 cmInetConvertStrToIpAddr (U16 len, U8 *val, CmInetNetAddr *address)
                                                                  ;
extern S16 cmInetAsciiToIpv4 (U8 numBytes, U8 *ipv4Addr, U16 len, U8 *val)
                                                     ;



extern S16 cmInetPoll (CmInetPollFd *pollFdArr,U32 idx,S16 *numFdS,U32 timeout);
extern S16 cmInetPollSetFd (CmInetFd *sockFd,CmInetPollFd *pollFdArr,S16 idx, U16 eventMask);
extern S16 cmInetPollFdIsSet (CmInetPollFd *pollFdArr, S16 idx, U16 eventMask);
extern S16 cmInetPollClearFdREvent (CmInetPollFd *pollFdArr, S16 idx, U16 eventMask);
extern S16 cmInetPollClearFdEvent (CmInetPollFd *pollFdArr,S16 idx, U16 eventMask);
extern S16 cmInetPollDelFd (CmInetPollFd *pollFdArr, S16 delIdx, S16 crntIdx);
extern S16 cmInetPollInitFdArr (CmInetPollFd *pollFdArr);
extern S16 cmInetNtop (U8 type,Void *address,S8 *asciiAddr,U32 len);





extern S32 cmInetGetAddrInfo (const S8* node, const S8* service, const CmInetAddrInfo *hints, CmInetAddrInfo **res)
                                                                                         ;
extern Void cmInetFreeAddrInfo (CmInetAddrInfo *res);
typedef CmInetIpv4Addr CmIpv4TptAddr;
typedef CmInetIpAddr CmIpv4NetAddr;


typedef U8 CmInetIpAddr6[16];


typedef struct cmInetIpv6Addr
{
   U16 port;
   CmInetIpAddr6 ipv6NetAddr;
} CmInetIpv6Addr;



typedef CmInetIpv6Addr CmIpv6TptAddr;
typedef CmInetIpAddr6 CmIpv6NetAddr;




typedef struct cmNetAddr
{
   U8 type;
   union
   {
      CmIpv4NetAddr ipv4NetAddr;
      CmIpv6NetAddr ipv6NetAddr;
   }u;
} CmNetAddr;


typedef struct _cmNetAddrTbl
{
   U16 count;
   CmNetAddr netAddr[16];
}CmNetAddrTbl;
typedef struct cmNetMCastInf
{
   CmNetAddr mCastAddr;
   CmNetAddr localAddr;
} CmNetMCastInf;







typedef struct cmTptAddr
{
   U8 type;
   union
   {
      CmIpv4TptAddr ipv4TptAddr;
      CmIpv6TptAddr ipv6TptAddr;



   }u;
} CmTptAddr;
typedef struct cmSockOpts
{
   U32 level;
   U32 option;
   union
   {





      CmNetMCastInf mCastInfo;



      CmNetAddr lclAddr;
      U32 value;
   }optVal;
}CmSockOpts;


typedef struct cmSockParam
{
   U8 listenQSize;
   U8 numOpts;
   CmSockOpts sockOpts[8];
} CmSockParam;
typedef struct cmTptParam
{
   U8 type;

   union
   {
      CmSockParam sockParam;
   } u;

} CmTptParam;



typedef struct cmIpv4HdrParm
{
   TknU8 proto;
   TknU8 dfBit;
   TknU8 tos;
   TknU8 ttl;




} CmIpv4HdrParm;
typedef struct cmIpHdrParm
{
   U8 type;
   union
   {
      CmIpv4HdrParm hdrParmIpv4;



   }u;

} CmIpHdrParm;


typedef struct cmIpv4Hdr
{
   U8 hdrVer;
   U8 tos;
   S16 length;
   U16 id;
   S16 off;
   U8 ttl;
   U8 proto;
   U16 chkSum;
   U32 srcAddr;
   U32 destAddr;

} CmIpv4Hdr;
typedef struct cmIcmpError
{
   U8 errType;
   U32 errCodeMask;

} CmIcmpError;


typedef struct cmIcmpv4Filter
{
   U8 icmpMsgFlag;
   U8 allMsg;
   U8 protocol;
   U8 num;

   CmIcmpError icmpError[5];

}CmIcmpv4Filter;
typedef struct cmIcmpFilter
{
  U8 type;
  union
  {
    CmIcmpv4Filter icmpv4Filter;



  }u;

} CmIcmpFilter;


typedef struct cmIcmpv4Hdr
{
   U8 icmpType;
   U8 icmpCode;
   U16 chkSum;

   union
   {
      U8 ihPptr;
      U32 rdrctAddr;
      struct idSeq
      {
         S16 icdId;
         S16 icdSeq;
      } u1;
      U32 ihVoid;
   } u2;

   union
   {
      struct idTime
      {
         U32 itOtime;
         U32 itRtime;
         U32 itTtime;
      } s;
      CmIpv4Hdr icmpIpHdr;
      U32 id_mask;
   } u3;

} CmIcmpv4Hdr;
extern S16 cmPkCmIpv4TptAddr (CmIpv4TptAddr *pkParam, Buffer *mBuf);
extern S16 cmPkCmNetAddrTbl (CmNetAddrTbl *pkParam, Buffer *mBuf);
extern S16 cmPkCmNetAddr (CmNetAddr *pkParam, Buffer *mBuf);
extern S16 cmPkCmTptAddr (CmTptAddr *pkParam, Buffer *mBuf);



extern S16 cmPkCmTptParam (CmTptParam *pkParam, Buffer *mBuf);
extern S16 cmUnpkCmNetAddrTbl (CmNetAddrTbl *unpkParam, Buffer *mBuf);
extern S16 cmUnpkCmIpv4TptAddr (CmIpv4TptAddr *unpkParam, Buffer *mBuf);
extern S16 cmUnpkCmNetAddr (CmNetAddr *unpkParam, Buffer *mBuf);
extern S16 cmUnpkCmTptAddr (CmTptAddr *unpkParam, Buffer *mBuf);




extern S16 cmUnpkCmTptParam (CmTptParam *unpkParam, Buffer *mBuf);


extern S16 cmPkCmIpHdrParm (CmIpHdrParm *pkParam, Buffer *mBuf);







extern S16 cmUnpkCmIpHdrParm (CmIpHdrParm *unpkParam, Buffer *mBuf);
extern S16 cmPkCmIcmpFilter (CmIcmpFilter *pkParam, Buffer *mBuf);
extern S16 cmUnpkCmIcmpFilter (CmIcmpFilter *unpkParam, Buffer *mBuf);









typedef enum enumNhuPHICH_Configphich_Duration
{
 NhuPHICH_Configphich_DurationnormalEnum,
 NhuPHICH_Configphich_DurationextendedEnum
} EnumNhuPHICH_Configphich_Duration;
typedef TknU32 NhuPHICH_Configphich_Duration;


typedef enum enumNhuPHICH_Configphich_Resource
{
 NhuPHICH_Configphich_ResourceoneSixthEnum,
 NhuPHICH_Configphich_ResourcehalfEnum,
 NhuPHICH_Configphich_ResourceoneEnum,
 NhuPHICH_Configphich_ResourcetwoEnum
} EnumNhuPHICH_Configphich_Resource;
typedef TknU32 NhuPHICH_Configphich_Resource;

typedef struct NhuPHICH_Config
{
 TknPres pres;
 NhuPHICH_Configphich_Duration phich_Duration;
 NhuPHICH_Configphich_Resource phich_Resource;
} NhuPHICH_Config;


typedef enum enumNhuMasterInfoBlockdl_Bandwidth
{
 NhuMasterInfoBlockdl_Bandwidthn6Enum,
 NhuMasterInfoBlockdl_Bandwidthn15Enum,
 NhuMasterInfoBlockdl_Bandwidthn25Enum,
 NhuMasterInfoBlockdl_Bandwidthn50Enum,
 NhuMasterInfoBlockdl_Bandwidthn75Enum,
 NhuMasterInfoBlockdl_Bandwidthn100Enum
} EnumNhuMasterInfoBlockdl_Bandwidth;
typedef TknU32 NhuMasterInfoBlockdl_Bandwidth;


typedef TknStrBSXL NhuMasterInfoBlocksystemFrameNumber;

typedef TknStrBSXL NhuMasterInfoBlockspare;
typedef struct NhuMasterInfoBlock
{
 TknPres pres;
 NhuMasterInfoBlockdl_Bandwidth dl_Bandwidth;
 NhuPHICH_Config phich_Config;
 NhuMasterInfoBlocksystemFrameNumber systemFrameNumber;
 NhuMasterInfoBlockspare spare;
} NhuMasterInfoBlock;


typedef NhuMasterInfoBlock NhuBCCH_BCH_MsgTyp;
typedef struct NhuBCCH_BCH_Msg
{
 TknPres pres;
 NhuBCCH_BCH_MsgTyp message;
} NhuBCCH_BCH_Msg;


typedef enum enumNhuAC_BarringConfigac_BarringFactor
{
 NhuAC_BarringConfigac_BarringFactorp00Enum,
 NhuAC_BarringConfigac_BarringFactorp05Enum,
 NhuAC_BarringConfigac_BarringFactorp10Enum,
 NhuAC_BarringConfigac_BarringFactorp15Enum,
 NhuAC_BarringConfigac_BarringFactorp20Enum,
 NhuAC_BarringConfigac_BarringFactorp25Enum,
 NhuAC_BarringConfigac_BarringFactorp30Enum,
 NhuAC_BarringConfigac_BarringFactorp40Enum,
 NhuAC_BarringConfigac_BarringFactorp50Enum,
 NhuAC_BarringConfigac_BarringFactorp60Enum,
 NhuAC_BarringConfigac_BarringFactorp70Enum,
 NhuAC_BarringConfigac_BarringFactorp75Enum,
 NhuAC_BarringConfigac_BarringFactorp80Enum,
 NhuAC_BarringConfigac_BarringFactorp85Enum,
 NhuAC_BarringConfigac_BarringFactorp90Enum,
 NhuAC_BarringConfigac_BarringFactorp95Enum
} EnumNhuAC_BarringConfigac_BarringFactor;
typedef TknU32 NhuAC_BarringConfigac_BarringFactor;


typedef enum enumNhuAC_BarringConfigac_BarringTime
{
 NhuAC_BarringConfigac_BarringTimes4Enum,
 NhuAC_BarringConfigac_BarringTimes8Enum,
 NhuAC_BarringConfigac_BarringTimes16Enum,
 NhuAC_BarringConfigac_BarringTimes32Enum,
 NhuAC_BarringConfigac_BarringTimes64Enum,
 NhuAC_BarringConfigac_BarringTimes128Enum,
 NhuAC_BarringConfigac_BarringTimes256Enum,
 NhuAC_BarringConfigac_BarringTimes512Enum
} EnumNhuAC_BarringConfigac_BarringTime;
typedef TknU32 NhuAC_BarringConfigac_BarringTime;


typedef TknStrBSXL NhuAC_BarringConfigac_BarringForSpecialAC;
typedef struct NhuAC_BarringConfig
{
 TknPres pres;
 NhuAC_BarringConfigac_BarringFactor ac_BarringFactor;
 NhuAC_BarringConfigac_BarringTime ac_BarringTime;
 NhuAC_BarringConfigac_BarringForSpecialAC ac_BarringForSpecialAC;
} NhuAC_BarringConfig;


typedef enum enumNhuPowerRampingParamspowerRampingStep
{
 NhuPowerRampingParamspowerRampingStepdB0Enum,
 NhuPowerRampingParamspowerRampingStepdB2Enum,
 NhuPowerRampingParamspowerRampingStepdB4Enum,
 NhuPowerRampingParamspowerRampingStepdB6Enum
} EnumNhuPowerRampingParamspowerRampingStep;
typedef TknU32 NhuPowerRampingParamspowerRampingStep;


typedef enum enumNhuPowerRampingParamspreambleInitReceivedTgtPower
{
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_120Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_118Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_116Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_114Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_112Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_110Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_108Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_106Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_104Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_102Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_100Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_98Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_96Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_94Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_92Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_90Enum
} EnumNhuPowerRampingParamspreambleInitReceivedTgtPower;
typedef TknU32 NhuPowerRampingParamspreambleInitReceivedTgtPower;

typedef struct NhuPowerRampingParams
{
 TknPres pres;
 NhuPowerRampingParamspowerRampingStep powerRampingStep;
 NhuPowerRampingParamspreambleInitReceivedTgtPower preambleInitReceivedTgtPower;
} NhuPowerRampingParams;


typedef enum enumNhuPreambleTransMax
{
 NhuPreambleTransMaxn3Enum,
 NhuPreambleTransMaxn4Enum,
 NhuPreambleTransMaxn5Enum,
 NhuPreambleTransMaxn6Enum,
 NhuPreambleTransMaxn7Enum,
 NhuPreambleTransMaxn8Enum,
 NhuPreambleTransMaxn10Enum,
 NhuPreambleTransMaxn20Enum,
 NhuPreambleTransMaxn50Enum,
 NhuPreambleTransMaxn100Enum,
 NhuPreambleTransMaxn200Enum
} EnumNhuPreambleTransMax;
typedef TknU32 NhuPreambleTransMax;


typedef enum enumNhuRACH_ConfigCmnpreambleInfonumberOfRA_Preambles
{
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn4Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn8Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn12Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn16Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn20Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn24Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn28Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn32Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn36Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn40Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn44Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn48Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn52Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn56Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn60Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn64Enum
} EnumNhuRACH_ConfigCmnpreambleInfonumberOfRA_Preambles;
typedef TknU32 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preambles;


typedef enum enumNhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupA
{
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn4Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn8Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn12Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn16Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn20Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn24Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn28Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn32Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn36Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn40Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn44Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn48Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn52Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn56Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn60Enum
} EnumNhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupA;
typedef TknU32 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupA;


typedef enum enumNhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupA
{
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupAb56Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupAb144Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupAb208Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupAb256Enum
} EnumNhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupA;
typedef TknU32 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupA;


typedef enum enumNhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupB
{
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBminusinfinityEnum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB0Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB5Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB8Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB10Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB12Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB15Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB18Enum
} EnumNhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupB;
typedef TknU32 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupB;

typedef struct NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfig
{
 TknPres pres;
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupA sizeOfRA_PreamblesGroupA;
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupA messageSizeGroupA;
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupB messagePowerOffsetGroupB;
} NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfig;

typedef struct NhuRACH_ConfigCmnpreambleInfo
{
 TknPres pres;
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preambles numberOfRA_Preambles;
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfig preamblesGroupAConfig;
} NhuRACH_ConfigCmnpreambleInfo;


typedef enum enumNhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSize
{
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf2Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf3Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf4Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf5Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf6Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf7Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf8Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf10Enum
} EnumNhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSize;
typedef TknU32 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSize;


typedef enum enumNhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimer
{
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf8Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf16Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf24Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf32Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf40Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf48Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf56Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf64Enum
} EnumNhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimer;
typedef TknU32 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimer;

typedef struct NhuRACH_ConfigCmnra_SupervisionInfo
{
 TknPres pres;
 NhuPreambleTransMax preambleTransMax;
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSize ra_RspWindowSize;
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimer mac_ContentionResolutionTimer;
} NhuRACH_ConfigCmnra_SupervisionInfo;


typedef TknU32 NhuRACH_ConfigCmnmaxHARQ_Msg3Tx;

typedef struct NhuRACH_ConfigCmn
{
 TknPres pres;
 NhuRACH_ConfigCmnpreambleInfo preambleInfo;
 NhuPowerRampingParams powerRampingParams;
 NhuRACH_ConfigCmnra_SupervisionInfo ra_SupervisionInfo;
 NhuRACH_ConfigCmnmaxHARQ_Msg3Tx maxHARQ_Msg3Tx;
} NhuRACH_ConfigCmn;


typedef enum enumNhuBCCH_ConfigmodificationPeriodCoeff
{
 NhuBCCH_ConfigmodificationPeriodCoeffn2Enum,
 NhuBCCH_ConfigmodificationPeriodCoeffn4Enum,
 NhuBCCH_ConfigmodificationPeriodCoeffn8Enum,
 NhuBCCH_ConfigmodificationPeriodCoeffn16Enum
} EnumNhuBCCH_ConfigmodificationPeriodCoeff;
typedef TknU32 NhuBCCH_ConfigmodificationPeriodCoeff;

typedef struct NhuBCCH_Config
{
 TknPres pres;
 NhuBCCH_ConfigmodificationPeriodCoeff modificationPeriodCoeff;
} NhuBCCH_Config;


typedef enum enumNhuPCCH_ConfigdefaultPagCycle
{
 NhuPCCH_ConfigdefaultPagCyclerf32Enum,
 NhuPCCH_ConfigdefaultPagCyclerf64Enum,
 NhuPCCH_ConfigdefaultPagCyclerf128Enum,
 NhuPCCH_ConfigdefaultPagCyclerf256Enum
} EnumNhuPCCH_ConfigdefaultPagCycle;
typedef TknU32 NhuPCCH_ConfigdefaultPagCycle;


typedef enum enumNhuPCCH_ConfignB
{
 NhuPCCH_ConfignBfourTEnum,
 NhuPCCH_ConfignBtwoTEnum,
 NhuPCCH_ConfignBoneTEnum,
 NhuPCCH_ConfignBhalfTEnum,
 NhuPCCH_ConfignBquarterTEnum,
 NhuPCCH_ConfignBoneEighthTEnum,
 NhuPCCH_ConfignBoneSixteenthTEnum,
 NhuPCCH_ConfignBoneThirtySecondTEnum
} EnumNhuPCCH_ConfignB;
typedef TknU32 NhuPCCH_ConfignB;

typedef struct NhuPCCH_Config
{
 TknPres pres;
 NhuPCCH_ConfigdefaultPagCycle defaultPagCycle;
 NhuPCCH_ConfignB nB;
} NhuPCCH_Config;


typedef TknU32 NhuPRACH_ConfigInfoprach_ConfigIdx;


typedef TknU8 NhuPRACH_ConfigInfohighSpeedFlag;


typedef TknU32 NhuPRACH_ConfigInfozeroCorrelationZoneConfig;


typedef TknU32 NhuPRACH_ConfigInfoprach_FreqOffset;

typedef struct NhuPRACH_ConfigInfo
{
 TknPres pres;
 NhuPRACH_ConfigInfoprach_ConfigIdx prach_ConfigIdx;
 NhuPRACH_ConfigInfohighSpeedFlag highSpeedFlag;
 NhuPRACH_ConfigInfozeroCorrelationZoneConfig zeroCorrelationZoneConfig;
 NhuPRACH_ConfigInfoprach_FreqOffset prach_FreqOffset;
} NhuPRACH_ConfigInfo;


typedef TknU32 NhuPRACH_ConfigSIBrootSequenceIdx;

typedef struct NhuPRACH_ConfigSIB
{
 TknPres pres;
 NhuPRACH_ConfigSIBrootSequenceIdx rootSequenceIdx;
 NhuPRACH_ConfigInfo prach_ConfigInfo;
} NhuPRACH_ConfigSIB;


typedef TknS32 NhuPDSCH_ConfigCmnreferenceSignalPower;


typedef TknU32 NhuPDSCH_ConfigCmnp_b;

typedef struct NhuPDSCH_ConfigCmn
{
 TknPres pres;
 NhuPDSCH_ConfigCmnreferenceSignalPower referenceSignalPower;
 NhuPDSCH_ConfigCmnp_b p_b;
} NhuPDSCH_ConfigCmn;


typedef TknU8 NhuUL_ReferenceSignalsPUSCHgroupHoppingEnabled;


typedef TknU32 NhuUL_ReferenceSignalsPUSCHgroupAssignmentPUSCH;


typedef TknU8 NhuUL_ReferenceSignalsPUSCHsequenceHoppingEnabled;


typedef TknU32 NhuUL_ReferenceSignalsPUSCHcyclicShift;

typedef struct NhuUL_ReferenceSignalsPUSCH
{
 TknPres pres;
 NhuUL_ReferenceSignalsPUSCHgroupHoppingEnabled groupHoppingEnabled;
 NhuUL_ReferenceSignalsPUSCHgroupAssignmentPUSCH groupAssignmentPUSCH;
 NhuUL_ReferenceSignalsPUSCHsequenceHoppingEnabled sequenceHoppingEnabled;
 NhuUL_ReferenceSignalsPUSCHcyclicShift cyclicShift;
} NhuUL_ReferenceSignalsPUSCH;


typedef TknU32 NhuPUSCH_ConfigCmnpusch_ConfigBasicn_SB;


typedef enum enumNhuPUSCH_ConfigCmnpusch_ConfigBasichoppingMode
{
 NhuPUSCH_ConfigCmnpusch_ConfigBasichoppingModeinterSubFrameEnum,
 NhuPUSCH_ConfigCmnpusch_ConfigBasichoppingModeintraAndInterSubFrameEnum
} EnumNhuPUSCH_ConfigCmnpusch_ConfigBasichoppingMode;
typedef TknU32 NhuPUSCH_ConfigCmnpusch_ConfigBasichoppingMode;


typedef TknU32 NhuPUSCH_ConfigCmnpusch_ConfigBasicpusch_HoppingOffset;


typedef TknU8 NhuPUSCH_ConfigCmnpusch_ConfigBasicenable64QAM;

typedef struct NhuPUSCH_ConfigCmnpusch_ConfigBasic
{
 TknPres pres;
 NhuPUSCH_ConfigCmnpusch_ConfigBasicn_SB n_SB;
 NhuPUSCH_ConfigCmnpusch_ConfigBasichoppingMode hoppingMode;
 NhuPUSCH_ConfigCmnpusch_ConfigBasicpusch_HoppingOffset pusch_HoppingOffset;
 NhuPUSCH_ConfigCmnpusch_ConfigBasicenable64QAM enable64QAM;
} NhuPUSCH_ConfigCmnpusch_ConfigBasic;

typedef struct NhuPUSCH_ConfigCmn
{
 TknPres pres;
 NhuPUSCH_ConfigCmnpusch_ConfigBasic pusch_ConfigBasic;
 NhuUL_ReferenceSignalsPUSCH ul_ReferenceSignalsPUSCH;
} NhuPUSCH_ConfigCmn;


typedef enum enumNhuPUCCH_ConfigCmndeltaPUCCH_Shift
{
 NhuPUCCH_ConfigCmndeltaPUCCH_Shiftds1Enum,
 NhuPUCCH_ConfigCmndeltaPUCCH_Shiftds2Enum,
 NhuPUCCH_ConfigCmndeltaPUCCH_Shiftds3Enum
} EnumNhuPUCCH_ConfigCmndeltaPUCCH_Shift;
typedef TknU32 NhuPUCCH_ConfigCmndeltaPUCCH_Shift;


typedef TknU32 NhuPUCCH_ConfigCmnnRB_CQI;


typedef TknU32 NhuPUCCH_ConfigCmnnCS_AN;


typedef TknU32 NhuPUCCH_ConfigCmnn1PUCCH_AN;

typedef struct NhuPUCCH_ConfigCmn
{
 TknPres pres;
 NhuPUCCH_ConfigCmndeltaPUCCH_Shift deltaPUCCH_Shift;
 NhuPUCCH_ConfigCmnnRB_CQI nRB_CQI;
 NhuPUCCH_ConfigCmnnCS_AN nCS_AN;
 NhuPUCCH_ConfigCmnn1PUCCH_AN n1PUCCH_AN;
} NhuPUCCH_ConfigCmn;


typedef enum enumNhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfig
{
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw0Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw1Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw2Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw3Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw4Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw5Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw6Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw7Enum
} EnumNhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfig;
typedef TknU32 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfig;


typedef enum enumNhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfig
{
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc0Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc1Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc2Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc3Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc4Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc5Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc6Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc7Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc8Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc9Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc10Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc11Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc12Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc13Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc14Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc15Enum
} EnumNhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfig;
typedef TknU32 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfig;


typedef TknU8 NhuSoundingRS_UL_ConfigCmnsetupackNackSRS_SimultaneousTransmission;


typedef enum enumNhuSoundingRS_UL_ConfigCmnsetupsrs_MaxUpPts
{
 NhuSoundingRS_UL_ConfigCmnsetupsrs_MaxUpPtstrueEnum
} EnumNhuSoundingRS_UL_ConfigCmnsetupsrs_MaxUpPts;
typedef TknU32 NhuSoundingRS_UL_ConfigCmnsetupsrs_MaxUpPts;

typedef struct NhuSoundingRS_UL_ConfigCmnsetup
{
 TknPres pres;
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfig srs_BandwidthConfig;
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfig srs_SubfrmConfig;
 NhuSoundingRS_UL_ConfigCmnsetupackNackSRS_SimultaneousTransmission ackNackSRS_SimultaneousTransmission;
 NhuSoundingRS_UL_ConfigCmnsetupsrs_MaxUpPts srs_MaxUpPts;
} NhuSoundingRS_UL_ConfigCmnsetup;

typedef struct NhuSoundingRS_UL_ConfigCmn
{
 TknU8 choice;
 union {
  NhuSoundingRS_UL_ConfigCmnsetup setup;
 } val;
} NhuSoundingRS_UL_ConfigCmn;


typedef enum enumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1
{
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1deltaF_2Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1deltaF0Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1deltaF2Enum
} EnumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1;
typedef TknU32 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1;


typedef enum enumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1b
{
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1bdeltaF1Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1bdeltaF3Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1bdeltaF5Enum
} EnumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1b;
typedef TknU32 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1b;


typedef enum enumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2
{
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2deltaF_2Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2deltaF0Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2deltaF1Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2deltaF2Enum
} EnumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2;
typedef TknU32 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2;


typedef enum enumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2a
{
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2adeltaF_2Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2adeltaF0Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2adeltaF2Enum
} EnumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2a;
typedef TknU32 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2a;


typedef enum enumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2b
{
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2bdeltaF_2Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2bdeltaF0Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2bdeltaF2Enum
} EnumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2b;
typedef TknU32 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2b;

typedef struct NhuDeltaFLst_PUCCH
{
 TknPres pres;
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1 deltaF_PUCCH_Format1;
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1b deltaF_PUCCH_Format1b;
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2 deltaF_PUCCH_Format2;
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2a deltaF_PUCCH_Format2a;
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2b deltaF_PUCCH_Format2b;
} NhuDeltaFLst_PUCCH;


typedef TknS32 NhuUlnkPowerCntrlCmnp0_NominalPUSCH;


typedef enum enumNhuUlnkPowerCntrlCmnalpha
{
 NhuUlnkPowerCntrlCmnalphaal0Enum,
 NhuUlnkPowerCntrlCmnalphaal04Enum,
 NhuUlnkPowerCntrlCmnalphaal05Enum,
 NhuUlnkPowerCntrlCmnalphaal06Enum,
 NhuUlnkPowerCntrlCmnalphaal07Enum,
 NhuUlnkPowerCntrlCmnalphaal08Enum,
 NhuUlnkPowerCntrlCmnalphaal09Enum,
 NhuUlnkPowerCntrlCmnalphaal1Enum
} EnumNhuUlnkPowerCntrlCmnalpha;
typedef TknU32 NhuUlnkPowerCntrlCmnalpha;


typedef TknS32 NhuUlnkPowerCntrlCmnp0_NominalPUCCH;


typedef TknS32 NhuUlnkPowerCntrlCmndeltaPreambleMsg3;

typedef struct NhuUlnkPowerCntrlCmn
{
 TknPres pres;
 NhuUlnkPowerCntrlCmnp0_NominalPUSCH p0_NominalPUSCH;
 NhuUlnkPowerCntrlCmnalpha alpha;
 NhuUlnkPowerCntrlCmnp0_NominalPUCCH p0_NominalPUCCH;
 NhuDeltaFLst_PUCCH deltaFLst_PUCCH;
 NhuUlnkPowerCntrlCmndeltaPreambleMsg3 deltaPreambleMsg3;
} NhuUlnkPowerCntrlCmn;


typedef enum enumNhuUL_CyclicPrefixLength
{
 NhuUL_CyclicPrefixLengthlen1Enum,
 NhuUL_CyclicPrefixLengthlen2Enum
} EnumNhuUL_CyclicPrefixLength;
typedef TknU32 NhuUL_CyclicPrefixLength;


typedef enum enumNhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10
{
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10deltaF_1Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10deltaF0Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10deltaF1Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10deltaF2Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10deltaF3Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10deltaF4Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10deltaF5Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10deltaF6Enum
} EnumNhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10;
typedef TknU32 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10;


typedef enum enumNhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format1bCS_r10
{
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format1bCS_r10deltaF1Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format1bCS_r10deltaF2Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format1bCS_r10spare2Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format1bCS_r10spare1Enum
} EnumNhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format1bCS_r10;
typedef TknU32 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format1bCS_r10;

typedef struct NhuUlnkPowerCntrlCmn_v1020
{
 TknPres pres;
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10 deltaF_PUCCH_Format3_r10;
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format1bCS_r10 deltaF_PUCCH_Format1bCS_r10;
} NhuUlnkPowerCntrlCmn_v1020;

typedef struct NhuRadioResourceConfigCmnSIBextaddgrp_1
{
 TknPres pres;
 NhuUlnkPowerCntrlCmn_v1020 uplinkPowerCntrlCmn_v1020;
} NhuRadioResourceConfigCmnSIBextaddgrp_1;

typedef struct NhuRadioResourceConfigCmnSIB
{
 TknPres pres;
 NhuRACH_ConfigCmn rach_ConfigCmn;
 NhuBCCH_Config bcch_Config;
 NhuPCCH_Config pcch_Config;
 NhuPRACH_ConfigSIB prach_Config;
 NhuPDSCH_ConfigCmn pdsch_ConfigCmn;
 NhuPUSCH_ConfigCmn pusch_ConfigCmn;
 NhuPUCCH_ConfigCmn pucch_ConfigCmn;
 NhuSoundingRS_UL_ConfigCmn soundingRS_UL_ConfigCmn;
 NhuUlnkPowerCntrlCmn uplinkPowerCntrlCmn;
 NhuUL_CyclicPrefixLength ul_CyclicPrefixLength;
 NhuRadioResourceConfigCmnSIBextaddgrp_1 extaddgrp_1;
} NhuRadioResourceConfigCmnSIB;


typedef enum enumNhuUE_TmrsAndConstst300
{
 NhuUE_TmrsAndConstst300ms100Enum,
 NhuUE_TmrsAndConstst300ms200Enum,
 NhuUE_TmrsAndConstst300ms300Enum,
 NhuUE_TmrsAndConstst300ms400Enum,
 NhuUE_TmrsAndConstst300ms600Enum,
 NhuUE_TmrsAndConstst300ms1000Enum,
 NhuUE_TmrsAndConstst300ms1500Enum,
 NhuUE_TmrsAndConstst300ms2000Enum
} EnumNhuUE_TmrsAndConstst300;
typedef TknU32 NhuUE_TmrsAndConstst300;


typedef enum enumNhuUE_TmrsAndConstst301
{
 NhuUE_TmrsAndConstst301ms100Enum,
 NhuUE_TmrsAndConstst301ms200Enum,
 NhuUE_TmrsAndConstst301ms300Enum,
 NhuUE_TmrsAndConstst301ms400Enum,
 NhuUE_TmrsAndConstst301ms600Enum,
 NhuUE_TmrsAndConstst301ms1000Enum,
 NhuUE_TmrsAndConstst301ms1500Enum,
 NhuUE_TmrsAndConstst301ms2000Enum
} EnumNhuUE_TmrsAndConstst301;
typedef TknU32 NhuUE_TmrsAndConstst301;


typedef enum enumNhuUE_TmrsAndConstst310
{
 NhuUE_TmrsAndConstst310ms0Enum,
 NhuUE_TmrsAndConstst310ms50Enum,
 NhuUE_TmrsAndConstst310ms100Enum,
 NhuUE_TmrsAndConstst310ms200Enum,
 NhuUE_TmrsAndConstst310ms500Enum,
 NhuUE_TmrsAndConstst310ms1000Enum,
 NhuUE_TmrsAndConstst310ms2000Enum
} EnumNhuUE_TmrsAndConstst310;
typedef TknU32 NhuUE_TmrsAndConstst310;


typedef enum enumNhuUE_TmrsAndConstsn310
{
 NhuUE_TmrsAndConstsn310n1Enum,
 NhuUE_TmrsAndConstsn310n2Enum,
 NhuUE_TmrsAndConstsn310n3Enum,
 NhuUE_TmrsAndConstsn310n4Enum,
 NhuUE_TmrsAndConstsn310n6Enum,
 NhuUE_TmrsAndConstsn310n8Enum,
 NhuUE_TmrsAndConstsn310n10Enum,
 NhuUE_TmrsAndConstsn310n20Enum
} EnumNhuUE_TmrsAndConstsn310;
typedef TknU32 NhuUE_TmrsAndConstsn310;


typedef enum enumNhuUE_TmrsAndConstst311
{
 NhuUE_TmrsAndConstst311ms1000Enum,
 NhuUE_TmrsAndConstst311ms3000Enum,
 NhuUE_TmrsAndConstst311ms5000Enum,
 NhuUE_TmrsAndConstst311ms10000Enum,
 NhuUE_TmrsAndConstst311ms15000Enum,
 NhuUE_TmrsAndConstst311ms20000Enum,
 NhuUE_TmrsAndConstst311ms30000Enum
} EnumNhuUE_TmrsAndConstst311;
typedef TknU32 NhuUE_TmrsAndConstst311;


typedef enum enumNhuUE_TmrsAndConstsn311
{
 NhuUE_TmrsAndConstsn311n1Enum,
 NhuUE_TmrsAndConstsn311n2Enum,
 NhuUE_TmrsAndConstsn311n3Enum,
 NhuUE_TmrsAndConstsn311n4Enum,
 NhuUE_TmrsAndConstsn311n5Enum,
 NhuUE_TmrsAndConstsn311n6Enum,
 NhuUE_TmrsAndConstsn311n8Enum,
 NhuUE_TmrsAndConstsn311n10Enum
} EnumNhuUE_TmrsAndConstsn311;
typedef TknU32 NhuUE_TmrsAndConstsn311;

typedef struct NhuUE_TmrsAndConsts
{
 TknPres pres;
 NhuUE_TmrsAndConstst300 t300;
 NhuUE_TmrsAndConstst301 t301;
 NhuUE_TmrsAndConstst310 t310;
 NhuUE_TmrsAndConstsn310 n310;
 NhuUE_TmrsAndConstst311 t311;
 NhuUE_TmrsAndConstsn311 n311;
} NhuUE_TmrsAndConsts;


typedef TknU32 NhuARFCN_ValueEUTRA;


typedef TknU32 NhuAdditionalSpectrumEmission;


typedef enum enumNhuMBSFN_SubfrmConfigradioframeAllocnPeriod
{
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriodn1Enum,
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriodn2Enum,
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriodn4Enum,
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriodn8Enum,
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriodn16Enum,
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriodn32Enum
} EnumNhuMBSFN_SubfrmConfigradioframeAllocnPeriod;
typedef TknU32 NhuMBSFN_SubfrmConfigradioframeAllocnPeriod;


typedef TknU32 NhuMBSFN_SubfrmConfigradioframeAllocnOffset;


typedef TknStrBSXL NhuMBSFN_SubfrmConfigsubframeAllocnoneFrame;

typedef TknStrBSXL NhuMBSFN_SubfrmConfigsubframeAllocnfourFrames;
typedef struct NhuMBSFN_SubfrmConfigsubframeAllocn
{
 TknU8 choice;
 union {
  NhuMBSFN_SubfrmConfigsubframeAllocnoneFrame oneFrame;
  NhuMBSFN_SubfrmConfigsubframeAllocnfourFrames fourFrames;
 } val;
} NhuMBSFN_SubfrmConfigsubframeAllocn;

typedef struct NhuMBSFN_SubfrmConfig
{
 TknPres pres;
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriod radioframeAllocnPeriod;
 NhuMBSFN_SubfrmConfigradioframeAllocnOffset radioframeAllocnOffset;
 NhuMBSFN_SubfrmConfigsubframeAllocn subframeAllocn;
} NhuMBSFN_SubfrmConfig;

typedef struct NhuMBSFN_SubfrmConfigLst
{
 TknU16 noComp;
 NhuMBSFN_SubfrmConfig *member;
}NhuMBSFN_SubfrmConfigLst;


typedef enum enumNhuTimeAlignmentTimer
{
 NhuTimeAlignmentTimersf500Enum,
 NhuTimeAlignmentTimersf750Enum,
 NhuTimeAlignmentTimersf1280Enum,
 NhuTimeAlignmentTimersf1920Enum,
 NhuTimeAlignmentTimersf2560Enum,
 NhuTimeAlignmentTimersf5120Enum,
 NhuTimeAlignmentTimersf10240Enum,
 NhuTimeAlignmentTimerinfinityEnum
} EnumNhuTimeAlignmentTimer;
typedef TknU32 NhuTimeAlignmentTimer;


typedef TknU8 NhuSysInfoBlockTyp2ac_BarringInfoac_BarringForEmergency;

typedef struct NhuSysInfoBlockTyp2ac_BarringInfo
{
 TknPres pres;
 NhuSysInfoBlockTyp2ac_BarringInfoac_BarringForEmergency ac_BarringForEmergency;
 NhuAC_BarringConfig ac_BarringForMO_Signalling;
 NhuAC_BarringConfig ac_BarringForMO_Data;
} NhuSysInfoBlockTyp2ac_BarringInfo;


typedef enum enumNhuSysInfoBlockTyp2freqInfoul_Bandwidth
{
 NhuSysInfoBlockTyp2freqInfoul_Bandwidthn6Enum,
 NhuSysInfoBlockTyp2freqInfoul_Bandwidthn15Enum,
 NhuSysInfoBlockTyp2freqInfoul_Bandwidthn25Enum,
 NhuSysInfoBlockTyp2freqInfoul_Bandwidthn50Enum,
 NhuSysInfoBlockTyp2freqInfoul_Bandwidthn75Enum,
 NhuSysInfoBlockTyp2freqInfoul_Bandwidthn100Enum
} EnumNhuSysInfoBlockTyp2freqInfoul_Bandwidth;
typedef TknU32 NhuSysInfoBlockTyp2freqInfoul_Bandwidth;

typedef struct NhuSysInfoBlockTyp2freqInfo
{
 TknPres pres;
 NhuARFCN_ValueEUTRA ul_CarrierFreq;
 NhuSysInfoBlockTyp2freqInfoul_Bandwidth ul_Bandwidth;
 NhuAdditionalSpectrumEmission additionalSpectrumEmission;
} NhuSysInfoBlockTyp2freqInfo;


typedef TknStrOSXL NhuSysInfoBlockTyp2lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp2extaddgrp_1
{
 TknPres pres;
 NhuAC_BarringConfig ssac_BarringForMMTEL_Voice_r9;
 NhuAC_BarringConfig ssac_BarringForMMTEL_Video_r9;
} NhuSysInfoBlockTyp2extaddgrp_1;

typedef struct NhuSysInfoBlockTyp2extaddgrp_2
{
 TknPres pres;
 NhuAC_BarringConfig ac_BarringForCSFB_r10;
} NhuSysInfoBlockTyp2extaddgrp_2;

typedef struct NhuSysInfoBlockTyp2
{
 TknPres pres;
 NhuSysInfoBlockTyp2ac_BarringInfo ac_BarringInfo;
 NhuRadioResourceConfigCmnSIB radioResourceConfigCmn;
 NhuUE_TmrsAndConsts ue_TmrsAndConsts;
 NhuSysInfoBlockTyp2freqInfo freqInfo;
 NhuMBSFN_SubfrmConfigLst mbsfn_SubfrmConfigLst;
 NhuTimeAlignmentTimer timeAlignmentTimerCmn;
 NhuSysInfoBlockTyp2lateNonCriticalExtn lateNonCriticalExtn;
 NhuSysInfoBlockTyp2extaddgrp_1 extaddgrp_1;
 NhuSysInfoBlockTyp2extaddgrp_2 extaddgrp_2;
} NhuSysInfoBlockTyp2;


typedef enum enumNhuMobilityStateParamst_Evaluation
{
 NhuMobilityStateParamst_Evaluations30Enum,
 NhuMobilityStateParamst_Evaluations60Enum,
 NhuMobilityStateParamst_Evaluations120Enum,
 NhuMobilityStateParamst_Evaluations180Enum,
 NhuMobilityStateParamst_Evaluations240Enum,
 NhuMobilityStateParamst_Evaluationspare3Enum,
 NhuMobilityStateParamst_Evaluationspare2Enum,
 NhuMobilityStateParamst_Evaluationspare1Enum
} EnumNhuMobilityStateParamst_Evaluation;
typedef TknU32 NhuMobilityStateParamst_Evaluation;


typedef enum enumNhuMobilityStateParamst_HystNormal
{
 NhuMobilityStateParamst_HystNormals30Enum,
 NhuMobilityStateParamst_HystNormals60Enum,
 NhuMobilityStateParamst_HystNormals120Enum,
 NhuMobilityStateParamst_HystNormals180Enum,
 NhuMobilityStateParamst_HystNormals240Enum,
 NhuMobilityStateParamst_HystNormalspare3Enum,
 NhuMobilityStateParamst_HystNormalspare2Enum,
 NhuMobilityStateParamst_HystNormalspare1Enum
} EnumNhuMobilityStateParamst_HystNormal;
typedef TknU32 NhuMobilityStateParamst_HystNormal;


typedef TknU32 NhuMobilityStateParamsn_CellChangeMedium;


typedef TknU32 NhuMobilityStateParamsn_CellChangeHigh;

typedef struct NhuMobilityStateParams
{
 TknPres pres;
 NhuMobilityStateParamst_Evaluation t_Evaluation;
 NhuMobilityStateParamst_HystNormal t_HystNormal;
 NhuMobilityStateParamsn_CellChangeMedium n_CellChangeMedium;
 NhuMobilityStateParamsn_CellChangeHigh n_CellChangeHigh;
} NhuMobilityStateParams;


typedef TknU32 NhuReselectionThreshold;


typedef TknU32 NhuCellReselectionPriority;


typedef TknS32 NhuQ_RxLevMin;


typedef TknS32 NhuP_Max;


typedef enum enumNhuAllowedMeasBandwidth
{
 NhuAllowedMeasBandwidthmbw6Enum,
 NhuAllowedMeasBandwidthmbw15Enum,
 NhuAllowedMeasBandwidthmbw25Enum,
 NhuAllowedMeasBandwidthmbw50Enum,
 NhuAllowedMeasBandwidthmbw75Enum,
 NhuAllowedMeasBandwidthmbw100Enum
} EnumNhuAllowedMeasBandwidth;
typedef TknU32 NhuAllowedMeasBandwidth;


typedef TknU8 NhuPresenceAntennaPort1;


typedef TknStrBSXL NhuNeighCellConfig;

typedef TknU32 NhuT_Reselection;


typedef enum enumNhuSpeedStateScaleFactorssf_Medium
{
 NhuSpeedStateScaleFactorssf_MediumoDot25Enum,
 NhuSpeedStateScaleFactorssf_MediumoDot5Enum,
 NhuSpeedStateScaleFactorssf_MediumoDot75Enum,
 NhuSpeedStateScaleFactorssf_MediumlDot0Enum
} EnumNhuSpeedStateScaleFactorssf_Medium;
typedef TknU32 NhuSpeedStateScaleFactorssf_Medium;


typedef enum enumNhuSpeedStateScaleFactorssf_High
{
 NhuSpeedStateScaleFactorssf_HighoDot25Enum,
 NhuSpeedStateScaleFactorssf_HighoDot5Enum,
 NhuSpeedStateScaleFactorssf_HighoDot75Enum,
 NhuSpeedStateScaleFactorssf_HighlDot0Enum
} EnumNhuSpeedStateScaleFactorssf_High;
typedef TknU32 NhuSpeedStateScaleFactorssf_High;

typedef struct NhuSpeedStateScaleFactors
{
 TknPres pres;
 NhuSpeedStateScaleFactorssf_Medium sf_Medium;
 NhuSpeedStateScaleFactorssf_High sf_High;
} NhuSpeedStateScaleFactors;


typedef TknU32 NhuReselectionThresholdQ_r9;


typedef TknS32 NhuQ_QualMin_r9;


typedef enum enumNhuSysInfoBlockTyp3cellReselectionInfoCmnq_Hyst
{
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB0Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB1Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB2Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB3Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB4Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB5Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB6Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB8Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB10Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB12Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB14Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB16Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB18Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB20Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB22Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB24Enum
} EnumNhuSysInfoBlockTyp3cellReselectionInfoCmnq_Hyst;
typedef TknU32 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_Hyst;


typedef enum enumNhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_Medium
{
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_MediumdB_6Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_MediumdB_4Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_MediumdB_2Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_MediumdB0Enum
} EnumNhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_Medium;
typedef TknU32 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_Medium;


typedef enum enumNhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_High
{
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_HighdB_6Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_HighdB_4Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_HighdB_2Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_HighdB0Enum
} EnumNhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_High;
typedef TknU32 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_High;

typedef struct NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSF
{
 TknPres pres;
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_Medium sf_Medium;
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_High sf_High;
} NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSF;

typedef struct NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionPars
{
 TknPres pres;
 NhuMobilityStateParams mobilityStateParams;
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSF q_HystSF;
} NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionPars;

typedef struct NhuSysInfoBlockTyp3cellReselectionInfoCmn
{
 TknPres pres;
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_Hyst q_Hyst;
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionPars speedStateReselectionPars;
} NhuSysInfoBlockTyp3cellReselectionInfoCmn;

typedef struct NhuSysInfoBlockTyp3cellReselectionServingFreqInfo
{
 TknPres pres;
 NhuReselectionThreshold s_NonIntraSearch;
 NhuReselectionThreshold threshServingLow;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuSysInfoBlockTyp3cellReselectionServingFreqInfo;

typedef struct NhuSysInfoBlockTyp3intraFreqCellReselectionInfo
{
 TknPres pres;
 NhuQ_RxLevMin q_RxLevMin;
 NhuP_Max p_Max;
 NhuReselectionThreshold s_IntraSearch;
 NhuAllowedMeasBandwidth allowedMeasBandwidth;
 NhuPresenceAntennaPort1 presenceAntennaPort1;
 NhuNeighCellConfig neighCellConfig;
 NhuT_Reselection t_ReselectionEUTRA;
 NhuSpeedStateScaleFactors t_ReselectionEUTRA_SF;
} NhuSysInfoBlockTyp3intraFreqCellReselectionInfo;


typedef TknStrOSXL NhuSysInfoBlockTyp3lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp3extaddgrp_1s_IntraSearch_v920
{
 TknPres pres;
 NhuReselectionThreshold s_IntraSearchP_r9;
 NhuReselectionThresholdQ_r9 s_IntraSearchQ_r9;
} NhuSysInfoBlockTyp3extaddgrp_1s_IntraSearch_v920;

typedef struct NhuSysInfoBlockTyp3extaddgrp_1s_NonIntraSearch_v920
{
 TknPres pres;
 NhuReselectionThreshold s_NonIntraSearchP_r9;
 NhuReselectionThresholdQ_r9 s_NonIntraSearchQ_r9;
} NhuSysInfoBlockTyp3extaddgrp_1s_NonIntraSearch_v920;

typedef struct NhuSysInfoBlockTyp3extaddgrp_1
{
 TknPres pres;
 NhuSysInfoBlockTyp3extaddgrp_1s_IntraSearch_v920 s_IntraSearch_v920;
 NhuSysInfoBlockTyp3extaddgrp_1s_NonIntraSearch_v920 s_NonIntraSearch_v920;
 NhuQ_QualMin_r9 q_QualMin_r9;
 NhuReselectionThresholdQ_r9 threshServingLowQ_r9;
} NhuSysInfoBlockTyp3extaddgrp_1;

typedef struct NhuSysInfoBlockTyp3extaddgrp_2
{
 TknPres pres;
 NhuQ_QualMin_r9 q_QualMinWB_r11;
} NhuSysInfoBlockTyp3extaddgrp_2;

typedef struct NhuSysInfoBlockTyp3
{
 TknPres pres;
 NhuSysInfoBlockTyp3cellReselectionInfoCmn cellReselectionInfoCmn;
 NhuSysInfoBlockTyp3cellReselectionServingFreqInfo cellReselectionServingFreqInfo;
 NhuSysInfoBlockTyp3intraFreqCellReselectionInfo intraFreqCellReselectionInfo;
 NhuSysInfoBlockTyp3lateNonCriticalExtn lateNonCriticalExtn;
 NhuSysInfoBlockTyp3extaddgrp_1 extaddgrp_1;
 NhuSysInfoBlockTyp3extaddgrp_2 extaddgrp_2;
} NhuSysInfoBlockTyp3;


typedef TknU32 NhuPhysCellId;


typedef enum enumNhuQ_OffsetRange
{
 NhuQ_OffsetRangedB_24Enum,
 NhuQ_OffsetRangedB_22Enum,
 NhuQ_OffsetRangedB_20Enum,
 NhuQ_OffsetRangedB_18Enum,
 NhuQ_OffsetRangedB_16Enum,
 NhuQ_OffsetRangedB_14Enum,
 NhuQ_OffsetRangedB_12Enum,
 NhuQ_OffsetRangedB_10Enum,
 NhuQ_OffsetRangedB_8Enum,
 NhuQ_OffsetRangedB_6Enum,
 NhuQ_OffsetRangedB_5Enum,
 NhuQ_OffsetRangedB_4Enum,
 NhuQ_OffsetRangedB_3Enum,
 NhuQ_OffsetRangedB_2Enum,
 NhuQ_OffsetRangedB_1Enum,
 NhuQ_OffsetRangedB0Enum,
 NhuQ_OffsetRangedB1Enum,
 NhuQ_OffsetRangedB2Enum,
 NhuQ_OffsetRangedB3Enum,
 NhuQ_OffsetRangedB4Enum,
 NhuQ_OffsetRangedB5Enum,
 NhuQ_OffsetRangedB6Enum,
 NhuQ_OffsetRangedB8Enum,
 NhuQ_OffsetRangedB10Enum,
 NhuQ_OffsetRangedB12Enum,
 NhuQ_OffsetRangedB14Enum,
 NhuQ_OffsetRangedB16Enum,
 NhuQ_OffsetRangedB18Enum,
 NhuQ_OffsetRangedB20Enum,
 NhuQ_OffsetRangedB22Enum,
 NhuQ_OffsetRangedB24Enum
} EnumNhuQ_OffsetRange;
typedef TknU32 NhuQ_OffsetRange;

typedef struct NhuIntraFreqNeighCellInfo
{
 TknPres pres;
 NhuPhysCellId physCellId;
 NhuQ_OffsetRange q_OffsetCell;
} NhuIntraFreqNeighCellInfo;

typedef struct NhuIntraFreqNeighCellLst
{
 TknU16 noComp;
 NhuIntraFreqNeighCellInfo *member;
}NhuIntraFreqNeighCellLst;


typedef enum enumNhuPhysCellIdRangerange
{
 NhuPhysCellIdRangerangen4Enum,
 NhuPhysCellIdRangerangen8Enum,
 NhuPhysCellIdRangerangen12Enum,
 NhuPhysCellIdRangerangen16Enum,
 NhuPhysCellIdRangerangen24Enum,
 NhuPhysCellIdRangerangen32Enum,
 NhuPhysCellIdRangerangen48Enum,
 NhuPhysCellIdRangerangen64Enum,
 NhuPhysCellIdRangerangen84Enum,
 NhuPhysCellIdRangerangen96Enum,
 NhuPhysCellIdRangerangen128Enum,
 NhuPhysCellIdRangerangen168Enum,
 NhuPhysCellIdRangerangen252Enum,
 NhuPhysCellIdRangerangen504Enum,
 NhuPhysCellIdRangerangespare2Enum,
 NhuPhysCellIdRangerangespare1Enum
} EnumNhuPhysCellIdRangerange;
typedef TknU32 NhuPhysCellIdRangerange;

typedef struct NhuPhysCellIdRange
{
 TknPres pres;
 NhuPhysCellId start;
 NhuPhysCellIdRangerange range;
} NhuPhysCellIdRange;

typedef struct NhuIntraFreqBlackCellLst
{
 TknU16 noComp;
 NhuPhysCellIdRange *member;
}NhuIntraFreqBlackCellLst;


typedef TknStrOSXL NhuSysInfoBlockTyp4lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp4
{
 TknPres pres;
 NhuIntraFreqNeighCellLst intraFreqNeighCellLst;
 NhuIntraFreqBlackCellLst intraFreqBlackCellLst;
 NhuPhysCellIdRange csg_PhysCellIdRange;
 NhuSysInfoBlockTyp4lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp4;

typedef struct NhuInterFreqNeighCellInfo
{
 TknPres pres;
 NhuPhysCellId physCellId;
 NhuQ_OffsetRange q_OffsetCell;
} NhuInterFreqNeighCellInfo;

typedef struct NhuInterFreqNeighCellLst
{
 TknU16 noComp;
 NhuInterFreqNeighCellInfo *member;
}NhuInterFreqNeighCellLst;

typedef struct NhuInterFreqBlackCellLst
{
 TknU16 noComp;
 NhuPhysCellIdRange *member;
}NhuInterFreqBlackCellLst;

typedef struct NhuInterFreqCarrierFreqInfoextaddgrp_1threshX_Q_r9
{
 TknPres pres;
 NhuReselectionThresholdQ_r9 threshX_HighQ_r9;
 NhuReselectionThresholdQ_r9 threshX_LowQ_r9;
} NhuInterFreqCarrierFreqInfoextaddgrp_1threshX_Q_r9;

typedef struct NhuInterFreqCarrierFreqInfoextaddgrp_1
{
 TknPres pres;
 NhuQ_QualMin_r9 q_QualMin_r9;
 NhuInterFreqCarrierFreqInfoextaddgrp_1threshX_Q_r9 threshX_Q_r9;
} NhuInterFreqCarrierFreqInfoextaddgrp_1;

typedef struct NhuInterFreqCarrierFreqInfoextaddgrp_2
{
 TknPres pres;
 NhuQ_QualMin_r9 q_QualMinWB_r11;
} NhuInterFreqCarrierFreqInfoextaddgrp_2;

typedef struct NhuInterFreqCarrierFreqInfo
{
 TknPres pres;
 NhuARFCN_ValueEUTRA dl_CarrierFreq;
 NhuQ_RxLevMin q_RxLevMin;
 NhuP_Max p_Max;
 NhuT_Reselection t_ReselectionEUTRA;
 NhuSpeedStateScaleFactors t_ReselectionEUTRA_SF;
 NhuReselectionThreshold threshX_High;
 NhuReselectionThreshold threshX_Low;
 NhuAllowedMeasBandwidth allowedMeasBandwidth;
 NhuPresenceAntennaPort1 presenceAntennaPort1;
 NhuCellReselectionPriority cellReselectionPriority;
 NhuNeighCellConfig neighCellConfig;
 NhuQ_OffsetRange q_OffsetFreq;
 NhuInterFreqNeighCellLst interFreqNeighCellLst;
 NhuInterFreqBlackCellLst interFreqBlackCellLst;
 NhuInterFreqCarrierFreqInfoextaddgrp_1 extaddgrp_1;
 NhuInterFreqCarrierFreqInfoextaddgrp_2 extaddgrp_2;
} NhuInterFreqCarrierFreqInfo;

typedef struct NhuInterFreqCarrierFreqLst
{
 TknU16 noComp;
 NhuInterFreqCarrierFreqInfo *member;
}NhuInterFreqCarrierFreqLst;


typedef TknStrOSXL NhuSysInfoBlockTyp5lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp5
{
 TknPres pres;
 NhuInterFreqCarrierFreqLst interFreqCarrierFreqLst;
 NhuSysInfoBlockTyp5lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp5;


typedef TknU32 NhuARFCN_ValueUTRA;


typedef TknS32 NhuCarrierFreqUTRA_FDDq_RxLevMin;


typedef TknS32 NhuCarrierFreqUTRA_FDDp_MaxUTRA;


typedef TknS32 NhuCarrierFreqUTRA_FDDq_QualMin;

typedef struct NhuCarrierFreqUTRA_FDDextaddgrp_1threshX_Q_r9
{
 TknPres pres;
 NhuReselectionThresholdQ_r9 threshX_HighQ_r9;
 NhuReselectionThresholdQ_r9 threshX_LowQ_r9;
} NhuCarrierFreqUTRA_FDDextaddgrp_1threshX_Q_r9;

typedef struct NhuCarrierFreqUTRA_FDDextaddgrp_1
{
 TknPres pres;
 NhuCarrierFreqUTRA_FDDextaddgrp_1threshX_Q_r9 threshX_Q_r9;
} NhuCarrierFreqUTRA_FDDextaddgrp_1;

typedef struct NhuCarrierFreqUTRA_FDD
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq;
 NhuCellReselectionPriority cellReselectionPriority;
 NhuReselectionThreshold threshX_High;
 NhuReselectionThreshold threshX_Low;
 NhuCarrierFreqUTRA_FDDq_RxLevMin q_RxLevMin;
 NhuCarrierFreqUTRA_FDDp_MaxUTRA p_MaxUTRA;
 NhuCarrierFreqUTRA_FDDq_QualMin q_QualMin;
 NhuCarrierFreqUTRA_FDDextaddgrp_1 extaddgrp_1;
} NhuCarrierFreqUTRA_FDD;

typedef struct NhuCarrierFreqLstUTRA_FDD
{
 TknU16 noComp;
 NhuCarrierFreqUTRA_FDD *member;
}NhuCarrierFreqLstUTRA_FDD;


typedef TknS32 NhuCarrierFreqUTRA_TDDq_RxLevMin;


typedef TknS32 NhuCarrierFreqUTRA_TDDp_MaxUTRA;

typedef struct NhuCarrierFreqUTRA_TDD
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq;
 NhuCellReselectionPriority cellReselectionPriority;
 NhuReselectionThreshold threshX_High;
 NhuReselectionThreshold threshX_Low;
 NhuCarrierFreqUTRA_TDDq_RxLevMin q_RxLevMin;
 NhuCarrierFreqUTRA_TDDp_MaxUTRA p_MaxUTRA;
} NhuCarrierFreqUTRA_TDD;

typedef struct NhuCarrierFreqLstUTRA_TDD
{
 TknU16 noComp;
 NhuCarrierFreqUTRA_TDD *member;
}NhuCarrierFreqLstUTRA_TDD;


typedef TknStrOSXL NhuSysInfoBlockTyp6lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp6
{
 TknPres pres;
 NhuCarrierFreqLstUTRA_FDD carrierFreqLstUTRA_FDD;
 NhuCarrierFreqLstUTRA_TDD carrierFreqLstUTRA_TDD;
 NhuT_Reselection t_ReselectionUTRA;
 NhuSpeedStateScaleFactors t_ReselectionUTRA_SF;
 NhuSysInfoBlockTyp6lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp6;


typedef TknU32 NhuARFCN_ValueGERAN;


typedef enum enumNhuBandIndicatorGERAN
{
 NhuBandIndicatorGERANdcs1800Enum,
 NhuBandIndicatorGERANpcs1900Enum
} EnumNhuBandIndicatorGERAN;
typedef TknU32 NhuBandIndicatorGERAN;

typedef struct NhuExplicitLstOfARFCNs
{
 TknU16 noComp;
 NhuARFCN_ValueGERAN *member;
}NhuExplicitLstOfARFCNs;


typedef TknU32 NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNsarfcn_Spacing;


typedef TknU32 NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNsnumberOfFollowingARFCNs;

typedef struct NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNs
{
 TknPres pres;
 NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNsarfcn_Spacing arfcn_Spacing;
 NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNsnumberOfFollowingARFCNs numberOfFollowingARFCNs;
} NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNs;


typedef TknStrOSXL NhuCarrierFreqsGERANfollowingARFCNsvariableBitMapOfARFCNs;
typedef struct NhuCarrierFreqsGERANfollowingARFCNs
{
 TknU8 choice;
 union {
  NhuExplicitLstOfARFCNs explicitLstOfARFCNs;
  NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNs equallySpacedARFCNs;
  NhuCarrierFreqsGERANfollowingARFCNsvariableBitMapOfARFCNs variableBitMapOfARFCNs;
 } val;
} NhuCarrierFreqsGERANfollowingARFCNs;

typedef struct NhuCarrierFreqsGERAN
{
 TknPres pres;
 NhuARFCN_ValueGERAN startingARFCN;
 NhuBandIndicatorGERAN bandIndicator;
 NhuCarrierFreqsGERANfollowingARFCNs followingARFCNs;
} NhuCarrierFreqsGERAN;


typedef TknStrBSXL NhuCarrierFreqsInfoGERANcommonInfoncc_Permitted;

typedef TknU32 NhuCarrierFreqsInfoGERANcommonInfoq_RxLevMin;


typedef TknU32 NhuCarrierFreqsInfoGERANcommonInfop_MaxGERAN;

typedef struct NhuCarrierFreqsInfoGERANcommonInfo
{
 TknPres pres;
 NhuCellReselectionPriority cellReselectionPriority;
 NhuCarrierFreqsInfoGERANcommonInfoncc_Permitted ncc_Permitted;
 NhuCarrierFreqsInfoGERANcommonInfoq_RxLevMin q_RxLevMin;
 NhuCarrierFreqsInfoGERANcommonInfop_MaxGERAN p_MaxGERAN;
 NhuReselectionThreshold threshX_High;
 NhuReselectionThreshold threshX_Low;
} NhuCarrierFreqsInfoGERANcommonInfo;

typedef struct NhuCarrierFreqsInfoGERAN
{
 TknPres pres;
 NhuCarrierFreqsGERAN carrierFreqs;
 NhuCarrierFreqsInfoGERANcommonInfo commonInfo;
} NhuCarrierFreqsInfoGERAN;

typedef struct NhuCarrierFreqsInfoLstGERAN
{
 TknU16 noComp;
 NhuCarrierFreqsInfoGERAN *member;
}NhuCarrierFreqsInfoLstGERAN;


typedef TknStrOSXL NhuSysInfoBlockTyp7lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp7
{
 TknPres pres;
 NhuT_Reselection t_ReselectionGERAN;
 NhuSpeedStateScaleFactors t_ReselectionGERAN_SF;
 NhuCarrierFreqsInfoLstGERAN carrierFreqsInfoLst;
 NhuSysInfoBlockTyp7lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp7;


typedef TknU8 NhuSysTimeInfoCDMA2000cdma_EUTRA_Synchronisation;


typedef TknStrBSXL NhuSysTimeInfoCDMA2000cdma_SysTimesynchronousSysTime;

typedef TknStrBSXL NhuSysTimeInfoCDMA2000cdma_SysTimeasynchronousSysTime;
typedef struct NhuSysTimeInfoCDMA2000cdma_SysTime
{
 TknU8 choice;
 union {
  NhuSysTimeInfoCDMA2000cdma_SysTimesynchronousSysTime synchronousSysTime;
  NhuSysTimeInfoCDMA2000cdma_SysTimeasynchronousSysTime asynchronousSysTime;
 } val;
} NhuSysTimeInfoCDMA2000cdma_SysTime;

typedef struct NhuSysTimeInfoCDMA2000
{
 TknPres pres;
 NhuSysTimeInfoCDMA2000cdma_EUTRA_Synchronisation cdma_EUTRA_Synchronisation;
 NhuSysTimeInfoCDMA2000cdma_SysTime cdma_SysTime;
} NhuSysTimeInfoCDMA2000;


typedef TknU32 NhuPreRegistrationZoneIdHRPD;

typedef struct NhuSecondaryPreRegistrationZoneIdLstHRPD
{
 TknU16 noComp;
 NhuPreRegistrationZoneIdHRPD *member;
}NhuSecondaryPreRegistrationZoneIdLstHRPD;


typedef TknU8 NhuPreRegistrationInfoHRPDpreRegistrationAllowed;

typedef struct NhuPreRegistrationInfoHRPD
{
 TknPres pres;
 NhuPreRegistrationInfoHRPDpreRegistrationAllowed preRegistrationAllowed;
 NhuPreRegistrationZoneIdHRPD preRegistrationZoneId;
 NhuSecondaryPreRegistrationZoneIdLstHRPD secondaryPreRegistrationZoneIdLst;
} NhuPreRegistrationInfoHRPD;


typedef enum enumNhuBandclassCDMA2000
{
 NhuBandclassCDMA2000bc0Enum,
 NhuBandclassCDMA2000bc1Enum,
 NhuBandclassCDMA2000bc2Enum,
 NhuBandclassCDMA2000bc3Enum,
 NhuBandclassCDMA2000bc4Enum,
 NhuBandclassCDMA2000bc5Enum,
 NhuBandclassCDMA2000bc6Enum,
 NhuBandclassCDMA2000bc7Enum,
 NhuBandclassCDMA2000bc8Enum,
 NhuBandclassCDMA2000bc9Enum,
 NhuBandclassCDMA2000bc10Enum,
 NhuBandclassCDMA2000bc11Enum,
 NhuBandclassCDMA2000bc12Enum,
 NhuBandclassCDMA2000bc13Enum,
 NhuBandclassCDMA2000bc14Enum,
 NhuBandclassCDMA2000bc15Enum,
 NhuBandclassCDMA2000bc16Enum,
 NhuBandclassCDMA2000bc17Enum,
 NhuBandclassCDMA2000bc18_v9a0Enum,
 NhuBandclassCDMA2000bc19_v9a0Enum,
 NhuBandclassCDMA2000bc20_v9a0Enum,
 NhuBandclassCDMA2000bc21_v9a0Enum,
 NhuBandclassCDMA2000spare10Enum,
 NhuBandclassCDMA2000spare9Enum,
 NhuBandclassCDMA2000spare8Enum,
 NhuBandclassCDMA2000spare7Enum,
 NhuBandclassCDMA2000spare6Enum,
 NhuBandclassCDMA2000spare5Enum,
 NhuBandclassCDMA2000spare4Enum,
 NhuBandclassCDMA2000spare3Enum,
 NhuBandclassCDMA2000spare2Enum,
 NhuBandclassCDMA2000spare1Enum
} EnumNhuBandclassCDMA2000;
typedef TknU32 NhuBandclassCDMA2000;


typedef TknU32 NhuBandClassInfoCDMA2000threshX_High;


typedef TknU32 NhuBandClassInfoCDMA2000threshX_Low;

typedef struct NhuBandClassInfoCDMA2000
{
 TknPres pres;
 NhuBandclassCDMA2000 bandClass;
 NhuCellReselectionPriority cellReselectionPriority;
 NhuBandClassInfoCDMA2000threshX_High threshX_High;
 NhuBandClassInfoCDMA2000threshX_Low threshX_Low;
} NhuBandClassInfoCDMA2000;

typedef struct NhuBandClassLstCDMA2000
{
 TknU16 noComp;
 NhuBandClassInfoCDMA2000 *member;
}NhuBandClassLstCDMA2000;


typedef TknU32 NhuARFCN_ValueCDMA2000;


typedef TknU32 NhuPhysCellIdCDMA2000;

typedef struct NhuPhysCellIdLstCDMA2000
{
 TknU16 noComp;
 NhuPhysCellIdCDMA2000 *member;
}NhuPhysCellIdLstCDMA2000;

typedef struct NhuNeighCellsPerBandclassCDMA2000
{
 TknPres pres;
 NhuARFCN_ValueCDMA2000 arfcn;
 NhuPhysCellIdLstCDMA2000 physCellIdLst;
} NhuNeighCellsPerBandclassCDMA2000;

typedef struct NhuNeighCellsPerBandclassLstCDMA2000
{
 TknU16 noComp;
 NhuNeighCellsPerBandclassCDMA2000 *member;
}NhuNeighCellsPerBandclassLstCDMA2000;

typedef struct NhuNeighCellCDMA2000
{
 TknPres pres;
 NhuBandclassCDMA2000 bandClass;
 NhuNeighCellsPerBandclassLstCDMA2000 neighCellsPerFreqLst;
} NhuNeighCellCDMA2000;

typedef struct NhuNeighCellLstCDMA2000
{
 TknU16 noComp;
 NhuNeighCellCDMA2000 *member;
}NhuNeighCellLstCDMA2000;

typedef struct NhuCellReselectionParamsCDMA2000
{
 TknPres pres;
 NhuBandClassLstCDMA2000 bandClassLst;
 NhuNeighCellLstCDMA2000 neighCellLst;
 NhuT_Reselection t_ReselectionCDMA2000;
 NhuSpeedStateScaleFactors t_ReselectionCDMA2000_SF;
} NhuCellReselectionParamsCDMA2000;


typedef TknStrBSXL NhuCSFB_RegistrationParam1XRTTsid;

typedef TknStrBSXL NhuCSFB_RegistrationParam1XRTTnid;

typedef TknU8 NhuCSFB_RegistrationParam1XRTTmultipleSID;


typedef TknU8 NhuCSFB_RegistrationParam1XRTTmultipleNID;


typedef TknU8 NhuCSFB_RegistrationParam1XRTThomeReg;


typedef TknU8 NhuCSFB_RegistrationParam1XRTTforeignSIDReg;


typedef TknU8 NhuCSFB_RegistrationParam1XRTTforeignNIDReg;


typedef TknU8 NhuCSFB_RegistrationParam1XRTTparameterReg;


typedef TknU8 NhuCSFB_RegistrationParam1XRTTpowerUpReg;


typedef TknStrBSXL NhuCSFB_RegistrationParam1XRTTregistrationPeriod;

typedef TknStrBSXL NhuCSFB_RegistrationParam1XRTTregistrationZone;

typedef TknStrBSXL NhuCSFB_RegistrationParam1XRTTtotalZone;

typedef TknStrBSXL NhuCSFB_RegistrationParam1XRTTzoneTimer;
typedef struct NhuCSFB_RegistrationParam1XRTT
{
 TknPres pres;
 NhuCSFB_RegistrationParam1XRTTsid sid;
 NhuCSFB_RegistrationParam1XRTTnid nid;
 NhuCSFB_RegistrationParam1XRTTmultipleSID multipleSID;
 NhuCSFB_RegistrationParam1XRTTmultipleNID multipleNID;
 NhuCSFB_RegistrationParam1XRTThomeReg homeReg;
 NhuCSFB_RegistrationParam1XRTTforeignSIDReg foreignSIDReg;
 NhuCSFB_RegistrationParam1XRTTforeignNIDReg foreignNIDReg;
 NhuCSFB_RegistrationParam1XRTTparameterReg parameterReg;
 NhuCSFB_RegistrationParam1XRTTpowerUpReg powerUpReg;
 NhuCSFB_RegistrationParam1XRTTregistrationPeriod registrationPeriod;
 NhuCSFB_RegistrationParam1XRTTregistrationZone registrationZone;
 NhuCSFB_RegistrationParam1XRTTtotalZone totalZone;
 NhuCSFB_RegistrationParam1XRTTzoneTimer zoneTimer;
} NhuCSFB_RegistrationParam1XRTT;

typedef struct NhuPhysCellIdLstCDMA2000_v920
{
 TknU16 noComp;
 NhuPhysCellIdCDMA2000 *member;
}NhuPhysCellIdLstCDMA2000_v920;

typedef struct NhuNeighCellsPerBandclassCDMA2000_v920
{
 TknPres pres;
 NhuPhysCellIdLstCDMA2000_v920 physCellIdLst_v920;
} NhuNeighCellsPerBandclassCDMA2000_v920;

typedef struct NhuNeighCellsPerBandclassLstCDMA2000_v920
{
 TknU16 noComp;
 NhuNeighCellsPerBandclassCDMA2000_v920 *member;
}NhuNeighCellsPerBandclassLstCDMA2000_v920;

typedef struct NhuNeighCellCDMA2000_v920
{
 TknPres pres;
 NhuNeighCellsPerBandclassLstCDMA2000_v920 neighCellsPerFreqLst_v920;
} NhuNeighCellCDMA2000_v920;

typedef struct NhuNeighCellLstCDMA2000_v920
{
 TknU16 noComp;
 NhuNeighCellCDMA2000_v920 *member;
}NhuNeighCellLstCDMA2000_v920;

typedef struct NhuCellReselectionParamsCDMA2000_v920
{
 TknPres pres;
 NhuNeighCellLstCDMA2000_v920 neighCellLst_v920;
} NhuCellReselectionParamsCDMA2000_v920;


typedef enum enumNhuCSFB_RegistrationParam1XRTT_v920powerDownReg_r9
{
 NhuCSFB_RegistrationParam1XRTT_v920powerDownReg_r9trueEnum
} EnumNhuCSFB_RegistrationParam1XRTT_v920powerDownReg_r9;
typedef TknU32 NhuCSFB_RegistrationParam1XRTT_v920powerDownReg_r9;

typedef struct NhuCSFB_RegistrationParam1XRTT_v920
{
 TknPres pres;
 NhuCSFB_RegistrationParam1XRTT_v920powerDownReg_r9 powerDownReg_r9;
} NhuCSFB_RegistrationParam1XRTT_v920;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring0to9_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring10_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring11_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring12_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring13_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring14_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring15_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_BarringMsg_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_BarringReg_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_BarringEmg_r9;

typedef struct NhuAC_BarringConfig1XRTT_r9
{
 TknPres pres;
 NhuAC_BarringConfig1XRTT_r9ac_Barring0to9_r9 ac_Barring0to9_r9;
 NhuAC_BarringConfig1XRTT_r9ac_Barring10_r9 ac_Barring10_r9;
 NhuAC_BarringConfig1XRTT_r9ac_Barring11_r9 ac_Barring11_r9;
 NhuAC_BarringConfig1XRTT_r9ac_Barring12_r9 ac_Barring12_r9;
 NhuAC_BarringConfig1XRTT_r9ac_Barring13_r9 ac_Barring13_r9;
 NhuAC_BarringConfig1XRTT_r9ac_Barring14_r9 ac_Barring14_r9;
 NhuAC_BarringConfig1XRTT_r9ac_Barring15_r9 ac_Barring15_r9;
 NhuAC_BarringConfig1XRTT_r9ac_BarringMsg_r9 ac_BarringMsg_r9;
 NhuAC_BarringConfig1XRTT_r9ac_BarringReg_r9 ac_BarringReg_r9;
 NhuAC_BarringConfig1XRTT_r9ac_BarringEmg_r9 ac_BarringEmg_r9;
} NhuAC_BarringConfig1XRTT_r9;

typedef struct NhuNeighCellsPerBandclassCDMA2000_r11physCellIdLst_r11
{
 TknU16 noComp;
 NhuPhysCellIdCDMA2000 *member;
}NhuNeighCellsPerBandclassCDMA2000_r11physCellIdLst_r11;

typedef struct NhuNeighCellsPerBandclassCDMA2000_r11
{
 TknPres pres;
 NhuARFCN_ValueCDMA2000 arfcn;
 NhuNeighCellsPerBandclassCDMA2000_r11physCellIdLst_r11 physCellIdLst_r11;
} NhuNeighCellsPerBandclassCDMA2000_r11;

typedef struct NhuNeighCellCDMA2000_r11neighFreqInfoLst_r11
{
 TknU16 noComp;
 NhuNeighCellsPerBandclassCDMA2000_r11 *member;
}NhuNeighCellCDMA2000_r11neighFreqInfoLst_r11;

typedef struct NhuNeighCellCDMA2000_r11
{
 TknPres pres;
 NhuBandclassCDMA2000 bandClass;
 NhuNeighCellCDMA2000_r11neighFreqInfoLst_r11 neighFreqInfoLst_r11;
} NhuNeighCellCDMA2000_r11;

typedef struct NhuCellReselectionParamsCDMA2000_r11neighCellLst_r11
{
 TknU16 noComp;
 NhuNeighCellCDMA2000_r11 *member;
}NhuCellReselectionParamsCDMA2000_r11neighCellLst_r11;

typedef struct NhuCellReselectionParamsCDMA2000_r11
{
 TknPres pres;
 NhuBandClassLstCDMA2000 bandClassLst;
 NhuCellReselectionParamsCDMA2000_r11neighCellLst_r11 neighCellLst_r11;
 NhuT_Reselection t_ReselectionCDMA2000;
 NhuSpeedStateScaleFactors t_ReselectionCDMA2000_SF;
} NhuCellReselectionParamsCDMA2000_r11;

typedef struct NhuParamsCDMA2000_r11systemTimeInfo_r11
{
 TknU8 choice;
 union {
  NhuSysTimeInfoCDMA2000 explicitValue;
 } val;
} NhuParamsCDMA2000_r11systemTimeInfo_r11;


typedef TknU32 NhuParamsCDMA2000_r11searchWindowSize_r11;

typedef struct NhuParamsCDMA2000_r11parametersHRPD_r11
{
 TknPres pres;
 NhuPreRegistrationInfoHRPD preRegistrationInfoHRPD_r11;
 NhuCellReselectionParamsCDMA2000_r11 cellReselectionParamsHRPD_r11;
} NhuParamsCDMA2000_r11parametersHRPD_r11;


typedef TknStrBSXL NhuParamsCDMA2000_r11parameters1XRTT_r11longCodeState1XRTT_r11;

typedef TknU8 NhuParamsCDMA2000_r11parameters1XRTT_r11csfb_SupportForDualRxUEs_r11;


typedef enum enumNhuParamsCDMA2000_r11parameters1XRTT_r11csfb_DualRxTxSupport_r11
{
 NhuParamsCDMA2000_r11parameters1XRTT_r11csfb_DualRxTxSupport_r11trueEnum
} EnumNhuParamsCDMA2000_r11parameters1XRTT_r11csfb_DualRxTxSupport_r11;
typedef TknU32 NhuParamsCDMA2000_r11parameters1XRTT_r11csfb_DualRxTxSupport_r11;

typedef struct NhuParamsCDMA2000_r11parameters1XRTT_r11
{
 TknPres pres;
 NhuCSFB_RegistrationParam1XRTT csfb_RegistrationParam1XRTT_r11;
 NhuCSFB_RegistrationParam1XRTT_v920 csfb_RegistrationParam1XRTT_Ext_r11;
 NhuParamsCDMA2000_r11parameters1XRTT_r11longCodeState1XRTT_r11 longCodeState1XRTT_r11;
 NhuCellReselectionParamsCDMA2000_r11 cellReselectionParams1XRTT_r11;
 NhuAC_BarringConfig1XRTT_r9 ac_BarringConfig1XRTT_r11;
 NhuParamsCDMA2000_r11parameters1XRTT_r11csfb_SupportForDualRxUEs_r11 csfb_SupportForDualRxUEs_r11;
 NhuParamsCDMA2000_r11parameters1XRTT_r11csfb_DualRxTxSupport_r11 csfb_DualRxTxSupport_r11;
} NhuParamsCDMA2000_r11parameters1XRTT_r11;

typedef struct NhuParamsCDMA2000_r11
{
 TknPres pres;
 NhuParamsCDMA2000_r11systemTimeInfo_r11 systemTimeInfo_r11;
 NhuParamsCDMA2000_r11searchWindowSize_r11 searchWindowSize_r11;
 NhuParamsCDMA2000_r11parametersHRPD_r11 parametersHRPD_r11;
 NhuParamsCDMA2000_r11parameters1XRTT_r11 parameters1XRTT_r11;
} NhuParamsCDMA2000_r11;


typedef TknU32 NhuSIB8_PerPLMN_r11plmn_Identity_r11;

typedef struct NhuSIB8_PerPLMN_r11parametersCDMA2000_r11
{
 TknU8 choice;
 union {
  NhuParamsCDMA2000_r11 explicitValue;
 } val;
} NhuSIB8_PerPLMN_r11parametersCDMA2000_r11;

typedef struct NhuSIB8_PerPLMN_r11
{
 TknPres pres;
 NhuSIB8_PerPLMN_r11plmn_Identity_r11 plmn_Identity_r11;
 NhuSIB8_PerPLMN_r11parametersCDMA2000_r11 parametersCDMA2000_r11;
} NhuSIB8_PerPLMN_r11;

typedef struct NhuSIB8_PerPLMN_Lst_r11
{
 TknU16 noComp;
 NhuSIB8_PerPLMN_r11 *member;
}NhuSIB8_PerPLMN_Lst_r11;


typedef TknU32 NhuSysInfoBlockTyp8searchWindowSize;

typedef struct NhuSysInfoBlockTyp8parametersHRPD
{
 TknPres pres;
 NhuPreRegistrationInfoHRPD preRegistrationInfoHRPD;
 NhuCellReselectionParamsCDMA2000 cellReselectionParamsHRPD;
} NhuSysInfoBlockTyp8parametersHRPD;


typedef TknStrBSXL NhuSysInfoBlockTyp8parameters1XRTTlongCodeState1XRTT;
typedef struct NhuSysInfoBlockTyp8parameters1XRTT
{
 TknPres pres;
 NhuCSFB_RegistrationParam1XRTT csfb_RegistrationParam1XRTT;
 NhuSysInfoBlockTyp8parameters1XRTTlongCodeState1XRTT longCodeState1XRTT;
 NhuCellReselectionParamsCDMA2000 cellReselectionParams1XRTT;
} NhuSysInfoBlockTyp8parameters1XRTT;


typedef TknStrOSXL NhuSysInfoBlockTyp8lateNonCriticalExtn;

typedef TknU8 NhuSysInfoBlockTyp8extaddgrp_1csfb_SupportForDualRxUEs_r9;


typedef enum enumNhuSysInfoBlockTyp8extaddgrp_2csfb_DualRxTxSupport_r10
{
 NhuSysInfoBlockTyp8extaddgrp_2csfb_DualRxTxSupport_r10trueEnum
} EnumNhuSysInfoBlockTyp8extaddgrp_2csfb_DualRxTxSupport_r10;
typedef TknU32 NhuSysInfoBlockTyp8extaddgrp_2csfb_DualRxTxSupport_r10;

typedef struct NhuSysInfoBlockTyp8extaddgrp_1
{
 TknPres pres;
 NhuSysInfoBlockTyp8extaddgrp_1csfb_SupportForDualRxUEs_r9 csfb_SupportForDualRxUEs_r9;
 NhuCellReselectionParamsCDMA2000_v920 cellReselectionParamsHRPD_v920;
 NhuCellReselectionParamsCDMA2000_v920 cellReselectionParams1XRTT_v920;
 NhuCSFB_RegistrationParam1XRTT_v920 csfb_RegistrationParam1XRTT_v920;
 NhuAC_BarringConfig1XRTT_r9 ac_BarringConfig1XRTT_r9;
} NhuSysInfoBlockTyp8extaddgrp_1;

typedef struct NhuSysInfoBlockTyp8extaddgrp_2
{
 TknPres pres;
 NhuSysInfoBlockTyp8extaddgrp_2csfb_DualRxTxSupport_r10 csfb_DualRxTxSupport_r10;
} NhuSysInfoBlockTyp8extaddgrp_2;

typedef struct NhuSysInfoBlockTyp8extaddgrp_3
{
 TknPres pres;
 NhuSIB8_PerPLMN_Lst_r11 sib8_PerPLMN_Lst_r11;
} NhuSysInfoBlockTyp8extaddgrp_3;

typedef struct NhuSysInfoBlockTyp8
{
 TknPres pres;
 NhuSysTimeInfoCDMA2000 systemTimeInfo;
 NhuSysInfoBlockTyp8searchWindowSize searchWindowSize;
 NhuSysInfoBlockTyp8parametersHRPD parametersHRPD;
 NhuSysInfoBlockTyp8parameters1XRTT parameters1XRTT;
 NhuSysInfoBlockTyp8lateNonCriticalExtn lateNonCriticalExtn;
 NhuSysInfoBlockTyp8extaddgrp_1 extaddgrp_1;
 NhuSysInfoBlockTyp8extaddgrp_2 extaddgrp_2;
 NhuSysInfoBlockTyp8extaddgrp_3 extaddgrp_3;
} NhuSysInfoBlockTyp8;


typedef TknStrOSXL NhuSysInfoBlockTyp9hnb_Name;

typedef TknStrOSXL NhuSysInfoBlockTyp9lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp9
{
 TknPres pres;
 NhuSysInfoBlockTyp9hnb_Name hnb_Name;
 NhuSysInfoBlockTyp9lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp9;


typedef TknStrBSXL NhuSysInfoBlockTyp10messageId;

typedef TknStrBSXL NhuSysInfoBlockTyp10serialNumber;

typedef TknStrOSXL NhuSysInfoBlockTyp10warningTyp;

typedef TknStrOSXL NhuSysInfoBlockTyp10dummy;

typedef TknStrOSXL NhuSysInfoBlockTyp10lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp10
{
 TknPres pres;
 NhuSysInfoBlockTyp10messageId messageId;
 NhuSysInfoBlockTyp10serialNumber serialNumber;
 NhuSysInfoBlockTyp10warningTyp warningTyp;
 NhuSysInfoBlockTyp10dummy dummy;
 NhuSysInfoBlockTyp10lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp10;


typedef TknStrBSXL NhuSysInfoBlockTyp11messageId;

typedef TknStrBSXL NhuSysInfoBlockTyp11serialNumber;

typedef enum enumNhuSysInfoBlockTyp11warningMsgSegmentTyp
{
 NhuSysInfoBlockTyp11warningMsgSegmentTypnotLastSegmentEnum,
 NhuSysInfoBlockTyp11warningMsgSegmentTyplastSegmentEnum
} EnumNhuSysInfoBlockTyp11warningMsgSegmentTyp;
typedef TknU32 NhuSysInfoBlockTyp11warningMsgSegmentTyp;


typedef TknU32 NhuSysInfoBlockTyp11warningMsgSegmentNumber;


typedef TknStrOSXL NhuSysInfoBlockTyp11warningMsgSegment;

typedef TknStrOSXL NhuSysInfoBlockTyp11dataCodingScheme;

typedef TknStrOSXL NhuSysInfoBlockTyp11lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp11
{
 TknPres pres;
 NhuSysInfoBlockTyp11messageId messageId;
 NhuSysInfoBlockTyp11serialNumber serialNumber;
 NhuSysInfoBlockTyp11warningMsgSegmentTyp warningMsgSegmentTyp;
 NhuSysInfoBlockTyp11warningMsgSegmentNumber warningMsgSegmentNumber;
 NhuSysInfoBlockTyp11warningMsgSegment warningMsgSegment;
 NhuSysInfoBlockTyp11dataCodingScheme dataCodingScheme;
 NhuSysInfoBlockTyp11lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp11;


typedef TknStrBSXL NhuSysInfoBlockTyp12_r9messageId_r9;

typedef TknStrBSXL NhuSysInfoBlockTyp12_r9serialNumber_r9;

typedef enum enumNhuSysInfoBlockTyp12_r9warningMsgSegmentTyp_r9
{
 NhuSysInfoBlockTyp12_r9warningMsgSegmentTyp_r9notLastSegmentEnum,
 NhuSysInfoBlockTyp12_r9warningMsgSegmentTyp_r9lastSegmentEnum
} EnumNhuSysInfoBlockTyp12_r9warningMsgSegmentTyp_r9;
typedef TknU32 NhuSysInfoBlockTyp12_r9warningMsgSegmentTyp_r9;


typedef TknU32 NhuSysInfoBlockTyp12_r9warningMsgSegmentNumber_r9;


typedef TknStrOSXL NhuSysInfoBlockTyp12_r9warningMsgSegment_r9;

typedef TknStrOSXL NhuSysInfoBlockTyp12_r9dataCodingScheme_r9;

typedef TknStrOSXL NhuSysInfoBlockTyp12_r9lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp12_r9
{
 TknPres pres;
 NhuSysInfoBlockTyp12_r9messageId_r9 messageId_r9;
 NhuSysInfoBlockTyp12_r9serialNumber_r9 serialNumber_r9;
 NhuSysInfoBlockTyp12_r9warningMsgSegmentTyp_r9 warningMsgSegmentTyp_r9;
 NhuSysInfoBlockTyp12_r9warningMsgSegmentNumber_r9 warningMsgSegmentNumber_r9;
 NhuSysInfoBlockTyp12_r9warningMsgSegment_r9 warningMsgSegment_r9;
 NhuSysInfoBlockTyp12_r9dataCodingScheme_r9 dataCodingScheme_r9;
 NhuSysInfoBlockTyp12_r9lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp12_r9;


typedef TknU32 NhuMBSFN_AreaInfo_r9mbsfn_AreaId_r9;


typedef enum enumNhuMBSFN_AreaInfo_r9non_MBSFNregionLength
{
 NhuMBSFN_AreaInfo_r9non_MBSFNregionLengths1Enum,
 NhuMBSFN_AreaInfo_r9non_MBSFNregionLengths2Enum
} EnumNhuMBSFN_AreaInfo_r9non_MBSFNregionLength;
typedef TknU32 NhuMBSFN_AreaInfo_r9non_MBSFNregionLength;


typedef TknU32 NhuMBSFN_AreaInfo_r9notificationIndicator_r9;


typedef enum enumNhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9
{
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9rf32Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9rf64Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9rf128Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9rf256Enum
} EnumNhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9;
typedef TknU32 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9;


typedef TknU32 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_Offset_r9;


typedef enum enumNhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_ModfnPeriod_r9
{
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_ModfnPeriod_r9rf512Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_ModfnPeriod_r9rf1024Enum
} EnumNhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_ModfnPeriod_r9;
typedef TknU32 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_ModfnPeriod_r9;


typedef TknStrBSXL NhuMBSFN_AreaInfo_r9mcch_Config_r9sf_AllocInfo_r9;

typedef enum enumNhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9
{
 NhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9n2Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9n7Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9n13Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9n19Enum
} EnumNhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9;
typedef TknU32 NhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9;

typedef struct NhuMBSFN_AreaInfo_r9mcch_Config_r9
{
 TknPres pres;
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9 mcch_RepetitionPeriod_r9;
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_Offset_r9 mcch_Offset_r9;
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_ModfnPeriod_r9 mcch_ModfnPeriod_r9;
 NhuMBSFN_AreaInfo_r9mcch_Config_r9sf_AllocInfo_r9 sf_AllocInfo_r9;
 NhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9 signallingMCS_r9;
} NhuMBSFN_AreaInfo_r9mcch_Config_r9;

typedef struct NhuMBSFN_AreaInfo_r9
{
 TknPres pres;
 NhuMBSFN_AreaInfo_r9mbsfn_AreaId_r9 mbsfn_AreaId_r9;
 NhuMBSFN_AreaInfo_r9non_MBSFNregionLength non_MBSFNregionLength;
 NhuMBSFN_AreaInfo_r9notificationIndicator_r9 notificationIndicator_r9;
 NhuMBSFN_AreaInfo_r9mcch_Config_r9 mcch_Config_r9;
} NhuMBSFN_AreaInfo_r9;

typedef struct NhuMBSFN_AreaInfoLst_r9
{
 TknU16 noComp;
 NhuMBSFN_AreaInfo_r9 *member;
}NhuMBSFN_AreaInfoLst_r9;


typedef enum enumNhuMBMS_NotificationConfig_r9notificationRepetitionCoeff_r9
{
 NhuMBMS_NotificationConfig_r9notificationRepetitionCoeff_r9n2Enum,
 NhuMBMS_NotificationConfig_r9notificationRepetitionCoeff_r9n4Enum
} EnumNhuMBMS_NotificationConfig_r9notificationRepetitionCoeff_r9;
typedef TknU32 NhuMBMS_NotificationConfig_r9notificationRepetitionCoeff_r9;


typedef TknU32 NhuMBMS_NotificationConfig_r9notificationOffset_r9;


typedef TknU32 NhuMBMS_NotificationConfig_r9notificationSF_Idx_r9;

typedef struct NhuMBMS_NotificationConfig_r9
{
 TknPres pres;
 NhuMBMS_NotificationConfig_r9notificationRepetitionCoeff_r9 notificationRepetitionCoeff_r9;
 NhuMBMS_NotificationConfig_r9notificationOffset_r9 notificationOffset_r9;
 NhuMBMS_NotificationConfig_r9notificationSF_Idx_r9 notificationSF_Idx_r9;
} NhuMBMS_NotificationConfig_r9;


typedef TknStrOSXL NhuSysInfoBlockTyp13_r9lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp13_r9
{
 TknPres pres;
 NhuMBSFN_AreaInfoLst_r9 mbsfn_AreaInfoLst_r9;
 NhuMBMS_NotificationConfig_r9 notificationConfig_r9;
 NhuSysInfoBlockTyp13_r9lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp13_r9;


typedef enum enumNhuEAB_Config_r11eab_Category_r11
{
 NhuEAB_Config_r11eab_Category_r11aEnum,
 NhuEAB_Config_r11eab_Category_r11bEnum,
 NhuEAB_Config_r11eab_Category_r11cEnum
} EnumNhuEAB_Config_r11eab_Category_r11;
typedef TknU32 NhuEAB_Config_r11eab_Category_r11;


typedef TknStrBSXL NhuEAB_Config_r11eab_BarringBitmap_r11;
typedef struct NhuEAB_Config_r11
{
 TknPres pres;
 NhuEAB_Config_r11eab_Category_r11 eab_Category_r11;
 NhuEAB_Config_r11eab_BarringBitmap_r11 eab_BarringBitmap_r11;
} NhuEAB_Config_r11;

typedef struct NhuEAB_ConfigPLMN_r11
{
 TknPres pres;
 NhuEAB_Config_r11 eab_Config_r11;
} NhuEAB_ConfigPLMN_r11;

typedef struct NhuSysInfoBlockTyp14_r11eab_Param_r11eab_PerPLMN_Lst_r11
{
 TknU16 noComp;
 NhuEAB_ConfigPLMN_r11 *member;
}NhuSysInfoBlockTyp14_r11eab_Param_r11eab_PerPLMN_Lst_r11;

typedef struct NhuSysInfoBlockTyp14_r11eab_Param_r11
{
 TknU8 choice;
 union {
  NhuEAB_Config_r11 eab_Cmn_r11;
  NhuSysInfoBlockTyp14_r11eab_Param_r11eab_PerPLMN_Lst_r11 eab_PerPLMN_Lst_r11;
 } val;
} NhuSysInfoBlockTyp14_r11eab_Param_r11;


typedef TknStrOSXL NhuSysInfoBlockTyp14_r11lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp14_r11
{
 TknPres pres;
 NhuSysInfoBlockTyp14_r11eab_Param_r11 eab_Param_r11;
 NhuSysInfoBlockTyp14_r11lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp14_r11;


typedef TknU32 NhuMBMS_SAI_r11;

typedef struct NhuMBMS_SAI_Lst_r11
{
 TknU16 noComp;
 NhuMBMS_SAI_r11 *member;
}NhuMBMS_SAI_Lst_r11;


typedef TknU32 NhuARFCN_ValueEUTRA_r9;

typedef struct NhuMBMS_SAI_InterFreq_r11
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_r9 dl_CarrierFreq_r11;
 NhuMBMS_SAI_Lst_r11 mbms_SAI_Lst_r11;
} NhuMBMS_SAI_InterFreq_r11;

typedef struct NhuMBMS_SAI_InterFreqLst_r11
{
 TknU16 noComp;
 NhuMBMS_SAI_InterFreq_r11 *member;
}NhuMBMS_SAI_InterFreqLst_r11;


typedef TknU32 NhuFreqBandIndicator_r11;

typedef struct NhuMultiBandInfoLst_r11
{
 TknU16 noComp;
 NhuFreqBandIndicator_r11 *member;
}NhuMultiBandInfoLst_r11;

typedef struct NhuMBMS_SAI_InterFreq_v1140
{
 TknPres pres;
 NhuMultiBandInfoLst_r11 multiBandInfoLst_r11;
} NhuMBMS_SAI_InterFreq_v1140;

typedef struct NhuMBMS_SAI_InterFreqLst_v1140
{
 TknU16 noComp;
 NhuMBMS_SAI_InterFreq_v1140 *member;
}NhuMBMS_SAI_InterFreqLst_v1140;


typedef TknStrOSXL NhuSysInfoBlockTyp15_r11lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp15_r11extaddgrp_1
{
 TknPres pres;
 NhuMBMS_SAI_InterFreqLst_v1140 mbms_SAI_InterFreqLst_v1140;
} NhuSysInfoBlockTyp15_r11extaddgrp_1;

typedef struct NhuSysInfoBlockTyp15_r11
{
 TknPres pres;
 NhuMBMS_SAI_Lst_r11 mbms_SAI_IntraFreq_r11;
 NhuMBMS_SAI_InterFreqLst_r11 mbms_SAI_InterFreqLst_r11;
 NhuSysInfoBlockTyp15_r11lateNonCriticalExtn lateNonCriticalExtn;
 NhuSysInfoBlockTyp15_r11extaddgrp_1 extaddgrp_1;
} NhuSysInfoBlockTyp15_r11;


typedef TknU32 NhuSysInfoBlockTyp16_r11timeInfo_r11timeInfoUTC_r11;


typedef TknStrBSXL NhuSysInfoBlockTyp16_r11timeInfo_r11dayLightSavingTime_r11;

typedef TknS32 NhuSysInfoBlockTyp16_r11timeInfo_r11leapSeconds_r11;


typedef TknS32 NhuSysInfoBlockTyp16_r11timeInfo_r11localTimeOffset_r11;

typedef struct NhuSysInfoBlockTyp16_r11timeInfo_r11
{
 TknPres pres;
 NhuSysInfoBlockTyp16_r11timeInfo_r11timeInfoUTC_r11 timeInfoUTC_r11;
 NhuSysInfoBlockTyp16_r11timeInfo_r11dayLightSavingTime_r11 dayLightSavingTime_r11;
 NhuSysInfoBlockTyp16_r11timeInfo_r11leapSeconds_r11 leapSeconds_r11;
 NhuSysInfoBlockTyp16_r11timeInfo_r11localTimeOffset_r11 localTimeOffset_r11;
} NhuSysInfoBlockTyp16_r11timeInfo_r11;


typedef TknStrOSXL NhuSysInfoBlockTyp16_r11lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp16_r11
{
 TknPres pres;
 NhuSysInfoBlockTyp16_r11timeInfo_r11 timeInfo_r11;
 NhuSysInfoBlockTyp16_r11lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp16_r11;


typedef TknStrOSXL NhuSysInfo_v8a0_IEslateNonCriticalExtn;
typedef struct NhuSysInfo_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSysInfo_v8a0_IEsnonCriticalExtn;

typedef struct NhuSysInfo_v8a0_IEs
{
 TknPres pres;
 NhuSysInfo_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuSysInfo_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSysInfo_v8a0_IEs;

typedef struct NhuSysInfo_r8_IEssib_TypAndInfoMember
{
 TknU8 choice;
 union {
  NhuSysInfoBlockTyp2 sib2;
  NhuSysInfoBlockTyp3 sib3;
  NhuSysInfoBlockTyp4 sib4;
  NhuSysInfoBlockTyp5 sib5;
  NhuSysInfoBlockTyp6 sib6;
  NhuSysInfoBlockTyp7 sib7;
  NhuSysInfoBlockTyp8 sib8;
  NhuSysInfoBlockTyp9 sib9;
  NhuSysInfoBlockTyp10 sib10;
  NhuSysInfoBlockTyp11 sib11;
  NhuSysInfoBlockTyp12_r9 sib12_v920;
  NhuSysInfoBlockTyp13_r9 sib13_v920;
  NhuSysInfoBlockTyp14_r11 sib14_v1130;
  NhuSysInfoBlockTyp15_r11 sib15_v1130;
  NhuSysInfoBlockTyp16_r11 sib16_v1130;
 } val;
} NhuSysInfo_r8_IEssib_TypAndInfoMember;

typedef struct NhuSysInfo_r8_IEssib_TypAndInfo
{
 TknU16 noComp;
 NhuSysInfo_r8_IEssib_TypAndInfoMember *member;
}NhuSysInfo_r8_IEssib_TypAndInfo;

typedef struct NhuSysInfo_r8_IEs
{
 TknPres pres;
 NhuSysInfo_r8_IEssib_TypAndInfo sib_TypAndInfo;
 NhuSysInfo_v8a0_IEs nonCriticalExtn;
} NhuSysInfo_r8_IEs;

typedef struct NhuSysInfocriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuSysInfocriticalExtnscriticalExtnsFuture;

typedef struct NhuSysInfocriticalExtns
{
 TknU8 choice;
 union {
  NhuSysInfo_r8_IEs systemInfo_r8;
  NhuSysInfocriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuSysInfocriticalExtns;

typedef struct NhuSysInfo
{
 TknPres pres;
 NhuSysInfocriticalExtns criticalExtns;
} NhuSysInfo;


typedef TknU32 NhuMCC_MNC_Digit;

typedef struct NhuMCC
{
 TknU16 noComp;
 NhuMCC_MNC_Digit *member;
}NhuMCC;

typedef struct NhuMNC
{
 TknU16 noComp;
 NhuMCC_MNC_Digit *member;
}NhuMNC;

typedef struct NhuPLMN_Identity
{
 TknPres pres;
 NhuMCC mcc;
 NhuMNC mnc;
} NhuPLMN_Identity;


typedef enum enumNhuPLMN_IdentityInfocellReservedForOperatorUse
{
 NhuPLMN_IdentityInfocellReservedForOperatorUsereservedEnum,
 NhuPLMN_IdentityInfocellReservedForOperatorUsenotReservedEnum
} EnumNhuPLMN_IdentityInfocellReservedForOperatorUse;
typedef TknU32 NhuPLMN_IdentityInfocellReservedForOperatorUse;

typedef struct NhuPLMN_IdentityInfo
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuPLMN_IdentityInfocellReservedForOperatorUse cellReservedForOperatorUse;
} NhuPLMN_IdentityInfo;

typedef struct NhuPLMN_IdentityLst
{
 TknU16 noComp;
 NhuPLMN_IdentityInfo *member;
}NhuPLMN_IdentityLst;


typedef TknStrBSXL NhuTrackingAreaCode;

typedef TknStrBSXL NhuCellIdentity;

typedef TknStrBSXL NhuCSG_Identity;

typedef TknU32 NhuFreqBandIndicator;


typedef enum enumNhuSIB_Typ
{
 NhuSIB_TypsibTyp3Enum,
 NhuSIB_TypsibTyp4Enum,
 NhuSIB_TypsibTyp5Enum,
 NhuSIB_TypsibTyp6Enum,
 NhuSIB_TypsibTyp7Enum,
 NhuSIB_TypsibTyp8Enum,
 NhuSIB_TypsibTyp9Enum,
 NhuSIB_TypsibTyp10Enum,
 NhuSIB_TypsibTyp11Enum,
 NhuSIB_TypsibTyp12_v920Enum,
 NhuSIB_TypsibTyp13_v920Enum,
 NhuSIB_TypsibTyp14_v1130Enum,
 NhuSIB_TypsibTyp15_v1130Enum,
 NhuSIB_TypsibTyp16_v1130Enum,
 NhuSIB_Typspare2Enum,
 NhuSIB_Typspare1Enum
} EnumNhuSIB_Typ;
typedef TknU32 NhuSIB_Typ;

typedef struct NhuSIB_MappingInfo
{
 TknU16 noComp;
 NhuSIB_Typ *member;
}NhuSIB_MappingInfo;


typedef enum enumNhuSchedulingInfosi_Periodicity
{
 NhuSchedulingInfosi_Periodicityrf8Enum,
 NhuSchedulingInfosi_Periodicityrf16Enum,
 NhuSchedulingInfosi_Periodicityrf32Enum,
 NhuSchedulingInfosi_Periodicityrf64Enum,
 NhuSchedulingInfosi_Periodicityrf128Enum,
 NhuSchedulingInfosi_Periodicityrf256Enum,
 NhuSchedulingInfosi_Periodicityrf512Enum
} EnumNhuSchedulingInfosi_Periodicity;
typedef TknU32 NhuSchedulingInfosi_Periodicity;

typedef struct NhuSchedulingInfo
{
 TknPres pres;
 NhuSchedulingInfosi_Periodicity si_Periodicity;
 NhuSIB_MappingInfo sib_MappingInfo;
} NhuSchedulingInfo;

typedef struct NhuSchedulingInfoLst
{
 TknU16 noComp;
 NhuSchedulingInfo *member;
}NhuSchedulingInfoLst;


typedef enum enumNhuTDD_ConfigsubframeAssignment
{
 NhuTDD_ConfigsubframeAssignmentsa0Enum,
 NhuTDD_ConfigsubframeAssignmentsa1Enum,
 NhuTDD_ConfigsubframeAssignmentsa2Enum,
 NhuTDD_ConfigsubframeAssignmentsa3Enum,
 NhuTDD_ConfigsubframeAssignmentsa4Enum,
 NhuTDD_ConfigsubframeAssignmentsa5Enum,
 NhuTDD_ConfigsubframeAssignmentsa6Enum
} EnumNhuTDD_ConfigsubframeAssignment;
typedef TknU32 NhuTDD_ConfigsubframeAssignment;


typedef enum enumNhuTDD_ConfigspecialSubfrmPatterns
{
 NhuTDD_ConfigspecialSubfrmPatternsssp0Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp1Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp2Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp3Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp4Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp5Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp6Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp7Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp8Enum
} EnumNhuTDD_ConfigspecialSubfrmPatterns;
typedef TknU32 NhuTDD_ConfigspecialSubfrmPatterns;

typedef struct NhuTDD_Config
{
 TknPres pres;
 NhuTDD_ConfigsubframeAssignment subframeAssignment;
 NhuTDD_ConfigspecialSubfrmPatterns specialSubfrmPatterns;
} NhuTDD_Config;


typedef TknU32 NhuCellSelectionInfo_v920q_QualMinOffset_r9;

typedef struct NhuCellSelectionInfo_v920
{
 TknPres pres;
 NhuQ_QualMin_r9 q_QualMin_r9;
 NhuCellSelectionInfo_v920q_QualMinOffset_r9 q_QualMinOffset_r9;
} NhuCellSelectionInfo_v920;


typedef enum enumNhuTDD_Config_v1130specialSubfrmPatterns_v1130
{
 NhuTDD_Config_v1130specialSubfrmPatterns_v1130ssp7Enum,
 NhuTDD_Config_v1130specialSubfrmPatterns_v1130ssp9Enum
} EnumNhuTDD_Config_v1130specialSubfrmPatterns_v1130;
typedef TknU32 NhuTDD_Config_v1130specialSubfrmPatterns_v1130;

typedef struct NhuTDD_Config_v1130
{
 TknPres pres;
 NhuTDD_Config_v1130specialSubfrmPatterns_v1130 specialSubfrmPatterns_v1130;
} NhuTDD_Config_v1130;

typedef struct NhuCellSelectionInfo_v1130
{
 TknPres pres;
 NhuQ_QualMin_r9 q_QualMinWB_r11;
} NhuCellSelectionInfo_v1130;

typedef struct NhuSysInfoBlockTyp1_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSysInfoBlockTyp1_v1130_IEsnonCriticalExtn;

typedef struct NhuSysInfoBlockTyp1_v1130_IEs
{
 TknPres pres;
 NhuTDD_Config_v1130 tdd_Config_v1130;
 NhuCellSelectionInfo_v1130 cellSelectionInfo_v1130;
 NhuSysInfoBlockTyp1_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuSysInfoBlockTyp1_v1130_IEs;


typedef enum enumNhuSysInfoBlockTyp1_v920_IEsims_EmergencySupport_r9
{
 NhuSysInfoBlockTyp1_v920_IEsims_EmergencySupport_r9trueEnum
} EnumNhuSysInfoBlockTyp1_v920_IEsims_EmergencySupport_r9;
typedef TknU32 NhuSysInfoBlockTyp1_v920_IEsims_EmergencySupport_r9;

typedef struct NhuSysInfoBlockTyp1_v920_IEs
{
 TknPres pres;
 NhuSysInfoBlockTyp1_v920_IEsims_EmergencySupport_r9 ims_EmergencySupport_r9;
 NhuCellSelectionInfo_v920 cellSelectionInfo_v920;
 NhuSysInfoBlockTyp1_v1130_IEs nonCriticalExtn;
} NhuSysInfoBlockTyp1_v920_IEs;


typedef TknStrOSXL NhuSysInfoBlockTyp1_v890_IEslateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp1_v890_IEs
{
 TknPres pres;
 NhuSysInfoBlockTyp1_v890_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuSysInfoBlockTyp1_v920_IEs nonCriticalExtn;
} NhuSysInfoBlockTyp1_v890_IEs;


typedef enum enumNhuSysInfoBlockTyp1cellAccessRelatedInfocellBarred
{
 NhuSysInfoBlockTyp1cellAccessRelatedInfocellBarredbarredEnum,
 NhuSysInfoBlockTyp1cellAccessRelatedInfocellBarrednotBarredEnum
} EnumNhuSysInfoBlockTyp1cellAccessRelatedInfocellBarred;
typedef TknU32 NhuSysInfoBlockTyp1cellAccessRelatedInfocellBarred;


typedef enum enumNhuSysInfoBlockTyp1cellAccessRelatedInfointraFreqReselection
{
 NhuSysInfoBlockTyp1cellAccessRelatedInfointraFreqReselectionallowedEnum,
 NhuSysInfoBlockTyp1cellAccessRelatedInfointraFreqReselectionnotAllowedEnum
} EnumNhuSysInfoBlockTyp1cellAccessRelatedInfointraFreqReselection;
typedef TknU32 NhuSysInfoBlockTyp1cellAccessRelatedInfointraFreqReselection;


typedef TknU8 NhuSysInfoBlockTyp1cellAccessRelatedInfocsg_Ind;

typedef struct NhuSysInfoBlockTyp1cellAccessRelatedInfo
{
 TknPres pres;
 NhuPLMN_IdentityLst plmn_IdentityLst;
 NhuTrackingAreaCode trackingAreaCode;
 NhuCellIdentity cellIdentity;
 NhuSysInfoBlockTyp1cellAccessRelatedInfocellBarred cellBarred;
 NhuSysInfoBlockTyp1cellAccessRelatedInfointraFreqReselection intraFreqReselection;
 NhuSysInfoBlockTyp1cellAccessRelatedInfocsg_Ind csg_Ind;
 NhuCSG_Identity csg_Identity;
} NhuSysInfoBlockTyp1cellAccessRelatedInfo;


typedef TknU32 NhuSysInfoBlockTyp1cellSelectionInfoq_RxLevMinOffset;

typedef struct NhuSysInfoBlockTyp1cellSelectionInfo
{
 TknPres pres;
 NhuQ_RxLevMin q_RxLevMin;
 NhuSysInfoBlockTyp1cellSelectionInfoq_RxLevMinOffset q_RxLevMinOffset;
} NhuSysInfoBlockTyp1cellSelectionInfo;


typedef enum enumNhuSysInfoBlockTyp1si_WindowLength
{
 NhuSysInfoBlockTyp1si_WindowLengthms1Enum,
 NhuSysInfoBlockTyp1si_WindowLengthms2Enum,
 NhuSysInfoBlockTyp1si_WindowLengthms5Enum,
 NhuSysInfoBlockTyp1si_WindowLengthms10Enum,
 NhuSysInfoBlockTyp1si_WindowLengthms15Enum,
 NhuSysInfoBlockTyp1si_WindowLengthms20Enum,
 NhuSysInfoBlockTyp1si_WindowLengthms40Enum
} EnumNhuSysInfoBlockTyp1si_WindowLength;
typedef TknU32 NhuSysInfoBlockTyp1si_WindowLength;


typedef TknU32 NhuSysInfoBlockTyp1systemInfoValueTag;

typedef struct NhuSysInfoBlockTyp1
{
 TknPres pres;
 NhuSysInfoBlockTyp1cellAccessRelatedInfo cellAccessRelatedInfo;
 NhuSysInfoBlockTyp1cellSelectionInfo cellSelectionInfo;
 NhuP_Max p_Max;
 NhuFreqBandIndicator freqBandIndicator;
 NhuSchedulingInfoLst schedulingInfoLst;
 NhuTDD_Config tdd_Config;
 NhuSysInfoBlockTyp1si_WindowLength si_WindowLength;
 NhuSysInfoBlockTyp1systemInfoValueTag systemInfoValueTag;
 NhuSysInfoBlockTyp1_v890_IEs nonCriticalExtn;
} NhuSysInfoBlockTyp1;

typedef struct NhuBCCH_DL_SCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuSysInfo systemInfo;
  NhuSysInfoBlockTyp1 systemInfoBlockTyp1;
 } val;
} NhuBCCH_DL_SCH_MsgTypc1;

typedef struct NhuBCCH_DL_SCH_MsgTypmessageClassExtn
{
 TknPres pres;
} NhuBCCH_DL_SCH_MsgTypmessageClassExtn;

typedef struct NhuBCCH_DL_SCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuBCCH_DL_SCH_MsgTypc1 c1;
  NhuBCCH_DL_SCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuBCCH_DL_SCH_MsgTyp;

typedef struct NhuBCCH_DL_SCH_Msg
{
 TknPres pres;
 NhuBCCH_DL_SCH_MsgTyp message;
} NhuBCCH_DL_SCH_Msg;

typedef struct NhuCmnSF_AllocPatternLst_r9
{
 TknU16 noComp;
 NhuMBSFN_SubfrmConfig *member;
}NhuCmnSF_AllocPatternLst_r9;


typedef TknU32 NhuPMCH_Config_r9sf_AllocEnd_r9;


typedef TknU32 NhuPMCH_Config_r9dataMCS_r9;


typedef enum enumNhuPMCH_Config_r9mch_SchedulingPeriod_r9
{
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf8Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf16Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf32Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf64Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf128Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf256Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf512Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf1024Enum
} EnumNhuPMCH_Config_r9mch_SchedulingPeriod_r9;
typedef TknU32 NhuPMCH_Config_r9mch_SchedulingPeriod_r9;

typedef struct NhuPMCH_Config_r9
{
 TknPres pres;
 NhuPMCH_Config_r9sf_AllocEnd_r9 sf_AllocEnd_r9;
 NhuPMCH_Config_r9dataMCS_r9 dataMCS_r9;
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9 mch_SchedulingPeriod_r9;
} NhuPMCH_Config_r9;


typedef TknU32 NhuTMGI_r9plmn_Id_r9plmn_Idx_r9;

typedef struct NhuTMGI_r9plmn_Id_r9
{
 TknU8 choice;
 union {
  NhuTMGI_r9plmn_Id_r9plmn_Idx_r9 plmn_Idx_r9;
  NhuPLMN_Identity explicitValue_r9;
 } val;
} NhuTMGI_r9plmn_Id_r9;


typedef TknStrOSXL NhuTMGI_r9serviceId_r9;
typedef struct NhuTMGI_r9
{
 TknPres pres;
 NhuTMGI_r9plmn_Id_r9 plmn_Id_r9;
 NhuTMGI_r9serviceId_r9 serviceId_r9;
} NhuTMGI_r9;


typedef TknStrOSXL NhuMBMS_SessionInfo_r9sessionId_r9;

typedef TknU32 NhuMBMS_SessionInfo_r9logicalChannelIdentity_r9;

typedef struct NhuMBMS_SessionInfo_r9
{
 TknPres pres;
 NhuTMGI_r9 tmgi_r9;
 NhuMBMS_SessionInfo_r9sessionId_r9 sessionId_r9;
 NhuMBMS_SessionInfo_r9logicalChannelIdentity_r9 logicalChannelIdentity_r9;
} NhuMBMS_SessionInfo_r9;

typedef struct NhuMBMS_SessionInfoLst_r9
{
 TknU16 noComp;
 NhuMBMS_SessionInfo_r9 *member;
}NhuMBMS_SessionInfoLst_r9;

typedef struct NhuPMCH_Info_r9
{
 TknPres pres;
 NhuPMCH_Config_r9 pmch_Config_r9;
 NhuMBMS_SessionInfoLst_r9 mbms_SessionInfoLst_r9;
} NhuPMCH_Info_r9;

typedef struct NhuPMCH_InfoLst_r9
{
 TknU16 noComp;
 NhuPMCH_Info_r9 *member;
}NhuPMCH_InfoLst_r9;


typedef TknStrOSXL NhuMBSFNAreaCfg_v930_IEslateNonCriticalExtn;
typedef struct NhuMBSFNAreaCfg_v930_IEsnonCriticalExtn
{
 TknPres pres;
} NhuMBSFNAreaCfg_v930_IEsnonCriticalExtn;

typedef struct NhuMBSFNAreaCfg_v930_IEs
{
 TknPres pres;
 NhuMBSFNAreaCfg_v930_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuMBSFNAreaCfg_v930_IEsnonCriticalExtn nonCriticalExtn;
} NhuMBSFNAreaCfg_v930_IEs;


typedef enum enumNhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9
{
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf4Enum,
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf8Enum,
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf16Enum,
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf32Enum,
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf64Enum,
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf128Enum,
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf256Enum
} EnumNhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9;
typedef TknU32 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9;

typedef struct NhuMBSFNAreaCfg_r9
{
 TknPres pres;
 NhuCmnSF_AllocPatternLst_r9 commonSF_Alloc_r9;
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9 commonSF_AllocPeriod_r9;
 NhuPMCH_InfoLst_r9 pmch_InfoLst_r9;
 NhuMBSFNAreaCfg_v930_IEs nonCriticalExtn;
} NhuMBSFNAreaCfg_r9;

typedef struct NhuCountingRqstInfo_r10
{
 TknPres pres;
 NhuTMGI_r9 tmgi_r10;
} NhuCountingRqstInfo_r10;

typedef struct NhuCountingRqstLst_r10
{
 TknU16 noComp;
 NhuCountingRqstInfo_r10 *member;
}NhuCountingRqstLst_r10;


typedef TknStrOSXL NhuMBMSCountingRqst_r10lateNonCriticalExtn;
typedef struct NhuMBMSCountingRqst_r10nonCriticalExtn
{
 TknPres pres;
} NhuMBMSCountingRqst_r10nonCriticalExtn;

typedef struct NhuMBMSCountingRqst_r10
{
 TknPres pres;
 NhuCountingRqstLst_r10 countingRqstLst_r10;
 NhuMBMSCountingRqst_r10lateNonCriticalExtn lateNonCriticalExtn;
 NhuMBMSCountingRqst_r10nonCriticalExtn nonCriticalExtn;
} NhuMBMSCountingRqst_r10;

typedef struct NhuMCCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuMBSFNAreaCfg_r9 mbsfnAreaCfg_r9;
 } val;
} NhuMCCH_MsgTypc1;

typedef struct NhuMCCH_MsgTyplaterc2
{
 TknU8 choice;
 union {
  NhuMBMSCountingRqst_r10 mbmsCountingRqst_r10;
 } val;
} NhuMCCH_MsgTyplaterc2;

typedef struct NhuMCCH_MsgTyplatermessageClassExtn
{
 TknPres pres;
} NhuMCCH_MsgTyplatermessageClassExtn;

typedef struct NhuMCCH_MsgTyplater
{
 TknU8 choice;
 union {
  NhuMCCH_MsgTyplaterc2 c2;
  NhuMCCH_MsgTyplatermessageClassExtn messageClassExtn;
 } val;
} NhuMCCH_MsgTyplater;

typedef struct NhuMCCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuMCCH_MsgTypc1 c1;
  NhuMCCH_MsgTyplater later;
 } val;
} NhuMCCH_MsgTyp;

typedef struct NhuMCCH_Msg
{
 TknPres pres;
 NhuMCCH_MsgTyp message;
} NhuMCCH_Msg;


typedef TknStrBSXL NhuMMEC;

typedef TknStrBSXL NhuS_TMSIm_TMSI;
typedef struct NhuS_TMSI
{
 TknPres pres;
 NhuMMEC mmec;
 NhuS_TMSIm_TMSI m_TMSI;
} NhuS_TMSI;


typedef TknU32 NhuIMSI_Digit;

typedef struct NhuIMSI
{
 TknU16 noComp;
 NhuIMSI_Digit *member;
}NhuIMSI;

typedef struct NhuPagUE_Identity
{
 TknU8 choice;
 union {
  NhuS_TMSI s_TMSI;
  NhuIMSI imsi;
 } val;
} NhuPagUE_Identity;


typedef enum enumNhuPagRecordcn_Domain
{
 NhuPagRecordcn_DomainpsEnum,
 NhuPagRecordcn_DomaincsEnum
} EnumNhuPagRecordcn_Domain;
typedef TknU32 NhuPagRecordcn_Domain;

typedef struct NhuPagRecord
{
 TknPres pres;
 NhuPagUE_Identity ue_Identity;
 NhuPagRecordcn_Domain cn_Domain;
} NhuPagRecord;

typedef struct NhuPagRecordLst
{
 TknU16 noComp;
 NhuPagRecord *member;
}NhuPagRecordLst;


typedef enum enumNhuPag_v1130_IEseab_ParamModfn_r11
{
 NhuPag_v1130_IEseab_ParamModfn_r11trueEnum
} EnumNhuPag_v1130_IEseab_ParamModfn_r11;
typedef TknU32 NhuPag_v1130_IEseab_ParamModfn_r11;

typedef struct NhuPag_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuPag_v1130_IEsnonCriticalExtn;

typedef struct NhuPag_v1130_IEs
{
 TknPres pres;
 NhuPag_v1130_IEseab_ParamModfn_r11 eab_ParamModfn_r11;
 NhuPag_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuPag_v1130_IEs;


typedef enum enumNhuPag_v920_IEscmas_Ind_r9
{
 NhuPag_v920_IEscmas_Ind_r9trueEnum
} EnumNhuPag_v920_IEscmas_Ind_r9;
typedef TknU32 NhuPag_v920_IEscmas_Ind_r9;

typedef struct NhuPag_v920_IEs
{
 TknPres pres;
 NhuPag_v920_IEscmas_Ind_r9 cmas_Ind_r9;
 NhuPag_v1130_IEs nonCriticalExtn;
} NhuPag_v920_IEs;


typedef TknStrOSXL NhuPag_v890_IEslateNonCriticalExtn;
typedef struct NhuPag_v890_IEs
{
 TknPres pres;
 NhuPag_v890_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuPag_v920_IEs nonCriticalExtn;
} NhuPag_v890_IEs;


typedef enum enumNhuPagsystemInfoModfn
{
 NhuPagsystemInfoModfntrueEnum
} EnumNhuPagsystemInfoModfn;
typedef TknU32 NhuPagsystemInfoModfn;


typedef enum enumNhuPagetws_Ind
{
 NhuPagetws_IndtrueEnum
} EnumNhuPagetws_Ind;
typedef TknU32 NhuPagetws_Ind;

typedef struct NhuPag
{
 TknPres pres;
 NhuPagRecordLst pagingRecordLst;
 NhuPagsystemInfoModfn systemInfoModfn;
 NhuPagetws_Ind etws_Ind;
 NhuPag_v890_IEs nonCriticalExtn;
} NhuPag;

typedef struct NhuPCCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuPag paging;
 } val;
} NhuPCCH_MsgTypc1;

typedef struct NhuPCCH_MsgTypmessageClassExtn
{
 TknPres pres;
} NhuPCCH_MsgTypmessageClassExtn;

typedef struct NhuPCCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuPCCH_MsgTypc1 c1;
  NhuPCCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuPCCH_MsgTyp;

typedef struct NhuPCCH_Msg
{
 TknPres pres;
 NhuPCCH_MsgTyp message;
} NhuPCCH_Msg;


typedef TknU32 NhuRRC_TrnsxnId;


typedef enum enumNhuT_PollRetransmit
{
 NhuT_PollRetransmitms5Enum,
 NhuT_PollRetransmitms10Enum,
 NhuT_PollRetransmitms15Enum,
 NhuT_PollRetransmitms20Enum,
 NhuT_PollRetransmitms25Enum,
 NhuT_PollRetransmitms30Enum,
 NhuT_PollRetransmitms35Enum,
 NhuT_PollRetransmitms40Enum,
 NhuT_PollRetransmitms45Enum,
 NhuT_PollRetransmitms50Enum,
 NhuT_PollRetransmitms55Enum,
 NhuT_PollRetransmitms60Enum,
 NhuT_PollRetransmitms65Enum,
 NhuT_PollRetransmitms70Enum,
 NhuT_PollRetransmitms75Enum,
 NhuT_PollRetransmitms80Enum,
 NhuT_PollRetransmitms85Enum,
 NhuT_PollRetransmitms90Enum,
 NhuT_PollRetransmitms95Enum,
 NhuT_PollRetransmitms100Enum,
 NhuT_PollRetransmitms105Enum,
 NhuT_PollRetransmitms110Enum,
 NhuT_PollRetransmitms115Enum,
 NhuT_PollRetransmitms120Enum,
 NhuT_PollRetransmitms125Enum,
 NhuT_PollRetransmitms130Enum,
 NhuT_PollRetransmitms135Enum,
 NhuT_PollRetransmitms140Enum,
 NhuT_PollRetransmitms145Enum,
 NhuT_PollRetransmitms150Enum,
 NhuT_PollRetransmitms155Enum,
 NhuT_PollRetransmitms160Enum,
 NhuT_PollRetransmitms165Enum,
 NhuT_PollRetransmitms170Enum,
 NhuT_PollRetransmitms175Enum,
 NhuT_PollRetransmitms180Enum,
 NhuT_PollRetransmitms185Enum,
 NhuT_PollRetransmitms190Enum,
 NhuT_PollRetransmitms195Enum,
 NhuT_PollRetransmitms200Enum,
 NhuT_PollRetransmitms205Enum,
 NhuT_PollRetransmitms210Enum,
 NhuT_PollRetransmitms215Enum,
 NhuT_PollRetransmitms220Enum,
 NhuT_PollRetransmitms225Enum,
 NhuT_PollRetransmitms230Enum,
 NhuT_PollRetransmitms235Enum,
 NhuT_PollRetransmitms240Enum,
 NhuT_PollRetransmitms245Enum,
 NhuT_PollRetransmitms250Enum,
 NhuT_PollRetransmitms300Enum,
 NhuT_PollRetransmitms350Enum,
 NhuT_PollRetransmitms400Enum,
 NhuT_PollRetransmitms450Enum,
 NhuT_PollRetransmitms500Enum,
 NhuT_PollRetransmitspare9Enum,
 NhuT_PollRetransmitspare8Enum,
 NhuT_PollRetransmitspare7Enum,
 NhuT_PollRetransmitspare6Enum,
 NhuT_PollRetransmitspare5Enum,
 NhuT_PollRetransmitspare4Enum,
 NhuT_PollRetransmitspare3Enum,
 NhuT_PollRetransmitspare2Enum,
 NhuT_PollRetransmitspare1Enum
} EnumNhuT_PollRetransmit;
typedef TknU32 NhuT_PollRetransmit;


typedef enum enumNhuPollPDU
{
 NhuPollPDUp4Enum,
 NhuPollPDUp8Enum,
 NhuPollPDUp16Enum,
 NhuPollPDUp32Enum,
 NhuPollPDUp64Enum,
 NhuPollPDUp128Enum,
 NhuPollPDUp256Enum,
 NhuPollPDUpInfinityEnum
} EnumNhuPollPDU;
typedef TknU32 NhuPollPDU;


typedef enum enumNhuPollByte
{
 NhuPollBytekB25Enum,
 NhuPollBytekB50Enum,
 NhuPollBytekB75Enum,
 NhuPollBytekB100Enum,
 NhuPollBytekB125Enum,
 NhuPollBytekB250Enum,
 NhuPollBytekB375Enum,
 NhuPollBytekB500Enum,
 NhuPollBytekB750Enum,
 NhuPollBytekB1000Enum,
 NhuPollBytekB1250Enum,
 NhuPollBytekB1500Enum,
 NhuPollBytekB2000Enum,
 NhuPollBytekB3000Enum,
 NhuPollBytekBinfinityEnum,
 NhuPollBytespare1Enum
} EnumNhuPollByte;
typedef TknU32 NhuPollByte;


typedef enum enumNhuUL_AM_RLCmaxRetxThreshold
{
 NhuUL_AM_RLCmaxRetxThresholdt1Enum,
 NhuUL_AM_RLCmaxRetxThresholdt2Enum,
 NhuUL_AM_RLCmaxRetxThresholdt3Enum,
 NhuUL_AM_RLCmaxRetxThresholdt4Enum,
 NhuUL_AM_RLCmaxRetxThresholdt6Enum,
 NhuUL_AM_RLCmaxRetxThresholdt8Enum,
 NhuUL_AM_RLCmaxRetxThresholdt16Enum,
 NhuUL_AM_RLCmaxRetxThresholdt32Enum
} EnumNhuUL_AM_RLCmaxRetxThreshold;
typedef TknU32 NhuUL_AM_RLCmaxRetxThreshold;

typedef struct NhuUL_AM_RLC
{
 TknPres pres;
 NhuT_PollRetransmit t_PollRetransmit;
 NhuPollPDU pollPDU;
 NhuPollByte pollByte;
 NhuUL_AM_RLCmaxRetxThreshold maxRetxThreshold;
} NhuUL_AM_RLC;


typedef enum enumNhuT_Reordering
{
 NhuT_Reorderingms0Enum,
 NhuT_Reorderingms5Enum,
 NhuT_Reorderingms10Enum,
 NhuT_Reorderingms15Enum,
 NhuT_Reorderingms20Enum,
 NhuT_Reorderingms25Enum,
 NhuT_Reorderingms30Enum,
 NhuT_Reorderingms35Enum,
 NhuT_Reorderingms40Enum,
 NhuT_Reorderingms45Enum,
 NhuT_Reorderingms50Enum,
 NhuT_Reorderingms55Enum,
 NhuT_Reorderingms60Enum,
 NhuT_Reorderingms65Enum,
 NhuT_Reorderingms70Enum,
 NhuT_Reorderingms75Enum,
 NhuT_Reorderingms80Enum,
 NhuT_Reorderingms85Enum,
 NhuT_Reorderingms90Enum,
 NhuT_Reorderingms95Enum,
 NhuT_Reorderingms100Enum,
 NhuT_Reorderingms110Enum,
 NhuT_Reorderingms120Enum,
 NhuT_Reorderingms130Enum,
 NhuT_Reorderingms140Enum,
 NhuT_Reorderingms150Enum,
 NhuT_Reorderingms160Enum,
 NhuT_Reorderingms170Enum,
 NhuT_Reorderingms180Enum,
 NhuT_Reorderingms190Enum,
 NhuT_Reorderingms200Enum,
 NhuT_Reorderingspare1Enum
} EnumNhuT_Reordering;
typedef TknU32 NhuT_Reordering;


typedef enum enumNhuT_StatusProhibit
{
 NhuT_StatusProhibitms0Enum,
 NhuT_StatusProhibitms5Enum,
 NhuT_StatusProhibitms10Enum,
 NhuT_StatusProhibitms15Enum,
 NhuT_StatusProhibitms20Enum,
 NhuT_StatusProhibitms25Enum,
 NhuT_StatusProhibitms30Enum,
 NhuT_StatusProhibitms35Enum,
 NhuT_StatusProhibitms40Enum,
 NhuT_StatusProhibitms45Enum,
 NhuT_StatusProhibitms50Enum,
 NhuT_StatusProhibitms55Enum,
 NhuT_StatusProhibitms60Enum,
 NhuT_StatusProhibitms65Enum,
 NhuT_StatusProhibitms70Enum,
 NhuT_StatusProhibitms75Enum,
 NhuT_StatusProhibitms80Enum,
 NhuT_StatusProhibitms85Enum,
 NhuT_StatusProhibitms90Enum,
 NhuT_StatusProhibitms95Enum,
 NhuT_StatusProhibitms100Enum,
 NhuT_StatusProhibitms105Enum,
 NhuT_StatusProhibitms110Enum,
 NhuT_StatusProhibitms115Enum,
 NhuT_StatusProhibitms120Enum,
 NhuT_StatusProhibitms125Enum,
 NhuT_StatusProhibitms130Enum,
 NhuT_StatusProhibitms135Enum,
 NhuT_StatusProhibitms140Enum,
 NhuT_StatusProhibitms145Enum,
 NhuT_StatusProhibitms150Enum,
 NhuT_StatusProhibitms155Enum,
 NhuT_StatusProhibitms160Enum,
 NhuT_StatusProhibitms165Enum,
 NhuT_StatusProhibitms170Enum,
 NhuT_StatusProhibitms175Enum,
 NhuT_StatusProhibitms180Enum,
 NhuT_StatusProhibitms185Enum,
 NhuT_StatusProhibitms190Enum,
 NhuT_StatusProhibitms195Enum,
 NhuT_StatusProhibitms200Enum,
 NhuT_StatusProhibitms205Enum,
 NhuT_StatusProhibitms210Enum,
 NhuT_StatusProhibitms215Enum,
 NhuT_StatusProhibitms220Enum,
 NhuT_StatusProhibitms225Enum,
 NhuT_StatusProhibitms230Enum,
 NhuT_StatusProhibitms235Enum,
 NhuT_StatusProhibitms240Enum,
 NhuT_StatusProhibitms245Enum,
 NhuT_StatusProhibitms250Enum,
 NhuT_StatusProhibitms300Enum,
 NhuT_StatusProhibitms350Enum,
 NhuT_StatusProhibitms400Enum,
 NhuT_StatusProhibitms450Enum,
 NhuT_StatusProhibitms500Enum,
 NhuT_StatusProhibitspare8Enum,
 NhuT_StatusProhibitspare7Enum,
 NhuT_StatusProhibitspare6Enum,
 NhuT_StatusProhibitspare5Enum,
 NhuT_StatusProhibitspare4Enum,
 NhuT_StatusProhibitspare3Enum,
 NhuT_StatusProhibitspare2Enum,
 NhuT_StatusProhibitspare1Enum
} EnumNhuT_StatusProhibit;
typedef TknU32 NhuT_StatusProhibit;

typedef struct NhuDL_AM_RLC
{
 TknPres pres;
 NhuT_Reordering t_Reordering;
 NhuT_StatusProhibit t_StatusProhibit;
} NhuDL_AM_RLC;


typedef enum enumNhuSN_FieldLength
{
 NhuSN_FieldLengthsize5Enum,
 NhuSN_FieldLengthsize10Enum
} EnumNhuSN_FieldLength;
typedef TknU32 NhuSN_FieldLength;

typedef struct NhuUL_UM_RLC
{
 TknPres pres;
 NhuSN_FieldLength sn_FieldLength;
} NhuUL_UM_RLC;

typedef struct NhuDL_UM_RLC
{
 TknPres pres;
 NhuSN_FieldLength sn_FieldLength;
 NhuT_Reordering t_Reordering;
} NhuDL_UM_RLC;

typedef struct NhuRLC_Configam
{
 TknPres pres;
 NhuUL_AM_RLC ul_AM_RLC;
 NhuDL_AM_RLC dl_AM_RLC;
} NhuRLC_Configam;

typedef struct NhuRLC_Configum_Bi_Directional
{
 TknPres pres;
 NhuUL_UM_RLC ul_UM_RLC;
 NhuDL_UM_RLC dl_UM_RLC;
} NhuRLC_Configum_Bi_Directional;

typedef struct NhuRLC_Configum_Uni_Directional_UL
{
 TknPres pres;
 NhuUL_UM_RLC ul_UM_RLC;
} NhuRLC_Configum_Uni_Directional_UL;

typedef struct NhuRLC_Configum_Uni_Directional_DL
{
 TknPres pres;
 NhuDL_UM_RLC dl_UM_RLC;
} NhuRLC_Configum_Uni_Directional_DL;

typedef struct NhuRLC_Config
{
 TknU8 choice;
 union {
  NhuRLC_Configam am;
  NhuRLC_Configum_Bi_Directional um_Bi_Directional;
  NhuRLC_Configum_Uni_Directional_UL um_Uni_Directional_UL;
  NhuRLC_Configum_Uni_Directional_DL um_Uni_Directional_DL;
 } val;
} NhuRLC_Config;


typedef TknU32 NhuLogChannelConfigul_SpecificParamspriority;


typedef enum enumNhuLogChannelConfigul_SpecificParamsprioritisedBitRate
{
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps0Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps8Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps16Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps32Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps64Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps128Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps256Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRateinfinityEnum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps512_v1020Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps1024_v1020Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps2048_v1020Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatespare5Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatespare4Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatespare3Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatespare2Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatespare1Enum
} EnumNhuLogChannelConfigul_SpecificParamsprioritisedBitRate;
typedef TknU32 NhuLogChannelConfigul_SpecificParamsprioritisedBitRate;


typedef enum enumNhuLogChannelConfigul_SpecificParamsbucketSizeDuration
{
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationms50Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationms100Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationms150Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationms300Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationms500Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationms1000Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationspare2Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationspare1Enum
} EnumNhuLogChannelConfigul_SpecificParamsbucketSizeDuration;
typedef TknU32 NhuLogChannelConfigul_SpecificParamsbucketSizeDuration;


typedef TknU32 NhuLogChannelConfigul_SpecificParamslogicalChannelGroup;

typedef struct NhuLogChannelConfigul_SpecificParams
{
 TknPres pres;
 NhuLogChannelConfigul_SpecificParamspriority priority;
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRate prioritisedBitRate;
 NhuLogChannelConfigul_SpecificParamsbucketSizeDuration bucketSizeDuration;
 NhuLogChannelConfigul_SpecificParamslogicalChannelGroup logicalChannelGroup;
} NhuLogChannelConfigul_SpecificParams;


typedef enum enumNhuLogChannelConfigextaddgrp_1logicalChannelSR_Mask_r9
{
 NhuLogChannelConfigextaddgrp_1logicalChannelSR_Mask_r9setupEnum
} EnumNhuLogChannelConfigextaddgrp_1logicalChannelSR_Mask_r9;
typedef TknU32 NhuLogChannelConfigextaddgrp_1logicalChannelSR_Mask_r9;

typedef struct NhuLogChannelConfigextaddgrp_1
{
 TknPres pres;
 NhuLogChannelConfigextaddgrp_1logicalChannelSR_Mask_r9 logicalChannelSR_Mask_r9;
} NhuLogChannelConfigextaddgrp_1;

typedef struct NhuLogChannelConfig
{
 TknPres pres;
 NhuLogChannelConfigul_SpecificParams ul_SpecificParams;
 NhuLogChannelConfigextaddgrp_1 extaddgrp_1;
} NhuLogChannelConfig;


typedef TknU32 NhuSRB_ToAddModsrb_Identity;

typedef struct NhuSRB_ToAddModrlc_Config
{
 TknU8 choice;
 union {
  NhuRLC_Config explicitValue;
 } val;
} NhuSRB_ToAddModrlc_Config;

typedef struct NhuSRB_ToAddModlogicalChannelConfig
{
 TknU8 choice;
 union {
  NhuLogChannelConfig explicitValue;
 } val;
} NhuSRB_ToAddModlogicalChannelConfig;

typedef struct NhuSRB_ToAddMod
{
 TknPres pres;
 NhuSRB_ToAddModsrb_Identity srb_Identity;
 NhuSRB_ToAddModrlc_Config rlc_Config;
 NhuSRB_ToAddModlogicalChannelConfig logicalChannelConfig;
} NhuSRB_ToAddMod;

typedef struct NhuSRB_ToAddModLst
{
 TknU16 noComp;
 NhuSRB_ToAddMod *member;
}NhuSRB_ToAddModLst;


typedef TknU32 NhuDRB_Identity;


typedef enum enumNhuPDCP_ConfigdiscardTimer
{
 NhuPDCP_ConfigdiscardTimerms50Enum,
 NhuPDCP_ConfigdiscardTimerms100Enum,
 NhuPDCP_ConfigdiscardTimerms150Enum,
 NhuPDCP_ConfigdiscardTimerms300Enum,
 NhuPDCP_ConfigdiscardTimerms500Enum,
 NhuPDCP_ConfigdiscardTimerms750Enum,
 NhuPDCP_ConfigdiscardTimerms1500Enum,
 NhuPDCP_ConfigdiscardTimerinfinityEnum
} EnumNhuPDCP_ConfigdiscardTimer;
typedef TknU32 NhuPDCP_ConfigdiscardTimer;


typedef TknU8 NhuPDCP_Configrlc_AMstatusReportReqd;

typedef struct NhuPDCP_Configrlc_AM
{
 TknPres pres;
 NhuPDCP_Configrlc_AMstatusReportReqd statusReportReqd;
} NhuPDCP_Configrlc_AM;


typedef enum enumNhuPDCP_Configrlc_UMpdcp_SN_Size
{
 NhuPDCP_Configrlc_UMpdcp_SN_Sizelen7bitsEnum,
 NhuPDCP_Configrlc_UMpdcp_SN_Sizelen12bitsEnum
} EnumNhuPDCP_Configrlc_UMpdcp_SN_Size;
typedef TknU32 NhuPDCP_Configrlc_UMpdcp_SN_Size;

typedef struct NhuPDCP_Configrlc_UM
{
 TknPres pres;
 NhuPDCP_Configrlc_UMpdcp_SN_Size pdcp_SN_Size;
} NhuPDCP_Configrlc_UM;


typedef TknU32 NhuPDCP_ConfigheaderCompressionrohcmaxCID;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0001;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0002;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0003;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0004;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0006;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0101;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0102;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0103;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0104;

typedef struct NhuPDCP_ConfigheaderCompressionrohcprofiles
{
 TknPres pres;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0001 profile0x0001;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0002 profile0x0002;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0003 profile0x0003;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0004 profile0x0004;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0006 profile0x0006;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0101 profile0x0101;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0102 profile0x0102;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0103 profile0x0103;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0104 profile0x0104;
} NhuPDCP_ConfigheaderCompressionrohcprofiles;

typedef struct NhuPDCP_ConfigheaderCompressionrohc
{
 TknPres pres;
 NhuPDCP_ConfigheaderCompressionrohcmaxCID maxCID;
 NhuPDCP_ConfigheaderCompressionrohcprofiles profiles;
} NhuPDCP_ConfigheaderCompressionrohc;

typedef struct NhuPDCP_ConfigheaderCompression
{
 TknU8 choice;
 union {
  NhuPDCP_ConfigheaderCompressionrohc rohc;
 } val;
} NhuPDCP_ConfigheaderCompression;


typedef enum enumNhuPDCP_Configextaddgrp_1rn_IntegrityProtection_r10
{
 NhuPDCP_Configextaddgrp_1rn_IntegrityProtection_r10enabledEnum
} EnumNhuPDCP_Configextaddgrp_1rn_IntegrityProtection_r10;
typedef TknU32 NhuPDCP_Configextaddgrp_1rn_IntegrityProtection_r10;


typedef enum enumNhuPDCP_Configextaddgrp_2pdcp_SN_Size_v1130
{
 NhuPDCP_Configextaddgrp_2pdcp_SN_Size_v1130len15bitsEnum
} EnumNhuPDCP_Configextaddgrp_2pdcp_SN_Size_v1130;
typedef TknU32 NhuPDCP_Configextaddgrp_2pdcp_SN_Size_v1130;

typedef struct NhuPDCP_Configextaddgrp_1
{
 TknPres pres;
 NhuPDCP_Configextaddgrp_1rn_IntegrityProtection_r10 rn_IntegrityProtection_r10;
} NhuPDCP_Configextaddgrp_1;

typedef struct NhuPDCP_Configextaddgrp_2
{
 TknPres pres;
 NhuPDCP_Configextaddgrp_2pdcp_SN_Size_v1130 pdcp_SN_Size_v1130;
} NhuPDCP_Configextaddgrp_2;

typedef struct NhuPDCP_Config
{
 TknPres pres;
 NhuPDCP_ConfigdiscardTimer discardTimer;
 NhuPDCP_Configrlc_AM rlc_AM;
 NhuPDCP_Configrlc_UM rlc_UM;
 NhuPDCP_ConfigheaderCompression headerCompression;
 NhuPDCP_Configextaddgrp_1 extaddgrp_1;
 NhuPDCP_Configextaddgrp_2 extaddgrp_2;
} NhuPDCP_Config;


typedef TknU32 NhuDRB_ToAddModeps_BrIdentity;


typedef TknU32 NhuDRB_ToAddModlogicalChannelIdentity;

typedef struct NhuDRB_ToAddMod
{
 TknPres pres;
 NhuDRB_ToAddModeps_BrIdentity eps_BrIdentity;
 NhuDRB_Identity drb_Identity;
 NhuPDCP_Config pdcp_Config;
 NhuRLC_Config rlc_Config;
 NhuDRB_ToAddModlogicalChannelIdentity logicalChannelIdentity;
 NhuLogChannelConfig logicalChannelConfig;
} NhuDRB_ToAddMod;

typedef struct NhuDRB_ToAddModLst
{
 TknU16 noComp;
 NhuDRB_ToAddMod *member;
}NhuDRB_ToAddModLst;

typedef struct NhuDRB_ToRlsLst
{
 TknU16 noComp;
 NhuDRB_Identity *member;
}NhuDRB_ToRlsLst;


typedef enum enumNhuDRX_ConfigsetuponDurationTimer
{
 NhuDRX_ConfigsetuponDurationTimerpsf1Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf2Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf3Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf4Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf5Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf6Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf8Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf10Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf20Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf30Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf40Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf50Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf60Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf80Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf100Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf200Enum
} EnumNhuDRX_ConfigsetuponDurationTimer;
typedef TknU32 NhuDRX_ConfigsetuponDurationTimer;


typedef enum enumNhuDRX_Configsetupdrx_InactivityTimer
{
 NhuDRX_Configsetupdrx_InactivityTimerpsf1Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf2Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf3Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf4Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf5Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf6Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf8Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf10Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf20Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf30Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf40Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf50Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf60Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf80Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf100Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf200Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf300Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf500Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf750Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf1280Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf1920Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf2560Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf0_v1020Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare9Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare8Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare7Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare6Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare5Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare4Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare3Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare2Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare1Enum
} EnumNhuDRX_Configsetupdrx_InactivityTimer;
typedef TknU32 NhuDRX_Configsetupdrx_InactivityTimer;


typedef enum enumNhuDRX_Configsetupdrx_ReTxTimer
{
 NhuDRX_Configsetupdrx_ReTxTimerpsf1Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf2Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf4Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf6Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf8Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf16Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf24Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf33Enum
} EnumNhuDRX_Configsetupdrx_ReTxTimer;
typedef TknU32 NhuDRX_Configsetupdrx_ReTxTimer;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf10;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf20;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf32;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf40;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf64;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf80;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf128;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf160;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf256;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf320;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf512;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf640;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf1024;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf1280;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf2048;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf2560;

typedef struct NhuDRX_ConfigsetuplongDRX_CycleStartOffset
{
 TknU8 choice;
 union {
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf10 sf10;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf20 sf20;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf32 sf32;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf40 sf40;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf64 sf64;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf80 sf80;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf128 sf128;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf160 sf160;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf256 sf256;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf320 sf320;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf512 sf512;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf640 sf640;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf1024 sf1024;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf1280 sf1280;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf2048 sf2048;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf2560 sf2560;
 } val;
} NhuDRX_ConfigsetuplongDRX_CycleStartOffset;


typedef enum enumNhuDRX_ConfigsetupshortDRXshortDRX_Cycle
{
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf2Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf5Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf8Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf10Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf16Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf20Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf32Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf40Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf64Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf80Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf128Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf160Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf256Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf320Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf512Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf640Enum
} EnumNhuDRX_ConfigsetupshortDRXshortDRX_Cycle;
typedef TknU32 NhuDRX_ConfigsetupshortDRXshortDRX_Cycle;


typedef TknU32 NhuDRX_ConfigsetupshortDRXdrxShortCycleTimer;

typedef struct NhuDRX_ConfigsetupshortDRX
{
 TknPres pres;
 NhuDRX_ConfigsetupshortDRXshortDRX_Cycle shortDRX_Cycle;
 NhuDRX_ConfigsetupshortDRXdrxShortCycleTimer drxShortCycleTimer;
} NhuDRX_ConfigsetupshortDRX;

typedef struct NhuDRX_Configsetup
{
 TknPres pres;
 NhuDRX_ConfigsetuponDurationTimer onDurationTimer;
 NhuDRX_Configsetupdrx_InactivityTimer drx_InactivityTimer;
 NhuDRX_Configsetupdrx_ReTxTimer drx_ReTxTimer;
 NhuDRX_ConfigsetuplongDRX_CycleStartOffset longDRX_CycleStartOffset;
 NhuDRX_ConfigsetupshortDRX shortDRX;
} NhuDRX_Configsetup;

typedef struct NhuDRX_Config
{
 TknU8 choice;
 union {
  NhuDRX_Configsetup setup;
 } val;
} NhuDRX_Config;


typedef TknU32 NhuSTAG_Id_r11;

typedef struct NhuSTAG_ToRlsLst_r11
{
 TknU16 noComp;
 NhuSTAG_Id_r11 *member;
}NhuSTAG_ToRlsLst_r11;

typedef struct NhuSTAG_ToAddMod_r11
{
 TknPres pres;
 NhuSTAG_Id_r11 stag_Id_r11;
 NhuTimeAlignmentTimer timeAlignmentTimerSTAG_r11;
} NhuSTAG_ToAddMod_r11;

typedef struct NhuSTAG_ToAddModLst_r11
{
 TknU16 noComp;
 NhuSTAG_ToAddMod_r11 *member;
}NhuSTAG_ToAddModLst_r11;


typedef enum enumNhuDRX_Config_v1130drx_ReTxTimer_v1130
{
 NhuDRX_Config_v1130drx_ReTxTimer_v1130psf0_v1130Enum
} EnumNhuDRX_Config_v1130drx_ReTxTimer_v1130;
typedef TknU32 NhuDRX_Config_v1130drx_ReTxTimer_v1130;


typedef TknU32 NhuDRX_Config_v1130longDRX_CycleStartOffset_v1130sf60_v1130;


typedef TknU32 NhuDRX_Config_v1130longDRX_CycleStartOffset_v1130sf70_v1130;

typedef struct NhuDRX_Config_v1130longDRX_CycleStartOffset_v1130
{
 TknU8 choice;
 union {
  NhuDRX_Config_v1130longDRX_CycleStartOffset_v1130sf60_v1130 sf60_v1130;
  NhuDRX_Config_v1130longDRX_CycleStartOffset_v1130sf70_v1130 sf70_v1130;
 } val;
} NhuDRX_Config_v1130longDRX_CycleStartOffset_v1130;


typedef enum enumNhuDRX_Config_v1130shortDRX_Cycle_v1130
{
 NhuDRX_Config_v1130shortDRX_Cycle_v1130sf4_v1130Enum
} EnumNhuDRX_Config_v1130shortDRX_Cycle_v1130;
typedef TknU32 NhuDRX_Config_v1130shortDRX_Cycle_v1130;

typedef struct NhuDRX_Config_v1130
{
 TknPres pres;
 NhuDRX_Config_v1130drx_ReTxTimer_v1130 drx_ReTxTimer_v1130;
 NhuDRX_Config_v1130longDRX_CycleStartOffset_v1130 longDRX_CycleStartOffset_v1130;
 NhuDRX_Config_v1130shortDRX_Cycle_v1130 shortDRX_Cycle_v1130;
} NhuDRX_Config_v1130;


typedef enum enumNhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Tx
{
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn1Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn2Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn3Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn4Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn5Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn6Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn7Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn8Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn10Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn12Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn16Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn20Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn24Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn28Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txspare2Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txspare1Enum
} EnumNhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Tx;
typedef TknU32 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Tx;


typedef enum enumNhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timer
{
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf5Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf10Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf16Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf20Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf32Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf40Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf64Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf80Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf128Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf160Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf320Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf640Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf1280Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf2560Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_TimerinfinityEnum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timerspare1Enum
} EnumNhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timer;
typedef TknU32 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timer;


typedef enum enumNhuMAC_MainConfigul_SCH_ConfigretxBSR_Timer
{
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timersf320Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timersf640Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timersf1280Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timersf2560Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timersf5120Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timersf10240Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timerspare2Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timerspare1Enum
} EnumNhuMAC_MainConfigul_SCH_ConfigretxBSR_Timer;
typedef TknU32 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timer;


typedef TknU8 NhuMAC_MainConfigul_SCH_ConfigttiBundling;

typedef struct NhuMAC_MainConfigul_SCH_Config
{
 TknPres pres;
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Tx maxHARQ_Tx;
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timer periodicBSR_Timer;
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timer retxBSR_Timer;
 NhuMAC_MainConfigul_SCH_ConfigttiBundling ttiBundling;
} NhuMAC_MainConfigul_SCH_Config;


typedef enum enumNhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timer
{
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf10Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf20Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf50Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf100Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf200Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf500Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf1000Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_TimerinfinityEnum
} EnumNhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timer;
typedef TknU32 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timer;


typedef enum enumNhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timer
{
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf0Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf10Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf20Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf50Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf100Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf200Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf500Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf1000Enum
} EnumNhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timer;
typedef TknU32 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timer;


typedef enum enumNhuMAC_MainConfigphr_Configsetupdl_PathlossChange
{
 NhuMAC_MainConfigphr_Configsetupdl_PathlossChangedB1Enum,
 NhuMAC_MainConfigphr_Configsetupdl_PathlossChangedB3Enum,
 NhuMAC_MainConfigphr_Configsetupdl_PathlossChangedB6Enum,
 NhuMAC_MainConfigphr_Configsetupdl_PathlossChangeinfinityEnum
} EnumNhuMAC_MainConfigphr_Configsetupdl_PathlossChange;
typedef TknU32 NhuMAC_MainConfigphr_Configsetupdl_PathlossChange;

typedef struct NhuMAC_MainConfigphr_Configsetup
{
 TknPres pres;
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timer periodicPHR_Timer;
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timer prohibitPHR_Timer;
 NhuMAC_MainConfigphr_Configsetupdl_PathlossChange dl_PathlossChange;
} NhuMAC_MainConfigphr_Configsetup;

typedef struct NhuMAC_MainConfigphr_Config
{
 TknU8 choice;
 union {
  NhuMAC_MainConfigphr_Configsetup setup;
 } val;
} NhuMAC_MainConfigphr_Config;


typedef TknU32 NhuMAC_MainConfigextaddgrp_1sr_ProhibitTimer_r9;


typedef enum enumNhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10
{
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10rf2Enum,
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10rf4Enum,
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10rf8Enum,
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10rf16Enum,
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10rf32Enum,
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10rf64Enum,
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10rf128Enum,
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10spareEnum
} EnumNhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10;
typedef TknU32 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10;


typedef enum enumNhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedBSR_Sizes_r10
{
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedBSR_Sizes_r10setupEnum
} EnumNhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedBSR_Sizes_r10;
typedef TknU32 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedBSR_Sizes_r10;


typedef enum enumNhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedPHR_r10
{
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedPHR_r10setupEnum
} EnumNhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedPHR_r10;
typedef TknU32 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedPHR_r10;

typedef struct NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020
{
 TknPres pres;
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10 sCellDeactivationTimer_r10;
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedBSR_Sizes_r10 extendedBSR_Sizes_r10;
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedPHR_r10 extendedPHR_r10;
} NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020;

typedef struct NhuMAC_MainConfigextaddgrp_1
{
 TknPres pres;
 NhuMAC_MainConfigextaddgrp_1sr_ProhibitTimer_r9 sr_ProhibitTimer_r9;
} NhuMAC_MainConfigextaddgrp_1;

typedef struct NhuMAC_MainConfigextaddgrp_2
{
 TknPres pres;
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020 mac_MainConfig_v1020;
} NhuMAC_MainConfigextaddgrp_2;

typedef struct NhuMAC_MainConfigextaddgrp_3
{
 TknPres pres;
 NhuSTAG_ToRlsLst_r11 stag_ToRlsLst_r11;
 NhuSTAG_ToAddModLst_r11 stag_ToAddModLst_r11;
 NhuDRX_Config_v1130 drx_Config_v1130;
} NhuMAC_MainConfigextaddgrp_3;

typedef struct NhuMAC_MainConfig
{
 TknPres pres;
 NhuMAC_MainConfigul_SCH_Config ul_SCH_Config;
 NhuDRX_Config drx_Config;
 NhuTimeAlignmentTimer timeAlignmentTimerDedicated;
 NhuMAC_MainConfigphr_Config phr_Config;
 NhuMAC_MainConfigextaddgrp_1 extaddgrp_1;
 NhuMAC_MainConfigextaddgrp_2 extaddgrp_2;
 NhuMAC_MainConfigextaddgrp_3 extaddgrp_3;
} NhuMAC_MainConfig;


typedef TknStrBSXL NhuC_RNTI;
typedef TknU32 NhuN1PUCCH_AN_PersistentLstMember;

typedef struct NhuN1PUCCH_AN_PersistentLst
{
 TknU16 noComp;
 NhuN1PUCCH_AN_PersistentLstMember *member;
}NhuN1PUCCH_AN_PersistentLst;


typedef enum enumNhuSPS_ConfigDLsetupsemiPersistSchedIntervalDL
{
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf10Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf20Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf32Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf40Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf64Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf80Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf128Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf160Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf320Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf640Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLspare6Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLspare5Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLspare4Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLspare3Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLspare2Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLspare1Enum
} EnumNhuSPS_ConfigDLsetupsemiPersistSchedIntervalDL;
typedef TknU32 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDL;


typedef TknU32 NhuSPS_ConfigDLsetupnumberOfConfSPS_Processes;

typedef struct NhuSPS_ConfigDLsetupextaddgrp_1twoAntennaPortActivated_r10setup
{
 TknPres pres;
 NhuN1PUCCH_AN_PersistentLst n1PUCCH_AN_PersistentLstP1_r10;
} NhuSPS_ConfigDLsetupextaddgrp_1twoAntennaPortActivated_r10setup;

typedef struct NhuSPS_ConfigDLsetupextaddgrp_1twoAntennaPortActivated_r10
{
 TknU8 choice;
 union {
  NhuSPS_ConfigDLsetupextaddgrp_1twoAntennaPortActivated_r10setup setup;
 } val;
} NhuSPS_ConfigDLsetupextaddgrp_1twoAntennaPortActivated_r10;

typedef struct NhuSPS_ConfigDLsetupextaddgrp_1
{
 TknPres pres;
 NhuSPS_ConfigDLsetupextaddgrp_1twoAntennaPortActivated_r10 twoAntennaPortActivated_r10;
} NhuSPS_ConfigDLsetupextaddgrp_1;

typedef struct NhuSPS_ConfigDLsetup
{
 TknPres pres;
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDL semiPersistSchedIntervalDL;
 NhuSPS_ConfigDLsetupnumberOfConfSPS_Processes numberOfConfSPS_Processes;
 NhuN1PUCCH_AN_PersistentLst n1PUCCH_AN_PersistentLst;
 NhuSPS_ConfigDLsetupextaddgrp_1 extaddgrp_1;
} NhuSPS_ConfigDLsetup;

typedef struct NhuSPS_ConfigDL
{
 TknU8 choice;
 union {
  NhuSPS_ConfigDLsetup setup;
 } val;
} NhuSPS_ConfigDL;


typedef enum enumNhuSPS_ConfigULsetupsemiPersistSchedIntervalUL
{
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf10Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf20Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf32Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf40Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf64Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf80Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf128Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf160Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf320Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf640Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULspare6Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULspare5Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULspare4Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULspare3Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULspare2Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULspare1Enum
} EnumNhuSPS_ConfigULsetupsemiPersistSchedIntervalUL;
typedef TknU32 NhuSPS_ConfigULsetupsemiPersistSchedIntervalUL;


typedef enum enumNhuSPS_ConfigULsetupimplicitRlsAfter
{
 NhuSPS_ConfigULsetupimplicitRlsAftere2Enum,
 NhuSPS_ConfigULsetupimplicitRlsAftere3Enum,
 NhuSPS_ConfigULsetupimplicitRlsAftere4Enum,
 NhuSPS_ConfigULsetupimplicitRlsAftere8Enum
} EnumNhuSPS_ConfigULsetupimplicitRlsAfter;
typedef TknU32 NhuSPS_ConfigULsetupimplicitRlsAfter;


typedef TknS32 NhuSPS_ConfigULsetupp0_Persistentp0_NominalPUSCH_Persistent;


typedef TknS32 NhuSPS_ConfigULsetupp0_Persistentp0_UE_PUSCH_Persistent;

typedef struct NhuSPS_ConfigULsetupp0_Persistent
{
 TknPres pres;
 NhuSPS_ConfigULsetupp0_Persistentp0_NominalPUSCH_Persistent p0_NominalPUSCH_Persistent;
 NhuSPS_ConfigULsetupp0_Persistentp0_UE_PUSCH_Persistent p0_UE_PUSCH_Persistent;
} NhuSPS_ConfigULsetupp0_Persistent;


typedef enum enumNhuSPS_ConfigULsetuptwoIntervalsConfig
{
 NhuSPS_ConfigULsetuptwoIntervalsConfigtrueEnum
} EnumNhuSPS_ConfigULsetuptwoIntervalsConfig;
typedef TknU32 NhuSPS_ConfigULsetuptwoIntervalsConfig;

typedef struct NhuSPS_ConfigULsetup
{
 TknPres pres;
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalUL semiPersistSchedIntervalUL;
 NhuSPS_ConfigULsetupimplicitRlsAfter implicitRlsAfter;
 NhuSPS_ConfigULsetupp0_Persistent p0_Persistent;
 NhuSPS_ConfigULsetuptwoIntervalsConfig twoIntervalsConfig;
} NhuSPS_ConfigULsetup;

typedef struct NhuSPS_ConfigUL
{
 TknU8 choice;
 union {
  NhuSPS_ConfigULsetup setup;
 } val;
} NhuSPS_ConfigUL;

typedef struct NhuSPS_Config
{
 TknPres pres;
 NhuC_RNTI semiPersistSchedC_RNTI;
 NhuSPS_ConfigDL sps_ConfigDL;
 NhuSPS_ConfigUL sps_ConfigUL;
} NhuSPS_Config;


typedef enum enumNhuPDSCH_ConfigDedicatedp_a
{
 NhuPDSCH_ConfigDedicatedp_adB_6Enum,
 NhuPDSCH_ConfigDedicatedp_adB_4dot77Enum,
 NhuPDSCH_ConfigDedicatedp_adB_3Enum,
 NhuPDSCH_ConfigDedicatedp_adB_1dot77Enum,
 NhuPDSCH_ConfigDedicatedp_adB0Enum,
 NhuPDSCH_ConfigDedicatedp_adB1Enum,
 NhuPDSCH_ConfigDedicatedp_adB2Enum,
 NhuPDSCH_ConfigDedicatedp_adB3Enum
} EnumNhuPDSCH_ConfigDedicatedp_a;
typedef TknU32 NhuPDSCH_ConfigDedicatedp_a;

typedef struct NhuPDSCH_ConfigDedicated
{
 TknPres pres;
 NhuPDSCH_ConfigDedicatedp_a p_a;
} NhuPDSCH_ConfigDedicated;


typedef enum enumNhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactor
{
 NhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactorn2Enum,
 NhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactorn4Enum,
 NhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactorn6Enum,
 NhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactorspare1Enum
} EnumNhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactor;
typedef TknU32 NhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactor;


typedef TknU32 NhuPUCCH_ConfigDedicatedackNackRepetitionsetupn1PUCCH_AN_Rep;

typedef struct NhuPUCCH_ConfigDedicatedackNackRepetitionsetup
{
 TknPres pres;
 NhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactor repetitionFactor;
 NhuPUCCH_ConfigDedicatedackNackRepetitionsetupn1PUCCH_AN_Rep n1PUCCH_AN_Rep;
} NhuPUCCH_ConfigDedicatedackNackRepetitionsetup;

typedef struct NhuPUCCH_ConfigDedicatedackNackRepetition
{
 TknU8 choice;
 union {
  NhuPUCCH_ConfigDedicatedackNackRepetitionsetup setup;
 } val;
} NhuPUCCH_ConfigDedicatedackNackRepetition;


typedef enum enumNhuPUCCH_ConfigDedicatedtdd_AckNackFeedbackMode
{
 NhuPUCCH_ConfigDedicatedtdd_AckNackFeedbackModebundlingEnum,
 NhuPUCCH_ConfigDedicatedtdd_AckNackFeedbackModemultiplexingEnum
} EnumNhuPUCCH_ConfigDedicatedtdd_AckNackFeedbackMode;
typedef TknU32 NhuPUCCH_ConfigDedicatedtdd_AckNackFeedbackMode;

typedef struct NhuPUCCH_ConfigDedicated
{
 TknPres pres;
 NhuPUCCH_ConfigDedicatedackNackRepetition ackNackRepetition;
 NhuPUCCH_ConfigDedicatedtdd_AckNackFeedbackMode tdd_AckNackFeedbackMode;
} NhuPUCCH_ConfigDedicated;


typedef TknU32 NhuPUSCH_ConfigDedicatedbetaOffset_ACK_Idx;


typedef TknU32 NhuPUSCH_ConfigDedicatedbetaOffset_RI_Idx;


typedef TknU32 NhuPUSCH_ConfigDedicatedbetaOffset_CQI_Idx;

typedef struct NhuPUSCH_ConfigDedicated
{
 TknPres pres;
 NhuPUSCH_ConfigDedicatedbetaOffset_ACK_Idx betaOffset_ACK_Idx;
 NhuPUSCH_ConfigDedicatedbetaOffset_RI_Idx betaOffset_RI_Idx;
 NhuPUSCH_ConfigDedicatedbetaOffset_CQI_Idx betaOffset_CQI_Idx;
} NhuPUSCH_ConfigDedicated;


typedef enum enumNhuFilterCoefficient
{
 NhuFilterCoefficientfc0Enum,
 NhuFilterCoefficientfc1Enum,
 NhuFilterCoefficientfc2Enum,
 NhuFilterCoefficientfc3Enum,
 NhuFilterCoefficientfc4Enum,
 NhuFilterCoefficientfc5Enum,
 NhuFilterCoefficientfc6Enum,
 NhuFilterCoefficientfc7Enum,
 NhuFilterCoefficientfc8Enum,
 NhuFilterCoefficientfc9Enum,
 NhuFilterCoefficientfc11Enum,
 NhuFilterCoefficientfc13Enum,
 NhuFilterCoefficientfc15Enum,
 NhuFilterCoefficientfc17Enum,
 NhuFilterCoefficientfc19Enum,
 NhuFilterCoefficientspare1Enum
} EnumNhuFilterCoefficient;
typedef TknU32 NhuFilterCoefficient;


typedef TknS32 NhuUlnkPowerCntrlDedicatedp0_UE_PUSCH;


typedef enum enumNhuUlnkPowerCntrlDedicateddeltaMCS_Enabled
{
 NhuUlnkPowerCntrlDedicateddeltaMCS_Enableden0Enum,
 NhuUlnkPowerCntrlDedicateddeltaMCS_Enableden1Enum
} EnumNhuUlnkPowerCntrlDedicateddeltaMCS_Enabled;
typedef TknU32 NhuUlnkPowerCntrlDedicateddeltaMCS_Enabled;


typedef TknU8 NhuUlnkPowerCntrlDedicatedaccumulationEnabled;


typedef TknS32 NhuUlnkPowerCntrlDedicatedp0_UE_PUCCH;


typedef TknU32 NhuUlnkPowerCntrlDedicatedpSRS_Offset;

typedef struct NhuUlnkPowerCntrlDedicated
{
 TknPres pres;
 NhuUlnkPowerCntrlDedicatedp0_UE_PUSCH p0_UE_PUSCH;
 NhuUlnkPowerCntrlDedicateddeltaMCS_Enabled deltaMCS_Enabled;
 NhuUlnkPowerCntrlDedicatedaccumulationEnabled accumulationEnabled;
 NhuUlnkPowerCntrlDedicatedp0_UE_PUCCH p0_UE_PUCCH;
 NhuUlnkPowerCntrlDedicatedpSRS_Offset pSRS_Offset;
 NhuFilterCoefficient filterCoefficient;
} NhuUlnkPowerCntrlDedicated;


typedef TknU32 NhuTPC_IdxindexOfFormat3;


typedef TknU32 NhuTPC_IdxindexOfFormat3A;

typedef struct NhuTPC_Idx
{
 TknU8 choice;
 union {
  NhuTPC_IdxindexOfFormat3 indexOfFormat3;
  NhuTPC_IdxindexOfFormat3A indexOfFormat3A;
 } val;
} NhuTPC_Idx;


typedef TknStrBSXL NhuTPC_PDCCH_Configsetuptpc_RNTI;
typedef struct NhuTPC_PDCCH_Configsetup
{
 TknPres pres;
 NhuTPC_PDCCH_Configsetuptpc_RNTI tpc_RNTI;
 NhuTPC_Idx tpc_Idx;
} NhuTPC_PDCCH_Configsetup;

typedef struct NhuTPC_PDCCH_Config
{
 TknU8 choice;
 union {
  NhuTPC_PDCCH_Configsetup setup;
 } val;
} NhuTPC_PDCCH_Config;


typedef enum enumNhuCQI_ReportModeAperiodic
{
 NhuCQI_ReportModeAperiodicrm12Enum,
 NhuCQI_ReportModeAperiodicrm20Enum,
 NhuCQI_ReportModeAperiodicrm22Enum,
 NhuCQI_ReportModeAperiodicrm30Enum,
 NhuCQI_ReportModeAperiodicrm31Enum,
 NhuCQI_ReportModeAperiodicspare3Enum,
 NhuCQI_ReportModeAperiodicspare2Enum,
 NhuCQI_ReportModeAperiodicspare1Enum
} EnumNhuCQI_ReportModeAperiodic;
typedef TknU32 NhuCQI_ReportModeAperiodic;


typedef TknU32 NhuCQI_ReportPeriodicsetupcqi_PUCCH_ResourceIdx;


typedef TknU32 NhuCQI_ReportPeriodicsetupcqi_pmi_ConfigIdx;


typedef TknU32 NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodicsubbandCQIk;

typedef struct NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodicsubbandCQI
{
 TknPres pres;
 NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodicsubbandCQIk k;
} NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodicsubbandCQI;

typedef struct NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodic
{
 TknU8 choice;
 union {
  NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodicsubbandCQI subbandCQI;
 } val;
} NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodic;


typedef TknU32 NhuCQI_ReportPeriodicsetupri_ConfigIdx;


typedef TknU8 NhuCQI_ReportPeriodicsetupsimultaneousAckNackAndCQI;

typedef struct NhuCQI_ReportPeriodicsetup
{
 TknPres pres;
 NhuCQI_ReportPeriodicsetupcqi_PUCCH_ResourceIdx cqi_PUCCH_ResourceIdx;
 NhuCQI_ReportPeriodicsetupcqi_pmi_ConfigIdx cqi_pmi_ConfigIdx;
 NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodic cqi_FormatIndicatorPeriodic;
 NhuCQI_ReportPeriodicsetupri_ConfigIdx ri_ConfigIdx;
 NhuCQI_ReportPeriodicsetupsimultaneousAckNackAndCQI simultaneousAckNackAndCQI;
} NhuCQI_ReportPeriodicsetup;

typedef struct NhuCQI_ReportPeriodic
{
 TknU8 choice;
 union {
  NhuCQI_ReportPeriodicsetup setup;
 } val;
} NhuCQI_ReportPeriodic;


typedef TknS32 NhuCQI_ReportConfignomPDSCH_RS_EPRE_Offset;

typedef struct NhuCQI_ReportConfig
{
 TknPres pres;
 NhuCQI_ReportModeAperiodic cqi_ReportModeAperiodic;
 NhuCQI_ReportConfignomPDSCH_RS_EPRE_Offset nomPDSCH_RS_EPRE_Offset;
 NhuCQI_ReportPeriodic cqi_ReportPeriodic;
} NhuCQI_ReportConfig;


typedef enum enumNhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidth
{
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidthbw0Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidthbw1Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidthbw2Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidthbw3Enum
} EnumNhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidth;
typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidth;


typedef enum enumNhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidth
{
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidthhbw0Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidthhbw1Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidthhbw2Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidthhbw3Enum
} EnumNhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidth;
typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidth;


typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedsetupfreqDomainPosition;


typedef TknU8 NhuSoundingRS_UL_ConfigDedicatedsetupduration;


typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_ConfigIdx;


typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedsetuptransmissionComb;


typedef enum enumNhuSoundingRS_UL_ConfigDedicatedsetupcyclicShift
{
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs0Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs1Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs2Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs3Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs4Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs5Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs6Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs7Enum
} EnumNhuSoundingRS_UL_ConfigDedicatedsetupcyclicShift;
typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShift;

typedef struct NhuSoundingRS_UL_ConfigDedicatedsetup
{
 TknPres pres;
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidth srs_Bandwidth;
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidth srs_HoppingBandwidth;
 NhuSoundingRS_UL_ConfigDedicatedsetupfreqDomainPosition freqDomainPosition;
 NhuSoundingRS_UL_ConfigDedicatedsetupduration duration;
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_ConfigIdx srs_ConfigIdx;
 NhuSoundingRS_UL_ConfigDedicatedsetuptransmissionComb transmissionComb;
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShift cyclicShift;
} NhuSoundingRS_UL_ConfigDedicatedsetup;

typedef struct NhuSoundingRS_UL_ConfigDedicated
{
 TknU8 choice;
 union {
  NhuSoundingRS_UL_ConfigDedicatedsetup setup;
 } val;
} NhuSoundingRS_UL_ConfigDedicated;


typedef enum enumNhuAntennaInfoDedicatedtransmissionMode
{
 NhuAntennaInfoDedicatedtransmissionModetm1Enum,
 NhuAntennaInfoDedicatedtransmissionModetm2Enum,
 NhuAntennaInfoDedicatedtransmissionModetm3Enum,
 NhuAntennaInfoDedicatedtransmissionModetm4Enum,
 NhuAntennaInfoDedicatedtransmissionModetm5Enum,
 NhuAntennaInfoDedicatedtransmissionModetm6Enum,
 NhuAntennaInfoDedicatedtransmissionModetm7Enum,
 NhuAntennaInfoDedicatedtransmissionModetm8_v920Enum
} EnumNhuAntennaInfoDedicatedtransmissionMode;
typedef TknU32 NhuAntennaInfoDedicatedtransmissionMode;


typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm3;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm3;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm4;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm4;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm5;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm5;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm6;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm6;
typedef struct NhuAntennaInfoDedicatedcodebookSubsetRestrn
{
 TknU8 choice;
 union {
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm3 n2TxAntenna_tm3;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm3 n4TxAntenna_tm3;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm4 n2TxAntenna_tm4;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm4 n4TxAntenna_tm4;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm5 n2TxAntenna_tm5;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm5 n4TxAntenna_tm5;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm6 n2TxAntenna_tm6;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm6 n4TxAntenna_tm6;
 } val;
} NhuAntennaInfoDedicatedcodebookSubsetRestrn;


typedef enum enumNhuAntennaInfoDedicatedue_TransmitAntennaSelectionsetup
{
 NhuAntennaInfoDedicatedue_TransmitAntennaSelectionsetupclosedLoopEnum,
 NhuAntennaInfoDedicatedue_TransmitAntennaSelectionsetupopenLoopEnum
} EnumNhuAntennaInfoDedicatedue_TransmitAntennaSelectionsetup;
typedef TknU32 NhuAntennaInfoDedicatedue_TransmitAntennaSelectionsetup;

typedef struct NhuAntennaInfoDedicatedue_TransmitAntennaSelection
{
 TknU8 choice;
 union {
  NhuAntennaInfoDedicatedue_TransmitAntennaSelectionsetup setup;
 } val;
} NhuAntennaInfoDedicatedue_TransmitAntennaSelection;

typedef struct NhuAntennaInfoDedicated
{
 TknPres pres;
 NhuAntennaInfoDedicatedtransmissionMode transmissionMode;
 NhuAntennaInfoDedicatedcodebookSubsetRestrn codebookSubsetRestrn;
 NhuAntennaInfoDedicatedue_TransmitAntennaSelection ue_TransmitAntennaSelection;
} NhuAntennaInfoDedicated;


typedef TknU32 NhuSchedulingRqstConfigsetupsr_PUCCH_ResourceIdx;


typedef TknU32 NhuSchedulingRqstConfigsetupsr_ConfigIdx;


typedef enum enumNhuSchedulingRqstConfigsetupdsr_TransMax
{
 NhuSchedulingRqstConfigsetupdsr_TransMaxn4Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxn8Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxn16Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxn32Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxn64Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxspare3Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxspare2Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxspare1Enum
} EnumNhuSchedulingRqstConfigsetupdsr_TransMax;
typedef TknU32 NhuSchedulingRqstConfigsetupdsr_TransMax;

typedef struct NhuSchedulingRqstConfigsetup
{
 TknPres pres;
 NhuSchedulingRqstConfigsetupsr_PUCCH_ResourceIdx sr_PUCCH_ResourceIdx;
 NhuSchedulingRqstConfigsetupsr_ConfigIdx sr_ConfigIdx;
 NhuSchedulingRqstConfigsetupdsr_TransMax dsr_TransMax;
} NhuSchedulingRqstConfigsetup;

typedef struct NhuSchedulingRqstConfig
{
 TknU8 choice;
 union {
  NhuSchedulingRqstConfigsetup setup;
 } val;
} NhuSchedulingRqstConfig;


typedef enum enumNhuCQI_ReportConfig_v920cqi_Mask_r9
{
 NhuCQI_ReportConfig_v920cqi_Mask_r9setupEnum
} EnumNhuCQI_ReportConfig_v920cqi_Mask_r9;
typedef TknU32 NhuCQI_ReportConfig_v920cqi_Mask_r9;


typedef enum enumNhuCQI_ReportConfig_v920pmi_RI_Report_r9
{
 NhuCQI_ReportConfig_v920pmi_RI_Report_r9setupEnum
} EnumNhuCQI_ReportConfig_v920pmi_RI_Report_r9;
typedef TknU32 NhuCQI_ReportConfig_v920pmi_RI_Report_r9;

typedef struct NhuCQI_ReportConfig_v920
{
 TknPres pres;
 NhuCQI_ReportConfig_v920cqi_Mask_r9 cqi_Mask_r9;
 NhuCQI_ReportConfig_v920pmi_RI_Report_r9 pmi_RI_Report_r9;
} NhuCQI_ReportConfig_v920;


typedef TknStrBSXL NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920n2TxAntenna_tm8_r9;

typedef TknStrBSXL NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920n4TxAntenna_tm8_r9;
typedef struct NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920
{
 TknU8 choice;
 union {
  NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920n2TxAntenna_tm8_r9 n2TxAntenna_tm8_r9;
  NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920n4TxAntenna_tm8_r9 n4TxAntenna_tm8_r9;
 } val;
} NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920;

typedef struct NhuAntennaInfoDedicated_v920
{
 TknPres pres;
 NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920 codebookSubsetRestrn_v920;
} NhuAntennaInfoDedicated_v920;


typedef enum enumNhuAntennaInfoDedicated_r10transmissionMode_r10
{
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm1Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm2Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm3Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm4Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm5Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm6Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm7Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm8_v920Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm9_v1020Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm10_v1130Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10spare6Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10spare5Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10spare4Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10spare3Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10spare2Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10spare1Enum
} EnumNhuAntennaInfoDedicated_r10transmissionMode_r10;
typedef TknU32 NhuAntennaInfoDedicated_r10transmissionMode_r10;


typedef TknStrBSXL NhuAntennaInfoDedicated_r10codebookSubsetRestrn_r10;

typedef enum enumNhuAntennaInfoDedicated_r10ue_TransmitAntennaSelectionsetup
{
 NhuAntennaInfoDedicated_r10ue_TransmitAntennaSelectionsetupclosedLoopEnum,
 NhuAntennaInfoDedicated_r10ue_TransmitAntennaSelectionsetupopenLoopEnum
} EnumNhuAntennaInfoDedicated_r10ue_TransmitAntennaSelectionsetup;
typedef TknU32 NhuAntennaInfoDedicated_r10ue_TransmitAntennaSelectionsetup;

typedef struct NhuAntennaInfoDedicated_r10ue_TransmitAntennaSelection
{
 TknU8 choice;
 union {
  NhuAntennaInfoDedicated_r10ue_TransmitAntennaSelectionsetup setup;
 } val;
} NhuAntennaInfoDedicated_r10ue_TransmitAntennaSelection;

typedef struct NhuAntennaInfoDedicated_r10
{
 TknPres pres;
 NhuAntennaInfoDedicated_r10transmissionMode_r10 transmissionMode_r10;
 NhuAntennaInfoDedicated_r10codebookSubsetRestrn_r10 codebookSubsetRestrn_r10;
 NhuAntennaInfoDedicated_r10ue_TransmitAntennaSelection ue_TransmitAntennaSelection;
} NhuAntennaInfoDedicated_r10;


typedef enum enumNhuAntennaInfoUL_r10transmissionModeUL_r10
{
 NhuAntennaInfoUL_r10transmissionModeUL_r10tm1Enum,
 NhuAntennaInfoUL_r10transmissionModeUL_r10tm2Enum,
 NhuAntennaInfoUL_r10transmissionModeUL_r10spare6Enum,
 NhuAntennaInfoUL_r10transmissionModeUL_r10spare5Enum,
 NhuAntennaInfoUL_r10transmissionModeUL_r10spare4Enum,
 NhuAntennaInfoUL_r10transmissionModeUL_r10spare3Enum,
 NhuAntennaInfoUL_r10transmissionModeUL_r10spare2Enum,
 NhuAntennaInfoUL_r10transmissionModeUL_r10spare1Enum
} EnumNhuAntennaInfoUL_r10transmissionModeUL_r10;
typedef TknU32 NhuAntennaInfoUL_r10transmissionModeUL_r10;


typedef enum enumNhuAntennaInfoUL_r10fourAntennaPortActivated_r10
{
 NhuAntennaInfoUL_r10fourAntennaPortActivated_r10setupEnum
} EnumNhuAntennaInfoUL_r10fourAntennaPortActivated_r10;
typedef TknU32 NhuAntennaInfoUL_r10fourAntennaPortActivated_r10;

typedef struct NhuAntennaInfoUL_r10
{
 TknPres pres;
 NhuAntennaInfoUL_r10transmissionModeUL_r10 transmissionModeUL_r10;
 NhuAntennaInfoUL_r10fourAntennaPortActivated_r10 fourAntennaPortActivated_r10;
} NhuAntennaInfoUL_r10;


typedef TknStrBSXL NhuCQI_ReportAperiodic_r10setupaperiodicCSI_Trigger_r10trigger1_r10;

typedef TknStrBSXL NhuCQI_ReportAperiodic_r10setupaperiodicCSI_Trigger_r10trigger2_r10;
typedef struct NhuCQI_ReportAperiodic_r10setupaperiodicCSI_Trigger_r10
{
 TknPres pres;
 NhuCQI_ReportAperiodic_r10setupaperiodicCSI_Trigger_r10trigger1_r10 trigger1_r10;
 NhuCQI_ReportAperiodic_r10setupaperiodicCSI_Trigger_r10trigger2_r10 trigger2_r10;
} NhuCQI_ReportAperiodic_r10setupaperiodicCSI_Trigger_r10;

typedef struct NhuCQI_ReportAperiodic_r10setup
{
 TknPres pres;
 NhuCQI_ReportModeAperiodic cqi_ReportModeAperiodic_r10;
 NhuCQI_ReportAperiodic_r10setupaperiodicCSI_Trigger_r10 aperiodicCSI_Trigger_r10;
} NhuCQI_ReportAperiodic_r10setup;

typedef struct NhuCQI_ReportAperiodic_r10
{
 TknU8 choice;
 union {
  NhuCQI_ReportAperiodic_r10setup setup;
 } val;
} NhuCQI_ReportAperiodic_r10;


typedef TknU32 NhuCQI_ReportPeriodic_r10setupcqi_PUCCH_ResourceIdx_r10;


typedef TknU32 NhuCQI_ReportPeriodic_r10setupcqi_PUCCH_ResourceIdxP1_r10;


typedef TknU32 NhuCQI_ReportPeriodic_r10setupcqi_pmi_ConfigIdx;


typedef enum enumNhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10widebandCQI_r10csi_ReportMode_r10
{
 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10widebandCQI_r10csi_ReportMode_r10submode1Enum,
 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10widebandCQI_r10csi_ReportMode_r10submode2Enum
} EnumNhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10widebandCQI_r10csi_ReportMode_r10;
typedef TknU32 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10widebandCQI_r10csi_ReportMode_r10;

typedef struct NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10widebandCQI_r10
{
 TknPres pres;
 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10widebandCQI_r10csi_ReportMode_r10 csi_ReportMode_r10;
} NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10widebandCQI_r10;


typedef TknU32 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10k;


typedef enum enumNhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10periodicityFactor_r10
{
 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10periodicityFactor_r10n2Enum,
 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10periodicityFactor_r10n4Enum
} EnumNhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10periodicityFactor_r10;
typedef TknU32 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10periodicityFactor_r10;

typedef struct NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10
{
 TknPres pres;
 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10k k;
 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10periodicityFactor_r10 periodicityFactor_r10;
} NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10;

typedef struct NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10
{
 TknU8 choice;
 union {
  NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10widebandCQI_r10 widebandCQI_r10;
  NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10 subbandCQI_r10;
 } val;
} NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10;


typedef TknU32 NhuCQI_ReportPeriodic_r10setupri_ConfigIdx;


typedef TknU8 NhuCQI_ReportPeriodic_r10setupsimultaneousAckNackAndCQI;


typedef enum enumNhuCQI_ReportPeriodic_r10setupcqi_Mask_r9
{
 NhuCQI_ReportPeriodic_r10setupcqi_Mask_r9setupEnum
} EnumNhuCQI_ReportPeriodic_r10setupcqi_Mask_r9;
typedef TknU32 NhuCQI_ReportPeriodic_r10setupcqi_Mask_r9;


typedef TknU32 NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10setupcqi_pmi_ConfigIdx2_r10;


typedef TknU32 NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10setupri_ConfigIdx2_r10;

typedef struct NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10setup
{
 TknPres pres;
 NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10setupcqi_pmi_ConfigIdx2_r10 cqi_pmi_ConfigIdx2_r10;
 NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10setupri_ConfigIdx2_r10 ri_ConfigIdx2_r10;
} NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10setup;

typedef struct NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10
{
 TknU8 choice;
 union {
  NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10setup setup;
 } val;
} NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10;

typedef struct NhuCQI_ReportPeriodic_r10setup
{
 TknPres pres;
 NhuCQI_ReportPeriodic_r10setupcqi_PUCCH_ResourceIdx_r10 cqi_PUCCH_ResourceIdx_r10;
 NhuCQI_ReportPeriodic_r10setupcqi_PUCCH_ResourceIdxP1_r10 cqi_PUCCH_ResourceIdxP1_r10;
 NhuCQI_ReportPeriodic_r10setupcqi_pmi_ConfigIdx cqi_pmi_ConfigIdx;
 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10 cqi_FormatIndicatorPeriodic_r10;
 NhuCQI_ReportPeriodic_r10setupri_ConfigIdx ri_ConfigIdx;
 NhuCQI_ReportPeriodic_r10setupsimultaneousAckNackAndCQI simultaneousAckNackAndCQI;
 NhuCQI_ReportPeriodic_r10setupcqi_Mask_r9 cqi_Mask_r9;
 NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10 csi_ConfigIdx_r10;
} NhuCQI_ReportPeriodic_r10setup;

typedef struct NhuCQI_ReportPeriodic_r10
{
 TknU8 choice;
 union {
  NhuCQI_ReportPeriodic_r10setup setup;
 } val;
} NhuCQI_ReportPeriodic_r10;


typedef TknStrBSXL NhuMeasSubfrmPattern_r10subframePatternFDD_r10;

typedef TknStrBSXL NhuMeasSubfrmPattern_r10subframePatternTDD_r10subframeConfig1_5_r10;

typedef TknStrBSXL NhuMeasSubfrmPattern_r10subframePatternTDD_r10subframeConfig0_r10;

typedef TknStrBSXL NhuMeasSubfrmPattern_r10subframePatternTDD_r10subframeConfig6_r10;
typedef struct NhuMeasSubfrmPattern_r10subframePatternTDD_r10
{
 TknU8 choice;
 union {
  NhuMeasSubfrmPattern_r10subframePatternTDD_r10subframeConfig1_5_r10 subframeConfig1_5_r10;
  NhuMeasSubfrmPattern_r10subframePatternTDD_r10subframeConfig0_r10 subframeConfig0_r10;
  NhuMeasSubfrmPattern_r10subframePatternTDD_r10subframeConfig6_r10 subframeConfig6_r10;
 } val;
} NhuMeasSubfrmPattern_r10subframePatternTDD_r10;

typedef struct NhuMeasSubfrmPattern_r10
{
 TknU8 choice;
 union {
  NhuMeasSubfrmPattern_r10subframePatternFDD_r10 subframePatternFDD_r10;
  NhuMeasSubfrmPattern_r10subframePatternTDD_r10 subframePatternTDD_r10;
 } val;
} NhuMeasSubfrmPattern_r10;


typedef TknS32 NhuCQI_ReportConfig_r10nomPDSCH_RS_EPRE_Offset;


typedef enum enumNhuCQI_ReportConfig_r10pmi_RI_Report_r9
{
 NhuCQI_ReportConfig_r10pmi_RI_Report_r9setupEnum
} EnumNhuCQI_ReportConfig_r10pmi_RI_Report_r9;
typedef TknU32 NhuCQI_ReportConfig_r10pmi_RI_Report_r9;

typedef struct NhuCQI_ReportConfig_r10csi_SubfrmPatternConfig_r10setup
{
 TknPres pres;
 NhuMeasSubfrmPattern_r10 csi_MeasSubfrmSet1_r10;
 NhuMeasSubfrmPattern_r10 csi_MeasSubfrmSet2_r10;
} NhuCQI_ReportConfig_r10csi_SubfrmPatternConfig_r10setup;

typedef struct NhuCQI_ReportConfig_r10csi_SubfrmPatternConfig_r10
{
 TknU8 choice;
 union {
  NhuCQI_ReportConfig_r10csi_SubfrmPatternConfig_r10setup setup;
 } val;
} NhuCQI_ReportConfig_r10csi_SubfrmPatternConfig_r10;

typedef struct NhuCQI_ReportConfig_r10
{
 TknPres pres;
 NhuCQI_ReportAperiodic_r10 cqi_ReportAperiodic_r10;
 NhuCQI_ReportConfig_r10nomPDSCH_RS_EPRE_Offset nomPDSCH_RS_EPRE_Offset;
 NhuCQI_ReportPeriodic_r10 cqi_ReportPeriodic_r10;
 NhuCQI_ReportConfig_r10pmi_RI_Report_r9 pmi_RI_Report_r9;
 NhuCQI_ReportConfig_r10csi_SubfrmPatternConfig_r10 csi_SubfrmPatternConfig_r10;
} NhuCQI_ReportConfig_r10;


typedef enum enumNhuCSI_RS_Config_r10csi_RS_r10setupantennaPortsCount_r10
{
 NhuCSI_RS_Config_r10csi_RS_r10setupantennaPortsCount_r10an1Enum,
 NhuCSI_RS_Config_r10csi_RS_r10setupantennaPortsCount_r10an2Enum,
 NhuCSI_RS_Config_r10csi_RS_r10setupantennaPortsCount_r10an4Enum,
 NhuCSI_RS_Config_r10csi_RS_r10setupantennaPortsCount_r10an8Enum
} EnumNhuCSI_RS_Config_r10csi_RS_r10setupantennaPortsCount_r10;
typedef TknU32 NhuCSI_RS_Config_r10csi_RS_r10setupantennaPortsCount_r10;


typedef TknU32 NhuCSI_RS_Config_r10csi_RS_r10setupresourceConfig_r10;


typedef TknU32 NhuCSI_RS_Config_r10csi_RS_r10setupsubframeConfig_r10;


typedef TknS32 NhuCSI_RS_Config_r10csi_RS_r10setupp_C_r10;

typedef struct NhuCSI_RS_Config_r10csi_RS_r10setup
{
 TknPres pres;
 NhuCSI_RS_Config_r10csi_RS_r10setupantennaPortsCount_r10 antennaPortsCount_r10;
 NhuCSI_RS_Config_r10csi_RS_r10setupresourceConfig_r10 resourceConfig_r10;
 NhuCSI_RS_Config_r10csi_RS_r10setupsubframeConfig_r10 subframeConfig_r10;
 NhuCSI_RS_Config_r10csi_RS_r10setupp_C_r10 p_C_r10;
} NhuCSI_RS_Config_r10csi_RS_r10setup;

typedef struct NhuCSI_RS_Config_r10csi_RS_r10
{
 TknU8 choice;
 union {
  NhuCSI_RS_Config_r10csi_RS_r10setup setup;
 } val;
} NhuCSI_RS_Config_r10csi_RS_r10;


typedef TknStrBSXL NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10setupzeroTxPowerResourceConfigLst_r10;

typedef TknU32 NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10setupzeroTxPowerSubfrmConfig_r10;

typedef struct NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10setup
{
 TknPres pres;
 NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10setupzeroTxPowerResourceConfigLst_r10 zeroTxPowerResourceConfigLst_r10;
 NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10setupzeroTxPowerSubfrmConfig_r10 zeroTxPowerSubfrmConfig_r10;
} NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10setup;

typedef struct NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10
{
 TknU8 choice;
 union {
  NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10setup setup;
 } val;
} NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10;

typedef struct NhuCSI_RS_Config_r10
{
 TknPres pres;
 NhuCSI_RS_Config_r10csi_RS_r10 csi_RS_r10;
 NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10 zeroTxPowerCSI_RS_r10;
} NhuCSI_RS_Config_r10;

typedef TknU32 NhuN1PUCCH_AN_CS_r10Member;

typedef struct NhuN1PUCCH_AN_CS_r10
{
 TknU16 noComp;
 NhuN1PUCCH_AN_CS_r10Member *member;
}NhuN1PUCCH_AN_CS_r10;

typedef TknU32 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10n3PUCCH_AN_Lst_r10Member;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10n3PUCCH_AN_Lst_r10
{
 TknU16 noComp;
 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10n3PUCCH_AN_Lst_r10Member *member;
}NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10n3PUCCH_AN_Lst_r10;

typedef TknU32 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10setupn3PUCCH_AN_LstP1_r10Member;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10setupn3PUCCH_AN_LstP1_r10
{
 TknU16 noComp;
 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10setupn3PUCCH_AN_LstP1_r10Member *member;
}NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10setupn3PUCCH_AN_LstP1_r10;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10setup
{
 TknPres pres;
 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10setupn3PUCCH_AN_LstP1_r10 n3PUCCH_AN_LstP1_r10;
} NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10setup;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10
{
 TknU8 choice;
 union {
  NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10setup setup;
 } val;
} NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10
{
 TknPres pres;
 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10n3PUCCH_AN_Lst_r10 n3PUCCH_AN_Lst_r10;
 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10 twoAntennaPortActivatedPUCCH_Format3_r10;
} NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10n1PUCCH_AN_CS_r10setupn1PUCCH_AN_CS_Lst_r10
{
 TknU16 noComp;
 NhuN1PUCCH_AN_CS_r10 *member;
}NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10n1PUCCH_AN_CS_r10setupn1PUCCH_AN_CS_Lst_r10;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10n1PUCCH_AN_CS_r10setup
{
 TknPres pres;
 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10n1PUCCH_AN_CS_r10setupn1PUCCH_AN_CS_Lst_r10 n1PUCCH_AN_CS_Lst_r10;
} NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10n1PUCCH_AN_CS_r10setup;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10n1PUCCH_AN_CS_r10
{
 TknU8 choice;
 union {
  NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10n1PUCCH_AN_CS_r10setup setup;
 } val;
} NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10n1PUCCH_AN_CS_r10;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10
{
 TknPres pres;
 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10n1PUCCH_AN_CS_r10 n1PUCCH_AN_CS_r10;
} NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10
{
 TknU8 choice;
 union {
  NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10 format3_r10;
  NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10 channelSelection_r10;
 } val;
} NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10;


typedef enum enumNhuPUCCH_ConfigDedicated_v1020twoAntennaPortActivatedPUCCH_Format1a1b_r10
{
 NhuPUCCH_ConfigDedicated_v1020twoAntennaPortActivatedPUCCH_Format1a1b_r10trueEnum
} EnumNhuPUCCH_ConfigDedicated_v1020twoAntennaPortActivatedPUCCH_Format1a1b_r10;
typedef TknU32 NhuPUCCH_ConfigDedicated_v1020twoAntennaPortActivatedPUCCH_Format1a1b_r10;


typedef enum enumNhuPUCCH_ConfigDedicated_v1020simultaneousPUCCH_PUSCH_r10
{
 NhuPUCCH_ConfigDedicated_v1020simultaneousPUCCH_PUSCH_r10trueEnum
} EnumNhuPUCCH_ConfigDedicated_v1020simultaneousPUCCH_PUSCH_r10;
typedef TknU32 NhuPUCCH_ConfigDedicated_v1020simultaneousPUCCH_PUSCH_r10;


typedef TknU32 NhuPUCCH_ConfigDedicated_v1020n1PUCCH_AN_RepP1_r10;

typedef struct NhuPUCCH_ConfigDedicated_v1020
{
 TknPres pres;
 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10 pucch_Format_r10;
 NhuPUCCH_ConfigDedicated_v1020twoAntennaPortActivatedPUCCH_Format1a1b_r10 twoAntennaPortActivatedPUCCH_Format1a1b_r10;
 NhuPUCCH_ConfigDedicated_v1020simultaneousPUCCH_PUSCH_r10 simultaneousPUCCH_PUSCH_r10;
 NhuPUCCH_ConfigDedicated_v1020n1PUCCH_AN_RepP1_r10 n1PUCCH_AN_RepP1_r10;
} NhuPUCCH_ConfigDedicated_v1020;


typedef TknU32 NhuPUSCH_ConfigDedicated_v1020betaOffsetMC_r10betaOffset_ACK_Idx_MC_r10;


typedef TknU32 NhuPUSCH_ConfigDedicated_v1020betaOffsetMC_r10betaOffset_RI_Idx_MC_r10;


typedef TknU32 NhuPUSCH_ConfigDedicated_v1020betaOffsetMC_r10betaOffset_CQI_Idx_MC_r10;

typedef struct NhuPUSCH_ConfigDedicated_v1020betaOffsetMC_r10
{
 TknPres pres;
 NhuPUSCH_ConfigDedicated_v1020betaOffsetMC_r10betaOffset_ACK_Idx_MC_r10 betaOffset_ACK_Idx_MC_r10;
 NhuPUSCH_ConfigDedicated_v1020betaOffsetMC_r10betaOffset_RI_Idx_MC_r10 betaOffset_RI_Idx_MC_r10;
 NhuPUSCH_ConfigDedicated_v1020betaOffsetMC_r10betaOffset_CQI_Idx_MC_r10 betaOffset_CQI_Idx_MC_r10;
} NhuPUSCH_ConfigDedicated_v1020betaOffsetMC_r10;


typedef enum enumNhuPUSCH_ConfigDedicated_v1020groupHoppingDisabled_r10
{
 NhuPUSCH_ConfigDedicated_v1020groupHoppingDisabled_r10trueEnum
} EnumNhuPUSCH_ConfigDedicated_v1020groupHoppingDisabled_r10;
typedef TknU32 NhuPUSCH_ConfigDedicated_v1020groupHoppingDisabled_r10;


typedef enum enumNhuPUSCH_ConfigDedicated_v1020dmrs_WithOCC_Activated_r10
{
 NhuPUSCH_ConfigDedicated_v1020dmrs_WithOCC_Activated_r10trueEnum
} EnumNhuPUSCH_ConfigDedicated_v1020dmrs_WithOCC_Activated_r10;
typedef TknU32 NhuPUSCH_ConfigDedicated_v1020dmrs_WithOCC_Activated_r10;

typedef struct NhuPUSCH_ConfigDedicated_v1020
{
 TknPres pres;
 NhuPUSCH_ConfigDedicated_v1020betaOffsetMC_r10 betaOffsetMC_r10;
 NhuPUSCH_ConfigDedicated_v1020groupHoppingDisabled_r10 groupHoppingDisabled_r10;
 NhuPUSCH_ConfigDedicated_v1020dmrs_WithOCC_Activated_r10 dmrs_WithOCC_Activated_r10;
} NhuPUSCH_ConfigDedicated_v1020;


typedef TknU32 NhuSchedulingRqstConfig_v1020sr_PUCCH_ResourceIdxP1_r10;

typedef struct NhuSchedulingRqstConfig_v1020
{
 TknPres pres;
 NhuSchedulingRqstConfig_v1020sr_PUCCH_ResourceIdxP1_r10 sr_PUCCH_ResourceIdxP1_r10;
} NhuSchedulingRqstConfig_v1020;


typedef enum enumNhuSRS_AntennaPort
{
 NhuSRS_AntennaPortan1Enum,
 NhuSRS_AntennaPortan2Enum,
 NhuSRS_AntennaPortan4Enum,
 NhuSRS_AntennaPortspare1Enum
} EnumNhuSRS_AntennaPort;
typedef TknU32 NhuSRS_AntennaPort;

typedef struct NhuSoundingRS_UL_ConfigDedicated_v1020
{
 TknPres pres;
 NhuSRS_AntennaPort srs_AntennaPort_r10;
} NhuSoundingRS_UL_ConfigDedicated_v1020;


typedef enum enumNhuSRS_ConfigAp_r10srs_BandwidthAp_r10
{
 NhuSRS_ConfigAp_r10srs_BandwidthAp_r10bw0Enum,
 NhuSRS_ConfigAp_r10srs_BandwidthAp_r10bw1Enum,
 NhuSRS_ConfigAp_r10srs_BandwidthAp_r10bw2Enum,
 NhuSRS_ConfigAp_r10srs_BandwidthAp_r10bw3Enum
} EnumNhuSRS_ConfigAp_r10srs_BandwidthAp_r10;
typedef TknU32 NhuSRS_ConfigAp_r10srs_BandwidthAp_r10;


typedef TknU32 NhuSRS_ConfigAp_r10freqDomainPositionAp_r10;


typedef TknU32 NhuSRS_ConfigAp_r10transmissionCombAp_r10;


typedef enum enumNhuSRS_ConfigAp_r10cyclicShiftAp_r10
{
 NhuSRS_ConfigAp_r10cyclicShiftAp_r10cs0Enum,
 NhuSRS_ConfigAp_r10cyclicShiftAp_r10cs1Enum,
 NhuSRS_ConfigAp_r10cyclicShiftAp_r10cs2Enum,
 NhuSRS_ConfigAp_r10cyclicShiftAp_r10cs3Enum,
 NhuSRS_ConfigAp_r10cyclicShiftAp_r10cs4Enum,
 NhuSRS_ConfigAp_r10cyclicShiftAp_r10cs5Enum,
 NhuSRS_ConfigAp_r10cyclicShiftAp_r10cs6Enum,
 NhuSRS_ConfigAp_r10cyclicShiftAp_r10cs7Enum
} EnumNhuSRS_ConfigAp_r10cyclicShiftAp_r10;
typedef TknU32 NhuSRS_ConfigAp_r10cyclicShiftAp_r10;

typedef struct NhuSRS_ConfigAp_r10
{
 TknPres pres;
 NhuSRS_AntennaPort srs_AntennaPortAp_r10;
 NhuSRS_ConfigAp_r10srs_BandwidthAp_r10 srs_BandwidthAp_r10;
 NhuSRS_ConfigAp_r10freqDomainPositionAp_r10 freqDomainPositionAp_r10;
 NhuSRS_ConfigAp_r10transmissionCombAp_r10 transmissionCombAp_r10;
 NhuSRS_ConfigAp_r10cyclicShiftAp_r10 cyclicShiftAp_r10;
} NhuSRS_ConfigAp_r10;


typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ConfigIdxAp_r10;

typedef struct NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ConfigApDCI_Format4_r10
{
 TknU16 noComp;
 NhuSRS_ConfigAp_r10 *member;
}NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ConfigApDCI_Format4_r10;

typedef struct NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ActivateAp_r10setup
{
 TknPres pres;
 NhuSRS_ConfigAp_r10 srs_ConfigApDCI_Format0_r10;
 NhuSRS_ConfigAp_r10 srs_ConfigApDCI_Format1a2b2c_r10;
} NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ActivateAp_r10setup;

typedef struct NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ActivateAp_r10
{
 TknU8 choice;
 union {
  NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ActivateAp_r10setup setup;
 } val;
} NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ActivateAp_r10;

typedef struct NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setup
{
 TknPres pres;
 NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ConfigIdxAp_r10 srs_ConfigIdxAp_r10;
 NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ConfigApDCI_Format4_r10 srs_ConfigApDCI_Format4_r10;
 NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ActivateAp_r10 srs_ActivateAp_r10;
} NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setup;

typedef struct NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10
{
 TknU8 choice;
 union {
  NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setup setup;
 } val;
} NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10;


typedef enum enumNhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1_r10
{
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1_r10dB0Enum,
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1_r10dB_2Enum
} EnumNhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1_r10;
typedef TknU32 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1_r10;


typedef enum enumNhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1a1b_r10
{
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1a1b_r10dB0Enum,
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1a1b_r10dB_2Enum
} EnumNhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1a1b_r10;
typedef TknU32 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1a1b_r10;


typedef enum enumNhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format22a2b_r10
{
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format22a2b_r10dB0Enum,
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format22a2b_r10dB_2Enum
} EnumNhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format22a2b_r10;
typedef TknU32 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format22a2b_r10;


typedef enum enumNhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format3_r10
{
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format3_r10dB0Enum,
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format3_r10dB_2Enum
} EnumNhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format3_r10;
typedef TknU32 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format3_r10;

typedef struct NhuDeltaTxD_OffsetLstPUCCH_r10
{
 TknPres pres;
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1_r10 deltaTxD_OffsetPUCCH_Format1_r10;
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1a1b_r10 deltaTxD_OffsetPUCCH_Format1a1b_r10;
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format22a2b_r10 deltaTxD_OffsetPUCCH_Format22a2b_r10;
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format3_r10 deltaTxD_OffsetPUCCH_Format3_r10;
} NhuDeltaTxD_OffsetLstPUCCH_r10;


typedef TknU32 NhuUlnkPowerCntrlDedicated_v1020pSRS_OffsetAp_r10;

typedef struct NhuUlnkPowerCntrlDedicated_v1020
{
 TknPres pres;
 NhuDeltaTxD_OffsetLstPUCCH_r10 deltaTxD_OffsetLstPUCCH_r10;
 NhuUlnkPowerCntrlDedicated_v1020pSRS_OffsetAp_r10 pSRS_OffsetAp_r10;
} NhuUlnkPowerCntrlDedicated_v1020;


typedef TknU32 NhuCSI_RS_ConfigNZPId_r11;

typedef struct NhuCSI_RS_ConfigNZPToRlsLst_r11
{
 TknU16 noComp;
 NhuCSI_RS_ConfigNZPId_r11 *member;
}NhuCSI_RS_ConfigNZPToRlsLst_r11;


typedef enum enumNhuCSI_RS_ConfigNZP_r11antennaPortsCount_r11
{
 NhuCSI_RS_ConfigNZP_r11antennaPortsCount_r11an1Enum,
 NhuCSI_RS_ConfigNZP_r11antennaPortsCount_r11an2Enum,
 NhuCSI_RS_ConfigNZP_r11antennaPortsCount_r11an4Enum,
 NhuCSI_RS_ConfigNZP_r11antennaPortsCount_r11an8Enum
} EnumNhuCSI_RS_ConfigNZP_r11antennaPortsCount_r11;
typedef TknU32 NhuCSI_RS_ConfigNZP_r11antennaPortsCount_r11;


typedef TknU32 NhuCSI_RS_ConfigNZP_r11resourceConfig_r11;


typedef TknU32 NhuCSI_RS_ConfigNZP_r11subframeConfig_r11;


typedef TknU32 NhuCSI_RS_ConfigNZP_r11scramblingIdentity_r11;


typedef TknU32 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11qcl_ScramblingIdentity_r11;


typedef enum enumNhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11crs_PortsCount_r11
{
 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11crs_PortsCount_r11n1Enum,
 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11crs_PortsCount_r11n2Enum,
 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11crs_PortsCount_r11n4Enum,
 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11crs_PortsCount_r11spare1Enum
} EnumNhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11crs_PortsCount_r11;
typedef TknU32 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11crs_PortsCount_r11;

typedef struct NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11mbsfn_SubfrmConfigLst_r11setup
{
 TknPres pres;
 NhuMBSFN_SubfrmConfigLst subframeConfigLst;
} NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11mbsfn_SubfrmConfigLst_r11setup;

typedef struct NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11mbsfn_SubfrmConfigLst_r11
{
 TknU8 choice;
 union {
  NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11mbsfn_SubfrmConfigLst_r11setup setup;
 } val;
} NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11mbsfn_SubfrmConfigLst_r11;

typedef struct NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11
{
 TknPres pres;
 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11qcl_ScramblingIdentity_r11 qcl_ScramblingIdentity_r11;
 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11crs_PortsCount_r11 crs_PortsCount_r11;
 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11mbsfn_SubfrmConfigLst_r11 mbsfn_SubfrmConfigLst_r11;
} NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11;

typedef struct NhuCSI_RS_ConfigNZP_r11
{
 TknPres pres;
 NhuCSI_RS_ConfigNZPId_r11 csi_RS_ConfigNZPId_r11;
 NhuCSI_RS_ConfigNZP_r11antennaPortsCount_r11 antennaPortsCount_r11;
 NhuCSI_RS_ConfigNZP_r11resourceConfig_r11 resourceConfig_r11;
 NhuCSI_RS_ConfigNZP_r11subframeConfig_r11 subframeConfig_r11;
 NhuCSI_RS_ConfigNZP_r11scramblingIdentity_r11 scramblingIdentity_r11;
 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11 qcl_CRS_Info_r11;
} NhuCSI_RS_ConfigNZP_r11;

typedef struct NhuCSI_RS_ConfigNZPToAddModLst_r11
{
 TknU16 noComp;
 NhuCSI_RS_ConfigNZP_r11 *member;
}NhuCSI_RS_ConfigNZPToAddModLst_r11;


typedef TknU32 NhuCSI_RS_ConfigZPId_r11;

typedef struct NhuCSI_RS_ConfigZPToRlsLst_r11
{
 TknU16 noComp;
 NhuCSI_RS_ConfigZPId_r11 *member;
}NhuCSI_RS_ConfigZPToRlsLst_r11;


typedef TknStrBSXL NhuCSI_RS_ConfigZP_r11resourceConfigLst_r11;

typedef TknU32 NhuCSI_RS_ConfigZP_r11subframeConfig_r11;

typedef struct NhuCSI_RS_ConfigZP_r11
{
 TknPres pres;
 NhuCSI_RS_ConfigZPId_r11 csi_RS_ConfigZPId_r11;
 NhuCSI_RS_ConfigZP_r11resourceConfigLst_r11 resourceConfigLst_r11;
 NhuCSI_RS_ConfigZP_r11subframeConfig_r11 subframeConfig_r11;
} NhuCSI_RS_ConfigZP_r11;

typedef struct NhuCSI_RS_ConfigZPToAddModLst_r11
{
 TknU16 noComp;
 NhuCSI_RS_ConfigZP_r11 *member;
}NhuCSI_RS_ConfigZPToAddModLst_r11;


typedef TknU32 NhuEPDCCH_SetConfigId_r11;

typedef struct NhuEPDCCH_SetConfigToRlsLst_r11
{
 TknU16 noComp;
 NhuEPDCCH_SetConfigId_r11 *member;
}NhuEPDCCH_SetConfigToRlsLst_r11;


typedef TknU32 NhuPDSCH_RE_MappingQCL_ConfigId_r11;


typedef enum enumNhuEPDCCH_SetConfig_r11transmissionTyp_r11
{
 NhuEPDCCH_SetConfig_r11transmissionTyp_r11localisedEnum,
 NhuEPDCCH_SetConfig_r11transmissionTyp_r11distributedEnum
} EnumNhuEPDCCH_SetConfig_r11transmissionTyp_r11;
typedef TknU32 NhuEPDCCH_SetConfig_r11transmissionTyp_r11;


typedef enum enumNhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11numberPRB_Pairs_r11
{
 NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11numberPRB_Pairs_r11n2Enum,
 NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11numberPRB_Pairs_r11n4Enum,
 NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11numberPRB_Pairs_r11n8Enum
} EnumNhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11numberPRB_Pairs_r11;
typedef TknU32 NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11numberPRB_Pairs_r11;


typedef TknStrBSXL NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11resourceBlockAssignment_r11;
typedef struct NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11
{
 TknPres pres;
 NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11numberPRB_Pairs_r11 numberPRB_Pairs_r11;
 NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11resourceBlockAssignment_r11 resourceBlockAssignment_r11;
} NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11;


typedef TknU32 NhuEPDCCH_SetConfig_r11dmrs_ScramblingSequenceInt_r11;


typedef TknU32 NhuEPDCCH_SetConfig_r11pucch_ResourceStartOffset_r11;

typedef struct NhuEPDCCH_SetConfig_r11
{
 TknPres pres;
 NhuEPDCCH_SetConfigId_r11 setConfigId_r11;
 NhuEPDCCH_SetConfig_r11transmissionTyp_r11 transmissionTyp_r11;
 NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11 resourceBlockAssignment_r11;
 NhuEPDCCH_SetConfig_r11dmrs_ScramblingSequenceInt_r11 dmrs_ScramblingSequenceInt_r11;
 NhuEPDCCH_SetConfig_r11pucch_ResourceStartOffset_r11 pucch_ResourceStartOffset_r11;
 NhuPDSCH_RE_MappingQCL_ConfigId_r11 re_MappingQCL_ConfigId_r11;
} NhuEPDCCH_SetConfig_r11;

typedef struct NhuEPDCCH_SetConfigToAddModLst_r11
{
 TknU16 noComp;
 NhuEPDCCH_SetConfig_r11 *member;
}NhuEPDCCH_SetConfigToAddModLst_r11;

typedef struct NhuEPDCCH_Config_r11config_r11setupsubframePatternConfig_r11setup
{
 TknPres pres;
 NhuMeasSubfrmPattern_r10 subframePattern_r11;
} NhuEPDCCH_Config_r11config_r11setupsubframePatternConfig_r11setup;

typedef struct NhuEPDCCH_Config_r11config_r11setupsubframePatternConfig_r11
{
 TknU8 choice;
 union {
  NhuEPDCCH_Config_r11config_r11setupsubframePatternConfig_r11setup setup;
 } val;
} NhuEPDCCH_Config_r11config_r11setupsubframePatternConfig_r11;


typedef TknU32 NhuEPDCCH_Config_r11config_r11setupstartSymbol_r11;

typedef struct NhuEPDCCH_Config_r11config_r11setup
{
 TknPres pres;
 NhuEPDCCH_Config_r11config_r11setupsubframePatternConfig_r11 subframePatternConfig_r11;
 NhuEPDCCH_Config_r11config_r11setupstartSymbol_r11 startSymbol_r11;
 NhuEPDCCH_SetConfigToRlsLst_r11 setConfigToRlsLst_r11;
 NhuEPDCCH_SetConfigToAddModLst_r11 setConfigToAddModLst_r11;
} NhuEPDCCH_Config_r11config_r11setup;

typedef struct NhuEPDCCH_Config_r11config_r11
{
 TknU8 choice;
 union {
  NhuEPDCCH_Config_r11config_r11setup setup;
 } val;
} NhuEPDCCH_Config_r11config_r11;

typedef struct NhuEPDCCH_Config_r11
{
 TknPres pres;
 NhuEPDCCH_Config_r11config_r11 config_r11;
} NhuEPDCCH_Config_r11;


typedef TknU32 NhuDMRS_Config_r11setupscramblingIdentity_r11;


typedef TknU32 NhuDMRS_Config_r11setupscramblingIdentity2_r11;

typedef struct NhuDMRS_Config_r11setup
{
 TknPres pres;
 NhuDMRS_Config_r11setupscramblingIdentity_r11 scramblingIdentity_r11;
 NhuDMRS_Config_r11setupscramblingIdentity2_r11 scramblingIdentity2_r11;
} NhuDMRS_Config_r11setup;

typedef struct NhuDMRS_Config_r11
{
 TknU8 choice;
 union {
  NhuDMRS_Config_r11setup setup;
 } val;
} NhuDMRS_Config_r11;

typedef struct NhuRE_MappingQCLConfigToRlsLst_r11
{
 TknU16 noComp;
 NhuPDSCH_RE_MappingQCL_ConfigId_r11 *member;
}NhuRE_MappingQCLConfigToRlsLst_r11;


typedef enum enumNhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_PortsCount_r11
{
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_PortsCount_r11n1Enum,
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_PortsCount_r11n2Enum,
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_PortsCount_r11n4Enum,
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_PortsCount_r11spare1Enum
} EnumNhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_PortsCount_r11;
typedef TknU32 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_PortsCount_r11;


typedef TknU32 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_FreqShift_r11;

typedef struct NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11mbsfn_SubfrmConfigLst_r11setup
{
 TknPres pres;
 NhuMBSFN_SubfrmConfigLst subframeConfigLst;
} NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11mbsfn_SubfrmConfigLst_r11setup;

typedef struct NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11mbsfn_SubfrmConfigLst_r11
{
 TknU8 choice;
 union {
  NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11mbsfn_SubfrmConfigLst_r11setup setup;
 } val;
} NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11mbsfn_SubfrmConfigLst_r11;


typedef enum enumNhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11
{
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11reservedEnum,
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11n1Enum,
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11n2Enum,
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11n3Enum,
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11n4Enum,
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11assignedEnum
} EnumNhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11;
typedef TknU32 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11;

typedef struct NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11
{
 TknPres pres;
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_PortsCount_r11 crs_PortsCount_r11;
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_FreqShift_r11 crs_FreqShift_r11;
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11mbsfn_SubfrmConfigLst_r11 mbsfn_SubfrmConfigLst_r11;
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11 pdsch_Start_r11;
} NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11;

typedef struct NhuPDSCH_RE_MappingQCL_Config_r11
{
 TknPres pres;
 NhuPDSCH_RE_MappingQCL_ConfigId_r11 pdsch_RE_MappingQCL_ConfigId_r11;
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11 optionalSetOfFields_r11;
 NhuCSI_RS_ConfigZPId_r11 csi_RS_ConfigZPId_r11;
 NhuCSI_RS_ConfigNZPId_r11 qcl_CSI_RS_ConfigNZPId_r11;
} NhuPDSCH_RE_MappingQCL_Config_r11;

typedef struct NhuRE_MappingQCLConfigToAddModLst_r11
{
 TknU16 noComp;
 NhuPDSCH_RE_MappingQCL_Config_r11 *member;
}NhuRE_MappingQCLConfigToAddModLst_r11;


typedef enum enumNhuPDSCH_ConfigDedicated_v1130qcl_Operation
{
 NhuPDSCH_ConfigDedicated_v1130qcl_OperationtypeAEnum,
 NhuPDSCH_ConfigDedicated_v1130qcl_OperationtypeBEnum
} EnumNhuPDSCH_ConfigDedicated_v1130qcl_Operation;
typedef TknU32 NhuPDSCH_ConfigDedicated_v1130qcl_Operation;

typedef struct NhuPDSCH_ConfigDedicated_v1130
{
 TknPres pres;
 NhuDMRS_Config_r11 dmrs_ConfigPDSCH_r11;
 NhuPDSCH_ConfigDedicated_v1130qcl_Operation qcl_Operation;
 NhuRE_MappingQCLConfigToRlsLst_r11 re_MappingQCLConfigToRlsLst_r11;
 NhuRE_MappingQCLConfigToAddModLst_r11 re_MappingQCLConfigToAddModLst_r11;
} NhuPDSCH_ConfigDedicated_v1130;


typedef TknU32 NhuCQI_ReportPeriodicProcExtId_r11;

typedef struct NhuCQI_ReportPeriodicProcExtToRlsLst_r11
{
 TknU16 noComp;
 NhuCQI_ReportPeriodicProcExtId_r11 *member;
}NhuCQI_ReportPeriodicProcExtToRlsLst_r11;


typedef TknU32 NhuCQI_ReportPeriodicProcExt_r11cqi_pmi_ConfigIdx_r11;


typedef enum enumNhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11widebandCQI_r11csi_ReportMode_r11
{
 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11widebandCQI_r11csi_ReportMode_r11submode1Enum,
 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11widebandCQI_r11csi_ReportMode_r11submode2Enum
} EnumNhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11widebandCQI_r11csi_ReportMode_r11;
typedef TknU32 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11widebandCQI_r11csi_ReportMode_r11;

typedef struct NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11widebandCQI_r11
{
 TknPres pres;
 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11widebandCQI_r11csi_ReportMode_r11 csi_ReportMode_r11;
} NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11widebandCQI_r11;


typedef TknU32 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11k;


typedef enum enumNhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11periodicityFactor_r11
{
 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11periodicityFactor_r11n2Enum,
 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11periodicityFactor_r11n4Enum
} EnumNhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11periodicityFactor_r11;
typedef TknU32 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11periodicityFactor_r11;

typedef struct NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11
{
 TknPres pres;
 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11k k;
 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11periodicityFactor_r11 periodicityFactor_r11;
} NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11;

typedef struct NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11
{
 TknU8 choice;
 union {
  NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11widebandCQI_r11 widebandCQI_r11;
  NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11 subbandCQI_r11;
 } val;
} NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11;


typedef TknU32 NhuCQI_ReportPeriodicProcExt_r11ri_ConfigIdx_r11;


typedef TknU32 NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11setupcqi_pmi_ConfigIdx2_r11;


typedef TknU32 NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11setupri_ConfigIdx2_r11;

typedef struct NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11setup
{
 TknPres pres;
 NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11setupcqi_pmi_ConfigIdx2_r11 cqi_pmi_ConfigIdx2_r11;
 NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11setupri_ConfigIdx2_r11 ri_ConfigIdx2_r11;
} NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11setup;

typedef struct NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11
{
 TknU8 choice;
 union {
  NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11setup setup;
 } val;
} NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11;

typedef struct NhuCQI_ReportPeriodicProcExt_r11
{
 TknPres pres;
 NhuCQI_ReportPeriodicProcExtId_r11 cqi_ReportPeriodicProcExtId_r11;
 NhuCQI_ReportPeriodicProcExt_r11cqi_pmi_ConfigIdx_r11 cqi_pmi_ConfigIdx_r11;
 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11 cqi_FormatIndicatorPeriodic_r11;
 NhuCQI_ReportPeriodicProcExt_r11ri_ConfigIdx_r11 ri_ConfigIdx_r11;
 NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11 csi_ConfigIdx_r11;
} NhuCQI_ReportPeriodicProcExt_r11;

typedef struct NhuCQI_ReportPeriodicProcExtToAddModLst_r11
{
 TknU16 noComp;
 NhuCQI_ReportPeriodicProcExt_r11 *member;
}NhuCQI_ReportPeriodicProcExtToAddModLst_r11;


typedef enum enumNhuCQI_ReportPeriodic_v1130simultaneousAckNackAndCQI_Format3_r11
{
 NhuCQI_ReportPeriodic_v1130simultaneousAckNackAndCQI_Format3_r11setupEnum
} EnumNhuCQI_ReportPeriodic_v1130simultaneousAckNackAndCQI_Format3_r11;
typedef TknU32 NhuCQI_ReportPeriodic_v1130simultaneousAckNackAndCQI_Format3_r11;

typedef struct NhuCQI_ReportPeriodic_v1130
{
 TknPres pres;
 NhuCQI_ReportPeriodic_v1130simultaneousAckNackAndCQI_Format3_r11 simultaneousAckNackAndCQI_Format3_r11;
 NhuCQI_ReportPeriodicProcExtToRlsLst_r11 cqi_ReportPeriodicProcExtToRlsLst_r11;
 NhuCQI_ReportPeriodicProcExtToAddModLst_r11 cqi_ReportPeriodicProcExtToAddModLst_r11;
} NhuCQI_ReportPeriodic_v1130;


typedef TknU32 NhuCSI_IM_ConfigId_r11;

typedef struct NhuCSI_IM_ConfigToRlsLst_r11
{
 TknU16 noComp;
 NhuCSI_IM_ConfigId_r11 *member;
}NhuCSI_IM_ConfigToRlsLst_r11;


typedef TknU32 NhuCSI_IM_Config_r11resourceConfig_r11;


typedef TknU32 NhuCSI_IM_Config_r11subframeConfig_r11;

typedef struct NhuCSI_IM_Config_r11
{
 TknPres pres;
 NhuCSI_IM_ConfigId_r11 csi_IM_ConfigId_r11;
 NhuCSI_IM_Config_r11resourceConfig_r11 resourceConfig_r11;
 NhuCSI_IM_Config_r11subframeConfig_r11 subframeConfig_r11;
} NhuCSI_IM_Config_r11;

typedef struct NhuCSI_IM_ConfigToAddModLst_r11
{
 TknU16 noComp;
 NhuCSI_IM_Config_r11 *member;
}NhuCSI_IM_ConfigToAddModLst_r11;


typedef TknU32 NhuCSI_ProcessId_r11;

typedef struct NhuCSI_ProcessToRlsLst_r11
{
 TknU16 noComp;
 NhuCSI_ProcessId_r11 *member;
}NhuCSI_ProcessToRlsLst_r11;


typedef TknS32 NhuP_C_AndCBSR_r11p_C_r11;


typedef TknStrBSXL NhuP_C_AndCBSR_r11codebookSubsetRestrn_r11;
typedef struct NhuP_C_AndCBSR_r11
{
 TknPres pres;
 NhuP_C_AndCBSR_r11p_C_r11 p_C_r11;
 NhuP_C_AndCBSR_r11codebookSubsetRestrn_r11 codebookSubsetRestrn_r11;
} NhuP_C_AndCBSR_r11;


typedef enum enumNhuCQI_ReportBothProc_r11pmi_RI_Report_r11
{
 NhuCQI_ReportBothProc_r11pmi_RI_Report_r11setupEnum
} EnumNhuCQI_ReportBothProc_r11pmi_RI_Report_r11;
typedef TknU32 NhuCQI_ReportBothProc_r11pmi_RI_Report_r11;

typedef struct NhuCQI_ReportBothProc_r11
{
 TknPres pres;
 NhuCSI_ProcessId_r11 ri_Ref_CSI_ProcessId_r11;
 NhuCQI_ReportBothProc_r11pmi_RI_Report_r11 pmi_RI_Report_r11;
} NhuCQI_ReportBothProc_r11;


typedef TknU8 NhuCQI_ReportAperiodicProc_r11trigger01_r11;


typedef TknU8 NhuCQI_ReportAperiodicProc_r11trigger10_r11;


typedef TknU8 NhuCQI_ReportAperiodicProc_r11trigger11_r11;

typedef struct NhuCQI_ReportAperiodicProc_r11
{
 TknPres pres;
 NhuCQI_ReportModeAperiodic cqi_ReportModeAperiodic_r11;
 NhuCQI_ReportAperiodicProc_r11trigger01_r11 trigger01_r11;
 NhuCQI_ReportAperiodicProc_r11trigger10_r11 trigger10_r11;
 NhuCQI_ReportAperiodicProc_r11trigger11_r11 trigger11_r11;
} NhuCQI_ReportAperiodicProc_r11;

typedef struct NhuCSI_Process_r11p_C_AndCBSRLst_r11
{
 TknU16 noComp;
 NhuP_C_AndCBSR_r11 *member;
}NhuCSI_Process_r11p_C_AndCBSRLst_r11;


typedef TknU32 NhuCSI_Process_r11cqi_ReportPeriodicProcId_r11;

typedef struct NhuCSI_Process_r11
{
 TknPres pres;
 NhuCSI_ProcessId_r11 csi_ProcessId_r11;
 NhuCSI_RS_ConfigNZPId_r11 csi_RS_ConfigNZPId_r11;
 NhuCSI_IM_ConfigId_r11 csi_IM_ConfigId_r11;
 NhuCSI_Process_r11p_C_AndCBSRLst_r11 p_C_AndCBSRLst_r11;
 NhuCQI_ReportBothProc_r11 cqi_ReportBothProc_r11;
 NhuCSI_Process_r11cqi_ReportPeriodicProcId_r11 cqi_ReportPeriodicProcId_r11;
 NhuCQI_ReportAperiodicProc_r11 cqi_ReportAperiodicProc_r11;
} NhuCSI_Process_r11;

typedef struct NhuCSI_ProcessToAddModLst_r11
{
 TknU16 noComp;
 NhuCSI_Process_r11 *member;
}NhuCSI_ProcessToAddModLst_r11;

typedef struct NhuCQI_ReportBoth_r11
{
 TknPres pres;
 NhuCSI_IM_ConfigToRlsLst_r11 csi_IM_ConfigToRlsLst_r11;
 NhuCSI_IM_ConfigToAddModLst_r11 csi_IM_ConfigToAddModLst_r11;
 NhuCSI_ProcessToRlsLst_r11 csi_ProcessToRlsLst_r11;
 NhuCSI_ProcessToAddModLst_r11 csi_ProcessToAddModLst_r11;
} NhuCQI_ReportBoth_r11;

typedef struct NhuCQI_ReportConfig_v1130
{
 TknPres pres;
 NhuCQI_ReportPeriodic_v1130 cqi_ReportPeriodic_v1130;
 NhuCQI_ReportBoth_r11 cqi_ReportBoth_r11;
} NhuCQI_ReportConfig_v1130;

typedef TknU32 NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130setupn1PUCCH_AN_CS_LstP1_r11Member;

typedef struct NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130setupn1PUCCH_AN_CS_LstP1_r11
{
 TknU16 noComp;
 NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130setupn1PUCCH_AN_CS_LstP1_r11Member *member;
}NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130setupn1PUCCH_AN_CS_LstP1_r11;

typedef struct NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130setup
{
 TknPres pres;
 NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130setupn1PUCCH_AN_CS_LstP1_r11 n1PUCCH_AN_CS_LstP1_r11;
} NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130setup;

typedef struct NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130
{
 TknU8 choice;
 union {
  NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130setup setup;
 } val;
} NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130;


typedef TknU32 NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11setupnPUCCH_Identity_r11;


typedef TknU32 NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11setupn1PUCCH_AN_r11;

typedef struct NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11setup
{
 TknPres pres;
 NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11setupnPUCCH_Identity_r11 nPUCCH_Identity_r11;
 NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11setupn1PUCCH_AN_r11 n1PUCCH_AN_r11;
} NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11setup;

typedef struct NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11
{
 TknU8 choice;
 union {
  NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11setup setup;
 } val;
} NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11;

typedef struct NhuPUCCH_ConfigDedicated_v1130
{
 TknPres pres;
 NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130 n1PUCCH_AN_CS_v1130;
 NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11 nPUCCH_Param_r11;
} NhuPUCCH_ConfigDedicated_v1130;


typedef TknU32 NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11setupnPUSCH_Identity_r11;


typedef TknU32 NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11setupnDMRS_CSH_Identity_r11;

typedef struct NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11setup
{
 TknPres pres;
 NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11setupnPUSCH_Identity_r11 nPUSCH_Identity_r11;
 NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11setupnDMRS_CSH_Identity_r11 nDMRS_CSH_Identity_r11;
} NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11setup;

typedef struct NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11
{
 TknU8 choice;
 union {
  NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11setup setup;
 } val;
} NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11;

typedef struct NhuPUSCH_ConfigDedicated_v1130
{
 TknPres pres;
 NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11 pusch_DMRS_r11;
} NhuPUSCH_ConfigDedicated_v1130;


typedef enum enumNhuDeltaTxD_OffsetLstPUCCH_v1130deltaTxD_OffsetPUCCH_Format1bCS_r11
{
 NhuDeltaTxD_OffsetLstPUCCH_v1130deltaTxD_OffsetPUCCH_Format1bCS_r11dB0Enum,
 NhuDeltaTxD_OffsetLstPUCCH_v1130deltaTxD_OffsetPUCCH_Format1bCS_r11dB_1Enum
} EnumNhuDeltaTxD_OffsetLstPUCCH_v1130deltaTxD_OffsetPUCCH_Format1bCS_r11;
typedef TknU32 NhuDeltaTxD_OffsetLstPUCCH_v1130deltaTxD_OffsetPUCCH_Format1bCS_r11;

typedef struct NhuDeltaTxD_OffsetLstPUCCH_v1130
{
 TknPres pres;
 NhuDeltaTxD_OffsetLstPUCCH_v1130deltaTxD_OffsetPUCCH_Format1bCS_r11 deltaTxD_OffsetPUCCH_Format1bCS_r11;
} NhuDeltaTxD_OffsetLstPUCCH_v1130;


typedef TknU32 NhuUlnkPowerCntrlDedicated_v1130pSRS_Offset_v1130;


typedef TknU32 NhuUlnkPowerCntrlDedicated_v1130pSRS_OffsetAp_v1130;

typedef struct NhuUlnkPowerCntrlDedicated_v1130
{
 TknPres pres;
 NhuUlnkPowerCntrlDedicated_v1130pSRS_Offset_v1130 pSRS_Offset_v1130;
 NhuUlnkPowerCntrlDedicated_v1130pSRS_OffsetAp_v1130 pSRS_OffsetAp_v1130;
 NhuDeltaTxD_OffsetLstPUCCH_v1130 deltaTxD_OffsetLstPUCCH_v1130;
} NhuUlnkPowerCntrlDedicated_v1130;

typedef struct NhuPhysicalConfigDedicatedantennaInfo
{
 TknU8 choice;
 union {
  NhuAntennaInfoDedicated explicitValue;
 } val;
} NhuPhysicalConfigDedicatedantennaInfo;

typedef struct NhuPhysicalConfigDedicatedextaddgrp_2antennaInfo_r10
{
 TknU8 choice;
 union {
  NhuAntennaInfoDedicated_r10 explicitValue_r10;
 } val;
} NhuPhysicalConfigDedicatedextaddgrp_2antennaInfo_r10;


typedef TknU8 NhuPhysicalConfigDedicatedextaddgrp_2cif_Presence_r10;

typedef struct NhuPhysicalConfigDedicatedextaddgrp_3additionalSpectrumEmissionCA_r10setup
{
 TknPres pres;
 NhuAdditionalSpectrumEmission additionalSpectrumEmissionPCell_r10;
} NhuPhysicalConfigDedicatedextaddgrp_3additionalSpectrumEmissionCA_r10setup;

typedef struct NhuPhysicalConfigDedicatedextaddgrp_3additionalSpectrumEmissionCA_r10
{
 TknU8 choice;
 union {
  NhuPhysicalConfigDedicatedextaddgrp_3additionalSpectrumEmissionCA_r10setup setup;
 } val;
} NhuPhysicalConfigDedicatedextaddgrp_3additionalSpectrumEmissionCA_r10;

typedef struct NhuPhysicalConfigDedicatedextaddgrp_1
{
 TknPres pres;
 NhuCQI_ReportConfig_v920 cqi_ReportConfig_v920;
 NhuAntennaInfoDedicated_v920 antennaInfo_v920;
} NhuPhysicalConfigDedicatedextaddgrp_1;

typedef struct NhuPhysicalConfigDedicatedextaddgrp_2
{
 TknPres pres;
 NhuPhysicalConfigDedicatedextaddgrp_2antennaInfo_r10 antennaInfo_r10;
 NhuAntennaInfoUL_r10 antennaInfoUL_r10;
 NhuPhysicalConfigDedicatedextaddgrp_2cif_Presence_r10 cif_Presence_r10;
 NhuCQI_ReportConfig_r10 cqi_ReportConfig_r10;
 NhuCSI_RS_Config_r10 csi_RS_Config_r10;
 NhuPUCCH_ConfigDedicated_v1020 pucch_ConfigDedicated_v1020;
 NhuPUSCH_ConfigDedicated_v1020 pusch_ConfigDedicated_v1020;
 NhuSchedulingRqstConfig_v1020 schedulingRqstConfig_v1020;
 NhuSoundingRS_UL_ConfigDedicated_v1020 soundingRS_UL_ConfigDedicated_v1020;
 NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10 soundingRS_UL_ConfigDedicatedAperiodic_r10;
 NhuUlnkPowerCntrlDedicated_v1020 uplinkPowerCntrlDedicated_v1020;
} NhuPhysicalConfigDedicatedextaddgrp_2;

typedef struct NhuPhysicalConfigDedicatedextaddgrp_3
{
 TknPres pres;
 NhuPhysicalConfigDedicatedextaddgrp_3additionalSpectrumEmissionCA_r10 additionalSpectrumEmissionCA_r10;
} NhuPhysicalConfigDedicatedextaddgrp_3;

typedef struct NhuPhysicalConfigDedicatedextaddgrp_4
{
 TknPres pres;
 NhuCSI_RS_ConfigNZPToRlsLst_r11 csi_RS_ConfigNZPToRlsLst_r11;
 NhuCSI_RS_ConfigNZPToAddModLst_r11 csi_RS_ConfigNZPToAddModLst_r11;
 NhuCSI_RS_ConfigZPToRlsLst_r11 csi_RS_ConfigZPToRlsLst_r11;
 NhuCSI_RS_ConfigZPToAddModLst_r11 csi_RS_ConfigZPToAddModLst_r11;
 NhuEPDCCH_Config_r11 epdcch_Config_r11;
 NhuPDSCH_ConfigDedicated_v1130 pdsch_ConfigDedicated_v1130;
 NhuCQI_ReportConfig_v1130 cqi_ReportConfig_v1130;
 NhuPUCCH_ConfigDedicated_v1130 pucch_ConfigDedicated_v1130;
 NhuPUSCH_ConfigDedicated_v1130 pusch_ConfigDedicated_v1130;
 NhuUlnkPowerCntrlDedicated_v1130 uplinkPowerCntrlDedicated_v1130;
} NhuPhysicalConfigDedicatedextaddgrp_4;

typedef struct NhuPhysicalConfigDedicated
{
 TknPres pres;
 NhuPDSCH_ConfigDedicated pdsch_ConfigDedicated;
 NhuPUCCH_ConfigDedicated pucch_ConfigDedicated;
 NhuPUSCH_ConfigDedicated pusch_ConfigDedicated;
 NhuUlnkPowerCntrlDedicated uplinkPowerCntrlDedicated;
 NhuTPC_PDCCH_Config tpc_PDCCH_ConfigPUCCH;
 NhuTPC_PDCCH_Config tpc_PDCCH_ConfigPUSCH;
 NhuCQI_ReportConfig cqi_ReportConfig;
 NhuSoundingRS_UL_ConfigDedicated soundingRS_UL_ConfigDedicated;
 NhuPhysicalConfigDedicatedantennaInfo antennaInfo;
 NhuSchedulingRqstConfig schedulingRqstConfig;
 NhuPhysicalConfigDedicatedextaddgrp_1 extaddgrp_1;
 NhuPhysicalConfigDedicatedextaddgrp_2 extaddgrp_2;
 NhuPhysicalConfigDedicatedextaddgrp_3 extaddgrp_3;
 NhuPhysicalConfigDedicatedextaddgrp_4 extaddgrp_4;
} NhuPhysicalConfigDedicated;


typedef enum enumNhuRLF_TmrsAndConsts_r9setupt301_r9
{
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms100Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms200Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms300Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms400Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms600Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms1000Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms1500Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms2000Enum
} EnumNhuRLF_TmrsAndConsts_r9setupt301_r9;
typedef TknU32 NhuRLF_TmrsAndConsts_r9setupt301_r9;


typedef enum enumNhuRLF_TmrsAndConsts_r9setupt310_r9
{
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms0Enum,
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms50Enum,
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms100Enum,
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms200Enum,
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms500Enum,
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms1000Enum,
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms2000Enum
} EnumNhuRLF_TmrsAndConsts_r9setupt310_r9;
typedef TknU32 NhuRLF_TmrsAndConsts_r9setupt310_r9;


typedef enum enumNhuRLF_TmrsAndConsts_r9setupn310_r9
{
 NhuRLF_TmrsAndConsts_r9setupn310_r9n1Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n2Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n3Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n4Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n6Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n8Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n10Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n20Enum
} EnumNhuRLF_TmrsAndConsts_r9setupn310_r9;
typedef TknU32 NhuRLF_TmrsAndConsts_r9setupn310_r9;


typedef enum enumNhuRLF_TmrsAndConsts_r9setupt311_r9
{
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms1000Enum,
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms3000Enum,
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms5000Enum,
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms10000Enum,
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms15000Enum,
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms20000Enum,
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms30000Enum
} EnumNhuRLF_TmrsAndConsts_r9setupt311_r9;
typedef TknU32 NhuRLF_TmrsAndConsts_r9setupt311_r9;


typedef enum enumNhuRLF_TmrsAndConsts_r9setupn311_r9
{
 NhuRLF_TmrsAndConsts_r9setupn311_r9n1Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n2Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n3Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n4Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n5Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n6Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n8Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n10Enum
} EnumNhuRLF_TmrsAndConsts_r9setupn311_r9;
typedef TknU32 NhuRLF_TmrsAndConsts_r9setupn311_r9;

typedef struct NhuRLF_TmrsAndConsts_r9setup
{
 TknPres pres;
 NhuRLF_TmrsAndConsts_r9setupt301_r9 t301_r9;
 NhuRLF_TmrsAndConsts_r9setupt310_r9 t310_r9;
 NhuRLF_TmrsAndConsts_r9setupn310_r9 n310_r9;
 NhuRLF_TmrsAndConsts_r9setupt311_r9 t311_r9;
 NhuRLF_TmrsAndConsts_r9setupn311_r9 n311_r9;
} NhuRLF_TmrsAndConsts_r9setup;

typedef struct NhuRLF_TmrsAndConsts_r9
{
 TknU8 choice;
 union {
  NhuRLF_TmrsAndConsts_r9setup setup;
 } val;
} NhuRLF_TmrsAndConsts_r9;

typedef struct NhuMeasSubfrmPatternPCell_r10
{
 TknU8 choice;
 union {
  NhuMeasSubfrmPattern_r10 setup;
 } val;
} NhuMeasSubfrmPatternPCell_r10;


typedef enum enumNhuCRS_AssistanceInfo_r11antennaPortsCount_r11
{
 NhuCRS_AssistanceInfo_r11antennaPortsCount_r11an1Enum,
 NhuCRS_AssistanceInfo_r11antennaPortsCount_r11an2Enum,
 NhuCRS_AssistanceInfo_r11antennaPortsCount_r11an4Enum,
 NhuCRS_AssistanceInfo_r11antennaPortsCount_r11spare1Enum
} EnumNhuCRS_AssistanceInfo_r11antennaPortsCount_r11;
typedef TknU32 NhuCRS_AssistanceInfo_r11antennaPortsCount_r11;

typedef struct NhuCRS_AssistanceInfo_r11
{
 TknPres pres;
 NhuPhysCellId physCellId_r11;
 NhuCRS_AssistanceInfo_r11antennaPortsCount_r11 antennaPortsCount_r11;
 NhuMBSFN_SubfrmConfigLst mbsfn_SubfrmConfigLst_r11;
} NhuCRS_AssistanceInfo_r11;

typedef struct NhuCRS_AssistanceInfoLst_r11
{
 TknU16 noComp;
 NhuCRS_AssistanceInfo_r11 *member;
}NhuCRS_AssistanceInfoLst_r11;

typedef struct NhuNeighCellsCRS_Info_r11
{
 TknU8 choice;
 union {
  NhuCRS_AssistanceInfoLst_r11 setup;
 } val;
} NhuNeighCellsCRS_Info_r11;

typedef struct NhuRadioResourceConfigDedicatedmac_MainConfig
{
 TknU8 choice;
 union {
  NhuMAC_MainConfig explicitValue;
 } val;
} NhuRadioResourceConfigDedicatedmac_MainConfig;

typedef struct NhuRadioResourceConfigDedicatedextaddgrp_1
{
 TknPres pres;
 NhuRLF_TmrsAndConsts_r9 rlf_TmrsAndConsts_r9;
} NhuRadioResourceConfigDedicatedextaddgrp_1;

typedef struct NhuRadioResourceConfigDedicatedextaddgrp_2
{
 TknPres pres;
 NhuMeasSubfrmPatternPCell_r10 measSubfrmPatternPCell_r10;
} NhuRadioResourceConfigDedicatedextaddgrp_2;

typedef struct NhuRadioResourceConfigDedicatedextaddgrp_3
{
 TknPres pres;
 NhuNeighCellsCRS_Info_r11 neighCellsCRS_Info_r11;
} NhuRadioResourceConfigDedicatedextaddgrp_3;

typedef struct NhuRadioResourceConfigDedicated
{
 TknPres pres;
 NhuSRB_ToAddModLst srb_ToAddModLst;
 NhuDRB_ToAddModLst drb_ToAddModLst;
 NhuDRB_ToRlsLst drb_ToRlsLst;
 NhuRadioResourceConfigDedicatedmac_MainConfig mac_MainConfig;
 NhuSPS_Config sps_Config;
 NhuPhysicalConfigDedicated physicalConfigDedicated;
 NhuRadioResourceConfigDedicatedextaddgrp_1 extaddgrp_1;
 NhuRadioResourceConfigDedicatedextaddgrp_2 extaddgrp_2;
 NhuRadioResourceConfigDedicatedextaddgrp_3 extaddgrp_3;
} NhuRadioResourceConfigDedicated;


typedef TknU32 NhuNextHopChainingCount;


typedef TknStrOSXL NhuRRCConReestb_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConReestb_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConReestb_v8a0_IEsnonCriticalExtn;

typedef struct NhuRRCConReestb_v8a0_IEs
{
 TknPres pres;
 NhuRRCConReestb_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConReestb_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConReestb_v8a0_IEs;

typedef struct NhuRRCConReestb_r8_IEs
{
 TknPres pres;
 NhuRadioResourceConfigDedicated radioResourceConfigDedicated;
 NhuNextHopChainingCount nextHopChainingCount;
 NhuRRCConReestb_v8a0_IEs nonCriticalExtn;
} NhuRRCConReestb_r8_IEs;

typedef struct NhuRRCConReestbcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRRCConReestb_r8_IEs rrcConReestb_r8;
 } val;
} NhuRRCConReestbcriticalExtnsc1;

typedef struct NhuRRCConReestbcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConReestbcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConReestbcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConReestbcriticalExtnsc1 c1;
  NhuRRCConReestbcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConReestbcriticalExtns;

typedef struct NhuRRCConReestb
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConReestbcriticalExtns criticalExtns;
} NhuRRCConReestb;


typedef TknStrOSXL NhuRRCConReestbRej_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConReestbRej_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConReestbRej_v8a0_IEsnonCriticalExtn;

typedef struct NhuRRCConReestbRej_v8a0_IEs
{
 TknPres pres;
 NhuRRCConReestbRej_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConReestbRej_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConReestbRej_v8a0_IEs;

typedef struct NhuRRCConReestbRej_r8_IEs
{
 TknPres pres;
 NhuRRCConReestbRej_v8a0_IEs nonCriticalExtn;
} NhuRRCConReestbRej_r8_IEs;

typedef struct NhuRRCConReestbRejcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConReestbRejcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConReestbRejcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConReestbRej_r8_IEs rrcConReestbRej_r8;
  NhuRRCConReestbRejcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConReestbRejcriticalExtns;

typedef struct NhuRRCConReestbRej
{
 TknPres pres;
 NhuRRCConReestbRejcriticalExtns criticalExtns;
} NhuRRCConReestbRej;


typedef enum enumNhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTyp_r11
{
 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTyp_r11frequencyEnum,
 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTyp_r11e_utraEnum
} EnumNhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTyp_r11;
typedef TknU32 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTyp_r11;


typedef enum enumNhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTimer_r11
{
 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTimer_r11min5Enum,
 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTimer_r11min10Enum,
 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTimer_r11min15Enum,
 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTimer_r11min30Enum
} EnumNhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTimer_r11;
typedef TknU32 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTimer_r11;

typedef struct NhuRRCConRej_v1130_IEsdeprioritisationReq_r11
{
 TknPres pres;
 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTyp_r11 deprioritisationTyp_r11;
 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTimer_r11 deprioritisationTimer_r11;
} NhuRRCConRej_v1130_IEsdeprioritisationReq_r11;

typedef struct NhuRRCConRej_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConRej_v1130_IEsnonCriticalExtn;

typedef struct NhuRRCConRej_v1130_IEs
{
 TknPres pres;
 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11 deprioritisationReq_r11;
 NhuRRCConRej_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConRej_v1130_IEs;


typedef TknU32 NhuRRCConRej_v1020_IEsextendedWaitTime_r10;

typedef struct NhuRRCConRej_v1020_IEs
{
 TknPres pres;
 NhuRRCConRej_v1020_IEsextendedWaitTime_r10 extendedWaitTime_r10;
 NhuRRCConRej_v1130_IEs nonCriticalExtn;
} NhuRRCConRej_v1020_IEs;


typedef TknStrOSXL NhuRRCConRej_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConRej_v8a0_IEs
{
 TknPres pres;
 NhuRRCConRej_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConRej_v1020_IEs nonCriticalExtn;
} NhuRRCConRej_v8a0_IEs;


typedef TknU32 NhuRRCConRej_r8_IEswaitTime;

typedef struct NhuRRCConRej_r8_IEs
{
 TknPres pres;
 NhuRRCConRej_r8_IEswaitTime waitTime;
 NhuRRCConRej_v8a0_IEs nonCriticalExtn;
} NhuRRCConRej_r8_IEs;

typedef struct NhuRRCConRejcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRRCConRej_r8_IEs rrcConRej_r8;
 } val;
} NhuRRCConRejcriticalExtnsc1;

typedef struct NhuRRCConRejcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConRejcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConRejcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConRejcriticalExtnsc1 c1;
  NhuRRCConRejcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConRejcriticalExtns;

typedef struct NhuRRCConRej
{
 TknPres pres;
 NhuRRCConRejcriticalExtns criticalExtns;
} NhuRRCConRej;


typedef TknStrOSXL NhuRRCConSetup_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConSetup_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConSetup_v8a0_IEsnonCriticalExtn;

typedef struct NhuRRCConSetup_v8a0_IEs
{
 TknPres pres;
 NhuRRCConSetup_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConSetup_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConSetup_v8a0_IEs;

typedef struct NhuRRCConSetup_r8_IEs
{
 TknPres pres;
 NhuRadioResourceConfigDedicated radioResourceConfigDedicated;
 NhuRRCConSetup_v8a0_IEs nonCriticalExtn;
} NhuRRCConSetup_r8_IEs;

typedef struct NhuRRCConSetupcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRRCConSetup_r8_IEs rrcConSetup_r8;
 } val;
} NhuRRCConSetupcriticalExtnsc1;

typedef struct NhuRRCConSetupcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConSetupcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConSetupcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConSetupcriticalExtnsc1 c1;
  NhuRRCConSetupcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConSetupcriticalExtns;

typedef struct NhuRRCConSetup
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConSetupcriticalExtns criticalExtns;
} NhuRRCConSetup;

typedef struct NhuDL_CCCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuRRCConReestb rrcConReestb;
  NhuRRCConReestbRej rrcConReestbRej;
  NhuRRCConRej rrcConRej;
  NhuRRCConSetup rrcConSetup;
 } val;
} NhuDL_CCCH_MsgTypc1;

typedef struct NhuDL_CCCH_MsgTypmessageClassExtn
{
 TknPres pres;
} NhuDL_CCCH_MsgTypmessageClassExtn;

typedef struct NhuDL_CCCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuDL_CCCH_MsgTypc1 c1;
  NhuDL_CCCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuDL_CCCH_MsgTyp;

typedef struct NhuDL_CCCH_Msg
{
 TknPres pres;
 NhuDL_CCCH_MsgTyp message;
} NhuDL_CCCH_Msg;


typedef TknStrBSXL NhuRAND_CDMA2000;

typedef TknStrOSXL NhuMobilityParamsCDMA2000;

typedef TknStrOSXL NhuCSFBParamsRspCDMA2000_v8a0_IEslateNonCriticalExtn;
typedef struct NhuCSFBParamsRspCDMA2000_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuCSFBParamsRspCDMA2000_v8a0_IEsnonCriticalExtn;

typedef struct NhuCSFBParamsRspCDMA2000_v8a0_IEs
{
 TknPres pres;
 NhuCSFBParamsRspCDMA2000_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuCSFBParamsRspCDMA2000_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuCSFBParamsRspCDMA2000_v8a0_IEs;

typedef struct NhuCSFBParamsRspCDMA2000_r8_IEs
{
 TknPres pres;
 NhuRAND_CDMA2000 rand;
 NhuMobilityParamsCDMA2000 mobilityParams;
 NhuCSFBParamsRspCDMA2000_v8a0_IEs nonCriticalExtn;
} NhuCSFBParamsRspCDMA2000_r8_IEs;

typedef struct NhuCSFBParamsRspCDMA2000criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuCSFBParamsRspCDMA2000criticalExtnscriticalExtnsFuture;

typedef struct NhuCSFBParamsRspCDMA2000criticalExtns
{
 TknU8 choice;
 union {
  NhuCSFBParamsRspCDMA2000_r8_IEs csfbParamsRspCDMA2000_r8;
  NhuCSFBParamsRspCDMA2000criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuCSFBParamsRspCDMA2000criticalExtns;

typedef struct NhuCSFBParamsRspCDMA2000
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuCSFBParamsRspCDMA2000criticalExtns criticalExtns;
} NhuCSFBParamsRspCDMA2000;


typedef TknStrOSXL NhuDedicatedInfoNAS;

typedef TknStrOSXL NhuDedicatedInfoCDMA2000;

typedef TknStrOSXL NhuDLInfoTfr_v8a0_IEslateNonCriticalExtn;
typedef struct NhuDLInfoTfr_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuDLInfoTfr_v8a0_IEsnonCriticalExtn;

typedef struct NhuDLInfoTfr_v8a0_IEs
{
 TknPres pres;
 NhuDLInfoTfr_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuDLInfoTfr_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuDLInfoTfr_v8a0_IEs;

typedef struct NhuDLInfoTfr_r8_IEsdedicatedInfoTyp
{
 TknU8 choice;
 union {
  NhuDedicatedInfoNAS dedicatedInfoNAS;
  NhuDedicatedInfoCDMA2000 dedicatedInfoCDMA2000_1XRTT;
  NhuDedicatedInfoCDMA2000 dedicatedInfoCDMA2000_HRPD;
 } val;
} NhuDLInfoTfr_r8_IEsdedicatedInfoTyp;

typedef struct NhuDLInfoTfr_r8_IEs
{
 TknPres pres;
 NhuDLInfoTfr_r8_IEsdedicatedInfoTyp dedicatedInfoTyp;
 NhuDLInfoTfr_v8a0_IEs nonCriticalExtn;
} NhuDLInfoTfr_r8_IEs;

typedef struct NhuDLInfoTfrcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuDLInfoTfr_r8_IEs dlInfoTfr_r8;
 } val;
} NhuDLInfoTfrcriticalExtnsc1;

typedef struct NhuDLInfoTfrcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuDLInfoTfrcriticalExtnscriticalExtnsFuture;

typedef struct NhuDLInfoTfrcriticalExtns
{
 TknU8 choice;
 union {
  NhuDLInfoTfrcriticalExtnsc1 c1;
  NhuDLInfoTfrcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuDLInfoTfrcriticalExtns;

typedef struct NhuDLInfoTfr
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuDLInfoTfrcriticalExtns criticalExtns;
} NhuDLInfoTfr;


typedef enum enumNhuCDMA2000_Typ
{
 NhuCDMA2000_Typtype1XRTTEnum,
 NhuCDMA2000_TyptypeHRPDEnum
} EnumNhuCDMA2000_Typ;
typedef TknU32 NhuCDMA2000_Typ;

typedef struct NhuCarrierFreqCDMA2000
{
 TknPres pres;
 NhuBandclassCDMA2000 bandClass;
 NhuARFCN_ValueCDMA2000 arfcn;
} NhuCarrierFreqCDMA2000;


typedef enum enumNhuHovrFromEUTRAPrepRqst_v1020_IEsdualRxTxRedirectIndicator_r10
{
 NhuHovrFromEUTRAPrepRqst_v1020_IEsdualRxTxRedirectIndicator_r10trueEnum
} EnumNhuHovrFromEUTRAPrepRqst_v1020_IEsdualRxTxRedirectIndicator_r10;
typedef TknU32 NhuHovrFromEUTRAPrepRqst_v1020_IEsdualRxTxRedirectIndicator_r10;

typedef struct NhuHovrFromEUTRAPrepRqst_v1020_IEsnonCriticalExtn
{
 TknPres pres;
} NhuHovrFromEUTRAPrepRqst_v1020_IEsnonCriticalExtn;

typedef struct NhuHovrFromEUTRAPrepRqst_v1020_IEs
{
 TknPres pres;
 NhuHovrFromEUTRAPrepRqst_v1020_IEsdualRxTxRedirectIndicator_r10 dualRxTxRedirectIndicator_r10;
 NhuCarrierFreqCDMA2000 redirectCarrierCDMA2000_1XRTT_r10;
 NhuHovrFromEUTRAPrepRqst_v1020_IEsnonCriticalExtn nonCriticalExtn;
} NhuHovrFromEUTRAPrepRqst_v1020_IEs;


typedef TknU8 NhuHovrFromEUTRAPrepRqst_v920_IEsconcurrPrepCDMA2000_HRPD_r9;

typedef struct NhuHovrFromEUTRAPrepRqst_v920_IEs
{
 TknPres pres;
 NhuHovrFromEUTRAPrepRqst_v920_IEsconcurrPrepCDMA2000_HRPD_r9 concurrPrepCDMA2000_HRPD_r9;
 NhuHovrFromEUTRAPrepRqst_v1020_IEs nonCriticalExtn;
} NhuHovrFromEUTRAPrepRqst_v920_IEs;


typedef TknStrOSXL NhuHovrFromEUTRAPrepRqst_v890_IEslateNonCriticalExtn;
typedef struct NhuHovrFromEUTRAPrepRqst_v890_IEs
{
 TknPres pres;
 NhuHovrFromEUTRAPrepRqst_v890_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuHovrFromEUTRAPrepRqst_v920_IEs nonCriticalExtn;
} NhuHovrFromEUTRAPrepRqst_v890_IEs;

typedef struct NhuHovrFromEUTRAPrepRqst_r8_IEs
{
 TknPres pres;
 NhuCDMA2000_Typ cdma2000_Typ;
 NhuRAND_CDMA2000 rand;
 NhuMobilityParamsCDMA2000 mobilityParams;
 NhuHovrFromEUTRAPrepRqst_v890_IEs nonCriticalExtn;
} NhuHovrFromEUTRAPrepRqst_r8_IEs;

typedef struct NhuHovrFromEUTRAPrepRqstcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuHovrFromEUTRAPrepRqst_r8_IEs handoverFromEUTRAPrepRqst_r8;
 } val;
} NhuHovrFromEUTRAPrepRqstcriticalExtnsc1;

typedef struct NhuHovrFromEUTRAPrepRqstcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuHovrFromEUTRAPrepRqstcriticalExtnscriticalExtnsFuture;

typedef struct NhuHovrFromEUTRAPrepRqstcriticalExtns
{
 TknU8 choice;
 union {
  NhuHovrFromEUTRAPrepRqstcriticalExtnsc1 c1;
  NhuHovrFromEUTRAPrepRqstcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuHovrFromEUTRAPrepRqstcriticalExtns;

typedef struct NhuHovrFromEUTRAPrepRqst
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuHovrFromEUTRAPrepRqstcriticalExtns criticalExtns;
} NhuHovrFromEUTRAPrepRqst;


typedef TknStrOSXL NhuSysInfoLstGERANMember;
typedef struct NhuSysInfoLstGERAN
{
 TknU16 noComp;
 NhuSysInfoLstGERANMember *member;
}NhuSysInfoLstGERAN;

typedef struct NhuSI_OrPSI_GERAN
{
 TknU8 choice;
 union {
  NhuSysInfoLstGERAN si;
  NhuSysInfoLstGERAN psi;
 } val;
} NhuSI_OrPSI_GERAN;


typedef enum enumNhuHovrtargetRAT_Typ
{
 NhuHovrtargetRAT_TyputraEnum,
 NhuHovrtargetRAT_TypgeranEnum,
 NhuHovrtargetRAT_Typcdma2000_1XRTTEnum,
 NhuHovrtargetRAT_Typcdma2000_HRPDEnum,
 NhuHovrtargetRAT_Typspare4Enum,
 NhuHovrtargetRAT_Typspare3Enum,
 NhuHovrtargetRAT_Typspare2Enum,
 NhuHovrtargetRAT_Typspare1Enum
} EnumNhuHovrtargetRAT_Typ;
typedef TknU32 NhuHovrtargetRAT_Typ;


typedef TknStrOSXL NhuHovrtargetRAT_MsgCont;

typedef TknStrOSXL NhuHovrnas_SecParamFromEUTRA;
typedef struct NhuHovr
{
 TknPres pres;
 NhuHovrtargetRAT_Typ targetRAT_Typ;
 NhuHovrtargetRAT_MsgCont targetRAT_MsgCont;
 NhuHovrnas_SecParamFromEUTRA nas_SecParamFromEUTRA;
 NhuSI_OrPSI_GERAN systemInfo;
} NhuHovr;


typedef TknStrBSXL NhuPhysCellIdGERANnetworkColourCode;

typedef TknStrBSXL NhuPhysCellIdGERANbaseStationColourCode;
typedef struct NhuPhysCellIdGERAN
{
 TknPres pres;
 NhuPhysCellIdGERANnetworkColourCode networkColourCode;
 NhuPhysCellIdGERANbaseStationColourCode baseStationColourCode;
} NhuPhysCellIdGERAN;

typedef struct NhuCarrierFreqGERAN
{
 TknPres pres;
 NhuARFCN_ValueGERAN arfcn;
 NhuBandIndicatorGERAN bandIndicator;
} NhuCarrierFreqGERAN;


typedef enum enumNhuCellChangeOrdert304
{
 NhuCellChangeOrdert304ms100Enum,
 NhuCellChangeOrdert304ms200Enum,
 NhuCellChangeOrdert304ms500Enum,
 NhuCellChangeOrdert304ms1000Enum,
 NhuCellChangeOrdert304ms2000Enum,
 NhuCellChangeOrdert304ms4000Enum,
 NhuCellChangeOrdert304ms8000Enum,
 NhuCellChangeOrdert304spare1Enum
} EnumNhuCellChangeOrdert304;
typedef TknU32 NhuCellChangeOrdert304;


typedef TknStrBSXL NhuCellChangeOrdertargetRAT_TypgerannetworkCntrlOrder;
typedef struct NhuCellChangeOrdertargetRAT_Typgeran
{
 TknPres pres;
 NhuPhysCellIdGERAN physCellId;
 NhuCarrierFreqGERAN carrierFreq;
 NhuCellChangeOrdertargetRAT_TypgerannetworkCntrlOrder networkCntrlOrder;
 NhuSI_OrPSI_GERAN systemInfo;
} NhuCellChangeOrdertargetRAT_Typgeran;

typedef struct NhuCellChangeOrdertargetRAT_Typ
{
 TknU8 choice;
 union {
  NhuCellChangeOrdertargetRAT_Typgeran geran;
 } val;
} NhuCellChangeOrdertargetRAT_Typ;

typedef struct NhuCellChangeOrder
{
 TknPres pres;
 NhuCellChangeOrdert304 t304;
 NhuCellChangeOrdertargetRAT_Typ targetRAT_Typ;
} NhuCellChangeOrder;

typedef struct NhuMobilityFromEUTRACmd_v8d0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuMobilityFromEUTRACmd_v8d0_IEsnonCriticalExtn;

typedef struct NhuMobilityFromEUTRACmd_v8d0_IEs
{
 TknPres pres;
 NhuBandIndicatorGERAN bandIndicator;
 NhuMobilityFromEUTRACmd_v8d0_IEsnonCriticalExtn nonCriticalExtn;
} NhuMobilityFromEUTRACmd_v8d0_IEs;


typedef TknStrOSXL NhuMobilityFromEUTRACmd_v8a0_IEslateNonCriticalExtn;
typedef struct NhuMobilityFromEUTRACmd_v8a0_IEs
{
 TknPres pres;
 NhuMobilityFromEUTRACmd_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuMobilityFromEUTRACmd_v8d0_IEs nonCriticalExtn;
} NhuMobilityFromEUTRACmd_v8a0_IEs;


typedef TknU8 NhuMobilityFromEUTRACmd_r8_IEscs_FallbackIndicator;

typedef struct NhuMobilityFromEUTRACmd_r8_IEspurpose
{
 TknU8 choice;
 union {
  NhuHovr handover;
  NhuCellChangeOrder cellChangeOrder;
 } val;
} NhuMobilityFromEUTRACmd_r8_IEspurpose;

typedef struct NhuMobilityFromEUTRACmd_r8_IEs
{
 TknPres pres;
 NhuMobilityFromEUTRACmd_r8_IEscs_FallbackIndicator cs_FallbackIndicator;
 NhuMobilityFromEUTRACmd_r8_IEspurpose purpose;
 NhuMobilityFromEUTRACmd_v8a0_IEs nonCriticalExtn;
} NhuMobilityFromEUTRACmd_r8_IEs;


typedef TknStrOSXL NhuE_CSFB_r9messageContCDMA2000_1XRTT_r9;

typedef enum enumNhuE_CSFB_r9mobilityCDMA2000_HRPD_r9
{
 NhuE_CSFB_r9mobilityCDMA2000_HRPD_r9handoverEnum,
 NhuE_CSFB_r9mobilityCDMA2000_HRPD_r9redirectionEnum
} EnumNhuE_CSFB_r9mobilityCDMA2000_HRPD_r9;
typedef TknU32 NhuE_CSFB_r9mobilityCDMA2000_HRPD_r9;


typedef TknStrOSXL NhuE_CSFB_r9messageContCDMA2000_HRPD_r9;
typedef struct NhuE_CSFB_r9
{
 TknPres pres;
 NhuE_CSFB_r9messageContCDMA2000_1XRTT_r9 messageContCDMA2000_1XRTT_r9;
 NhuE_CSFB_r9mobilityCDMA2000_HRPD_r9 mobilityCDMA2000_HRPD_r9;
 NhuE_CSFB_r9messageContCDMA2000_HRPD_r9 messageContCDMA2000_HRPD_r9;
 NhuCarrierFreqCDMA2000 redirectCarrierCDMA2000_HRPD_r9;
} NhuE_CSFB_r9;

typedef struct NhuMobilityFromEUTRACmd_v960_IEsnonCriticalExtn
{
 TknPres pres;
} NhuMobilityFromEUTRACmd_v960_IEsnonCriticalExtn;

typedef struct NhuMobilityFromEUTRACmd_v960_IEs
{
 TknPres pres;
 NhuBandIndicatorGERAN bandIndicator;
 NhuMobilityFromEUTRACmd_v960_IEsnonCriticalExtn nonCriticalExtn;
} NhuMobilityFromEUTRACmd_v960_IEs;


typedef TknStrOSXL NhuMobilityFromEUTRACmd_v930_IEslateNonCriticalExtn;
typedef struct NhuMobilityFromEUTRACmd_v930_IEs
{
 TknPres pres;
 NhuMobilityFromEUTRACmd_v930_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuMobilityFromEUTRACmd_v960_IEs nonCriticalExtn;
} NhuMobilityFromEUTRACmd_v930_IEs;


typedef TknU8 NhuMobilityFromEUTRACmd_r9_IEscs_FallbackIndicator;

typedef struct NhuMobilityFromEUTRACmd_r9_IEspurpose
{
 TknU8 choice;
 union {
  NhuHovr handover;
  NhuCellChangeOrder cellChangeOrder;
  NhuE_CSFB_r9 e_CSFB_r9;
 } val;
} NhuMobilityFromEUTRACmd_r9_IEspurpose;

typedef struct NhuMobilityFromEUTRACmd_r9_IEs
{
 TknPres pres;
 NhuMobilityFromEUTRACmd_r9_IEscs_FallbackIndicator cs_FallbackIndicator;
 NhuMobilityFromEUTRACmd_r9_IEspurpose purpose;
 NhuMobilityFromEUTRACmd_v930_IEs nonCriticalExtn;
} NhuMobilityFromEUTRACmd_r9_IEs;

typedef struct NhuMobilityFromEUTRACmdcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuMobilityFromEUTRACmd_r8_IEs mobilityFromEUTRACmd_r8;
  NhuMobilityFromEUTRACmd_r9_IEs mobilityFromEUTRACmd_r9;
 } val;
} NhuMobilityFromEUTRACmdcriticalExtnsc1;

typedef struct NhuMobilityFromEUTRACmdcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuMobilityFromEUTRACmdcriticalExtnscriticalExtnsFuture;

typedef struct NhuMobilityFromEUTRACmdcriticalExtns
{
 TknU8 choice;
 union {
  NhuMobilityFromEUTRACmdcriticalExtnsc1 c1;
  NhuMobilityFromEUTRACmdcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuMobilityFromEUTRACmdcriticalExtns;

typedef struct NhuMobilityFromEUTRACmd
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuMobilityFromEUTRACmdcriticalExtns criticalExtns;
} NhuMobilityFromEUTRACmd;


typedef TknU32 NhuMeasObjectId;

typedef struct NhuMeasObjectToRemoveLst
{
 TknU16 noComp;
 NhuMeasObjectId *member;
}NhuMeasObjectToRemoveLst;


typedef TknU32 NhuCellIdx;

typedef struct NhuCellIdxLst
{
 TknU16 noComp;
 NhuCellIdx *member;
}NhuCellIdxLst;


typedef TknU32 NhuCellsToAddModcellIdx;

typedef struct NhuCellsToAddMod
{
 TknPres pres;
 NhuCellsToAddModcellIdx cellIdx;
 NhuPhysCellId physCellId;
 NhuQ_OffsetRange cellIvdualOffset;
} NhuCellsToAddMod;

typedef struct NhuCellsToAddModLst
{
 TknU16 noComp;
 NhuCellsToAddMod *member;
}NhuCellsToAddModLst;


typedef TknU32 NhuBlackCellsToAddModcellIdx;

typedef struct NhuBlackCellsToAddMod
{
 TknPres pres;
 NhuBlackCellsToAddModcellIdx cellIdx;
 NhuPhysCellIdRange physCellIdRange;
} NhuBlackCellsToAddMod;

typedef struct NhuBlackCellsToAddModLst
{
 TknU16 noComp;
 NhuBlackCellsToAddMod *member;
}NhuBlackCellsToAddModLst;


typedef enum enumNhuMeasCycleSCell_r10
{
 NhuMeasCycleSCell_r10sf160Enum,
 NhuMeasCycleSCell_r10sf256Enum,
 NhuMeasCycleSCell_r10sf320Enum,
 NhuMeasCycleSCell_r10sf512Enum,
 NhuMeasCycleSCell_r10sf640Enum,
 NhuMeasCycleSCell_r10sf1024Enum,
 NhuMeasCycleSCell_r10sf1280Enum,
 NhuMeasCycleSCell_r10spare1Enum
} EnumNhuMeasCycleSCell_r10;
typedef TknU32 NhuMeasCycleSCell_r10;

typedef struct NhuMeasSubfrmCellLst_r10
{
 TknU16 noComp;
 NhuPhysCellIdRange *member;
}NhuMeasSubfrmCellLst_r10;

typedef struct NhuMeasSubfrmPatternConfigNeigh_r10setup
{
 TknPres pres;
 NhuMeasSubfrmPattern_r10 measSubfrmPatternNeigh_r10;
 NhuMeasSubfrmCellLst_r10 measSubfrmCellLst_r10;
} NhuMeasSubfrmPatternConfigNeigh_r10setup;

typedef struct NhuMeasSubfrmPatternConfigNeigh_r10
{
 TknU8 choice;
 union {
  NhuMeasSubfrmPatternConfigNeigh_r10setup setup;
 } val;
} NhuMeasSubfrmPatternConfigNeigh_r10;


typedef TknU8 NhuMeasObjectEUTRAextaddgrp_2widebandRSRQ_Meas_r11;

typedef struct NhuMeasObjectEUTRAextaddgrp_1
{
 TknPres pres;
 NhuMeasCycleSCell_r10 measCycleSCell_r10;
 NhuMeasSubfrmPatternConfigNeigh_r10 measSubfrmPatternConfigNeigh_r10;
} NhuMeasObjectEUTRAextaddgrp_1;

typedef struct NhuMeasObjectEUTRAextaddgrp_2
{
 TknPres pres;
 NhuMeasObjectEUTRAextaddgrp_2widebandRSRQ_Meas_r11 widebandRSRQ_Meas_r11;
} NhuMeasObjectEUTRAextaddgrp_2;

typedef struct NhuMeasObjectEUTRA
{
 TknPres pres;
 NhuARFCN_ValueEUTRA carrierFreq;
 NhuAllowedMeasBandwidth allowedMeasBandwidth;
 NhuPresenceAntennaPort1 presenceAntennaPort1;
 NhuNeighCellConfig neighCellConfig;
 NhuQ_OffsetRange offsetFreq;
 NhuCellIdxLst cellsToRemoveLst;
 NhuCellsToAddModLst cellsToAddModLst;
 NhuCellIdxLst blackCellsToRemoveLst;
 NhuBlackCellsToAddModLst blackCellsToAddModLst;
 NhuPhysCellId cellForWhichToReportCGI;
 NhuMeasObjectEUTRAextaddgrp_1 extaddgrp_1;
 NhuMeasObjectEUTRAextaddgrp_2 extaddgrp_2;
} NhuMeasObjectEUTRA;


typedef TknS32 NhuQ_OffsetRangeInterRAT;


typedef TknU32 NhuPhysCellIdUTRA_FDD;


typedef TknU32 NhuCellsToAddModUTRA_FDDcellIdx;

typedef struct NhuCellsToAddModUTRA_FDD
{
 TknPres pres;
 NhuCellsToAddModUTRA_FDDcellIdx cellIdx;
 NhuPhysCellIdUTRA_FDD physCellId;
} NhuCellsToAddModUTRA_FDD;

typedef struct NhuCellsToAddModLstUTRA_FDD
{
 TknU16 noComp;
 NhuCellsToAddModUTRA_FDD *member;
}NhuCellsToAddModLstUTRA_FDD;


typedef TknU32 NhuPhysCellIdUTRA_TDD;


typedef TknU32 NhuCellsToAddModUTRA_TDDcellIdx;

typedef struct NhuCellsToAddModUTRA_TDD
{
 TknPres pres;
 NhuCellsToAddModUTRA_TDDcellIdx cellIdx;
 NhuPhysCellIdUTRA_TDD physCellId;
} NhuCellsToAddModUTRA_TDD;

typedef struct NhuCellsToAddModLstUTRA_TDD
{
 TknU16 noComp;
 NhuCellsToAddModUTRA_TDD *member;
}NhuCellsToAddModLstUTRA_TDD;


typedef TknU32 NhuPhysCellIdRangeUTRA_FDD_r9range_r9;

typedef struct NhuPhysCellIdRangeUTRA_FDD_r9
{
 TknPres pres;
 NhuPhysCellIdUTRA_FDD start_r9;
 NhuPhysCellIdRangeUTRA_FDD_r9range_r9 range_r9;
} NhuPhysCellIdRangeUTRA_FDD_r9;

typedef struct NhuPhysCellIdRangeUTRA_FDDLst_r9
{
 TknU16 noComp;
 NhuPhysCellIdRangeUTRA_FDD_r9 *member;
}NhuPhysCellIdRangeUTRA_FDDLst_r9;

typedef struct NhuCSG_AllowedRprtngCells_r9
{
 TknPres pres;
 NhuPhysCellIdRangeUTRA_FDDLst_r9 physCellIdRangeUTRA_FDDLst_r9;
} NhuCSG_AllowedRprtngCells_r9;

typedef struct NhuMeasObjectUTRAcellsToAddModLst
{
 TknU8 choice;
 union {
  NhuCellsToAddModLstUTRA_FDD cellsToAddModLstUTRA_FDD;
  NhuCellsToAddModLstUTRA_TDD cellsToAddModLstUTRA_TDD;
 } val;
} NhuMeasObjectUTRAcellsToAddModLst;

typedef struct NhuMeasObjectUTRAcellForWhichToReportCGI
{
 TknU8 choice;
 union {
  NhuPhysCellIdUTRA_FDD utra_FDD;
  NhuPhysCellIdUTRA_TDD utra_TDD;
 } val;
} NhuMeasObjectUTRAcellForWhichToReportCGI;

typedef struct NhuMeasObjectUTRAextaddgrp_1
{
 TknPres pres;
 NhuCSG_AllowedRprtngCells_r9 csg_allowedRprtngCells_v930;
} NhuMeasObjectUTRAextaddgrp_1;

typedef struct NhuMeasObjectUTRA
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq;
 NhuQ_OffsetRangeInterRAT offsetFreq;
 NhuCellIdxLst cellsToRemoveLst;
 NhuMeasObjectUTRAcellsToAddModLst cellsToAddModLst;
 NhuMeasObjectUTRAcellForWhichToReportCGI cellForWhichToReportCGI;
 NhuMeasObjectUTRAextaddgrp_1 extaddgrp_1;
} NhuMeasObjectUTRA;


typedef TknStrBSXL NhuMeasObjectGERANncc_Permitted;
typedef struct NhuMeasObjectGERAN
{
 TknPres pres;
 NhuCarrierFreqsGERAN carrierFreqs;
 NhuQ_OffsetRangeInterRAT offsetFreq;
 NhuMeasObjectGERANncc_Permitted ncc_Permitted;
 NhuPhysCellIdGERAN cellForWhichToReportCGI;
} NhuMeasObjectGERAN;


typedef TknU32 NhuCellsToAddModCDMA2000cellIdx;

typedef struct NhuCellsToAddModCDMA2000
{
 TknPres pres;
 NhuCellsToAddModCDMA2000cellIdx cellIdx;
 NhuPhysCellIdCDMA2000 physCellId;
} NhuCellsToAddModCDMA2000;

typedef struct NhuCellsToAddModLstCDMA2000
{
 TknU16 noComp;
 NhuCellsToAddModCDMA2000 *member;
}NhuCellsToAddModLstCDMA2000;


typedef TknU32 NhuMeasObjectCDMA2000searchWindowSize;

typedef struct NhuMeasObjectCDMA2000
{
 TknPres pres;
 NhuCDMA2000_Typ cdma2000_Typ;
 NhuCarrierFreqCDMA2000 carrierFreq;
 NhuMeasObjectCDMA2000searchWindowSize searchWindowSize;
 NhuQ_OffsetRangeInterRAT offsetFreq;
 NhuCellIdxLst cellsToRemoveLst;
 NhuCellsToAddModLstCDMA2000 cellsToAddModLst;
 NhuPhysCellIdCDMA2000 cellForWhichToReportCGI;
} NhuMeasObjectCDMA2000;

typedef struct NhuMeasObjectToAddModmeasObject
{
 TknU8 choice;
 union {
  NhuMeasObjectEUTRA measObjectEUTRA;
  NhuMeasObjectUTRA measObjectUTRA;
  NhuMeasObjectGERAN measObjectGERAN;
  NhuMeasObjectCDMA2000 measObjectCDMA2000;
 } val;
} NhuMeasObjectToAddModmeasObject;

typedef struct NhuMeasObjectToAddMod
{
 TknPres pres;
 NhuMeasObjectId measObjectId;
 NhuMeasObjectToAddModmeasObject measObject;
} NhuMeasObjectToAddMod;

typedef struct NhuMeasObjectToAddModLst
{
 TknU16 noComp;
 NhuMeasObjectToAddMod *member;
}NhuMeasObjectToAddModLst;


typedef TknU32 NhuReportConfigId;

typedef struct NhuReportConfigToRemoveLst
{
 TknU16 noComp;
 NhuReportConfigId *member;
}NhuReportConfigToRemoveLst;


typedef TknU32 NhuRSRP_Range;


typedef TknU32 NhuRSRQ_Range;

typedef struct NhuThresholdEUTRA
{
 TknU8 choice;
 union {
  NhuRSRP_Range threshold_RSRP;
  NhuRSRQ_Range threshold_RSRQ;
 } val;
} NhuThresholdEUTRA;


typedef TknU32 NhuHysteresis;


typedef enum enumNhuTimeToTrigger
{
 NhuTimeToTriggerms0Enum,
 NhuTimeToTriggerms40Enum,
 NhuTimeToTriggerms64Enum,
 NhuTimeToTriggerms80Enum,
 NhuTimeToTriggerms100Enum,
 NhuTimeToTriggerms128Enum,
 NhuTimeToTriggerms160Enum,
 NhuTimeToTriggerms256Enum,
 NhuTimeToTriggerms320Enum,
 NhuTimeToTriggerms480Enum,
 NhuTimeToTriggerms512Enum,
 NhuTimeToTriggerms640Enum,
 NhuTimeToTriggerms1024Enum,
 NhuTimeToTriggerms1280Enum,
 NhuTimeToTriggerms2560Enum,
 NhuTimeToTriggerms5120Enum
} EnumNhuTimeToTrigger;
typedef TknU32 NhuTimeToTrigger;


typedef enum enumNhuReportInterval
{
 NhuReportIntervalms120Enum,
 NhuReportIntervalms240Enum,
 NhuReportIntervalms480Enum,
 NhuReportIntervalms640Enum,
 NhuReportIntervalms1024Enum,
 NhuReportIntervalms2048Enum,
 NhuReportIntervalms5120Enum,
 NhuReportIntervalms10240Enum,
 NhuReportIntervalmin1Enum,
 NhuReportIntervalmin6Enum,
 NhuReportIntervalmin12Enum,
 NhuReportIntervalmin30Enum,
 NhuReportIntervalmin60Enum,
 NhuReportIntervalspare3Enum,
 NhuReportIntervalspare2Enum,
 NhuReportIntervalspare1Enum
} EnumNhuReportInterval;
typedef TknU32 NhuReportInterval;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventIdeventA1
{
 TknPres pres;
 NhuThresholdEUTRA a1_Threshold;
} NhuReportConfigEUTRAtriggerTypeventeventIdeventA1;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventIdeventA2
{
 TknPres pres;
 NhuThresholdEUTRA a2_Threshold;
} NhuReportConfigEUTRAtriggerTypeventeventIdeventA2;


typedef TknS32 NhuReportConfigEUTRAtriggerTypeventeventIdeventA3a3_Offset;


typedef TknU8 NhuReportConfigEUTRAtriggerTypeventeventIdeventA3reportOnLeave;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventIdeventA3
{
 TknPres pres;
 NhuReportConfigEUTRAtriggerTypeventeventIdeventA3a3_Offset a3_Offset;
 NhuReportConfigEUTRAtriggerTypeventeventIdeventA3reportOnLeave reportOnLeave;
} NhuReportConfigEUTRAtriggerTypeventeventIdeventA3;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventIdeventA4
{
 TknPres pres;
 NhuThresholdEUTRA a4_Threshold;
} NhuReportConfigEUTRAtriggerTypeventeventIdeventA4;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventIdeventA5
{
 TknPres pres;
 NhuThresholdEUTRA a5_Threshold1;
 NhuThresholdEUTRA a5_Threshold2;
} NhuReportConfigEUTRAtriggerTypeventeventIdeventA5;


typedef TknS32 NhuReportConfigEUTRAtriggerTypeventeventIdeventA6_r10a6_Offset_r10;


typedef TknU8 NhuReportConfigEUTRAtriggerTypeventeventIdeventA6_r10a6_ReportOnLeave_r10;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventIdeventA6_r10
{
 TknPres pres;
 NhuReportConfigEUTRAtriggerTypeventeventIdeventA6_r10a6_Offset_r10 a6_Offset_r10;
 NhuReportConfigEUTRAtriggerTypeventeventIdeventA6_r10a6_ReportOnLeave_r10 a6_ReportOnLeave_r10;
} NhuReportConfigEUTRAtriggerTypeventeventIdeventA6_r10;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventId
{
 TknU8 choice;
 union {
  NhuReportConfigEUTRAtriggerTypeventeventIdeventA1 eventA1;
  NhuReportConfigEUTRAtriggerTypeventeventIdeventA2 eventA2;
  NhuReportConfigEUTRAtriggerTypeventeventIdeventA3 eventA3;
  NhuReportConfigEUTRAtriggerTypeventeventIdeventA4 eventA4;
  NhuReportConfigEUTRAtriggerTypeventeventIdeventA5 eventA5;
  NhuReportConfigEUTRAtriggerTypeventeventIdeventA6_r10 eventA6_r10;
 } val;
} NhuReportConfigEUTRAtriggerTypeventeventId;

typedef struct NhuReportConfigEUTRAtriggerTypevent
{
 TknPres pres;
 NhuReportConfigEUTRAtriggerTypeventeventId eventId;
 NhuHysteresis hysteresis;
 NhuTimeToTrigger timeToTrigger;
} NhuReportConfigEUTRAtriggerTypevent;


typedef enum enumNhuReportConfigEUTRAtriggerTypperiodicalpurpose
{
 NhuReportConfigEUTRAtriggerTypperiodicalpurposereportStrongestCellsEnum,
 NhuReportConfigEUTRAtriggerTypperiodicalpurposereportCGIEnum
} EnumNhuReportConfigEUTRAtriggerTypperiodicalpurpose;
typedef TknU32 NhuReportConfigEUTRAtriggerTypperiodicalpurpose;

typedef struct NhuReportConfigEUTRAtriggerTypperiodical
{
 TknPres pres;
 NhuReportConfigEUTRAtriggerTypperiodicalpurpose purpose;
} NhuReportConfigEUTRAtriggerTypperiodical;

typedef struct NhuReportConfigEUTRAtriggerTyp
{
 TknU8 choice;
 union {
  NhuReportConfigEUTRAtriggerTypevent event;
  NhuReportConfigEUTRAtriggerTypperiodical periodical;
 } val;
} NhuReportConfigEUTRAtriggerTyp;


typedef enum enumNhuReportConfigEUTRAtriggerQuantity
{
 NhuReportConfigEUTRAtriggerQuantityrsrpEnum,
 NhuReportConfigEUTRAtriggerQuantityrsrqEnum
} EnumNhuReportConfigEUTRAtriggerQuantity;
typedef TknU32 NhuReportConfigEUTRAtriggerQuantity;


typedef enum enumNhuReportConfigEUTRAreportQuantity
{
 NhuReportConfigEUTRAreportQuantitysameAsTriggerQuantityEnum,
 NhuReportConfigEUTRAreportQuantitybothEnum
} EnumNhuReportConfigEUTRAreportQuantity;
typedef TknU32 NhuReportConfigEUTRAreportQuantity;


typedef TknU32 NhuReportConfigEUTRAmaxReportCells;


typedef enum enumNhuReportConfigEUTRAreportAmount
{
 NhuReportConfigEUTRAreportAmountr1Enum,
 NhuReportConfigEUTRAreportAmountr2Enum,
 NhuReportConfigEUTRAreportAmountr4Enum,
 NhuReportConfigEUTRAreportAmountr8Enum,
 NhuReportConfigEUTRAreportAmountr16Enum,
 NhuReportConfigEUTRAreportAmountr32Enum,
 NhuReportConfigEUTRAreportAmountr64Enum,
 NhuReportConfigEUTRAreportAmountinfinityEnum
} EnumNhuReportConfigEUTRAreportAmount;
typedef TknU32 NhuReportConfigEUTRAreportAmount;


typedef enum enumNhuReportConfigEUTRAextaddgrp_1si_RqstForHO_r9
{
 NhuReportConfigEUTRAextaddgrp_1si_RqstForHO_r9setupEnum
} EnumNhuReportConfigEUTRAextaddgrp_1si_RqstForHO_r9;
typedef TknU32 NhuReportConfigEUTRAextaddgrp_1si_RqstForHO_r9;


typedef enum enumNhuReportConfigEUTRAextaddgrp_1ue_RxTxTimeDiffPeriodical_r9
{
 NhuReportConfigEUTRAextaddgrp_1ue_RxTxTimeDiffPeriodical_r9setupEnum
} EnumNhuReportConfigEUTRAextaddgrp_1ue_RxTxTimeDiffPeriodical_r9;
typedef TknU32 NhuReportConfigEUTRAextaddgrp_1ue_RxTxTimeDiffPeriodical_r9;


typedef enum enumNhuReportConfigEUTRAextaddgrp_2includeLocInfo_r10
{
 NhuReportConfigEUTRAextaddgrp_2includeLocInfo_r10trueEnum
} EnumNhuReportConfigEUTRAextaddgrp_2includeLocInfo_r10;
typedef TknU32 NhuReportConfigEUTRAextaddgrp_2includeLocInfo_r10;


typedef enum enumNhuReportConfigEUTRAextaddgrp_2reportAddNeighMeas_r10
{
 NhuReportConfigEUTRAextaddgrp_2reportAddNeighMeas_r10setupEnum
} EnumNhuReportConfigEUTRAextaddgrp_2reportAddNeighMeas_r10;
typedef TknU32 NhuReportConfigEUTRAextaddgrp_2reportAddNeighMeas_r10;

typedef struct NhuReportConfigEUTRAextaddgrp_1
{
 TknPres pres;
 NhuReportConfigEUTRAextaddgrp_1si_RqstForHO_r9 si_RqstForHO_r9;
 NhuReportConfigEUTRAextaddgrp_1ue_RxTxTimeDiffPeriodical_r9 ue_RxTxTimeDiffPeriodical_r9;
} NhuReportConfigEUTRAextaddgrp_1;

typedef struct NhuReportConfigEUTRAextaddgrp_2
{
 TknPres pres;
 NhuReportConfigEUTRAextaddgrp_2includeLocInfo_r10 includeLocInfo_r10;
 NhuReportConfigEUTRAextaddgrp_2reportAddNeighMeas_r10 reportAddNeighMeas_r10;
} NhuReportConfigEUTRAextaddgrp_2;

typedef struct NhuReportConfigEUTRA
{
 TknPres pres;
 NhuReportConfigEUTRAtriggerTyp triggerTyp;
 NhuReportConfigEUTRAtriggerQuantity triggerQuantity;
 NhuReportConfigEUTRAreportQuantity reportQuantity;
 NhuReportConfigEUTRAmaxReportCells maxReportCells;
 NhuReportInterval reportInterval;
 NhuReportConfigEUTRAreportAmount reportAmount;
 NhuReportConfigEUTRAextaddgrp_1 extaddgrp_1;
 NhuReportConfigEUTRAextaddgrp_2 extaddgrp_2;
} NhuReportConfigEUTRA;


typedef TknS32 NhuThresholdUTRAutra_RSCP;


typedef TknU32 NhuThresholdUTRAutra_EcN0;

typedef struct NhuThresholdUTRA
{
 TknU8 choice;
 union {
  NhuThresholdUTRAutra_RSCP utra_RSCP;
  NhuThresholdUTRAutra_EcN0 utra_EcN0;
 } val;
} NhuThresholdUTRA;


typedef TknU32 NhuThresholdGERAN;


typedef TknU32 NhuThresholdCDMA2000;

typedef struct NhuReportConfigInterRATtriggerTypeventeventIdeventB1b1_Threshold
{
 TknU8 choice;
 union {
  NhuThresholdUTRA b1_ThresholdUTRA;
  NhuThresholdGERAN b1_ThresholdGERAN;
  NhuThresholdCDMA2000 b1_ThresholdCDMA2000;
 } val;
} NhuReportConfigInterRATtriggerTypeventeventIdeventB1b1_Threshold;

typedef struct NhuReportConfigInterRATtriggerTypeventeventIdeventB1
{
 TknPres pres;
 NhuReportConfigInterRATtriggerTypeventeventIdeventB1b1_Threshold b1_Threshold;
} NhuReportConfigInterRATtriggerTypeventeventIdeventB1;

typedef struct NhuReportConfigInterRATtriggerTypeventeventIdeventB2b2_Threshold2
{
 TknU8 choice;
 union {
  NhuThresholdUTRA b2_Threshold2UTRA;
  NhuThresholdGERAN b2_Threshold2GERAN;
  NhuThresholdCDMA2000 b2_Threshold2CDMA2000;
 } val;
} NhuReportConfigInterRATtriggerTypeventeventIdeventB2b2_Threshold2;

typedef struct NhuReportConfigInterRATtriggerTypeventeventIdeventB2
{
 TknPres pres;
 NhuThresholdEUTRA b2_Threshold1;
 NhuReportConfigInterRATtriggerTypeventeventIdeventB2b2_Threshold2 b2_Threshold2;
} NhuReportConfigInterRATtriggerTypeventeventIdeventB2;

typedef struct NhuReportConfigInterRATtriggerTypeventeventId
{
 TknU8 choice;
 union {
  NhuReportConfigInterRATtriggerTypeventeventIdeventB1 eventB1;
  NhuReportConfigInterRATtriggerTypeventeventIdeventB2 eventB2;
 } val;
} NhuReportConfigInterRATtriggerTypeventeventId;

typedef struct NhuReportConfigInterRATtriggerTypevent
{
 TknPres pres;
 NhuReportConfigInterRATtriggerTypeventeventId eventId;
 NhuHysteresis hysteresis;
 NhuTimeToTrigger timeToTrigger;
} NhuReportConfigInterRATtriggerTypevent;


typedef enum enumNhuReportConfigInterRATtriggerTypperiodicalpurpose
{
 NhuReportConfigInterRATtriggerTypperiodicalpurposereportStrongestCellsEnum,
 NhuReportConfigInterRATtriggerTypperiodicalpurposereportStrongestCellsForSONEnum,
 NhuReportConfigInterRATtriggerTypperiodicalpurposereportCGIEnum
} EnumNhuReportConfigInterRATtriggerTypperiodicalpurpose;
typedef TknU32 NhuReportConfigInterRATtriggerTypperiodicalpurpose;

typedef struct NhuReportConfigInterRATtriggerTypperiodical
{
 TknPres pres;
 NhuReportConfigInterRATtriggerTypperiodicalpurpose purpose;
} NhuReportConfigInterRATtriggerTypperiodical;

typedef struct NhuReportConfigInterRATtriggerTyp
{
 TknU8 choice;
 union {
  NhuReportConfigInterRATtriggerTypevent event;
  NhuReportConfigInterRATtriggerTypperiodical periodical;
 } val;
} NhuReportConfigInterRATtriggerTyp;


typedef TknU32 NhuReportConfigInterRATmaxReportCells;


typedef enum enumNhuReportConfigInterRATreportAmount
{
 NhuReportConfigInterRATreportAmountr1Enum,
 NhuReportConfigInterRATreportAmountr2Enum,
 NhuReportConfigInterRATreportAmountr4Enum,
 NhuReportConfigInterRATreportAmountr8Enum,
 NhuReportConfigInterRATreportAmountr16Enum,
 NhuReportConfigInterRATreportAmountr32Enum,
 NhuReportConfigInterRATreportAmountr64Enum,
 NhuReportConfigInterRATreportAmountinfinityEnum
} EnumNhuReportConfigInterRATreportAmount;
typedef TknU32 NhuReportConfigInterRATreportAmount;


typedef enum enumNhuReportConfigInterRATextaddgrp_1si_RqstForHO_r9
{
 NhuReportConfigInterRATextaddgrp_1si_RqstForHO_r9setupEnum
} EnumNhuReportConfigInterRATextaddgrp_1si_RqstForHO_r9;
typedef TknU32 NhuReportConfigInterRATextaddgrp_1si_RqstForHO_r9;


typedef enum enumNhuReportConfigInterRATextaddgrp_2reportQuantityUTRA_FDD_r10
{
 NhuReportConfigInterRATextaddgrp_2reportQuantityUTRA_FDD_r10bothEnum
} EnumNhuReportConfigInterRATextaddgrp_2reportQuantityUTRA_FDD_r10;
typedef TknU32 NhuReportConfigInterRATextaddgrp_2reportQuantityUTRA_FDD_r10;


typedef TknU8 NhuReportConfigInterRATextaddgrp_3includeLocInfo_r11;

typedef struct NhuReportConfigInterRATextaddgrp_1
{
 TknPres pres;
 NhuReportConfigInterRATextaddgrp_1si_RqstForHO_r9 si_RqstForHO_r9;
} NhuReportConfigInterRATextaddgrp_1;

typedef struct NhuReportConfigInterRATextaddgrp_2
{
 TknPres pres;
 NhuReportConfigInterRATextaddgrp_2reportQuantityUTRA_FDD_r10 reportQuantityUTRA_FDD_r10;
} NhuReportConfigInterRATextaddgrp_2;

typedef struct NhuReportConfigInterRATextaddgrp_3
{
 TknPres pres;
 NhuReportConfigInterRATextaddgrp_3includeLocInfo_r11 includeLocInfo_r11;
} NhuReportConfigInterRATextaddgrp_3;

typedef struct NhuReportConfigInterRAT
{
 TknPres pres;
 NhuReportConfigInterRATtriggerTyp triggerTyp;
 NhuReportConfigInterRATmaxReportCells maxReportCells;
 NhuReportInterval reportInterval;
 NhuReportConfigInterRATreportAmount reportAmount;
 NhuReportConfigInterRATextaddgrp_1 extaddgrp_1;
 NhuReportConfigInterRATextaddgrp_2 extaddgrp_2;
 NhuReportConfigInterRATextaddgrp_3 extaddgrp_3;
} NhuReportConfigInterRAT;

typedef struct NhuReportConfigToAddModreportConfig
{
 TknU8 choice;
 union {
  NhuReportConfigEUTRA reportConfigEUTRA;
  NhuReportConfigInterRAT reportConfigInterRAT;
 } val;
} NhuReportConfigToAddModreportConfig;

typedef struct NhuReportConfigToAddMod
{
 TknPres pres;
 NhuReportConfigId reportConfigId;
 NhuReportConfigToAddModreportConfig reportConfig;
} NhuReportConfigToAddMod;

typedef struct NhuReportConfigToAddModLst
{
 TknU16 noComp;
 NhuReportConfigToAddMod *member;
}NhuReportConfigToAddModLst;


typedef TknU32 NhuMeasId;

typedef struct NhuMeasIdToRemoveLst
{
 TknU16 noComp;
 NhuMeasId *member;
}NhuMeasIdToRemoveLst;

typedef struct NhuMeasIdToAddMod
{
 TknPres pres;
 NhuMeasId measId;
 NhuMeasObjectId measObjectId;
 NhuReportConfigId reportConfigId;
} NhuMeasIdToAddMod;

typedef struct NhuMeasIdToAddModLst
{
 TknU16 noComp;
 NhuMeasIdToAddMod *member;
}NhuMeasIdToAddModLst;

typedef struct NhuQuantityConfigEUTRA
{
 TknPres pres;
 NhuFilterCoefficient filterCoefficientRSRP;
 NhuFilterCoefficient filterCoefficientRSRQ;
} NhuQuantityConfigEUTRA;


typedef enum enumNhuQuantityConfigUTRAmeasQuantityUTRA_FDD
{
 NhuQuantityConfigUTRAmeasQuantityUTRA_FDDcpich_RSCPEnum,
 NhuQuantityConfigUTRAmeasQuantityUTRA_FDDcpich_EcN0Enum
} EnumNhuQuantityConfigUTRAmeasQuantityUTRA_FDD;
typedef TknU32 NhuQuantityConfigUTRAmeasQuantityUTRA_FDD;


typedef enum enumNhuQuantityConfigUTRAmeasQuantityUTRA_TDD
{
 NhuQuantityConfigUTRAmeasQuantityUTRA_TDDpccpch_RSCPEnum
} EnumNhuQuantityConfigUTRAmeasQuantityUTRA_TDD;
typedef TknU32 NhuQuantityConfigUTRAmeasQuantityUTRA_TDD;

typedef struct NhuQuantityConfigUTRA
{
 TknPres pres;
 NhuQuantityConfigUTRAmeasQuantityUTRA_FDD measQuantityUTRA_FDD;
 NhuQuantityConfigUTRAmeasQuantityUTRA_TDD measQuantityUTRA_TDD;
 NhuFilterCoefficient filterCoefficient;
} NhuQuantityConfigUTRA;


typedef enum enumNhuQuantityConfigGERANmeasQuantityGERAN
{
 NhuQuantityConfigGERANmeasQuantityGERANrssiEnum
} EnumNhuQuantityConfigGERANmeasQuantityGERAN;
typedef TknU32 NhuQuantityConfigGERANmeasQuantityGERAN;

typedef struct NhuQuantityConfigGERAN
{
 TknPres pres;
 NhuQuantityConfigGERANmeasQuantityGERAN measQuantityGERAN;
 NhuFilterCoefficient filterCoefficient;
} NhuQuantityConfigGERAN;


typedef enum enumNhuQuantityConfigCDMA2000measQuantityCDMA2000
{
 NhuQuantityConfigCDMA2000measQuantityCDMA2000pilotStrengthEnum,
 NhuQuantityConfigCDMA2000measQuantityCDMA2000pilotPnPhaseAndPilotStrengthEnum
} EnumNhuQuantityConfigCDMA2000measQuantityCDMA2000;
typedef TknU32 NhuQuantityConfigCDMA2000measQuantityCDMA2000;

typedef struct NhuQuantityConfigCDMA2000
{
 TknPres pres;
 NhuQuantityConfigCDMA2000measQuantityCDMA2000 measQuantityCDMA2000;
} NhuQuantityConfigCDMA2000;

typedef struct NhuQuantityConfigUTRA_v1020
{
 TknPres pres;
 NhuFilterCoefficient filterCoefficient2_FDD_r10;
} NhuQuantityConfigUTRA_v1020;

typedef struct NhuQuantityConfigextaddgrp_1
{
 TknPres pres;
 NhuQuantityConfigUTRA_v1020 quantityConfigUTRA_v1020;
} NhuQuantityConfigextaddgrp_1;

typedef struct NhuQuantityConfig
{
 TknPres pres;
 NhuQuantityConfigEUTRA quantityConfigEUTRA;
 NhuQuantityConfigUTRA quantityConfigUTRA;
 NhuQuantityConfigGERAN quantityConfigGERAN;
 NhuQuantityConfigCDMA2000 quantityConfigCDMA2000;
 NhuQuantityConfigextaddgrp_1 extaddgrp_1;
} NhuQuantityConfig;


typedef TknU32 NhuMeasGapConfigsetupgapOffsetgp0;


typedef TknU32 NhuMeasGapConfigsetupgapOffsetgp1;

typedef struct NhuMeasGapConfigsetupgapOffset
{
 TknU8 choice;
 union {
  NhuMeasGapConfigsetupgapOffsetgp0 gp0;
  NhuMeasGapConfigsetupgapOffsetgp1 gp1;
 } val;
} NhuMeasGapConfigsetupgapOffset;

typedef struct NhuMeasGapConfigsetup
{
 TknPres pres;
 NhuMeasGapConfigsetupgapOffset gapOffset;
} NhuMeasGapConfigsetup;

typedef struct NhuMeasGapConfig
{
 TknU8 choice;
 union {
  NhuMeasGapConfigsetup setup;
 } val;
} NhuMeasGapConfig;


typedef TknU32 NhuARFCN_ValueEUTRA_v9e0;

typedef struct NhuMeasObjectEUTRA_v9e0
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 carrierFreq_v9e0;
} NhuMeasObjectEUTRA_v9e0;

typedef struct NhuMeasObjectToAddMod_v9e0
{
 TknPres pres;
 NhuMeasObjectEUTRA_v9e0 measObjectEUTRA_v9e0;
} NhuMeasObjectToAddMod_v9e0;

typedef struct NhuMeasObjectToAddModLst_v9e0
{
 TknU16 noComp;
 NhuMeasObjectToAddMod_v9e0 *member;
}NhuMeasObjectToAddModLst_v9e0;

typedef struct NhuMeasConfigspeedStateParssetup
{
 TknPres pres;
 NhuMobilityStateParams mobilityStateParams;
 NhuSpeedStateScaleFactors timeToTrigger_SF;
} NhuMeasConfigspeedStateParssetup;

typedef struct NhuMeasConfigspeedStatePars
{
 TknU8 choice;
 union {
  NhuMeasConfigspeedStateParssetup setup;
 } val;
} NhuMeasConfigspeedStatePars;


typedef TknU8 NhuMeasConfigextaddgrp_2allowInterruptions_r11;

typedef struct NhuMeasConfigextaddgrp_1
{
 TknPres pres;
 NhuMeasObjectToAddModLst_v9e0 measObjectToAddModLst_v9e0;
} NhuMeasConfigextaddgrp_1;

typedef struct NhuMeasConfigextaddgrp_2
{
 TknPres pres;
 NhuMeasConfigextaddgrp_2allowInterruptions_r11 allowInterruptions_r11;
} NhuMeasConfigextaddgrp_2;

typedef struct NhuMeasConfig
{
 TknPres pres;
 NhuMeasObjectToRemoveLst measObjectToRemoveLst;
 NhuMeasObjectToAddModLst measObjectToAddModLst;
 NhuReportConfigToRemoveLst reportConfigToRemoveLst;
 NhuReportConfigToAddModLst reportConfigToAddModLst;
 NhuMeasIdToRemoveLst measIdToRemoveLst;
 NhuMeasIdToAddModLst measIdToAddModLst;
 NhuQuantityConfig quantityConfig;
 NhuMeasGapConfig measGapConfig;
 NhuRSRP_Range s_Measure;
 NhuPreRegistrationInfoHRPD preRegistrationInfoHRPD;
 NhuMeasConfigspeedStatePars speedStatePars;
 NhuMeasConfigextaddgrp_1 extaddgrp_1;
 NhuMeasConfigextaddgrp_2 extaddgrp_2;
} NhuMeasConfig;

typedef struct NhuCarrierFreqEUTRA
{
 TknPres pres;
 NhuARFCN_ValueEUTRA dl_CarrierFreq;
 NhuARFCN_ValueEUTRA ul_CarrierFreq;
} NhuCarrierFreqEUTRA;


typedef enum enumNhuCarrierBandwidthEUTRAdl_Bandwidth
{
 NhuCarrierBandwidthEUTRAdl_Bandwidthn6Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthn15Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthn25Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthn50Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthn75Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthn100Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare10Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare9Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare8Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare7Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare6Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare5Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare4Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare3Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare2Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare1Enum
} EnumNhuCarrierBandwidthEUTRAdl_Bandwidth;
typedef TknU32 NhuCarrierBandwidthEUTRAdl_Bandwidth;


typedef enum enumNhuCarrierBandwidthEUTRAul_Bandwidth
{
 NhuCarrierBandwidthEUTRAul_Bandwidthn6Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthn15Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthn25Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthn50Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthn75Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthn100Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare10Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare9Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare8Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare7Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare6Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare5Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare4Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare3Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare2Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare1Enum
} EnumNhuCarrierBandwidthEUTRAul_Bandwidth;
typedef TknU32 NhuCarrierBandwidthEUTRAul_Bandwidth;

typedef struct NhuCarrierBandwidthEUTRA
{
 TknPres pres;
 NhuCarrierBandwidthEUTRAdl_Bandwidth dl_Bandwidth;
 NhuCarrierBandwidthEUTRAul_Bandwidth ul_Bandwidth;
} NhuCarrierBandwidthEUTRA;


typedef TknU32 NhuPRACH_ConfigrootSequenceIdx;

typedef struct NhuPRACH_Config
{
 TknPres pres;
 NhuPRACH_ConfigrootSequenceIdx rootSequenceIdx;
 NhuPRACH_ConfigInfo prach_ConfigInfo;
} NhuPRACH_Config;


typedef enum enumNhuAntennaInfoCmnantennaPortsCount
{
 NhuAntennaInfoCmnantennaPortsCountan1Enum,
 NhuAntennaInfoCmnantennaPortsCountan2Enum,
 NhuAntennaInfoCmnantennaPortsCountan4Enum,
 NhuAntennaInfoCmnantennaPortsCountspare1Enum
} EnumNhuAntennaInfoCmnantennaPortsCount;
typedef TknU32 NhuAntennaInfoCmnantennaPortsCount;

typedef struct NhuAntennaInfoCmn
{
 TknPres pres;
 NhuAntennaInfoCmnantennaPortsCount antennaPortsCount;
} NhuAntennaInfoCmn;

typedef struct NhuRadioResourceConfigCmnextaddgrp_1
{
 TknPres pres;
 NhuUlnkPowerCntrlCmn_v1020 uplinkPowerCntrlCmn_v1020;
} NhuRadioResourceConfigCmnextaddgrp_1;

typedef struct NhuRadioResourceConfigCmnextaddgrp_2
{
 TknPres pres;
 NhuTDD_Config_v1130 tdd_Config_v1130;
} NhuRadioResourceConfigCmnextaddgrp_2;

typedef struct NhuRadioResourceConfigCmn
{
 TknPres pres;
 NhuRACH_ConfigCmn rach_ConfigCmn;
 NhuPRACH_Config prach_Config;
 NhuPDSCH_ConfigCmn pdsch_ConfigCmn;
 NhuPUSCH_ConfigCmn pusch_ConfigCmn;
 NhuPHICH_Config phich_Config;
 NhuPUCCH_ConfigCmn pucch_ConfigCmn;
 NhuSoundingRS_UL_ConfigCmn soundingRS_UL_ConfigCmn;
 NhuUlnkPowerCntrlCmn uplinkPowerCntrlCmn;
 NhuAntennaInfoCmn antennaInfoCmn;
 NhuP_Max p_Max;
 NhuTDD_Config tdd_Config;
 NhuUL_CyclicPrefixLength ul_CyclicPrefixLength;
 NhuRadioResourceConfigCmnextaddgrp_1 extaddgrp_1;
 NhuRadioResourceConfigCmnextaddgrp_2 extaddgrp_2;
} NhuRadioResourceConfigCmn;


typedef TknU32 NhuRACH_ConfigDedicatedra_PreambleIdx;


typedef TknU32 NhuRACH_ConfigDedicatedra_PRACH_MaskIdx;

typedef struct NhuRACH_ConfigDedicated
{
 TknPres pres;
 NhuRACH_ConfigDedicatedra_PreambleIdx ra_PreambleIdx;
 NhuRACH_ConfigDedicatedra_PRACH_MaskIdx ra_PRACH_MaskIdx;
} NhuRACH_ConfigDedicated;

typedef struct NhuCarrierFreqEUTRA_v9e0
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_r9 dl_CarrierFreq_v9e0;
 NhuARFCN_ValueEUTRA_r9 ul_CarrierFreq_v9e0;
} NhuCarrierFreqEUTRA_v9e0;


typedef enum enumNhuMobilityCntrlInfot304
{
 NhuMobilityCntrlInfot304ms50Enum,
 NhuMobilityCntrlInfot304ms100Enum,
 NhuMobilityCntrlInfot304ms150Enum,
 NhuMobilityCntrlInfot304ms200Enum,
 NhuMobilityCntrlInfot304ms500Enum,
 NhuMobilityCntrlInfot304ms1000Enum,
 NhuMobilityCntrlInfot304ms2000Enum,
 NhuMobilityCntrlInfot304spare1Enum
} EnumNhuMobilityCntrlInfot304;
typedef TknU32 NhuMobilityCntrlInfot304;


typedef enum enumNhuMobilityCntrlInfoextaddgrp_2drb_ContinueROHC_r11
{
 NhuMobilityCntrlInfoextaddgrp_2drb_ContinueROHC_r11trueEnum
} EnumNhuMobilityCntrlInfoextaddgrp_2drb_ContinueROHC_r11;
typedef TknU32 NhuMobilityCntrlInfoextaddgrp_2drb_ContinueROHC_r11;

typedef struct NhuMobilityCntrlInfoextaddgrp_1
{
 TknPres pres;
 NhuCarrierFreqEUTRA_v9e0 carrierFreq_v9e0;
} NhuMobilityCntrlInfoextaddgrp_1;

typedef struct NhuMobilityCntrlInfoextaddgrp_2
{
 TknPres pres;
 NhuMobilityCntrlInfoextaddgrp_2drb_ContinueROHC_r11 drb_ContinueROHC_r11;
} NhuMobilityCntrlInfoextaddgrp_2;

typedef struct NhuMobilityCntrlInfo
{
 TknPres pres;
 NhuPhysCellId targetPhysCellId;
 NhuCarrierFreqEUTRA carrierFreq;
 NhuCarrierBandwidthEUTRA carrierBandwidth;
 NhuAdditionalSpectrumEmission additionalSpectrumEmission;
 NhuMobilityCntrlInfot304 t304;
 NhuC_RNTI newUE_Identity;
 NhuRadioResourceConfigCmn radioResourceConfigCmn;
 NhuRACH_ConfigDedicated rach_ConfigDedicated;
 NhuMobilityCntrlInfoextaddgrp_1 extaddgrp_1;
 NhuMobilityCntrlInfoextaddgrp_2 extaddgrp_2;
} NhuMobilityCntrlInfo;


typedef enum enumNhuSecAlgorithmConfigcipheringAlgorithm
{
 NhuSecAlgorithmConfigcipheringAlgorithmeea0Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmeea1Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmeea2Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmeea3_v1130Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmspare4Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmspare3Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmspare2Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmspare1Enum
} EnumNhuSecAlgorithmConfigcipheringAlgorithm;
typedef TknU32 NhuSecAlgorithmConfigcipheringAlgorithm;


typedef enum enumNhuSecAlgorithmConfigintegrityProtAlgorithm
{
 NhuSecAlgorithmConfigintegrityProtAlgorithmeia0_v920Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmeia1Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmeia2Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmeia3_v1130Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmspare4Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmspare3Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmspare2Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmspare1Enum
} EnumNhuSecAlgorithmConfigintegrityProtAlgorithm;
typedef TknU32 NhuSecAlgorithmConfigintegrityProtAlgorithm;

typedef struct NhuSecAlgorithmConfig
{
 TknPres pres;
 NhuSecAlgorithmConfigcipheringAlgorithm cipheringAlgorithm;
 NhuSecAlgorithmConfigintegrityProtAlgorithm integrityProtAlgorithm;
} NhuSecAlgorithmConfig;


typedef TknU8 NhuSecConfigHOhandoverTypintraLTEkeyChangeIndicator;

typedef struct NhuSecConfigHOhandoverTypintraLTE
{
 TknPres pres;
 NhuSecAlgorithmConfig securityAlgorithmConfig;
 NhuSecConfigHOhandoverTypintraLTEkeyChangeIndicator keyChangeIndicator;
 NhuNextHopChainingCount nextHopChainingCount;
} NhuSecConfigHOhandoverTypintraLTE;


typedef TknStrOSXL NhuSecConfigHOhandoverTypinterRATnas_SecParamToEUTRA;
typedef struct NhuSecConfigHOhandoverTypinterRAT
{
 TknPres pres;
 NhuSecAlgorithmConfig securityAlgorithmConfig;
 NhuSecConfigHOhandoverTypinterRATnas_SecParamToEUTRA nas_SecParamToEUTRA;
} NhuSecConfigHOhandoverTypinterRAT;

typedef struct NhuSecConfigHOhandoverTyp
{
 TknU8 choice;
 union {
  NhuSecConfigHOhandoverTypintraLTE intraLTE;
  NhuSecConfigHOhandoverTypinterRAT interRAT;
 } val;
} NhuSecConfigHOhandoverTyp;

typedef struct NhuSecConfigHO
{
 TknPres pres;
 NhuSecConfigHOhandoverTyp handoverTyp;
} NhuSecConfigHO;


typedef enum enumNhuReportProximityConfig_r9proximityIndEUTRA_r9
{
 NhuReportProximityConfig_r9proximityIndEUTRA_r9enabledEnum
} EnumNhuReportProximityConfig_r9proximityIndEUTRA_r9;
typedef TknU32 NhuReportProximityConfig_r9proximityIndEUTRA_r9;


typedef enum enumNhuReportProximityConfig_r9proximityIndUTRA_r9
{
 NhuReportProximityConfig_r9proximityIndUTRA_r9enabledEnum
} EnumNhuReportProximityConfig_r9proximityIndUTRA_r9;
typedef TknU32 NhuReportProximityConfig_r9proximityIndUTRA_r9;

typedef struct NhuReportProximityConfig_r9
{
 TknPres pres;
 NhuReportProximityConfig_r9proximityIndEUTRA_r9 proximityIndEUTRA_r9;
 NhuReportProximityConfig_r9proximityIndUTRA_r9 proximityIndUTRA_r9;
} NhuReportProximityConfig_r9;


typedef enum enumNhuIDC_Config_r11idc_Ind_r11
{
 NhuIDC_Config_r11idc_Ind_r11setupEnum
} EnumNhuIDC_Config_r11idc_Ind_r11;
typedef TknU32 NhuIDC_Config_r11idc_Ind_r11;


typedef enum enumNhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11
{
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11n2Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11n5Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11n10Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11n15Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11n20Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11n30Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11spare2Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11spare1Enum
} EnumNhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11;
typedef TknU32 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11;


typedef enum enumNhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11
{
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11sf200Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11sf500Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11sf1000Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11sf2000Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11spare4Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11spare3Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11spare2Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11spare1Enum
} EnumNhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11;
typedef TknU32 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11;

typedef struct NhuIDC_Config_r11autonomousDenialParams_r11
{
 TknPres pres;
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11 autonomousDenialSubfrms_r11;
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11 autonomousDenialValidity_r11;
} NhuIDC_Config_r11autonomousDenialParams_r11;

typedef struct NhuIDC_Config_r11
{
 TknPres pres;
 NhuIDC_Config_r11idc_Ind_r11 idc_Ind_r11;
 NhuIDC_Config_r11autonomousDenialParams_r11 autonomousDenialParams_r11;
} NhuIDC_Config_r11;


typedef enum enumNhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11
{
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s0Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s0dot5Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s1Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s2Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s5Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s10Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s20Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s30Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s60Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s90Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s120Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s300Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s600Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11spare3Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11spare2Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11spare1Enum
} EnumNhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11;
typedef TknU32 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11;

typedef struct NhuPowerPrefIndConfig_r11setup
{
 TknPres pres;
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11 powerPrefIndTimer_r11;
} NhuPowerPrefIndConfig_r11setup;

typedef struct NhuPowerPrefIndConfig_r11
{
 TknU8 choice;
 union {
  NhuPowerPrefIndConfig_r11setup setup;
 } val;
} NhuPowerPrefIndConfig_r11;


typedef enum enumNhuObtainLocConfig_r11obtainLoc_r11
{
 NhuObtainLocConfig_r11obtainLoc_r11setupEnum
} EnumNhuObtainLocConfig_r11obtainLoc_r11;
typedef TknU32 NhuObtainLocConfig_r11obtainLoc_r11;

typedef struct NhuObtainLocConfig_r11
{
 TknPres pres;
 NhuObtainLocConfig_r11obtainLoc_r11 obtainLoc_r11;
} NhuObtainLocConfig_r11;

typedef struct NhuOtherConfig_r9extaddgrp_1
{
 TknPres pres;
 NhuIDC_Config_r11 idc_Config_r11;
 NhuPowerPrefIndConfig_r11 powerPrefIndConfig_r11;
 NhuObtainLocConfig_r11 obtainLocConfig_r11;
} NhuOtherConfig_r9extaddgrp_1;

typedef struct NhuOtherConfig_r9
{
 TknPres pres;
 NhuReportProximityConfig_r9 reportProximityConfig_r9;
 NhuOtherConfig_r9extaddgrp_1 extaddgrp_1;
} NhuOtherConfig_r9;


typedef TknU32 NhuSCellIdx_r10;

typedef struct NhuSCellToRlsLst_r10
{
 TknU16 noComp;
 NhuSCellIdx_r10 *member;
}NhuSCellToRlsLst_r10;


typedef TknS32 NhuUlnkPowerCntrlCmnSCell_r10p0_NominalPUSCH_r10;


typedef enum enumNhuUlnkPowerCntrlCmnSCell_r10alpha_r10
{
 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10al0Enum,
 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10al04Enum,
 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10al05Enum,
 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10al06Enum,
 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10al07Enum,
 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10al08Enum,
 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10al09Enum,
 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10al1Enum
} EnumNhuUlnkPowerCntrlCmnSCell_r10alpha_r10;
typedef TknU32 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10;

typedef struct NhuUlnkPowerCntrlCmnSCell_r10
{
 TknPres pres;
 NhuUlnkPowerCntrlCmnSCell_r10p0_NominalPUSCH_r10 p0_NominalPUSCH_r10;
 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10 alpha_r10;
} NhuUlnkPowerCntrlCmnSCell_r10;


typedef TknU32 NhuPRACH_ConfigSCell_r10prach_ConfigIdx_r10;

typedef struct NhuPRACH_ConfigSCell_r10
{
 TknPres pres;
 NhuPRACH_ConfigSCell_r10prach_ConfigIdx_r10 prach_ConfigIdx_r10;
} NhuPRACH_ConfigSCell_r10;

typedef struct NhuRACH_ConfigCmnSCell_r11ra_SupervisionInfo_r11
{
 TknPres pres;
 NhuPreambleTransMax preambleTransMax_r11;
} NhuRACH_ConfigCmnSCell_r11ra_SupervisionInfo_r11;

typedef struct NhuRACH_ConfigCmnSCell_r11
{
 TknPres pres;
 NhuPowerRampingParams powerRampingParams_r11;
 NhuRACH_ConfigCmnSCell_r11ra_SupervisionInfo_r11 ra_SupervisionInfo_r11;
} NhuRACH_ConfigCmnSCell_r11;


typedef TknS32 NhuUlnkPowerCntrlCmnSCell_v1130deltaPreambleMsg3_r11;

typedef struct NhuUlnkPowerCntrlCmnSCell_v1130
{
 TknPres pres;
 NhuUlnkPowerCntrlCmnSCell_v1130deltaPreambleMsg3_r11 deltaPreambleMsg3_r11;
} NhuUlnkPowerCntrlCmnSCell_v1130;


typedef enum enumNhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10
{
 NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10n6Enum,
 NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10n15Enum,
 NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10n25Enum,
 NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10n50Enum,
 NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10n75Enum,
 NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10n100Enum
} EnumNhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10;
typedef TknU32 NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10;

typedef struct NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10
{
 TknPres pres;
 NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10 dl_Bandwidth_r10;
 NhuAntennaInfoCmn antennaInfoCmn_r10;
 NhuMBSFN_SubfrmConfigLst mbsfn_SubfrmConfigLst_r10;
 NhuPHICH_Config phich_Config_r10;
 NhuPDSCH_ConfigCmn pdsch_ConfigCmn_r10;
 NhuTDD_Config tdd_Config_r10;
} NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10;


typedef enum enumNhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10
{
 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10n6Enum,
 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10n15Enum,
 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10n25Enum,
 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10n50Enum,
 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10n75Enum,
 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10n100Enum
} EnumNhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10;
typedef TknU32 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10;

typedef struct NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10
{
 TknPres pres;
 NhuARFCN_ValueEUTRA ul_CarrierFreq_r10;
 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10 ul_Bandwidth_r10;
 NhuAdditionalSpectrumEmission additionalSpectrumEmissionSCell_r10;
} NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10;

typedef struct NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10
{
 TknPres pres;
 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10 ul_FreqInfo_r10;
 NhuP_Max p_Max_r10;
 NhuUlnkPowerCntrlCmnSCell_r10 uplinkPowerCntrlCmnSCell_r10;
 NhuSoundingRS_UL_ConfigCmn soundingRS_UL_ConfigCmn_r10;
 NhuUL_CyclicPrefixLength ul_CyclicPrefixLength_r10;
 NhuPRACH_ConfigSCell_r10 prach_ConfigSCell_r10;
 NhuPUSCH_ConfigCmn pusch_ConfigCmn_r10;
} NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10;

typedef struct NhuRadioResourceConfigCmnSCell_r10extaddgrp_1
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 ul_CarrierFreq_v1090;
} NhuRadioResourceConfigCmnSCell_r10extaddgrp_1;

typedef struct NhuRadioResourceConfigCmnSCell_r10extaddgrp_2
{
 TknPres pres;
 NhuRACH_ConfigCmnSCell_r11 rach_ConfigCmnSCell_r11;
 NhuPRACH_Config prach_ConfigSCell_r11;
 NhuTDD_Config_v1130 tdd_Config_v1130;
 NhuUlnkPowerCntrlCmnSCell_v1130 uplinkPowerCntrlCmnSCell_v1130;
} NhuRadioResourceConfigCmnSCell_r10extaddgrp_2;

typedef struct NhuRadioResourceConfigCmnSCell_r10
{
 TknPres pres;
 NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10 nonUL_Cfg_r10;
 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10 ul_Cfg_r10;
 NhuRadioResourceConfigCmnSCell_r10extaddgrp_1 extaddgrp_1;
 NhuRadioResourceConfigCmnSCell_r10extaddgrp_2 extaddgrp_2;
} NhuRadioResourceConfigCmnSCell_r10;


typedef TknU32 NhuServCellIdx_r10;


typedef TknU8 NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10own_r10cif_Presence_r10;

typedef struct NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10own_r10
{
 TknPres pres;
 NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10own_r10cif_Presence_r10 cif_Presence_r10;
} NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10own_r10;


typedef TknU32 NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10other_r10pdsch_Start_r10;

typedef struct NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10other_r10
{
 TknPres pres;
 NhuServCellIdx_r10 schedulingCellId_r10;
 NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10other_r10pdsch_Start_r10 pdsch_Start_r10;
} NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10other_r10;

typedef struct NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10
{
 TknU8 choice;
 union {
  NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10own_r10 own_r10;
  NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10other_r10 other_r10;
 } val;
} NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10;

typedef struct NhuCrossCarrierSchedulingConfig_r10
{
 TknPres pres;
 NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10 schedulingCellInfo_r10;
} NhuCrossCarrierSchedulingConfig_r10;


typedef enum enumNhuPUSCH_ConfigDedicatedSCell_r10groupHoppingDisabled_r10
{
 NhuPUSCH_ConfigDedicatedSCell_r10groupHoppingDisabled_r10trueEnum
} EnumNhuPUSCH_ConfigDedicatedSCell_r10groupHoppingDisabled_r10;
typedef TknU32 NhuPUSCH_ConfigDedicatedSCell_r10groupHoppingDisabled_r10;


typedef enum enumNhuPUSCH_ConfigDedicatedSCell_r10dmrs_WithOCC_Activated_r10
{
 NhuPUSCH_ConfigDedicatedSCell_r10dmrs_WithOCC_Activated_r10trueEnum
} EnumNhuPUSCH_ConfigDedicatedSCell_r10dmrs_WithOCC_Activated_r10;
typedef TknU32 NhuPUSCH_ConfigDedicatedSCell_r10dmrs_WithOCC_Activated_r10;

typedef struct NhuPUSCH_ConfigDedicatedSCell_r10
{
 TknPres pres;
 NhuPUSCH_ConfigDedicatedSCell_r10groupHoppingDisabled_r10 groupHoppingDisabled_r10;
 NhuPUSCH_ConfigDedicatedSCell_r10dmrs_WithOCC_Activated_r10 dmrs_WithOCC_Activated_r10;
} NhuPUSCH_ConfigDedicatedSCell_r10;


typedef TknS32 NhuUlnkPowerCntrlDedicatedSCell_r10p0_UE_PUSCH_r10;


typedef enum enumNhuUlnkPowerCntrlDedicatedSCell_r10deltaMCS_Enabled_r10
{
 NhuUlnkPowerCntrlDedicatedSCell_r10deltaMCS_Enabled_r10en0Enum,
 NhuUlnkPowerCntrlDedicatedSCell_r10deltaMCS_Enabled_r10en1Enum
} EnumNhuUlnkPowerCntrlDedicatedSCell_r10deltaMCS_Enabled_r10;
typedef TknU32 NhuUlnkPowerCntrlDedicatedSCell_r10deltaMCS_Enabled_r10;


typedef TknU8 NhuUlnkPowerCntrlDedicatedSCell_r10accumulationEnabled_r10;


typedef TknU32 NhuUlnkPowerCntrlDedicatedSCell_r10pSRS_Offset_r10;


typedef TknU32 NhuUlnkPowerCntrlDedicatedSCell_r10pSRS_OffsetAp_r10;


typedef enum enumNhuUlnkPowerCntrlDedicatedSCell_r10pathlossReferenceLinking_r10
{
 NhuUlnkPowerCntrlDedicatedSCell_r10pathlossReferenceLinking_r10pCellEnum,
 NhuUlnkPowerCntrlDedicatedSCell_r10pathlossReferenceLinking_r10sCellEnum
} EnumNhuUlnkPowerCntrlDedicatedSCell_r10pathlossReferenceLinking_r10;
typedef TknU32 NhuUlnkPowerCntrlDedicatedSCell_r10pathlossReferenceLinking_r10;

typedef struct NhuUlnkPowerCntrlDedicatedSCell_r10
{
 TknPres pres;
 NhuUlnkPowerCntrlDedicatedSCell_r10p0_UE_PUSCH_r10 p0_UE_PUSCH_r10;
 NhuUlnkPowerCntrlDedicatedSCell_r10deltaMCS_Enabled_r10 deltaMCS_Enabled_r10;
 NhuUlnkPowerCntrlDedicatedSCell_r10accumulationEnabled_r10 accumulationEnabled_r10;
 NhuUlnkPowerCntrlDedicatedSCell_r10pSRS_Offset_r10 pSRS_Offset_r10;
 NhuUlnkPowerCntrlDedicatedSCell_r10pSRS_OffsetAp_r10 pSRS_OffsetAp_r10;
 NhuFilterCoefficient filterCoefficient_r10;
 NhuUlnkPowerCntrlDedicatedSCell_r10pathlossReferenceLinking_r10 pathlossReferenceLinking_r10;
} NhuUlnkPowerCntrlDedicatedSCell_r10;


typedef TknS32 NhuCQI_ReportConfigSCell_r10nomPDSCH_RS_EPRE_Offset_r10;


typedef enum enumNhuCQI_ReportConfigSCell_r10pmi_RI_Report_r10
{
 NhuCQI_ReportConfigSCell_r10pmi_RI_Report_r10setupEnum
} EnumNhuCQI_ReportConfigSCell_r10pmi_RI_Report_r10;
typedef TknU32 NhuCQI_ReportConfigSCell_r10pmi_RI_Report_r10;

typedef struct NhuCQI_ReportConfigSCell_r10
{
 TknPres pres;
 NhuCQI_ReportModeAperiodic cqi_ReportModeAperiodic_r10;
 NhuCQI_ReportConfigSCell_r10nomPDSCH_RS_EPRE_Offset_r10 nomPDSCH_RS_EPRE_Offset_r10;
 NhuCQI_ReportPeriodic_r10 cqi_ReportPeriodicSCell_r10;
 NhuCQI_ReportConfigSCell_r10pmi_RI_Report_r10 pmi_RI_Report_r10;
} NhuCQI_ReportConfigSCell_r10;

typedef struct NhuPhysicalConfigDedicatedSCell_r10nonUL_Cfg_r10
{
 TknPres pres;
 NhuAntennaInfoDedicated_r10 antennaInfo_r10;
 NhuCrossCarrierSchedulingConfig_r10 crossCarrierSchedulingConfig_r10;
 NhuCSI_RS_Config_r10 csi_RS_Config_r10;
 NhuPDSCH_ConfigDedicated pdsch_ConfigDedicated_r10;
} NhuPhysicalConfigDedicatedSCell_r10nonUL_Cfg_r10;

typedef struct NhuPhysicalConfigDedicatedSCell_r10ul_Cfg_r10
{
 TknPres pres;
 NhuAntennaInfoUL_r10 antennaInfoUL_r10;
 NhuPUSCH_ConfigDedicatedSCell_r10 pusch_ConfigDedicatedSCell_r10;
 NhuUlnkPowerCntrlDedicatedSCell_r10 uplinkPowerCntrlDedicatedSCell_r10;
 NhuCQI_ReportConfigSCell_r10 cqi_ReportConfigSCell_r10;
 NhuSoundingRS_UL_ConfigDedicated soundingRS_UL_ConfigDedicated_r10;
 NhuSoundingRS_UL_ConfigDedicated_v1020 soundingRS_UL_ConfigDedicated_v1020;
 NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10 soundingRS_UL_ConfigDedicatedAperiodic_r10;
} NhuPhysicalConfigDedicatedSCell_r10ul_Cfg_r10;

typedef struct NhuPhysicalConfigDedicatedSCell_r10extaddgrp_1
{
 TknPres pres;
 NhuCSI_RS_ConfigNZPToRlsLst_r11 csi_RS_ConfigNZPToRlsLst_r11;
 NhuCSI_RS_ConfigNZPToAddModLst_r11 csi_RS_ConfigNZPToAddModLst_r11;
 NhuCSI_RS_ConfigZPToRlsLst_r11 csi_RS_ConfigZPToRlsLst_r11;
 NhuCSI_RS_ConfigZPToAddModLst_r11 csi_RS_ConfigZPToAddModLst_r11;
 NhuEPDCCH_Config_r11 epdcch_Config_r11;
 NhuPDSCH_ConfigDedicated_v1130 pdsch_ConfigDedicated_v1130;
 NhuCQI_ReportConfig_v1130 cqi_ReportConfig_v1130;
 NhuPUSCH_ConfigDedicated_v1130 pusch_ConfigDedicated_v1130;
 NhuUlnkPowerCntrlDedicated_v1130 uplinkPowerCntrlDedicatedSCell_v1130;
} NhuPhysicalConfigDedicatedSCell_r10extaddgrp_1;

typedef struct NhuPhysicalConfigDedicatedSCell_r10
{
 TknPres pres;
 NhuPhysicalConfigDedicatedSCell_r10nonUL_Cfg_r10 nonUL_Cfg_r10;
 NhuPhysicalConfigDedicatedSCell_r10ul_Cfg_r10 ul_Cfg_r10;
 NhuPhysicalConfigDedicatedSCell_r10extaddgrp_1 extaddgrp_1;
} NhuPhysicalConfigDedicatedSCell_r10;

typedef struct NhuMAC_MainConfigSCell_r11
{
 TknPres pres;
 NhuSTAG_Id_r11 stag_Id_r11;
} NhuMAC_MainConfigSCell_r11;

typedef struct NhuRadioResourceConfigDedicatedSCell_r10extaddgrp_1
{
 TknPres pres;
 NhuMAC_MainConfigSCell_r11 mac_MainConfigSCell_r11;
} NhuRadioResourceConfigDedicatedSCell_r10extaddgrp_1;

typedef struct NhuRadioResourceConfigDedicatedSCell_r10
{
 TknPres pres;
 NhuPhysicalConfigDedicatedSCell_r10 physicalConfigDedicatedSCell_r10;
 NhuRadioResourceConfigDedicatedSCell_r10extaddgrp_1 extaddgrp_1;
} NhuRadioResourceConfigDedicatedSCell_r10;

typedef struct NhuSCellToAddMod_r10cellIdentification_r10
{
 TknPres pres;
 NhuPhysCellId physCellId_r10;
 NhuARFCN_ValueEUTRA dl_CarrierFreq_r10;
} NhuSCellToAddMod_r10cellIdentification_r10;

typedef struct NhuSCellToAddMod_r10extaddgrp_1
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 dl_CarrierFreq_v1090;
} NhuSCellToAddMod_r10extaddgrp_1;

typedef struct NhuSCellToAddMod_r10
{
 TknPres pres;
 NhuSCellIdx_r10 sCellIdx_r10;
 NhuSCellToAddMod_r10cellIdentification_r10 cellIdentification_r10;
 NhuRadioResourceConfigCmnSCell_r10 radioResourceConfigCmnSCell_r10;
 NhuRadioResourceConfigDedicatedSCell_r10 radioResourceConfigDedicatedSCell_r10;
 NhuSCellToAddMod_r10extaddgrp_1 extaddgrp_1;
} NhuSCellToAddMod_r10;

typedef struct NhuSCellToAddModLst_r10
{
 TknU16 noComp;
 NhuSCellToAddMod_r10 *member;
}NhuSCellToAddModLst_r10;


typedef TknStrOSXL NhuRRCConRecfgn_v1130_IEssystemInfomationBlockTyp1Dedicated_r11;
typedef struct NhuRRCConRecfgn_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConRecfgn_v1130_IEsnonCriticalExtn;

typedef struct NhuRRCConRecfgn_v1130_IEs
{
 TknPres pres;
 NhuRRCConRecfgn_v1130_IEssystemInfomationBlockTyp1Dedicated_r11 systemInfomationBlockTyp1Dedicated_r11;
 NhuRRCConRecfgn_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConRecfgn_v1130_IEs;

typedef struct NhuRRCConRecfgn_v1020_IEs
{
 TknPres pres;
 NhuSCellToRlsLst_r10 sCellToRlsLst_r10;
 NhuSCellToAddModLst_r10 sCellToAddModLst_r10;
 NhuRRCConRecfgn_v1130_IEs nonCriticalExtn;
} NhuRRCConRecfgn_v1020_IEs;


typedef enum enumNhuRRCConRecfgn_v920_IEsfullConfig_r9
{
 NhuRRCConRecfgn_v920_IEsfullConfig_r9trueEnum
} EnumNhuRRCConRecfgn_v920_IEsfullConfig_r9;
typedef TknU32 NhuRRCConRecfgn_v920_IEsfullConfig_r9;

typedef struct NhuRRCConRecfgn_v920_IEs
{
 TknPres pres;
 NhuOtherConfig_r9 otherConfig_r9;
 NhuRRCConRecfgn_v920_IEsfullConfig_r9 fullConfig_r9;
 NhuRRCConRecfgn_v1020_IEs nonCriticalExtn;
} NhuRRCConRecfgn_v920_IEs;


typedef TknStrOSXL NhuRRCConRecfgn_v890_IEslateNonCriticalExtn;
typedef struct NhuRRCConRecfgn_v890_IEs
{
 TknPres pres;
 NhuRRCConRecfgn_v890_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConRecfgn_v920_IEs nonCriticalExtn;
} NhuRRCConRecfgn_v890_IEs;

typedef struct NhuRRCConRecfgn_r8_IEsdedicatedInfoNASLst
{
 TknU16 noComp;
 NhuDedicatedInfoNAS *member;
}NhuRRCConRecfgn_r8_IEsdedicatedInfoNASLst;

typedef struct NhuRRCConRecfgn_r8_IEs
{
 TknPres pres;
 NhuMeasConfig measConfig;
 NhuMobilityCntrlInfo mobilityCntrlInfo;
 NhuRRCConRecfgn_r8_IEsdedicatedInfoNASLst dedicatedInfoNASLst;
 NhuRadioResourceConfigDedicated radioResourceConfigDedicated;
 NhuSecConfigHO securityConfigHO;
 NhuRRCConRecfgn_v890_IEs nonCriticalExtn;
} NhuRRCConRecfgn_r8_IEs;

typedef struct NhuRRCConRecfgncriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRRCConRecfgn_r8_IEs rrcConRecfgn_r8;
 } val;
} NhuRRCConRecfgncriticalExtnsc1;

typedef struct NhuRRCConRecfgncriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConRecfgncriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConRecfgncriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConRecfgncriticalExtnsc1 c1;
  NhuRRCConRecfgncriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConRecfgncriticalExtns;

typedef struct NhuRRCConRecfgn
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConRecfgncriticalExtns criticalExtns;
} NhuRRCConRecfgn;


typedef enum enumNhuRlsCause
{
 NhuRlsCauseloadBalancingTAUrequiredEnum,
 NhuRlsCauseotherEnum,
 NhuRlsCausecs_FallbackHighPriority_v1020Enum,
 NhuRlsCausespare1Enum
} EnumNhuRlsCause;
typedef TknU32 NhuRlsCause;

typedef struct NhuCarrierFreqLstUTRA_TDD_r10
{
 TknU16 noComp;
 NhuARFCN_ValueUTRA *member;
}NhuCarrierFreqLstUTRA_TDD_r10;

typedef struct NhuRedirectedCarrierInfo
{
 TknU8 choice;
 union {
  NhuARFCN_ValueEUTRA eutra;
  NhuCarrierFreqsGERAN geran;
  NhuARFCN_ValueUTRA utra_FDD;
  NhuARFCN_ValueUTRA utra_TDD;
  NhuCarrierFreqCDMA2000 cdma2000_HRPD;
  NhuCarrierFreqCDMA2000 cdma2000_1xRTT;
  NhuCarrierFreqLstUTRA_TDD_r10 utra_TDD_r10;
 } val;
} NhuRedirectedCarrierInfo;

typedef struct NhuFreqPriorityEUTRA
{
 TknPres pres;
 NhuARFCN_ValueEUTRA carrierFreq;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuFreqPriorityEUTRA;

typedef struct NhuFreqPriorityLstEUTRA
{
 TknU16 noComp;
 NhuFreqPriorityEUTRA *member;
}NhuFreqPriorityLstEUTRA;

typedef struct NhuFreqsPriorityGERAN
{
 TknPres pres;
 NhuCarrierFreqsGERAN carrierFreqs;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuFreqsPriorityGERAN;

typedef struct NhuFreqsPriorityLstGERAN
{
 TknU16 noComp;
 NhuFreqsPriorityGERAN *member;
}NhuFreqsPriorityLstGERAN;

typedef struct NhuFreqPriorityUTRA_FDD
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuFreqPriorityUTRA_FDD;

typedef struct NhuFreqPriorityLstUTRA_FDD
{
 TknU16 noComp;
 NhuFreqPriorityUTRA_FDD *member;
}NhuFreqPriorityLstUTRA_FDD;

typedef struct NhuFreqPriorityUTRA_TDD
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuFreqPriorityUTRA_TDD;

typedef struct NhuFreqPriorityLstUTRA_TDD
{
 TknU16 noComp;
 NhuFreqPriorityUTRA_TDD *member;
}NhuFreqPriorityLstUTRA_TDD;

typedef struct NhuBandClassPriorityHRPD
{
 TknPres pres;
 NhuBandclassCDMA2000 bandClass;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuBandClassPriorityHRPD;

typedef struct NhuBandClassPriorityLstHRPD
{
 TknU16 noComp;
 NhuBandClassPriorityHRPD *member;
}NhuBandClassPriorityLstHRPD;

typedef struct NhuBandClassPriority1XRTT
{
 TknPres pres;
 NhuBandclassCDMA2000 bandClass;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuBandClassPriority1XRTT;

typedef struct NhuBandClassPriorityLst1XRTT
{
 TknU16 noComp;
 NhuBandClassPriority1XRTT *member;
}NhuBandClassPriorityLst1XRTT;


typedef enum enumNhuIdleModeMobilityCntrlInfot320
{
 NhuIdleModeMobilityCntrlInfot320min5Enum,
 NhuIdleModeMobilityCntrlInfot320min10Enum,
 NhuIdleModeMobilityCntrlInfot320min20Enum,
 NhuIdleModeMobilityCntrlInfot320min30Enum,
 NhuIdleModeMobilityCntrlInfot320min60Enum,
 NhuIdleModeMobilityCntrlInfot320min120Enum,
 NhuIdleModeMobilityCntrlInfot320min180Enum,
 NhuIdleModeMobilityCntrlInfot320spare1Enum
} EnumNhuIdleModeMobilityCntrlInfot320;
typedef TknU32 NhuIdleModeMobilityCntrlInfot320;

typedef struct NhuIdleModeMobilityCntrlInfo
{
 TknPres pres;
 NhuFreqPriorityLstEUTRA freqPriorityLstEUTRA;
 NhuFreqsPriorityLstGERAN freqPriorityLstGERAN;
 NhuFreqPriorityLstUTRA_FDD freqPriorityLstUTRA_FDD;
 NhuFreqPriorityLstUTRA_TDD freqPriorityLstUTRA_TDD;
 NhuBandClassPriorityLstHRPD bandClassPriorityLstHRPD;
 NhuBandClassPriorityLst1XRTT bandClassPriorityLst1XRTT;
 NhuIdleModeMobilityCntrlInfot320 t320;
} NhuIdleModeMobilityCntrlInfo;

typedef struct NhuCellInfoGERAN_r9
{
 TknPres pres;
 NhuPhysCellIdGERAN physCellId_r9;
 NhuCarrierFreqGERAN carrierFreq_r9;
 NhuSysInfoLstGERAN systemInfo_r9;
} NhuCellInfoGERAN_r9;

typedef struct NhuCellInfoLstGERAN_r9
{
 TknU16 noComp;
 NhuCellInfoGERAN_r9 *member;
}NhuCellInfoLstGERAN_r9;


typedef TknStrOSXL NhuCellInfoUTRA_FDD_r9utra_BCCH_Cont_r9;
typedef struct NhuCellInfoUTRA_FDD_r9
{
 TknPres pres;
 NhuPhysCellIdUTRA_FDD physCellId_r9;
 NhuCellInfoUTRA_FDD_r9utra_BCCH_Cont_r9 utra_BCCH_Cont_r9;
} NhuCellInfoUTRA_FDD_r9;

typedef struct NhuCellInfoLstUTRA_FDD_r9
{
 TknU16 noComp;
 NhuCellInfoUTRA_FDD_r9 *member;
}NhuCellInfoLstUTRA_FDD_r9;


typedef TknStrOSXL NhuCellInfoUTRA_TDD_r9utra_BCCH_Cont_r9;
typedef struct NhuCellInfoUTRA_TDD_r9
{
 TknPres pres;
 NhuPhysCellIdUTRA_TDD physCellId_r9;
 NhuCellInfoUTRA_TDD_r9utra_BCCH_Cont_r9 utra_BCCH_Cont_r9;
} NhuCellInfoUTRA_TDD_r9;

typedef struct NhuCellInfoLstUTRA_TDD_r9
{
 TknU16 noComp;
 NhuCellInfoUTRA_TDD_r9 *member;
}NhuCellInfoLstUTRA_TDD_r9;


typedef TknStrOSXL NhuCellInfoUTRA_TDD_r10utra_BCCH_Cont_r10;
typedef struct NhuCellInfoUTRA_TDD_r10
{
 TknPres pres;
 NhuPhysCellIdUTRA_TDD physCellId_r10;
 NhuARFCN_ValueUTRA carrierFreq_r10;
 NhuCellInfoUTRA_TDD_r10utra_BCCH_Cont_r10 utra_BCCH_Cont_r10;
} NhuCellInfoUTRA_TDD_r10;

typedef struct NhuCellInfoLstUTRA_TDD_r10
{
 TknU16 noComp;
 NhuCellInfoUTRA_TDD_r10 *member;
}NhuCellInfoLstUTRA_TDD_r10;


typedef TknU32 NhuRRCConRls_v1020_IEsextendedWaitTime_r10;

typedef struct NhuRRCConRls_v1020_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConRls_v1020_IEsnonCriticalExtn;

typedef struct NhuRRCConRls_v1020_IEs
{
 TknPres pres;
 NhuRRCConRls_v1020_IEsextendedWaitTime_r10 extendedWaitTime_r10;
 NhuRRCConRls_v1020_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConRls_v1020_IEs;

typedef struct NhuRRCConRls_v920_IEscellInfoLst_r9
{
 TknU8 choice;
 union {
  NhuCellInfoLstGERAN_r9 geran_r9;
  NhuCellInfoLstUTRA_FDD_r9 utra_FDD_r9;
  NhuCellInfoLstUTRA_TDD_r9 utra_TDD_r9;
  NhuCellInfoLstUTRA_TDD_r10 utra_TDD_r10;
 } val;
} NhuRRCConRls_v920_IEscellInfoLst_r9;

typedef struct NhuRRCConRls_v920_IEs
{
 TknPres pres;
 NhuRRCConRls_v920_IEscellInfoLst_r9 cellInfoLst_r9;
 NhuRRCConRls_v1020_IEs nonCriticalExtn;
} NhuRRCConRls_v920_IEs;


typedef TknStrOSXL NhuRRCConRls_v890_IEslateNonCriticalExtn;
typedef struct NhuRRCConRls_v890_IEs
{
 TknPres pres;
 NhuRRCConRls_v890_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConRls_v920_IEs nonCriticalExtn;
} NhuRRCConRls_v890_IEs;

typedef struct NhuRRCConRls_r8_IEs
{
 TknPres pres;
 NhuRlsCause releaseCause;
 NhuRedirectedCarrierInfo redirectedCarrierInfo;
 NhuIdleModeMobilityCntrlInfo idleModeMobilityCntrlInfo;
 NhuRRCConRls_v890_IEs nonCriticalExtn;
} NhuRRCConRls_r8_IEs;

typedef struct NhuRRCConRlscriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRRCConRls_r8_IEs rrcConRls_r8;
 } val;
} NhuRRCConRlscriticalExtnsc1;

typedef struct NhuRRCConRlscriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConRlscriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConRlscriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConRlscriticalExtnsc1 c1;
  NhuRRCConRlscriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConRlscriticalExtns;

typedef struct NhuRRCConRls
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConRlscriticalExtns criticalExtns;
} NhuRRCConRls;

typedef struct NhuSecConfigSMC
{
 TknPres pres;
 NhuSecAlgorithmConfig securityAlgorithmConfig;
} NhuSecConfigSMC;


typedef TknStrOSXL NhuSecModeCmd_v8a0_IEslateNonCriticalExtn;
typedef struct NhuSecModeCmd_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSecModeCmd_v8a0_IEsnonCriticalExtn;

typedef struct NhuSecModeCmd_v8a0_IEs
{
 TknPres pres;
 NhuSecModeCmd_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuSecModeCmd_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSecModeCmd_v8a0_IEs;

typedef struct NhuSecModeCmd_r8_IEs
{
 TknPres pres;
 NhuSecConfigSMC securityConfigSMC;
 NhuSecModeCmd_v8a0_IEs nonCriticalExtn;
} NhuSecModeCmd_r8_IEs;

typedef struct NhuSecModeCmdcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuSecModeCmd_r8_IEs securityModeCmd_r8;
 } val;
} NhuSecModeCmdcriticalExtnsc1;

typedef struct NhuSecModeCmdcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuSecModeCmdcriticalExtnscriticalExtnsFuture;

typedef struct NhuSecModeCmdcriticalExtns
{
 TknU8 choice;
 union {
  NhuSecModeCmdcriticalExtnsc1 c1;
  NhuSecModeCmdcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuSecModeCmdcriticalExtns;

typedef struct NhuSecModeCmd
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuSecModeCmdcriticalExtns criticalExtns;
} NhuSecModeCmd;


typedef enum enumNhuRAT_Typ
{
 NhuRAT_TypeutraEnum,
 NhuRAT_TyputraEnum,
 NhuRAT_Typgeran_csEnum,
 NhuRAT_Typgeran_psEnum,
 NhuRAT_Typcdma2000_1XRTTEnum,
 NhuRAT_Typspare3Enum,
 NhuRAT_Typspare2Enum,
 NhuRAT_Typspare1Enum
} EnumNhuRAT_Typ;
typedef TknU32 NhuRAT_Typ;

typedef struct NhuUE_CapRqst
{
 TknU16 noComp;
 NhuRAT_Typ *member;
}NhuUE_CapRqst;

typedef struct NhuUECapEnquiry_v1180_IEsrequestedFrequencyBands_r11
{
 TknU16 noComp;
 NhuFreqBandIndicator_r11 *member;
}NhuUECapEnquiry_v1180_IEsrequestedFrequencyBands_r11;

typedef struct NhuUECapEnquiry_v1180_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUECapEnquiry_v1180_IEsnonCriticalExtn;

typedef struct NhuUECapEnquiry_v1180_IEs
{
 TknPres pres;
 NhuUECapEnquiry_v1180_IEsrequestedFrequencyBands_r11 requestedFrequencyBands_r11;
 NhuUECapEnquiry_v1180_IEsnonCriticalExtn nonCriticalExtn;
} NhuUECapEnquiry_v1180_IEs;


typedef TknStrOSXL NhuUECapEnquiry_v8a0_IEslateNonCriticalExtn;
typedef struct NhuUECapEnquiry_v8a0_IEs
{
 TknPres pres;
 NhuUECapEnquiry_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUECapEnquiry_v1180_IEs nonCriticalExtn;
} NhuUECapEnquiry_v8a0_IEs;

typedef struct NhuUECapEnquiry_r8_IEs
{
 TknPres pres;
 NhuUE_CapRqst ue_CapRqst;
 NhuUECapEnquiry_v8a0_IEs nonCriticalExtn;
} NhuUECapEnquiry_r8_IEs;

typedef struct NhuUECapEnquirycriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuUECapEnquiry_r8_IEs ueCapEnquiry_r8;
 } val;
} NhuUECapEnquirycriticalExtnsc1;

typedef struct NhuUECapEnquirycriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuUECapEnquirycriticalExtnscriticalExtnsFuture;

typedef struct NhuUECapEnquirycriticalExtns
{
 TknU8 choice;
 union {
  NhuUECapEnquirycriticalExtnsc1 c1;
  NhuUECapEnquirycriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuUECapEnquirycriticalExtns;

typedef struct NhuUECapEnquiry
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuUECapEnquirycriticalExtns criticalExtns;
} NhuUECapEnquiry;


typedef TknU32 NhuDRB_CountMSB_InfocountMSB_Ulnk;


typedef TknU32 NhuDRB_CountMSB_InfocountMSB_Dlnk;

typedef struct NhuDRB_CountMSB_Info
{
 TknPres pres;
 NhuDRB_Identity drb_Identity;
 NhuDRB_CountMSB_InfocountMSB_Ulnk countMSB_Ulnk;
 NhuDRB_CountMSB_InfocountMSB_Dlnk countMSB_Dlnk;
} NhuDRB_CountMSB_Info;

typedef struct NhuDRB_CountMSB_InfoLst
{
 TknU16 noComp;
 NhuDRB_CountMSB_Info *member;
}NhuDRB_CountMSB_InfoLst;


typedef TknStrOSXL NhuCounterCheck_v8a0_IEslateNonCriticalExtn;
typedef struct NhuCounterCheck_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuCounterCheck_v8a0_IEsnonCriticalExtn;

typedef struct NhuCounterCheck_v8a0_IEs
{
 TknPres pres;
 NhuCounterCheck_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuCounterCheck_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuCounterCheck_v8a0_IEs;

typedef struct NhuCounterCheck_r8_IEs
{
 TknPres pres;
 NhuDRB_CountMSB_InfoLst drb_CountMSB_InfoLst;
 NhuCounterCheck_v8a0_IEs nonCriticalExtn;
} NhuCounterCheck_r8_IEs;

typedef struct NhuCounterCheckcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuCounterCheck_r8_IEs counterCheck_r8;
 } val;
} NhuCounterCheckcriticalExtnsc1;

typedef struct NhuCounterCheckcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuCounterCheckcriticalExtnscriticalExtnsFuture;

typedef struct NhuCounterCheckcriticalExtns
{
 TknU8 choice;
 union {
  NhuCounterCheckcriticalExtnsc1 c1;
  NhuCounterCheckcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuCounterCheckcriticalExtns;

typedef struct NhuCounterCheck
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuCounterCheckcriticalExtns criticalExtns;
} NhuCounterCheck;


typedef enum enumNhuUEInfoRqst_v1130_IEsconnEstFailReportReq_r11
{
 NhuUEInfoRqst_v1130_IEsconnEstFailReportReq_r11trueEnum
} EnumNhuUEInfoRqst_v1130_IEsconnEstFailReportReq_r11;
typedef TknU32 NhuUEInfoRqst_v1130_IEsconnEstFailReportReq_r11;

typedef struct NhuUEInfoRqst_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUEInfoRqst_v1130_IEsnonCriticalExtn;

typedef struct NhuUEInfoRqst_v1130_IEs
{
 TknPres pres;
 NhuUEInfoRqst_v1130_IEsconnEstFailReportReq_r11 connEstFailReportReq_r11;
 NhuUEInfoRqst_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuUEInfoRqst_v1130_IEs;


typedef enum enumNhuUEInfoRqst_v1020_IEslogMeasReportReq_r10
{
 NhuUEInfoRqst_v1020_IEslogMeasReportReq_r10trueEnum
} EnumNhuUEInfoRqst_v1020_IEslogMeasReportReq_r10;
typedef TknU32 NhuUEInfoRqst_v1020_IEslogMeasReportReq_r10;

typedef struct NhuUEInfoRqst_v1020_IEs
{
 TknPres pres;
 NhuUEInfoRqst_v1020_IEslogMeasReportReq_r10 logMeasReportReq_r10;
 NhuUEInfoRqst_v1130_IEs nonCriticalExtn;
} NhuUEInfoRqst_v1020_IEs;


typedef TknStrOSXL NhuUEInfoRqst_v930_IEslateNonCriticalExtn;
typedef struct NhuUEInfoRqst_v930_IEs
{
 TknPres pres;
 NhuUEInfoRqst_v930_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUEInfoRqst_v1020_IEs nonCriticalExtn;
} NhuUEInfoRqst_v930_IEs;


typedef TknU8 NhuUEInfoRqst_r9_IEsrach_ReportReq_r9;


typedef TknU8 NhuUEInfoRqst_r9_IEsrlf_ReportReq_r9;

typedef struct NhuUEInfoRqst_r9_IEs
{
 TknPres pres;
 NhuUEInfoRqst_r9_IEsrach_ReportReq_r9 rach_ReportReq_r9;
 NhuUEInfoRqst_r9_IEsrlf_ReportReq_r9 rlf_ReportReq_r9;
 NhuUEInfoRqst_v930_IEs nonCriticalExtn;
} NhuUEInfoRqst_r9_IEs;

typedef struct NhuUEInfoRqst_r9criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuUEInfoRqst_r9_IEs ueInfoRqst_r9;
 } val;
} NhuUEInfoRqst_r9criticalExtnsc1;

typedef struct NhuUEInfoRqst_r9criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuUEInfoRqst_r9criticalExtnscriticalExtnsFuture;

typedef struct NhuUEInfoRqst_r9criticalExtns
{
 TknU8 choice;
 union {
  NhuUEInfoRqst_r9criticalExtnsc1 c1;
  NhuUEInfoRqst_r9criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuUEInfoRqst_r9criticalExtns;

typedef struct NhuUEInfoRqst_r9
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuUEInfoRqst_r9criticalExtns criticalExtns;
} NhuUEInfoRqst_r9;


typedef TknStrOSXL NhuTraceReference_r10traceId_r10;
typedef struct NhuTraceReference_r10
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity_r10;
 NhuTraceReference_r10traceId_r10 traceId_r10;
} NhuTraceReference_r10;


typedef TknStrBSXL NhuAbsoluteTimeInfo_r10;
typedef struct NhuCellGlobalIdEUTRA
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuCellIdentity cellIdentity;
} NhuCellGlobalIdEUTRA;

typedef struct NhuCellGlobalIdLst_r10
{
 TknU16 noComp;
 NhuCellGlobalIdEUTRA *member;
}NhuCellGlobalIdLst_r10;

typedef struct NhuTrackingAreaCodeLst_r10
{
 TknU16 noComp;
 NhuTrackingAreaCode *member;
}NhuTrackingAreaCodeLst_r10;

typedef struct NhuAreaCfg_r10
{
 TknU8 choice;
 union {
  NhuCellGlobalIdLst_r10 cellGlobalIdLst_r10;
  NhuTrackingAreaCodeLst_r10 trackingAreaCodeLst_r10;
 } val;
} NhuAreaCfg_r10;


typedef enum enumNhuLoggingDuration_r10
{
 NhuLoggingDuration_r10min10Enum,
 NhuLoggingDuration_r10min20Enum,
 NhuLoggingDuration_r10min40Enum,
 NhuLoggingDuration_r10min60Enum,
 NhuLoggingDuration_r10min90Enum,
 NhuLoggingDuration_r10min120Enum,
 NhuLoggingDuration_r10spare2Enum,
 NhuLoggingDuration_r10spare1Enum
} EnumNhuLoggingDuration_r10;
typedef TknU32 NhuLoggingDuration_r10;


typedef enum enumNhuLoggingInterval_r10
{
 NhuLoggingInterval_r10ms1280Enum,
 NhuLoggingInterval_r10ms2560Enum,
 NhuLoggingInterval_r10ms5120Enum,
 NhuLoggingInterval_r10ms10240Enum,
 NhuLoggingInterval_r10ms20480Enum,
 NhuLoggingInterval_r10ms30720Enum,
 NhuLoggingInterval_r10ms40960Enum,
 NhuLoggingInterval_r10ms61440Enum
} EnumNhuLoggingInterval_r10;
typedef TknU32 NhuLoggingInterval_r10;

typedef struct NhuPLMN_IdentityLst3_r11
{
 TknU16 noComp;
 NhuPLMN_Identity *member;
}NhuPLMN_IdentityLst3_r11;

typedef struct NhuTrackingAreaCodeLst_v1130plmn_Identity_perTAC_Lst_r11
{
 TknU16 noComp;
 NhuPLMN_Identity *member;
}NhuTrackingAreaCodeLst_v1130plmn_Identity_perTAC_Lst_r11;

typedef struct NhuTrackingAreaCodeLst_v1130
{
 TknPres pres;
 NhuTrackingAreaCodeLst_v1130plmn_Identity_perTAC_Lst_r11 plmn_Identity_perTAC_Lst_r11;
} NhuTrackingAreaCodeLst_v1130;

typedef struct NhuAreaCfg_v1130
{
 TknPres pres;
 NhuTrackingAreaCodeLst_v1130 trackingAreaCodeLst_v1130;
} NhuAreaCfg_v1130;

typedef struct NhuLoggedMeasurementCfg_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuLoggedMeasurementCfg_v1130_IEsnonCriticalExtn;

typedef struct NhuLoggedMeasurementCfg_v1130_IEs
{
 TknPres pres;
 NhuPLMN_IdentityLst3_r11 plmn_IdentityLst_r11;
 NhuAreaCfg_v1130 areaCfg_v1130;
 NhuLoggedMeasurementCfg_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuLoggedMeasurementCfg_v1130_IEs;


typedef TknStrOSXL NhuLoggedMeasurementCfg_v1080_IEslateNonCriticalExtn_r10;
typedef struct NhuLoggedMeasurementCfg_v1080_IEs
{
 TknPres pres;
 NhuLoggedMeasurementCfg_v1080_IEslateNonCriticalExtn_r10 lateNonCriticalExtn_r10;
 NhuLoggedMeasurementCfg_v1130_IEs nonCriticalExtn;
} NhuLoggedMeasurementCfg_v1080_IEs;


typedef TknStrOSXL NhuLoggedMeasurementCfg_r10_IEstraceRecordingSessionRef_r10;

typedef TknStrOSXL NhuLoggedMeasurementCfg_r10_IEstce_Id_r10;
typedef struct NhuLoggedMeasurementCfg_r10_IEs
{
 TknPres pres;
 NhuTraceReference_r10 traceReference_r10;
 NhuLoggedMeasurementCfg_r10_IEstraceRecordingSessionRef_r10 traceRecordingSessionRef_r10;
 NhuLoggedMeasurementCfg_r10_IEstce_Id_r10 tce_Id_r10;
 NhuAbsoluteTimeInfo_r10 absoluteTimeInfo_r10;
 NhuAreaCfg_r10 areaCfg_r10;
 NhuLoggingDuration_r10 loggingDuration_r10;
 NhuLoggingInterval_r10 loggingInterval_r10;
 NhuLoggedMeasurementCfg_v1080_IEs nonCriticalExtn;
} NhuLoggedMeasurementCfg_r10_IEs;

typedef struct NhuLoggedMeasurementCfg_r10criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuLoggedMeasurementCfg_r10_IEs loggedMeasurementCfg_r10;
 } val;
} NhuLoggedMeasurementCfg_r10criticalExtnsc1;

typedef struct NhuLoggedMeasurementCfg_r10criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuLoggedMeasurementCfg_r10criticalExtnscriticalExtnsFuture;

typedef struct NhuLoggedMeasurementCfg_r10criticalExtns
{
 TknU8 choice;
 union {
  NhuLoggedMeasurementCfg_r10criticalExtnsc1 c1;
  NhuLoggedMeasurementCfg_r10criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuLoggedMeasurementCfg_r10criticalExtns;

typedef struct NhuLoggedMeasurementCfg_r10
{
 TknPres pres;
 NhuLoggedMeasurementCfg_r10criticalExtns criticalExtns;
} NhuLoggedMeasurementCfg_r10;


typedef TknStrOSXL NhuRN_SysInfo_r10systemInfoBlockTyp1_r10;
typedef struct NhuRN_SysInfo_r10
{
 TknPres pres;
 NhuRN_SysInfo_r10systemInfoBlockTyp1_r10 systemInfoBlockTyp1_r10;
 NhuSysInfoBlockTyp2 systemInfoBlockTyp2_r10;
} NhuRN_SysInfo_r10;


typedef TknStrBSXL NhuRN_SubfrmConfig_r10subframeConfigPattern_r10subframeConfigPatternFDD_r10;

typedef TknU32 NhuRN_SubfrmConfig_r10subframeConfigPattern_r10subframeConfigPatternTDD_r10;

typedef struct NhuRN_SubfrmConfig_r10subframeConfigPattern_r10
{
 TknU8 choice;
 union {
  NhuRN_SubfrmConfig_r10subframeConfigPattern_r10subframeConfigPatternFDD_r10 subframeConfigPatternFDD_r10;
  NhuRN_SubfrmConfig_r10subframeConfigPattern_r10subframeConfigPatternTDD_r10 subframeConfigPatternTDD_r10;
 } val;
} NhuRN_SubfrmConfig_r10subframeConfigPattern_r10;


typedef enum enumNhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10
{
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10type0Enum,
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10type1Enum,
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10type2LocalizedEnum,
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10type2DistributedEnum,
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10spare4Enum,
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10spare3Enum,
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10spare2Enum,
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10spare1Enum
} EnumNhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10;
typedef TknU32 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10;


typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb6_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb15_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb25_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb50_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb75_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb100_r10;
typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10
{
 TknU8 choice;
 union {
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb6_r10 nrb6_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb15_r10 nrb15_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb25_r10 nrb25_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb50_r10 nrb50_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb75_r10 nrb75_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb100_r10 nrb100_r10;
 } val;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10;


typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb6_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb15_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb25_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb50_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb75_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb100_r10;
typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10
{
 TknU8 choice;
 union {
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb6_r10 nrb6_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb15_r10 nrb15_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb25_r10 nrb25_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb50_r10 nrb50_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb75_r10 nrb75_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb100_r10 nrb100_r10;
 } val;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10;

typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10
{
 TknU8 choice;
 union {
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10 type01_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10 type2_r10;
 } val;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10;


typedef enum enumNhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10interleaving_r10
{
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10interleaving_r10crsEnum
} EnumNhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10interleaving_r10;
typedef TknU32 NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10interleaving_r10;


typedef enum enumNhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10noInterleaving_r10
{
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10noInterleaving_r10crsEnum,
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10noInterleaving_r10dmrsEnum
} EnumNhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10noInterleaving_r10;
typedef TknU32 NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10noInterleaving_r10;

typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10
{
 TknU8 choice;
 union {
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10interleaving_r10 interleaving_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10noInterleaving_r10 noInterleaving_r10;
 } val;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10;


typedef TknU32 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pdsch_Start_r10;

typedef TknU32 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddchannelSelectionMultiplexingBundlingn1PUCCH_AN_Lst_r10Member;

typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddchannelSelectionMultiplexingBundlingn1PUCCH_AN_Lst_r10
{
 TknU16 noComp;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddchannelSelectionMultiplexingBundlingn1PUCCH_AN_Lst_r10Member *member;
}NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddchannelSelectionMultiplexingBundlingn1PUCCH_AN_Lst_r10;

typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddchannelSelectionMultiplexingBundling
{
 TknPres pres;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddchannelSelectionMultiplexingBundlingn1PUCCH_AN_Lst_r10 n1PUCCH_AN_Lst_r10;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddchannelSelectionMultiplexingBundling;


typedef TknU32 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddfallbackForFormat3n1PUCCH_AN_P0_r10;


typedef TknU32 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddfallbackForFormat3n1PUCCH_AN_P1_r10;

typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddfallbackForFormat3
{
 TknPres pres;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddfallbackForFormat3n1PUCCH_AN_P0_r10 n1PUCCH_AN_P0_r10;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddfallbackForFormat3n1PUCCH_AN_P1_r10 n1PUCCH_AN_P1_r10;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddfallbackForFormat3;

typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tdd
{
 TknU8 choice;
 union {
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddchannelSelectionMultiplexingBundling channelSelectionMultiplexingBundling;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddfallbackForFormat3 fallbackForFormat3;
 } val;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tdd;


typedef TknU32 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10fddn1PUCCH_AN_P0_r10;


typedef TknU32 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10fddn1PUCCH_AN_P1_r10;

typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10fdd
{
 TknPres pres;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10fddn1PUCCH_AN_P0_r10 n1PUCCH_AN_P0_r10;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10fddn1PUCCH_AN_P1_r10 n1PUCCH_AN_P1_r10;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10fdd;

typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10
{
 TknU8 choice;
 union {
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tdd tdd;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10fdd fdd;
 } val;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10;

typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10
{
 TknPres pres;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10 resourceAllocnTyp_r10;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10 resourceBlockAssignment_r10;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10 demodulationRS_r10;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pdsch_Start_r10 pdsch_Start_r10;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10 pucch_Config_r10;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10;

typedef struct NhuRN_SubfrmConfig_r10
{
 TknPres pres;
 NhuRN_SubfrmConfig_r10subframeConfigPattern_r10 subframeConfigPattern_r10;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10 rpdcch_Config_r10;
} NhuRN_SubfrmConfig_r10;


typedef TknStrOSXL NhuRNRecfgn_r10_IEslateNonCriticalExtn;
typedef struct NhuRNRecfgn_r10_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRNRecfgn_r10_IEsnonCriticalExtn;

typedef struct NhuRNRecfgn_r10_IEs
{
 TknPres pres;
 NhuRN_SysInfo_r10 rn_SysInfo_r10;
 NhuRN_SubfrmConfig_r10 rn_SubfrmConfig_r10;
 NhuRNRecfgn_r10_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRNRecfgn_r10_IEsnonCriticalExtn nonCriticalExtn;
} NhuRNRecfgn_r10_IEs;

typedef struct NhuRNRecfgn_r10criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRNRecfgn_r10_IEs rnRecfgn_r10;
 } val;
} NhuRNRecfgn_r10criticalExtnsc1;

typedef struct NhuRNRecfgn_r10criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRNRecfgn_r10criticalExtnscriticalExtnsFuture;

typedef struct NhuRNRecfgn_r10criticalExtns
{
 TknU8 choice;
 union {
  NhuRNRecfgn_r10criticalExtnsc1 c1;
  NhuRNRecfgn_r10criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRNRecfgn_r10criticalExtns;

typedef struct NhuRNRecfgn_r10
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRNRecfgn_r10criticalExtns criticalExtns;
} NhuRNRecfgn_r10;

typedef struct NhuDL_DCCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuCSFBParamsRspCDMA2000 csfbParamsRspCDMA2000;
  NhuDLInfoTfr dlInfoTfr;
  NhuHovrFromEUTRAPrepRqst handoverFromEUTRAPrepRqst;
  NhuMobilityFromEUTRACmd mobilityFromEUTRACmd;
  NhuRRCConRecfgn rrcConRecfgn;
  NhuRRCConRls rrcConRls;
  NhuSecModeCmd securityModeCmd;
  NhuUECapEnquiry ueCapEnquiry;
  NhuCounterCheck counterCheck;
  NhuUEInfoRqst_r9 ueInfoRqst_r9;
  NhuLoggedMeasurementCfg_r10 loggedMeasurementCfg_r10;
  NhuRNRecfgn_r10 rnRecfgn_r10;
 } val;
} NhuDL_DCCH_MsgTypc1;

typedef struct NhuDL_DCCH_MsgTypmessageClassExtn
{
 TknPres pres;
} NhuDL_DCCH_MsgTypmessageClassExtn;

typedef struct NhuDL_DCCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuDL_DCCH_MsgTypc1 c1;
  NhuDL_DCCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuDL_DCCH_MsgTyp;

typedef struct NhuDL_DCCH_Msg
{
 TknPres pres;
 NhuDL_DCCH_MsgTyp message;
} NhuDL_DCCH_Msg;


typedef TknStrBSXL NhuShortMAC_I;
typedef struct NhuReestabUE_Identity
{
 TknPres pres;
 NhuC_RNTI c_RNTI;
 NhuPhysCellId physCellId;
 NhuShortMAC_I shortMAC_I;
} NhuReestabUE_Identity;


typedef enum enumNhuReestbCause
{
 NhuReestbCausereconfigurationFailEnum,
 NhuReestbCausehandoverFailEnum,
 NhuReestbCauseotherFailEnum,
 NhuReestbCausespare1Enum
} EnumNhuReestbCause;
typedef TknU32 NhuReestbCause;


typedef TknStrBSXL NhuRRCConReestbRqst_r8_IEsspare;
typedef struct NhuRRCConReestbRqst_r8_IEs
{
 TknPres pres;
 NhuReestabUE_Identity ue_Identity;
 NhuReestbCause reestablishmentCause;
 NhuRRCConReestbRqst_r8_IEsspare spare;
} NhuRRCConReestbRqst_r8_IEs;

typedef struct NhuRRCConReestbRqstcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConReestbRqstcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConReestbRqstcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConReestbRqst_r8_IEs rrcConReestbRqst_r8;
  NhuRRCConReestbRqstcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConReestbRqstcriticalExtns;

typedef struct NhuRRCConReestbRqst
{
 TknPres pres;
 NhuRRCConReestbRqstcriticalExtns criticalExtns;
} NhuRRCConReestbRqst;


typedef TknStrBSXL NhuInitUE_IdentityrandomValue;
typedef struct NhuInitUE_Identity
{
 TknU8 choice;
 union {
  NhuS_TMSI s_TMSI;
  NhuInitUE_IdentityrandomValue randomValue;
 } val;
} NhuInitUE_Identity;


typedef enum enumNhuEstablishmentCause
{
 NhuEstablishmentCauseemergencyEnum,
 NhuEstablishmentCausehighPriorityAccessEnum,
 NhuEstablishmentCausemt_AccessEnum,
 NhuEstablishmentCausemo_SignallingEnum,
 NhuEstablishmentCausemo_DataEnum,
 NhuEstablishmentCausedelayTolerantAccess_v1020Enum,
 NhuEstablishmentCausespare2Enum,
 NhuEstablishmentCausespare1Enum
} EnumNhuEstablishmentCause;
typedef TknU32 NhuEstablishmentCause;


typedef TknStrBSXL NhuRRCConRqst_r8_IEsspare;
typedef struct NhuRRCConRqst_r8_IEs
{
 TknPres pres;
 NhuInitUE_Identity ue_Identity;
 NhuEstablishmentCause establishmentCause;
 NhuRRCConRqst_r8_IEsspare spare;
} NhuRRCConRqst_r8_IEs;

typedef struct NhuRRCConRqstcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConRqstcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConRqstcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConRqst_r8_IEs rrcConRqst_r8;
  NhuRRCConRqstcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConRqstcriticalExtns;

typedef struct NhuRRCConRqst
{
 TknPres pres;
 NhuRRCConRqstcriticalExtns criticalExtns;
} NhuRRCConRqst;

typedef struct NhuUL_CCCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuRRCConReestbRqst rrcConReestbRqst;
  NhuRRCConRqst rrcConRqst;
 } val;
} NhuUL_CCCH_MsgTypc1;

typedef struct NhuUL_CCCH_MsgTypmessageClassExtn
{
 TknPres pres;
} NhuUL_CCCH_MsgTypmessageClassExtn;

typedef struct NhuUL_CCCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuUL_CCCH_MsgTypc1 c1;
  NhuUL_CCCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuUL_CCCH_MsgTyp;

typedef struct NhuUL_CCCH_Msg
{
 TknPres pres;
 NhuUL_CCCH_MsgTyp message;
} NhuUL_CCCH_Msg;


typedef TknStrOSXL NhuCSFBParamsRqstCDMA2000_v8a0_IEslateNonCriticalExtn;
typedef struct NhuCSFBParamsRqstCDMA2000_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuCSFBParamsRqstCDMA2000_v8a0_IEsnonCriticalExtn;

typedef struct NhuCSFBParamsRqstCDMA2000_v8a0_IEs
{
 TknPres pres;
 NhuCSFBParamsRqstCDMA2000_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuCSFBParamsRqstCDMA2000_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuCSFBParamsRqstCDMA2000_v8a0_IEs;

typedef struct NhuCSFBParamsRqstCDMA2000_r8_IEs
{
 TknPres pres;
 NhuCSFBParamsRqstCDMA2000_v8a0_IEs nonCriticalExtn;
} NhuCSFBParamsRqstCDMA2000_r8_IEs;

typedef struct NhuCSFBParamsRqstCDMA2000criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuCSFBParamsRqstCDMA2000criticalExtnscriticalExtnsFuture;

typedef struct NhuCSFBParamsRqstCDMA2000criticalExtns
{
 TknU8 choice;
 union {
  NhuCSFBParamsRqstCDMA2000_r8_IEs csfbParamsRqstCDMA2000_r8;
  NhuCSFBParamsRqstCDMA2000criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuCSFBParamsRqstCDMA2000criticalExtns;

typedef struct NhuCSFBParamsRqstCDMA2000
{
 TknPres pres;
 NhuCSFBParamsRqstCDMA2000criticalExtns criticalExtns;
} NhuCSFBParamsRqstCDMA2000;

typedef struct NhuPLMN_IdentityLst2
{
 TknU16 noComp;
 NhuPLMN_Identity *member;
}NhuPLMN_IdentityLst2;


typedef enum enumNhuAdditionalSI_Info_r9csg_MemberStatus_r9
{
 NhuAdditionalSI_Info_r9csg_MemberStatus_r9memberEnum
} EnumNhuAdditionalSI_Info_r9csg_MemberStatus_r9;
typedef TknU32 NhuAdditionalSI_Info_r9csg_MemberStatus_r9;

typedef struct NhuAdditionalSI_Info_r9
{
 TknPres pres;
 NhuAdditionalSI_Info_r9csg_MemberStatus_r9 csg_MemberStatus_r9;
 NhuCSG_Identity csg_Identity_r9;
} NhuAdditionalSI_Info_r9;

typedef struct NhuMeasResultEUTRAcgi_Info
{
 TknPres pres;
 NhuCellGlobalIdEUTRA cellGlobalId;
 NhuTrackingAreaCode trackingAreaCode;
 NhuPLMN_IdentityLst2 plmn_IdentityLst;
} NhuMeasResultEUTRAcgi_Info;

typedef struct NhuMeasResultEUTRAmeasResultextaddgrp_1
{
 TknPres pres;
 NhuAdditionalSI_Info_r9 additionalSI_Info_r9;
} NhuMeasResultEUTRAmeasResultextaddgrp_1;

typedef struct NhuMeasResultEUTRAmeasResult
{
 TknPres pres;
 NhuRSRP_Range rsrpResult;
 NhuRSRQ_Range rsrqResult;
 NhuMeasResultEUTRAmeasResultextaddgrp_1 extaddgrp_1;
} NhuMeasResultEUTRAmeasResult;

typedef struct NhuMeasResultEUTRA
{
 TknPres pres;
 NhuPhysCellId physCellId;
 NhuMeasResultEUTRAcgi_Info cgi_Info;
 NhuMeasResultEUTRAmeasResult measResult;
} NhuMeasResultEUTRA;

typedef struct NhuMeasResultLstEUTRA
{
 TknU16 noComp;
 NhuMeasResultEUTRA *member;
}NhuMeasResultLstEUTRA;


typedef TknStrBSXL NhuCellGlobalIdUTRAcellIdentity;
typedef struct NhuCellGlobalIdUTRA
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuCellGlobalIdUTRAcellIdentity cellIdentity;
} NhuCellGlobalIdUTRA;

typedef struct NhuMeasResultUTRAphysCellId
{
 TknU8 choice;
 union {
  NhuPhysCellIdUTRA_FDD fdd;
  NhuPhysCellIdUTRA_TDD tdd;
 } val;
} NhuMeasResultUTRAphysCellId;


typedef TknStrBSXL NhuMeasResultUTRAcgi_InfolocationAreaCode;

typedef TknStrBSXL NhuMeasResultUTRAcgi_InforoutingAreaCode;
typedef struct NhuMeasResultUTRAcgi_Info
{
 TknPres pres;
 NhuCellGlobalIdUTRA cellGlobalId;
 NhuMeasResultUTRAcgi_InfolocationAreaCode locationAreaCode;
 NhuMeasResultUTRAcgi_InforoutingAreaCode routingAreaCode;
 NhuPLMN_IdentityLst2 plmn_IdentityLst;
} NhuMeasResultUTRAcgi_Info;


typedef TknS32 NhuMeasResultUTRAmeasResultutra_RSCP;


typedef TknU32 NhuMeasResultUTRAmeasResultutra_EcN0;

typedef struct NhuMeasResultUTRAmeasResultextaddgrp_1
{
 TknPres pres;
 NhuAdditionalSI_Info_r9 additionalSI_Info_r9;
} NhuMeasResultUTRAmeasResultextaddgrp_1;

typedef struct NhuMeasResultUTRAmeasResult
{
 TknPres pres;
 NhuMeasResultUTRAmeasResultutra_RSCP utra_RSCP;
 NhuMeasResultUTRAmeasResultutra_EcN0 utra_EcN0;
 NhuMeasResultUTRAmeasResultextaddgrp_1 extaddgrp_1;
} NhuMeasResultUTRAmeasResult;

typedef struct NhuMeasResultUTRA
{
 TknPres pres;
 NhuMeasResultUTRAphysCellId physCellId;
 NhuMeasResultUTRAcgi_Info cgi_Info;
 NhuMeasResultUTRAmeasResult measResult;
} NhuMeasResultUTRA;

typedef struct NhuMeasResultLstUTRA
{
 TknU16 noComp;
 NhuMeasResultUTRA *member;
}NhuMeasResultLstUTRA;


typedef TknStrBSXL NhuCellGlobalIdGERANlocationAreaCode;

typedef TknStrBSXL NhuCellGlobalIdGERANcellIdentity;
typedef struct NhuCellGlobalIdGERAN
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuCellGlobalIdGERANlocationAreaCode locationAreaCode;
 NhuCellGlobalIdGERANcellIdentity cellIdentity;
} NhuCellGlobalIdGERAN;


typedef TknStrBSXL NhuMeasResultGERANcgi_InforoutingAreaCode;
typedef struct NhuMeasResultGERANcgi_Info
{
 TknPres pres;
 NhuCellGlobalIdGERAN cellGlobalId;
 NhuMeasResultGERANcgi_InforoutingAreaCode routingAreaCode;
} NhuMeasResultGERANcgi_Info;


typedef TknU32 NhuMeasResultGERANmeasResultrssi;

typedef struct NhuMeasResultGERANmeasResult
{
 TknPres pres;
 NhuMeasResultGERANmeasResultrssi rssi;
} NhuMeasResultGERANmeasResult;

typedef struct NhuMeasResultGERAN
{
 TknPres pres;
 NhuCarrierFreqGERAN carrierFreq;
 NhuPhysCellIdGERAN physCellId;
 NhuMeasResultGERANcgi_Info cgi_Info;
 NhuMeasResultGERANmeasResult measResult;
} NhuMeasResultGERAN;

typedef struct NhuMeasResultLstGERAN
{
 TknU16 noComp;
 NhuMeasResultGERAN *member;
}NhuMeasResultLstGERAN;


typedef TknStrBSXL NhuCellGlobalIdCDMA2000cellGlobalId1XRTT;

typedef TknStrBSXL NhuCellGlobalIdCDMA2000cellGlobalIdHRPD;
typedef struct NhuCellGlobalIdCDMA2000
{
 TknU8 choice;
 union {
  NhuCellGlobalIdCDMA2000cellGlobalId1XRTT cellGlobalId1XRTT;
  NhuCellGlobalIdCDMA2000cellGlobalIdHRPD cellGlobalIdHRPD;
 } val;
} NhuCellGlobalIdCDMA2000;


typedef TknU32 NhuMeasResultCDMA2000measResultpilotPnPhase;


typedef TknU32 NhuMeasResultCDMA2000measResultpilotStrength;

typedef struct NhuMeasResultCDMA2000measResult
{
 TknPres pres;
 NhuMeasResultCDMA2000measResultpilotPnPhase pilotPnPhase;
 NhuMeasResultCDMA2000measResultpilotStrength pilotStrength;
} NhuMeasResultCDMA2000measResult;

typedef struct NhuMeasResultCDMA2000
{
 TknPres pres;
 NhuPhysCellIdCDMA2000 physCellId;
 NhuCellGlobalIdCDMA2000 cgi_Info;
 NhuMeasResultCDMA2000measResult measResult;
} NhuMeasResultCDMA2000;

typedef struct NhuMeasResultLstCDMA2000
{
 TknU16 noComp;
 NhuMeasResultCDMA2000 *member;
}NhuMeasResultLstCDMA2000;


typedef TknU8 NhuMeasResultsCDMA2000preRegistrationStatusHRPD;

typedef struct NhuMeasResultsCDMA2000
{
 TknPres pres;
 NhuMeasResultsCDMA2000preRegistrationStatusHRPD preRegistrationStatusHRPD;
 NhuMeasResultLstCDMA2000 measResultLstCDMA2000;
} NhuMeasResultsCDMA2000;


typedef TknU32 NhuMeasResultForECID_r9ue_RxTxTimeDiffResult_r9;


typedef TknStrBSXL NhuMeasResultForECID_r9currentSFN_r9;
typedef struct NhuMeasResultForECID_r9
{
 TknPres pres;
 NhuMeasResultForECID_r9ue_RxTxTimeDiffResult_r9 ue_RxTxTimeDiffResult_r9;
 NhuMeasResultForECID_r9currentSFN_r9 currentSFN_r9;
} NhuMeasResultForECID_r9;


typedef TknStrOSXL NhuLocInfo_r10locationCoordinates_r10ellipsoid_Point_r10;

typedef TknStrOSXL NhuLocInfo_r10locationCoordinates_r10ellipsoidPointWithAltitude_r10;

typedef TknStrOSXL NhuLocInfo_r10locationCoordinates_r10ellipsoidPointWithUncertaintyCircle_r11;

typedef TknStrOSXL NhuLocInfo_r10locationCoordinates_r10ellipsoidPointWithUncertaintyEllipse_r11;

typedef TknStrOSXL NhuLocInfo_r10locationCoordinates_r10ellipsoidPointWithAltitudeAndUncertaintyEllipsoid_r11;

typedef TknStrOSXL NhuLocInfo_r10locationCoordinates_r10ellipsoidArc_r11;

typedef TknStrOSXL NhuLocInfo_r10locationCoordinates_r10polygon_r11;
typedef struct NhuLocInfo_r10locationCoordinates_r10
{
 TknU8 choice;
 union {
  NhuLocInfo_r10locationCoordinates_r10ellipsoid_Point_r10 ellipsoid_Point_r10;
  NhuLocInfo_r10locationCoordinates_r10ellipsoidPointWithAltitude_r10 ellipsoidPointWithAltitude_r10;
  NhuLocInfo_r10locationCoordinates_r10ellipsoidPointWithUncertaintyCircle_r11 ellipsoidPointWithUncertaintyCircle_r11;
  NhuLocInfo_r10locationCoordinates_r10ellipsoidPointWithUncertaintyEllipse_r11 ellipsoidPointWithUncertaintyEllipse_r11;
  NhuLocInfo_r10locationCoordinates_r10ellipsoidPointWithAltitudeAndUncertaintyEllipsoid_r11 ellipsoidPointWithAltitudeAndUncertaintyEllipsoid_r11;
  NhuLocInfo_r10locationCoordinates_r10ellipsoidArc_r11 ellipsoidArc_r11;
  NhuLocInfo_r10locationCoordinates_r10polygon_r11 polygon_r11;
 } val;
} NhuLocInfo_r10locationCoordinates_r10;


typedef TknStrOSXL NhuLocInfo_r10horizontalVelocity_r10;

typedef TknStrOSXL NhuLocInfo_r10gnss_TOD_msec_r10;
typedef struct NhuLocInfo_r10
{
 TknPres pres;
 NhuLocInfo_r10locationCoordinates_r10 locationCoordinates_r10;
 NhuLocInfo_r10horizontalVelocity_r10 horizontalVelocity_r10;
 NhuLocInfo_r10gnss_TOD_msec_r10 gnss_TOD_msec_r10;
} NhuLocInfo_r10;

typedef struct NhuMeasResultServFreq_r10measResultSCell_r10
{
 TknPres pres;
 NhuRSRP_Range rsrpResultSCell_r10;
 NhuRSRQ_Range rsrqResultSCell_r10;
} NhuMeasResultServFreq_r10measResultSCell_r10;

typedef struct NhuMeasResultServFreq_r10measResultBestNeighCell_r10
{
 TknPres pres;
 NhuPhysCellId physCellId_r10;
 NhuRSRP_Range rsrpResultNCell_r10;
 NhuRSRQ_Range rsrqResultNCell_r10;
} NhuMeasResultServFreq_r10measResultBestNeighCell_r10;

typedef struct NhuMeasResultServFreq_r10
{
 TknPres pres;
 NhuServCellIdx_r10 servFreqId_r10;
 NhuMeasResultServFreq_r10measResultSCell_r10 measResultSCell_r10;
 NhuMeasResultServFreq_r10measResultBestNeighCell_r10 measResultBestNeighCell_r10;
} NhuMeasResultServFreq_r10;

typedef struct NhuMeasResultServFreqLst_r10
{
 TknU16 noComp;
 NhuMeasResultServFreq_r10 *member;
}NhuMeasResultServFreqLst_r10;

typedef struct NhuMeasResultsmeasResultPCell
{
 TknPres pres;
 NhuRSRP_Range rsrpResult;
 NhuRSRQ_Range rsrqResult;
} NhuMeasResultsmeasResultPCell;

typedef struct NhuMeasResultsmeasResultNeighCells
{
 TknU8 choice;
 union {
  NhuMeasResultLstEUTRA measResultLstEUTRA;
  NhuMeasResultLstUTRA measResultLstUTRA;
  NhuMeasResultLstGERAN measResultLstGERAN;
  NhuMeasResultsCDMA2000 measResultsCDMA2000;
 } val;
} NhuMeasResultsmeasResultNeighCells;

typedef struct NhuMeasResultsextaddgrp_1
{
 TknPres pres;
 NhuMeasResultForECID_r9 measResultForECID_r9;
} NhuMeasResultsextaddgrp_1;

typedef struct NhuMeasResultsextaddgrp_2
{
 TknPres pres;
 NhuLocInfo_r10 locationInfo_r10;
 NhuMeasResultServFreqLst_r10 measResultServFreqLst_r10;
} NhuMeasResultsextaddgrp_2;

typedef struct NhuMeasResults
{
 TknPres pres;
 NhuMeasId measId;
 NhuMeasResultsmeasResultPCell measResultPCell;
 NhuMeasResultsmeasResultNeighCells measResultNeighCells;
 NhuMeasResultsextaddgrp_1 extaddgrp_1;
 NhuMeasResultsextaddgrp_2 extaddgrp_2;
} NhuMeasResults;


typedef TknStrOSXL NhuMeasurementReport_v8a0_IEslateNonCriticalExtn;
typedef struct NhuMeasurementReport_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuMeasurementReport_v8a0_IEsnonCriticalExtn;

typedef struct NhuMeasurementReport_v8a0_IEs
{
 TknPres pres;
 NhuMeasurementReport_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuMeasurementReport_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuMeasurementReport_v8a0_IEs;

typedef struct NhuMeasurementReport_r8_IEs
{
 TknPres pres;
 NhuMeasResults measResults;
 NhuMeasurementReport_v8a0_IEs nonCriticalExtn;
} NhuMeasurementReport_r8_IEs;

typedef struct NhuMeasurementReportcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuMeasurementReport_r8_IEs measurementReport_r8;
 } val;
} NhuMeasurementReportcriticalExtnsc1;

typedef struct NhuMeasurementReportcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuMeasurementReportcriticalExtnscriticalExtnsFuture;

typedef struct NhuMeasurementReportcriticalExtns
{
 TknU8 choice;
 union {
  NhuMeasurementReportcriticalExtnsc1 c1;
  NhuMeasurementReportcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuMeasurementReportcriticalExtns;

typedef struct NhuMeasurementReport
{
 TknPres pres;
 NhuMeasurementReportcriticalExtns criticalExtns;
} NhuMeasurementReport;


typedef enum enumNhuRRCConRecfgnCompl_v1130_IEsconnEstFailInfoAvailable_r11
{
 NhuRRCConRecfgnCompl_v1130_IEsconnEstFailInfoAvailable_r11trueEnum
} EnumNhuRRCConRecfgnCompl_v1130_IEsconnEstFailInfoAvailable_r11;
typedef TknU32 NhuRRCConRecfgnCompl_v1130_IEsconnEstFailInfoAvailable_r11;

typedef struct NhuRRCConRecfgnCompl_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConRecfgnCompl_v1130_IEsnonCriticalExtn;

typedef struct NhuRRCConRecfgnCompl_v1130_IEs
{
 TknPres pres;
 NhuRRCConRecfgnCompl_v1130_IEsconnEstFailInfoAvailable_r11 connEstFailInfoAvailable_r11;
 NhuRRCConRecfgnCompl_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConRecfgnCompl_v1130_IEs;


typedef enum enumNhuRRCConRecfgnCompl_v1020_IEsrlf_InfoAvailable_r10
{
 NhuRRCConRecfgnCompl_v1020_IEsrlf_InfoAvailable_r10trueEnum
} EnumNhuRRCConRecfgnCompl_v1020_IEsrlf_InfoAvailable_r10;
typedef TknU32 NhuRRCConRecfgnCompl_v1020_IEsrlf_InfoAvailable_r10;


typedef enum enumNhuRRCConRecfgnCompl_v1020_IEslogMeasAvailable_r10
{
 NhuRRCConRecfgnCompl_v1020_IEslogMeasAvailable_r10trueEnum
} EnumNhuRRCConRecfgnCompl_v1020_IEslogMeasAvailable_r10;
typedef TknU32 NhuRRCConRecfgnCompl_v1020_IEslogMeasAvailable_r10;

typedef struct NhuRRCConRecfgnCompl_v1020_IEs
{
 TknPres pres;
 NhuRRCConRecfgnCompl_v1020_IEsrlf_InfoAvailable_r10 rlf_InfoAvailable_r10;
 NhuRRCConRecfgnCompl_v1020_IEslogMeasAvailable_r10 logMeasAvailable_r10;
 NhuRRCConRecfgnCompl_v1130_IEs nonCriticalExtn;
} NhuRRCConRecfgnCompl_v1020_IEs;


typedef TknStrOSXL NhuRRCConRecfgnCompl_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConRecfgnCompl_v8a0_IEs
{
 TknPres pres;
 NhuRRCConRecfgnCompl_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConRecfgnCompl_v1020_IEs nonCriticalExtn;
} NhuRRCConRecfgnCompl_v8a0_IEs;

typedef struct NhuRRCConRecfgnCompl_r8_IEs
{
 TknPres pres;
 NhuRRCConRecfgnCompl_v8a0_IEs nonCriticalExtn;
} NhuRRCConRecfgnCompl_r8_IEs;

typedef struct NhuRRCConRecfgnComplcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConRecfgnComplcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConRecfgnComplcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConRecfgnCompl_r8_IEs rrcConRecfgnCompl_r8;
  NhuRRCConRecfgnComplcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConRecfgnComplcriticalExtns;

typedef struct NhuRRCConRecfgnCompl
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConRecfgnComplcriticalExtns criticalExtns;
} NhuRRCConRecfgnCompl;


typedef enum enumNhuRRCConReestbCompl_v1130_IEsconnEstFailInfoAvailable_r11
{
 NhuRRCConReestbCompl_v1130_IEsconnEstFailInfoAvailable_r11trueEnum
} EnumNhuRRCConReestbCompl_v1130_IEsconnEstFailInfoAvailable_r11;
typedef TknU32 NhuRRCConReestbCompl_v1130_IEsconnEstFailInfoAvailable_r11;

typedef struct NhuRRCConReestbCompl_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConReestbCompl_v1130_IEsnonCriticalExtn;

typedef struct NhuRRCConReestbCompl_v1130_IEs
{
 TknPres pres;
 NhuRRCConReestbCompl_v1130_IEsconnEstFailInfoAvailable_r11 connEstFailInfoAvailable_r11;
 NhuRRCConReestbCompl_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConReestbCompl_v1130_IEs;


typedef enum enumNhuRRCConReestbCompl_v1020_IEslogMeasAvailable_r10
{
 NhuRRCConReestbCompl_v1020_IEslogMeasAvailable_r10trueEnum
} EnumNhuRRCConReestbCompl_v1020_IEslogMeasAvailable_r10;
typedef TknU32 NhuRRCConReestbCompl_v1020_IEslogMeasAvailable_r10;

typedef struct NhuRRCConReestbCompl_v1020_IEs
{
 TknPres pres;
 NhuRRCConReestbCompl_v1020_IEslogMeasAvailable_r10 logMeasAvailable_r10;
 NhuRRCConReestbCompl_v1130_IEs nonCriticalExtn;
} NhuRRCConReestbCompl_v1020_IEs;


typedef TknStrOSXL NhuRRCConReestbCompl_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConReestbCompl_v8a0_IEs
{
 TknPres pres;
 NhuRRCConReestbCompl_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConReestbCompl_v1020_IEs nonCriticalExtn;
} NhuRRCConReestbCompl_v8a0_IEs;


typedef enum enumNhuRRCConReestbCompl_v920_IEsrlf_InfoAvailable_r9
{
 NhuRRCConReestbCompl_v920_IEsrlf_InfoAvailable_r9trueEnum
} EnumNhuRRCConReestbCompl_v920_IEsrlf_InfoAvailable_r9;
typedef TknU32 NhuRRCConReestbCompl_v920_IEsrlf_InfoAvailable_r9;

typedef struct NhuRRCConReestbCompl_v920_IEs
{
 TknPres pres;
 NhuRRCConReestbCompl_v920_IEsrlf_InfoAvailable_r9 rlf_InfoAvailable_r9;
 NhuRRCConReestbCompl_v8a0_IEs nonCriticalExtn;
} NhuRRCConReestbCompl_v920_IEs;

typedef struct NhuRRCConReestbCompl_r8_IEs
{
 TknPres pres;
 NhuRRCConReestbCompl_v920_IEs nonCriticalExtn;
} NhuRRCConReestbCompl_r8_IEs;

typedef struct NhuRRCConReestbComplcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConReestbComplcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConReestbComplcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConReestbCompl_r8_IEs rrcConReestbCompl_r8;
  NhuRRCConReestbComplcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConReestbComplcriticalExtns;

typedef struct NhuRRCConReestbCompl
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConReestbComplcriticalExtns criticalExtns;
} NhuRRCConReestbCompl;


typedef TknStrBSXL NhuRegisteredMMEmmegi;
typedef struct NhuRegisteredMME
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuRegisteredMMEmmegi mmegi;
 NhuMMEC mmec;
} NhuRegisteredMME;


typedef enum enumNhuRRCConSetupCompl_v1130_IEsconnEstFailInfoAvailable_r11
{
 NhuRRCConSetupCompl_v1130_IEsconnEstFailInfoAvailable_r11trueEnum
} EnumNhuRRCConSetupCompl_v1130_IEsconnEstFailInfoAvailable_r11;
typedef TknU32 NhuRRCConSetupCompl_v1130_IEsconnEstFailInfoAvailable_r11;

typedef struct NhuRRCConSetupCompl_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConSetupCompl_v1130_IEsnonCriticalExtn;

typedef struct NhuRRCConSetupCompl_v1130_IEs
{
 TknPres pres;
 NhuRRCConSetupCompl_v1130_IEsconnEstFailInfoAvailable_r11 connEstFailInfoAvailable_r11;
 NhuRRCConSetupCompl_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConSetupCompl_v1130_IEs;


typedef enum enumNhuRRCConSetupCompl_v1020_IEsgummei_Typ_r10
{
 NhuRRCConSetupCompl_v1020_IEsgummei_Typ_r10nativeEnum,
 NhuRRCConSetupCompl_v1020_IEsgummei_Typ_r10mappedEnum
} EnumNhuRRCConSetupCompl_v1020_IEsgummei_Typ_r10;
typedef TknU32 NhuRRCConSetupCompl_v1020_IEsgummei_Typ_r10;


typedef enum enumNhuRRCConSetupCompl_v1020_IEsrlf_InfoAvailable_r10
{
 NhuRRCConSetupCompl_v1020_IEsrlf_InfoAvailable_r10trueEnum
} EnumNhuRRCConSetupCompl_v1020_IEsrlf_InfoAvailable_r10;
typedef TknU32 NhuRRCConSetupCompl_v1020_IEsrlf_InfoAvailable_r10;


typedef enum enumNhuRRCConSetupCompl_v1020_IEslogMeasAvailable_r10
{
 NhuRRCConSetupCompl_v1020_IEslogMeasAvailable_r10trueEnum
} EnumNhuRRCConSetupCompl_v1020_IEslogMeasAvailable_r10;
typedef TknU32 NhuRRCConSetupCompl_v1020_IEslogMeasAvailable_r10;


typedef enum enumNhuRRCConSetupCompl_v1020_IEsrn_SubfrmConfigReq_r10
{
 NhuRRCConSetupCompl_v1020_IEsrn_SubfrmConfigReq_r10requiredEnum,
 NhuRRCConSetupCompl_v1020_IEsrn_SubfrmConfigReq_r10notReqdEnum
} EnumNhuRRCConSetupCompl_v1020_IEsrn_SubfrmConfigReq_r10;
typedef TknU32 NhuRRCConSetupCompl_v1020_IEsrn_SubfrmConfigReq_r10;

typedef struct NhuRRCConSetupCompl_v1020_IEs
{
 TknPres pres;
 NhuRRCConSetupCompl_v1020_IEsgummei_Typ_r10 gummei_Typ_r10;
 NhuRRCConSetupCompl_v1020_IEsrlf_InfoAvailable_r10 rlf_InfoAvailable_r10;
 NhuRRCConSetupCompl_v1020_IEslogMeasAvailable_r10 logMeasAvailable_r10;
 NhuRRCConSetupCompl_v1020_IEsrn_SubfrmConfigReq_r10 rn_SubfrmConfigReq_r10;
 NhuRRCConSetupCompl_v1130_IEs nonCriticalExtn;
} NhuRRCConSetupCompl_v1020_IEs;


typedef TknStrOSXL NhuRRCConSetupCompl_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConSetupCompl_v8a0_IEs
{
 TknPres pres;
 NhuRRCConSetupCompl_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConSetupCompl_v1020_IEs nonCriticalExtn;
} NhuRRCConSetupCompl_v8a0_IEs;


typedef TknU32 NhuRRCConSetupCompl_r8_IEsselectedPLMN_Identity;

typedef struct NhuRRCConSetupCompl_r8_IEs
{
 TknPres pres;
 NhuRRCConSetupCompl_r8_IEsselectedPLMN_Identity selectedPLMN_Identity;
 NhuRegisteredMME registeredMME;
 NhuDedicatedInfoNAS dedicatedInfoNAS;
 NhuRRCConSetupCompl_v8a0_IEs nonCriticalExtn;
} NhuRRCConSetupCompl_r8_IEs;

typedef struct NhuRRCConSetupComplcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRRCConSetupCompl_r8_IEs rrcConSetupCompl_r8;
 } val;
} NhuRRCConSetupComplcriticalExtnsc1;

typedef struct NhuRRCConSetupComplcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConSetupComplcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConSetupComplcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConSetupComplcriticalExtnsc1 c1;
  NhuRRCConSetupComplcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConSetupComplcriticalExtns;

typedef struct NhuRRCConSetupCompl
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConSetupComplcriticalExtns criticalExtns;
} NhuRRCConSetupCompl;


typedef TknStrOSXL NhuSecModeCompl_v8a0_IEslateNonCriticalExtn;
typedef struct NhuSecModeCompl_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSecModeCompl_v8a0_IEsnonCriticalExtn;

typedef struct NhuSecModeCompl_v8a0_IEs
{
 TknPres pres;
 NhuSecModeCompl_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuSecModeCompl_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSecModeCompl_v8a0_IEs;

typedef struct NhuSecModeCompl_r8_IEs
{
 TknPres pres;
 NhuSecModeCompl_v8a0_IEs nonCriticalExtn;
} NhuSecModeCompl_r8_IEs;

typedef struct NhuSecModeComplcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuSecModeComplcriticalExtnscriticalExtnsFuture;

typedef struct NhuSecModeComplcriticalExtns
{
 TknU8 choice;
 union {
  NhuSecModeCompl_r8_IEs securityModeCompl_r8;
  NhuSecModeComplcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuSecModeComplcriticalExtns;

typedef struct NhuSecModeCompl
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuSecModeComplcriticalExtns criticalExtns;
} NhuSecModeCompl;


typedef TknStrOSXL NhuSecModeFail_v8a0_IEslateNonCriticalExtn;
typedef struct NhuSecModeFail_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSecModeFail_v8a0_IEsnonCriticalExtn;

typedef struct NhuSecModeFail_v8a0_IEs
{
 TknPres pres;
 NhuSecModeFail_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuSecModeFail_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSecModeFail_v8a0_IEs;

typedef struct NhuSecModeFail_r8_IEs
{
 TknPres pres;
 NhuSecModeFail_v8a0_IEs nonCriticalExtn;
} NhuSecModeFail_r8_IEs;

typedef struct NhuSecModeFailcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuSecModeFailcriticalExtnscriticalExtnsFuture;

typedef struct NhuSecModeFailcriticalExtns
{
 TknU8 choice;
 union {
  NhuSecModeFail_r8_IEs securityModeFail_r8;
  NhuSecModeFailcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuSecModeFailcriticalExtns;

typedef struct NhuSecModeFail
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuSecModeFailcriticalExtns criticalExtns;
} NhuSecModeFail;


typedef TknStrOSXL NhuUE_CapRAT_ContueCapRAT_Cont;
typedef struct NhuUE_CapRAT_Cont
{
 TknPres pres;
 NhuRAT_Typ rat_Typ;
 NhuUE_CapRAT_ContueCapRAT_Cont ueCapRAT_Cont;
} NhuUE_CapRAT_Cont;

typedef struct NhuUE_CapRAT_ContLst
{
 TknU16 noComp;
 NhuUE_CapRAT_Cont *member;
}NhuUE_CapRAT_ContLst;


typedef TknStrOSXL NhuUECapInfo_v8a0_IEslateNonCriticalExtn;
typedef struct NhuUECapInfo_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUECapInfo_v8a0_IEsnonCriticalExtn;

typedef struct NhuUECapInfo_v8a0_IEs
{
 TknPres pres;
 NhuUECapInfo_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUECapInfo_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuUECapInfo_v8a0_IEs;

typedef struct NhuUECapInfo_r8_IEs
{
 TknPres pres;
 NhuUE_CapRAT_ContLst ue_CapRAT_ContLst;
 NhuUECapInfo_v8a0_IEs nonCriticalExtn;
} NhuUECapInfo_r8_IEs;

typedef struct NhuUECapInfocriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuUECapInfo_r8_IEs ueCapInfo_r8;
 } val;
} NhuUECapInfocriticalExtnsc1;

typedef struct NhuUECapInfocriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuUECapInfocriticalExtnscriticalExtnsFuture;

typedef struct NhuUECapInfocriticalExtns
{
 TknU8 choice;
 union {
  NhuUECapInfocriticalExtnsc1 c1;
  NhuUECapInfocriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuUECapInfocriticalExtns;

typedef struct NhuUECapInfo
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuUECapInfocriticalExtns criticalExtns;
} NhuUECapInfo;


typedef TknStrOSXL NhuULHovrPrepTfr_v8a0_IEslateNonCriticalExtn;
typedef struct NhuULHovrPrepTfr_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuULHovrPrepTfr_v8a0_IEsnonCriticalExtn;

typedef struct NhuULHovrPrepTfr_v8a0_IEs
{
 TknPres pres;
 NhuULHovrPrepTfr_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuULHovrPrepTfr_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuULHovrPrepTfr_v8a0_IEs;


typedef TknStrBSXL NhuULHovrPrepTfr_r8_IEsmeid;
typedef struct NhuULHovrPrepTfr_r8_IEs
{
 TknPres pres;
 NhuCDMA2000_Typ cdma2000_Typ;
 NhuULHovrPrepTfr_r8_IEsmeid meid;
 NhuDedicatedInfoCDMA2000 dedicatedInfo;
 NhuULHovrPrepTfr_v8a0_IEs nonCriticalExtn;
} NhuULHovrPrepTfr_r8_IEs;

typedef struct NhuULHovrPrepTfrcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuULHovrPrepTfr_r8_IEs ulHovrPrepTfr_r8;
 } val;
} NhuULHovrPrepTfrcriticalExtnsc1;

typedef struct NhuULHovrPrepTfrcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuULHovrPrepTfrcriticalExtnscriticalExtnsFuture;

typedef struct NhuULHovrPrepTfrcriticalExtns
{
 TknU8 choice;
 union {
  NhuULHovrPrepTfrcriticalExtnsc1 c1;
  NhuULHovrPrepTfrcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuULHovrPrepTfrcriticalExtns;

typedef struct NhuULHovrPrepTfr
{
 TknPres pres;
 NhuULHovrPrepTfrcriticalExtns criticalExtns;
} NhuULHovrPrepTfr;


typedef TknStrOSXL NhuULInfoTfr_v8a0_IEslateNonCriticalExtn;
typedef struct NhuULInfoTfr_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuULInfoTfr_v8a0_IEsnonCriticalExtn;

typedef struct NhuULInfoTfr_v8a0_IEs
{
 TknPres pres;
 NhuULInfoTfr_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuULInfoTfr_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuULInfoTfr_v8a0_IEs;

typedef struct NhuULInfoTfr_r8_IEsdedicatedInfoTyp
{
 TknU8 choice;
 union {
  NhuDedicatedInfoNAS dedicatedInfoNAS;
  NhuDedicatedInfoCDMA2000 dedicatedInfoCDMA2000_1XRTT;
  NhuDedicatedInfoCDMA2000 dedicatedInfoCDMA2000_HRPD;
 } val;
} NhuULInfoTfr_r8_IEsdedicatedInfoTyp;

typedef struct NhuULInfoTfr_r8_IEs
{
 TknPres pres;
 NhuULInfoTfr_r8_IEsdedicatedInfoTyp dedicatedInfoTyp;
 NhuULInfoTfr_v8a0_IEs nonCriticalExtn;
} NhuULInfoTfr_r8_IEs;

typedef struct NhuULInfoTfrcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuULInfoTfr_r8_IEs ulInfoTfr_r8;
 } val;
} NhuULInfoTfrcriticalExtnsc1;

typedef struct NhuULInfoTfrcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuULInfoTfrcriticalExtnscriticalExtnsFuture;

typedef struct NhuULInfoTfrcriticalExtns
{
 TknU8 choice;
 union {
  NhuULInfoTfrcriticalExtnsc1 c1;
  NhuULInfoTfrcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuULInfoTfrcriticalExtns;

typedef struct NhuULInfoTfr
{
 TknPres pres;
 NhuULInfoTfrcriticalExtns criticalExtns;
} NhuULInfoTfr;


typedef TknU32 NhuDRB_CountInfocount_Ulnk;


typedef TknU32 NhuDRB_CountInfocount_Dlnk;

typedef struct NhuDRB_CountInfo
{
 TknPres pres;
 NhuDRB_Identity drb_Identity;
 NhuDRB_CountInfocount_Ulnk count_Ulnk;
 NhuDRB_CountInfocount_Dlnk count_Dlnk;
} NhuDRB_CountInfo;

typedef struct NhuDRB_CountInfoLst
{
 TknU16 noComp;
 NhuDRB_CountInfo *member;
}NhuDRB_CountInfoLst;


typedef TknStrOSXL NhuCounterCheckRsp_v8a0_IEslateNonCriticalExtn;
typedef struct NhuCounterCheckRsp_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuCounterCheckRsp_v8a0_IEsnonCriticalExtn;

typedef struct NhuCounterCheckRsp_v8a0_IEs
{
 TknPres pres;
 NhuCounterCheckRsp_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuCounterCheckRsp_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuCounterCheckRsp_v8a0_IEs;

typedef struct NhuCounterCheckRsp_r8_IEs
{
 TknPres pres;
 NhuDRB_CountInfoLst drb_CountInfoLst;
 NhuCounterCheckRsp_v8a0_IEs nonCriticalExtn;
} NhuCounterCheckRsp_r8_IEs;

typedef struct NhuCounterCheckRspcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuCounterCheckRspcriticalExtnscriticalExtnsFuture;

typedef struct NhuCounterCheckRspcriticalExtns
{
 TknU8 choice;
 union {
  NhuCounterCheckRsp_r8_IEs counterCheckRsp_r8;
  NhuCounterCheckRspcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuCounterCheckRspcriticalExtns;

typedef struct NhuCounterCheckRsp
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuCounterCheckRspcriticalExtns criticalExtns;
} NhuCounterCheckRsp;


typedef TknU32 NhuNumberOfPreamblesSent_r11;

typedef struct NhuMeasResult2EUTRA_r9
{
 TknPres pres;
 NhuARFCN_ValueEUTRA carrierFreq_r9;
 NhuMeasResultLstEUTRA measResultLst_r9;
} NhuMeasResult2EUTRA_r9;

typedef struct NhuMeasResultLst2EUTRA_r9
{
 TknU16 noComp;
 NhuMeasResult2EUTRA_r9 *member;
}NhuMeasResultLst2EUTRA_r9;

typedef struct NhuMeasResult2UTRA_r9
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq_r9;
 NhuMeasResultLstUTRA measResultLst_r9;
} NhuMeasResult2UTRA_r9;

typedef struct NhuMeasResultLst2UTRA_r9
{
 TknU16 noComp;
 NhuMeasResult2UTRA_r9 *member;
}NhuMeasResultLst2UTRA_r9;

typedef struct NhuMeasResult2CDMA2000_r9
{
 TknPres pres;
 NhuCarrierFreqCDMA2000 carrierFreq_r9;
 NhuMeasResultsCDMA2000 measResultLst_r9;
} NhuMeasResult2CDMA2000_r9;

typedef struct NhuMeasResultLst2CDMA2000_r9
{
 TknU16 noComp;
 NhuMeasResult2CDMA2000_r9 *member;
}NhuMeasResultLst2CDMA2000_r9;


typedef TknU32 NhuTimeSinceFail_r11;

typedef struct NhuRLF_Report_r9measResultLastServCell_r9
{
 TknPres pres;
 NhuRSRP_Range rsrpResult_r9;
 NhuRSRQ_Range rsrqResult_r9;
} NhuRLF_Report_r9measResultLastServCell_r9;

typedef struct NhuRLF_Report_r9measResultNeighCells_r9
{
 TknPres pres;
 NhuMeasResultLst2EUTRA_r9 measResultLstEUTRA_r9;
 NhuMeasResultLst2UTRA_r9 measResultLstUTRA_r9;
 NhuMeasResultLstGERAN measResultLstGERAN_r9;
 NhuMeasResultLst2CDMA2000_r9 measResultsCDMA2000_r9;
} NhuRLF_Report_r9measResultNeighCells_r9;

typedef struct NhuRLF_Report_r9extaddgrp_1failedPCellId_r10pci_arfcn_r10
{
 TknPres pres;
 NhuPhysCellId physCellId_r10;
 NhuARFCN_ValueEUTRA carrierFreq_r10;
} NhuRLF_Report_r9extaddgrp_1failedPCellId_r10pci_arfcn_r10;

typedef struct NhuRLF_Report_r9extaddgrp_1failedPCellId_r10
{
 TknU8 choice;
 union {
  NhuCellGlobalIdEUTRA cellGlobalId_r10;
  NhuRLF_Report_r9extaddgrp_1failedPCellId_r10pci_arfcn_r10 pci_arfcn_r10;
 } val;
} NhuRLF_Report_r9extaddgrp_1failedPCellId_r10;


typedef TknU32 NhuRLF_Report_r9extaddgrp_1timeConnFail_r10;


typedef enum enumNhuRLF_Report_r9extaddgrp_1connectionFailTyp_r10
{
 NhuRLF_Report_r9extaddgrp_1connectionFailTyp_r10rlfEnum,
 NhuRLF_Report_r9extaddgrp_1connectionFailTyp_r10hofEnum
} EnumNhuRLF_Report_r9extaddgrp_1connectionFailTyp_r10;
typedef TknU32 NhuRLF_Report_r9extaddgrp_1connectionFailTyp_r10;

typedef struct NhuRLF_Report_r9extaddgrp_2failedPCellId_v1090
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 carrierFreq_v1090;
} NhuRLF_Report_r9extaddgrp_2failedPCellId_v1090;


typedef enum enumNhuRLF_Report_r9extaddgrp_3basicFields_r11rlf_Cause_r11
{
 NhuRLF_Report_r9extaddgrp_3basicFields_r11rlf_Cause_r11t310_ExpiryEnum,
 NhuRLF_Report_r9extaddgrp_3basicFields_r11rlf_Cause_r11randomAccessProblemEnum,
 NhuRLF_Report_r9extaddgrp_3basicFields_r11rlf_Cause_r11rlc_MaxNumRetxEnum,
 NhuRLF_Report_r9extaddgrp_3basicFields_r11rlf_Cause_r11spare1Enum
} EnumNhuRLF_Report_r9extaddgrp_3basicFields_r11rlf_Cause_r11;
typedef TknU32 NhuRLF_Report_r9extaddgrp_3basicFields_r11rlf_Cause_r11;

typedef struct NhuRLF_Report_r9extaddgrp_3basicFields_r11
{
 TknPres pres;
 NhuC_RNTI c_RNTI_r11;
 NhuRLF_Report_r9extaddgrp_3basicFields_r11rlf_Cause_r11 rlf_Cause_r11;
 NhuTimeSinceFail_r11 timeSinceFail_r11;
} NhuRLF_Report_r9extaddgrp_3basicFields_r11;

typedef struct NhuRLF_Report_r9extaddgrp_3previousUTRA_CellId_r11physCellId_r11
{
 TknU8 choice;
 union {
  NhuPhysCellIdUTRA_FDD fdd_r11;
  NhuPhysCellIdUTRA_TDD tdd_r11;
 } val;
} NhuRLF_Report_r9extaddgrp_3previousUTRA_CellId_r11physCellId_r11;

typedef struct NhuRLF_Report_r9extaddgrp_3previousUTRA_CellId_r11
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq_r11;
 NhuRLF_Report_r9extaddgrp_3previousUTRA_CellId_r11physCellId_r11 physCellId_r11;
 NhuCellGlobalIdUTRA cellGlobalId_r11;
} NhuRLF_Report_r9extaddgrp_3previousUTRA_CellId_r11;

typedef struct NhuRLF_Report_r9extaddgrp_3selectedUTRA_CellId_r11physCellId_r11
{
 TknU8 choice;
 union {
  NhuPhysCellIdUTRA_FDD fdd_r11;
  NhuPhysCellIdUTRA_TDD tdd_r11;
 } val;
} NhuRLF_Report_r9extaddgrp_3selectedUTRA_CellId_r11physCellId_r11;

typedef struct NhuRLF_Report_r9extaddgrp_3selectedUTRA_CellId_r11
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq_r11;
 NhuRLF_Report_r9extaddgrp_3selectedUTRA_CellId_r11physCellId_r11 physCellId_r11;
} NhuRLF_Report_r9extaddgrp_3selectedUTRA_CellId_r11;

typedef struct NhuRLF_Report_r9extaddgrp_1
{
 TknPres pres;
 NhuLocInfo_r10 locationInfo_r10;
 NhuRLF_Report_r9extaddgrp_1failedPCellId_r10 failedPCellId_r10;
 NhuCellGlobalIdEUTRA reestablishmentCellId_r10;
 NhuRLF_Report_r9extaddgrp_1timeConnFail_r10 timeConnFail_r10;
 NhuRLF_Report_r9extaddgrp_1connectionFailTyp_r10 connectionFailTyp_r10;
 NhuCellGlobalIdEUTRA previousPCellId_r10;
} NhuRLF_Report_r9extaddgrp_1;

typedef struct NhuRLF_Report_r9extaddgrp_2
{
 TknPres pres;
 NhuRLF_Report_r9extaddgrp_2failedPCellId_v1090 failedPCellId_v1090;
} NhuRLF_Report_r9extaddgrp_2;

typedef struct NhuRLF_Report_r9extaddgrp_3
{
 TknPres pres;
 NhuRLF_Report_r9extaddgrp_3basicFields_r11 basicFields_r11;
 NhuRLF_Report_r9extaddgrp_3previousUTRA_CellId_r11 previousUTRA_CellId_r11;
 NhuRLF_Report_r9extaddgrp_3selectedUTRA_CellId_r11 selectedUTRA_CellId_r11;
} NhuRLF_Report_r9extaddgrp_3;

typedef struct NhuRLF_Report_r9
{
 TknPres pres;
 NhuRLF_Report_r9measResultLastServCell_r9 measResultLastServCell_r9;
 NhuRLF_Report_r9measResultNeighCells_r9 measResultNeighCells_r9;
 NhuRLF_Report_r9extaddgrp_1 extaddgrp_1;
 NhuRLF_Report_r9extaddgrp_2 extaddgrp_2;
 NhuRLF_Report_r9extaddgrp_3 extaddgrp_3;
} NhuRLF_Report_r9;

typedef struct NhuMeasResultLst2GERAN_r10
{
 TknU16 noComp;
 NhuMeasResultLstGERAN *member;
}NhuMeasResultLst2GERAN_r10;

typedef struct NhuMeasResult2EUTRA_v9e0
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 carrierFreq_v9e0;
} NhuMeasResult2EUTRA_v9e0;

typedef struct NhuMeasResultLst2EUTRA_v9e0
{
 TknU16 noComp;
 NhuMeasResult2EUTRA_v9e0 *member;
}NhuMeasResultLst2EUTRA_v9e0;


typedef TknU32 NhuLogMeasInfo_r10relativeTimeStamp_r10;

typedef struct NhuLogMeasInfo_r10measResultServCell_r10
{
 TknPres pres;
 NhuRSRP_Range rsrpResult_r10;
 NhuRSRQ_Range rsrqResult_r10;
} NhuLogMeasInfo_r10measResultServCell_r10;

typedef struct NhuLogMeasInfo_r10measResultNeighCells_r10
{
 TknPres pres;
 NhuMeasResultLst2EUTRA_r9 measResultLstEUTRA_r10;
 NhuMeasResultLst2UTRA_r9 measResultLstUTRA_r10;
 NhuMeasResultLst2GERAN_r10 measResultLstGERAN_r10;
 NhuMeasResultLst2CDMA2000_r9 measResultLstCDMA2000_r10;
} NhuLogMeasInfo_r10measResultNeighCells_r10;

typedef struct NhuLogMeasInfo_r10extaddgrp_1
{
 TknPres pres;
 NhuMeasResultLst2EUTRA_v9e0 measResultLstEUTRA_v1090;
} NhuLogMeasInfo_r10extaddgrp_1;

typedef struct NhuLogMeasInfo_r10
{
 TknPres pres;
 NhuLocInfo_r10 locationInfo_r10;
 NhuLogMeasInfo_r10relativeTimeStamp_r10 relativeTimeStamp_r10;
 NhuCellGlobalIdEUTRA servCellIdentity_r10;
 NhuLogMeasInfo_r10measResultServCell_r10 measResultServCell_r10;
 NhuLogMeasInfo_r10measResultNeighCells_r10 measResultNeighCells_r10;
 NhuLogMeasInfo_r10extaddgrp_1 extaddgrp_1;
} NhuLogMeasInfo_r10;

typedef struct NhuLogMeasInfoLst_r10
{
 TknU16 noComp;
 NhuLogMeasInfo_r10 *member;
}NhuLogMeasInfoLst_r10;


typedef TknStrOSXL NhuLogMeasReport_r10traceRecordingSessionRef_r10;

typedef TknStrOSXL NhuLogMeasReport_r10tce_Id_r10;

typedef enum enumNhuLogMeasReport_r10logMeasAvailable_r10
{
 NhuLogMeasReport_r10logMeasAvailable_r10trueEnum
} EnumNhuLogMeasReport_r10logMeasAvailable_r10;
typedef TknU32 NhuLogMeasReport_r10logMeasAvailable_r10;

typedef struct NhuLogMeasReport_r10
{
 TknPres pres;
 NhuAbsoluteTimeInfo_r10 absoluteTimeStamp_r10;
 NhuTraceReference_r10 traceReference_r10;
 NhuLogMeasReport_r10traceRecordingSessionRef_r10 traceRecordingSessionRef_r10;
 NhuLogMeasReport_r10tce_Id_r10 tce_Id_r10;
 NhuLogMeasInfoLst_r10 logMeasInfoLst_r10;
 NhuLogMeasReport_r10logMeasAvailable_r10 logMeasAvailable_r10;
} NhuLogMeasReport_r10;

typedef struct NhuConnEstFailReport_r11measResultFailedCell_r11
{
 TknPres pres;
 NhuRSRP_Range rsrpResult_r11;
 NhuRSRQ_Range rsrqResult_r11;
} NhuConnEstFailReport_r11measResultFailedCell_r11;

typedef struct NhuConnEstFailReport_r11measResultNeighCells_r11
{
 TknPres pres;
 NhuMeasResultLst2EUTRA_r9 measResultLstEUTRA_r11;
 NhuMeasResultLst2UTRA_r9 measResultLstUTRA_r11;
 NhuMeasResultLstGERAN measResultLstGERAN_r11;
 NhuMeasResultLst2CDMA2000_r9 measResultsCDMA2000_r11;
} NhuConnEstFailReport_r11measResultNeighCells_r11;


typedef TknU8 NhuConnEstFailReport_r11contentionDetected_r11;


typedef TknU8 NhuConnEstFailReport_r11maxTxPowerReached_r11;

typedef struct NhuConnEstFailReport_r11
{
 TknPres pres;
 NhuCellGlobalIdEUTRA failedCellId_r11;
 NhuLocInfo_r10 locationInfo_r11;
 NhuConnEstFailReport_r11measResultFailedCell_r11 measResultFailedCell_r11;
 NhuConnEstFailReport_r11measResultNeighCells_r11 measResultNeighCells_r11;
 NhuNumberOfPreamblesSent_r11 numberOfPreamblesSent_r11;
 NhuConnEstFailReport_r11contentionDetected_r11 contentionDetected_r11;
 NhuConnEstFailReport_r11maxTxPowerReached_r11 maxTxPowerReached_r11;
 NhuTimeSinceFail_r11 timeSinceFail_r11;
 NhuMeasResultLst2EUTRA_v9e0 measResultLstEUTRA_v1130;
} NhuConnEstFailReport_r11;

typedef struct NhuUEInfoRsp_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUEInfoRsp_v1130_IEsnonCriticalExtn;

typedef struct NhuUEInfoRsp_v1130_IEs
{
 TknPres pres;
 NhuConnEstFailReport_r11 connEstFailReport_r11;
 NhuUEInfoRsp_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuUEInfoRsp_v1130_IEs;

typedef struct NhuUEInfoRsp_v1020_IEs
{
 TknPres pres;
 NhuLogMeasReport_r10 logMeasReport_r10;
 NhuUEInfoRsp_v1130_IEs nonCriticalExtn;
} NhuUEInfoRsp_v1020_IEs;


typedef TknStrOSXL NhuUEInfoRsp_v930_IEslateNonCriticalExtn;
typedef struct NhuUEInfoRsp_v930_IEs
{
 TknPres pres;
 NhuUEInfoRsp_v930_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUEInfoRsp_v1020_IEs nonCriticalExtn;
} NhuUEInfoRsp_v930_IEs;


typedef TknU8 NhuUEInfoRsp_r9_IEsrach_Report_r9contentionDetected_r9;

typedef struct NhuUEInfoRsp_r9_IEsrach_Report_r9
{
 TknPres pres;
 NhuNumberOfPreamblesSent_r11 numberOfPreamblesSent_r9;
 NhuUEInfoRsp_r9_IEsrach_Report_r9contentionDetected_r9 contentionDetected_r9;
} NhuUEInfoRsp_r9_IEsrach_Report_r9;

typedef struct NhuUEInfoRsp_r9_IEs
{
 TknPres pres;
 NhuUEInfoRsp_r9_IEsrach_Report_r9 rach_Report_r9;
 NhuRLF_Report_r9 rlf_Report_r9;
 NhuUEInfoRsp_v930_IEs nonCriticalExtn;
} NhuUEInfoRsp_r9_IEs;

typedef struct NhuUEInfoRsp_r9criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuUEInfoRsp_r9_IEs ueInfoRsp_r9;
 } val;
} NhuUEInfoRsp_r9criticalExtnsc1;

typedef struct NhuUEInfoRsp_r9criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuUEInfoRsp_r9criticalExtnscriticalExtnsFuture;

typedef struct NhuUEInfoRsp_r9criticalExtns
{
 TknU8 choice;
 union {
  NhuUEInfoRsp_r9criticalExtnsc1 c1;
  NhuUEInfoRsp_r9criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuUEInfoRsp_r9criticalExtns;

typedef struct NhuUEInfoRsp_r9
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuUEInfoRsp_r9criticalExtns criticalExtns;
} NhuUEInfoRsp_r9;


typedef TknStrOSXL NhuProximityInd_v930_IEslateNonCriticalExtn;
typedef struct NhuProximityInd_v930_IEsnonCriticalExtn
{
 TknPres pres;
} NhuProximityInd_v930_IEsnonCriticalExtn;

typedef struct NhuProximityInd_v930_IEs
{
 TknPres pres;
 NhuProximityInd_v930_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuProximityInd_v930_IEsnonCriticalExtn nonCriticalExtn;
} NhuProximityInd_v930_IEs;


typedef enum enumNhuProximityInd_r9_IEstype_r9
{
 NhuProximityInd_r9_IEstype_r9enteringEnum,
 NhuProximityInd_r9_IEstype_r9leavingEnum
} EnumNhuProximityInd_r9_IEstype_r9;
typedef TknU32 NhuProximityInd_r9_IEstype_r9;

typedef struct NhuProximityInd_r9_IEscarrierFreq_r9
{
 TknU8 choice;
 union {
  NhuARFCN_ValueEUTRA eutra_r9;
  NhuARFCN_ValueUTRA utra_r9;
  NhuARFCN_ValueEUTRA_v9e0 eutra2_v9e0;
 } val;
} NhuProximityInd_r9_IEscarrierFreq_r9;

typedef struct NhuProximityInd_r9_IEs
{
 TknPres pres;
 NhuProximityInd_r9_IEstype_r9 type_r9;
 NhuProximityInd_r9_IEscarrierFreq_r9 carrierFreq_r9;
 NhuProximityInd_v930_IEs nonCriticalExtn;
} NhuProximityInd_r9_IEs;

typedef struct NhuProximityInd_r9criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuProximityInd_r9_IEs proximityInd_r9;
 } val;
} NhuProximityInd_r9criticalExtnsc1;

typedef struct NhuProximityInd_r9criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuProximityInd_r9criticalExtnscriticalExtnsFuture;

typedef struct NhuProximityInd_r9criticalExtns
{
 TknU8 choice;
 union {
  NhuProximityInd_r9criticalExtnsc1 c1;
  NhuProximityInd_r9criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuProximityInd_r9criticalExtns;

typedef struct NhuProximityInd_r9
{
 TknPres pres;
 NhuProximityInd_r9criticalExtns criticalExtns;
} NhuProximityInd_r9;


typedef TknStrOSXL NhuRNRecfgnCompl_r10_IEslateNonCriticalExtn;
typedef struct NhuRNRecfgnCompl_r10_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRNRecfgnCompl_r10_IEsnonCriticalExtn;

typedef struct NhuRNRecfgnCompl_r10_IEs
{
 TknPres pres;
 NhuRNRecfgnCompl_r10_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRNRecfgnCompl_r10_IEsnonCriticalExtn nonCriticalExtn;
} NhuRNRecfgnCompl_r10_IEs;

typedef struct NhuRNRecfgnCompl_r10criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRNRecfgnCompl_r10_IEs rnRecfgnCompl_r10;
 } val;
} NhuRNRecfgnCompl_r10criticalExtnsc1;

typedef struct NhuRNRecfgnCompl_r10criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRNRecfgnCompl_r10criticalExtnscriticalExtnsFuture;

typedef struct NhuRNRecfgnCompl_r10criticalExtns
{
 TknU8 choice;
 union {
  NhuRNRecfgnCompl_r10criticalExtnsc1 c1;
  NhuRNRecfgnCompl_r10criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRNRecfgnCompl_r10criticalExtns;

typedef struct NhuRNRecfgnCompl_r10
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRNRecfgnCompl_r10criticalExtns criticalExtns;
} NhuRNRecfgnCompl_r10;


typedef TknU32 NhuCountingRspInfo_r10countingRspService_r10;

typedef struct NhuCountingRspInfo_r10
{
 TknPres pres;
 NhuCountingRspInfo_r10countingRspService_r10 countingRspService_r10;
} NhuCountingRspInfo_r10;

typedef struct NhuCountingRspLst_r10
{
 TknU16 noComp;
 NhuCountingRspInfo_r10 *member;
}NhuCountingRspLst_r10;


typedef TknU32 NhuMBMSCountingRsp_r10_IEsmbsfn_AreaIdx_r10;


typedef TknStrOSXL NhuMBMSCountingRsp_r10_IEslateNonCriticalExtn;
typedef struct NhuMBMSCountingRsp_r10_IEsnonCriticalExtn
{
 TknPres pres;
} NhuMBMSCountingRsp_r10_IEsnonCriticalExtn;

typedef struct NhuMBMSCountingRsp_r10_IEs
{
 TknPres pres;
 NhuMBMSCountingRsp_r10_IEsmbsfn_AreaIdx_r10 mbsfn_AreaIdx_r10;
 NhuCountingRspLst_r10 countingRspLst_r10;
 NhuMBMSCountingRsp_r10_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuMBMSCountingRsp_r10_IEsnonCriticalExtn nonCriticalExtn;
} NhuMBMSCountingRsp_r10_IEs;

typedef struct NhuMBMSCountingRsp_r10criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuMBMSCountingRsp_r10_IEs countingRsp_r10;
 } val;
} NhuMBMSCountingRsp_r10criticalExtnsc1;

typedef struct NhuMBMSCountingRsp_r10criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuMBMSCountingRsp_r10criticalExtnscriticalExtnsFuture;

typedef struct NhuMBMSCountingRsp_r10criticalExtns
{
 TknU8 choice;
 union {
  NhuMBMSCountingRsp_r10criticalExtnsc1 c1;
  NhuMBMSCountingRsp_r10criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuMBMSCountingRsp_r10criticalExtns;

typedef struct NhuMBMSCountingRsp_r10
{
 TknPres pres;
 NhuMBMSCountingRsp_r10criticalExtns criticalExtns;
} NhuMBMSCountingRsp_r10;


typedef TknU32 NhuRSTD_InterFreqInfo_r10measPRS_Offset_r10;

typedef struct NhuRSTD_InterFreqInfo_r10extaddgrp_1
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 carrierFreq_v1090;
} NhuRSTD_InterFreqInfo_r10extaddgrp_1;

typedef struct NhuRSTD_InterFreqInfo_r10
{
 TknPres pres;
 NhuARFCN_ValueEUTRA carrierFreq_r10;
 NhuRSTD_InterFreqInfo_r10measPRS_Offset_r10 measPRS_Offset_r10;
 NhuRSTD_InterFreqInfo_r10extaddgrp_1 extaddgrp_1;
} NhuRSTD_InterFreqInfo_r10;

typedef struct NhuRSTD_InterFreqInfoLst_r10
{
 TknU16 noComp;
 NhuRSTD_InterFreqInfo_r10 *member;
}NhuRSTD_InterFreqInfoLst_r10;

typedef struct NhuInterFreqRSTDMeasurementInd_r10_IEsrstd_InterFreqInd_r10start
{
 TknPres pres;
 NhuRSTD_InterFreqInfoLst_r10 rstd_InterFreqInfoLst_r10;
} NhuInterFreqRSTDMeasurementInd_r10_IEsrstd_InterFreqInd_r10start;

typedef struct NhuInterFreqRSTDMeasurementInd_r10_IEsrstd_InterFreqInd_r10
{
 TknU8 choice;
 union {
  NhuInterFreqRSTDMeasurementInd_r10_IEsrstd_InterFreqInd_r10start start;
 } val;
} NhuInterFreqRSTDMeasurementInd_r10_IEsrstd_InterFreqInd_r10;


typedef TknStrOSXL NhuInterFreqRSTDMeasurementInd_r10_IEslateNonCriticalExtn;
typedef struct NhuInterFreqRSTDMeasurementInd_r10_IEsnonCriticalExtn
{
 TknPres pres;
} NhuInterFreqRSTDMeasurementInd_r10_IEsnonCriticalExtn;

typedef struct NhuInterFreqRSTDMeasurementInd_r10_IEs
{
 TknPres pres;
 NhuInterFreqRSTDMeasurementInd_r10_IEsrstd_InterFreqInd_r10 rstd_InterFreqInd_r10;
 NhuInterFreqRSTDMeasurementInd_r10_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuInterFreqRSTDMeasurementInd_r10_IEsnonCriticalExtn nonCriticalExtn;
} NhuInterFreqRSTDMeasurementInd_r10_IEs;

typedef struct NhuInterFreqRSTDMeasurementInd_r10criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuInterFreqRSTDMeasurementInd_r10_IEs interFreqRSTDMeasurementInd_r10;
 } val;
} NhuInterFreqRSTDMeasurementInd_r10criticalExtnsc1;

typedef struct NhuInterFreqRSTDMeasurementInd_r10criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuInterFreqRSTDMeasurementInd_r10criticalExtnscriticalExtnsFuture;

typedef struct NhuInterFreqRSTDMeasurementInd_r10criticalExtns
{
 TknU8 choice;
 union {
  NhuInterFreqRSTDMeasurementInd_r10criticalExtnsc1 c1;
  NhuInterFreqRSTDMeasurementInd_r10criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuInterFreqRSTDMeasurementInd_r10criticalExtns;

typedef struct NhuInterFreqRSTDMeasurementInd_r10
{
 TknPres pres;
 NhuInterFreqRSTDMeasurementInd_r10criticalExtns criticalExtns;
} NhuInterFreqRSTDMeasurementInd_r10;


typedef enum enumNhuUEAssistanceInfo_r11_IEspowerPrefInd_r11
{
 NhuUEAssistanceInfo_r11_IEspowerPrefInd_r11normalEnum,
 NhuUEAssistanceInfo_r11_IEspowerPrefInd_r11lowPowerConsumptionEnum
} EnumNhuUEAssistanceInfo_r11_IEspowerPrefInd_r11;
typedef TknU32 NhuUEAssistanceInfo_r11_IEspowerPrefInd_r11;


typedef TknStrOSXL NhuUEAssistanceInfo_r11_IEslateNonCriticalExtn;
typedef struct NhuUEAssistanceInfo_r11_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUEAssistanceInfo_r11_IEsnonCriticalExtn;

typedef struct NhuUEAssistanceInfo_r11_IEs
{
 TknPres pres;
 NhuUEAssistanceInfo_r11_IEspowerPrefInd_r11 powerPrefInd_r11;
 NhuUEAssistanceInfo_r11_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUEAssistanceInfo_r11_IEsnonCriticalExtn nonCriticalExtn;
} NhuUEAssistanceInfo_r11_IEs;

typedef struct NhuUEAssistanceInfo_r11criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuUEAssistanceInfo_r11_IEs ueAssistanceInfo_r11;
 } val;
} NhuUEAssistanceInfo_r11criticalExtnsc1;

typedef struct NhuUEAssistanceInfo_r11criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuUEAssistanceInfo_r11criticalExtnscriticalExtnsFuture;

typedef struct NhuUEAssistanceInfo_r11criticalExtns
{
 TknU8 choice;
 union {
  NhuUEAssistanceInfo_r11criticalExtnsc1 c1;
  NhuUEAssistanceInfo_r11criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuUEAssistanceInfo_r11criticalExtns;

typedef struct NhuUEAssistanceInfo_r11
{
 TknPres pres;
 NhuUEAssistanceInfo_r11criticalExtns criticalExtns;
} NhuUEAssistanceInfo_r11;


typedef enum enumNhuAffectedCarrierFreq_r11interferenceDirection_r11
{
 NhuAffectedCarrierFreq_r11interferenceDirection_r11eutraEnum,
 NhuAffectedCarrierFreq_r11interferenceDirection_r11otherEnum,
 NhuAffectedCarrierFreq_r11interferenceDirection_r11bothEnum,
 NhuAffectedCarrierFreq_r11interferenceDirection_r11spareEnum
} EnumNhuAffectedCarrierFreq_r11interferenceDirection_r11;
typedef TknU32 NhuAffectedCarrierFreq_r11interferenceDirection_r11;

typedef struct NhuAffectedCarrierFreq_r11
{
 TknPres pres;
 NhuMeasObjectId carrierFreq_r11;
 NhuAffectedCarrierFreq_r11interferenceDirection_r11 interferenceDirection_r11;
} NhuAffectedCarrierFreq_r11;

typedef struct NhuAffectedCarrierFreqLst_r11
{
 TknU16 noComp;
 NhuAffectedCarrierFreq_r11 *member;
}NhuAffectedCarrierFreqLst_r11;


typedef TknStrBSXL NhuIDC_SubfrmPattern_r11subframePatternFDD_r11;

typedef TknStrBSXL NhuIDC_SubfrmPattern_r11subframePatternTDD_r11subframeConfig0_r11;

typedef TknStrBSXL NhuIDC_SubfrmPattern_r11subframePatternTDD_r11subframeConfig1_5_r11;

typedef TknStrBSXL NhuIDC_SubfrmPattern_r11subframePatternTDD_r11subframeConfig6_r11;
typedef struct NhuIDC_SubfrmPattern_r11subframePatternTDD_r11
{
 TknU8 choice;
 union {
  NhuIDC_SubfrmPattern_r11subframePatternTDD_r11subframeConfig0_r11 subframeConfig0_r11;
  NhuIDC_SubfrmPattern_r11subframePatternTDD_r11subframeConfig1_5_r11 subframeConfig1_5_r11;
  NhuIDC_SubfrmPattern_r11subframePatternTDD_r11subframeConfig6_r11 subframeConfig6_r11;
 } val;
} NhuIDC_SubfrmPattern_r11subframePatternTDD_r11;

typedef struct NhuIDC_SubfrmPattern_r11
{
 TknU8 choice;
 union {
  NhuIDC_SubfrmPattern_r11subframePatternFDD_r11 subframePatternFDD_r11;
  NhuIDC_SubfrmPattern_r11subframePatternTDD_r11 subframePatternTDD_r11;
 } val;
} NhuIDC_SubfrmPattern_r11;

typedef struct NhuIDC_SubfrmPatternLst_r11
{
 TknU16 noComp;
 NhuIDC_SubfrmPattern_r11 *member;
}NhuIDC_SubfrmPatternLst_r11;


typedef enum enumNhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11
{
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11sf40Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11sf64Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11sf80Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11sf128Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11sf160Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11sf256Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11spare2Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11spare1Enum
} EnumNhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11;
typedef TknU32 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11;


typedef TknU32 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_Offset_r11;


typedef enum enumNhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11
{
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11sf20Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11sf30Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11sf40Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11sf60Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11sf80Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11sf100Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11spare2Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11spare1Enum
} EnumNhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11;
typedef TknU32 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11;

typedef struct NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11
{
 TknPres pres;
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11 drx_CycleLength_r11;
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_Offset_r11 drx_Offset_r11;
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11 drx_ActiveTime_r11;
} NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11;

typedef struct NhuTDM_AssistanceInfo_r11
{
 TknU8 choice;
 union {
  NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11 drx_AssistanceInfo_r11;
  NhuIDC_SubfrmPatternLst_r11 idc_SubfrmPatternLst_r11;
 } val;
} NhuTDM_AssistanceInfo_r11;


typedef TknStrOSXL NhuInDeviceCoexInd_r11_IEslateNonCriticalExtn;
typedef struct NhuInDeviceCoexInd_r11_IEsnonCriticalExtn
{
 TknPres pres;
} NhuInDeviceCoexInd_r11_IEsnonCriticalExtn;

typedef struct NhuInDeviceCoexInd_r11_IEs
{
 TknPres pres;
 NhuAffectedCarrierFreqLst_r11 affectedCarrierFreqLst_r11;
 NhuTDM_AssistanceInfo_r11 tdm_AssistanceInfo_r11;
 NhuInDeviceCoexInd_r11_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuInDeviceCoexInd_r11_IEsnonCriticalExtn nonCriticalExtn;
} NhuInDeviceCoexInd_r11_IEs;

typedef struct NhuInDeviceCoexInd_r11criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuInDeviceCoexInd_r11_IEs inDeviceCoexInd_r11;
 } val;
} NhuInDeviceCoexInd_r11criticalExtnsc1;

typedef struct NhuInDeviceCoexInd_r11criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuInDeviceCoexInd_r11criticalExtnscriticalExtnsFuture;

typedef struct NhuInDeviceCoexInd_r11criticalExtns
{
 TknU8 choice;
 union {
  NhuInDeviceCoexInd_r11criticalExtnsc1 c1;
  NhuInDeviceCoexInd_r11criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuInDeviceCoexInd_r11criticalExtns;

typedef struct NhuInDeviceCoexInd_r11
{
 TknPres pres;
 NhuInDeviceCoexInd_r11criticalExtns criticalExtns;
} NhuInDeviceCoexInd_r11;

typedef struct NhuCarrierFreqLstMBMS_r11
{
 TknU16 noComp;
 NhuARFCN_ValueEUTRA_r9 *member;
}NhuCarrierFreqLstMBMS_r11;


typedef enum enumNhuMBMSInterestInd_r11_IEsmbms_Priority_r11
{
 NhuMBMSInterestInd_r11_IEsmbms_Priority_r11trueEnum
} EnumNhuMBMSInterestInd_r11_IEsmbms_Priority_r11;
typedef TknU32 NhuMBMSInterestInd_r11_IEsmbms_Priority_r11;


typedef TknStrOSXL NhuMBMSInterestInd_r11_IEslateNonCriticalExtn;
typedef struct NhuMBMSInterestInd_r11_IEsnonCriticalExtn
{
 TknPres pres;
} NhuMBMSInterestInd_r11_IEsnonCriticalExtn;

typedef struct NhuMBMSInterestInd_r11_IEs
{
 TknPres pres;
 NhuCarrierFreqLstMBMS_r11 mbms_FreqLst_r11;
 NhuMBMSInterestInd_r11_IEsmbms_Priority_r11 mbms_Priority_r11;
 NhuMBMSInterestInd_r11_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuMBMSInterestInd_r11_IEsnonCriticalExtn nonCriticalExtn;
} NhuMBMSInterestInd_r11_IEs;

typedef struct NhuMBMSInterestInd_r11criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuMBMSInterestInd_r11_IEs interestInd_r11;
 } val;
} NhuMBMSInterestInd_r11criticalExtnsc1;

typedef struct NhuMBMSInterestInd_r11criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuMBMSInterestInd_r11criticalExtnscriticalExtnsFuture;

typedef struct NhuMBMSInterestInd_r11criticalExtns
{
 TknU8 choice;
 union {
  NhuMBMSInterestInd_r11criticalExtnsc1 c1;
  NhuMBMSInterestInd_r11criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuMBMSInterestInd_r11criticalExtns;

typedef struct NhuMBMSInterestInd_r11
{
 TknPres pres;
 NhuMBMSInterestInd_r11criticalExtns criticalExtns;
} NhuMBMSInterestInd_r11;

typedef struct NhuUL_DCCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuCSFBParamsRqstCDMA2000 csfbParamsRqstCDMA2000;
  NhuMeasurementReport measurementReport;
  NhuRRCConRecfgnCompl rrcConRecfgnCompl;
  NhuRRCConReestbCompl rrcConReestbCompl;
  NhuRRCConSetupCompl rrcConSetupCompl;
  NhuSecModeCompl securityModeCompl;
  NhuSecModeFail securityModeFail;
  NhuUECapInfo ueCapInfo;
  NhuULHovrPrepTfr ulHovrPrepTfr;
  NhuULInfoTfr ulInfoTfr;
  NhuCounterCheckRsp counterCheckRsp;
  NhuUEInfoRsp_r9 ueInfoRsp_r9;
  NhuProximityInd_r9 proximityInd_r9;
  NhuRNRecfgnCompl_r10 rnRecfgnCompl_r10;
  NhuMBMSCountingRsp_r10 mbmsCountingRsp_r10;
  NhuInterFreqRSTDMeasurementInd_r10 interFreqRSTDMeasurementInd_r10;
 } val;
} NhuUL_DCCH_MsgTypc1;

typedef struct NhuUL_DCCH_MsgTypmessageClassExtnc2
{
 TknU8 choice;
 union {
  NhuUEAssistanceInfo_r11 ueAssistanceInfo_r11;
  NhuInDeviceCoexInd_r11 inDeviceCoexInd_r11;
  NhuMBMSInterestInd_r11 mbmsInterestInd_r11;
 } val;
} NhuUL_DCCH_MsgTypmessageClassExtnc2;

typedef struct NhuUL_DCCH_MsgTypmessageClassExtnmessageClassExtnFuture_r11
{
 TknPres pres;
} NhuUL_DCCH_MsgTypmessageClassExtnmessageClassExtnFuture_r11;

typedef struct NhuUL_DCCH_MsgTypmessageClassExtn
{
 TknU8 choice;
 union {
  NhuUL_DCCH_MsgTypmessageClassExtnc2 c2;
  NhuUL_DCCH_MsgTypmessageClassExtnmessageClassExtnFuture_r11 messageClassExtnFuture_r11;
 } val;
} NhuUL_DCCH_MsgTypmessageClassExtn;

typedef struct NhuUL_DCCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuUL_DCCH_MsgTypc1 c1;
  NhuUL_DCCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuUL_DCCH_MsgTyp;

typedef struct NhuUL_DCCH_Msg
{
 TknPres pres;
 NhuUL_DCCH_MsgTyp message;
} NhuUL_DCCH_Msg;

typedef struct NhuRedirectedCarrierInfo_v9e0
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 eutra_v9e0;
} NhuRedirectedCarrierInfo_v9e0;

typedef struct NhuFreqPriorityEUTRA_v9e0
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 carrierFreq_v9e0;
} NhuFreqPriorityEUTRA_v9e0;

typedef struct NhuIdleModeMobilityCntrlInfo_v9e0freqPriorityLstEUTRA_v9e0
{
 TknU16 noComp;
 NhuFreqPriorityEUTRA_v9e0 *member;
}NhuIdleModeMobilityCntrlInfo_v9e0freqPriorityLstEUTRA_v9e0;

typedef struct NhuIdleModeMobilityCntrlInfo_v9e0
{
 TknPres pres;
 NhuIdleModeMobilityCntrlInfo_v9e0freqPriorityLstEUTRA_v9e0 freqPriorityLstEUTRA_v9e0;
} NhuIdleModeMobilityCntrlInfo_v9e0;

typedef struct NhuRRCConRls_v9e0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConRls_v9e0_IEsnonCriticalExtn;

typedef struct NhuRRCConRls_v9e0_IEs
{
 TknPres pres;
 NhuRedirectedCarrierInfo_v9e0 redirectedCarrierInfo_v9e0;
 NhuIdleModeMobilityCntrlInfo_v9e0 idleModeMobilityCntrlInfo_v9e0;
 NhuRRCConRls_v9e0_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConRls_v9e0_IEs;

typedef struct NhuMultiBandInfoLst
{
 TknU16 noComp;
 NhuFreqBandIndicator *member;
}NhuMultiBandInfoLst;


typedef TknU32 NhuFreqBandIndicator_v9e0;

typedef struct NhuMultiBandInfo_v9e0
{
 TknPres pres;
 NhuFreqBandIndicator_v9e0 freqBandIndicator_v9e0;
} NhuMultiBandInfo_v9e0;

typedef struct NhuMultiBandInfoLst_v9e0
{
 TknU16 noComp;
 NhuMultiBandInfo_v9e0 *member;
}NhuMultiBandInfoLst_v9e0;

typedef struct NhuSysInfoBlockTyp1_v9e0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSysInfoBlockTyp1_v9e0_IEsnonCriticalExtn;

typedef struct NhuSysInfoBlockTyp1_v9e0_IEs
{
 TknPres pres;
 NhuFreqBandIndicator_v9e0 freqBandIndicator_v9e0;
 NhuMultiBandInfoLst_v9e0 multiBandInfoLst_v9e0;
 NhuSysInfoBlockTyp1_v9e0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSysInfoBlockTyp1_v9e0_IEs;

typedef struct NhuSysInfoBlockTyp1_v8h0_IEs
{
 TknPres pres;
 NhuMultiBandInfoLst multiBandInfoLst;
 NhuSysInfoBlockTyp1_v9e0_IEs nonCriticalExtn;
} NhuSysInfoBlockTyp1_v8h0_IEs;

typedef struct NhuRLF_Report_v9e0
{
 TknPres pres;
 NhuMeasResultLst2EUTRA_v9e0 measResultLstEUTRA_v9e0;
} NhuRLF_Report_v9e0;

typedef struct NhuUEInfoRsp_v9e0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUEInfoRsp_v9e0_IEsnonCriticalExtn;

typedef struct NhuUEInfoRsp_v9e0_IEs
{
 TknPres pres;
 NhuRLF_Report_v9e0 rlf_Report_v9e0;
 NhuUEInfoRsp_v9e0_IEsnonCriticalExtn nonCriticalExtn;
} NhuUEInfoRsp_v9e0_IEs;

typedef struct NhuSysInfoBlockTyp2_v9e0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSysInfoBlockTyp2_v9e0_IEsnonCriticalExtn;

typedef struct NhuSysInfoBlockTyp2_v9e0_IEs
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 ul_CarrierFreq_v9e0;
 NhuSysInfoBlockTyp2_v9e0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSysInfoBlockTyp2_v9e0_IEs;

typedef struct NhuSysInfoBlockTyp2_v8h0_IEsmultiBandInfoLst
{
 TknU16 noComp;
 NhuAdditionalSpectrumEmission *member;
}NhuSysInfoBlockTyp2_v8h0_IEsmultiBandInfoLst;

typedef struct NhuSysInfoBlockTyp2_v8h0_IEs
{
 TknPres pres;
 NhuSysInfoBlockTyp2_v8h0_IEsmultiBandInfoLst multiBandInfoLst;
 NhuSysInfoBlockTyp2_v9e0_IEs nonCriticalExtn;
} NhuSysInfoBlockTyp2_v8h0_IEs;

typedef struct NhuInterFreqCarrierFreqInfo_v8h0
{
 TknPres pres;
 NhuMultiBandInfoLst multiBandInfoLst;
} NhuInterFreqCarrierFreqInfo_v8h0;

typedef struct NhuInterFreqCarrierFreqInfo_v9e0
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 dl_CarrierFreq_v9e0;
 NhuMultiBandInfoLst_v9e0 multiBandInfoLst_v9e0;
} NhuInterFreqCarrierFreqInfo_v9e0;

typedef struct NhuSysInfoBlockTyp5_v9e0_IEsinterFreqCarrierFreqLst_v9e0
{
 TknU16 noComp;
 NhuInterFreqCarrierFreqInfo_v9e0 *member;
}NhuSysInfoBlockTyp5_v9e0_IEsinterFreqCarrierFreqLst_v9e0;

typedef struct NhuSysInfoBlockTyp5_v9e0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSysInfoBlockTyp5_v9e0_IEsnonCriticalExtn;

typedef struct NhuSysInfoBlockTyp5_v9e0_IEs
{
 TknPres pres;
 NhuSysInfoBlockTyp5_v9e0_IEsinterFreqCarrierFreqLst_v9e0 interFreqCarrierFreqLst_v9e0;
 NhuSysInfoBlockTyp5_v9e0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSysInfoBlockTyp5_v9e0_IEs;

typedef struct NhuSysInfoBlockTyp5_v8h0_IEsinterFreqCarrierFreqLst_v8h0
{
 TknU16 noComp;
 NhuInterFreqCarrierFreqInfo_v8h0 *member;
}NhuSysInfoBlockTyp5_v8h0_IEsinterFreqCarrierFreqLst_v8h0;

typedef struct NhuSysInfoBlockTyp5_v8h0_IEs
{
 TknPres pres;
 NhuSysInfoBlockTyp5_v8h0_IEsinterFreqCarrierFreqLst_v8h0 interFreqCarrierFreqLst_v8h0;
 NhuSysInfoBlockTyp5_v9e0_IEs nonCriticalExtn;
} NhuSysInfoBlockTyp5_v8h0_IEs;


typedef TknU32 NhuFreqBandIndicator_UTRA_FDD;

typedef struct NhuCarrierFreqInfoUTRA_FDD_v8h0multiBandInfoLst
{
 TknU16 noComp;
 NhuFreqBandIndicator_UTRA_FDD *member;
}NhuCarrierFreqInfoUTRA_FDD_v8h0multiBandInfoLst;

typedef struct NhuCarrierFreqInfoUTRA_FDD_v8h0
{
 TknPres pres;
 NhuCarrierFreqInfoUTRA_FDD_v8h0multiBandInfoLst multiBandInfoLst;
} NhuCarrierFreqInfoUTRA_FDD_v8h0;

typedef struct NhuSysInfoBlockTyp6_v8h0_IEscarrierFreqLstUTRA_FDD_v8h0
{
 TknU16 noComp;
 NhuCarrierFreqInfoUTRA_FDD_v8h0 *member;
}NhuSysInfoBlockTyp6_v8h0_IEscarrierFreqLstUTRA_FDD_v8h0;

typedef struct NhuSysInfoBlockTyp6_v8h0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSysInfoBlockTyp6_v8h0_IEsnonCriticalExtn;

typedef struct NhuSysInfoBlockTyp6_v8h0_IEs
{
 TknPres pres;
 NhuSysInfoBlockTyp6_v8h0_IEscarrierFreqLstUTRA_FDD_v8h0 carrierFreqLstUTRA_FDD_v8h0;
 NhuSysInfoBlockTyp6_v8h0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSysInfoBlockTyp6_v8h0_IEs;


typedef enum enumNhuAccessStratumRls
{
 NhuAccessStratumRlsrel8Enum,
 NhuAccessStratumRlsrel9Enum,
 NhuAccessStratumRlsrel10Enum,
 NhuAccessStratumRlsrel11Enum,
 NhuAccessStratumRlsspare4Enum,
 NhuAccessStratumRlsspare3Enum,
 NhuAccessStratumRlsspare2Enum,
 NhuAccessStratumRlsspare1Enum
} EnumNhuAccessStratumRls;
typedef TknU32 NhuAccessStratumRls;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0001;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0002;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0003;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0004;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0006;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0101;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0102;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0103;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0104;

typedef struct NhuPDCP_ParamssupportedROHC_Profiles
{
 TknPres pres;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0001 profile0x0001;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0002 profile0x0002;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0003 profile0x0003;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0004 profile0x0004;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0006 profile0x0006;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0101 profile0x0101;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0102 profile0x0102;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0103 profile0x0103;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0104 profile0x0104;
} NhuPDCP_ParamssupportedROHC_Profiles;


typedef enum enumNhuPDCP_ParamsmaxNumberROHC_CtxtSessions
{
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs2Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs4Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs8Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs12Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs16Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs24Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs32Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs48Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs64Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs128Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs256Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs512Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs1024Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs16384Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionsspare2Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionsspare1Enum
} EnumNhuPDCP_ParamsmaxNumberROHC_CtxtSessions;
typedef TknU32 NhuPDCP_ParamsmaxNumberROHC_CtxtSessions;

typedef struct NhuPDCP_Params
{
 TknPres pres;
 NhuPDCP_ParamssupportedROHC_Profiles supportedROHC_Profiles;
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessions maxNumberROHC_CtxtSessions;
} NhuPDCP_Params;


typedef TknU8 NhuPhyLyrParamsue_TxAntennaSelectionSupp;


typedef TknU8 NhuPhyLyrParamsue_SpecificRefSigsSupp;

typedef struct NhuPhyLyrParams
{
 TknPres pres;
 NhuPhyLyrParamsue_TxAntennaSelectionSupp ue_TxAntennaSelectionSupp;
 NhuPhyLyrParamsue_SpecificRefSigsSupp ue_SpecificRefSigsSupp;
} NhuPhyLyrParams;


typedef TknU8 NhuSuppBandEUTRAhalfDuplex;

typedef struct NhuSuppBandEUTRA
{
 TknPres pres;
 NhuFreqBandIndicator bandEUTRA;
 NhuSuppBandEUTRAhalfDuplex halfDuplex;
} NhuSuppBandEUTRA;

typedef struct NhuSuppBandLstEUTRA
{
 TknU16 noComp;
 NhuSuppBandEUTRA *member;
}NhuSuppBandLstEUTRA;

typedef struct NhuRF_Params
{
 TknPres pres;
 NhuSuppBandLstEUTRA supportedBandLstEUTRA;
} NhuRF_Params;


typedef TknU8 NhuInterFreqBandInfointerFreqNeedForGaps;

typedef struct NhuInterFreqBandInfo
{
 TknPres pres;
 NhuInterFreqBandInfointerFreqNeedForGaps interFreqNeedForGaps;
} NhuInterFreqBandInfo;

typedef struct NhuInterFreqBandLst
{
 TknU16 noComp;
 NhuInterFreqBandInfo *member;
}NhuInterFreqBandLst;


typedef TknU8 NhuInterRAT_BandInfointerRAT_NeedForGaps;

typedef struct NhuInterRAT_BandInfo
{
 TknPres pres;
 NhuInterRAT_BandInfointerRAT_NeedForGaps interRAT_NeedForGaps;
} NhuInterRAT_BandInfo;

typedef struct NhuInterRAT_BandLst
{
 TknU16 noComp;
 NhuInterRAT_BandInfo *member;
}NhuInterRAT_BandLst;

typedef struct NhuBandInfoEUTRA
{
 TknPres pres;
 NhuInterFreqBandLst interFreqBandLst;
 NhuInterRAT_BandLst interRAT_BandLst;
} NhuBandInfoEUTRA;

typedef struct NhuBandLstEUTRA
{
 TknU16 noComp;
 NhuBandInfoEUTRA *member;
}NhuBandLstEUTRA;

typedef struct NhuMeasParams
{
 TknPres pres;
 NhuBandLstEUTRA bandLstEUTRA;
} NhuMeasParams;


typedef enum enumNhuSuppBandUTRA_FDD
{
 NhuSuppBandUTRA_FDDbandIEnum,
 NhuSuppBandUTRA_FDDbandIIEnum,
 NhuSuppBandUTRA_FDDbandIIIEnum,
 NhuSuppBandUTRA_FDDbandIVEnum,
 NhuSuppBandUTRA_FDDbandVEnum,
 NhuSuppBandUTRA_FDDbandVIEnum,
 NhuSuppBandUTRA_FDDbandVIIEnum,
 NhuSuppBandUTRA_FDDbandVIIIEnum,
 NhuSuppBandUTRA_FDDbandIXEnum,
 NhuSuppBandUTRA_FDDbandXEnum,
 NhuSuppBandUTRA_FDDbandXIEnum,
 NhuSuppBandUTRA_FDDbandXIIEnum,
 NhuSuppBandUTRA_FDDbandXIIIEnum,
 NhuSuppBandUTRA_FDDbandXIVEnum,
 NhuSuppBandUTRA_FDDbandXVEnum,
 NhuSuppBandUTRA_FDDbandXVIEnum,
 NhuSuppBandUTRA_FDDbandXVII_8a0Enum,
 NhuSuppBandUTRA_FDDbandXVIII_8a0Enum,
 NhuSuppBandUTRA_FDDbandXIX_8a0Enum,
 NhuSuppBandUTRA_FDDbandXX_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXI_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXII_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXIII_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXIV_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXV_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXVI_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXVII_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXVIII_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXIX_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXX_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXXI_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXXII_8a0Enum
} EnumNhuSuppBandUTRA_FDD;
typedef TknU32 NhuSuppBandUTRA_FDD;

typedef struct NhuSuppBandLstUTRA_FDD
{
 TknU16 noComp;
 NhuSuppBandUTRA_FDD *member;
}NhuSuppBandLstUTRA_FDD;

typedef struct NhuIRAT_ParamsUTRA_FDD
{
 TknPres pres;
 NhuSuppBandLstUTRA_FDD supportedBandLstUTRA_FDD;
} NhuIRAT_ParamsUTRA_FDD;


typedef enum enumNhuSuppBandUTRA_TDD128
{
 NhuSuppBandUTRA_TDD128aEnum,
 NhuSuppBandUTRA_TDD128bEnum,
 NhuSuppBandUTRA_TDD128cEnum,
 NhuSuppBandUTRA_TDD128dEnum,
 NhuSuppBandUTRA_TDD128eEnum,
 NhuSuppBandUTRA_TDD128fEnum,
 NhuSuppBandUTRA_TDD128gEnum,
 NhuSuppBandUTRA_TDD128hEnum,
 NhuSuppBandUTRA_TDD128iEnum,
 NhuSuppBandUTRA_TDD128jEnum,
 NhuSuppBandUTRA_TDD128kEnum,
 NhuSuppBandUTRA_TDD128lEnum,
 NhuSuppBandUTRA_TDD128mEnum,
 NhuSuppBandUTRA_TDD128nEnum,
 NhuSuppBandUTRA_TDD128oEnum,
 NhuSuppBandUTRA_TDD128pEnum
} EnumNhuSuppBandUTRA_TDD128;
typedef TknU32 NhuSuppBandUTRA_TDD128;

typedef struct NhuSuppBandLstUTRA_TDD128
{
 TknU16 noComp;
 NhuSuppBandUTRA_TDD128 *member;
}NhuSuppBandLstUTRA_TDD128;

typedef struct NhuIRAT_ParamsUTRA_TDD128
{
 TknPres pres;
 NhuSuppBandLstUTRA_TDD128 supportedBandLstUTRA_TDD128;
} NhuIRAT_ParamsUTRA_TDD128;


typedef enum enumNhuSuppBandUTRA_TDD384
{
 NhuSuppBandUTRA_TDD384aEnum,
 NhuSuppBandUTRA_TDD384bEnum,
 NhuSuppBandUTRA_TDD384cEnum,
 NhuSuppBandUTRA_TDD384dEnum,
 NhuSuppBandUTRA_TDD384eEnum,
 NhuSuppBandUTRA_TDD384fEnum,
 NhuSuppBandUTRA_TDD384gEnum,
 NhuSuppBandUTRA_TDD384hEnum,
 NhuSuppBandUTRA_TDD384iEnum,
 NhuSuppBandUTRA_TDD384jEnum,
 NhuSuppBandUTRA_TDD384kEnum,
 NhuSuppBandUTRA_TDD384lEnum,
 NhuSuppBandUTRA_TDD384mEnum,
 NhuSuppBandUTRA_TDD384nEnum,
 NhuSuppBandUTRA_TDD384oEnum,
 NhuSuppBandUTRA_TDD384pEnum
} EnumNhuSuppBandUTRA_TDD384;
typedef TknU32 NhuSuppBandUTRA_TDD384;

typedef struct NhuSuppBandLstUTRA_TDD384
{
 TknU16 noComp;
 NhuSuppBandUTRA_TDD384 *member;
}NhuSuppBandLstUTRA_TDD384;

typedef struct NhuIRAT_ParamsUTRA_TDD384
{
 TknPres pres;
 NhuSuppBandLstUTRA_TDD384 supportedBandLstUTRA_TDD384;
} NhuIRAT_ParamsUTRA_TDD384;


typedef enum enumNhuSuppBandUTRA_TDD768
{
 NhuSuppBandUTRA_TDD768aEnum,
 NhuSuppBandUTRA_TDD768bEnum,
 NhuSuppBandUTRA_TDD768cEnum,
 NhuSuppBandUTRA_TDD768dEnum,
 NhuSuppBandUTRA_TDD768eEnum,
 NhuSuppBandUTRA_TDD768fEnum,
 NhuSuppBandUTRA_TDD768gEnum,
 NhuSuppBandUTRA_TDD768hEnum,
 NhuSuppBandUTRA_TDD768iEnum,
 NhuSuppBandUTRA_TDD768jEnum,
 NhuSuppBandUTRA_TDD768kEnum,
 NhuSuppBandUTRA_TDD768lEnum,
 NhuSuppBandUTRA_TDD768mEnum,
 NhuSuppBandUTRA_TDD768nEnum,
 NhuSuppBandUTRA_TDD768oEnum,
 NhuSuppBandUTRA_TDD768pEnum
} EnumNhuSuppBandUTRA_TDD768;
typedef TknU32 NhuSuppBandUTRA_TDD768;

typedef struct NhuSuppBandLstUTRA_TDD768
{
 TknU16 noComp;
 NhuSuppBandUTRA_TDD768 *member;
}NhuSuppBandLstUTRA_TDD768;

typedef struct NhuIRAT_ParamsUTRA_TDD768
{
 TknPres pres;
 NhuSuppBandLstUTRA_TDD768 supportedBandLstUTRA_TDD768;
} NhuIRAT_ParamsUTRA_TDD768;


typedef enum enumNhuSuppBandGERAN
{
 NhuSuppBandGERANgsm450Enum,
 NhuSuppBandGERANgsm480Enum,
 NhuSuppBandGERANgsm710Enum,
 NhuSuppBandGERANgsm750Enum,
 NhuSuppBandGERANgsm810Enum,
 NhuSuppBandGERANgsm850Enum,
 NhuSuppBandGERANgsm900PEnum,
 NhuSuppBandGERANgsm900EEnum,
 NhuSuppBandGERANgsm900REnum,
 NhuSuppBandGERANgsm1800Enum,
 NhuSuppBandGERANgsm1900Enum,
 NhuSuppBandGERANspare5Enum,
 NhuSuppBandGERANspare4Enum,
 NhuSuppBandGERANspare3Enum,
 NhuSuppBandGERANspare2Enum,
 NhuSuppBandGERANspare1Enum
} EnumNhuSuppBandGERAN;
typedef TknU32 NhuSuppBandGERAN;

typedef struct NhuSuppBandLstGERAN
{
 TknU16 noComp;
 NhuSuppBandGERAN *member;
}NhuSuppBandLstGERAN;


typedef TknU8 NhuIRAT_ParamsGERANinterRAT_PS_HO_ToGERAN;

typedef struct NhuIRAT_ParamsGERAN
{
 TknPres pres;
 NhuSuppBandLstGERAN supportedBandLstGERAN;
 NhuIRAT_ParamsGERANinterRAT_PS_HO_ToGERAN interRAT_PS_HO_ToGERAN;
} NhuIRAT_ParamsGERAN;

typedef struct NhuSuppBandLstHRPD
{
 TknU16 noComp;
 NhuBandclassCDMA2000 *member;
}NhuSuppBandLstHRPD;


typedef enum enumNhuIRAT_ParamsCDMA2000_HRPDtx_ConfigHRPD
{
 NhuIRAT_ParamsCDMA2000_HRPDtx_ConfigHRPDsingleEnum,
 NhuIRAT_ParamsCDMA2000_HRPDtx_ConfigHRPDdualEnum
} EnumNhuIRAT_ParamsCDMA2000_HRPDtx_ConfigHRPD;
typedef TknU32 NhuIRAT_ParamsCDMA2000_HRPDtx_ConfigHRPD;


typedef enum enumNhuIRAT_ParamsCDMA2000_HRPDrx_ConfigHRPD
{
 NhuIRAT_ParamsCDMA2000_HRPDrx_ConfigHRPDsingleEnum,
 NhuIRAT_ParamsCDMA2000_HRPDrx_ConfigHRPDdualEnum
} EnumNhuIRAT_ParamsCDMA2000_HRPDrx_ConfigHRPD;
typedef TknU32 NhuIRAT_ParamsCDMA2000_HRPDrx_ConfigHRPD;

typedef struct NhuIRAT_ParamsCDMA2000_HRPD
{
 TknPres pres;
 NhuSuppBandLstHRPD supportedBandLstHRPD;
 NhuIRAT_ParamsCDMA2000_HRPDtx_ConfigHRPD tx_ConfigHRPD;
 NhuIRAT_ParamsCDMA2000_HRPDrx_ConfigHRPD rx_ConfigHRPD;
} NhuIRAT_ParamsCDMA2000_HRPD;

typedef struct NhuSuppBandLst1XRTT
{
 TknU16 noComp;
 NhuBandclassCDMA2000 *member;
}NhuSuppBandLst1XRTT;


typedef enum enumNhuIRAT_ParamsCDMA2000_1XRTTtx_Config1XRTT
{
 NhuIRAT_ParamsCDMA2000_1XRTTtx_Config1XRTTsingleEnum,
 NhuIRAT_ParamsCDMA2000_1XRTTtx_Config1XRTTdualEnum
} EnumNhuIRAT_ParamsCDMA2000_1XRTTtx_Config1XRTT;
typedef TknU32 NhuIRAT_ParamsCDMA2000_1XRTTtx_Config1XRTT;


typedef enum enumNhuIRAT_ParamsCDMA2000_1XRTTrx_Config1XRTT
{
 NhuIRAT_ParamsCDMA2000_1XRTTrx_Config1XRTTsingleEnum,
 NhuIRAT_ParamsCDMA2000_1XRTTrx_Config1XRTTdualEnum
} EnumNhuIRAT_ParamsCDMA2000_1XRTTrx_Config1XRTT;
typedef TknU32 NhuIRAT_ParamsCDMA2000_1XRTTrx_Config1XRTT;

typedef struct NhuIRAT_ParamsCDMA2000_1XRTT
{
 TknPres pres;
 NhuSuppBandLst1XRTT supportedBandLst1XRTT;
 NhuIRAT_ParamsCDMA2000_1XRTTtx_Config1XRTT tx_Config1XRTT;
 NhuIRAT_ParamsCDMA2000_1XRTTrx_Config1XRTT rx_Config1XRTT;
} NhuIRAT_ParamsCDMA2000_1XRTT;


typedef enum enumNhuPhyLyrParams_v920enhancedDualLyrFDD_r9
{
 NhuPhyLyrParams_v920enhancedDualLyrFDD_r9supportedEnum
} EnumNhuPhyLyrParams_v920enhancedDualLyrFDD_r9;
typedef TknU32 NhuPhyLyrParams_v920enhancedDualLyrFDD_r9;


typedef enum enumNhuPhyLyrParams_v920enhancedDualLyrTDD_r9
{
 NhuPhyLyrParams_v920enhancedDualLyrTDD_r9supportedEnum
} EnumNhuPhyLyrParams_v920enhancedDualLyrTDD_r9;
typedef TknU32 NhuPhyLyrParams_v920enhancedDualLyrTDD_r9;

typedef struct NhuPhyLyrParams_v920
{
 TknPres pres;
 NhuPhyLyrParams_v920enhancedDualLyrFDD_r9 enhancedDualLyrFDD_r9;
 NhuPhyLyrParams_v920enhancedDualLyrTDD_r9 enhancedDualLyrTDD_r9;
} NhuPhyLyrParams_v920;


typedef enum enumNhuIRAT_ParamsGERAN_v920dtm_r9
{
 NhuIRAT_ParamsGERAN_v920dtm_r9supportedEnum
} EnumNhuIRAT_ParamsGERAN_v920dtm_r9;
typedef TknU32 NhuIRAT_ParamsGERAN_v920dtm_r9;


typedef enum enumNhuIRAT_ParamsGERAN_v920e_RedirectionGERAN_r9
{
 NhuIRAT_ParamsGERAN_v920e_RedirectionGERAN_r9supportedEnum
} EnumNhuIRAT_ParamsGERAN_v920e_RedirectionGERAN_r9;
typedef TknU32 NhuIRAT_ParamsGERAN_v920e_RedirectionGERAN_r9;

typedef struct NhuIRAT_ParamsGERAN_v920
{
 TknPres pres;
 NhuIRAT_ParamsGERAN_v920dtm_r9 dtm_r9;
 NhuIRAT_ParamsGERAN_v920e_RedirectionGERAN_r9 e_RedirectionGERAN_r9;
} NhuIRAT_ParamsGERAN_v920;


typedef enum enumNhuIRAT_ParamsUTRA_v920e_RedirectionUTRA_r9
{
 NhuIRAT_ParamsUTRA_v920e_RedirectionUTRA_r9supportedEnum
} EnumNhuIRAT_ParamsUTRA_v920e_RedirectionUTRA_r9;
typedef TknU32 NhuIRAT_ParamsUTRA_v920e_RedirectionUTRA_r9;

typedef struct NhuIRAT_ParamsUTRA_v920
{
 TknPres pres;
 NhuIRAT_ParamsUTRA_v920e_RedirectionUTRA_r9 e_RedirectionUTRA_r9;
} NhuIRAT_ParamsUTRA_v920;


typedef enum enumNhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_1XRTT_r9
{
 NhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_1XRTT_r9supportedEnum
} EnumNhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_1XRTT_r9;
typedef TknU32 NhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_1XRTT_r9;


typedef enum enumNhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_ConcPS_Mob1XRTT_r9
{
 NhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_ConcPS_Mob1XRTT_r9supportedEnum
} EnumNhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_ConcPS_Mob1XRTT_r9;
typedef TknU32 NhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_ConcPS_Mob1XRTT_r9;

typedef struct NhuIRAT_ParamsCDMA2000_1XRTT_v920
{
 TknPres pres;
 NhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_1XRTT_r9 e_CSFB_1XRTT_r9;
 NhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_ConcPS_Mob1XRTT_r9 e_CSFB_ConcPS_Mob1XRTT_r9;
} NhuIRAT_ParamsCDMA2000_1XRTT_v920;


typedef enum enumNhuCSG_ProximityIndParams_r9intraFreqProximityInd_r9
{
 NhuCSG_ProximityIndParams_r9intraFreqProximityInd_r9supportedEnum
} EnumNhuCSG_ProximityIndParams_r9intraFreqProximityInd_r9;
typedef TknU32 NhuCSG_ProximityIndParams_r9intraFreqProximityInd_r9;


typedef enum enumNhuCSG_ProximityIndParams_r9interFreqProximityInd_r9
{
 NhuCSG_ProximityIndParams_r9interFreqProximityInd_r9supportedEnum
} EnumNhuCSG_ProximityIndParams_r9interFreqProximityInd_r9;
typedef TknU32 NhuCSG_ProximityIndParams_r9interFreqProximityInd_r9;


typedef enum enumNhuCSG_ProximityIndParams_r9utran_ProximityInd_r9
{
 NhuCSG_ProximityIndParams_r9utran_ProximityInd_r9supportedEnum
} EnumNhuCSG_ProximityIndParams_r9utran_ProximityInd_r9;
typedef TknU32 NhuCSG_ProximityIndParams_r9utran_ProximityInd_r9;

typedef struct NhuCSG_ProximityIndParams_r9
{
 TknPres pres;
 NhuCSG_ProximityIndParams_r9intraFreqProximityInd_r9 intraFreqProximityInd_r9;
 NhuCSG_ProximityIndParams_r9interFreqProximityInd_r9 interFreqProximityInd_r9;
 NhuCSG_ProximityIndParams_r9utran_ProximityInd_r9 utran_ProximityInd_r9;
} NhuCSG_ProximityIndParams_r9;


typedef enum enumNhuNeighCellSI_AcquisitionParams_r9intraFreqSI_AcquisitionForHO_r9
{
 NhuNeighCellSI_AcquisitionParams_r9intraFreqSI_AcquisitionForHO_r9supportedEnum
} EnumNhuNeighCellSI_AcquisitionParams_r9intraFreqSI_AcquisitionForHO_r9;
typedef TknU32 NhuNeighCellSI_AcquisitionParams_r9intraFreqSI_AcquisitionForHO_r9;


typedef enum enumNhuNeighCellSI_AcquisitionParams_r9interFreqSI_AcquisitionForHO_r9
{
 NhuNeighCellSI_AcquisitionParams_r9interFreqSI_AcquisitionForHO_r9supportedEnum
} EnumNhuNeighCellSI_AcquisitionParams_r9interFreqSI_AcquisitionForHO_r9;
typedef TknU32 NhuNeighCellSI_AcquisitionParams_r9interFreqSI_AcquisitionForHO_r9;


typedef enum enumNhuNeighCellSI_AcquisitionParams_r9utran_SI_AcquisitionForHO_r9
{
 NhuNeighCellSI_AcquisitionParams_r9utran_SI_AcquisitionForHO_r9supportedEnum
} EnumNhuNeighCellSI_AcquisitionParams_r9utran_SI_AcquisitionForHO_r9;
typedef TknU32 NhuNeighCellSI_AcquisitionParams_r9utran_SI_AcquisitionForHO_r9;

typedef struct NhuNeighCellSI_AcquisitionParams_r9
{
 TknPres pres;
 NhuNeighCellSI_AcquisitionParams_r9intraFreqSI_AcquisitionForHO_r9 intraFreqSI_AcquisitionForHO_r9;
 NhuNeighCellSI_AcquisitionParams_r9interFreqSI_AcquisitionForHO_r9 interFreqSI_AcquisitionForHO_r9;
 NhuNeighCellSI_AcquisitionParams_r9utran_SI_AcquisitionForHO_r9 utran_SI_AcquisitionForHO_r9;
} NhuNeighCellSI_AcquisitionParams_r9;


typedef enum enumNhuSON_Params_r9rach_Report_r9
{
 NhuSON_Params_r9rach_Report_r9supportedEnum
} EnumNhuSON_Params_r9rach_Report_r9;
typedef TknU32 NhuSON_Params_r9rach_Report_r9;

typedef struct NhuSON_Params_r9
{
 TknPres pres;
 NhuSON_Params_r9rach_Report_r9 rach_Report_r9;
} NhuSON_Params_r9;


typedef enum enumNhuNonContiguousUL_RA_WithinCC_r10nonContiguousUL_RA_WithinCC_Info_r10
{
 NhuNonContiguousUL_RA_WithinCC_r10nonContiguousUL_RA_WithinCC_Info_r10supportedEnum
} EnumNhuNonContiguousUL_RA_WithinCC_r10nonContiguousUL_RA_WithinCC_Info_r10;
typedef TknU32 NhuNonContiguousUL_RA_WithinCC_r10nonContiguousUL_RA_WithinCC_Info_r10;

typedef struct NhuNonContiguousUL_RA_WithinCC_r10
{
 TknPres pres;
 NhuNonContiguousUL_RA_WithinCC_r10nonContiguousUL_RA_WithinCC_Info_r10 nonContiguousUL_RA_WithinCC_Info_r10;
} NhuNonContiguousUL_RA_WithinCC_r10;

typedef struct NhuNonContiguousUL_RA_WithinCC_Lst_r10
{
 TknU16 noComp;
 NhuNonContiguousUL_RA_WithinCC_r10 *member;
}NhuNonContiguousUL_RA_WithinCC_Lst_r10;


typedef enum enumNhuPhyLyrParams_v1020twoAntennaPortsForPUCCH_r10
{
 NhuPhyLyrParams_v1020twoAntennaPortsForPUCCH_r10supportedEnum
} EnumNhuPhyLyrParams_v1020twoAntennaPortsForPUCCH_r10;
typedef TknU32 NhuPhyLyrParams_v1020twoAntennaPortsForPUCCH_r10;


typedef enum enumNhuPhyLyrParams_v1020tm9_With_8Tx_FDD_r10
{
 NhuPhyLyrParams_v1020tm9_With_8Tx_FDD_r10supportedEnum
} EnumNhuPhyLyrParams_v1020tm9_With_8Tx_FDD_r10;
typedef TknU32 NhuPhyLyrParams_v1020tm9_With_8Tx_FDD_r10;


typedef enum enumNhuPhyLyrParams_v1020pmi_Disabling_r10
{
 NhuPhyLyrParams_v1020pmi_Disabling_r10supportedEnum
} EnumNhuPhyLyrParams_v1020pmi_Disabling_r10;
typedef TknU32 NhuPhyLyrParams_v1020pmi_Disabling_r10;


typedef enum enumNhuPhyLyrParams_v1020crossCarrierScheduling_r10
{
 NhuPhyLyrParams_v1020crossCarrierScheduling_r10supportedEnum
} EnumNhuPhyLyrParams_v1020crossCarrierScheduling_r10;
typedef TknU32 NhuPhyLyrParams_v1020crossCarrierScheduling_r10;


typedef enum enumNhuPhyLyrParams_v1020simultaneousPUCCH_PUSCH_r10
{
 NhuPhyLyrParams_v1020simultaneousPUCCH_PUSCH_r10supportedEnum
} EnumNhuPhyLyrParams_v1020simultaneousPUCCH_PUSCH_r10;
typedef TknU32 NhuPhyLyrParams_v1020simultaneousPUCCH_PUSCH_r10;


typedef enum enumNhuPhyLyrParams_v1020multiClusterPUSCH_WithinCC_r10
{
 NhuPhyLyrParams_v1020multiClusterPUSCH_WithinCC_r10supportedEnum
} EnumNhuPhyLyrParams_v1020multiClusterPUSCH_WithinCC_r10;
typedef TknU32 NhuPhyLyrParams_v1020multiClusterPUSCH_WithinCC_r10;

typedef struct NhuPhyLyrParams_v1020
{
 TknPres pres;
 NhuPhyLyrParams_v1020twoAntennaPortsForPUCCH_r10 twoAntennaPortsForPUCCH_r10;
 NhuPhyLyrParams_v1020tm9_With_8Tx_FDD_r10 tm9_With_8Tx_FDD_r10;
 NhuPhyLyrParams_v1020pmi_Disabling_r10 pmi_Disabling_r10;
 NhuPhyLyrParams_v1020crossCarrierScheduling_r10 crossCarrierScheduling_r10;
 NhuPhyLyrParams_v1020simultaneousPUCCH_PUSCH_r10 simultaneousPUCCH_PUSCH_r10;
 NhuPhyLyrParams_v1020multiClusterPUSCH_WithinCC_r10 multiClusterPUSCH_WithinCC_r10;
 NhuNonContiguousUL_RA_WithinCC_Lst_r10 nonContiguousUL_RA_WithinCC_Lst_r10;
} NhuPhyLyrParams_v1020;


typedef enum enumNhuCA_BandwidthClass_r10
{
 NhuCA_BandwidthClass_r10aEnum,
 NhuCA_BandwidthClass_r10bEnum,
 NhuCA_BandwidthClass_r10cEnum,
 NhuCA_BandwidthClass_r10dEnum,
 NhuCA_BandwidthClass_r10eEnum,
 NhuCA_BandwidthClass_r10fEnum
} EnumNhuCA_BandwidthClass_r10;
typedef TknU32 NhuCA_BandwidthClass_r10;


typedef enum enumNhuMIMO_CapUL_r10
{
 NhuMIMO_CapUL_r10twoLyrsEnum,
 NhuMIMO_CapUL_r10fourLyrsEnum
} EnumNhuMIMO_CapUL_r10;
typedef TknU32 NhuMIMO_CapUL_r10;

typedef struct NhuCA_MIMO_ParamsUL_r10
{
 TknPres pres;
 NhuCA_BandwidthClass_r10 ca_BandwidthClassUL_r10;
 NhuMIMO_CapUL_r10 supportedMIMO_CapUL_r10;
} NhuCA_MIMO_ParamsUL_r10;

typedef struct NhuBandParamsUL_r10
{
 TknU16 noComp;
 NhuCA_MIMO_ParamsUL_r10 *member;
}NhuBandParamsUL_r10;


typedef enum enumNhuMIMO_CapDL_r10
{
 NhuMIMO_CapDL_r10twoLyrsEnum,
 NhuMIMO_CapDL_r10fourLyrsEnum,
 NhuMIMO_CapDL_r10eightLyrsEnum
} EnumNhuMIMO_CapDL_r10;
typedef TknU32 NhuMIMO_CapDL_r10;

typedef struct NhuCA_MIMO_ParamsDL_r10
{
 TknPres pres;
 NhuCA_BandwidthClass_r10 ca_BandwidthClassDL_r10;
 NhuMIMO_CapDL_r10 supportedMIMO_CapDL_r10;
} NhuCA_MIMO_ParamsDL_r10;

typedef struct NhuBandParamsDL_r10
{
 TknU16 noComp;
 NhuCA_MIMO_ParamsDL_r10 *member;
}NhuBandParamsDL_r10;

typedef struct NhuBandParams_r10
{
 TknPres pres;
 NhuFreqBandIndicator bandEUTRA_r10;
 NhuBandParamsUL_r10 bandParamsUL_r10;
 NhuBandParamsDL_r10 bandParamsDL_r10;
} NhuBandParams_r10;

typedef struct NhuBandCombinationParams_r10
{
 TknU16 noComp;
 NhuBandParams_r10 *member;
}NhuBandCombinationParams_r10;

typedef struct NhuSuppBandCombination_r10
{
 TknU16 noComp;
 NhuBandCombinationParams_r10 *member;
}NhuSuppBandCombination_r10;

typedef struct NhuRF_Params_v1020
{
 TknPres pres;
 NhuSuppBandCombination_r10 supportedBandCombination_r10;
} NhuRF_Params_v1020;

typedef struct NhuBandCombinationLstEUTRA_r10
{
 TknU16 noComp;
 NhuBandInfoEUTRA *member;
}NhuBandCombinationLstEUTRA_r10;

typedef struct NhuMeasParams_v1020
{
 TknPres pres;
 NhuBandCombinationLstEUTRA_r10 bandCombinationLstEUTRA_r10;
} NhuMeasParams_v1020;


typedef enum enumNhuIRAT_ParamsCDMA2000_1XRTT_v1020e_CSFB_dual_1XRTT_r10
{
 NhuIRAT_ParamsCDMA2000_1XRTT_v1020e_CSFB_dual_1XRTT_r10supportedEnum
} EnumNhuIRAT_ParamsCDMA2000_1XRTT_v1020e_CSFB_dual_1XRTT_r10;
typedef TknU32 NhuIRAT_ParamsCDMA2000_1XRTT_v1020e_CSFB_dual_1XRTT_r10;

typedef struct NhuIRAT_ParamsCDMA2000_1XRTT_v1020
{
 TknPres pres;
 NhuIRAT_ParamsCDMA2000_1XRTT_v1020e_CSFB_dual_1XRTT_r10 e_CSFB_dual_1XRTT_r10;
} NhuIRAT_ParamsCDMA2000_1XRTT_v1020;


typedef enum enumNhuUE_BasedNetwPerfMeasParams_r10loggedMeasurementsIdle_r10
{
 NhuUE_BasedNetwPerfMeasParams_r10loggedMeasurementsIdle_r10supportedEnum
} EnumNhuUE_BasedNetwPerfMeasParams_r10loggedMeasurementsIdle_r10;
typedef TknU32 NhuUE_BasedNetwPerfMeasParams_r10loggedMeasurementsIdle_r10;


typedef enum enumNhuUE_BasedNetwPerfMeasParams_r10standaloneGNSS_Loc_r10
{
 NhuUE_BasedNetwPerfMeasParams_r10standaloneGNSS_Loc_r10supportedEnum
} EnumNhuUE_BasedNetwPerfMeasParams_r10standaloneGNSS_Loc_r10;
typedef TknU32 NhuUE_BasedNetwPerfMeasParams_r10standaloneGNSS_Loc_r10;

typedef struct NhuUE_BasedNetwPerfMeasParams_r10
{
 TknPres pres;
 NhuUE_BasedNetwPerfMeasParams_r10loggedMeasurementsIdle_r10 loggedMeasurementsIdle_r10;
 NhuUE_BasedNetwPerfMeasParams_r10standaloneGNSS_Loc_r10 standaloneGNSS_Loc_r10;
} NhuUE_BasedNetwPerfMeasParams_r10;


typedef enum enumNhuIRAT_ParamsUTRA_TDD_v1020e_RedirectionUTRA_TDD_r10
{
 NhuIRAT_ParamsUTRA_TDD_v1020e_RedirectionUTRA_TDD_r10supportedEnum
} EnumNhuIRAT_ParamsUTRA_TDD_v1020e_RedirectionUTRA_TDD_r10;
typedef TknU32 NhuIRAT_ParamsUTRA_TDD_v1020e_RedirectionUTRA_TDD_r10;

typedef struct NhuIRAT_ParamsUTRA_TDD_v1020
{
 TknPres pres;
 NhuIRAT_ParamsUTRA_TDD_v1020e_RedirectionUTRA_TDD_r10 e_RedirectionUTRA_TDD_r10;
} NhuIRAT_ParamsUTRA_TDD_v1020;


typedef enum enumNhuOTDOA_PositioningCapabilities_r10otdoa_UE_Assisted_r10
{
 NhuOTDOA_PositioningCapabilities_r10otdoa_UE_Assisted_r10supportedEnum
} EnumNhuOTDOA_PositioningCapabilities_r10otdoa_UE_Assisted_r10;
typedef TknU32 NhuOTDOA_PositioningCapabilities_r10otdoa_UE_Assisted_r10;


typedef enum enumNhuOTDOA_PositioningCapabilities_r10interFreqRSTD_Measurement_r10
{
 NhuOTDOA_PositioningCapabilities_r10interFreqRSTD_Measurement_r10supportedEnum
} EnumNhuOTDOA_PositioningCapabilities_r10interFreqRSTD_Measurement_r10;
typedef TknU32 NhuOTDOA_PositioningCapabilities_r10interFreqRSTD_Measurement_r10;

typedef struct NhuOTDOA_PositioningCapabilities_r10
{
 TknPres pres;
 NhuOTDOA_PositioningCapabilities_r10otdoa_UE_Assisted_r10 otdoa_UE_Assisted_r10;
 NhuOTDOA_PositioningCapabilities_r10interFreqRSTD_Measurement_r10 interFreqRSTD_Measurement_r10;
} NhuOTDOA_PositioningCapabilities_r10;


typedef TknStrBSXL NhuUE_EUTRA_CapAddXDD_Mode_v1060featureGroupIndRel10_v1060;
typedef struct NhuUE_EUTRA_CapAddXDD_Mode_v1060extaddgrp_1
{
 TknPres pres;
 NhuOTDOA_PositioningCapabilities_r10 otdoa_PositioningCapabilities_r10;
} NhuUE_EUTRA_CapAddXDD_Mode_v1060extaddgrp_1;

typedef struct NhuUE_EUTRA_CapAddXDD_Mode_v1060
{
 TknPres pres;
 NhuPhyLyrParams_v1020 phyLyrParams_v1060;
 NhuUE_EUTRA_CapAddXDD_Mode_v1060featureGroupIndRel10_v1060 featureGroupIndRel10_v1060;
 NhuIRAT_ParamsCDMA2000_1XRTT_v1020 interRAT_ParamsCDMA2000_v1060;
 NhuIRAT_ParamsUTRA_TDD_v1020 interRAT_ParamsUTRA_TDD_v1060;
 NhuUE_EUTRA_CapAddXDD_Mode_v1060extaddgrp_1 extaddgrp_1;
} NhuUE_EUTRA_CapAddXDD_Mode_v1060;


typedef TknStrBSXL NhuSuppBandwidthCombinationSet_r10;
typedef struct NhuBandCombinationParamsExt_r10
{
 TknPres pres;
 NhuSuppBandwidthCombinationSet_r10 supportedBandwidthCombinationSet_r10;
} NhuBandCombinationParamsExt_r10;

typedef struct NhuSuppBandCombinationExt_r10
{
 TknU16 noComp;
 NhuBandCombinationParamsExt_r10 *member;
}NhuSuppBandCombinationExt_r10;

typedef struct NhuRF_Params_v1060
{
 TknPres pres;
 NhuSuppBandCombinationExt_r10 supportedBandCombinationExt_r10;
} NhuRF_Params_v1060;

typedef struct NhuBandParams_v1090
{
 TknPres pres;
 NhuFreqBandIndicator_v9e0 bandEUTRA_v1090;
} NhuBandParams_v1090;

typedef struct NhuBandCombinationParams_v1090
{
 TknU16 noComp;
 NhuBandParams_v1090 *member;
}NhuBandCombinationParams_v1090;

typedef struct NhuSuppBandCombination_v1090
{
 TknU16 noComp;
 NhuBandCombinationParams_v1090 *member;
}NhuSuppBandCombination_v1090;

typedef struct NhuRF_Params_v1090
{
 TknPres pres;
 NhuSuppBandCombination_v1090 supportedBandCombination_v1090;
} NhuRF_Params_v1090;


typedef enum enumNhuPDCP_Params_v1130pdcp_SN_Extn_r11
{
 NhuPDCP_Params_v1130pdcp_SN_Extn_r11supportedEnum
} EnumNhuPDCP_Params_v1130pdcp_SN_Extn_r11;
typedef TknU32 NhuPDCP_Params_v1130pdcp_SN_Extn_r11;


typedef enum enumNhuPDCP_Params_v1130supportRohcCtxtContinue_r11
{
 NhuPDCP_Params_v1130supportRohcCtxtContinue_r11supportedEnum
} EnumNhuPDCP_Params_v1130supportRohcCtxtContinue_r11;
typedef TknU32 NhuPDCP_Params_v1130supportRohcCtxtContinue_r11;

typedef struct NhuPDCP_Params_v1130
{
 TknPres pres;
 NhuPDCP_Params_v1130pdcp_SN_Extn_r11 pdcp_SN_Extn_r11;
 NhuPDCP_Params_v1130supportRohcCtxtContinue_r11 supportRohcCtxtContinue_r11;
} NhuPDCP_Params_v1130;


typedef enum enumNhuPhyLyrParams_v1130crs_InterfHandl_r11
{
 NhuPhyLyrParams_v1130crs_InterfHandl_r11supportedEnum
} EnumNhuPhyLyrParams_v1130crs_InterfHandl_r11;
typedef TknU32 NhuPhyLyrParams_v1130crs_InterfHandl_r11;


typedef enum enumNhuPhyLyrParams_v1130ePDCCH_r11
{
 NhuPhyLyrParams_v1130ePDCCH_r11supportedEnum
} EnumNhuPhyLyrParams_v1130ePDCCH_r11;
typedef TknU32 NhuPhyLyrParams_v1130ePDCCH_r11;


typedef enum enumNhuPhyLyrParams_v1130multiACK_CSI_Rprtng_r11
{
 NhuPhyLyrParams_v1130multiACK_CSI_Rprtng_r11supportedEnum
} EnumNhuPhyLyrParams_v1130multiACK_CSI_Rprtng_r11;
typedef TknU32 NhuPhyLyrParams_v1130multiACK_CSI_Rprtng_r11;


typedef enum enumNhuPhyLyrParams_v1130ss_CCH_InterfHandl_r11
{
 NhuPhyLyrParams_v1130ss_CCH_InterfHandl_r11supportedEnum
} EnumNhuPhyLyrParams_v1130ss_CCH_InterfHandl_r11;
typedef TknU32 NhuPhyLyrParams_v1130ss_CCH_InterfHandl_r11;


typedef enum enumNhuPhyLyrParams_v1130tdd_SpecialSubfrm_r11
{
 NhuPhyLyrParams_v1130tdd_SpecialSubfrm_r11supportedEnum
} EnumNhuPhyLyrParams_v1130tdd_SpecialSubfrm_r11;
typedef TknU32 NhuPhyLyrParams_v1130tdd_SpecialSubfrm_r11;


typedef enum enumNhuPhyLyrParams_v1130txDiv_PUCCH1b_ChSelect_r11
{
 NhuPhyLyrParams_v1130txDiv_PUCCH1b_ChSelect_r11supportedEnum
} EnumNhuPhyLyrParams_v1130txDiv_PUCCH1b_ChSelect_r11;
typedef TknU32 NhuPhyLyrParams_v1130txDiv_PUCCH1b_ChSelect_r11;


typedef enum enumNhuPhyLyrParams_v1130ul_CoMP_r11
{
 NhuPhyLyrParams_v1130ul_CoMP_r11supportedEnum
} EnumNhuPhyLyrParams_v1130ul_CoMP_r11;
typedef TknU32 NhuPhyLyrParams_v1130ul_CoMP_r11;

typedef struct NhuPhyLyrParams_v1130
{
 TknPres pres;
 NhuPhyLyrParams_v1130crs_InterfHandl_r11 crs_InterfHandl_r11;
 NhuPhyLyrParams_v1130ePDCCH_r11 ePDCCH_r11;
 NhuPhyLyrParams_v1130multiACK_CSI_Rprtng_r11 multiACK_CSI_Rprtng_r11;
 NhuPhyLyrParams_v1130ss_CCH_InterfHandl_r11 ss_CCH_InterfHandl_r11;
 NhuPhyLyrParams_v1130tdd_SpecialSubfrm_r11 tdd_SpecialSubfrm_r11;
 NhuPhyLyrParams_v1130txDiv_PUCCH1b_ChSelect_r11 txDiv_PUCCH1b_ChSelect_r11;
 NhuPhyLyrParams_v1130ul_CoMP_r11 ul_CoMP_r11;
} NhuPhyLyrParams_v1130;


typedef enum enumNhuBandParams_v1130supportedCSI_Proc_r11
{
 NhuBandParams_v1130supportedCSI_Proc_r11n1Enum,
 NhuBandParams_v1130supportedCSI_Proc_r11n3Enum,
 NhuBandParams_v1130supportedCSI_Proc_r11n4Enum
} EnumNhuBandParams_v1130supportedCSI_Proc_r11;
typedef TknU32 NhuBandParams_v1130supportedCSI_Proc_r11;

typedef struct NhuBandParams_v1130
{
 TknPres pres;
 NhuBandParams_v1130supportedCSI_Proc_r11 supportedCSI_Proc_r11;
} NhuBandParams_v1130;


typedef enum enumNhuBandCombinationParams_v1130multipleTimingAdvance_r11
{
 NhuBandCombinationParams_v1130multipleTimingAdvance_r11supportedEnum
} EnumNhuBandCombinationParams_v1130multipleTimingAdvance_r11;
typedef TknU32 NhuBandCombinationParams_v1130multipleTimingAdvance_r11;


typedef enum enumNhuBandCombinationParams_v1130simultaneousRx_Tx_r11
{
 NhuBandCombinationParams_v1130simultaneousRx_Tx_r11supportedEnum
} EnumNhuBandCombinationParams_v1130simultaneousRx_Tx_r11;
typedef TknU32 NhuBandCombinationParams_v1130simultaneousRx_Tx_r11;

typedef struct NhuBandCombinationParams_v1130bandParameterLst_r11
{
 TknU16 noComp;
 NhuBandParams_v1130 *member;
}NhuBandCombinationParams_v1130bandParameterLst_r11;

typedef struct NhuBandCombinationParams_v1130
{
 TknPres pres;
 NhuBandCombinationParams_v1130multipleTimingAdvance_r11 multipleTimingAdvance_r11;
 NhuBandCombinationParams_v1130simultaneousRx_Tx_r11 simultaneousRx_Tx_r11;
 NhuBandCombinationParams_v1130bandParameterLst_r11 bandParameterLst_r11;
} NhuBandCombinationParams_v1130;

typedef struct NhuSuppBandCombination_v1130
{
 TknU16 noComp;
 NhuBandCombinationParams_v1130 *member;
}NhuSuppBandCombination_v1130;

typedef struct NhuRF_Params_v1130
{
 TknPres pres;
 NhuSuppBandCombination_v1130 supportedBandCombination_v1130;
} NhuRF_Params_v1130;


typedef enum enumNhuMeasParams_v1130rsrqMeasWideband_r11
{
 NhuMeasParams_v1130rsrqMeasWideband_r11supportedEnum
} EnumNhuMeasParams_v1130rsrqMeasWideband_r11;
typedef TknU32 NhuMeasParams_v1130rsrqMeasWideband_r11;

typedef struct NhuMeasParams_v1130
{
 TknPres pres;
 NhuMeasParams_v1130rsrqMeasWideband_r11 rsrqMeasWideband_r11;
} NhuMeasParams_v1130;


typedef enum enumNhuIRAT_ParamsCDMA2000_v1130cdma2000_NW_Sharing_r11
{
 NhuIRAT_ParamsCDMA2000_v1130cdma2000_NW_Sharing_r11supportedEnum
} EnumNhuIRAT_ParamsCDMA2000_v1130cdma2000_NW_Sharing_r11;
typedef TknU32 NhuIRAT_ParamsCDMA2000_v1130cdma2000_NW_Sharing_r11;

typedef struct NhuIRAT_ParamsCDMA2000_v1130
{
 TknPres pres;
 NhuIRAT_ParamsCDMA2000_v1130cdma2000_NW_Sharing_r11 cdma2000_NW_Sharing_r11;
} NhuIRAT_ParamsCDMA2000_v1130;


typedef enum enumNhuOther_Params_r11inDeviceCoexInd_r11
{
 NhuOther_Params_r11inDeviceCoexInd_r11supportedEnum
} EnumNhuOther_Params_r11inDeviceCoexInd_r11;
typedef TknU32 NhuOther_Params_r11inDeviceCoexInd_r11;


typedef enum enumNhuOther_Params_r11powerPrefInd_r11
{
 NhuOther_Params_r11powerPrefInd_r11supportedEnum
} EnumNhuOther_Params_r11powerPrefInd_r11;
typedef TknU32 NhuOther_Params_r11powerPrefInd_r11;


typedef enum enumNhuOther_Params_r11ue_Rx_TxTimeDiffMeasurements_r11
{
 NhuOther_Params_r11ue_Rx_TxTimeDiffMeasurements_r11supportedEnum
} EnumNhuOther_Params_r11ue_Rx_TxTimeDiffMeasurements_r11;
typedef TknU32 NhuOther_Params_r11ue_Rx_TxTimeDiffMeasurements_r11;

typedef struct NhuOther_Params_r11
{
 TknPres pres;
 NhuOther_Params_r11inDeviceCoexInd_r11 inDeviceCoexInd_r11;
 NhuOther_Params_r11powerPrefInd_r11 powerPrefInd_r11;
 NhuOther_Params_r11ue_Rx_TxTimeDiffMeasurements_r11 ue_Rx_TxTimeDiffMeasurements_r11;
} NhuOther_Params_r11;

typedef struct NhuUE_EUTRA_CapAddXDD_Mode_v1130
{
 TknPres pres;
 NhuPhyLyrParams_v1130 phyLyrParams_v1130;
 NhuMeasParams_v1130 measParams_v1130;
 NhuOther_Params_r11 otherParams_r11;
} NhuUE_EUTRA_CapAddXDD_Mode_v1130;


typedef TknStrBSXL NhuPhyLyrParams_v1170interBandTDD_CA_WithDifferentConfig_r11;
typedef struct NhuPhyLyrParams_v1170
{
 TknPres pres;
 NhuPhyLyrParams_v1170interBandTDD_CA_WithDifferentConfig_r11 interBandTDD_CA_WithDifferentConfig_r11;
} NhuPhyLyrParams_v1170;


typedef enum enumNhuBandParams_r11supportedCSI_Proc_r11
{
 NhuBandParams_r11supportedCSI_Proc_r11n1Enum,
 NhuBandParams_r11supportedCSI_Proc_r11n3Enum,
 NhuBandParams_r11supportedCSI_Proc_r11n4Enum
} EnumNhuBandParams_r11supportedCSI_Proc_r11;
typedef TknU32 NhuBandParams_r11supportedCSI_Proc_r11;

typedef struct NhuBandParams_r11
{
 TknPres pres;
 NhuFreqBandIndicator_r11 bandEUTRA_r11;
 NhuBandParamsUL_r10 bandParamsUL_r11;
 NhuBandParamsDL_r10 bandParamsDL_r11;
 NhuBandParams_r11supportedCSI_Proc_r11 supportedCSI_Proc_r11;
} NhuBandParams_r11;

typedef struct NhuBandCombinationParams_r11bandParameterLst_r11
{
 TknU16 noComp;
 NhuBandParams_r11 *member;
}NhuBandCombinationParams_r11bandParameterLst_r11;


typedef enum enumNhuBandCombinationParams_r11multipleTimingAdvance_r11
{
 NhuBandCombinationParams_r11multipleTimingAdvance_r11supportedEnum
} EnumNhuBandCombinationParams_r11multipleTimingAdvance_r11;
typedef TknU32 NhuBandCombinationParams_r11multipleTimingAdvance_r11;


typedef enum enumNhuBandCombinationParams_r11simultaneousRx_Tx_r11
{
 NhuBandCombinationParams_r11simultaneousRx_Tx_r11supportedEnum
} EnumNhuBandCombinationParams_r11simultaneousRx_Tx_r11;
typedef TknU32 NhuBandCombinationParams_r11simultaneousRx_Tx_r11;

typedef struct NhuBandCombinationParams_r11
{
 TknPres pres;
 NhuBandCombinationParams_r11bandParameterLst_r11 bandParameterLst_r11;
 NhuSuppBandwidthCombinationSet_r10 supportedBandwidthCombinationSet_r11;
 NhuBandCombinationParams_r11multipleTimingAdvance_r11 multipleTimingAdvance_r11;
 NhuBandCombinationParams_r11simultaneousRx_Tx_r11 simultaneousRx_Tx_r11;
 NhuBandInfoEUTRA bandInfoEUTRA_r11;
} NhuBandCombinationParams_r11;

typedef struct NhuSuppBandCombinationAdd_r11
{
 TknU16 noComp;
 NhuBandCombinationParams_r11 *member;
}NhuSuppBandCombinationAdd_r11;


typedef enum enumNhuRF_Params_v1180freqBandRetrieval_r11
{
 NhuRF_Params_v1180freqBandRetrieval_r11supportedEnum
} EnumNhuRF_Params_v1180freqBandRetrieval_r11;
typedef TknU32 NhuRF_Params_v1180freqBandRetrieval_r11;

typedef struct NhuRF_Params_v1180requestedBands_r11
{
 TknU16 noComp;
 NhuFreqBandIndicator_r11 *member;
}NhuRF_Params_v1180requestedBands_r11;

typedef struct NhuRF_Params_v1180
{
 TknPres pres;
 NhuRF_Params_v1180freqBandRetrieval_r11 freqBandRetrieval_r11;
 NhuRF_Params_v1180requestedBands_r11 requestedBands_r11;
 NhuSuppBandCombinationAdd_r11 supportedBandCombinationAdd_r11;
} NhuRF_Params_v1180;


typedef enum enumNhuMBMS_Params_r11mbms_SCell_r11
{
 NhuMBMS_Params_r11mbms_SCell_r11supportedEnum
} EnumNhuMBMS_Params_r11mbms_SCell_r11;
typedef TknU32 NhuMBMS_Params_r11mbms_SCell_r11;


typedef enum enumNhuMBMS_Params_r11mbms_NonServingCell_r11
{
 NhuMBMS_Params_r11mbms_NonServingCell_r11supportedEnum
} EnumNhuMBMS_Params_r11mbms_NonServingCell_r11;
typedef TknU32 NhuMBMS_Params_r11mbms_NonServingCell_r11;

typedef struct NhuMBMS_Params_r11
{
 TknPres pres;
 NhuMBMS_Params_r11mbms_SCell_r11 mbms_SCell_r11;
 NhuMBMS_Params_r11mbms_NonServingCell_r11 mbms_NonServingCell_r11;
} NhuMBMS_Params_r11;

typedef struct NhuUE_EUTRA_CapAddXDD_Mode_v1180
{
 TknPres pres;
 NhuMBMS_Params_r11 mbms_Params_r11;
} NhuUE_EUTRA_CapAddXDD_Mode_v1180;


typedef enum enumNhuMeasParams_v11a0benefitsFromInterruption_r11
{
 NhuMeasParams_v11a0benefitsFromInterruption_r11trueEnum
} EnumNhuMeasParams_v11a0benefitsFromInterruption_r11;
typedef TknU32 NhuMeasParams_v11a0benefitsFromInterruption_r11;

typedef struct NhuMeasParams_v11a0
{
 TknPres pres;
 NhuMeasParams_v11a0benefitsFromInterruption_r11 benefitsFromInterruption_r11;
} NhuMeasParams_v11a0;


typedef TknU32 NhuUE_EUTRA_Cap_v11a0_IEsue_Category_v11a0;

typedef struct NhuUE_EUTRA_Cap_v11a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUE_EUTRA_Cap_v11a0_IEsnonCriticalExtn;

typedef struct NhuUE_EUTRA_Cap_v11a0_IEs
{
 TknPres pres;
 NhuUE_EUTRA_Cap_v11a0_IEsue_Category_v11a0 ue_Category_v11a0;
 NhuMeasParams_v11a0 measParams_v11a0;
 NhuUE_EUTRA_Cap_v11a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuUE_EUTRA_Cap_v11a0_IEs;

typedef struct NhuUE_EUTRA_Cap_v1180_IEs
{
 TknPres pres;
 NhuRF_Params_v1180 rf_Params_v1180;
 NhuMBMS_Params_r11 mbms_Params_r11;
 NhuUE_EUTRA_CapAddXDD_Mode_v1180 fdd_Add_UE_EUTRA_Capabilities_v1180;
 NhuUE_EUTRA_CapAddXDD_Mode_v1180 tdd_Add_UE_EUTRA_Capabilities_v1180;
 NhuUE_EUTRA_Cap_v11a0_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v1180_IEs;


typedef TknU32 NhuUE_EUTRA_Cap_v1170_IEsue_Category_v1170;

typedef struct NhuUE_EUTRA_Cap_v1170_IEs
{
 TknPres pres;
 NhuPhyLyrParams_v1170 phyLyrParams_v1170;
 NhuUE_EUTRA_Cap_v1170_IEsue_Category_v1170 ue_Category_v1170;
 NhuUE_EUTRA_Cap_v1180_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v1170_IEs;

typedef struct NhuUE_EUTRA_Cap_v1130_IEs
{
 TknPres pres;
 NhuPDCP_Params_v1130 pdcp_Params_v1130;
 NhuPhyLyrParams_v1130 phyLyrParams_v1130;
 NhuRF_Params_v1130 rf_Params_v1130;
 NhuMeasParams_v1130 measParams_v1130;
 NhuIRAT_ParamsCDMA2000_v1130 interRAT_ParamsCDMA2000_v1130;
 NhuOther_Params_r11 otherParams_r11;
 NhuUE_EUTRA_CapAddXDD_Mode_v1130 fdd_Add_UE_EUTRA_Capabilities_v1130;
 NhuUE_EUTRA_CapAddXDD_Mode_v1130 tdd_Add_UE_EUTRA_Capabilities_v1130;
 NhuUE_EUTRA_Cap_v1170_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v1130_IEs;

typedef struct NhuUE_EUTRA_Cap_v1090_IEs
{
 TknPres pres;
 NhuRF_Params_v1090 rf_Params_v1090;
 NhuUE_EUTRA_Cap_v1130_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v1090_IEs;

typedef struct NhuUE_EUTRA_Cap_v1060_IEs
{
 TknPres pres;
 NhuUE_EUTRA_CapAddXDD_Mode_v1060 fdd_Add_UE_EUTRA_Capabilities_v1060;
 NhuUE_EUTRA_CapAddXDD_Mode_v1060 tdd_Add_UE_EUTRA_Capabilities_v1060;
 NhuRF_Params_v1060 rf_Params_v1060;
 NhuUE_EUTRA_Cap_v1090_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v1060_IEs;


typedef TknU32 NhuUE_EUTRA_Cap_v1020_IEsue_Category_v1020;


typedef TknStrBSXL NhuUE_EUTRA_Cap_v1020_IEsfeatureGroupIndRel10_r10;
typedef struct NhuUE_EUTRA_Cap_v1020_IEs
{
 TknPres pres;
 NhuUE_EUTRA_Cap_v1020_IEsue_Category_v1020 ue_Category_v1020;
 NhuPhyLyrParams_v1020 phyLyrParams_v1020;
 NhuRF_Params_v1020 rf_Params_v1020;
 NhuMeasParams_v1020 measParams_v1020;
 NhuUE_EUTRA_Cap_v1020_IEsfeatureGroupIndRel10_r10 featureGroupIndRel10_r10;
 NhuIRAT_ParamsCDMA2000_1XRTT_v1020 interRAT_ParamsCDMA2000_v1020;
 NhuUE_BasedNetwPerfMeasParams_r10 ue_BasedNetwPerfMeasParams_r10;
 NhuIRAT_ParamsUTRA_TDD_v1020 interRAT_ParamsUTRA_TDD_v1020;
 NhuUE_EUTRA_Cap_v1060_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v1020_IEs;


typedef TknStrOSXL NhuUE_EUTRA_Cap_v940_IEslateNonCriticalExtn;
typedef struct NhuUE_EUTRA_Cap_v940_IEs
{
 TknPres pres;
 NhuUE_EUTRA_Cap_v940_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUE_EUTRA_Cap_v1020_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v940_IEs;


typedef enum enumNhuUE_EUTRA_Cap_v920_IEsdeviceTyp_r9
{
 NhuUE_EUTRA_Cap_v920_IEsdeviceTyp_r9noBenFromBatConsumpOptEnum
} EnumNhuUE_EUTRA_Cap_v920_IEsdeviceTyp_r9;
typedef TknU32 NhuUE_EUTRA_Cap_v920_IEsdeviceTyp_r9;

typedef struct NhuUE_EUTRA_Cap_v920_IEs
{
 TknPres pres;
 NhuPhyLyrParams_v920 phyLyrParams_v920;
 NhuIRAT_ParamsGERAN_v920 interRAT_ParamsGERAN_v920;
 NhuIRAT_ParamsUTRA_v920 interRAT_ParamsUTRA_v920;
 NhuIRAT_ParamsCDMA2000_1XRTT_v920 interRAT_ParamsCDMA2000_v920;
 NhuUE_EUTRA_Cap_v920_IEsdeviceTyp_r9 deviceTyp_r9;
 NhuCSG_ProximityIndParams_r9 csg_ProximityIndParams_r9;
 NhuNeighCellSI_AcquisitionParams_r9 neighCellSI_AcquisitionParams_r9;
 NhuSON_Params_r9 son_Params_r9;
 NhuUE_EUTRA_Cap_v940_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v920_IEs;


typedef TknU32 NhuUE_EUTRA_Capue_Category;


typedef TknStrBSXL NhuUE_EUTRA_CapfeatureGroupIndicators;
typedef struct NhuUE_EUTRA_CapinterRAT_Params
{
 TknPres pres;
 NhuIRAT_ParamsUTRA_FDD utraFDD;
 NhuIRAT_ParamsUTRA_TDD128 utraTDD128;
 NhuIRAT_ParamsUTRA_TDD384 utraTDD384;
 NhuIRAT_ParamsUTRA_TDD768 utraTDD768;
 NhuIRAT_ParamsGERAN geran;
 NhuIRAT_ParamsCDMA2000_HRPD cdma2000_HRPD;
 NhuIRAT_ParamsCDMA2000_1XRTT cdma2000_1xRTT;
} NhuUE_EUTRA_CapinterRAT_Params;

typedef struct NhuUE_EUTRA_Cap
{
 TknPres pres;
 NhuAccessStratumRls accessStratumRls;
 NhuUE_EUTRA_Capue_Category ue_Category;
 NhuPDCP_Params pdcp_Params;
 NhuPhyLyrParams phyLyrParams;
 NhuRF_Params rf_Params;
 NhuMeasParams measParams;
 NhuUE_EUTRA_CapfeatureGroupIndicators featureGroupIndicators;
 NhuUE_EUTRA_CapinterRAT_Params interRAT_Params;
 NhuUE_EUTRA_Cap_v920_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap;


typedef TknStrBSXL NhuUE_EUTRA_CapAddXDD_Mode_r9featureGroupIndicators_r9;

typedef TknStrBSXL NhuUE_EUTRA_CapAddXDD_Mode_r9featureGroupIndRel9Add_r9;
typedef struct NhuUE_EUTRA_CapAddXDD_Mode_r9
{
 TknPres pres;
 NhuPhyLyrParams phyLyrParams_r9;
 NhuUE_EUTRA_CapAddXDD_Mode_r9featureGroupIndicators_r9 featureGroupIndicators_r9;
 NhuUE_EUTRA_CapAddXDD_Mode_r9featureGroupIndRel9Add_r9 featureGroupIndRel9Add_r9;
 NhuIRAT_ParamsGERAN interRAT_ParamsGERAN_r9;
 NhuIRAT_ParamsUTRA_v920 interRAT_ParamsUTRA_r9;
 NhuIRAT_ParamsCDMA2000_1XRTT_v920 interRAT_ParamsCDMA2000_r9;
 NhuNeighCellSI_AcquisitionParams_r9 neighCellSI_AcquisitionParams_r9;
} NhuUE_EUTRA_CapAddXDD_Mode_r9;


typedef enum enumNhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_FDD_r9
{
 NhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_FDD_r9supportedEnum
} EnumNhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_FDD_r9;
typedef TknU32 NhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_FDD_r9;


typedef enum enumNhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_TDD128_r9
{
 NhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_TDD128_r9supportedEnum
} EnumNhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_TDD128_r9;
typedef TknU32 NhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_TDD128_r9;


typedef enum enumNhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToUTRA_FDD_r9
{
 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToUTRA_FDD_r9supportedEnum
} EnumNhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToUTRA_FDD_r9;
typedef TknU32 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToUTRA_FDD_r9;


typedef enum enumNhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToGERAN_r9
{
 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToGERAN_r9supportedEnum
} EnumNhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToGERAN_r9;
typedef TknU32 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToGERAN_r9;


typedef enum enumNhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToUTRA_TDD128_r9
{
 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToUTRA_TDD128_r9supportedEnum
} EnumNhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToUTRA_TDD128_r9;
typedef TknU32 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToUTRA_TDD128_r9;


typedef enum enumNhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToGERAN_r9
{
 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToGERAN_r9supportedEnum
} EnumNhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToGERAN_r9;
typedef TknU32 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToGERAN_r9;

typedef struct NhuIRAT_ParamsUTRA_v9c0
{
 TknPres pres;
 NhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_FDD_r9 voiceOverPS_HS_UTRA_FDD_r9;
 NhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_TDD128_r9 voiceOverPS_HS_UTRA_TDD128_r9;
 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToUTRA_FDD_r9 srvcc_FromUTRA_FDD_ToUTRA_FDD_r9;
 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToGERAN_r9 srvcc_FromUTRA_FDD_ToGERAN_r9;
 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToUTRA_TDD128_r9 srvcc_FromUTRA_TDD128_ToUTRA_TDD128_r9;
 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToGERAN_r9 srvcc_FromUTRA_TDD128_ToGERAN_r9;
} NhuIRAT_ParamsUTRA_v9c0;


typedef enum enumNhuPhyLyrParams_v9d0tm5_FDD_r9
{
 NhuPhyLyrParams_v9d0tm5_FDD_r9supportedEnum
} EnumNhuPhyLyrParams_v9d0tm5_FDD_r9;
typedef TknU32 NhuPhyLyrParams_v9d0tm5_FDD_r9;


typedef enum enumNhuPhyLyrParams_v9d0tm5_TDD_r9
{
 NhuPhyLyrParams_v9d0tm5_TDD_r9supportedEnum
} EnumNhuPhyLyrParams_v9d0tm5_TDD_r9;
typedef TknU32 NhuPhyLyrParams_v9d0tm5_TDD_r9;

typedef struct NhuPhyLyrParams_v9d0
{
 TknPres pres;
 NhuPhyLyrParams_v9d0tm5_FDD_r9 tm5_FDD_r9;
 NhuPhyLyrParams_v9d0tm5_TDD_r9 tm5_TDD_r9;
} NhuPhyLyrParams_v9d0;

typedef struct NhuSuppBandEUTRA_v9e0
{
 TknPres pres;
 NhuFreqBandIndicator_v9e0 bandEUTRA_v9e0;
} NhuSuppBandEUTRA_v9e0;

typedef struct NhuSuppBandLstEUTRA_v9e0
{
 TknU16 noComp;
 NhuSuppBandEUTRA_v9e0 *member;
}NhuSuppBandLstEUTRA_v9e0;

typedef struct NhuRF_Params_v9e0
{
 TknPres pres;
 NhuSuppBandLstEUTRA_v9e0 supportedBandLstEUTRA_v9e0;
} NhuRF_Params_v9e0;


typedef enum enumNhuIRAT_ParamsUTRA_v9h0mfbi_UTRA_r9
{
 NhuIRAT_ParamsUTRA_v9h0mfbi_UTRA_r9supportedEnum
} EnumNhuIRAT_ParamsUTRA_v9h0mfbi_UTRA_r9;
typedef TknU32 NhuIRAT_ParamsUTRA_v9h0mfbi_UTRA_r9;

typedef struct NhuIRAT_ParamsUTRA_v9h0
{
 TknPres pres;
 NhuIRAT_ParamsUTRA_v9h0mfbi_UTRA_r9 mfbi_UTRA_r9;
} NhuIRAT_ParamsUTRA_v9h0;


typedef TknStrBSXL NhuRF_Params_v10f0modifiedMPR_Behavior_r10;
typedef struct NhuRF_Params_v10f0
{
 TknPres pres;
 NhuRF_Params_v10f0modifiedMPR_Behavior_r10 modifiedMPR_Behavior_r10;
} NhuRF_Params_v10f0;

typedef struct NhuUE_EUTRA_Cap_v10f0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUE_EUTRA_Cap_v10f0_IEsnonCriticalExtn;

typedef struct NhuUE_EUTRA_Cap_v10f0_IEs
{
 TknPres pres;
 NhuRF_Params_v10f0 rf_Params_v10f0;
 NhuUE_EUTRA_Cap_v10f0_IEsnonCriticalExtn nonCriticalExtn;
} NhuUE_EUTRA_Cap_v10f0_IEs;

typedef struct NhuUE_EUTRA_Cap_v10c0_IEs
{
 TknPres pres;
 NhuOTDOA_PositioningCapabilities_r10 otdoa_PositioningCapabilities_r10;
 NhuUE_EUTRA_Cap_v10f0_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v10c0_IEs;


typedef TknStrOSXL NhuUE_EUTRA_Cap_v9h0_IEslateNonCriticalExtn;
typedef struct NhuUE_EUTRA_Cap_v9h0_IEs
{
 TknPres pres;
 NhuIRAT_ParamsUTRA_v9h0 interRAT_ParamsUTRA_v9h0;
 NhuUE_EUTRA_Cap_v9h0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUE_EUTRA_Cap_v10c0_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v9h0_IEs;

typedef struct NhuUE_EUTRA_Cap_v9e0_IEs
{
 TknPres pres;
 NhuRF_Params_v9e0 rf_Params_v9e0;
 NhuUE_EUTRA_Cap_v9h0_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v9e0_IEs;

typedef struct NhuUE_EUTRA_Cap_v9d0_IEs
{
 TknPres pres;
 NhuPhyLyrParams_v9d0 phyLyrParams_v9d0;
 NhuUE_EUTRA_Cap_v9e0_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v9d0_IEs;

typedef struct NhuUE_EUTRA_Cap_v9c0_IEs
{
 TknPres pres;
 NhuIRAT_ParamsUTRA_v9c0 interRAT_ParamsUTRA_v9c0;
 NhuUE_EUTRA_Cap_v9d0_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v9c0_IEs;


typedef TknStrBSXL NhuUE_EUTRA_Cap_v9a0_IEsfeatureGroupIndRel9Add_r9;
typedef struct NhuUE_EUTRA_Cap_v9a0_IEs
{
 TknPres pres;
 NhuUE_EUTRA_Cap_v9a0_IEsfeatureGroupIndRel9Add_r9 featureGroupIndRel9Add_r9;
 NhuUE_EUTRA_CapAddXDD_Mode_r9 fdd_Add_UE_EUTRA_Capabilities_r9;
 NhuUE_EUTRA_CapAddXDD_Mode_r9 tdd_Add_UE_EUTRA_Capabilities_r9;
 NhuUE_EUTRA_Cap_v9c0_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v9a0_IEs;

typedef struct NhuVarConnEstFailReport_r11
{
 TknPres pres;
 NhuConnEstFailReport_r11 connEstFailReport_r11;
 NhuPLMN_Identity plmn_Identity_r11;
} NhuVarConnEstFailReport_r11;

typedef struct NhuVarLogMeasConfig_r10
{
 TknPres pres;
 NhuAreaCfg_r10 areaCfg_r10;
 NhuLoggingDuration_r10 loggingDuration_r10;
 NhuLoggingInterval_r10 loggingInterval_r10;
} NhuVarLogMeasConfig_r10;

typedef struct NhuVarLogMeasConfig_r11
{
 TknPres pres;
 NhuAreaCfg_r10 areaCfg_r10;
 NhuAreaCfg_v1130 areaCfg_v1130;
 NhuLoggingDuration_r10 loggingDuration_r10;
 NhuLoggingInterval_r10 loggingInterval_r10;
} NhuVarLogMeasConfig_r11;

typedef struct NhuLogMeasInfoLst2_r10
{
 TknU16 noComp;
 NhuLogMeasInfo_r10 *member;
}NhuLogMeasInfoLst2_r10;


typedef TknStrOSXL NhuVarLogMeasReport_r10traceRecordingSessionRef_r10;

typedef TknStrOSXL NhuVarLogMeasReport_r10tce_Id_r10;
typedef struct NhuVarLogMeasReport_r10
{
 TknPres pres;
 NhuTraceReference_r10 traceReference_r10;
 NhuVarLogMeasReport_r10traceRecordingSessionRef_r10 traceRecordingSessionRef_r10;
 NhuVarLogMeasReport_r10tce_Id_r10 tce_Id_r10;
 NhuPLMN_Identity plmn_Identity_r10;
 NhuAbsoluteTimeInfo_r10 absoluteTimeInfo_r10;
 NhuLogMeasInfoLst2_r10 logMeasInfoLst_r10;
} NhuVarLogMeasReport_r10;


typedef TknStrOSXL NhuVarLogMeasReport_r11traceRecordingSessionRef_r10;

typedef TknStrOSXL NhuVarLogMeasReport_r11tce_Id_r10;
typedef struct NhuVarLogMeasReport_r11
{
 TknPres pres;
 NhuTraceReference_r10 traceReference_r10;
 NhuVarLogMeasReport_r11traceRecordingSessionRef_r10 traceRecordingSessionRef_r10;
 NhuVarLogMeasReport_r11tce_Id_r10 tce_Id_r10;
 NhuPLMN_IdentityLst3_r11 plmn_IdentityLst_r11;
 NhuAbsoluteTimeInfo_r10 absoluteTimeInfo_r10;
 NhuLogMeasInfoLst2_r10 logMeasInfoLst_r10;
} NhuVarLogMeasReport_r11;


typedef TknS32 NhuVarMeasConfigs_Measure;

typedef struct NhuVarMeasConfigspeedStateParssetup
{
 TknPres pres;
 NhuMobilityStateParams mobilityStateParams;
 NhuSpeedStateScaleFactors timeToTrigger_SF;
} NhuVarMeasConfigspeedStateParssetup;

typedef struct NhuVarMeasConfigspeedStatePars
{
 TknU8 choice;
 union {
  NhuVarMeasConfigspeedStateParssetup setup;
 } val;
} NhuVarMeasConfigspeedStatePars;


typedef TknU8 NhuVarMeasConfigallowInterruptions_r11;

typedef struct NhuVarMeasConfig
{
 TknPres pres;
 NhuMeasIdToAddModLst measIdLst;
 NhuMeasObjectToAddModLst measObjectLst;
 NhuMeasObjectToAddModLst_v9e0 measObjectLst_v9i0;
 NhuReportConfigToAddModLst reportConfigLst;
 NhuQuantityConfig quantityConfig;
 NhuVarMeasConfigs_Measure s_Measure;
 NhuVarMeasConfigspeedStatePars speedStatePars;
 NhuVarMeasConfigallowInterruptions_r11 allowInterruptions_r11;
} NhuVarMeasConfig;

typedef struct NhuCellsTriggeredLstMemberphysCellIdUTRA
{
 TknU8 choice;
 union {
  NhuPhysCellIdUTRA_FDD fdd;
  NhuPhysCellIdUTRA_TDD tdd;
 } val;
} NhuCellsTriggeredLstMemberphysCellIdUTRA;

typedef struct NhuCellsTriggeredLstMemberphysCellIdGERAN
{
 TknPres pres;
 NhuCarrierFreqGERAN carrierFreq;
 NhuPhysCellIdGERAN physCellId;
} NhuCellsTriggeredLstMemberphysCellIdGERAN;

typedef struct NhuCellsTriggeredLstMember
{
 TknU8 choice;
 union {
  NhuPhysCellId physCellIdEUTRA;
  NhuCellsTriggeredLstMemberphysCellIdUTRA physCellIdUTRA;
  NhuCellsTriggeredLstMemberphysCellIdGERAN physCellIdGERAN;
  NhuPhysCellIdCDMA2000 physCellIdCDMA2000;
 } val;
} NhuCellsTriggeredLstMember;

typedef struct NhuCellsTriggeredLst
{
 TknU16 noComp;
 NhuCellsTriggeredLstMember *member;
}NhuCellsTriggeredLst;


typedef TknS32 NhuVarMeasReportnumberOfReportsSent;

typedef struct NhuVarMeasReport
{
 TknPres pres;
 NhuMeasId measId;
 NhuCellsTriggeredLst cellsTriggeredLst;
 NhuVarMeasReportnumberOfReportsSent numberOfReportsSent;
} NhuVarMeasReport;

typedef struct NhuVarMeasReportLst
{
 TknU16 noComp;
 NhuVarMeasReport *member;
}NhuVarMeasReportLst;

typedef struct NhuVarRLF_Report_r10
{
 TknPres pres;
 NhuRLF_Report_r9 rlf_Report_r10;
 NhuPLMN_Identity plmn_Identity_r10;
} NhuVarRLF_Report_r10;

typedef struct NhuVarRLF_Report_r11
{
 TknPres pres;
 NhuRLF_Report_r9 rlf_Report_r10;
 NhuPLMN_IdentityLst3_r11 plmn_IdentityLst_r11;
} NhuVarRLF_Report_r11;

typedef struct NhuVarShortMAC_Input
{
 TknPres pres;
 NhuCellIdentity cellIdentity;
 NhuPhysCellId physCellId;
 NhuC_RNTI c_RNTI;
} NhuVarShortMAC_Input;


typedef TknStrOSXL NhuHovrCmd_r8_IEshandoverCmdMsg;
typedef struct NhuHovrCmd_r8_IEsnonCriticalExtn
{
 TknPres pres;
} NhuHovrCmd_r8_IEsnonCriticalExtn;

typedef struct NhuHovrCmd_r8_IEs
{
 TknPres pres;
 NhuHovrCmd_r8_IEshandoverCmdMsg handoverCmdMsg;
 NhuHovrCmd_r8_IEsnonCriticalExtn nonCriticalExtn;
} NhuHovrCmd_r8_IEs;

typedef struct NhuHovrCmdcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuHovrCmd_r8_IEs handoverCmd_r8;
 } val;
} NhuHovrCmdcriticalExtnsc1;

typedef struct NhuHovrCmdcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuHovrCmdcriticalExtnscriticalExtnsFuture;

typedef struct NhuHovrCmdcriticalExtns
{
 TknU8 choice;
 union {
  NhuHovrCmdcriticalExtnsc1 c1;
  NhuHovrCmdcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuHovrCmdcriticalExtns;

typedef struct NhuHovrCmd
{
 TknPres pres;
 NhuHovrCmdcriticalExtns criticalExtns;
} NhuHovrCmd;


typedef TknStrOSXL NhuAS_Configextaddgrp_1sourceSysInfoBlockTyp1Ext;
typedef struct NhuAS_Configextaddgrp_1
{
 TknPres pres;
 NhuAS_Configextaddgrp_1sourceSysInfoBlockTyp1Ext sourceSysInfoBlockTyp1Ext;
 NhuOtherConfig_r9 sourceOtherConfig_r9;
} NhuAS_Configextaddgrp_1;

typedef struct NhuAS_Configextaddgrp_2
{
 TknPres pres;
 NhuSCellToAddModLst_r10 sourceSCellConfigLst_r10;
} NhuAS_Configextaddgrp_2;

typedef struct NhuAS_Config
{
 TknPres pres;
 NhuMeasConfig sourceMeasConfig;
 NhuRadioResourceConfigDedicated sourceRadioResourceConfig;
 NhuSecAlgorithmConfig sourceSecAlgorithmConfig;
 NhuC_RNTI sourceUE_Identity;
 NhuMasterInfoBlock sourceMasterInfoBlock;
 NhuSysInfoBlockTyp1 sourceSysInfoBlockTyp1;
 NhuSysInfoBlockTyp2 sourceSysInfoBlockTyp2;
 NhuAntennaInfoCmn antennaInfoCmn;
 NhuARFCN_ValueEUTRA sourceDl_CarrierFreq;
 NhuAS_Configextaddgrp_1 extaddgrp_1;
 NhuAS_Configextaddgrp_2 extaddgrp_2;
} NhuAS_Config;

typedef struct NhuCandidateCellInfo_r10extaddgrp_1
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 dl_CarrierFreq_v1090;
} NhuCandidateCellInfo_r10extaddgrp_1;

typedef struct NhuCandidateCellInfo_r10
{
 TknPres pres;
 NhuPhysCellId physCellId_r10;
 NhuARFCN_ValueEUTRA dl_CarrierFreq_r10;
 NhuRSRP_Range rsrpResult_r10;
 NhuRSRQ_Range rsrqResult_r10;
 NhuCandidateCellInfo_r10extaddgrp_1 extaddgrp_1;
} NhuCandidateCellInfo_r10;

typedef struct NhuCandidateCellInfoLst_r10
{
 TknU16 noComp;
 NhuCandidateCellInfo_r10 *member;
}NhuCandidateCellInfoLst_r10;


typedef enum enumNhuRRM_Configue_InactiveTime
{
 NhuRRM_Configue_InactiveTimes1Enum,
 NhuRRM_Configue_InactiveTimes2Enum,
 NhuRRM_Configue_InactiveTimes3Enum,
 NhuRRM_Configue_InactiveTimes5Enum,
 NhuRRM_Configue_InactiveTimes7Enum,
 NhuRRM_Configue_InactiveTimes10Enum,
 NhuRRM_Configue_InactiveTimes15Enum,
 NhuRRM_Configue_InactiveTimes20Enum,
 NhuRRM_Configue_InactiveTimes25Enum,
 NhuRRM_Configue_InactiveTimes30Enum,
 NhuRRM_Configue_InactiveTimes40Enum,
 NhuRRM_Configue_InactiveTimes50Enum,
 NhuRRM_Configue_InactiveTimemin1Enum,
 NhuRRM_Configue_InactiveTimemin1s20cEnum,
 NhuRRM_Configue_InactiveTimemin1s40Enum,
 NhuRRM_Configue_InactiveTimemin2Enum,
 NhuRRM_Configue_InactiveTimemin2s30Enum,
 NhuRRM_Configue_InactiveTimemin3Enum,
 NhuRRM_Configue_InactiveTimemin3s30Enum,
 NhuRRM_Configue_InactiveTimemin4Enum,
 NhuRRM_Configue_InactiveTimemin5Enum,
 NhuRRM_Configue_InactiveTimemin6Enum,
 NhuRRM_Configue_InactiveTimemin7Enum,
 NhuRRM_Configue_InactiveTimemin8Enum,
 NhuRRM_Configue_InactiveTimemin9Enum,
 NhuRRM_Configue_InactiveTimemin10Enum,
 NhuRRM_Configue_InactiveTimemin12Enum,
 NhuRRM_Configue_InactiveTimemin14Enum,
 NhuRRM_Configue_InactiveTimemin17Enum,
 NhuRRM_Configue_InactiveTimemin20Enum,
 NhuRRM_Configue_InactiveTimemin24Enum,
 NhuRRM_Configue_InactiveTimemin28Enum,
 NhuRRM_Configue_InactiveTimemin33Enum,
 NhuRRM_Configue_InactiveTimemin38Enum,
 NhuRRM_Configue_InactiveTimemin44Enum,
 NhuRRM_Configue_InactiveTimemin50Enum,
 NhuRRM_Configue_InactiveTimehr1Enum,
 NhuRRM_Configue_InactiveTimehr1min30Enum,
 NhuRRM_Configue_InactiveTimehr2Enum,
 NhuRRM_Configue_InactiveTimehr2min30Enum,
 NhuRRM_Configue_InactiveTimehr3Enum,
 NhuRRM_Configue_InactiveTimehr3min30Enum,
 NhuRRM_Configue_InactiveTimehr4Enum,
 NhuRRM_Configue_InactiveTimehr5Enum,
 NhuRRM_Configue_InactiveTimehr6Enum,
 NhuRRM_Configue_InactiveTimehr8Enum,
 NhuRRM_Configue_InactiveTimehr10Enum,
 NhuRRM_Configue_InactiveTimehr13Enum,
 NhuRRM_Configue_InactiveTimehr16Enum,
 NhuRRM_Configue_InactiveTimehr20Enum,
 NhuRRM_Configue_InactiveTimeday1Enum,
 NhuRRM_Configue_InactiveTimeday1hr12Enum,
 NhuRRM_Configue_InactiveTimeday2Enum,
 NhuRRM_Configue_InactiveTimeday2hr12Enum,
 NhuRRM_Configue_InactiveTimeday3Enum,
 NhuRRM_Configue_InactiveTimeday4Enum,
 NhuRRM_Configue_InactiveTimeday5Enum,
 NhuRRM_Configue_InactiveTimeday7Enum,
 NhuRRM_Configue_InactiveTimeday10Enum,
 NhuRRM_Configue_InactiveTimeday14Enum,
 NhuRRM_Configue_InactiveTimeday19Enum,
 NhuRRM_Configue_InactiveTimeday24Enum,
 NhuRRM_Configue_InactiveTimeday30Enum,
 NhuRRM_Configue_InactiveTimedayMoreThan30Enum
} EnumNhuRRM_Configue_InactiveTime;
typedef TknU32 NhuRRM_Configue_InactiveTime;

typedef struct NhuRRM_Configextaddgrp_1
{
 TknPres pres;
 NhuCandidateCellInfoLst_r10 candidateCellInfoLst_r10;
} NhuRRM_Configextaddgrp_1;

typedef struct NhuRRM_Config
{
 TknPres pres;
 NhuRRM_Configue_InactiveTime ue_InactiveTime;
 NhuRRM_Configextaddgrp_1 extaddgrp_1;
} NhuRRM_Config;


typedef TknStrBSXL NhuKey_eNodeB_Star;
typedef struct NhuAdditionalReestabInfo
{
 TknPres pres;
 NhuCellIdentity cellIdentity;
 NhuKey_eNodeB_Star key_eNodeB_Star;
 NhuShortMAC_I shortMAC_I;
} NhuAdditionalReestabInfo;

typedef struct NhuAdditionalReestabInfoLst
{
 TknU16 noComp;
 NhuAdditionalReestabInfo *member;
}NhuAdditionalReestabInfoLst;

typedef struct NhuReestbInfo
{
 TknPres pres;
 NhuPhysCellId sourcePhysCellId;
 NhuShortMAC_I targetCellShortMAC_I;
 NhuAdditionalReestabInfoLst additionalReestabInfoLst;
} NhuReestbInfo;

typedef struct NhuAS_Ctxt
{
 TknPres pres;
 NhuReestbInfo reestablishmentInfo;
} NhuAS_Ctxt;

typedef struct NhuAS_Config_v9e0
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 sourceDl_CarrierFreq_v9e0;
} NhuAS_Config_v9e0;


typedef TknStrOSXL NhuAS_Ctxt_v1130idc_Ind_r11;

typedef TknStrOSXL NhuAS_Ctxt_v1130mbmsInterestInd_r11;

typedef TknStrOSXL NhuAS_Ctxt_v1130powerPrefInd_r11;
typedef struct NhuAS_Ctxt_v1130
{
 TknPres pres;
 NhuAS_Ctxt_v1130idc_Ind_r11 idc_Ind_r11;
 NhuAS_Ctxt_v1130mbmsInterestInd_r11 mbmsInterestInd_r11;
 NhuAS_Ctxt_v1130powerPrefInd_r11 powerPrefInd_r11;
} NhuAS_Ctxt_v1130;

typedef struct NhuHovrPrepInfo_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuHovrPrepInfo_v1130_IEsnonCriticalExtn;

typedef struct NhuHovrPrepInfo_v1130_IEs
{
 TknPres pres;
 NhuAS_Ctxt_v1130 as_Ctxt_v1130;
 NhuHovrPrepInfo_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuHovrPrepInfo_v1130_IEs;

typedef struct NhuHovrPrepInfo_v9e0_IEs
{
 TknPres pres;
 NhuAS_Config_v9e0 as_Config_v9e0;
 NhuHovrPrepInfo_v1130_IEs nonCriticalExtn;
} NhuHovrPrepInfo_v9e0_IEs;


typedef TknStrOSXL NhuHovrPrepInfo_v9d0_IEslateNonCriticalExtn;
typedef struct NhuHovrPrepInfo_v9d0_IEs
{
 TknPres pres;
 NhuHovrPrepInfo_v9d0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuHovrPrepInfo_v9e0_IEs nonCriticalExtn;
} NhuHovrPrepInfo_v9d0_IEs;


typedef enum enumNhuHovrPrepInfo_v920_IEsue_ConfigRls_r9
{
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9rel9Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9rel10Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9rel11Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9spare5Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9spare4Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9spare3Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9spare2Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9spare1Enum
} EnumNhuHovrPrepInfo_v920_IEsue_ConfigRls_r9;
typedef TknU32 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9;

typedef struct NhuHovrPrepInfo_v920_IEs
{
 TknPres pres;
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9 ue_ConfigRls_r9;
 NhuHovrPrepInfo_v9d0_IEs nonCriticalExtn;
} NhuHovrPrepInfo_v920_IEs;

typedef struct NhuHovrPrepInfo_r8_IEs
{
 TknPres pres;
 NhuUE_CapRAT_ContLst ue_RadioAccessCapInfo;
 NhuAS_Config as_Config;
 NhuRRM_Config rrm_Config;
 NhuAS_Ctxt as_Ctxt;
 NhuHovrPrepInfo_v920_IEs nonCriticalExtn;
} NhuHovrPrepInfo_r8_IEs;

typedef struct NhuHovrPrepInfocriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuHovrPrepInfo_r8_IEs handoverPrepInfo_r8;
 } val;
} NhuHovrPrepInfocriticalExtnsc1;

typedef struct NhuHovrPrepInfocriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuHovrPrepInfocriticalExtnscriticalExtnsFuture;

typedef struct NhuHovrPrepInfocriticalExtns
{
 TknU8 choice;
 union {
  NhuHovrPrepInfocriticalExtnsc1 c1;
  NhuHovrPrepInfocriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuHovrPrepInfocriticalExtns;

typedef struct NhuHovrPrepInfo
{
 TknPres pres;
 NhuHovrPrepInfocriticalExtns criticalExtns;
} NhuHovrPrepInfo;


typedef TknStrOSXL NhuUERadioAccessCapInfo_r8_IEsue_RadioAccessCapInfo;
typedef struct NhuUERadioAccessCapInfo_r8_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUERadioAccessCapInfo_r8_IEsnonCriticalExtn;

typedef struct NhuUERadioAccessCapInfo_r8_IEs
{
 TknPres pres;
 NhuUERadioAccessCapInfo_r8_IEsue_RadioAccessCapInfo ue_RadioAccessCapInfo;
 NhuUERadioAccessCapInfo_r8_IEsnonCriticalExtn nonCriticalExtn;
} NhuUERadioAccessCapInfo_r8_IEs;

typedef struct NhuUERadioAccessCapInfocriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuUERadioAccessCapInfo_r8_IEs ueRadioAccessCapInfo_r8;
 } val;
} NhuUERadioAccessCapInfocriticalExtnsc1;

typedef struct NhuUERadioAccessCapInfocriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuUERadioAccessCapInfocriticalExtnscriticalExtnsFuture;

typedef struct NhuUERadioAccessCapInfocriticalExtns
{
 TknU8 choice;
 union {
  NhuUERadioAccessCapInfocriticalExtnsc1 c1;
  NhuUERadioAccessCapInfocriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuUERadioAccessCapInfocriticalExtns;

typedef struct NhuUERadioAccessCapInfo
{
 TknPres pres;
 NhuUERadioAccessCapInfocriticalExtns criticalExtns;
} NhuUERadioAccessCapInfo;

typedef TknStrBSXL NhuAnsi_41_IDNNS;

typedef enum enumNhuCN_DomainIdentity
{
 NhuCN_DomainIdentitycs_domainEnum,
 NhuCN_DomainIdentityps_domainEnum
} EnumNhuCN_DomainIdentity;
typedef TknU32 NhuCN_DomainIdentity;


typedef TknStrOSXL NhuNAS_SysInfoGSM_MAP;
typedef struct NhuCN_DomainInfo
{
 TknPres pres;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuNAS_SysInfoGSM_MAP cn_DomainSpecificNAS_Info;
} NhuCN_DomainInfo;


typedef TknU32 NhuCN_DRX_CycleLengthCoefficient;

typedef struct NhuCN_DomainInfoFull
{
 TknPres pres;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuNAS_SysInfoGSM_MAP cn_DomainSpecificNAS_Info;
 NhuCN_DRX_CycleLengthCoefficient cn_DRX_CycleLengthCoeff;
} NhuCN_DomainInfoFull;

typedef struct NhuCN_DomainInfoLst
{
 TknU16 noComp;
 NhuCN_DomainInfo *member;
}NhuCN_DomainInfoLst;

typedef struct NhuCN_DomainInfoLstFull
{
 TknU16 noComp;
 NhuCN_DomainInfoFull *member;
}NhuCN_DomainInfoLstFull;


typedef TknStrBSXL NhuANSI_41_NAS_Parameter;

typedef NhuANSI_41_NAS_Parameter NhuNAS_SysInfoANSI_41;
typedef struct NhuCN_DomainSysInfocn_Typ
{
 TknU8 choice;
 union {
  NhuNAS_SysInfoGSM_MAP gsm_MAP;
  NhuNAS_SysInfoANSI_41 ansi_41;
 } val;
} NhuCN_DomainSysInfocn_Typ;

typedef struct NhuCN_DomainSysInfo
{
 TknPres pres;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuCN_DomainSysInfocn_Typ cn_Typ;
 NhuCN_DRX_CycleLengthCoefficient cn_DRX_CycleLengthCoeff;
} NhuCN_DomainSysInfo;

typedef struct NhuCN_DomainSysInfoLst
{
 TknU16 noComp;
 NhuCN_DomainSysInfo *member;
}NhuCN_DomainSysInfoLst;


typedef TknU32 NhuDigit;


typedef struct NhuCN_InfoInfo
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLst cn_DomainInfoLst;
} NhuCN_InfoInfo;

typedef struct NhuCN_InfoInfo_r6
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLst cn_DomainInfoLst;
 NhuPLMN_Identity primary_plmn_Identity;
} NhuCN_InfoInfo_r6;

typedef struct NhuCN_InfoInfoFull
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLstFull cn_DomainInfoLstFull;
} NhuCN_InfoInfoFull;


typedef TknS32 NhuEc_N0forANRec_N0;

typedef struct NhuEc_N0forANR
{
 TknPres pres;
 NhuEc_N0forANRec_N0 ec_N0;
} NhuEc_N0forANR;


typedef TknStrBSXL NhuRoutingParameter;
typedef struct NhuGsm_map_IDNNSroutingbasislocalPTMSI
{
 TknPres pres;
 NhuRoutingParameter routingparameter;
} NhuGsm_map_IDNNSroutingbasislocalPTMSI;

typedef struct NhuGsm_map_IDNNSroutingbasistMSIofsamePLMN
{
 TknPres pres;
 NhuRoutingParameter routingparameter;
} NhuGsm_map_IDNNSroutingbasistMSIofsamePLMN;

typedef struct NhuGsm_map_IDNNSroutingbasistMSIofdifferentPLMN
{
 TknPres pres;
 NhuRoutingParameter routingparameter;
} NhuGsm_map_IDNNSroutingbasistMSIofdifferentPLMN;

typedef struct NhuGsm_map_IDNNSroutingbasisiMSIresponsetopaging
{
 TknPres pres;
 NhuRoutingParameter routingparameter;
} NhuGsm_map_IDNNSroutingbasisiMSIresponsetopaging;

typedef struct NhuGsm_map_IDNNSroutingbasisiMSIcauseUEinitiatedEvent
{
 TknPres pres;
 NhuRoutingParameter routingparameter;
} NhuGsm_map_IDNNSroutingbasisiMSIcauseUEinitiatedEvent;

typedef struct NhuGsm_map_IDNNSroutingbasisiMEI
{
 TknPres pres;
 NhuRoutingParameter routingparameter;
} NhuGsm_map_IDNNSroutingbasisiMEI;

typedef struct NhuGsm_map_IDNNSroutingbasisspare2
{
 TknPres pres;
 NhuRoutingParameter routingparameter;
} NhuGsm_map_IDNNSroutingbasisspare2;

typedef struct NhuGsm_map_IDNNSroutingbasisspare1
{
 TknPres pres;
 NhuRoutingParameter routingparameter;
} NhuGsm_map_IDNNSroutingbasisspare1;

typedef struct NhuGsm_map_IDNNSroutingbasis
{
 TknU8 choice;
 union {
  NhuGsm_map_IDNNSroutingbasislocalPTMSI localPTMSI;
  NhuGsm_map_IDNNSroutingbasistMSIofsamePLMN tMSIofsamePLMN;
  NhuGsm_map_IDNNSroutingbasistMSIofdifferentPLMN tMSIofdifferentPLMN;
  NhuGsm_map_IDNNSroutingbasisiMSIresponsetopaging iMSIresponsetopaging;
  NhuGsm_map_IDNNSroutingbasisiMSIcauseUEinitiatedEvent iMSIcauseUEinitiatedEvent;
  NhuGsm_map_IDNNSroutingbasisiMEI iMEI;
  NhuGsm_map_IDNNSroutingbasisspare2 spare2;
  NhuGsm_map_IDNNSroutingbasisspare1 spare1;
 } val;
} NhuGsm_map_IDNNSroutingbasis;


typedef TknU8 NhuGsm_map_IDNNSdummy;

typedef struct NhuGsm_map_IDNNS
{
 TknPres pres;
 NhuGsm_map_IDNNSroutingbasis routingbasis;
 NhuGsm_map_IDNNSdummy dummy;
} NhuGsm_map_IDNNS;


typedef TknU32 NhuIMEI_Digit;

typedef struct NhuIMEI
{
 TknU16 noComp;
 NhuIMEI_Digit *member;
}NhuIMEI;

typedef struct NhuIMSI_GSM_MAP
{
 TknU16 noComp;
 NhuDigit *member;
}NhuIMSI_GSM_MAP;

typedef struct NhuIntraDomainNasNodeSelectorversionrelease99cn_Typ
{
 TknU8 choice;
 union {
  NhuGsm_map_IDNNS gsm_Map_IDNNS;
  NhuAnsi_41_IDNNS ansi_41_IDNNS;
 } val;
} NhuIntraDomainNasNodeSelectorversionrelease99cn_Typ;

typedef struct NhuIntraDomainNasNodeSelectorversionrelease99
{
 TknPres pres;
 NhuIntraDomainNasNodeSelectorversionrelease99cn_Typ cn_Typ;
} NhuIntraDomainNasNodeSelectorversionrelease99;


typedef TknStrBSXL NhuIntraDomainNasNodeSelectorversionlaterfuturecoding;
typedef struct NhuIntraDomainNasNodeSelectorversionlater
{
 TknPres pres;
 NhuIntraDomainNasNodeSelectorversionlaterfuturecoding futurecoding;
} NhuIntraDomainNasNodeSelectorversionlater;

typedef struct NhuIntraDomainNasNodeSelectorversion
{
 TknU8 choice;
 union {
  NhuIntraDomainNasNodeSelectorversionrelease99 release99;
  NhuIntraDomainNasNodeSelectorversionlater later;
 } val;
} NhuIntraDomainNasNodeSelectorversion;

typedef struct NhuIntraDomainNasNodeSelector
{
 TknPres pres;
 NhuIntraDomainNasNodeSelectorversion version;
} NhuIntraDomainNasNodeSelector;


typedef TknStrBSXL NhuLAIlac;
typedef struct NhuLAI
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuLAIlac lac;
} NhuLAI;


typedef enum enumNhuAccessClassBarred
{
 NhuAccessClassBarredbarredEnum,
 NhuAccessClassBarrednotBarredEnum
} EnumNhuAccessClassBarred;
typedef TknU32 NhuAccessClassBarred;

typedef struct NhuLocRegistrationAccessClassBarredLst
{
 TknU16 noComp;
 NhuAccessClassBarred *member;
}NhuLocRegistrationAccessClassBarredLst;

typedef struct NhuLocRegistrationParams
{
 TknU8 choice;
 union {
  NhuLocRegistrationAccessClassBarredLst restriction;
 } val;
} NhuLocRegistrationParams;

typedef struct NhuPLMN_IdentityWithOptionalMCC_r6
{
 TknPres pres;
 NhuMCC mcc;
 NhuMNC mnc;
} NhuPLMN_IdentityWithOptionalMCC_r6;


typedef TknU8 NhuMultiplePLMN_Lst_r6mibPLMN_Identity;

typedef struct NhuMultiplePLMN_Lst_r6multiplePLMNs
{
 TknU16 noComp;
 NhuPLMN_IdentityWithOptionalMCC_r6 *member;
}NhuMultiplePLMN_Lst_r6multiplePLMNs;

typedef struct NhuMultiplePLMN_Lst_r6
{
 TknPres pres;
 NhuMultiplePLMN_Lst_r6mibPLMN_Identity mibPLMN_Identity;
 NhuMultiplePLMN_Lst_r6multiplePLMNs multiplePLMNs;
} NhuMultiplePLMN_Lst_r6;


typedef TknStrOSXL NhuNAS_Msg;

typedef TknStrBSXL NhuNAS_Synchronisation_Indicator;

typedef TknStrBSXL NhuP_TMSI_GSM_MAP;

typedef enum enumNhuPagPermissionWithAccessCntrlParamspagingRspRestrnIndicator
{
 NhuPagPermissionWithAccessCntrlParamspagingRspRestrnIndicatorallEnum,
 NhuPagPermissionWithAccessCntrlParamspagingRspRestrnIndicatorcSEnum,
 NhuPagPermissionWithAccessCntrlParamspagingRspRestrnIndicatorpSEnum,
 NhuPagPermissionWithAccessCntrlParamspagingRspRestrnIndicatornoneEnum
} EnumNhuPagPermissionWithAccessCntrlParamspagingRspRestrnIndicator;
typedef TknU32 NhuPagPermissionWithAccessCntrlParamspagingRspRestrnIndicator;


typedef enum enumNhuPagPermissionWithAccessCntrlParamslocationRegistrationRestrnIndicator
{
 NhuPagPermissionWithAccessCntrlParamslocationRegistrationRestrnIndicatorallEnum,
 NhuPagPermissionWithAccessCntrlParamslocationRegistrationRestrnIndicatorcSEnum,
 NhuPagPermissionWithAccessCntrlParamslocationRegistrationRestrnIndicatorpSEnum
} EnumNhuPagPermissionWithAccessCntrlParamslocationRegistrationRestrnIndicator;
typedef TknU32 NhuPagPermissionWithAccessCntrlParamslocationRegistrationRestrnIndicator;

typedef struct NhuPagPermissionWithAccessCntrlParams
{
 TknPres pres;
 NhuPagPermissionWithAccessCntrlParamspagingRspRestrnIndicator pagingRspRestrnIndicator;
 NhuPagPermissionWithAccessCntrlParamslocationRegistrationRestrnIndicator locationRegistrationRestrnIndicator;
 NhuLocRegistrationParams locationRegistration;
} NhuPagPermissionWithAccessCntrlParams;

typedef struct NhuPagPermissionWithAccessCntrlLst
{
 TknPres pres;
 NhuPagPermissionWithAccessCntrlParams pagingPermissionWithAccessCntrlParamsForOperator1;
 NhuPagPermissionWithAccessCntrlParams pagingPermissionWithAccessCntrlParamsForOperator2;
 NhuPagPermissionWithAccessCntrlParams pagingPermissionWithAccessCntrlParamsForOperator3;
 NhuPagPermissionWithAccessCntrlParams pagingPermissionWithAccessCntrlParamsForOperator4;
 NhuPagPermissionWithAccessCntrlParams pagingPermissionWithAccessCntrlParamsForOperator5;
} NhuPagPermissionWithAccessCntrlLst;

typedef struct NhuPagPermissionWithAccessCntrlForSharedNw
{
 TknU8 choice;
 union {
  NhuPagPermissionWithAccessCntrlLst pagingPermissionWithAccessCntrlLst;
  NhuPagPermissionWithAccessCntrlParams pagingPermissionWithAccessCntrlForAll;
 } val;
} NhuPagPermissionWithAccessCntrlForSharedNw;


typedef enum enumNhuPagRecordTypID
{
 NhuPagRecordTypIDimsi_GSM_MAPEnum,
 NhuPagRecordTypIDtmsi_GSM_MAP_P_TMSIEnum,
 NhuPagRecordTypIDimsi_DS_41Enum,
 NhuPagRecordTypIDtmsi_DS_41Enum
} EnumNhuPagRecordTypID;
typedef TknU32 NhuPagRecordTypID;


typedef TknStrBSXL NhuP_REV;

typedef TknStrBSXL NhuMin_P_REV;

typedef TknStrBSXL NhuSID;

typedef TknStrBSXL NhuNID;
typedef struct NhuPLMN_Typgsm_MAP
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
} NhuPLMN_Typgsm_MAP;

typedef struct NhuPLMN_Typansi_41
{
 TknPres pres;
 NhuP_REV p_REV;
 NhuMin_P_REV min_P_REV;
 NhuSID sid;
 NhuNID nid;
} NhuPLMN_Typansi_41;

typedef struct NhuPLMN_Typgsm_MAP_and_ANSI_41
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuP_REV p_REV;
 NhuMin_P_REV min_P_REV;
 NhuSID sid;
 NhuNID nid;
} NhuPLMN_Typgsm_MAP_and_ANSI_41;

typedef struct NhuPLMN_Typ
{
 TknU8 choice;
 union {
  NhuPLMN_Typgsm_MAP gsm_MAP;
  NhuPLMN_Typansi_41 ansi_41;
  NhuPLMN_Typgsm_MAP_and_ANSI_41 gsm_MAP_and_ANSI_41;
 } val;
} NhuPLMN_Typ;


typedef TknStrBSXL NhuRAB_Identitygsm_MAP_RAB_Identity;

typedef TknStrBSXL NhuRAB_Identityansi_41_RAB_Identity;
typedef struct NhuRAB_Identity
{
 TknU8 choice;
 union {
  NhuRAB_Identitygsm_MAP_RAB_Identity gsm_MAP_RAB_Identity;
  NhuRAB_Identityansi_41_RAB_Identity ansi_41_RAB_Identity;
 } val;
} NhuRAB_Identity;


typedef TknStrBSXL NhuRoutingAreaCode;
typedef struct NhuRAI
{
 TknPres pres;
 NhuLAI lai;
 NhuRoutingAreaCode rac;
} NhuRAI;


typedef TknStrBSXL NhuTMSI_GSM_MAP;
typedef struct NhuAccessClassBarredLst
{
 TknU16 noComp;
 NhuAccessClassBarred *member;
}NhuAccessClassBarredLst;


typedef enum enumNhuAllowedIndicator
{
 NhuAllowedIndicatorallowedEnum,
 NhuAllowedIndicatornotAllowedEnum
} EnumNhuAllowedIndicator;
typedef TknU32 NhuAllowedIndicator;


typedef enum enumNhuT_Barred
{
 NhuT_Barreds10Enum,
 NhuT_Barreds20Enum,
 NhuT_Barreds40Enum,
 NhuT_Barreds80Enum,
 NhuT_Barreds160Enum,
 NhuT_Barreds320Enum,
 NhuT_Barreds640Enum,
 NhuT_Barreds1280Enum
} EnumNhuT_Barred;
typedef TknU32 NhuT_Barred;

typedef struct NhuCellBarredbarred
{
 TknPres pres;
 NhuAllowedIndicator intraFreqCellReselectionInd;
 NhuT_Barred t_Barred;
} NhuCellBarredbarred;

typedef struct NhuCellBarred
{
 TknU8 choice;
 union {
  NhuCellBarredbarred barred;
 } val;
} NhuCellBarred;


typedef enum enumNhuReservedIndicator
{
 NhuReservedIndicatorreservedEnum,
 NhuReservedIndicatornotReservedEnum
} EnumNhuReservedIndicator;
typedef TknU32 NhuReservedIndicator;

typedef struct NhuCellAccessRestrn
{
 TknPres pres;
 NhuCellBarred cellBarred;
 NhuReservedIndicator cellReservedForOperatorUse;
 NhuReservedIndicator cellReservationExtn;
 NhuAccessClassBarredLst accessClassBarredLst;
} NhuCellAccessRestrn;


typedef enum enumNhuCellAccessRestrn_v870extcellReservedForCSG
{
 NhuCellAccessRestrn_v870extcellReservedForCSGtrueEnum
} EnumNhuCellAccessRestrn_v870extcellReservedForCSG;
typedef TknU32 NhuCellAccessRestrn_v870extcellReservedForCSG;

typedef struct NhuCellAccessRestrn_v870ext
{
 TknPres pres;
 NhuCellAccessRestrn_v870extcellReservedForCSG cellReservedForCSG;
} NhuCellAccessRestrn_v870ext;


typedef struct NhuCellIdentity_PerRL_Lst
{
 TknU16 noComp;
 NhuCellIdentity *member;
}NhuCellIdentity_PerRL_Lst;


typedef enum enumNhuRAT
{
 NhuRATutra_FDDEnum,
 NhuRATutra_TDDEnum,
 NhuRATgsmEnum,
 NhuRATcdma2000Enum
} EnumNhuRAT;
typedef TknU32 NhuRAT;


typedef enum enumNhuMappingFunctionTyp
{
 NhuMappingFunctionTyplinearEnum,
 NhuMappingFunctionTypfunctionTyp2Enum,
 NhuMappingFunctionTypfunctionTyp3Enum,
 NhuMappingFunctionTypfunctionTyp4Enum
} EnumNhuMappingFunctionTyp;
typedef TknU32 NhuMappingFunctionTyp;


typedef TknU32 NhuMapParameter;


typedef TknU32 NhuUpperLimit;

typedef struct NhuMappingFunctionParameter
{
 TknPres pres;
 NhuMappingFunctionTyp functionTyp;
 NhuMapParameter mapParameter1;
 NhuMapParameter mapParameter2;
 NhuUpperLimit upperLimit;
} NhuMappingFunctionParameter;

typedef struct NhuMappingFunctionParameterLst
{
 TknU16 noComp;
 NhuMappingFunctionParameter *member;
}NhuMappingFunctionParameterLst;

typedef struct NhuMapping
{
 TknPres pres;
 NhuRAT rat;
 NhuMappingFunctionParameterLst mappingFunctionParameterLst;
} NhuMapping;

typedef struct NhuMappingInfo
{
 TknU16 noComp;
 NhuMapping *member;
}NhuMappingInfo;


typedef TknU32 NhuQ_Hyst_S;


typedef TknS32 NhuS_SearchQual;


typedef TknS32 NhuS_SearchRXLEV;


typedef enum enumNhuRAT_Id
{
 NhuRAT_IdgsmEnum,
 NhuRAT_Idcdma2000Enum
} EnumNhuRAT_Id;
typedef TknU32 NhuRAT_Id;

typedef struct NhuRAT_FDD_Info
{
 TknPres pres;
 NhuRAT_Id rat_Id;
 NhuS_SearchQual s_SearchRAT;
 NhuS_SearchRXLEV s_HCS_RAT;
 NhuS_SearchQual s_Limit_SearchRAT;
} NhuRAT_FDD_Info;

typedef struct NhuRAT_FDD_InfoLst
{
 TknU16 noComp;
 NhuRAT_FDD_Info *member;
}NhuRAT_FDD_InfoLst;


typedef TknS32 NhuQ_QualMin;


typedef TknS32 NhuQ_RxlevMin;

typedef struct NhuRAT_TDD_Info
{
 TknPres pres;
 NhuRAT_Id rat_Id;
 NhuS_SearchRXLEV s_SearchRAT;
 NhuS_SearchRXLEV s_HCS_RAT;
 NhuS_SearchRXLEV s_Limit_SearchRAT;
} NhuRAT_TDD_Info;

typedef struct NhuRAT_TDD_InfoLst
{
 TknU16 noComp;
 NhuRAT_TDD_Info *member;
}NhuRAT_TDD_InfoLst;


typedef TknU32 NhuT_Reselection_S;


typedef TknU32 NhuHCS_PRIO;


typedef TknU32 NhuQ_HCS;


typedef enum enumNhuT_CRMaxHyst
{
 NhuT_CRMaxHystnotUsedEnum,
 NhuT_CRMaxHystt10Enum,
 NhuT_CRMaxHystt20Enum,
 NhuT_CRMaxHystt30Enum,
 NhuT_CRMaxHystt40Enum,
 NhuT_CRMaxHystt50Enum,
 NhuT_CRMaxHystt60Enum,
 NhuT_CRMaxHystt70Enum
} EnumNhuT_CRMaxHyst;
typedef TknU32 NhuT_CRMaxHyst;


typedef TknU32 NhuN_CR_T_CRMaxHystn_CR;

typedef struct NhuN_CR_T_CRMaxHyst
{
 TknPres pres;
 NhuN_CR_T_CRMaxHystn_CR n_CR;
 NhuT_CRMaxHyst t_CRMaxHyst;
} NhuN_CR_T_CRMaxHyst;

typedef struct NhuT_CRMax
{
 TknU8 choice;
 union {
  NhuN_CR_T_CRMaxHyst t30;
  NhuN_CR_T_CRMaxHyst t60;
  NhuN_CR_T_CRMaxHyst t120;
  NhuN_CR_T_CRMaxHyst t180;
  NhuN_CR_T_CRMaxHyst t240;
 } val;
} NhuT_CRMax;

typedef struct NhuHCS_ServingCellInfo
{
 TknPres pres;
 NhuHCS_PRIO hcs_PRIO;
 NhuQ_HCS q_HCS;
 NhuT_CRMax t_CR_Max;
} NhuHCS_ServingCellInfo;


typedef TknS32 NhuMaxAllowedUL_TX_Power;

typedef struct NhuCellSelectReselectInfoSIB_3_4cellSelectQualityMeasurecpich_Ec_N0
{
 TknPres pres;
 NhuQ_Hyst_S q_HYST_2_S;
} NhuCellSelectReselectInfoSIB_3_4cellSelectQualityMeasurecpich_Ec_N0;

typedef struct NhuCellSelectReselectInfoSIB_3_4cellSelectQualityMeasure
{
 TknU8 choice;
 union {
  NhuCellSelectReselectInfoSIB_3_4cellSelectQualityMeasurecpich_Ec_N0 cpich_Ec_N0;
 } val;
} NhuCellSelectReselectInfoSIB_3_4cellSelectQualityMeasure;

typedef struct NhuCellSelectReselectInfoSIB_3_4modeSpecificInfofdd
{
 TknPres pres;
 NhuS_SearchQual s_Intrasearch;
 NhuS_SearchQual s_Intersearch;
 NhuS_SearchRXLEV s_SearchHCS;
 NhuRAT_FDD_InfoLst rat_Lst;
 NhuQ_QualMin q_QualMin;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_3_4modeSpecificInfofdd;

typedef struct NhuCellSelectReselectInfoSIB_3_4modeSpecificInfotdd
{
 TknPres pres;
 NhuS_SearchRXLEV s_Intrasearch;
 NhuS_SearchRXLEV s_Intersearch;
 NhuS_SearchRXLEV s_SearchHCS;
 NhuRAT_TDD_InfoLst rat_Lst;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_3_4modeSpecificInfotdd;

typedef struct NhuCellSelectReselectInfoSIB_3_4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellSelectReselectInfoSIB_3_4modeSpecificInfofdd fdd;
  NhuCellSelectReselectInfoSIB_3_4modeSpecificInfotdd tdd;
 } val;
} NhuCellSelectReselectInfoSIB_3_4modeSpecificInfo;

typedef struct NhuCellSelectReselectInfoSIB_3_4
{
 TknPres pres;
 NhuMappingInfo mappingInfo;
 NhuCellSelectReselectInfoSIB_3_4cellSelectQualityMeasure cellSelectQualityMeasure;
 NhuCellSelectReselectInfoSIB_3_4modeSpecificInfo modeSpecificInfo;
 NhuQ_Hyst_S q_Hyst_l_S;
 NhuT_Reselection_S t_Reselection_S;
 NhuHCS_ServingCellInfo hcs_ServingCellInfo;
 NhuMaxAllowedUL_TX_Power maxAllowedUL_TX_Power;
} NhuCellSelectReselectInfoSIB_3_4;


typedef TknU32 NhuUARFCN;

typedef struct NhuFrequencyInfoFDD
{
 TknPres pres;
 NhuUARFCN uarfcn_UL;
 NhuUARFCN uarfcn_DL;
} NhuFrequencyInfoFDD;

typedef struct NhuFrequencyInfoTDD
{
 TknPres pres;
 NhuUARFCN uarfcn_Nt;
} NhuFrequencyInfoTDD;

typedef struct NhuFrequencyInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuFrequencyInfoFDD fdd;
  NhuFrequencyInfoTDD tdd;
 } val;
} NhuFrequencyInfomodeSpecificInfo;

typedef struct NhuFrequencyInfo
{
 TknPres pres;
 NhuFrequencyInfomodeSpecificInfo modeSpecificInfo;
} NhuFrequencyInfo;

typedef struct NhuCSG_DedicatedFrequencyInfoLst
{
 TknU16 noComp;
 NhuFrequencyInfo *member;
}NhuCSG_DedicatedFrequencyInfoLst;


typedef TknU32 NhuCSG_PSCSplitInfostartPSC;


typedef enum enumNhuCSG_PSCSplitInfonumberOfPSCs
{
 NhuCSG_PSCSplitInfonumberOfPSCspsc5Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc10Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc15Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc20Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc30Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc40Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc50Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc64Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc80Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc120Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc160Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc256Enum,
 NhuCSG_PSCSplitInfonumberOfPSCsalltheRestEnum,
 NhuCSG_PSCSplitInfonumberOfPSCsspare3Enum,
 NhuCSG_PSCSplitInfonumberOfPSCsspare2Enum,
 NhuCSG_PSCSplitInfonumberOfPSCsspare1Enum
} EnumNhuCSG_PSCSplitInfonumberOfPSCs;
typedef TknU32 NhuCSG_PSCSplitInfonumberOfPSCs;


typedef TknU32 NhuCSG_PSCSplitInfopscRange2Offset;

typedef struct NhuCSG_PSCSplitInfo
{
 TknPres pres;
 NhuCSG_PSCSplitInfostartPSC startPSC;
 NhuCSG_PSCSplitInfonumberOfPSCs numberOfPSCs;
 NhuCSG_PSCSplitInfopscRange2Offset pscRange2Offset;
} NhuCSG_PSCSplitInfo;

typedef struct NhuDomainSpecificAccessRestrn_v670extrestriction
{
 TknPres pres;
 NhuAccessClassBarredLst domainSpecficAccessClassBarredLst;
} NhuDomainSpecificAccessRestrn_v670extrestriction;

typedef struct NhuDomainSpecificAccessRestrn_v670ext
{
 TknU8 choice;
 union {
  NhuDomainSpecificAccessRestrn_v670extrestriction restriction;
 } val;
} NhuDomainSpecificAccessRestrn_v670ext;

typedef struct NhuDomainSpecificAccessRestrnParam_v670ext
{
 TknPres pres;
 NhuDomainSpecificAccessRestrn_v670ext cSDomainSpecificAccessRestrn;
 NhuDomainSpecificAccessRestrn_v670ext pSDomainSpecificAccessRestrn;
} NhuDomainSpecificAccessRestrnParam_v670ext;

typedef struct NhuDomainSpecificAccessRestrnLst_v670ext
{
 TknPres pres;
 NhuDomainSpecificAccessRestrnParam_v670ext domainSpecificAccessRestrnParamsForOperator1;
 NhuDomainSpecificAccessRestrnParam_v670ext domainSpecificAccessRestrnParamsForOperator2;
 NhuDomainSpecificAccessRestrnParam_v670ext domainSpecificAccessRestrnParamsForOperator3;
 NhuDomainSpecificAccessRestrnParam_v670ext domainSpecificAccessRestrnParamsForOperator4;
 NhuDomainSpecificAccessRestrnParam_v670ext domainSpecificAccessRestrnParamsForOperator5;
} NhuDomainSpecificAccessRestrnLst_v670ext;

typedef struct NhuDomainSpecificAccessRestrnForSharedNw_v670ext
{
 TknU8 choice;
 union {
  NhuDomainSpecificAccessRestrnLst_v670ext domainSpecificAccessRestictionLst;
  NhuDomainSpecificAccessRestrnParam_v670ext domainSpecificAccessRestictionParamsForAll;
 } val;
} NhuDomainSpecificAccessRestrnForSharedNw_v670ext;

typedef struct NhuMapping_LCR_r4
{
 TknPres pres;
 NhuMappingFunctionParameterLst mappingFunctionParameterLst;
} NhuMapping_LCR_r4;


typedef TknU32 NhuOccurrenceSequenceNumberOfPICH;


typedef enum enumNhuT_322
{
 NhuT_322m5Enum,
 NhuT_322m10Enum,
 NhuT_322m20Enum,
 NhuT_322m30Enum,
 NhuT_322m60Enum,
 NhuT_322m120Enum,
 NhuT_322m180Enum,
 NhuT_322spare1Enum
} EnumNhuT_322;
typedef TknU32 NhuT_322;


typedef TknU32 NhuEARFCN;


typedef TknU32 NhuBCCH_ARFCN;


typedef enum enumNhuGSM_CellGroupbandIndicator
{
 NhuGSM_CellGroupbandIndicatordcs1800Enum,
 NhuGSM_CellGroupbandIndicatorpcs1900Enum
} EnumNhuGSM_CellGroupbandIndicator;
typedef TknU32 NhuGSM_CellGroupbandIndicator;

typedef struct NhuGSM_CellGroupfollowingARFCNsexplicitLstOfARFCNs
{
 TknU16 noComp;
 NhuBCCH_ARFCN *member;
}NhuGSM_CellGroupfollowingARFCNsexplicitLstOfARFCNs;


typedef TknU32 NhuGSM_CellGroupfollowingARFCNsequallySpacedARFCNsarfcn_Spacing;


typedef TknU32 NhuGSM_CellGroupfollowingARFCNsequallySpacedARFCNsnumberOfFollowingARFCNs;

typedef struct NhuGSM_CellGroupfollowingARFCNsequallySpacedARFCNs
{
 TknPres pres;
 NhuGSM_CellGroupfollowingARFCNsequallySpacedARFCNsarfcn_Spacing arfcn_Spacing;
 NhuGSM_CellGroupfollowingARFCNsequallySpacedARFCNsnumberOfFollowingARFCNs numberOfFollowingARFCNs;
} NhuGSM_CellGroupfollowingARFCNsequallySpacedARFCNs;


typedef TknStrOSXL NhuGSM_CellGroupfollowingARFCNsvariableBitMapOfARFCNs;
typedef struct NhuGSM_CellGroupfollowingARFCNscontinuousRangeOfARFCNs
{
 TknPres pres;
 NhuBCCH_ARFCN endingARFCN;
} NhuGSM_CellGroupfollowingARFCNscontinuousRangeOfARFCNs;

typedef struct NhuGSM_CellGroupfollowingARFCNs
{
 TknU8 choice;
 union {
  NhuGSM_CellGroupfollowingARFCNsexplicitLstOfARFCNs explicitLstOfARFCNs;
  NhuGSM_CellGroupfollowingARFCNsequallySpacedARFCNs equallySpacedARFCNs;
  NhuGSM_CellGroupfollowingARFCNsvariableBitMapOfARFCNs variableBitMapOfARFCNs;
  NhuGSM_CellGroupfollowingARFCNscontinuousRangeOfARFCNs continuousRangeOfARFCNs;
 } val;
} NhuGSM_CellGroupfollowingARFCNs;

typedef struct NhuGSM_CellGroup
{
 TknPres pres;
 NhuBCCH_ARFCN startingARFCN;
 NhuGSM_CellGroupbandIndicator bandIndicator;
 NhuGSM_CellGroupfollowingARFCNs followingARFCNs;
} NhuGSM_CellGroup;


typedef TknU32 NhuPriorityLvlpriority;

typedef struct NhuPriorityLvlradioAccessTechnologyutraFDDMember
{
 TknPres pres;
 NhuUARFCN uarfcn;
} NhuPriorityLvlradioAccessTechnologyutraFDDMember;

typedef struct NhuPriorityLvlradioAccessTechnologyutraFDD
{
 TknU16 noComp;
 NhuPriorityLvlradioAccessTechnologyutraFDDMember *member;
}NhuPriorityLvlradioAccessTechnologyutraFDD;

typedef struct NhuPriorityLvlradioAccessTechnologyutraTDDMember
{
 TknPres pres;
 NhuUARFCN uarfcn;
} NhuPriorityLvlradioAccessTechnologyutraTDDMember;

typedef struct NhuPriorityLvlradioAccessTechnologyutraTDD
{
 TknU16 noComp;
 NhuPriorityLvlradioAccessTechnologyutraTDDMember *member;
}NhuPriorityLvlradioAccessTechnologyutraTDD;

typedef struct NhuPriorityLvlradioAccessTechnologyeutraMember
{
 TknPres pres;
 NhuEARFCN earfcn;
} NhuPriorityLvlradioAccessTechnologyeutraMember;

typedef struct NhuPriorityLvlradioAccessTechnologyeutra
{
 TknU16 noComp;
 NhuPriorityLvlradioAccessTechnologyeutraMember *member;
}NhuPriorityLvlradioAccessTechnologyeutra;

typedef struct NhuPriorityLvlradioAccessTechnologygsm
{
 TknPres pres;
 NhuGSM_CellGroup gsm_CellGroup;
} NhuPriorityLvlradioAccessTechnologygsm;

typedef struct NhuPriorityLvlradioAccessTechnology
{
 TknU8 choice;
 union {
  NhuPriorityLvlradioAccessTechnologyutraFDD utraFDD;
  NhuPriorityLvlradioAccessTechnologyutraTDD utraTDD;
  NhuPriorityLvlradioAccessTechnologyeutra eutra;
  NhuPriorityLvlradioAccessTechnologygsm gsm;
 } val;
} NhuPriorityLvlradioAccessTechnology;

typedef struct NhuPriorityLvl
{
 TknPres pres;
 NhuPriorityLvlpriority priority;
 NhuPriorityLvlradioAccessTechnology radioAccessTechnology;
} NhuPriorityLvl;

typedef struct NhuPriorityLvlLst
{
 TknU16 noComp;
 NhuPriorityLvl *member;
}NhuPriorityLvlLst;


typedef TknU8 NhuDedicatedPriorityInfoactionconfigureDedicatedPrioritieseutraDetection;

typedef struct NhuDedicatedPriorityInfoactionconfigureDedicatedPriorities
{
 TknPres pres;
 NhuT_322 t_322;
 NhuPriorityLvlLst priorityLvlLst;
 NhuDedicatedPriorityInfoactionconfigureDedicatedPrioritieseutraDetection eutraDetection;
} NhuDedicatedPriorityInfoactionconfigureDedicatedPriorities;

typedef struct NhuDedicatedPriorityInfoaction
{
 TknU8 choice;
 union {
  NhuDedicatedPriorityInfoactionconfigureDedicatedPriorities configureDedicatedPriorities;
 } val;
} NhuDedicatedPriorityInfoaction;

typedef struct NhuDedicatedPriorityInfo
{
 TknPres pres;
 NhuDedicatedPriorityInfoaction action;
} NhuDedicatedPriorityInfo;


typedef TknU32 NhuQ_Hyst_S_Fine;


typedef TknU32 NhuSpeedDependentScalingFactor;


typedef TknU32 NhuT_Reselection_S_Fine;


typedef TknU32 NhuTreselectionScalingFactor;


typedef TknStrBSXL NhuURA_Identity;
typedef struct NhuURA_IdentityLst
{
 TknU16 noComp;
 NhuURA_Identity *member;
}NhuURA_IdentityLst;


typedef enum enumNhuAccessStratumRlsIndicator
{
 NhuAccessStratumRlsIndicatorrel_4Enum,
 NhuAccessStratumRlsIndicatorrel_5Enum,
 NhuAccessStratumRlsIndicatorrel_6Enum,
 NhuAccessStratumRlsIndicatorrel_7Enum,
 NhuAccessStratumRlsIndicatorrel_8Enum,
 NhuAccessStratumRlsIndicatorrel_9Enum,
 NhuAccessStratumRlsIndicatorrel_10Enum,
 NhuAccessStratumRlsIndicatorrel_11Enum,
 NhuAccessStratumRlsIndicatorspare8Enum,
 NhuAccessStratumRlsIndicatorspare7Enum,
 NhuAccessStratumRlsIndicatorspare6Enum,
 NhuAccessStratumRlsIndicatorspare5Enum,
 NhuAccessStratumRlsIndicatorspare4Enum,
 NhuAccessStratumRlsIndicatorspare3Enum,
 NhuAccessStratumRlsIndicatorspare2Enum,
 NhuAccessStratumRlsIndicatorspare1Enum
} EnumNhuAccessStratumRlsIndicator;
typedef TknU32 NhuAccessStratumRlsIndicator;


typedef TknU32 NhuActvnTime;


typedef TknU32 NhuN_AP_RetransMax;


typedef TknU32 NhuN_AccessFails;


typedef TknU32 NhuNF_BO_NoAICH;


typedef TknU32 NhuNS_BO_Busy;


typedef TknU32 NhuNF_BO_AllBusy;


typedef TknU32 NhuNF_BO_Mismatch;


typedef enum enumNhuT_CPCH
{
 NhuT_CPCHct0Enum,
 NhuT_CPCHct1Enum
} EnumNhuT_CPCH;
typedef TknU32 NhuT_CPCH;

typedef struct NhuBackoffCntrlParams
{
 TknPres pres;
 NhuN_AP_RetransMax n_AP_RetransMax;
 NhuN_AccessFails n_AccessFails;
 NhuNF_BO_NoAICH nf_BO_NoAICH;
 NhuNS_BO_Busy ns_BO_Busy;
 NhuNF_BO_AllBusy nf_BO_AllBusy;
 NhuNF_BO_Mismatch nf_BO_Mismatch;
 NhuT_CPCH t_CPCH;
} NhuBackoffCntrlParams;


typedef TknU32 NhuBandComb;


typedef enum enumNhuSysSpecificCapUpdReq
{
 NhuSysSpecificCapUpdReqgsmEnum
} EnumNhuSysSpecificCapUpdReq;
typedef TknU32 NhuSysSpecificCapUpdReq;

typedef struct NhuSysSpecificCapUpdReqLst
{
 TknU16 noComp;
 NhuSysSpecificCapUpdReq *member;
}NhuSysSpecificCapUpdReqLst;


typedef TknU8 NhuCapUpdRequirementue_RadioCapFDDUpdRequirement;


typedef TknU8 NhuCapUpdRequirementue_RadioCapTDDUpdRequirement;

typedef struct NhuCapUpdRequirement
{
 TknPres pres;
 NhuCapUpdRequirementue_RadioCapFDDUpdRequirement ue_RadioCapFDDUpdRequirement;
 NhuCapUpdRequirementue_RadioCapTDDUpdRequirement ue_RadioCapTDDUpdRequirement;
 NhuSysSpecificCapUpdReqLst systemSpecificCapUpdReqLst;
} NhuCapUpdRequirement;


typedef TknU8 NhuCapUpdRequirement_r4_extue_RadioCapUpdRequirement_TDD128;

typedef struct NhuCapUpdRequirement_r4_ext
{
 TknPres pres;
 NhuCapUpdRequirement_r4_extue_RadioCapUpdRequirement_TDD128 ue_RadioCapUpdRequirement_TDD128;
} NhuCapUpdRequirement_r4_ext;


typedef TknU8 NhuCapUpdRequirement_r4ue_RadioCapFDDUpdRequirement_FDD;


typedef TknU8 NhuCapUpdRequirement_r4ue_RadioCapTDDUpdRequirement_TDD384;


typedef TknU8 NhuCapUpdRequirement_r4ue_RadioCapTDDUpdRequirement_TDD128;

typedef struct NhuCapUpdRequirement_r4
{
 TknPres pres;
 NhuCapUpdRequirement_r4ue_RadioCapFDDUpdRequirement_FDD ue_RadioCapFDDUpdRequirement_FDD;
 NhuCapUpdRequirement_r4ue_RadioCapTDDUpdRequirement_TDD384 ue_RadioCapTDDUpdRequirement_TDD384;
 NhuCapUpdRequirement_r4ue_RadioCapTDDUpdRequirement_TDD128 ue_RadioCapTDDUpdRequirement_TDD128;
 NhuSysSpecificCapUpdReqLst systemSpecificCapUpdReqLst;
} NhuCapUpdRequirement_r4;


typedef enum enumNhuSysSpecificCapUpdReq_r5
{
 NhuSysSpecificCapUpdReq_r5gsmEnum,
 NhuSysSpecificCapUpdReq_r5geranIuEnum
} EnumNhuSysSpecificCapUpdReq_r5;
typedef TknU32 NhuSysSpecificCapUpdReq_r5;

typedef struct NhuSysSpecificCapUpdReqLst_r5
{
 TknU16 noComp;
 NhuSysSpecificCapUpdReq_r5 *member;
}NhuSysSpecificCapUpdReqLst_r5;


typedef TknU8 NhuCapUpdRequirement_r5ue_RadioCapFDDUpdRequirement_FDD;


typedef TknU8 NhuCapUpdRequirement_r5ue_RadioCapTDDUpdRequirement_TDD384;


typedef TknU8 NhuCapUpdRequirement_r5ue_RadioCapTDDUpdRequirement_TDD128;

typedef struct NhuCapUpdRequirement_r5
{
 TknPres pres;
 NhuCapUpdRequirement_r5ue_RadioCapFDDUpdRequirement_FDD ue_RadioCapFDDUpdRequirement_FDD;
 NhuCapUpdRequirement_r5ue_RadioCapTDDUpdRequirement_TDD384 ue_RadioCapTDDUpdRequirement_TDD384;
 NhuCapUpdRequirement_r5ue_RadioCapTDDUpdRequirement_TDD128 ue_RadioCapTDDUpdRequirement_TDD128;
 NhuSysSpecificCapUpdReqLst_r5 systemSpecificCapUpdReqLst;
} NhuCapUpdRequirement_r5;


typedef TknU8 NhuCapUpdRequirement_v770extue_RadioCapTDDUpdRequirement_TDD768;

typedef struct NhuCapUpdRequirement_v770ext
{
 TknPres pres;
 NhuCapUpdRequirement_v770extue_RadioCapTDDUpdRequirement_TDD768 ue_RadioCapTDDUpdRequirement_TDD768;
} NhuCapUpdRequirement_v770ext;


typedef TknU8 NhuCapUpdRequirement_r7ue_RadioCapFDDUpdRequirement_FDD;


typedef TknU8 NhuCapUpdRequirement_r7ue_RadioCapTDDUpdRequirement_TDD384;


typedef TknU8 NhuCapUpdRequirement_r7ue_RadioCapTDDUpdRequirement_TDD768;


typedef TknU8 NhuCapUpdRequirement_r7ue_RadioCapTDDUpdRequirement_TDD128;

typedef struct NhuCapUpdRequirement_r7
{
 TknPres pres;
 NhuCapUpdRequirement_r7ue_RadioCapFDDUpdRequirement_FDD ue_RadioCapFDDUpdRequirement_FDD;
 NhuCapUpdRequirement_r7ue_RadioCapTDDUpdRequirement_TDD384 ue_RadioCapTDDUpdRequirement_TDD384;
 NhuCapUpdRequirement_r7ue_RadioCapTDDUpdRequirement_TDD768 ue_RadioCapTDDUpdRequirement_TDD768;
 NhuCapUpdRequirement_r7ue_RadioCapTDDUpdRequirement_TDD128 ue_RadioCapTDDUpdRequirement_TDD128;
 NhuSysSpecificCapUpdReqLst_r5 systemSpecificCapUpdReqLst;
} NhuCapUpdRequirement_r7;


typedef enum enumNhuSysSpecificCapUpdReq_r8
{
 NhuSysSpecificCapUpdReq_r8gsmEnum,
 NhuSysSpecificCapUpdReq_r8geranIuEnum,
 NhuSysSpecificCapUpdReq_r8eutraEnum,
 NhuSysSpecificCapUpdReq_r8spare5Enum,
 NhuSysSpecificCapUpdReq_r8spare4Enum,
 NhuSysSpecificCapUpdReq_r8spare3Enum,
 NhuSysSpecificCapUpdReq_r8spare2Enum,
 NhuSysSpecificCapUpdReq_r8spare1Enum
} EnumNhuSysSpecificCapUpdReq_r8;
typedef TknU32 NhuSysSpecificCapUpdReq_r8;

typedef struct NhuSysSpecificCapUpdReqLst_r8
{
 TknU16 noComp;
 NhuSysSpecificCapUpdReq_r8 *member;
}NhuSysSpecificCapUpdReqLst_r8;

typedef struct NhuCapUpdRequirement_v860ext
{
 TknPres pres;
 NhuSysSpecificCapUpdReqLst_r8 systemSpecificCapUpdReqLst;
} NhuCapUpdRequirement_v860ext;


typedef TknU8 NhuCapUpdRequirement_r8ue_RadioCapFDDUpdRequirement_FDD;


typedef TknU8 NhuCapUpdRequirement_r8ue_RadioCapTDDUpdRequirement_TDD384;


typedef TknU8 NhuCapUpdRequirement_r8ue_RadioCapTDDUpdRequirement_TDD768;


typedef TknU8 NhuCapUpdRequirement_r8ue_RadioCapTDDUpdRequirement_TDD128;

typedef struct NhuCapUpdRequirement_r8
{
 TknPres pres;
 NhuCapUpdRequirement_r8ue_RadioCapFDDUpdRequirement_FDD ue_RadioCapFDDUpdRequirement_FDD;
 NhuCapUpdRequirement_r8ue_RadioCapTDDUpdRequirement_TDD384 ue_RadioCapTDDUpdRequirement_TDD384;
 NhuCapUpdRequirement_r8ue_RadioCapTDDUpdRequirement_TDD768 ue_RadioCapTDDUpdRequirement_TDD768;
 NhuCapUpdRequirement_r8ue_RadioCapTDDUpdRequirement_TDD128 ue_RadioCapTDDUpdRequirement_TDD128;
 NhuSysSpecificCapUpdReqLst_r8 systemSpecificCapUpdReqLst;
} NhuCapUpdRequirement_r8;


typedef enum enumNhuCellUpdCause
{
 NhuCellUpdCausecellReselectionEnum,
 NhuCellUpdCauseperiodicalCellUpdEnum,
 NhuCellUpdCauseuplinkDataTransmissionEnum,
 NhuCellUpdCauseutran_pagingRspEnum,
 NhuCellUpdCausere_enteredServiceAreaEnum,
 NhuCellUpdCauseradiolinkFailEnum,
 NhuCellUpdCauserlc_unrecoverableErrEnum,
 NhuCellUpdCausecellUpdCause_extEnum
} EnumNhuCellUpdCause;
typedef TknU32 NhuCellUpdCause;


typedef enum enumNhuCellUpdCause_ext
{
 NhuCellUpdCause_extmbms_ReceptionEnum,
 NhuCellUpdCause_extmbms_PTP_RB_RqstEnum,
 NhuCellUpdCause_extdummyEnum,
 NhuCellUpdCause_extspare1Enum
} EnumNhuCellUpdCause_ext;
typedef TknU32 NhuCellUpdCause_ext;


typedef enum enumNhuChipRateCap
{
 NhuChipRateCapmcps3_84Enum,
 NhuChipRateCapmcps1_28Enum
} EnumNhuChipRateCap;
typedef TknU32 NhuChipRateCap;


typedef enum enumNhuCipheringAlgorithm
{
 NhuCipheringAlgorithmuea0Enum,
 NhuCipheringAlgorithmuea1Enum
} EnumNhuCipheringAlgorithm;
typedef TknU32 NhuCipheringAlgorithm;


typedef enum enumNhuCipheringAlgorithm_r7
{
 NhuCipheringAlgorithm_r7uea0Enum,
 NhuCipheringAlgorithm_r7uea1Enum,
 NhuCipheringAlgorithm_r7uea2Enum
} EnumNhuCipheringAlgorithm_r7;
typedef TknU32 NhuCipheringAlgorithm_r7;

typedef struct NhuCipheringModeCmd
{
 TknU8 choice;
 union {
  NhuCipheringAlgorithm startRestart;
 } val;
} NhuCipheringModeCmd;

typedef struct NhuCipheringModeCmd_r7
{
 TknPres pres;
 NhuCipheringAlgorithm_r7 startRestart;
} NhuCipheringModeCmd_r7;


typedef TknU32 NhuRB_Identity;


typedef TknU32 NhuRLC_SequenceNumber;

typedef struct NhuRB_ActvnTimeInfo
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRLC_SequenceNumber rlc_SequenceNumber;
} NhuRB_ActvnTimeInfo;

typedef struct NhuRB_ActvnTimeInfoLst
{
 TknU16 noComp;
 NhuRB_ActvnTimeInfo *member;
}NhuRB_ActvnTimeInfoLst;

typedef struct NhuCipheringModeInfo
{
 TknPres pres;
 NhuCipheringModeCmd cipheringModeCmd;
 NhuActvnTime activationTimeForDPCH;
 NhuRB_ActvnTimeInfoLst rb_DL_CiphActvnTimeInfo;
} NhuCipheringModeInfo;

typedef struct NhuCipheringModeInfo_r7
{
 TknPres pres;
 NhuCipheringModeCmd_r7 cipheringModeCmd;
 NhuActvnTime activationTimeForDPCH;
 NhuRB_ActvnTimeInfoLst rb_DL_CiphActvnTimeInfo;
} NhuCipheringModeInfo_r7;


typedef TknStrOSXL NhuIMSI_DS_41;

typedef TknStrOSXL NhuTMSI_DS_41;
typedef struct NhuCN_PagedUE_Identity
{
 TknU8 choice;
 union {
  NhuIMSI_GSM_MAP imsi_GSM_MAP;
  NhuTMSI_GSM_MAP tmsi_GSM_MAP;
  NhuP_TMSI_GSM_MAP p_TMSI_GSM_MAP;
  NhuIMSI_DS_41 imsi_DS_41;
  NhuTMSI_DS_41 tmsi_DS_41;
 } val;
} NhuCN_PagedUE_Identity;


typedef TknU8 NhuGSM_Measurementsgsm900;


typedef TknU8 NhuGSM_Measurementsdcs1800;


typedef TknU8 NhuGSM_Measurementsgsm1900;

typedef struct NhuGSM_Measurements
{
 TknPres pres;
 NhuGSM_Measurementsgsm900 gsm900;
 NhuGSM_Measurementsdcs1800 dcs1800;
 NhuGSM_Measurementsgsm1900 gsm1900;
} NhuGSM_Measurements;


typedef TknU8 NhuCompressedModeMeasCapfdd_Measurements;


typedef TknU8 NhuCompressedModeMeasCaptdd_Measurements;


typedef TknU8 NhuCompressedModeMeasCapmultiCarrierMeasurements;

typedef struct NhuCompressedModeMeasCap
{
 TknPres pres;
 NhuCompressedModeMeasCapfdd_Measurements fdd_Measurements;
 NhuCompressedModeMeasCaptdd_Measurements tdd_Measurements;
 NhuGSM_Measurements gsm_Measurements;
 NhuCompressedModeMeasCapmultiCarrierMeasurements multiCarrierMeasurements;
} NhuCompressedModeMeasCap;


typedef TknU8 NhuCompressedModeMeasCap_LCR_r4tdd128_Measurements;

typedef struct NhuCompressedModeMeasCap_LCR_r4
{
 TknPres pres;
 NhuCompressedModeMeasCap_LCR_r4tdd128_Measurements tdd128_Measurements;
} NhuCompressedModeMeasCap_LCR_r4;


typedef enum enumNhuCompressedModeMeasCap_v860extadjacentFrequencyMeasurements
{
 NhuCompressedModeMeasCap_v860extadjacentFrequencyMeasurementstrueEnum
} EnumNhuCompressedModeMeasCap_v860extadjacentFrequencyMeasurements;
typedef TknU32 NhuCompressedModeMeasCap_v860extadjacentFrequencyMeasurements;

typedef struct NhuCompressedModeMeasCap_v860ext
{
 TknPres pres;
 NhuCompressedModeMeasCap_v860extadjacentFrequencyMeasurements adjacentFrequencyMeasurements;
} NhuCompressedModeMeasCap_v860ext;


typedef enum enumNhuCompressedModeMeasCap_v920extinterBandMeasurements
{
 NhuCompressedModeMeasCap_v920extinterBandMeasurementstrueEnum
} EnumNhuCompressedModeMeasCap_v920extinterBandMeasurements;
typedef TknU32 NhuCompressedModeMeasCap_v920extinterBandMeasurements;

typedef struct NhuCompressedModeMeasCap_v920ext
{
 TknPres pres;
 NhuCompressedModeMeasCap_v920extinterBandMeasurements interBandMeasurements;
} NhuCompressedModeMeasCap_v920ext;


typedef enum enumNhuCompressedModeMeasCap_va40extenhancedInterFrequencyMeasurements
{
 NhuCompressedModeMeasCap_va40extenhancedInterFrequencyMeasurementstrueEnum
} EnumNhuCompressedModeMeasCap_va40extenhancedInterFrequencyMeasurements;
typedef TknU32 NhuCompressedModeMeasCap_va40extenhancedInterFrequencyMeasurements;


typedef enum enumNhuCompressedModeMeasCap_va40extfreqSpecificCompressedMode
{
 NhuCompressedModeMeasCap_va40extfreqSpecificCompressedModetrueEnum
} EnumNhuCompressedModeMeasCap_va40extfreqSpecificCompressedMode;
typedef TknU32 NhuCompressedModeMeasCap_va40extfreqSpecificCompressedMode;

typedef struct NhuCompressedModeMeasCap_va40ext
{
 TknPres pres;
 NhuCompressedModeMeasCap_va40extenhancedInterFrequencyMeasurements enhancedInterFrequencyMeasurements;
 NhuCompressedModeMeasCap_va40extfreqSpecificCompressedMode freqSpecificCompressedMode;
} NhuCompressedModeMeasCap_va40ext;


typedef TknU32 NhuRadioFrequencyBandEUTRA;


typedef TknU8 NhuCompressedModeMeasCapabEUTRAcompressedMode;

typedef struct NhuCompressedModeMeasCapabEUTRA
{
 TknPres pres;
 NhuRadioFrequencyBandEUTRA radioFrequencyBandEUTRA;
 NhuCompressedModeMeasCapabEUTRAcompressedMode compressedMode;
} NhuCompressedModeMeasCapabEUTRA;

typedef struct NhuCompressedModeMeasCapabEUTRALst
{
 TknU16 noComp;
 NhuCompressedModeMeasCapabEUTRA *member;
}NhuCompressedModeMeasCapabEUTRALst;


typedef enum enumNhuRadioFrequencyBandFDD
{
 NhuRadioFrequencyBandFDDfdd2100Enum,
 NhuRadioFrequencyBandFDDfdd1900Enum,
 NhuRadioFrequencyBandFDDfdd1800Enum,
 NhuRadioFrequencyBandFDDbandVIEnum,
 NhuRadioFrequencyBandFDDbandIVEnum,
 NhuRadioFrequencyBandFDDbandVEnum,
 NhuRadioFrequencyBandFDDbandVIIEnum,
 NhuRadioFrequencyBandFDDextension_indicatorEnum
} EnumNhuRadioFrequencyBandFDD;
typedef TknU32 NhuRadioFrequencyBandFDD;


typedef TknU8 NhuCompressedModeMeasCapabFDDdl_MeasurementsFDD;


typedef TknU8 NhuCompressedModeMeasCapabFDDul_MeasurementsFDD;

typedef struct NhuCompressedModeMeasCapabFDD
{
 TknPres pres;
 NhuRadioFrequencyBandFDD radioFrequencyBandFDD;
 NhuCompressedModeMeasCapabFDDdl_MeasurementsFDD dl_MeasurementsFDD;
 NhuCompressedModeMeasCapabFDDul_MeasurementsFDD ul_MeasurementsFDD;
} NhuCompressedModeMeasCapabFDD;

typedef struct NhuCompressedModeMeasCapabFDDLst
{
 TknU16 noComp;
 NhuCompressedModeMeasCapabFDD *member;
}NhuCompressedModeMeasCapabFDDLst;


typedef enum enumNhuRadioFrequencyBandFDD2
{
 NhuRadioFrequencyBandFDD2bandVIIIEnum,
 NhuRadioFrequencyBandFDD2bandIXEnum,
 NhuRadioFrequencyBandFDD2bandXEnum,
 NhuRadioFrequencyBandFDD2bandXIEnum,
 NhuRadioFrequencyBandFDD2bandXIIEnum,
 NhuRadioFrequencyBandFDD2bandXIIIEnum,
 NhuRadioFrequencyBandFDD2bandXIVEnum,
 NhuRadioFrequencyBandFDD2bandXVEnum,
 NhuRadioFrequencyBandFDD2bandXVIEnum,
 NhuRadioFrequencyBandFDD2bandXVIIEnum,
 NhuRadioFrequencyBandFDD2bandXVIIIEnum,
 NhuRadioFrequencyBandFDD2bandXIXEnum,
 NhuRadioFrequencyBandFDD2bandXXEnum,
 NhuRadioFrequencyBandFDD2bandXXIEnum,
 NhuRadioFrequencyBandFDD2bandXXIIEnum,
 NhuRadioFrequencyBandFDD2extension_indicatorEnum
} EnumNhuRadioFrequencyBandFDD2;
typedef TknU32 NhuRadioFrequencyBandFDD2;


typedef TknU8 NhuCompressedModeMeasCapabFDD2dl_MeasurementsFDD;


typedef TknU8 NhuCompressedModeMeasCapabFDD2ul_MeasurementsFDD;

typedef struct NhuCompressedModeMeasCapabFDD2
{
 TknPres pres;
 NhuRadioFrequencyBandFDD radioFrequencyBandFDD;
 NhuRadioFrequencyBandFDD2 radioFrequencyBandFDD2;
 NhuCompressedModeMeasCapabFDD2dl_MeasurementsFDD dl_MeasurementsFDD;
 NhuCompressedModeMeasCapabFDD2ul_MeasurementsFDD ul_MeasurementsFDD;
} NhuCompressedModeMeasCapabFDD2;

typedef struct NhuCompressedModeMeasCapabFDDLst2
{
 TknU16 noComp;
 NhuCompressedModeMeasCapabFDD2 *member;
}NhuCompressedModeMeasCapabFDDLst2;


typedef enum enumNhuRadioFrequencyBandFDD3
{
 NhuRadioFrequencyBandFDD3spare64Enum,
 NhuRadioFrequencyBandFDD3spare63Enum,
 NhuRadioFrequencyBandFDD3bandXXVEnum,
 NhuRadioFrequencyBandFDD3spare61Enum,
 NhuRadioFrequencyBandFDD3spare60Enum,
 NhuRadioFrequencyBandFDD3spare59Enum,
 NhuRadioFrequencyBandFDD3spare58Enum,
 NhuRadioFrequencyBandFDD3spare57Enum,
 NhuRadioFrequencyBandFDD3spare56Enum,
 NhuRadioFrequencyBandFDD3spare55Enum,
 NhuRadioFrequencyBandFDD3spare54Enum,
 NhuRadioFrequencyBandFDD3spare53Enum,
 NhuRadioFrequencyBandFDD3spare52Enum,
 NhuRadioFrequencyBandFDD3spare51Enum,
 NhuRadioFrequencyBandFDD3spare50Enum,
 NhuRadioFrequencyBandFDD3spare49Enum,
 NhuRadioFrequencyBandFDD3spare48Enum,
 NhuRadioFrequencyBandFDD3spare47Enum,
 NhuRadioFrequencyBandFDD3spare46Enum,
 NhuRadioFrequencyBandFDD3spare45Enum,
 NhuRadioFrequencyBandFDD3spare44Enum,
 NhuRadioFrequencyBandFDD3spare43Enum,
 NhuRadioFrequencyBandFDD3spare42Enum,
 NhuRadioFrequencyBandFDD3spare41Enum,
 NhuRadioFrequencyBandFDD3spare40Enum,
 NhuRadioFrequencyBandFDD3spare39Enum,
 NhuRadioFrequencyBandFDD3spare38Enum,
 NhuRadioFrequencyBandFDD3spare37Enum,
 NhuRadioFrequencyBandFDD3spare36Enum,
 NhuRadioFrequencyBandFDD3spare35Enum,
 NhuRadioFrequencyBandFDD3spare34Enum,
 NhuRadioFrequencyBandFDD3spare33Enum,
 NhuRadioFrequencyBandFDD3spare32Enum,
 NhuRadioFrequencyBandFDD3spare31Enum,
 NhuRadioFrequencyBandFDD3spare30Enum,
 NhuRadioFrequencyBandFDD3spare29Enum,
 NhuRadioFrequencyBandFDD3spare28Enum,
 NhuRadioFrequencyBandFDD3spare27Enum,
 NhuRadioFrequencyBandFDD3spare26Enum,
 NhuRadioFrequencyBandFDD3spare25Enum,
 NhuRadioFrequencyBandFDD3spare24Enum,
 NhuRadioFrequencyBandFDD3spare23Enum,
 NhuRadioFrequencyBandFDD3spare22Enum,
 NhuRadioFrequencyBandFDD3spare21Enum,
 NhuRadioFrequencyBandFDD3spare20Enum,
 NhuRadioFrequencyBandFDD3spare19Enum,
 NhuRadioFrequencyBandFDD3spare18Enum,
 NhuRadioFrequencyBandFDD3spare17Enum,
 NhuRadioFrequencyBandFDD3spare16Enum,
 NhuRadioFrequencyBandFDD3spare15Enum,
 NhuRadioFrequencyBandFDD3spare14Enum,
 NhuRadioFrequencyBandFDD3spare13Enum,
 NhuRadioFrequencyBandFDD3spare12Enum,
 NhuRadioFrequencyBandFDD3spare11Enum,
 NhuRadioFrequencyBandFDD3spare10Enum,
 NhuRadioFrequencyBandFDD3spare9Enum,
 NhuRadioFrequencyBandFDD3spare8Enum,
 NhuRadioFrequencyBandFDD3spare7Enum,
 NhuRadioFrequencyBandFDD3spare6Enum,
 NhuRadioFrequencyBandFDD3spare5Enum,
 NhuRadioFrequencyBandFDD3spare4Enum,
 NhuRadioFrequencyBandFDD3spare3Enum,
 NhuRadioFrequencyBandFDD3spare2Enum,
 NhuRadioFrequencyBandFDD3extension_indicatorEnum
} EnumNhuRadioFrequencyBandFDD3;
typedef TknU32 NhuRadioFrequencyBandFDD3;


typedef TknU8 NhuCompressedModeMeasCapabFDD3dl_MeasurementsFDD;


typedef TknU8 NhuCompressedModeMeasCapabFDD3ul_MeasurementsFDD;

typedef struct NhuCompressedModeMeasCapabFDD3
{
 TknPres pres;
 NhuRadioFrequencyBandFDD3 radioFrequencyBandFDD3;
 NhuCompressedModeMeasCapabFDD3dl_MeasurementsFDD dl_MeasurementsFDD;
 NhuCompressedModeMeasCapabFDD3ul_MeasurementsFDD ul_MeasurementsFDD;
} NhuCompressedModeMeasCapabFDD3;

typedef struct NhuCompressedModeMeasCapabFDDLst3
{
 TknU16 noComp;
 NhuCompressedModeMeasCapabFDD3 *member;
}NhuCompressedModeMeasCapabFDDLst3;


typedef TknU8 NhuCompressedModeMeasCapabFDD_extdl_MeasurementsFDD;


typedef TknU8 NhuCompressedModeMeasCapabFDD_extul_MeasurementsFDD;

typedef struct NhuCompressedModeMeasCapabFDD_ext
{
 TknPres pres;
 NhuRadioFrequencyBandFDD2 radioFrequencyBandFDD2;
 NhuCompressedModeMeasCapabFDD_extdl_MeasurementsFDD dl_MeasurementsFDD;
 NhuCompressedModeMeasCapabFDD_extul_MeasurementsFDD ul_MeasurementsFDD;
} NhuCompressedModeMeasCapabFDD_ext;

typedef struct NhuCompressedModeMeasCapabFDDLst_ext
{
 TknU16 noComp;
 NhuCompressedModeMeasCapabFDD_ext *member;
}NhuCompressedModeMeasCapabFDDLst_ext;


typedef enum enumNhuRadioFrequencyBandTDD
{
 NhuRadioFrequencyBandTDDaEnum,
 NhuRadioFrequencyBandTDDbEnum,
 NhuRadioFrequencyBandTDDcEnum,
 NhuRadioFrequencyBandTDDdEnum
} EnumNhuRadioFrequencyBandTDD;
typedef TknU32 NhuRadioFrequencyBandTDD;


typedef TknU8 NhuCompressedModeMeasCapabTDDdl_MeasurementsTDD;


typedef TknU8 NhuCompressedModeMeasCapabTDDul_MeasurementsTDD;

typedef struct NhuCompressedModeMeasCapabTDD
{
 TknPres pres;
 NhuRadioFrequencyBandTDD radioFrequencyBandTDD;
 NhuCompressedModeMeasCapabTDDdl_MeasurementsTDD dl_MeasurementsTDD;
 NhuCompressedModeMeasCapabTDDul_MeasurementsTDD ul_MeasurementsTDD;
} NhuCompressedModeMeasCapabTDD;

typedef struct NhuCompressedModeMeasCapabTDDLst
{
 TknU16 noComp;
 NhuCompressedModeMeasCapabTDD *member;
}NhuCompressedModeMeasCapabTDDLst;


typedef enum enumNhuRadioFrequencyBandGSM
{
 NhuRadioFrequencyBandGSMgsm450Enum,
 NhuRadioFrequencyBandGSMgsm480Enum,
 NhuRadioFrequencyBandGSMgsm850Enum,
 NhuRadioFrequencyBandGSMgsm900PEnum,
 NhuRadioFrequencyBandGSMgsm900EEnum,
 NhuRadioFrequencyBandGSMgsm1800Enum,
 NhuRadioFrequencyBandGSMgsm1900Enum,
 NhuRadioFrequencyBandGSMspare9Enum,
 NhuRadioFrequencyBandGSMspare8Enum,
 NhuRadioFrequencyBandGSMspare7Enum,
 NhuRadioFrequencyBandGSMspare6Enum,
 NhuRadioFrequencyBandGSMspare5Enum,
 NhuRadioFrequencyBandGSMspare4Enum,
 NhuRadioFrequencyBandGSMspare3Enum,
 NhuRadioFrequencyBandGSMspare2Enum,
 NhuRadioFrequencyBandGSMspare1Enum
} EnumNhuRadioFrequencyBandGSM;
typedef TknU32 NhuRadioFrequencyBandGSM;


typedef TknU8 NhuCompressedModeMeasCapabGSMdl_MeasurementsGSM;


typedef TknU8 NhuCompressedModeMeasCapabGSMul_MeasurementsGSM;

typedef struct NhuCompressedModeMeasCapabGSM
{
 TknPres pres;
 NhuRadioFrequencyBandGSM radioFrequencyBandGSM;
 NhuCompressedModeMeasCapabGSMdl_MeasurementsGSM dl_MeasurementsGSM;
 NhuCompressedModeMeasCapabGSMul_MeasurementsGSM ul_MeasurementsGSM;
} NhuCompressedModeMeasCapabGSM;

typedef struct NhuCompressedModeMeasCapabGSMLst
{
 TknU16 noComp;
 NhuCompressedModeMeasCapabGSM *member;
}NhuCompressedModeMeasCapabGSMLst;


typedef TknU8 NhuCompressedModeMeasCapabMCdl_MeasurementsMC;


typedef TknU8 NhuCompressedModeMeasCapabMCul_MeasurementsMC;

typedef struct NhuCompressedModeMeasCapabMC
{
 TknPres pres;
 NhuCompressedModeMeasCapabMCdl_MeasurementsMC dl_MeasurementsMC;
 NhuCompressedModeMeasCapabMCul_MeasurementsMC ul_MeasurementsMC;
} NhuCompressedModeMeasCapabMC;


typedef TknU32 NhuNS_IP;

typedef struct NhuInitPriorityDelayLst
{
 TknU16 noComp;
 NhuNS_IP *member;
}NhuInitPriorityDelayLst;


typedef TknU32 NhuTPC_StepSizeFDD;

typedef struct NhuPowerCntrlAlgorithm
{
 TknU8 choice;
 union {
  NhuTPC_StepSizeFDD algorithm1;
 } val;
} NhuPowerCntrlAlgorithm;


typedef TknU32 NhuDL_DPCCH_BER;

typedef struct NhuCPCH_Params
{
 TknPres pres;
 NhuInitPriorityDelayLst initialPriorityDelayLst;
 NhuBackoffCntrlParams backoffCntrlParams;
 NhuPowerCntrlAlgorithm powerCntrlAlgorithm;
 NhuDL_DPCCH_BER dl_DPCCH_BER;
} NhuCPCH_Params;


typedef enum enumNhuCSG_ProximityIndCapsupportOfIntraFreqProximityInd
{
 NhuCSG_ProximityIndCapsupportOfIntraFreqProximityIndtrueEnum
} EnumNhuCSG_ProximityIndCapsupportOfIntraFreqProximityInd;
typedef TknU32 NhuCSG_ProximityIndCapsupportOfIntraFreqProximityInd;


typedef enum enumNhuCSG_ProximityIndCapsupportOfInterFreqProximityInd
{
 NhuCSG_ProximityIndCapsupportOfInterFreqProximityIndtrueEnum
} EnumNhuCSG_ProximityIndCapsupportOfInterFreqProximityInd;
typedef TknU32 NhuCSG_ProximityIndCapsupportOfInterFreqProximityInd;


typedef enum enumNhuCSG_ProximityIndCapsupportOfE_UtraProximityInd
{
 NhuCSG_ProximityIndCapsupportOfE_UtraProximityIndtrueEnum
} EnumNhuCSG_ProximityIndCapsupportOfE_UtraProximityInd;
typedef TknU32 NhuCSG_ProximityIndCapsupportOfE_UtraProximityInd;

typedef struct NhuCSG_ProximityIndCap
{
 TknPres pres;
 NhuCSG_ProximityIndCapsupportOfIntraFreqProximityInd supportOfIntraFreqProximityInd;
 NhuCSG_ProximityIndCapsupportOfInterFreqProximityInd supportOfInterFreqProximityInd;
 NhuCSG_ProximityIndCapsupportOfE_UtraProximityInd supportOfE_UtraProximityInd;
} NhuCSG_ProximityIndCap;


typedef enum enumNhuDL_CapWithSimultaneousHS_DSCHConfig
{
 NhuDL_CapWithSimultaneousHS_DSCHConfigkbps32Enum,
 NhuDL_CapWithSimultaneousHS_DSCHConfigkbps64Enum,
 NhuDL_CapWithSimultaneousHS_DSCHConfigkbps128Enum,
 NhuDL_CapWithSimultaneousHS_DSCHConfigkbps384Enum
} EnumNhuDL_CapWithSimultaneousHS_DSCHConfig;
typedef TknU32 NhuDL_CapWithSimultaneousHS_DSCHConfig;


typedef enum enumNhuMaxNoPhysChBitsReceived
{
 NhuMaxNoPhysChBitsReceiveddummyEnum,
 NhuMaxNoPhysChBitsReceivedb1200Enum,
 NhuMaxNoPhysChBitsReceivedb2400Enum,
 NhuMaxNoPhysChBitsReceivedb3600Enum,
 NhuMaxNoPhysChBitsReceivedb4800Enum,
 NhuMaxNoPhysChBitsReceivedb7200Enum,
 NhuMaxNoPhysChBitsReceivedb9600Enum,
 NhuMaxNoPhysChBitsReceivedb14400Enum,
 NhuMaxNoPhysChBitsReceivedb19200Enum,
 NhuMaxNoPhysChBitsReceivedb28800Enum,
 NhuMaxNoPhysChBitsReceivedb38400Enum,
 NhuMaxNoPhysChBitsReceivedb48000Enum,
 NhuMaxNoPhysChBitsReceivedb57600Enum,
 NhuMaxNoPhysChBitsReceivedb67200Enum,
 NhuMaxNoPhysChBitsReceivedb76800Enum
} EnumNhuMaxNoPhysChBitsReceived;
typedef TknU32 NhuMaxNoPhysChBitsReceived;


typedef enum enumNhuMaxNoSCCPCH_RL
{
 NhuMaxNoSCCPCH_RLrl1Enum
} EnumNhuMaxNoSCCPCH_RL;
typedef TknU32 NhuMaxNoSCCPCH_RL;


typedef TknU8 NhuSimultaneousSCCPCH_DPCH_ReceptionsupportedsimultaneousSCCPCH_DPCH_DPDCH_Reception;

typedef struct NhuSimultaneousSCCPCH_DPCH_Receptionsupported
{
 TknPres pres;
 NhuMaxNoSCCPCH_RL maxNoSCCPCH_RL;
 NhuSimultaneousSCCPCH_DPCH_ReceptionsupportedsimultaneousSCCPCH_DPCH_DPDCH_Reception simultaneousSCCPCH_DPCH_DPDCH_Reception;
} NhuSimultaneousSCCPCH_DPCH_Receptionsupported;

typedef struct NhuSimultaneousSCCPCH_DPCH_Reception
{
 TknU8 choice;
 union {
  NhuSimultaneousSCCPCH_DPCH_Receptionsupported supported;
 } val;
} NhuSimultaneousSCCPCH_DPCH_Reception;


typedef TknU32 NhuDL_PhysChCapFDDmaxNoDPCH_PDSCH_Codes;


typedef TknU8 NhuDL_PhysChCapFDDsupportForSF_512;


typedef TknU8 NhuDL_PhysChCapFDDdummy;

typedef struct NhuDL_PhysChCapFDD
{
 TknPres pres;
 NhuDL_PhysChCapFDDmaxNoDPCH_PDSCH_Codes maxNoDPCH_PDSCH_Codes;
 NhuMaxNoPhysChBitsReceived maxNoPhysChBitsReceived;
 NhuDL_PhysChCapFDDsupportForSF_512 supportForSF_512;
 NhuDL_PhysChCapFDDdummy dummy;
 NhuSimultaneousSCCPCH_DPCH_Reception dummy2;
} NhuDL_PhysChCapFDD;


typedef enum enumNhuSupportOfDedicatedPilotsForChEstimation
{
 NhuSupportOfDedicatedPilotsForChEstimationtrueEnum
} EnumNhuSupportOfDedicatedPilotsForChEstimation;
typedef TknU32 NhuSupportOfDedicatedPilotsForChEstimation;

typedef struct NhuDL_PhysChCapFDD_v380ext
{
 TknPres pres;
 NhuSupportOfDedicatedPilotsForChEstimation dummy;
} NhuDL_PhysChCapFDD_v380ext;


typedef TknU32 NhuHSDSCH_physical_layer_category_ext;


typedef enum enumNhuDL_PhysChCapFDD_v770exthsscchlessHsdschOperation
{
 NhuDL_PhysChCapFDD_v770exthsscchlessHsdschOperationtrueEnum
} EnumNhuDL_PhysChCapFDD_v770exthsscchlessHsdschOperation;
typedef TknU32 NhuDL_PhysChCapFDD_v770exthsscchlessHsdschOperation;


typedef enum enumNhuDL_PhysChCapFDD_v770extenhancedFdpch
{
 NhuDL_PhysChCapFDD_v770extenhancedFdpchtrueEnum
} EnumNhuDL_PhysChCapFDD_v770extenhancedFdpch;
typedef TknU32 NhuDL_PhysChCapFDD_v770extenhancedFdpch;


typedef enum enumNhuDL_PhysChCapFDD_v770exthsdschReception_CellFach
{
 NhuDL_PhysChCapFDD_v770exthsdschReception_CellFachtrueEnum
} EnumNhuDL_PhysChCapFDD_v770exthsdschReception_CellFach;
typedef TknU32 NhuDL_PhysChCapFDD_v770exthsdschReception_CellFach;


typedef enum enumNhuDL_PhysChCapFDD_v770exthsdschReception_CellUraPch
{
 NhuDL_PhysChCapFDD_v770exthsdschReception_CellUraPchtrueEnum
} EnumNhuDL_PhysChCapFDD_v770exthsdschReception_CellUraPch;
typedef TknU32 NhuDL_PhysChCapFDD_v770exthsdschReception_CellUraPch;

typedef struct NhuDL_PhysChCapFDD_v770ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext hsdsch_physical_layer_category_ext;
 NhuDL_PhysChCapFDD_v770exthsscchlessHsdschOperation hsscchlessHsdschOperation;
 NhuDL_PhysChCapFDD_v770extenhancedFdpch enhancedFdpch;
 NhuDL_PhysChCapFDD_v770exthsdschReception_CellFach hsdschReception_CellFach;
 NhuDL_PhysChCapFDD_v770exthsdschReception_CellUraPch hsdschReception_CellUraPch;
} NhuDL_PhysChCapFDD_v770ext;


typedef TknU32 NhuHSDSCH_physical_layer_category_ext2;


typedef enum enumNhuDL_PhysChCapFDD_v860extsupportOfTgtCellPreConfig
{
 NhuDL_PhysChCapFDD_v860extsupportOfTgtCellPreConfigtrueEnum
} EnumNhuDL_PhysChCapFDD_v860extsupportOfTgtCellPreConfig;
typedef TknU32 NhuDL_PhysChCapFDD_v860extsupportOfTgtCellPreConfig;


typedef enum enumNhuDL_PhysChCapFDD_v860extsupportOfHsdschDrxOperation
{
 NhuDL_PhysChCapFDD_v860extsupportOfHsdschDrxOperationtrueEnum
} EnumNhuDL_PhysChCapFDD_v860extsupportOfHsdschDrxOperation;
typedef TknU32 NhuDL_PhysChCapFDD_v860extsupportOfHsdschDrxOperation;

typedef struct NhuDL_PhysChCapFDD_v860ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext2 hsdsch_physical_layer_category_ext2;
 NhuDL_PhysChCapFDD_v860extsupportOfTgtCellPreConfig supportOfTgtCellPreConfig;
 NhuDL_PhysChCapFDD_v860extsupportOfHsdschDrxOperation supportOfHsdschDrxOperation;
} NhuDL_PhysChCapFDD_v860ext;


typedef TknU32 NhuHSDSCH_physical_layer_category_ext3;


typedef enum enumNhuDL_PhysChCapFDD_v920extsupportOfMimoOnlySingleStream
{
 NhuDL_PhysChCapFDD_v920extsupportOfMimoOnlySingleStreamtrueEnum
} EnumNhuDL_PhysChCapFDD_v920extsupportOfMimoOnlySingleStream;
typedef TknU32 NhuDL_PhysChCapFDD_v920extsupportOfMimoOnlySingleStream;

typedef struct NhuDL_PhysChCapFDD_v920ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext3 hsdsch_physical_layer_category_ext3;
 NhuDL_PhysChCapFDD_v920extsupportOfMimoOnlySingleStream supportOfMimoOnlySingleStream;
} NhuDL_PhysChCapFDD_v920ext;


typedef TknU32 NhuHSDSCH_physical_layer_category_ext4;


typedef TknU32 NhuHSDSCH_physical_layer_category_ext5;

typedef struct NhuDL_PhysChCapFDD_va40ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext4 hsdsch_physical_layer_category_ext4;
 NhuHSDSCH_physical_layer_category_ext5 hsdsch_physical_layer_category_ext5;
} NhuDL_PhysChCapFDD_va40ext;


typedef TknU32 NhuHSDSCH_physical_layer_category_ext6;


typedef TknU32 NhuHSDSCH_physical_layer_category_ext7;

typedef struct NhuDL_PhysChCapFDD_vbxyext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext6 hsdsch_physical_layer_category_ext6;
 NhuHSDSCH_physical_layer_category_ext7 hsdsch_physical_layer_category_ext7;
} NhuDL_PhysChCapFDD_vbxyext;


typedef TknU32 NhuMaxTS_PerFrame;


typedef TknU32 NhuMaxPhysChPerFrame;


typedef enum enumNhuMinimumSF_DL
{
 NhuMinimumSF_DLsf1Enum,
 NhuMinimumSF_DLsf16Enum
} EnumNhuMinimumSF_DL;
typedef TknU32 NhuMinimumSF_DL;


typedef TknU32 NhuMaxPhysChPerTS;


typedef TknU8 NhuDL_PhysChCapTDDsupportOfPDSCH;

typedef struct NhuDL_PhysChCapTDD
{
 TknPres pres;
 NhuMaxTS_PerFrame maxTS_PerFrame;
 NhuMaxPhysChPerFrame maxPhysChPerFrame;
 NhuMinimumSF_DL minimumSF;
 NhuDL_PhysChCapTDDsupportOfPDSCH supportOfPDSCH;
 NhuMaxPhysChPerTS maxPhysChPerTS;
} NhuDL_PhysChCapTDD;


typedef TknU32 NhuMaxTS_PerSubFrame_r4;


typedef TknU32 NhuMaxPhysChPerSubFrame_r4;


typedef TknU8 NhuDL_PhysChCapTDD_LCR_r4supportOfPDSCH;


typedef TknU8 NhuDL_PhysChCapTDD_LCR_r4supportOf8PSK;

typedef struct NhuDL_PhysChCapTDD_LCR_r4
{
 TknPres pres;
 NhuMaxTS_PerSubFrame_r4 maxTS_PerSubFrame;
 NhuMaxPhysChPerSubFrame_r4 maxPhysChPerFrame;
 NhuMinimumSF_DL minimumSF;
 NhuDL_PhysChCapTDD_LCR_r4supportOfPDSCH supportOfPDSCH;
 NhuMaxPhysChPerTS maxPhysChPerTS;
 NhuDL_PhysChCapTDD_LCR_r4supportOf8PSK supportOf8PSK;
} NhuDL_PhysChCapTDD_LCR_r4;


typedef TknU32 NhuMultiCarrier_HSDSCH_physical_layer_category;

typedef struct NhuDL_PhysChCapTDD_128_v770ext
{
 TknPres pres;
 NhuMultiCarrier_HSDSCH_physical_layer_category multiCarrier_physical_layer_category;
} NhuDL_PhysChCapTDD_128_v770ext;


typedef TknU32 NhuHSDSCH_physical_layer_category_extension;


typedef TknU32 NhuMultiCarrier_HSDSCH_physical_layer_category_extension;


typedef enum enumNhuDL_PhysChCapTDD_128_v860extsupportOfSFModeForHSPDSCHDualStream
{
 NhuDL_PhysChCapTDD_128_v860extsupportOfSFModeForHSPDSCHDualStreamsf1Enum,
 NhuDL_PhysChCapTDD_128_v860extsupportOfSFModeForHSPDSCHDualStreamsf1sf16Enum
} EnumNhuDL_PhysChCapTDD_128_v860extsupportOfSFModeForHSPDSCHDualStream;
typedef TknU32 NhuDL_PhysChCapTDD_128_v860extsupportOfSFModeForHSPDSCHDualStream;

typedef struct NhuDL_PhysChCapTDD_128_v860ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_extension hSDSCH_physical_layer_category_extension;
 NhuMultiCarrier_HSDSCH_physical_layer_category_extension multiCarrier_physical_layer_category_extension;
 NhuDL_PhysChCapTDD_128_v860extsupportOfSFModeForHSPDSCHDualStream supportOfSFModeForHSPDSCHDualStream;
} NhuDL_PhysChCapTDD_128_v860ext;


typedef TknU32 NhuMultiCarrier_HSDSCH_physical_layer_category_extension2;

typedef struct NhuDL_PhysChCapInfoTDD_128_va40ext
{
 TknPres pres;
 NhuMultiCarrier_HSDSCH_physical_layer_category_extension2 multiCarrier_physical_layer_category_extension2;
} NhuDL_PhysChCapInfoTDD_128_va40ext;


typedef TknU32 NhuMaxPhysChPerFrame_768;


typedef enum enumNhuMinimumSF_DL_768
{
 NhuMinimumSF_DL_768sf1Enum,
 NhuMinimumSF_DL_768sf32Enum
} EnumNhuMinimumSF_DL_768;
typedef TknU32 NhuMinimumSF_DL_768;


typedef TknU32 NhuHSDSCH_physical_layer_category;


typedef TknU32 NhuMaxPhysChPerTS_768;


typedef TknU8 NhuDL_PhysChCapTDD_768supportOfPDSCH;

typedef struct NhuDL_PhysChCapTDD_768tdd768_hspdsch
{
 TknU8 choice;
 union {
  NhuHSDSCH_physical_layer_category supported;
 } val;
} NhuDL_PhysChCapTDD_768tdd768_hspdsch;

typedef struct NhuDL_PhysChCapTDD_768
{
 TknPres pres;
 NhuMaxTS_PerFrame maxTS_PerFrame;
 NhuMaxPhysChPerFrame_768 maxPhysChPerFrame;
 NhuMinimumSF_DL_768 minimumSF;
 NhuDL_PhysChCapTDD_768supportOfPDSCH supportOfPDSCH;
 NhuDL_PhysChCapTDD_768tdd768_hspdsch tdd768_hspdsch;
 NhuMaxPhysChPerTS_768 maxPhysChPerTS;
} NhuDL_PhysChCapTDD_768;


typedef TknU8 NhuDL_PhysChCapInfoTDD_768supportOfPDSCH;

typedef struct NhuDL_PhysChCapInfoTDD_768
{
 TknPres pres;
 NhuMaxTS_PerFrame maxTS_PerFrame;
 NhuMaxPhysChPerFrame_768 maxPhysChPerFrame;
 NhuMinimumSF_DL_768 minimumSF;
 NhuDL_PhysChCapInfoTDD_768supportOfPDSCH supportOfPDSCH;
 NhuMaxPhysChPerTS_768 maxPhysChPerTS;
} NhuDL_PhysChCapInfoTDD_768;


typedef enum enumNhuMaxNoBits
{
 NhuMaxNoBitsb640Enum,
 NhuMaxNoBitsb1280Enum,
 NhuMaxNoBitsb2560Enum,
 NhuMaxNoBitsb3840Enum,
 NhuMaxNoBitsb5120Enum,
 NhuMaxNoBitsb6400Enum,
 NhuMaxNoBitsb7680Enum,
 NhuMaxNoBitsb8960Enum,
 NhuMaxNoBitsb10240Enum,
 NhuMaxNoBitsb20480Enum,
 NhuMaxNoBitsb40960Enum,
 NhuMaxNoBitsb81920Enum,
 NhuMaxNoBitsb163840Enum
} EnumNhuMaxNoBits;
typedef TknU32 NhuMaxNoBits;

typedef struct NhuTurboSupport
{
 TknU8 choice;
 union {
  NhuMaxNoBits supported;
 } val;
} NhuTurboSupport;


typedef enum enumNhuMaxSimultaneousTransChsDL
{
 NhuMaxSimultaneousTransChsDLe4Enum,
 NhuMaxSimultaneousTransChsDLe8Enum,
 NhuMaxSimultaneousTransChsDLe16Enum,
 NhuMaxSimultaneousTransChsDLe32Enum
} EnumNhuMaxSimultaneousTransChsDL;
typedef TknU32 NhuMaxSimultaneousTransChsDL;


typedef TknU32 NhuMaxSimultaneousCCTrCH_Count;


typedef enum enumNhuMaxTportBlocksDL
{
 NhuMaxTportBlocksDLtb4Enum,
 NhuMaxTportBlocksDLtb8Enum,
 NhuMaxTportBlocksDLtb16Enum,
 NhuMaxTportBlocksDLtb32Enum,
 NhuMaxTportBlocksDLtb48Enum,
 NhuMaxTportBlocksDLtb64Enum,
 NhuMaxTportBlocksDLtb96Enum,
 NhuMaxTportBlocksDLtb128Enum,
 NhuMaxTportBlocksDLtb256Enum,
 NhuMaxTportBlocksDLtb512Enum
} EnumNhuMaxTportBlocksDL;
typedef TknU32 NhuMaxTportBlocksDL;


typedef enum enumNhuMaxNumberOfTFC_DL
{
 NhuMaxNumberOfTFC_DLtfc16Enum,
 NhuMaxNumberOfTFC_DLtfc32Enum,
 NhuMaxNumberOfTFC_DLtfc48Enum,
 NhuMaxNumberOfTFC_DLtfc64Enum,
 NhuMaxNumberOfTFC_DLtfc96Enum,
 NhuMaxNumberOfTFC_DLtfc128Enum,
 NhuMaxNumberOfTFC_DLtfc256Enum,
 NhuMaxNumberOfTFC_DLtfc512Enum,
 NhuMaxNumberOfTFC_DLtfc1024Enum
} EnumNhuMaxNumberOfTFC_DL;
typedef TknU32 NhuMaxNumberOfTFC_DL;


typedef enum enumNhuMaxNumberOfTF
{
 NhuMaxNumberOfTFtf32Enum,
 NhuMaxNumberOfTFtf64Enum,
 NhuMaxNumberOfTFtf128Enum,
 NhuMaxNumberOfTFtf256Enum,
 NhuMaxNumberOfTFtf512Enum,
 NhuMaxNumberOfTFtf1024Enum
} EnumNhuMaxNumberOfTF;
typedef TknU32 NhuMaxNumberOfTF;

typedef struct NhuDL_TransChCap
{
 TknPres pres;
 NhuMaxNoBits maxNoBitsReceived;
 NhuMaxNoBits maxConvCodeBitsReceived;
 NhuTurboSupport turboDecodingSupport;
 NhuMaxSimultaneousTransChsDL maxSimultaneousTransChs;
 NhuMaxSimultaneousCCTrCH_Count maxSimultaneousCCTrCH_Count;
 NhuMaxTportBlocksDL maxReceivedTportBlocks;
 NhuMaxNumberOfTFC_DL maxNumberOfTFC;
 NhuMaxNumberOfTF maxNumberOfTF;
} NhuDL_TransChCap;


typedef TknU32 NhuTransmissionProbability;


typedef TknU32 NhuMaxBitRate;

typedef struct NhuDRAC_SysInfo
{
 TknPres pres;
 NhuTransmissionProbability transmissionProbability;
 NhuMaxBitRate maximumBitRate;
} NhuDRAC_SysInfo;

typedef struct NhuDRAC_SysInfoLst
{
 TknU16 noComp;
 NhuDRAC_SysInfo *member;
}NhuDRAC_SysInfoLst;


typedef TknStrBSXL NhuDSCH_RNTI;

typedef enum enumNhuDelayRestrnFlag
{
 NhuDelayRestrnFlagtrueEnum
} EnumNhuDelayRestrnFlag;
typedef TknU32 NhuDelayRestrnFlag;


typedef TknStrBSXL NhuE_RNTI;

typedef TknStrBSXL NhuESN_DS_41;

typedef TknU32 NhuExtendedWaitTime;


typedef TknU32 NhuTGPSI;


typedef enum enumNhuProtErrCause
{
 NhuProtErrCauseasn1_ViolationOrEncodingErrEnum,
 NhuProtErrCausemessageTypNonexistentEnum,
 NhuProtErrCausemessageNotCompatibleWithReceiverStateEnum,
 NhuProtErrCauseie_ValueNotComprehendedEnum,
 NhuProtErrCauseinformationElementMissingEnum,
 NhuProtErrCausemessageExtnNotComprehendedEnum,
 NhuProtErrCausespare2Enum,
 NhuProtErrCausespare1Enum
} EnumNhuProtErrCause;
typedef TknU32 NhuProtErrCause;

typedef struct NhuProtErrInfodiagnosticsTyptype1
{
 TknPres pres;
 NhuProtErrCause protocolErrCause;
} NhuProtErrInfodiagnosticsTyptype1;

typedef struct NhuProtErrInfodiagnosticsTyp
{
 TknU8 choice;
 union {
  NhuProtErrInfodiagnosticsTyptype1 type1;
 } val;
} NhuProtErrInfodiagnosticsTyp;

typedef struct NhuProtErrInfo
{
 TknPres pres;
 NhuProtErrInfodiagnosticsTyp diagnosticsTyp;
} NhuProtErrInfo;

typedef struct NhuFailCauseWithProtErr
{
 TknU8 choice;
 union {
  NhuTGPSI compressedModeRuntimeErr;
  NhuProtErrInfo protocolErr;
 } val;
} NhuFailCauseWithProtErr;


typedef struct NhuFailCauseWithProtErrTrId
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuFailCauseWithProtErr failureCause;
} NhuFailCauseWithProtErrTrId;

typedef struct NhuFrequencyBandsIndicatorFDD
{
 TknU8 choice;
 union {
  NhuRadioFrequencyBandFDD frequencyBandsIndicator1;
  NhuRadioFrequencyBandFDD2 frequencyBandsIndicator2;
  NhuRadioFrequencyBandFDD3 frequencyBandsIndicator3;
 } val;
} NhuFrequencyBandsIndicatorFDD;

typedef struct NhuFrequencyBandsRedirectionFDD
{
 TknU16 noComp;
 NhuFrequencyBandsIndicatorFDD *member;
}NhuFrequencyBandsRedirectionFDD;


typedef enum enumNhuRadioFrequencyBandTDD_r10
{
 NhuRadioFrequencyBandTDD_r10aEnum,
 NhuRadioFrequencyBandTDD_r10bEnum,
 NhuRadioFrequencyBandTDD_r10cEnum,
 NhuRadioFrequencyBandTDD_r10dEnum,
 NhuRadioFrequencyBandTDD_r10eEnum,
 NhuRadioFrequencyBandTDD_r10fEnum,
 NhuRadioFrequencyBandTDD_r10spare2Enum,
 NhuRadioFrequencyBandTDD_r10spare1Enum
} EnumNhuRadioFrequencyBandTDD_r10;
typedef TknU32 NhuRadioFrequencyBandTDD_r10;

typedef struct NhuFrequencyBandsIndicatorSupportTDD128
{
 TknPres pres;
 NhuRadioFrequencyBandTDD_r10 frequencyBandsIndicatorTDD;
} NhuFrequencyBandsIndicatorSupportTDD128;

typedef struct NhuFrequencyBandsIndicatorTDD128
{
 TknU16 noComp;
 NhuFrequencyBandsIndicatorSupportTDD128 *member;
}NhuFrequencyBandsIndicatorTDD128;

typedef struct NhuFrequencyBandsIndicatorSupportmodeSpecificInfofdd
{
 TknPres pres;
 NhuFrequencyBandsRedirectionFDD frequencyBandsSupportFDD;
} NhuFrequencyBandsIndicatorSupportmodeSpecificInfofdd;

typedef struct NhuFrequencyBandsIndicatorSupportmodeSpecificInfotdd
{
 TknPres pres;
 NhuFrequencyBandsIndicatorTDD128 frequencyBandsSupportTDD128;
} NhuFrequencyBandsIndicatorSupportmodeSpecificInfotdd;

typedef struct NhuFrequencyBandsIndicatorSupportmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuFrequencyBandsIndicatorSupportmodeSpecificInfofdd fdd;
  NhuFrequencyBandsIndicatorSupportmodeSpecificInfotdd tdd;
 } val;
} NhuFrequencyBandsIndicatorSupportmodeSpecificInfo;

typedef struct NhuFrequencyBandsIndicatorSupport
{
 TknPres pres;
 NhuFrequencyBandsIndicatorSupportmodeSpecificInfo modeSpecificInfo;
} NhuFrequencyBandsIndicatorSupport;


typedef enum enumNhuGANSS_Mode
{
 NhuGANSS_ModenetworkBasedEnum,
 NhuGANSS_ModeuEBasedEnum,
 NhuGANSS_ModebothEnum,
 NhuGANSS_ModenoneEnum
} EnumNhuGANSS_Mode;
typedef TknU32 NhuGANSS_Mode;


typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b1;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b2;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b3;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b4;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b5;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b6;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b7;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b8;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b9;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b10;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b11;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b12;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b13;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b14;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b15;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b16;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b17;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b18;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b19;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b20;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b21;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b22;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b23;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b24;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b25;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b26;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b27;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b28;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b29;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b30;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b31;
typedef struct NhuU_RNTI_Group
{
 TknU8 choice;
 union {
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b1 u_RNTI_BitMaskIdx_b1;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b2 u_RNTI_BitMaskIdx_b2;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b3 u_RNTI_BitMaskIdx_b3;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b4 u_RNTI_BitMaskIdx_b4;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b5 u_RNTI_BitMaskIdx_b5;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b6 u_RNTI_BitMaskIdx_b6;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b7 u_RNTI_BitMaskIdx_b7;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b8 u_RNTI_BitMaskIdx_b8;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b9 u_RNTI_BitMaskIdx_b9;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b10 u_RNTI_BitMaskIdx_b10;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b11 u_RNTI_BitMaskIdx_b11;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b12 u_RNTI_BitMaskIdx_b12;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b13 u_RNTI_BitMaskIdx_b13;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b14 u_RNTI_BitMaskIdx_b14;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b15 u_RNTI_BitMaskIdx_b15;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b16 u_RNTI_BitMaskIdx_b16;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b17 u_RNTI_BitMaskIdx_b17;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b18 u_RNTI_BitMaskIdx_b18;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b19 u_RNTI_BitMaskIdx_b19;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b20 u_RNTI_BitMaskIdx_b20;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b21 u_RNTI_BitMaskIdx_b21;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b22 u_RNTI_BitMaskIdx_b22;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b23 u_RNTI_BitMaskIdx_b23;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b24 u_RNTI_BitMaskIdx_b24;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b25 u_RNTI_BitMaskIdx_b25;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b26 u_RNTI_BitMaskIdx_b26;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b27 u_RNTI_BitMaskIdx_b27;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b28 u_RNTI_BitMaskIdx_b28;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b29 u_RNTI_BitMaskIdx_b29;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b30 u_RNTI_BitMaskIdx_b30;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b31 u_RNTI_BitMaskIdx_b31;
 } val;
} NhuU_RNTI_Group;

typedef struct NhuGroupRlsInfo
{
 TknPres pres;
 NhuU_RNTI_Group uRNTI_Group;
} NhuGroupRlsInfo;


typedef TknStrBSXL NhuH_RNTI;

typedef enum enumNhuHigh_MobilityDetected
{
 NhuHigh_MobilityDetectedhigh_MobilityDetectedEnum
} EnumNhuHigh_MobilityDetected;
typedef TknU32 NhuHigh_MobilityDetected;


typedef TknStrBSXL NhuUESpecificBehaviourInfo1idle;

typedef TknStrBSXL NhuUESpecificBehaviourInfo1interRAT;

typedef TknU8 NhuIdleIntervalMeasCapabEUTRAidleInterval;

typedef struct NhuIdleIntervalMeasCapabEUTRA
{
 TknPres pres;
 NhuRadioFrequencyBandEUTRA radioFrequencyBandEUTRA;
 NhuIdleIntervalMeasCapabEUTRAidleInterval idleInterval;
} NhuIdleIntervalMeasCapabEUTRA;

typedef struct NhuIdleIntervalMeasCapabEUTRALst
{
 TknU16 noComp;
 NhuIdleIntervalMeasCapabEUTRA *member;
}NhuIdleIntervalMeasCapabEUTRALst;

typedef struct NhuIMSI_and_ESN_DS_41
{
 TknPres pres;
 NhuIMSI_DS_41 imsi_DS_41;
 NhuESN_DS_41 esn_DS_41;
} NhuIMSI_and_ESN_DS_41;


typedef TknStrBSXL NhuMsgAuthenticationCode;

typedef TknU32 NhuRRC_MsgSequenceNumber;

typedef struct NhuIntegrityCheckInfo
{
 TknPres pres;
 NhuMsgAuthenticationCode messageAuthenticationCode;
 NhuRRC_MsgSequenceNumber rrc_MsgSequenceNumber;
} NhuIntegrityCheckInfo;


typedef enum enumNhuMaxHcCtxtSpace
{
 NhuMaxHcCtxtSpacedummyEnum,
 NhuMaxHcCtxtSpaceby1024Enum,
 NhuMaxHcCtxtSpaceby2048Enum,
 NhuMaxHcCtxtSpaceby4096Enum,
 NhuMaxHcCtxtSpaceby8192Enum
} EnumNhuMaxHcCtxtSpace;
typedef TknU32 NhuMaxHcCtxtSpace;


typedef enum enumNhuMaxHcCtxtSpace_r5_ext
{
 NhuMaxHcCtxtSpace_r5_extby16384Enum,
 NhuMaxHcCtxtSpace_r5_extby32768Enum,
 NhuMaxHcCtxtSpace_r5_extby65536Enum,
 NhuMaxHcCtxtSpace_r5_extby131072Enum
} EnumNhuMaxHcCtxtSpace_r5_ext;
typedef TknU32 NhuMaxHcCtxtSpace_r5_ext;


typedef enum enumNhuMaxROHC_CtxtSessions_r4
{
 NhuMaxROHC_CtxtSessions_r4s2Enum,
 NhuMaxROHC_CtxtSessions_r4s4Enum,
 NhuMaxROHC_CtxtSessions_r4s8Enum,
 NhuMaxROHC_CtxtSessions_r4s12Enum,
 NhuMaxROHC_CtxtSessions_r4s16Enum,
 NhuMaxROHC_CtxtSessions_r4s24Enum,
 NhuMaxROHC_CtxtSessions_r4s32Enum,
 NhuMaxROHC_CtxtSessions_r4s48Enum,
 NhuMaxROHC_CtxtSessions_r4s64Enum,
 NhuMaxROHC_CtxtSessions_r4s128Enum,
 NhuMaxROHC_CtxtSessions_r4s256Enum,
 NhuMaxROHC_CtxtSessions_r4s512Enum,
 NhuMaxROHC_CtxtSessions_r4s1024Enum,
 NhuMaxROHC_CtxtSessions_r4s16384Enum
} EnumNhuMaxROHC_CtxtSessions_r4;
typedef TknU32 NhuMaxROHC_CtxtSessions_r4;


typedef enum enumNhuMaxAM_EntityNumberRLC_Cap
{
 NhuMaxAM_EntityNumberRLC_CapdummyEnum,
 NhuMaxAM_EntityNumberRLC_Capam4Enum,
 NhuMaxAM_EntityNumberRLC_Capam5Enum,
 NhuMaxAM_EntityNumberRLC_Capam6Enum,
 NhuMaxAM_EntityNumberRLC_Capam8Enum,
 NhuMaxAM_EntityNumberRLC_Capam16Enum,
 NhuMaxAM_EntityNumberRLC_Capam30Enum
} EnumNhuMaxAM_EntityNumberRLC_Cap;
typedef TknU32 NhuMaxAM_EntityNumberRLC_Cap;


typedef enum enumNhuMaxRLC_WindowSize
{
 NhuMaxRLC_WindowSizemws2047Enum,
 NhuMaxRLC_WindowSizemws4095Enum
} EnumNhuMaxRLC_WindowSize;
typedef TknU32 NhuMaxRLC_WindowSize;


typedef enum enumNhuMaxNoDPDCH_BitsTransmitted
{
 NhuMaxNoDPDCH_BitsTransmittedb600Enum,
 NhuMaxNoDPDCH_BitsTransmittedb1200Enum,
 NhuMaxNoDPDCH_BitsTransmittedb2400Enum,
 NhuMaxNoDPDCH_BitsTransmittedb4800Enum,
 NhuMaxNoDPDCH_BitsTransmittedb9600Enum,
 NhuMaxNoDPDCH_BitsTransmittedb19200Enum,
 NhuMaxNoDPDCH_BitsTransmittedb28800Enum,
 NhuMaxNoDPDCH_BitsTransmittedb38400Enum,
 NhuMaxNoDPDCH_BitsTransmittedb48000Enum,
 NhuMaxNoDPDCH_BitsTransmittedb57600Enum
} EnumNhuMaxNoDPDCH_BitsTransmitted;
typedef TknU32 NhuMaxNoDPDCH_BitsTransmitted;


typedef enum enumNhuMaxNumberOfTFC_UL
{
 NhuMaxNumberOfTFC_ULdummy1Enum,
 NhuMaxNumberOfTFC_ULdummy2Enum,
 NhuMaxNumberOfTFC_ULtfc16Enum,
 NhuMaxNumberOfTFC_ULtfc32Enum,
 NhuMaxNumberOfTFC_ULtfc48Enum,
 NhuMaxNumberOfTFC_ULtfc64Enum,
 NhuMaxNumberOfTFC_ULtfc96Enum,
 NhuMaxNumberOfTFC_ULtfc128Enum,
 NhuMaxNumberOfTFC_ULtfc256Enum,
 NhuMaxNumberOfTFC_ULtfc512Enum,
 NhuMaxNumberOfTFC_ULtfc1024Enum
} EnumNhuMaxNumberOfTFC_UL;
typedef TknU32 NhuMaxNumberOfTFC_UL;


typedef enum enumNhuMaxPhysChPerTimeslot
{
 NhuMaxPhysChPerTimeslotts1Enum,
 NhuMaxPhysChPerTimeslotts2Enum
} EnumNhuMaxPhysChPerTimeslot;
typedef TknU32 NhuMaxPhysChPerTimeslot;


typedef TknU32 NhuMaxPhysChPerTimeslot_LCR_r7;


typedef enum enumNhuMaxSimultaneousTransChsUL
{
 NhuMaxSimultaneousTransChsULdummyEnum,
 NhuMaxSimultaneousTransChsULe4Enum,
 NhuMaxSimultaneousTransChsULe8Enum,
 NhuMaxSimultaneousTransChsULe16Enum,
 NhuMaxSimultaneousTransChsULe32Enum
} EnumNhuMaxSimultaneousTransChsUL;
typedef TknU32 NhuMaxSimultaneousTransChsUL;


typedef enum enumNhuMaxTportBlocksUL
{
 NhuMaxTportBlocksULdummyEnum,
 NhuMaxTportBlocksULtb4Enum,
 NhuMaxTportBlocksULtb8Enum,
 NhuMaxTportBlocksULtb16Enum,
 NhuMaxTportBlocksULtb32Enum,
 NhuMaxTportBlocksULtb48Enum,
 NhuMaxTportBlocksULtb64Enum,
 NhuMaxTportBlocksULtb96Enum,
 NhuMaxTportBlocksULtb128Enum,
 NhuMaxTportBlocksULtb256Enum,
 NhuMaxTportBlocksULtb512Enum
} EnumNhuMaxTportBlocksUL;
typedef TknU32 NhuMaxTportBlocksUL;

typedef struct NhuMeasurementCap
{
 TknPres pres;
 NhuCompressedModeMeasCap downlinkCompressedMode;
 NhuCompressedModeMeasCap uplinkCompressedMode;
} NhuMeasurementCap;

typedef struct NhuMeasurementCapExt
{
 TknPres pres;
 NhuCompressedModeMeasCapabFDDLst compressedModeMeasCapabFDDLst;
 NhuCompressedModeMeasCapabTDDLst compressedModeMeasCapabTDDLst;
 NhuCompressedModeMeasCapabGSMLst compressedModeMeasCapabGSMLst;
 NhuCompressedModeMeasCapabMC compressedModeMeasCapabMC;
} NhuMeasurementCapExt;

typedef struct NhuMeasurementCapExt2
{
 TknPres pres;
 NhuCompressedModeMeasCapabFDDLst2 compressedModeMeasCapabFDDLst;
 NhuCompressedModeMeasCapabTDDLst compressedModeMeasCapabTDDLst;
 NhuCompressedModeMeasCapabGSMLst compressedModeMeasCapabGSMLst;
 NhuCompressedModeMeasCapabMC compressedModeMeasCapabMC;
} NhuMeasurementCapExt2;

typedef struct NhuMeasurementCapExt3
{
 TknPres pres;
 NhuCompressedModeMeasCapabEUTRALst compressedModeMeasCapabEUTRALst;
} NhuMeasurementCapExt3;

typedef struct NhuMeasurementCapExt4
{
 TknPres pres;
 NhuCompressedModeMeasCapabFDDLst2 compressedModeMeasCapabFDDLst2;
 NhuCompressedModeMeasCapabFDDLst3 compressedModeMeasCapabFDDLst3;
 NhuCompressedModeMeasCapabTDDLst compressedModeMeasCapabTDDLst;
 NhuCompressedModeMeasCapabGSMLst compressedModeMeasCapabGSMLst;
 NhuCompressedModeMeasCapabMC compressedModeMeasCapabMC;
 NhuCompressedModeMeasCapabEUTRALst compressedModeMeasCapabEUTRALst;
} NhuMeasurementCapExt4;

typedef struct NhuMeasurementCap_r4_ext
{
 TknPres pres;
 NhuCompressedModeMeasCap_LCR_r4 downlinkCompressedMode_LCR;
 NhuCompressedModeMeasCap_LCR_r4 uplinkCompressedMode_LCR;
} NhuMeasurementCap_r4_ext;

typedef struct NhuMeasurementCap_v860ext
{
 TknPres pres;
 NhuCompressedModeMeasCap_v860ext downlinkCompressedMode;
} NhuMeasurementCap_v860ext;

typedef struct NhuMeasurementCap_v920ext
{
 TknPres pres;
 NhuCompressedModeMeasCap_v920ext downlinkCompressedMode;
} NhuMeasurementCap_v920ext;


typedef enum enumNhuMeasurementCap_va40extinterFrequencyDetectedSetMeasurements
{
 NhuMeasurementCap_va40extinterFrequencyDetectedSetMeasurementstrueEnum
} EnumNhuMeasurementCap_va40extinterFrequencyDetectedSetMeasurements;
typedef TknU32 NhuMeasurementCap_va40extinterFrequencyDetectedSetMeasurements;

typedef struct NhuMeasurementCap_va40ext
{
 TknPres pres;
 NhuMeasurementCap_va40extinterFrequencyDetectedSetMeasurements interFrequencyDetectedSetMeasurements;
 NhuCompressedModeMeasCap_va40ext downlinkCompressedMode;
} NhuMeasurementCap_va40ext;

typedef struct NhuMeasurementCapTDD
{
 TknPres pres;
 NhuIdleIntervalMeasCapabEUTRALst idleIntervalMeasCapabEUTRALst;
} NhuMeasurementCapTDD;


typedef enum enumNhuMinimumSF_UL
{
 NhuMinimumSF_ULsf1Enum,
 NhuMinimumSF_ULsf2Enum,
 NhuMinimumSF_ULsf4Enum,
 NhuMinimumSF_ULsf8Enum,
 NhuMinimumSF_ULdummyEnum
} EnumNhuMinimumSF_UL;
typedef TknU32 NhuMinimumSF_UL;


typedef enum enumNhuNonContiguousMultiCellaggregatedCells
{
 NhuNonContiguousMultiCellaggregatedCellsnc_2cEnum,
 NhuNonContiguousMultiCellaggregatedCellsnc_3cEnum,
 NhuNonContiguousMultiCellaggregatedCellsnc_4cEnum
} EnumNhuNonContiguousMultiCellaggregatedCells;
typedef TknU32 NhuNonContiguousMultiCellaggregatedCells;


typedef enum enumNhuNonContiguousMultiCellgapSize
{
 NhuNonContiguousMultiCellgapSizefiveMHzEnum,
 NhuNonContiguousMultiCellgapSizetenMHzEnum,
 NhuNonContiguousMultiCellgapSizeanyGapSizeEnum,
 NhuNonContiguousMultiCellgapSizespare5Enum,
 NhuNonContiguousMultiCellgapSizespare4Enum,
 NhuNonContiguousMultiCellgapSizespare3Enum,
 NhuNonContiguousMultiCellgapSizespare2Enum,
 NhuNonContiguousMultiCellgapSizespare1Enum
} EnumNhuNonContiguousMultiCellgapSize;
typedef TknU32 NhuNonContiguousMultiCellgapSize;


typedef enum enumNhuNonContiguousMultiCellnonContiguousMultiCellCombination22
{
 NhuNonContiguousMultiCellnonContiguousMultiCellCombination22trueEnum
} EnumNhuNonContiguousMultiCellnonContiguousMultiCellCombination22;
typedef TknU32 NhuNonContiguousMultiCellnonContiguousMultiCellCombination22;


typedef enum enumNhuNonContiguousMultiCellnonContiguousMultiCellCombination31_13
{
 NhuNonContiguousMultiCellnonContiguousMultiCellCombination31_13trueEnum
} EnumNhuNonContiguousMultiCellnonContiguousMultiCellCombination31_13;
typedef TknU32 NhuNonContiguousMultiCellnonContiguousMultiCellCombination31_13;

typedef struct NhuNonContiguousMultiCell
{
 TknPres pres;
 NhuNonContiguousMultiCellaggregatedCells aggregatedCells;
 NhuNonContiguousMultiCellgapSize gapSize;
 NhuNonContiguousMultiCellnonContiguousMultiCellCombination22 nonContiguousMultiCellCombination22;
 NhuNonContiguousMultiCellnonContiguousMultiCellCombination31_13 nonContiguousMultiCellCombination31_13;
} NhuNonContiguousMultiCell;

typedef struct NhuNonContiguousMultiCellCombinationLst
{
 TknU16 noComp;
 NhuNonContiguousMultiCell *member;
}NhuNonContiguousMultiCellCombinationLst;


typedef enum enumNhuMultiModeCap
{
 NhuMultiModeCaptddEnum,
 NhuMultiModeCapfddEnum,
 NhuMultiModeCapfdd_tddEnum
} EnumNhuMultiModeCap;
typedef TknU32 NhuMultiModeCap;


typedef TknU8 NhuMultiRAT_CapsupportOfGSM;


typedef TknU8 NhuMultiRAT_CapsupportOfMulticarrier;

typedef struct NhuMultiRAT_Cap
{
 TknPres pres;
 NhuMultiRAT_CapsupportOfGSM supportOfGSM;
 NhuMultiRAT_CapsupportOfMulticarrier supportOfMulticarrier;
} NhuMultiRAT_Cap;


typedef TknU8 NhuMultiModeRAT_Cap_v590extsupportOfUTRAN_ToGERAN_NACC;

typedef struct NhuMultiModeRAT_Cap_v590ext
{
 TknPres pres;
 NhuMultiModeRAT_Cap_v590extsupportOfUTRAN_ToGERAN_NACC supportOfUTRAN_ToGERAN_NACC;
} NhuMultiModeRAT_Cap_v590ext;


typedef enum enumNhuMultiModeRAT_Cap_v680extsupportOfHovrToGAN
{
 NhuMultiModeRAT_Cap_v680extsupportOfHovrToGANdoesSupportHovrToGANEnum
} EnumNhuMultiModeRAT_Cap_v680extsupportOfHovrToGAN;
typedef TknU32 NhuMultiModeRAT_Cap_v680extsupportOfHovrToGAN;

typedef struct NhuMultiModeRAT_Cap_v680ext
{
 TknPres pres;
 NhuMultiModeRAT_Cap_v680extsupportOfHovrToGAN supportOfHovrToGAN;
} NhuMultiModeRAT_Cap_v680ext;


typedef enum enumNhuMultiModeRAT_Cap_v770extsupportOfPSHovrToGAN
{
 NhuMultiModeRAT_Cap_v770extsupportOfPSHovrToGANdoesSupportPSHovrToGANEnum
} EnumNhuMultiModeRAT_Cap_v770extsupportOfPSHovrToGAN;
typedef TknU32 NhuMultiModeRAT_Cap_v770extsupportOfPSHovrToGAN;

typedef struct NhuMultiModeRAT_Cap_v770ext
{
 TknPres pres;
 NhuMultiModeRAT_Cap_v770extsupportOfPSHovrToGAN supportOfPSHovrToGAN;
} NhuMultiModeRAT_Cap_v770ext;


typedef enum enumNhuMultiModeRAT_Cap_v860extsupportOfEUTRAFDD
{
 NhuMultiModeRAT_Cap_v860extsupportOfEUTRAFDDdoesSupportEUTRAFDDEnum
} EnumNhuMultiModeRAT_Cap_v860extsupportOfEUTRAFDD;
typedef TknU32 NhuMultiModeRAT_Cap_v860extsupportOfEUTRAFDD;


typedef enum enumNhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRAFDD
{
 NhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRAFDDdoesSupportInterRATHOToEUTRAFDDEnum
} EnumNhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRAFDD;
typedef TknU32 NhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRAFDD;


typedef enum enumNhuMultiModeRAT_Cap_v860extsupportOfEUTRATDD
{
 NhuMultiModeRAT_Cap_v860extsupportOfEUTRATDDdoesSupportEUTRATDDEnum
} EnumNhuMultiModeRAT_Cap_v860extsupportOfEUTRATDD;
typedef TknU32 NhuMultiModeRAT_Cap_v860extsupportOfEUTRATDD;


typedef enum enumNhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRATDD
{
 NhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRATDDdoesSupportInterRATHOToEUTRATDDEnum
} EnumNhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRATDD;
typedef TknU32 NhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRATDD;


typedef TknStrBSXL NhuMultiModeRAT_Cap_v860exteutraFeatureGroupIndicators;
typedef struct NhuMultiModeRAT_Cap_v860ext
{
 TknPres pres;
 NhuMultiModeRAT_Cap_v860extsupportOfEUTRAFDD supportOfEUTRAFDD;
 NhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRAFDD supportOfInterRATHOToEUTRAFDD;
 NhuMultiModeRAT_Cap_v860extsupportOfEUTRATDD supportOfEUTRATDD;
 NhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRATDD supportOfInterRATHOToEUTRATDD;
 NhuMultiModeRAT_Cap_v860exteutraFeatureGroupIndicators eutraFeatureGroupIndicators;
} NhuMultiModeRAT_Cap_v860ext;


typedef TknU32 NhuN_300;


typedef TknU32 NhuN_301;


typedef TknU32 NhuN_302;


typedef TknU32 NhuN_304;


typedef TknU32 NhuN_308;


typedef TknU32 NhuN_310;


typedef enum enumNhuN_312
{
 NhuN_312s1Enum,
 NhuN_312s50Enum,
 NhuN_312s100Enum,
 NhuN_312s200Enum,
 NhuN_312s400Enum,
 NhuN_312s600Enum,
 NhuN_312s800Enum,
 NhuN_312s1000Enum
} EnumNhuN_312;
typedef TknU32 NhuN_312;


typedef enum enumNhuN_312ext
{
 NhuN_312exts2Enum,
 NhuN_312exts4Enum,
 NhuN_312exts10Enum,
 NhuN_312exts20Enum
} EnumNhuN_312ext;
typedef TknU32 NhuN_312ext;


typedef enum enumNhuN_312_r5
{
 NhuN_312_r5s1Enum,
 NhuN_312_r5s2Enum,
 NhuN_312_r5s4Enum,
 NhuN_312_r5s10Enum,
 NhuN_312_r5s20Enum,
 NhuN_312_r5s50Enum,
 NhuN_312_r5s100Enum,
 NhuN_312_r5s200Enum,
 NhuN_312_r5s400Enum,
 NhuN_312_r5s600Enum,
 NhuN_312_r5s800Enum,
 NhuN_312_r5s1000Enum
} EnumNhuN_312_r5;
typedef TknU32 NhuN_312_r5;


typedef enum enumNhuN_313
{
 NhuN_313s1Enum,
 NhuN_313s2Enum,
 NhuN_313s4Enum,
 NhuN_313s10Enum,
 NhuN_313s20Enum,
 NhuN_313s50Enum,
 NhuN_313s100Enum,
 NhuN_313s200Enum
} EnumNhuN_313;
typedef TknU32 NhuN_313;


typedef enum enumNhuN_315
{
 NhuN_315s1Enum,
 NhuN_315s50Enum,
 NhuN_315s100Enum,
 NhuN_315s200Enum,
 NhuN_315s400Enum,
 NhuN_315s600Enum,
 NhuN_315s800Enum,
 NhuN_315s1000Enum
} EnumNhuN_315;
typedef TknU32 NhuN_315;


typedef enum enumNhuN_315ext
{
 NhuN_315exts2Enum,
 NhuN_315exts4Enum,
 NhuN_315exts10Enum,
 NhuN_315exts20Enum
} EnumNhuN_315ext;
typedef TknU32 NhuN_315ext;


typedef enum enumNhuN_315_r5
{
 NhuN_315_r5s1Enum,
 NhuN_315_r5s2Enum,
 NhuN_315_r5s4Enum,
 NhuN_315_r5s10Enum,
 NhuN_315_r5s20Enum,
 NhuN_315_r5s50Enum,
 NhuN_315_r5s100Enum,
 NhuN_315_r5s200Enum,
 NhuN_315_r5s400Enum,
 NhuN_315_r5s600Enum,
 NhuN_315_r5s800Enum,
 NhuN_315_r5s1000Enum
} EnumNhuN_315_r5;
typedef TknU32 NhuN_315_r5;


typedef enum enumNhuNeighCellSI_AcquisitionCapsupportOfIntraFreqSIAcquisitionForHO
{
 NhuNeighCellSI_AcquisitionCapsupportOfIntraFreqSIAcquisitionForHOtrueEnum
} EnumNhuNeighCellSI_AcquisitionCapsupportOfIntraFreqSIAcquisitionForHO;
typedef TknU32 NhuNeighCellSI_AcquisitionCapsupportOfIntraFreqSIAcquisitionForHO;


typedef enum enumNhuNeighCellSI_AcquisitionCapsupportOfInterFreqSIAcquisitionForHO
{
 NhuNeighCellSI_AcquisitionCapsupportOfInterFreqSIAcquisitionForHOtrueEnum
} EnumNhuNeighCellSI_AcquisitionCapsupportOfInterFreqSIAcquisitionForHO;
typedef TknU32 NhuNeighCellSI_AcquisitionCapsupportOfInterFreqSIAcquisitionForHO;


typedef enum enumNhuNeighCellSI_AcquisitionCapsupportOfE_UtraSIAcquisitionForHO
{
 NhuNeighCellSI_AcquisitionCapsupportOfE_UtraSIAcquisitionForHOtrueEnum
} EnumNhuNeighCellSI_AcquisitionCapsupportOfE_UtraSIAcquisitionForHO;
typedef TknU32 NhuNeighCellSI_AcquisitionCapsupportOfE_UtraSIAcquisitionForHO;

typedef struct NhuNeighCellSI_AcquisitionCap
{
 TknPres pres;
 NhuNeighCellSI_AcquisitionCapsupportOfIntraFreqSIAcquisitionForHO supportOfIntraFreqSIAcquisitionForHO;
 NhuNeighCellSI_AcquisitionCapsupportOfInterFreqSIAcquisitionForHO supportOfInterFreqSIAcquisitionForHO;
 NhuNeighCellSI_AcquisitionCapsupportOfE_UtraSIAcquisitionForHO supportOfE_UtraSIAcquisitionForHO;
} NhuNeighCellSI_AcquisitionCap;


typedef TknU32 NhuGANSS_Signal_Id;


typedef enum enumNhuNwAssistedGANSS_Supp_LstMembergANSS_Id
{
 NhuNwAssistedGANSS_Supp_LstMembergANSS_IdsbasEnum,
 NhuNwAssistedGANSS_Supp_LstMembergANSS_IdmodernizedGPSEnum,
 NhuNwAssistedGANSS_Supp_LstMembergANSS_IdqzssEnum,
 NhuNwAssistedGANSS_Supp_LstMembergANSS_IdglonassEnum,
 NhuNwAssistedGANSS_Supp_LstMembergANSS_Idspare4Enum,
 NhuNwAssistedGANSS_Supp_LstMembergANSS_Idspare3Enum,
 NhuNwAssistedGANSS_Supp_LstMembergANSS_Idspare2Enum,
 NhuNwAssistedGANSS_Supp_LstMembergANSS_Idspare1Enum
} EnumNhuNwAssistedGANSS_Supp_LstMembergANSS_Id;
typedef TknU32 NhuNwAssistedGANSS_Supp_LstMembergANSS_Id;


typedef TknU8 NhuNwAssistedGANSS_Supp_LstMembersupportForUE_GANSS_TimingOfCellFrames;


typedef TknU8 NhuNwAssistedGANSS_Supp_LstMembersupportForUE_GANSS_CarrierPhaseMeasurement;

typedef struct NhuNwAssistedGANSS_Supp_LstMember
{
 TknPres pres;
 NhuNwAssistedGANSS_Supp_LstMembergANSS_Id gANSS_Id;
 NhuGANSS_Mode gANSS_Mode;
 NhuGANSS_Signal_Id gANSS_SignalId;
 NhuNwAssistedGANSS_Supp_LstMembersupportForUE_GANSS_TimingOfCellFrames supportForUE_GANSS_TimingOfCellFrames;
 NhuNwAssistedGANSS_Supp_LstMembersupportForUE_GANSS_CarrierPhaseMeasurement supportForUE_GANSS_CarrierPhaseMeasurement;
} NhuNwAssistedGANSS_Supp_LstMember;

typedef struct NhuNwAssistedGANSS_Supp_Lst
{
 TknU16 noComp;
 NhuNwAssistedGANSS_Supp_LstMember *member;
}NhuNwAssistedGANSS_Supp_Lst;


typedef TknStrBSXL NhuNwAssistedGANSS_Supp_Lst_v860extMembersbas_Ids;

typedef TknStrBSXL NhuNwAssistedGANSS_Supp_Lst_v860extMembergANSS_SignalIds;

typedef enum enumNhuNwAssistedGANSS_Supp_Lst_v860extMembernon_native_AD_choices_supported
{
 NhuNwAssistedGANSS_Supp_Lst_v860extMembernon_native_AD_choices_supportedtrueEnum
} EnumNhuNwAssistedGANSS_Supp_Lst_v860extMembernon_native_AD_choices_supported;
typedef TknU32 NhuNwAssistedGANSS_Supp_Lst_v860extMembernon_native_AD_choices_supported;

typedef struct NhuNwAssistedGANSS_Supp_Lst_v860extMember
{
 TknPres pres;
 NhuNwAssistedGANSS_Supp_Lst_v860extMembersbas_Ids sbas_Ids;
 NhuNwAssistedGANSS_Supp_Lst_v860extMembergANSS_SignalIds gANSS_SignalIds;
 NhuNwAssistedGANSS_Supp_Lst_v860extMembernon_native_AD_choices_supported non_native_AD_choices_supported;
} NhuNwAssistedGANSS_Supp_Lst_v860extMember;

typedef struct NhuNwAssistedGANSS_Supp_Lst_v860ext
{
 TknU16 noComp;
 NhuNwAssistedGANSS_Supp_Lst_v860extMember *member;
}NhuNwAssistedGANSS_Supp_Lst_v860ext;


typedef enum enumNhuNwAssistedGPS_Supp
{
 NhuNwAssistedGPS_SuppnetworkBasedEnum,
 NhuNwAssistedGPS_Suppue_BasedEnum,
 NhuNwAssistedGPS_SuppbothNwAndUE_BasedEnum,
 NhuNwAssistedGPS_SuppnoNwAssistedGPSEnum
} EnumNhuNwAssistedGPS_Supp;
typedef TknU32 NhuNwAssistedGPS_Supp;

typedef struct NhuP_TMSI_and_RAI_GSM_MAP
{
 TknPres pres;
 NhuP_TMSI_GSM_MAP p_TMSI;
 NhuRAI rai;
} NhuP_TMSI_and_RAI_GSM_MAP;


typedef TknU8 NhuPDCP_CaplosslessSRNS_RelocationSupport;

typedef struct NhuPDCP_CapsupportForRfc2507
{
 TknU8 choice;
 union {
  NhuMaxHcCtxtSpace supported;
 } val;
} NhuPDCP_CapsupportForRfc2507;

typedef struct NhuPDCP_Cap
{
 TknPres pres;
 NhuPDCP_CaplosslessSRNS_RelocationSupport losslessSRNS_RelocationSupport;
 NhuPDCP_CapsupportForRfc2507 supportForRfc2507;
} NhuPDCP_Cap;


typedef TknU32 NhuPDCP_Cap_r4_extsupportForRfc3095supportedreverseCompressionDepth;

typedef struct NhuPDCP_Cap_r4_extsupportForRfc3095supported
{
 TknPres pres;
 NhuMaxROHC_CtxtSessions_r4 maxROHC_CtxtSessions;
 NhuPDCP_Cap_r4_extsupportForRfc3095supportedreverseCompressionDepth reverseCompressionDepth;
} NhuPDCP_Cap_r4_extsupportForRfc3095supported;

typedef struct NhuPDCP_Cap_r4_extsupportForRfc3095
{
 TknU8 choice;
 union {
  NhuPDCP_Cap_r4_extsupportForRfc3095supported supported;
 } val;
} NhuPDCP_Cap_r4_extsupportForRfc3095;

typedef struct NhuPDCP_Cap_r4_ext
{
 TknPres pres;
 NhuPDCP_Cap_r4_extsupportForRfc3095 supportForRfc3095;
} NhuPDCP_Cap_r4_ext;


typedef TknU8 NhuPDCP_Cap_r5_extsupportForRfc3095CtxtRelocation;

typedef struct NhuPDCP_Cap_r5_ext
{
 TknPres pres;
 NhuPDCP_Cap_r5_extsupportForRfc3095CtxtRelocation supportForRfc3095CtxtRelocation;
 NhuMaxHcCtxtSpace_r5_ext maxHcCtxtSpace;
} NhuPDCP_Cap_r5_ext;


typedef enum enumNhuPDCP_Cap_r5_ext2losslessDLRLC_PDUSizeChange
{
 NhuPDCP_Cap_r5_ext2losslessDLRLC_PDUSizeChangetrueEnum
} EnumNhuPDCP_Cap_r5_ext2losslessDLRLC_PDUSizeChange;
typedef TknU32 NhuPDCP_Cap_r5_ext2losslessDLRLC_PDUSizeChange;

typedef struct NhuPDCP_Cap_r5_ext2
{
 TknPres pres;
 NhuPDCP_Cap_r5_ext2losslessDLRLC_PDUSizeChange losslessDLRLC_PDUSizeChange;
} NhuPDCP_Cap_r5_ext2;


typedef enum enumNhuPDCP_Cap_v770extsupportForCSVoiceoverHSPA
{
 NhuPDCP_Cap_v770extsupportForCSVoiceoverHSPAtrueEnum
} EnumNhuPDCP_Cap_v770extsupportForCSVoiceoverHSPA;
typedef TknU32 NhuPDCP_Cap_v770extsupportForCSVoiceoverHSPA;

typedef struct NhuPDCP_Cap_v770ext
{
 TknPres pres;
 NhuPDCP_Cap_v770extsupportForCSVoiceoverHSPA supportForCSVoiceoverHSPA;
} NhuPDCP_Cap_v770ext;


typedef TknU8 NhuUL_PhysChCapFDDdummy;

typedef struct NhuUL_PhysChCapFDD
{
 TknPres pres;
 NhuMaxNoDPDCH_BitsTransmitted maxNoDPDCH_BitsTransmitted;
 NhuUL_PhysChCapFDDdummy dummy;
} NhuUL_PhysChCapFDD;


typedef TknU8 NhuUL_PhysChCapTDDsupportOfPUSCH;

typedef struct NhuUL_PhysChCapTDD
{
 TknPres pres;
 NhuMaxTS_PerFrame maxTS_PerFrame;
 NhuMaxPhysChPerTimeslot maxPhysChPerTimeslot;
 NhuMinimumSF_UL minimumSF;
 NhuUL_PhysChCapTDDsupportOfPUSCH supportOfPUSCH;
} NhuUL_PhysChCapTDD;

typedef struct NhuPhysicalChannelCapfddPhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapFDD downlinkPhysChCap;
 NhuUL_PhysChCapFDD uplinkPhysChCap;
} NhuPhysicalChannelCapfddPhysChCap;

typedef struct NhuPhysicalChannelCaptddPhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapTDD downlinkPhysChCap;
 NhuUL_PhysChCapTDD uplinkPhysChCap;
} NhuPhysicalChannelCaptddPhysChCap;

typedef struct NhuPhysicalChannelCap
{
 TknPres pres;
 NhuPhysicalChannelCapfddPhysChCap fddPhysChCap;
 NhuPhysicalChannelCaptddPhysChCap tddPhysChCap;
} NhuPhysicalChannelCap;


typedef TknU32 NhuUL_PhysChCapFDD_v770extedch_PhysicalLyrCategory_extension;


typedef enum enumNhuUL_PhysChCapFDD_v770extdiscontinuousDpcchTransmission
{
 NhuUL_PhysChCapFDD_v770extdiscontinuousDpcchTransmissiontrueEnum
} EnumNhuUL_PhysChCapFDD_v770extdiscontinuousDpcchTransmission;
typedef TknU32 NhuUL_PhysChCapFDD_v770extdiscontinuousDpcchTransmission;


typedef enum enumNhuUL_PhysChCapFDD_v770extslotFormat4
{
 NhuUL_PhysChCapFDD_v770extslotFormat4trueEnum
} EnumNhuUL_PhysChCapFDD_v770extslotFormat4;
typedef TknU32 NhuUL_PhysChCapFDD_v770extslotFormat4;

typedef struct NhuUL_PhysChCapFDD_v770ext
{
 TknPres pres;
 NhuUL_PhysChCapFDD_v770extedch_PhysicalLyrCategory_extension edch_PhysicalLyrCategory_extension;
 NhuUL_PhysChCapFDD_v770extdiscontinuousDpcchTransmission discontinuousDpcchTransmission;
 NhuUL_PhysChCapFDD_v770extslotFormat4 slotFormat4;
} NhuUL_PhysChCapFDD_v770ext;


typedef TknU32 NhuUL_PhysChCapTDD_384_v770exttdd384_edchsupportedtdd_edch_PhysicalLyrCategory;

typedef struct NhuUL_PhysChCapTDD_384_v770exttdd384_edchsupported
{
 TknPres pres;
 NhuUL_PhysChCapTDD_384_v770exttdd384_edchsupportedtdd_edch_PhysicalLyrCategory tdd_edch_PhysicalLyrCategory;
} NhuUL_PhysChCapTDD_384_v770exttdd384_edchsupported;

typedef struct NhuUL_PhysChCapTDD_384_v770exttdd384_edch
{
 TknU8 choice;
 union {
  NhuUL_PhysChCapTDD_384_v770exttdd384_edchsupported supported;
 } val;
} NhuUL_PhysChCapTDD_384_v770exttdd384_edch;

typedef struct NhuUL_PhysChCapTDD_384_v770ext
{
 TknPres pres;
 NhuUL_PhysChCapTDD_384_v770exttdd384_edch tdd384_edch;
} NhuUL_PhysChCapTDD_384_v770ext;


typedef TknU8 NhuUL_PhysChCapTDD_768supportOfPUSCH;


typedef TknU32 NhuUL_PhysChCapTDD_768tdd384_edchsupportedtdd_edch_PhysicalLyrCategory;

typedef struct NhuUL_PhysChCapTDD_768tdd384_edchsupported
{
 TknPres pres;
 NhuUL_PhysChCapTDD_768tdd384_edchsupportedtdd_edch_PhysicalLyrCategory tdd_edch_PhysicalLyrCategory;
} NhuUL_PhysChCapTDD_768tdd384_edchsupported;

typedef struct NhuUL_PhysChCapTDD_768tdd384_edch
{
 TknU8 choice;
 union {
  NhuUL_PhysChCapTDD_768tdd384_edchsupported supported;
 } val;
} NhuUL_PhysChCapTDD_768tdd384_edch;

typedef struct NhuUL_PhysChCapTDD_768
{
 TknPres pres;
 NhuMaxTS_PerFrame maxTS_PerFrame;
 NhuMaxPhysChPerTimeslot maxPhysChPerTimeslot;
 NhuMinimumSF_UL minimumSF;
 NhuUL_PhysChCapTDD_768supportOfPUSCH supportOfPUSCH;
 NhuUL_PhysChCapTDD_768tdd384_edch tdd384_edch;
} NhuUL_PhysChCapTDD_768;


typedef TknU32 NhuUL_PhysChCapTDD_128_v770exttdd128_edchsupportedtdd_edch_PhysicalLyrCategory;

typedef struct NhuUL_PhysChCapTDD_128_v770exttdd128_edchsupported
{
 TknPres pres;
 NhuUL_PhysChCapTDD_128_v770exttdd128_edchsupportedtdd_edch_PhysicalLyrCategory tdd_edch_PhysicalLyrCategory;
} NhuUL_PhysChCapTDD_128_v770exttdd128_edchsupported;

typedef struct NhuUL_PhysChCapTDD_128_v770exttdd128_edch
{
 TknU8 choice;
 union {
  NhuUL_PhysChCapTDD_128_v770exttdd128_edchsupported supported;
 } val;
} NhuUL_PhysChCapTDD_128_v770exttdd128_edch;

typedef struct NhuUL_PhysChCapTDD_128_v770ext
{
 TknPres pres;
 NhuMaxPhysChPerTimeslot_LCR_r7 maxPhysChPerTimeslot;
 NhuUL_PhysChCapTDD_128_v770exttdd128_edch tdd128_edch;
} NhuUL_PhysChCapTDD_128_v770ext;

typedef struct NhuPhysicalChannelCap_v770extfddPhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapFDD_v770ext downlinkPhysChCap;
 NhuUL_PhysChCapFDD_v770ext uplinkPhysChCap;
} NhuPhysicalChannelCap_v770extfddPhysChCap;

typedef struct NhuPhysicalChannelCap_v770exttddPhysChCap_384
{
 TknPres pres;
 NhuUL_PhysChCapTDD_384_v770ext uplinkPhysChCap;
} NhuPhysicalChannelCap_v770exttddPhysChCap_384;

typedef struct NhuPhysicalChannelCap_v770exttddPhysChCap_768
{
 TknPres pres;
 NhuDL_PhysChCapTDD_768 downlinkPhysChCap;
 NhuUL_PhysChCapTDD_768 uplinkPhysChCap;
} NhuPhysicalChannelCap_v770exttddPhysChCap_768;

typedef struct NhuPhysicalChannelCap_v770exttddPhysChCap_128
{
 TknPres pres;
 NhuDL_PhysChCapTDD_128_v770ext downlinkPhysChCap;
 NhuUL_PhysChCapTDD_128_v770ext uplinkPhysChCap;
} NhuPhysicalChannelCap_v770exttddPhysChCap_128;

typedef struct NhuPhysicalChannelCap_v770ext
{
 TknPres pres;
 NhuPhysicalChannelCap_v770extfddPhysChCap fddPhysChCap;
 NhuPhysicalChannelCap_v770exttddPhysChCap_384 tddPhysChCap_384;
 NhuPhysicalChannelCap_v770exttddPhysChCap_768 tddPhysChCap_768;
 NhuPhysicalChannelCap_v770exttddPhysChCap_128 tddPhysChCap_128;
} NhuPhysicalChannelCap_v770ext;

typedef struct NhuPhysicalChannelCap_v860extfddPhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapFDD_v860ext downlinkPhysChCap;
} NhuPhysicalChannelCap_v860extfddPhysChCap;

typedef struct NhuPhysicalChannelCap_v860exttddPhysChCap_128
{
 TknPres pres;
 NhuDL_PhysChCapTDD_128_v860ext downlinkPhysChCap;
} NhuPhysicalChannelCap_v860exttddPhysChCap_128;

typedef struct NhuPhysicalChannelCap_v860ext
{
 TknPres pres;
 NhuPhysicalChannelCap_v860extfddPhysChCap fddPhysChCap;
 NhuPhysicalChannelCap_v860exttddPhysChCap_128 tddPhysChCap_128;
} NhuPhysicalChannelCap_v860ext;


typedef TknU32 NhuUL_PhysChCapFDD_v920extedch_PhysicalLyrCategory_extension2;

typedef struct NhuUL_PhysChCapFDD_v920ext
{
 TknPres pres;
 NhuUL_PhysChCapFDD_v920extedch_PhysicalLyrCategory_extension2 edch_PhysicalLyrCategory_extension2;
} NhuUL_PhysChCapFDD_v920ext;

typedef struct NhuPhysicalChannelCap_v920extfddPhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapFDD_v920ext downlinkPhysChCap;
 NhuUL_PhysChCapFDD_v920ext uplinkPhysChCap;
} NhuPhysicalChannelCap_v920extfddPhysChCap;

typedef struct NhuPhysicalChannelCap_v920ext
{
 TknPres pres;
 NhuPhysicalChannelCap_v920extfddPhysChCap fddPhysChCap;
} NhuPhysicalChannelCap_v920ext;


typedef TknU32 NhuUL_PhysChCapInfoTDD_128_va40extmultiCarrier_EdchPhysicalLyrCategory_128;


typedef enum enumNhuUL_PhysChCapInfoTDD_128_va40extmaxNumberCarrierForMCHSUPA_TDD
{
 NhuUL_PhysChCapInfoTDD_128_va40extmaxNumberCarrierForMCHSUPA_TDDnf_2Enum,
 NhuUL_PhysChCapInfoTDD_128_va40extmaxNumberCarrierForMCHSUPA_TDDnf_3Enum,
 NhuUL_PhysChCapInfoTDD_128_va40extmaxNumberCarrierForMCHSUPA_TDDnf_6Enum,
 NhuUL_PhysChCapInfoTDD_128_va40extmaxNumberCarrierForMCHSUPA_TDDspareEnum
} EnumNhuUL_PhysChCapInfoTDD_128_va40extmaxNumberCarrierForMCHSUPA_TDD;
typedef TknU32 NhuUL_PhysChCapInfoTDD_128_va40extmaxNumberCarrierForMCHSUPA_TDD;

typedef struct NhuUL_PhysChCapInfoTDD_128_va40ext
{
 TknPres pres;
 NhuUL_PhysChCapInfoTDD_128_va40extmultiCarrier_EdchPhysicalLyrCategory_128 multiCarrier_EdchPhysicalLyrCategory_128;
 NhuUL_PhysChCapInfoTDD_128_va40extmaxNumberCarrierForMCHSUPA_TDD maxNumberCarrierForMCHSUPA_TDD;
} NhuUL_PhysChCapInfoTDD_128_va40ext;

typedef struct NhuPhysicalChannelCap_va40extfddPhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapFDD_va40ext downlinkPhysChCap;
} NhuPhysicalChannelCap_va40extfddPhysChCap;

typedef struct NhuPhysicalChannelCap_va40exttddPhysChCap_128
{
 TknPres pres;
 NhuDL_PhysChCapInfoTDD_128_va40ext downlinkPhysChCap;
 NhuUL_PhysChCapInfoTDD_128_va40ext uplinkPhysChCap;
} NhuPhysicalChannelCap_va40exttddPhysChCap_128;

typedef struct NhuPhysicalChannelCap_va40ext
{
 TknPres pres;
 NhuPhysicalChannelCap_va40extfddPhysChCap fddPhysChCap;
 NhuPhysicalChannelCap_va40exttddPhysChCap_128 tddPhysChCap_128;
} NhuPhysicalChannelCap_va40ext;

typedef struct NhuPhysicalChannelCap_vbxyextfddPhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapFDD_vbxyext downlinkPhysChCap;
} NhuPhysicalChannelCap_vbxyextfddPhysChCap;

typedef struct NhuPhysicalChannelCap_vbxyext
{
 TknPres pres;
 NhuPhysicalChannelCap_vbxyextfddPhysChCap fddPhysChCap;
} NhuPhysicalChannelCap_vbxyext;

typedef struct NhuUL_PhysChCapInfoTDD_128_v770ext
{
 TknPres pres;
 NhuMaxPhysChPerTimeslot_LCR_r7 maxPhysChPerTimeslot;
} NhuUL_PhysChCapInfoTDD_128_v770ext;

typedef struct NhuPhysicalChannelCapInfo_v770exttddPhysChCap_768
{
 TknPres pres;
 NhuDL_PhysChCapInfoTDD_768 downlinkPhysChCap;
 NhuUL_PhysChCapTDD uplinkPhysChCap;
} NhuPhysicalChannelCapInfo_v770exttddPhysChCap_768;

typedef struct NhuPhysicalChannelCapInfo_v770exttddPhysChCap_128
{
 TknPres pres;
 NhuUL_PhysChCapInfoTDD_128_v770ext uplinkPhysChCap;
} NhuPhysicalChannelCapInfo_v770exttddPhysChCap_128;

typedef struct NhuPhysicalChannelCapInfo_v770ext
{
 TknPres pres;
 NhuPhysicalChannelCapInfo_v770exttddPhysChCap_768 tddPhysChCap_768;
 NhuPhysicalChannelCapInfo_v770exttddPhysChCap_128 tddPhysChCap_128;
} NhuPhysicalChannelCapInfo_v770ext;


typedef TknU8 NhuUL_PhysChCapTDD_LCR_r4supportOfPUSCH;


typedef TknU8 NhuUL_PhysChCapTDD_LCR_r4supportOf8PSK;

typedef struct NhuUL_PhysChCapTDD_LCR_r4
{
 TknPres pres;
 NhuMaxTS_PerSubFrame_r4 maxTS_PerSubFrame;
 NhuMaxPhysChPerTimeslot maxPhysChPerTimeslot;
 NhuMinimumSF_UL minimumSF;
 NhuUL_PhysChCapTDD_LCR_r4supportOfPUSCH supportOfPUSCH;
 NhuUL_PhysChCapTDD_LCR_r4supportOf8PSK supportOf8PSK;
} NhuUL_PhysChCapTDD_LCR_r4;

typedef struct NhuPhysicalChannelCap_LCR_r4tdd128_PhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapTDD_LCR_r4 downlinkPhysChCap;
 NhuUL_PhysChCapTDD_LCR_r4 uplinkPhysChCap;
} NhuPhysicalChannelCap_LCR_r4tdd128_PhysChCap;

typedef struct NhuPhysicalChannelCap_LCR_r4
{
 TknPres pres;
 NhuPhysicalChannelCap_LCR_r4tdd128_PhysChCap tdd128_PhysChCap;
} NhuPhysicalChannelCap_LCR_r4;


typedef TknU8 NhuPhysicalChannelCap_hspdsch_r5fdd_hspdschsupporteddummy;


typedef TknU8 NhuPhysicalChannelCap_hspdsch_r5fdd_hspdschsupporteddummy2;

typedef struct NhuPhysicalChannelCap_hspdsch_r5fdd_hspdschsupported
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category hsdsch_physical_layer_category;
 NhuPhysicalChannelCap_hspdsch_r5fdd_hspdschsupporteddummy dummy;
 NhuPhysicalChannelCap_hspdsch_r5fdd_hspdschsupporteddummy2 dummy2;
} NhuPhysicalChannelCap_hspdsch_r5fdd_hspdschsupported;

typedef struct NhuPhysicalChannelCap_hspdsch_r5fdd_hspdsch
{
 TknU8 choice;
 union {
  NhuPhysicalChannelCap_hspdsch_r5fdd_hspdschsupported supported;
 } val;
} NhuPhysicalChannelCap_hspdsch_r5fdd_hspdsch;

typedef struct NhuPhysicalChannelCap_hspdsch_r5tdd384_hspdsch
{
 TknU8 choice;
 union {
  NhuHSDSCH_physical_layer_category supported;
 } val;
} NhuPhysicalChannelCap_hspdsch_r5tdd384_hspdsch;

typedef struct NhuPhysicalChannelCap_hspdsch_r5tdd128_hspdsch
{
 TknU8 choice;
 union {
  NhuHSDSCH_physical_layer_category supported;
 } val;
} NhuPhysicalChannelCap_hspdsch_r5tdd128_hspdsch;

typedef struct NhuPhysicalChannelCap_hspdsch_r5
{
 TknPres pres;
 NhuPhysicalChannelCap_hspdsch_r5fdd_hspdsch fdd_hspdsch;
 NhuPhysicalChannelCap_hspdsch_r5tdd384_hspdsch tdd384_hspdsch;
 NhuPhysicalChannelCap_hspdsch_r5tdd128_hspdsch tdd128_hspdsch;
} NhuPhysicalChannelCap_hspdsch_r5;


typedef enum enumNhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriod
{
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc2Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc3Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc4Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc5Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc6Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc7Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc8Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc9Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc10Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc12Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc14Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc16Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc18Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc20Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc24Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc28Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc32Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc36Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc40Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc48Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc56Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc64Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc72Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc80Enum
} EnumNhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriod;
typedef TknU32 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriod;

typedef struct NhuPNBSCH_Allocn_r4
{
 TknPres pres;
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriod numberOfRepetitionsPerSFNPeriod;
} NhuPNBSCH_Allocn_r4;


typedef TknU8 NhuPre_RedirectionInfosupportEUTRA_FDD;


typedef TknU8 NhuPre_RedirectionInfosupportEUTRA_TDD;

typedef struct NhuPre_RedirectionInfo
{
 TknPres pres;
 NhuPre_RedirectionInfosupportEUTRA_FDD supportEUTRA_FDD;
 NhuPre_RedirectionInfosupportEUTRA_TDD supportEUTRA_TDD;
} NhuPre_RedirectionInfo;


typedef enum enumNhuProtErrIndicator
{
 NhuProtErrIndicatornoErrEnum,
 NhuProtErrIndicatorerrorOccurredEnum
} EnumNhuProtErrIndicator;
typedef TknU32 NhuProtErrIndicator;

typedef struct NhuProtErrIndicatorWithMoreInfoerrorOccurred
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuProtErrInfo protocolErrInfo;
} NhuProtErrIndicatorWithMoreInfoerrorOccurred;

typedef struct NhuProtErrIndicatorWithMoreInfo
{
 TknU8 choice;
 union {
  NhuProtErrIndicatorWithMoreInfoerrorOccurred errorOccurred;
 } val;
} NhuProtErrIndicatorWithMoreInfo;


typedef enum enumNhuReceivedMsgTyp
{
 NhuReceivedMsgTypactiveSetUpdEnum,
 NhuReceivedMsgTypcellChangeOrderFromUTRANEnum,
 NhuReceivedMsgTypcellUpdConfirmEnum,
 NhuReceivedMsgTypcounterCheckEnum,
 NhuReceivedMsgTypdownlinkDirectTfrEnum,
 NhuReceivedMsgTypinterRATHovrCmdEnum,
 NhuReceivedMsgTypmeasurementCntrlEnum,
 NhuReceivedMsgTyppagingTyp2Enum,
 NhuReceivedMsgTypphysicalChannelRecfgnEnum,
 NhuReceivedMsgTypphysicalSharedChannelAllocnEnum,
 NhuReceivedMsgTypradioBrRecfgnEnum,
 NhuReceivedMsgTypradioBrRlsEnum,
 NhuReceivedMsgTypradioBrSetupEnum,
 NhuReceivedMsgTyprrcConRlsEnum,
 NhuReceivedMsgTyprrcConRejEnum,
 NhuReceivedMsgTyprrcConSetupEnum,
 NhuReceivedMsgTypsecurityModeCmdEnum,
 NhuReceivedMsgTypsignallingConRlsEnum,
 NhuReceivedMsgTyptransportChannelRecfgnEnum,
 NhuReceivedMsgTyptransportFormatCombinationCntrlEnum,
 NhuReceivedMsgTypueCapEnquiryEnum,
 NhuReceivedMsgTypueCapInfoConfirmEnum,
 NhuReceivedMsgTypuplinkPhysicalChannelCntrlEnum,
 NhuReceivedMsgTypuraUpdConfirmEnum,
 NhuReceivedMsgTyputranMobilityInfoEnum,
 NhuReceivedMsgTypassistanceDataDlvryEnum,
 NhuReceivedMsgTypspare6Enum,
 NhuReceivedMsgTypspare5Enum,
 NhuReceivedMsgTypspare4Enum,
 NhuReceivedMsgTypspare3Enum,
 NhuReceivedMsgTypspare2Enum,
 NhuReceivedMsgTypspare1Enum
} EnumNhuReceivedMsgTyp;
typedef TknU32 NhuReceivedMsgTyp;

typedef struct NhuIdentificationOfReceivedMsg
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuReceivedMsgTyp receivedMsgTyp;
} NhuIdentificationOfReceivedMsg;

typedef struct NhuProtErrMoreInfodiagnosticsTyptype1
{
 TknU8 choice;
 union {
  NhuIdentificationOfReceivedMsg messageNotCompatibleWithReceiverState;
  NhuIdentificationOfReceivedMsg ie_ValueNotComprehended;
  NhuIdentificationOfReceivedMsg conditionalInfoElementErr;
  NhuIdentificationOfReceivedMsg messageExtnNotComprehended;
 } val;
} NhuProtErrMoreInfodiagnosticsTyptype1;

typedef struct NhuProtErrMoreInfodiagnosticsTyp
{
 TknU8 choice;
 union {
  NhuProtErrMoreInfodiagnosticsTyptype1 type1;
 } val;
} NhuProtErrMoreInfodiagnosticsTyp;

typedef struct NhuProtErrMoreInfo
{
 TknPres pres;
 NhuProtErrMoreInfodiagnosticsTyp diagnosticsTyp;
} NhuProtErrMoreInfo;


typedef enum enumNhuRadioFrequencyBandTDDLst
{
 NhuRadioFrequencyBandTDDLstaEnum,
 NhuRadioFrequencyBandTDDLstbEnum,
 NhuRadioFrequencyBandTDDLstcEnum,
 NhuRadioFrequencyBandTDDLstabEnum,
 NhuRadioFrequencyBandTDDLstacEnum,
 NhuRadioFrequencyBandTDDLstbcEnum,
 NhuRadioFrequencyBandTDDLstabcEnum,
 NhuRadioFrequencyBandTDDLstspareEnum
} EnumNhuRadioFrequencyBandTDDLst;
typedef TknU32 NhuRadioFrequencyBandTDDLst;


typedef enum enumNhuRadioFrequencyBandTDDLst_r7
{
 NhuRadioFrequencyBandTDDLst_r7aEnum,
 NhuRadioFrequencyBandTDDLst_r7bEnum,
 NhuRadioFrequencyBandTDDLst_r7cEnum,
 NhuRadioFrequencyBandTDDLst_r7dEnum,
 NhuRadioFrequencyBandTDDLst_r7abEnum,
 NhuRadioFrequencyBandTDDLst_r7acEnum,
 NhuRadioFrequencyBandTDDLst_r7adEnum,
 NhuRadioFrequencyBandTDDLst_r7bcEnum,
 NhuRadioFrequencyBandTDDLst_r7bdEnum,
 NhuRadioFrequencyBandTDDLst_r7cdEnum,
 NhuRadioFrequencyBandTDDLst_r7abcEnum,
 NhuRadioFrequencyBandTDDLst_r7abdEnum,
 NhuRadioFrequencyBandTDDLst_r7acdEnum,
 NhuRadioFrequencyBandTDDLst_r7bcdEnum,
 NhuRadioFrequencyBandTDDLst_r7abcdEnum,
 NhuRadioFrequencyBandTDDLst_r7notabcdEnum
} EnumNhuRadioFrequencyBandTDDLst_r7;
typedef TknU32 NhuRadioFrequencyBandTDDLst_r7;


typedef enum enumNhuRadioFrequencyBandTDDext
{
 NhuRadioFrequencyBandTDDexteEnum,
 NhuRadioFrequencyBandTDDextfEnum,
 NhuRadioFrequencyBandTDDextgEnum,
 NhuRadioFrequencyBandTDDexthEnum,
 NhuRadioFrequencyBandTDDextiEnum,
 NhuRadioFrequencyBandTDDextjEnum,
 NhuRadioFrequencyBandTDDextkEnum,
 NhuRadioFrequencyBandTDDextlEnum,
 NhuRadioFrequencyBandTDDextmEnum,
 NhuRadioFrequencyBandTDDextnEnum,
 NhuRadioFrequencyBandTDDextoEnum,
 NhuRadioFrequencyBandTDDextpEnum,
 NhuRadioFrequencyBandTDDextspare4Enum,
 NhuRadioFrequencyBandTDDextspare3Enum,
 NhuRadioFrequencyBandTDDextspare2Enum,
 NhuRadioFrequencyBandTDDextspare1Enum
} EnumNhuRadioFrequencyBandTDDext;
typedef TknU32 NhuRadioFrequencyBandTDDext;

typedef struct NhuRadioFrequencyBandTDDextLst
{
 TknU16 noComp;
 NhuRadioFrequencyBandTDDext *member;
}NhuRadioFrequencyBandTDDextLst;


typedef TknU8 NhuRb_timer_indicatort314_expired;


typedef TknU8 NhuRb_timer_indicatort315_expired;

typedef struct NhuRb_timer_indicator
{
 TknPres pres;
 NhuRb_timer_indicatort314_expired t314_expired;
 NhuRb_timer_indicatort315_expired t315_expired;
} NhuRb_timer_indicator;


typedef enum enumNhuRe_EstablishmentTimer
{
 NhuRe_EstablishmentTimeruseT314Enum,
 NhuRe_EstablishmentTimeruseT315Enum
} EnumNhuRe_EstablishmentTimer;
typedef TknU32 NhuRe_EstablishmentTimer;


typedef enum enumNhuInterRATInfo
{
 NhuInterRATInfogsmEnum
} EnumNhuInterRATInfo;
typedef TknU32 NhuInterRATInfo;

typedef struct NhuRedirectionInfo
{
 TknU8 choice;
 union {
  NhuFrequencyInfo frequencyInfo;
  NhuInterRATInfo interRATInfo;
 } val;
} NhuRedirectionInfo;


typedef enum enumNhuFrequency_Band
{
 NhuFrequency_Banddcs1800BandUsedEnum,
 NhuFrequency_Bandpcs1900BandUsedEnum
} EnumNhuFrequency_Band;
typedef TknU32 NhuFrequency_Band;


typedef TknU32 NhuNCC;


typedef TknU32 NhuBCC;

typedef struct NhuBSIC
{
 TknPres pres;
 NhuNCC ncc;
 NhuBCC bcc;
} NhuBSIC;

typedef struct NhuGSM_TgtCellInfo
{
 TknPres pres;
 NhuBCCH_ARFCN bcch_ARFCN;
 NhuFrequency_Band frequency_band;
 NhuBSIC bsic;
} NhuGSM_TgtCellInfo;

typedef struct NhuGSM_TgtCellInfoLst
{
 TknU16 noComp;
 NhuGSM_TgtCellInfo *member;
}NhuGSM_TgtCellInfoLst;

typedef struct NhuInterRATInfo_r6
{
 TknPres pres;
 NhuInterRATInfo rat;
 NhuGSM_TgtCellInfoLst gsm_TgtCellInfoLst;
} NhuInterRATInfo_r6;

typedef struct NhuRedirectionInfo_r6
{
 TknU8 choice;
 union {
  NhuFrequencyInfo frequencyInfo;
  NhuInterRATInfo_r6 interRATInfo;
 } val;
} NhuRedirectionInfo_r6;


typedef TknU32 NhuEUTRA_PhysicalCellIdentity;

typedef struct NhuEUTRA_BlacklistedCell
{
 TknPres pres;
 NhuEUTRA_PhysicalCellIdentity physicalCellIdentity;
} NhuEUTRA_BlacklistedCell;

typedef struct NhuEUTRA_BlacklistedCellPerFreqLst
{
 TknU16 noComp;
 NhuEUTRA_BlacklistedCell *member;
}NhuEUTRA_BlacklistedCellPerFreqLst;

typedef struct NhuEUTRA_TgtFreqInfo
{
 TknPres pres;
 NhuEARFCN dlEUTRACarrierFreq;
 NhuEUTRA_BlacklistedCellPerFreqLst eutraBlacklistedCellPerFreqLst;
} NhuEUTRA_TgtFreqInfo;

typedef struct NhuEUTRA_TgtFreqInfoLst
{
 TknU16 noComp;
 NhuEUTRA_TgtFreqInfo *member;
}NhuEUTRA_TgtFreqInfoLst;

typedef struct NhuInterRATInfo_v860exteutra
{
 TknPres pres;
 NhuEUTRA_TgtFreqInfoLst eutra_TgtFreqInfoLst;
} NhuInterRATInfo_v860exteutra;

typedef struct NhuInterRATInfo_v860ext
{
 TknU8 choice;
 union {
  NhuInterRATInfo_v860exteutra eutra;
 } val;
} NhuInterRATInfo_v860ext;

typedef struct NhuRedirectionInfo_v860ext
{
 TknU8 choice;
 union {
  NhuInterRATInfo_v860ext interRATInfo;
 } val;
} NhuRedirectionInfo_v860ext;


typedef enum enumNhuRejionCause
{
 NhuRejionCausecongestionEnum,
 NhuRejionCauseunspecifiedEnum
} EnumNhuRejionCause;
typedef TknU32 NhuRejionCause;


typedef TknU32 NhuUE_PowerClass;


typedef enum enumNhuTxRxFrequencySeparation
{
 NhuTxRxFrequencySeparationdefault_TxRx_separationEnum,
 NhuTxRxFrequencySeparationspare2Enum,
 NhuTxRxFrequencySeparationspare1Enum
} EnumNhuTxRxFrequencySeparation;
typedef TknU32 NhuTxRxFrequencySeparation;

typedef struct NhuRF_CapfddRF_Cap
{
 TknPres pres;
 NhuUE_PowerClass ue_PowerClass;
 NhuTxRxFrequencySeparation txRxFrequencySeparation;
} NhuRF_CapfddRF_Cap;

typedef struct NhuRF_CaptddRF_Cap
{
 TknPres pres;
 NhuUE_PowerClass ue_PowerClass;
 NhuRadioFrequencyBandTDDLst radioFrequencyTDDBandLst;
 NhuChipRateCap chipRateCap;
} NhuRF_CaptddRF_Cap;

typedef struct NhuRF_Cap
{
 TknPres pres;
 NhuRF_CapfddRF_Cap fddRF_Cap;
 NhuRF_CaptddRF_Cap tddRF_Cap;
} NhuRF_Cap;

typedef struct NhuRF_Cap_r4_exttddRF_Cap
{
 TknPres pres;
 NhuUE_PowerClass ue_PowerClass;
 NhuRadioFrequencyBandTDDLst radioFrequencyBandTDDLst;
 NhuChipRateCap chipRateCap;
} NhuRF_Cap_r4_exttddRF_Cap;

typedef struct NhuRF_Cap_r4_ext
{
 TknPres pres;
 NhuRF_Cap_r4_exttddRF_Cap tddRF_Cap;
} NhuRF_Cap_r4_ext;

typedef struct NhuRF_Cap_v770exttdd768RF_Cap
{
 TknPres pres;
 NhuUE_PowerClass ue_PowerClass;
 NhuRadioFrequencyBandTDDLst_r7 radioFrequencyBandTDDLst;
} NhuRF_Cap_v770exttdd768RF_Cap;

typedef struct NhuRF_Cap_v770ext
{
 TknPres pres;
 NhuRadioFrequencyBandTDDLst_r7 tdd384RF_Cap;
 NhuRF_Cap_v770exttdd768RF_Cap tdd768RF_Cap;
 NhuRadioFrequencyBandTDDLst_r7 tdd128RF_Cap;
} NhuRF_Cap_v770ext;

typedef struct NhuRF_Cap_v860ext
{
 TknPres pres;
 NhuRadioFrequencyBandTDDextLst tdd128RF_Cap;
 NhuRadioFrequencyBandTDDextLst tdd384RF_Cap;
 NhuRadioFrequencyBandTDDextLst tdd768RF_Cap;
} NhuRF_Cap_v860ext;


typedef enum enumNhuTotalRLC_AM_BufferSize
{
 NhuTotalRLC_AM_BufferSizedummyEnum,
 NhuTotalRLC_AM_BufferSizekb10Enum,
 NhuTotalRLC_AM_BufferSizekb50Enum,
 NhuTotalRLC_AM_BufferSizekb100Enum,
 NhuTotalRLC_AM_BufferSizekb150Enum,
 NhuTotalRLC_AM_BufferSizekb500Enum,
 NhuTotalRLC_AM_BufferSizekb1000Enum,
 NhuTotalRLC_AM_BufferSizespareEnum
} EnumNhuTotalRLC_AM_BufferSize;
typedef TknU32 NhuTotalRLC_AM_BufferSize;

typedef struct NhuRLC_Cap
{
 TknPres pres;
 NhuTotalRLC_AM_BufferSize totalRLC_AM_BufferSize;
 NhuMaxRLC_WindowSize maximumRLC_WindowSize;
 NhuMaxAM_EntityNumberRLC_Cap maximumAM_EntityNumber;
} NhuRLC_Cap;


typedef enum enumNhuTotalRLC_AM_BufferSize_r5_ext
{
 NhuTotalRLC_AM_BufferSize_r5_extkb200Enum,
 NhuTotalRLC_AM_BufferSize_r5_extkb300Enum,
 NhuTotalRLC_AM_BufferSize_r5_extkb400Enum,
 NhuTotalRLC_AM_BufferSize_r5_extkb750Enum
} EnumNhuTotalRLC_AM_BufferSize_r5_ext;
typedef TknU32 NhuTotalRLC_AM_BufferSize_r5_ext;

typedef struct NhuRLC_Cap_r5_ext
{
 TknPres pres;
 NhuTotalRLC_AM_BufferSize_r5_ext totalRLC_AM_BufferSize;
} NhuRLC_Cap_r5_ext;


typedef TknU8 NhuRLC_Cap_v770extsupportOfTwoLogChannel;

typedef struct NhuRLC_Cap_v770ext
{
 TknPres pres;
 NhuRLC_Cap_v770extsupportOfTwoLogChannel supportOfTwoLogChannel;
} NhuRLC_Cap_v770ext;


typedef enum enumNhuTotalRLC_AM_BufferSize_v920ext
{
 NhuTotalRLC_AM_BufferSize_v920extkb1150Enum,
 NhuTotalRLC_AM_BufferSize_v920extkb1250Enum
} EnumNhuTotalRLC_AM_BufferSize_v920ext;
typedef TknU32 NhuTotalRLC_AM_BufferSize_v920ext;

typedef struct NhuRLC_Cap_v920ext
{
 TknPres pres;
 NhuTotalRLC_AM_BufferSize_v920ext totalRLC_AM_BufferSize;
} NhuRLC_Cap_v920ext;


typedef enum enumNhuTotalRLC_AM_BufferSize_va40ext
{
 NhuTotalRLC_AM_BufferSize_va40extkb1500Enum,
 NhuTotalRLC_AM_BufferSize_va40extkb1800Enum,
 NhuTotalRLC_AM_BufferSize_va40extkb2300Enum,
 NhuTotalRLC_AM_BufferSize_va40extspareEnum
} EnumNhuTotalRLC_AM_BufferSize_va40ext;
typedef TknU32 NhuTotalRLC_AM_BufferSize_va40ext;

typedef struct NhuRLC_Cap_va40ext
{
 TknPres pres;
 NhuTotalRLC_AM_BufferSize_va40ext totalRLC_AM_BufferSize;
} NhuRLC_Cap_va40ext;


typedef enum enumNhuTotalRLC_AM_BufferSize_vbxyext
{
 NhuTotalRLC_AM_BufferSize_vbxyextkb3400Enum,
 NhuTotalRLC_AM_BufferSize_vbxyextkb4400Enum,
 NhuTotalRLC_AM_BufferSize_vbxyextspare2Enum,
 NhuTotalRLC_AM_BufferSize_vbxyextspare1Enum
} EnumNhuTotalRLC_AM_BufferSize_vbxyext;
typedef TknU32 NhuTotalRLC_AM_BufferSize_vbxyext;

typedef struct NhuRLC_Cap_vbxyext
{
 TknPres pres;
 NhuTotalRLC_AM_BufferSize_vbxyext totalRLC_AM_BufferSize;
} NhuRLC_Cap_vbxyext;

typedef struct NhuRRC_MsgSequenceNumberLst
{
 TknU16 noComp;
 NhuRRC_MsgSequenceNumber *member;
}NhuRRC_MsgSequenceNumberLst;


typedef enum enumNhuRRC_StateIndicator
{
 NhuRRC_StateIndicatorcell_DCHEnum,
 NhuRRC_StateIndicatorcell_FACHEnum,
 NhuRRC_StateIndicatorcell_PCHEnum,
 NhuRRC_StateIndicatorura_PCHEnum
} EnumNhuRRC_StateIndicator;
typedef TknU32 NhuRRC_StateIndicator;


typedef TknStrBSXL NhuS_RNTI;

typedef TknStrBSXL NhuS_RNTI_2;

typedef TknStrBSXL NhuSecCapcipheringAlgorithmCap;

typedef TknStrBSXL NhuSecCapintegrityProtectionAlgorithmCap;
typedef struct NhuSecCap
{
 TknPres pres;
 NhuSecCapcipheringAlgorithmCap cipheringAlgorithmCap;
 NhuSecCapintegrityProtectionAlgorithmCap integrityProtectionAlgorithmCap;
} NhuSecCap;

typedef struct NhuSecondaryServingEDCHCell_Info
{
 TknPres pres;
 NhuE_RNTI primary_E_RNTI;
 NhuE_RNTI secondary_E_RNTI;
} NhuSecondaryServingEDCHCell_Info;


typedef enum enumNhuScramblingCodeTyp
{
 NhuScramblingCodeTypshortSCEnum,
 NhuScramblingCodeTyplongSCEnum
} EnumNhuScramblingCodeTyp;
typedef TknU32 NhuScramblingCodeTyp;


typedef TknU32 NhuUL_ScramblingCode;


typedef enum enumNhuMinReduced_E_DPDCH_GainFactor
{
 NhuMinReduced_E_DPDCH_GainFactorm8_15Enum,
 NhuMinReduced_E_DPDCH_GainFactorm11_15Enum,
 NhuMinReduced_E_DPDCH_GainFactorm15_15Enum,
 NhuMinReduced_E_DPDCH_GainFactorm21_15Enum,
 NhuMinReduced_E_DPDCH_GainFactorm30_15Enum,
 NhuMinReduced_E_DPDCH_GainFactorm42_15Enum,
 NhuMinReduced_E_DPDCH_GainFactorm60_15Enum,
 NhuMinReduced_E_DPDCH_GainFactorm84_15Enum
} EnumNhuMinReduced_E_DPDCH_GainFactor;
typedef TknU32 NhuMinReduced_E_DPDCH_GainFactor;


typedef TknU32 NhuE_DCH_MinimumSet_E_TFCI;


typedef TknU32 NhuPC_Preamble;


typedef TknStrBSXL NhuSecondaryEDCH_Info_Cmnms2_SchedTransmGrantHARQAlloc;

typedef enum enumNhuSecondaryEDCH_Info_CmnservingGrantprimary_Secondary_GrantSelector
{
 NhuSecondaryEDCH_Info_CmnservingGrantprimary_Secondary_GrantSelectorprimaryEnum,
 NhuSecondaryEDCH_Info_CmnservingGrantprimary_Secondary_GrantSelectorsecondaryEnum
} EnumNhuSecondaryEDCH_Info_CmnservingGrantprimary_Secondary_GrantSelector;
typedef TknU32 NhuSecondaryEDCH_Info_CmnservingGrantprimary_Secondary_GrantSelector;

typedef struct NhuSecondaryEDCH_Info_CmnservingGrant
{
 TknPres pres;
 NhuSecondaryEDCH_Info_CmnservingGrantprimary_Secondary_GrantSelector primary_Secondary_GrantSelector;
} NhuSecondaryEDCH_Info_CmnservingGrant;


typedef TknU32 NhuSecondaryEDCH_Info_CmndpcchPowerOffset_SecondaryULFrequency;

typedef struct NhuSecondaryEDCH_Info_Cmn
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuScramblingCodeTyp scramblingCodeTyp;
 NhuUL_ScramblingCode scramblingCodeNumber;
 NhuSecondaryEDCH_Info_Cmnms2_SchedTransmGrantHARQAlloc ms2_SchedTransmGrantHARQAlloc;
 NhuSecondaryEDCH_Info_CmnservingGrant servingGrant;
 NhuMinReduced_E_DPDCH_GainFactor minReduced_E_DPDCH_GainFactor;
 NhuE_DCH_MinimumSet_E_TFCI e_DCH_minimumSet_E_TFCI;
 NhuSecondaryEDCH_Info_CmndpcchPowerOffset_SecondaryULFrequency dpcchPowerOffset_SecondaryULFrequency;
 NhuPC_Preamble pc_Preamble;
} NhuSecondaryEDCH_Info_Cmn;


typedef TknStrBSXL NhuSRNC_Identity;

typedef TknStrBSXL NhuSR_VCC_Infononce;
typedef struct NhuSR_VCC_Info
{
 TknPres pres;
 NhuSR_VCC_Infononce nonce;
} NhuSR_VCC_Info;

typedef struct NhuRAB_InfoReplace
{
 TknPres pres;
 NhuRAB_Identity rab_Identity;
 NhuCN_DomainIdentity cn_DomainIdentity;
} NhuRAB_InfoReplace;

typedef struct NhuSR_VCC_SecRABInfo_v860ext
{
 TknPres pres;
 NhuSR_VCC_Info sr_vcc_Info;
 NhuRAB_InfoReplace rab_InfoReplace;
} NhuSR_VCC_SecRABInfo_v860ext;


typedef TknStrBSXL NhuSTART_Value;
typedef struct NhuSTARTSingle
{
 TknPres pres;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuSTART_Value start_Value;
} NhuSTARTSingle;

typedef struct NhuSTARTLst
{
 TknU16 noComp;
 NhuSTARTSingle *member;
}NhuSTARTLst;


typedef enum enumNhuSysSpecificCapUpdReq_v590ext
{
 NhuSysSpecificCapUpdReq_v590extgeranIuEnum
} EnumNhuSysSpecificCapUpdReq_v590ext;
typedef TknU32 NhuSysSpecificCapUpdReq_v590ext;


typedef enum enumNhuT_300
{
 NhuT_300ms100Enum,
 NhuT_300ms200Enum,
 NhuT_300ms400Enum,
 NhuT_300ms600Enum,
 NhuT_300ms800Enum,
 NhuT_300ms1000Enum,
 NhuT_300ms1200Enum,
 NhuT_300ms1400Enum,
 NhuT_300ms1600Enum,
 NhuT_300ms1800Enum,
 NhuT_300ms2000Enum,
 NhuT_300ms3000Enum,
 NhuT_300ms4000Enum,
 NhuT_300ms6000Enum,
 NhuT_300ms8000Enum
} EnumNhuT_300;
typedef TknU32 NhuT_300;


typedef enum enumNhuT_301
{
 NhuT_301ms100Enum,
 NhuT_301ms200Enum,
 NhuT_301ms400Enum,
 NhuT_301ms600Enum,
 NhuT_301ms800Enum,
 NhuT_301ms1000Enum,
 NhuT_301ms1200Enum,
 NhuT_301ms1400Enum,
 NhuT_301ms1600Enum,
 NhuT_301ms1800Enum,
 NhuT_301ms2000Enum,
 NhuT_301ms3000Enum,
 NhuT_301ms4000Enum,
 NhuT_301ms6000Enum,
 NhuT_301ms8000Enum,
 NhuT_301spareEnum
} EnumNhuT_301;
typedef TknU32 NhuT_301;


typedef enum enumNhuT_302
{
 NhuT_302ms100Enum,
 NhuT_302ms200Enum,
 NhuT_302ms400Enum,
 NhuT_302ms600Enum,
 NhuT_302ms800Enum,
 NhuT_302ms1000Enum,
 NhuT_302ms1200Enum,
 NhuT_302ms1400Enum,
 NhuT_302ms1600Enum,
 NhuT_302ms1800Enum,
 NhuT_302ms2000Enum,
 NhuT_302ms3000Enum,
 NhuT_302ms4000Enum,
 NhuT_302ms6000Enum,
 NhuT_302ms8000Enum,
 NhuT_302spareEnum
} EnumNhuT_302;
typedef TknU32 NhuT_302;


typedef enum enumNhuT_304
{
 NhuT_304ms100Enum,
 NhuT_304ms200Enum,
 NhuT_304ms400Enum,
 NhuT_304ms1000Enum,
 NhuT_304ms2000Enum,
 NhuT_304spare3Enum,
 NhuT_304spare2Enum,
 NhuT_304spare1Enum
} EnumNhuT_304;
typedef TknU32 NhuT_304;


typedef enum enumNhuT_305
{
 NhuT_305noUpdEnum,
 NhuT_305m5Enum,
 NhuT_305m10Enum,
 NhuT_305m30Enum,
 NhuT_305m60Enum,
 NhuT_305m120Enum,
 NhuT_305m360Enum,
 NhuT_305m720Enum
} EnumNhuT_305;
typedef TknU32 NhuT_305;


typedef enum enumNhuT_307
{
 NhuT_307s5Enum,
 NhuT_307s10Enum,
 NhuT_307s15Enum,
 NhuT_307s20Enum,
 NhuT_307s30Enum,
 NhuT_307s40Enum,
 NhuT_307s50Enum,
 NhuT_307spareEnum
} EnumNhuT_307;
typedef TknU32 NhuT_307;


typedef enum enumNhuT_308
{
 NhuT_308ms40Enum,
 NhuT_308ms80Enum,
 NhuT_308ms160Enum,
 NhuT_308ms320Enum
} EnumNhuT_308;
typedef TknU32 NhuT_308;


typedef TknU32 NhuT_309;


typedef enum enumNhuT_310
{
 NhuT_310ms40Enum,
 NhuT_310ms80Enum,
 NhuT_310ms120Enum,
 NhuT_310ms160Enum,
 NhuT_310ms200Enum,
 NhuT_310ms240Enum,
 NhuT_310ms280Enum,
 NhuT_310ms320Enum
} EnumNhuT_310;
typedef TknU32 NhuT_310;


typedef enum enumNhuT_311
{
 NhuT_311ms250Enum,
 NhuT_311ms500Enum,
 NhuT_311ms750Enum,
 NhuT_311ms1000Enum,
 NhuT_311ms1250Enum,
 NhuT_311ms1500Enum,
 NhuT_311ms1750Enum,
 NhuT_311ms2000Enum
} EnumNhuT_311;
typedef TknU32 NhuT_311;


typedef TknU32 NhuT_312;


typedef TknU32 NhuT_313;


typedef enum enumNhuT_314
{
 NhuT_314s0Enum,
 NhuT_314s2Enum,
 NhuT_314s4Enum,
 NhuT_314s6Enum,
 NhuT_314s8Enum,
 NhuT_314s12Enum,
 NhuT_314s16Enum,
 NhuT_314s20Enum
} EnumNhuT_314;
typedef TknU32 NhuT_314;


typedef enum enumNhuT_315
{
 NhuT_315s0Enum,
 NhuT_315s10Enum,
 NhuT_315s30Enum,
 NhuT_315s60Enum,
 NhuT_315s180Enum,
 NhuT_315s600Enum,
 NhuT_315s1200Enum,
 NhuT_315s1800Enum
} EnumNhuT_315;
typedef TknU32 NhuT_315;


typedef enum enumNhuT_316
{
 NhuT_316s0Enum,
 NhuT_316s10Enum,
 NhuT_316s20Enum,
 NhuT_316s30Enum,
 NhuT_316s40Enum,
 NhuT_316s50Enum,
 NhuT_316s_infEnum,
 NhuT_316spareEnum
} EnumNhuT_316;
typedef TknU32 NhuT_316;


typedef enum enumNhuT_317
{
 NhuT_317infinity0Enum,
 NhuT_317infinity1Enum,
 NhuT_317infinity2Enum,
 NhuT_317infinity3Enum,
 NhuT_317infinity4Enum,
 NhuT_317infinity5Enum,
 NhuT_317infinity6Enum,
 NhuT_317infinity7Enum
} EnumNhuT_317;
typedef TknU32 NhuT_317;


typedef enum enumNhuT_318
{
 NhuT_318ms250Enum,
 NhuT_318ms500Enum,
 NhuT_318ms750Enum,
 NhuT_318ms1000Enum,
 NhuT_318ms1250Enum,
 NhuT_318ms1500Enum,
 NhuT_318ms1750Enum,
 NhuT_318ms2000Enum,
 NhuT_318ms3000Enum,
 NhuT_318ms4000Enum,
 NhuT_318ms6000Enum,
 NhuT_318ms8000Enum,
 NhuT_318ms10000Enum,
 NhuT_318ms12000Enum,
 NhuT_318ms16000Enum
} EnumNhuT_318;
typedef TknU32 NhuT_318;


typedef enum enumNhuT_319
{
 NhuT_319ms80Enum,
 NhuT_319ms160Enum,
 NhuT_319ms320Enum,
 NhuT_319ms640Enum,
 NhuT_319ms1280Enum,
 NhuT_319ms2560Enum,
 NhuT_319ms5120Enum
} EnumNhuT_319;
typedef TknU32 NhuT_319;


typedef enum enumNhuT_321
{
 NhuT_321ms100Enum,
 NhuT_321ms200Enum,
 NhuT_321ms400Enum,
 NhuT_321ms800Enum
} EnumNhuT_321;
typedef TknU32 NhuT_321;


typedef enum enumNhuT_323
{
 NhuT_323s0Enum,
 NhuT_323s5Enum,
 NhuT_323s10Enum,
 NhuT_323s20Enum,
 NhuT_323s30Enum,
 NhuT_323s60Enum,
 NhuT_323s90Enum,
 NhuT_323s120Enum
} EnumNhuT_323;
typedef TknU32 NhuT_323;

typedef struct NhuTMSI_and_LAI_GSM_MAP
{
 TknPres pres;
 NhuTMSI_GSM_MAP tmsi;
 NhuLAI lai;
} NhuTMSI_and_LAI_GSM_MAP;

typedef struct NhuUL_TransChCapmodeSpecificInfotdd
{
 TknPres pres;
 NhuMaxSimultaneousCCTrCH_Count maxSimultaneousCCTrCH_Count;
} NhuUL_TransChCapmodeSpecificInfotdd;

typedef struct NhuUL_TransChCapmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_TransChCapmodeSpecificInfotdd tdd;
 } val;
} NhuUL_TransChCapmodeSpecificInfo;

typedef struct NhuUL_TransChCap
{
 TknPres pres;
 NhuMaxNoBits maxNoBitsTransmitted;
 NhuMaxNoBits maxConvCodeBitsTransmitted;
 NhuTurboSupport turboEncodingSupport;
 NhuMaxSimultaneousTransChsUL maxSimultaneousTransChs;
 NhuUL_TransChCapmodeSpecificInfo modeSpecificInfo;
 NhuMaxTportBlocksUL maxTransmittedBlocks;
 NhuMaxNumberOfTFC_UL maxNumberOfTFC;
 NhuMaxNumberOfTF maxNumberOfTF;
} NhuUL_TransChCap;

typedef struct NhuTportChannelCap
{
 TknPres pres;
 NhuDL_TransChCap dl_TransChCap;
 NhuUL_TransChCap ul_TransChCap;
} NhuTportChannelCap;

typedef struct NhuU_RNTI
{
 TknPres pres;
 NhuSRNC_Identity srnc_Identity;
 NhuS_RNTI s_RNTI;
} NhuU_RNTI;

typedef struct NhuU_RNTI_Short
{
 TknPres pres;
 NhuSRNC_Identity srnc_Identity;
 NhuS_RNTI_2 s_RNTI_2;
} NhuU_RNTI_Short;


typedef enum enumNhuUE_BasedNwPerformanceMeasurementsParamssupportOfLoggedMeasurementsIdlePCH
{
 NhuUE_BasedNwPerformanceMeasurementsParamssupportOfLoggedMeasurementsIdlePCHtrueEnum
} EnumNhuUE_BasedNwPerformanceMeasurementsParamssupportOfLoggedMeasurementsIdlePCH;
typedef TknU32 NhuUE_BasedNwPerformanceMeasurementsParamssupportOfLoggedMeasurementsIdlePCH;

typedef struct NhuUE_BasedNwPerformanceMeasurementsParams
{
 TknPres pres;
 NhuUE_BasedNwPerformanceMeasurementsParamssupportOfLoggedMeasurementsIdlePCH supportOfLoggedMeasurementsIdlePCH;
} NhuUE_BasedNwPerformanceMeasurementsParams;


typedef TknU32 NhuPhysicalChannelCap_edch_r6fdd_edchsupportededch_PhysicalLyrCategory;

typedef struct NhuPhysicalChannelCap_edch_r6fdd_edchsupported
{
 TknPres pres;
 NhuPhysicalChannelCap_edch_r6fdd_edchsupportededch_PhysicalLyrCategory edch_PhysicalLyrCategory;
} NhuPhysicalChannelCap_edch_r6fdd_edchsupported;

typedef struct NhuPhysicalChannelCap_edch_r6fdd_edch
{
 TknU8 choice;
 union {
  NhuPhysicalChannelCap_edch_r6fdd_edchsupported supported;
 } val;
} NhuPhysicalChannelCap_edch_r6fdd_edch;

typedef struct NhuPhysicalChannelCap_edch_r6
{
 TknPres pres;
 NhuPhysicalChannelCap_edch_r6fdd_edch fdd_edch;
} NhuPhysicalChannelCap_edch_r6;


typedef enum enumNhuUE_RadioAccessCap_v690extdeviceTyp
{
 NhuUE_RadioAccessCap_v690extdeviceTypdoesNotBenefitFromBatteryConsumptionOptimisationEnum
} EnumNhuUE_RadioAccessCap_v690extdeviceTyp;
typedef TknU32 NhuUE_RadioAccessCap_v690extdeviceTyp;

typedef struct NhuUE_RadioAccessCap_v690ext
{
 TknPres pres;
 NhuPhysicalChannelCap_edch_r6 physicalchannelcapability_edch;
 NhuUE_RadioAccessCap_v690extdeviceTyp deviceTyp;
} NhuUE_RadioAccessCap_v690ext;


typedef TknStrOSXL NhuGSM_MS_RadioAccessCap;

typedef enum enumNhuInterRAT_UE_RadioAccessCap_v690extsupportOfInter_RAT_PS_Hovr
{
 NhuInterRAT_UE_RadioAccessCap_v690extsupportOfInter_RAT_PS_HovrdoesSupporInter_RAT_PS_HovrEnum
} EnumNhuInterRAT_UE_RadioAccessCap_v690extsupportOfInter_RAT_PS_Hovr;
typedef TknU32 NhuInterRAT_UE_RadioAccessCap_v690extsupportOfInter_RAT_PS_Hovr;

typedef struct NhuInterRAT_UE_RadioAccessCap_v690ext
{
 TknPres pres;
 NhuInterRAT_UE_RadioAccessCap_v690extsupportOfInter_RAT_PS_Hovr supportOfInter_RAT_PS_Hovr;
 NhuGSM_MS_RadioAccessCap gsm_MS_RadioAccessCap;
} NhuInterRAT_UE_RadioAccessCap_v690ext;


typedef enum enumNhuUE_RadioAccessCap_v6b0ext_IEssupportForSIB11bis
{
 NhuUE_RadioAccessCap_v6b0ext_IEssupportForSIB11bistrueEnum
} EnumNhuUE_RadioAccessCap_v6b0ext_IEssupportForSIB11bis;
typedef TknU32 NhuUE_RadioAccessCap_v6b0ext_IEssupportForSIB11bis;

typedef struct NhuUE_RadioAccessCap_v6b0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v6b0ext_IEssupportForSIB11bis supportForSIB11bis;
} NhuUE_RadioAccessCap_v6b0ext_IEs;


typedef enum enumNhuUE_RadioAccessCap_v6e0ext_IEssupportForFDPCH
{
 NhuUE_RadioAccessCap_v6e0ext_IEssupportForFDPCHtrueEnum
} EnumNhuUE_RadioAccessCap_v6e0ext_IEssupportForFDPCH;
typedef TknU32 NhuUE_RadioAccessCap_v6e0ext_IEssupportForFDPCH;

typedef struct NhuUE_RadioAccessCap_v6e0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v6e0ext_IEssupportForFDPCH supportForFDPCH;
} NhuUE_RadioAccessCap_v6e0ext_IEs;

typedef struct NhuUE_GANSSPositioning_Cap
{
 TknPres pres;
 NhuNwAssistedGANSS_Supp_Lst networkAssistedGANSS_supportedLst;
} NhuUE_GANSSPositioning_Cap;

typedef struct NhuUE_PositioningCap_v770ext
{
 TknPres pres;
 NhuUE_GANSSPositioning_Cap ue_GANSSPositioning_Cap;
} NhuUE_PositioningCap_v770ext;


typedef enum enumNhuUE_SpecificCapInfo_LCRTDD
{
 NhuUE_SpecificCapInfo_LCRTDDnFEnum,
 NhuUE_SpecificCapInfo_LCRTDDnFMc_TriRx_UniTxEnum,
 NhuUE_SpecificCapInfo_LCRTDDnFMc_TriRx_TriTxEnum,
 NhuUE_SpecificCapInfo_LCRTDDnFMc_HexRx_UniTxEnum,
 NhuUE_SpecificCapInfo_LCRTDDnFMc_HexRx_TriTxEnum,
 NhuUE_SpecificCapInfo_LCRTDDnFMc_HexRx_HexTxEnum,
 NhuUE_SpecificCapInfo_LCRTDDnFMc_TwoRx_UniTxEnum,
 NhuUE_SpecificCapInfo_LCRTDDnFMc_TwoRx_TwoTxEnum,
 NhuUE_SpecificCapInfo_LCRTDDspare8Enum,
 NhuUE_SpecificCapInfo_LCRTDDspare7Enum,
 NhuUE_SpecificCapInfo_LCRTDDspare6Enum,
 NhuUE_SpecificCapInfo_LCRTDDspare5Enum,
 NhuUE_SpecificCapInfo_LCRTDDspare4Enum,
 NhuUE_SpecificCapInfo_LCRTDDspare3Enum,
 NhuUE_SpecificCapInfo_LCRTDDspare2Enum,
 NhuUE_SpecificCapInfo_LCRTDDspare1Enum
} EnumNhuUE_SpecificCapInfo_LCRTDD;
typedef TknU32 NhuUE_SpecificCapInfo_LCRTDD;


typedef enum enumNhuUE_RadioAccessCap_v770ext_IEsmac_ehsSupport
{
 NhuUE_RadioAccessCap_v770ext_IEsmac_ehsSupporttrueEnum
} EnumNhuUE_RadioAccessCap_v770ext_IEsmac_ehsSupport;
typedef TknU32 NhuUE_RadioAccessCap_v770ext_IEsmac_ehsSupport;

typedef struct NhuUE_RadioAccessCap_v770ext_IEs
{
 TknPres pres;
 NhuPDCP_Cap_v770ext pdcp_Cap;
 NhuRLC_Cap_v770ext rlc_Cap;
 NhuRF_Cap_v770ext rf_Cap;
 NhuPhysicalChannelCap_v770ext physicalChannelCap;
 NhuMultiModeRAT_Cap_v770ext multiModeRAT_Cap;
 NhuUE_PositioningCap_v770ext ue_PositioningCap;
 NhuUE_RadioAccessCap_v770ext_IEsmac_ehsSupport mac_ehsSupport;
 NhuUE_SpecificCapInfo_LCRTDD ue_specificCapInfo;
} NhuUE_RadioAccessCap_v770ext_IEs;


typedef enum enumNhuUE_RadioAccessCap_v790ext_IEssupportForEDPCCHPowerBoosting
{
 NhuUE_RadioAccessCap_v790ext_IEssupportForEDPCCHPowerBoostingtrueEnum
} EnumNhuUE_RadioAccessCap_v790ext_IEssupportForEDPCCHPowerBoosting;
typedef TknU32 NhuUE_RadioAccessCap_v790ext_IEssupportForEDPCCHPowerBoosting;

typedef struct NhuUE_RadioAccessCap_v790ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v790ext_IEssupportForEDPCCHPowerBoosting supportForEDPCCHPowerBoosting;
} NhuUE_RadioAccessCap_v790ext_IEs;

typedef struct NhuUE_GANSSPositioning_Cap_v860ext_IEs
{
 TknPres pres;
 NhuNwAssistedGANSS_Supp_Lst_v860ext networkAssistedGANSS_supportedLst;
} NhuUE_GANSSPositioning_Cap_v860ext_IEs;

typedef struct NhuUE_PositioningCap_v860ext
{
 TknPres pres;
 NhuUE_GANSSPositioning_Cap_v860ext_IEs ue_GANSSPositioning_Cap_v860ext;
} NhuUE_PositioningCap_v860ext;

typedef struct NhuUE_RadioAccessCapabBandFDD3
{
 TknPres pres;
 NhuRadioFrequencyBandFDD radioFrequencyBandFDD;
 NhuRadioFrequencyBandFDD2 radioFrequencyBandFDD2;
 NhuMeasurementCapExt3 measurementCap3;
} NhuUE_RadioAccessCapabBandFDD3;

typedef struct NhuUE_RadioAccessCapabBandFDDLst3
{
 TknU16 noComp;
 NhuUE_RadioAccessCapabBandFDD3 *member;
}NhuUE_RadioAccessCapabBandFDDLst3;


typedef enum enumNhuUE_RadioAccessCap_v860ext_IEssupportOfCmnEDCH
{
 NhuUE_RadioAccessCap_v860ext_IEssupportOfCmnEDCHtrueEnum
} EnumNhuUE_RadioAccessCap_v860ext_IEssupportOfCmnEDCH;
typedef TknU32 NhuUE_RadioAccessCap_v860ext_IEssupportOfCmnEDCH;


typedef enum enumNhuUE_RadioAccessCap_v860ext_IEssupportOfMACiis
{
 NhuUE_RadioAccessCap_v860ext_IEssupportOfMACiistrueEnum
} EnumNhuUE_RadioAccessCap_v860ext_IEssupportOfMACiis;
typedef TknU32 NhuUE_RadioAccessCap_v860ext_IEssupportOfMACiis;


typedef enum enumNhuUE_RadioAccessCap_v860ext_IEssupportOfSPSOperation
{
 NhuUE_RadioAccessCap_v860ext_IEssupportOfSPSOperationtrueEnum
} EnumNhuUE_RadioAccessCap_v860ext_IEssupportOfSPSOperation;
typedef TknU32 NhuUE_RadioAccessCap_v860ext_IEssupportOfSPSOperation;


typedef enum enumNhuUE_RadioAccessCap_v860ext_IEssupportOfCntrlChannelDRXOperation
{
 NhuUE_RadioAccessCap_v860ext_IEssupportOfCntrlChannelDRXOperationtrueEnum
} EnumNhuUE_RadioAccessCap_v860ext_IEssupportOfCntrlChannelDRXOperation;
typedef TknU32 NhuUE_RadioAccessCap_v860ext_IEssupportOfCntrlChannelDRXOperation;


typedef enum enumNhuUE_RadioAccessCap_v860ext_IEssupportOfCSG
{
 NhuUE_RadioAccessCap_v860ext_IEssupportOfCSGtrueEnum
} EnumNhuUE_RadioAccessCap_v860ext_IEssupportOfCSG;
typedef TknU32 NhuUE_RadioAccessCap_v860ext_IEssupportOfCSG;

typedef struct NhuUE_RadioAccessCap_v860ext_IEs
{
 TknPres pres;
 NhuRF_Cap_v860ext rf_Cap;
 NhuPhysicalChannelCap_v860ext physicalChannelCap;
 NhuMultiModeRAT_Cap_v860ext multiModeRAT_Cap;
 NhuUE_PositioningCap_v860ext ue_PositioningCap;
 NhuMeasurementCap_v860ext measurementCap;
 NhuMeasurementCapTDD measurementCapTDD;
 NhuUE_RadioAccessCap_v860ext_IEssupportOfCmnEDCH supportOfCmnEDCH;
 NhuUE_RadioAccessCap_v860ext_IEssupportOfMACiis supportOfMACiis;
 NhuUE_RadioAccessCap_v860ext_IEssupportOfSPSOperation supportOfSPSOperation;
 NhuUE_RadioAccessCap_v860ext_IEssupportOfCntrlChannelDRXOperation supportOfCntrlChannelDRXOperation;
 NhuUE_RadioAccessCap_v860ext_IEssupportOfCSG supportOfCSG;
 NhuUE_RadioAccessCapabBandFDDLst3 ue_RadioAccessCapabBandFDDLst3;
} NhuUE_RadioAccessCap_v860ext_IEs;


typedef TknStrOSXL NhuEUTRA_RadioAccessCapue_EUTRA_Cap;
typedef struct NhuEUTRA_RadioAccessCap
{
 TknPres pres;
 NhuEUTRA_RadioAccessCapue_EUTRA_Cap ue_EUTRA_Cap;
} NhuEUTRA_RadioAccessCap;

typedef struct NhuInterRAT_UE_RadioAccessCap_v860ext
{
 TknPres pres;
 NhuEUTRA_RadioAccessCap eutra_RadioAccessCap;
} NhuInterRAT_UE_RadioAccessCap_v860ext;


typedef enum enumNhuUE_RadioAccessCap_v880ext_IEssupportForPriorityReselectionInUTRAN
{
 NhuUE_RadioAccessCap_v880ext_IEssupportForPriorityReselectionInUTRANtrueEnum
} EnumNhuUE_RadioAccessCap_v880ext_IEssupportForPriorityReselectionInUTRAN;
typedef TknU32 NhuUE_RadioAccessCap_v880ext_IEssupportForPriorityReselectionInUTRAN;

typedef struct NhuUE_RadioAccessCap_v880ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v880ext_IEssupportForPriorityReselectionInUTRAN supportForPriorityReselectionInUTRAN;
} NhuUE_RadioAccessCap_v880ext_IEs;


typedef enum enumNhuUE_RadioAccessCap_v890ext_IEssupportCellSpecificTxDiversityinDC_Operation
{
 NhuUE_RadioAccessCap_v890ext_IEssupportCellSpecificTxDiversityinDC_OperationtrueEnum
} EnumNhuUE_RadioAccessCap_v890ext_IEssupportCellSpecificTxDiversityinDC_Operation;
typedef TknU32 NhuUE_RadioAccessCap_v890ext_IEssupportCellSpecificTxDiversityinDC_Operation;

typedef struct NhuUE_RadioAccessCap_v890ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v890ext_IEssupportCellSpecificTxDiversityinDC_Operation supportCellSpecificTxDiversityinDC_Operation;
} NhuUE_RadioAccessCap_v890ext_IEs;

typedef struct NhuUE_RadioAccessCapabBandCombLst
{
 TknU16 noComp;
 NhuBandComb *member;
}NhuUE_RadioAccessCapabBandCombLst;


typedef enum enumNhuUE_RadioAccessCap_v920ext_IEssupportOfenhancedTS0
{
 NhuUE_RadioAccessCap_v920ext_IEssupportOfenhancedTS0trueEnum
} EnumNhuUE_RadioAccessCap_v920ext_IEssupportOfenhancedTS0;
typedef TknU32 NhuUE_RadioAccessCap_v920ext_IEssupportOfenhancedTS0;

typedef struct NhuUE_RadioAccessCap_v920ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandCombLst ue_RadioAccessCapabBandCombLst;
 NhuPhysicalChannelCap_v920ext physicalChannelCap;
 NhuRLC_Cap_v920ext rlc_Cap;
 NhuUE_RadioAccessCap_v920ext_IEssupportOfenhancedTS0 supportOfenhancedTS0;
 NhuMeasurementCap_v920ext measurementCap;
 NhuCSG_ProximityIndCap csgProximityIndCap;
 NhuNeighCellSI_AcquisitionCap neighCellSI_AcquisitionCap;
} NhuUE_RadioAccessCap_v920ext_IEs;


typedef enum enumNhuUE_RadioAccessCap_v970ext_IEsue_ExtendedMeasurementSupport
{
 NhuUE_RadioAccessCap_v970ext_IEsue_ExtendedMeasurementSupporttrueEnum
} EnumNhuUE_RadioAccessCap_v970ext_IEsue_ExtendedMeasurementSupport;
typedef TknU32 NhuUE_RadioAccessCap_v970ext_IEsue_ExtendedMeasurementSupport;

typedef struct NhuUE_RadioAccessCap_v970ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v970ext_IEsue_ExtendedMeasurementSupport ue_ExtendedMeasurementSupport;
} NhuUE_RadioAccessCap_v970ext_IEs;


typedef TknU8 NhuSuppCarrierCombinationcarrierCombination12;


typedef TknU8 NhuSuppCarrierCombinationcarrierCombination21;


typedef TknU8 NhuSuppCarrierCombinationcarrierCombination13;


typedef TknU8 NhuSuppCarrierCombinationcarrierCombination31;


typedef TknU8 NhuSuppCarrierCombinationcarrierCombination22;

typedef struct NhuSuppCarrierCombination
{
 TknPres pres;
 NhuSuppCarrierCombinationcarrierCombination12 carrierCombination12;
 NhuSuppCarrierCombinationcarrierCombination21 carrierCombination21;
 NhuSuppCarrierCombinationcarrierCombination13 carrierCombination13;
 NhuSuppCarrierCombinationcarrierCombination31 carrierCombination31;
 NhuSuppCarrierCombinationcarrierCombination22 carrierCombination22;
} NhuSuppCarrierCombination;

typedef struct NhuUE_RadioAccessCapabBandCombLst_va40ext
{
 TknU16 noComp;
 NhuSuppCarrierCombination *member;
}NhuUE_RadioAccessCapabBandCombLst_va40ext;


typedef enum enumNhuUE_RadioAccessCapabBandFDD4additionalSecondaryCells
{
 NhuUE_RadioAccessCapabBandFDD4additionalSecondaryCellsa1Enum,
 NhuUE_RadioAccessCapabBandFDD4additionalSecondaryCellsa2Enum
} EnumNhuUE_RadioAccessCapabBandFDD4additionalSecondaryCells;
typedef TknU32 NhuUE_RadioAccessCapabBandFDD4additionalSecondaryCells;

typedef struct NhuUE_RadioAccessCapabBandFDD4
{
 TknPres pres;
 NhuRadioFrequencyBandFDD radioFrequencyBandFDD;
 NhuRadioFrequencyBandFDD2 radioFrequencyBandFDD2;
 NhuRadioFrequencyBandFDD3 radioFrequencyBandFDD3;
 NhuUE_RadioAccessCapabBandFDD4additionalSecondaryCells additionalSecondaryCells;
 NhuNonContiguousMultiCellCombinationLst nonContiguousMultiCellCombinationLst;
} NhuUE_RadioAccessCapabBandFDD4;

typedef struct NhuUE_RadioAccessCapabBandFDDLst4
{
 TknU16 noComp;
 NhuUE_RadioAccessCapabBandFDD4 *member;
}NhuUE_RadioAccessCapabBandFDDLst4;


typedef enum enumNhuUE_RadioAccessCap_va40ext_IEssupportOfMUMIMO
{
 NhuUE_RadioAccessCap_va40ext_IEssupportOfMUMIMOuplinkEnum,
 NhuUE_RadioAccessCap_va40ext_IEssupportOfMUMIMOuplink_and_downlinkEnum
} EnumNhuUE_RadioAccessCap_va40ext_IEssupportOfMUMIMO;
typedef TknU32 NhuUE_RadioAccessCap_va40ext_IEssupportOfMUMIMO;


typedef enum enumNhuUE_RadioAccessCap_va40ext_IEssupportForDualCellMimoInDifferentBands
{
 NhuUE_RadioAccessCap_va40ext_IEssupportForDualCellMimoInDifferentBandstrueEnum
} EnumNhuUE_RadioAccessCap_va40ext_IEssupportForDualCellMimoInDifferentBands;
typedef TknU32 NhuUE_RadioAccessCap_va40ext_IEssupportForDualCellMimoInDifferentBands;


typedef enum enumNhuUE_RadioAccessCap_va40ext_IEssupportOfUTRANANR
{
 NhuUE_RadioAccessCap_va40ext_IEssupportOfUTRANANRtrueEnum
} EnumNhuUE_RadioAccessCap_va40ext_IEssupportOfUTRANANR;
typedef TknU32 NhuUE_RadioAccessCap_va40ext_IEssupportOfUTRANANR;

typedef struct NhuUE_RadioAccessCap_va40ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandCombLst_va40ext ue_RadioAccessCapabBandCombLst_va40ext;
 NhuPhysicalChannelCap_va40ext physicalChannelCap;
 NhuRLC_Cap_va40ext rlc_Cap;
 NhuMeasurementCap_va40ext measurementCap;
 NhuUE_RadioAccessCap_va40ext_IEssupportOfMUMIMO supportOfMUMIMO;
 NhuUE_RadioAccessCap_va40ext_IEssupportForDualCellMimoInDifferentBands supportForDualCellMimoInDifferentBands;
 NhuUE_BasedNwPerformanceMeasurementsParams ue_BasedNwPerformanceMeasurementsParams;
 NhuUE_RadioAccessCap_va40ext_IEssupportOfUTRANANR supportOfUTRANANR;
 NhuUE_RadioAccessCapabBandFDDLst4 ue_RadioAccessCapabBandFDDLst4;
} NhuUE_RadioAccessCap_va40ext_IEs;


typedef enum enumNhuUE_RadioAccessCapabBandFDD4_va60extsupportofULOLTD
{
 NhuUE_RadioAccessCapabBandFDD4_va60extsupportofULOLTDtrueEnum
} EnumNhuUE_RadioAccessCapabBandFDD4_va60extsupportofULOLTD;
typedef TknU32 NhuUE_RadioAccessCapabBandFDD4_va60extsupportofULOLTD;

typedef struct NhuUE_RadioAccessCapabBandFDD4_va60ext
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandFDD4_va60extsupportofULOLTD supportofULOLTD;
} NhuUE_RadioAccessCapabBandFDD4_va60ext;

typedef struct NhuUE_RadioAccessCapabBandFDDLst4_va60ext
{
 TknU16 noComp;
 NhuUE_RadioAccessCapabBandFDD4_va60ext *member;
}NhuUE_RadioAccessCapabBandFDDLst4_va60ext;

typedef struct NhuUE_RadioAccessCap_va60ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandFDDLst4_va60ext ue_RadioAccessCapabBandFDDLst4;
} NhuUE_RadioAccessCap_va60ext_IEs;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination14;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination41;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination15;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination51;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination16;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination61;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination17;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination71;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination23;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination32;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination24;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination42;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination25;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination52;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination26;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination62;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination33;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination34;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination43;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination44;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination35;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination53;

typedef struct NhuSuppCarrierCombination_ext
{
 TknPres pres;
 NhuSuppCarrierCombination_extcarrierCombination14 carrierCombination14;
 NhuSuppCarrierCombination_extcarrierCombination41 carrierCombination41;
 NhuSuppCarrierCombination_extcarrierCombination15 carrierCombination15;
 NhuSuppCarrierCombination_extcarrierCombination51 carrierCombination51;
 NhuSuppCarrierCombination_extcarrierCombination16 carrierCombination16;
 NhuSuppCarrierCombination_extcarrierCombination61 carrierCombination61;
 NhuSuppCarrierCombination_extcarrierCombination17 carrierCombination17;
 NhuSuppCarrierCombination_extcarrierCombination71 carrierCombination71;
 NhuSuppCarrierCombination_extcarrierCombination23 carrierCombination23;
 NhuSuppCarrierCombination_extcarrierCombination32 carrierCombination32;
 NhuSuppCarrierCombination_extcarrierCombination24 carrierCombination24;
 NhuSuppCarrierCombination_extcarrierCombination42 carrierCombination42;
 NhuSuppCarrierCombination_extcarrierCombination25 carrierCombination25;
 NhuSuppCarrierCombination_extcarrierCombination52 carrierCombination52;
 NhuSuppCarrierCombination_extcarrierCombination26 carrierCombination26;
 NhuSuppCarrierCombination_extcarrierCombination62 carrierCombination62;
 NhuSuppCarrierCombination_extcarrierCombination33 carrierCombination33;
 NhuSuppCarrierCombination_extcarrierCombination34 carrierCombination34;
 NhuSuppCarrierCombination_extcarrierCombination43 carrierCombination43;
 NhuSuppCarrierCombination_extcarrierCombination44 carrierCombination44;
 NhuSuppCarrierCombination_extcarrierCombination35 carrierCombination35;
 NhuSuppCarrierCombination_extcarrierCombination53 carrierCombination53;
} NhuSuppCarrierCombination_ext;

typedef struct NhuUE_RadioAccessCapabBandCombLst_vbxyext
{
 TknU16 noComp;
 NhuSuppCarrierCombination_ext *member;
}NhuUE_RadioAccessCapabBandCombLst_vbxyext;


typedef enum enumNhuUE_RadioAccessCapabBandFDD4_vbxyextadditionalSecondaryCells2
{
 NhuUE_RadioAccessCapabBandFDD4_vbxyextadditionalSecondaryCells2a3Enum,
 NhuUE_RadioAccessCapabBandFDD4_vbxyextadditionalSecondaryCells2a4Enum,
 NhuUE_RadioAccessCapabBandFDD4_vbxyextadditionalSecondaryCells2a5Enum,
 NhuUE_RadioAccessCapabBandFDD4_vbxyextadditionalSecondaryCells2a6Enum
} EnumNhuUE_RadioAccessCapabBandFDD4_vbxyextadditionalSecondaryCells2;
typedef TknU32 NhuUE_RadioAccessCapabBandFDD4_vbxyextadditionalSecondaryCells2;


typedef enum enumNhuUE_RadioAccessCapabBandFDD4_vbxyextsupportOfULCLTD
{
 NhuUE_RadioAccessCapabBandFDD4_vbxyextsupportOfULCLTDtrueEnum
} EnumNhuUE_RadioAccessCapabBandFDD4_vbxyextsupportOfULCLTD;
typedef TknU32 NhuUE_RadioAccessCapabBandFDD4_vbxyextsupportOfULCLTD;

typedef struct NhuUE_RadioAccessCapabBandFDD4_vbxyext
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandFDD4_vbxyextadditionalSecondaryCells2 additionalSecondaryCells2;
 NhuUE_RadioAccessCapabBandFDD4_vbxyextsupportOfULCLTD supportOfULCLTD;
} NhuUE_RadioAccessCapabBandFDD4_vbxyext;

typedef struct NhuUE_RadioAccessCapabBandFDDLst4_vbxyext
{
 TknU16 noComp;
 NhuUE_RadioAccessCapabBandFDD4_vbxyext *member;
}NhuUE_RadioAccessCapabBandFDDLst4_vbxyext;

typedef struct NhuUE_RadioAccessCap_vbxyext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandCombLst_vbxyext ue_RadioAccessCapabBandCombLst_vbxyext;
 NhuPhysicalChannelCap_vbxyext physicalChannelCap;
 NhuRLC_Cap_vbxyext rlc_Cap;
 NhuUE_RadioAccessCapabBandFDDLst4_vbxyext ue_RadioAccessCapabBandFDDLst4;
} NhuUE_RadioAccessCap_vbxyext_IEs;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsva60NonCriticalExtnsvbxyNonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsva60NonCriticalExtnsvbxyNonCriticalExtnsnonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsva60NonCriticalExtnsvbxyNonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_vbxyext_IEs ue_RadioAccessCap_vbxyext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsva60NonCriticalExtnsvbxyNonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsva60NonCriticalExtnsvbxyNonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsva60NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_va60ext_IEs ue_RadioAccessCap_va60ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsva60NonCriticalExtnsvbxyNonCriticalExtns vbxyNonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsva60NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_va40ext_IEs ue_RadioAccessCap_va40ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsva60NonCriticalExtns va60NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_v970ext_IEs ue_RadioAccessCap_v970ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtns va40NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_v920ext_IEs ue_RadioAccessCap_v920ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtns v970NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_v890ext_IEs ue_RadioAccessCap_v890ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtns v920NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_v880ext_IEs ue_RadioAccessCap_v880ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtns v890NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_v860ext_IEs ue_RadioAccessCap_v860ext;
 NhuInterRAT_UE_RadioAccessCap_v860ext ue_RATSpecificCap_v860ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtns v880NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_v790ext_IEs ue_RadioAccessCap_v790ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtns v860NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_v770ext_IEs ue_RadioAccessCap_v770ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtns v790NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_v6e0ext_IEs ue_RadioAccessCap_v6e0ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtns v770NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_v6b0ext_IEs ue_RadioAccessCap_v6b0ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtns v6e0NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtns;

typedef struct NhuUE_CapCont_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v690ext ue_RadioAccessCap_v690ext;
 NhuInterRAT_UE_RadioAccessCap_v690ext ue_RATSpecificCap_v690ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtns v6b0NonCriticalExtns;
} NhuUE_CapCont_IEs;

typedef struct NhuUE_ConnTmrsAndConsts
{
 TknPres pres;
 NhuT_301 t_301;
 NhuN_301 n_301;
 NhuT_302 t_302;
 NhuN_302 n_302;
 NhuT_304 t_304;
 NhuN_304 n_304;
 NhuT_305 t_305;
 NhuT_307 t_307;
 NhuT_308 t_308;
 NhuT_309 t_309;
 NhuT_310 t_310;
 NhuN_310 n_310;
 NhuT_311 t_311;
 NhuT_312 t_312;
 NhuN_312 n_312;
 NhuT_313 t_313;
 NhuN_313 n_313;
 NhuT_314 t_314;
 NhuT_315 t_315;
 NhuN_315 n_315;
 NhuT_316 t_316;
 NhuT_317 t_317;
} NhuUE_ConnTmrsAndConsts;

typedef struct NhuUE_ConnTmrsAndConsts_v3a0ext
{
 TknPres pres;
 NhuN_312ext n_312;
 NhuN_315ext n_315;
} NhuUE_ConnTmrsAndConsts_v3a0ext;

typedef struct NhuUE_ConnTmrsAndConsts_r5
{
 TknPres pres;
 NhuT_301 t_301;
 NhuN_301 n_301;
 NhuT_302 t_302;
 NhuN_302 n_302;
 NhuT_304 t_304;
 NhuN_304 n_304;
 NhuT_305 t_305;
 NhuT_307 t_307;
 NhuT_308 t_308;
 NhuT_309 t_309;
 NhuT_310 t_310;
 NhuN_310 n_310;
 NhuT_311 t_311;
 NhuT_312 t_312;
 NhuN_312_r5 n_312;
 NhuT_313 t_313;
 NhuN_313 n_313;
 NhuT_314 t_314;
 NhuT_315 t_315;
 NhuN_315_r5 n_315;
 NhuT_316 t_316;
 NhuT_317 t_317;
} NhuUE_ConnTmrsAndConsts_r5;

typedef struct NhuUE_ConnTmrsAndConsts_v860ext
{
 TknPres pres;
 NhuT_323 t_323;
} NhuUE_ConnTmrsAndConsts_v860ext;

typedef struct NhuUE_IdleTmrsAndConsts
{
 TknPres pres;
 NhuT_300 t_300;
 NhuN_300 n_300;
 NhuT_312 t_312;
 NhuN_312 n_312;
} NhuUE_IdleTmrsAndConsts;

typedef struct NhuUE_HSPA_Identities_r6
{
 TknPres pres;
 NhuH_RNTI new_H_RNTI;
 NhuE_RNTI newPrimary_E_RNTI;
 NhuE_RNTI newSecondary_E_RNTI;
} NhuUE_HSPA_Identities_r6;

typedef struct NhuUE_IdleTmrsAndConsts_v3a0ext
{
 TknPres pres;
 NhuN_312ext n_312;
} NhuUE_IdleTmrsAndConsts_v3a0ext;

typedef struct NhuUE_MultiModeRAT_Cap
{
 TknPres pres;
 NhuMultiRAT_Cap multiRAT_CapLst;
 NhuMultiModeCap multiModeCap;
} NhuUE_MultiModeRAT_Cap;


typedef enum enumNhuUE_PowerClassExt
{
 NhuUE_PowerClassExtclass1Enum,
 NhuUE_PowerClassExtclass2Enum,
 NhuUE_PowerClassExtclass3Enum,
 NhuUE_PowerClassExtclass4Enum,
 NhuUE_PowerClassExtspare4Enum,
 NhuUE_PowerClassExtspare3Enum,
 NhuUE_PowerClassExtspare2Enum,
 NhuUE_PowerClassExtspare1Enum
} EnumNhuUE_PowerClassExt;
typedef TknU32 NhuUE_PowerClassExt;


typedef TknU8 NhuUE_Positioning_CapstandaloneLocMethodsSupp;


typedef TknU8 NhuUE_Positioning_Capue_BasedOTDOA_Supp;


typedef TknU8 NhuUE_Positioning_CapsupportForUE_GPS_TimingOfCellFrames;


typedef TknU8 NhuUE_Positioning_CapsupportForIPDL;

typedef struct NhuUE_Positioning_Cap
{
 TknPres pres;
 NhuUE_Positioning_CapstandaloneLocMethodsSupp standaloneLocMethodsSupp;
 NhuUE_Positioning_Capue_BasedOTDOA_Supp ue_BasedOTDOA_Supp;
 NhuNwAssistedGPS_Supp networkAssistedGPS_Supp;
 NhuUE_Positioning_CapsupportForUE_GPS_TimingOfCellFrames supportForUE_GPS_TimingOfCellFrames;
 NhuUE_Positioning_CapsupportForIPDL supportForIPDL;
} NhuUE_Positioning_Cap;

typedef struct NhuUE_RadioAccessCap
{
 TknPres pres;
 NhuPDCP_Cap pdcp_Cap;
 NhuRLC_Cap rlc_Cap;
 NhuTportChannelCap transportChannelCap;
 NhuRF_Cap rf_Cap;
 NhuPhysicalChannelCap physicalChannelCap;
 NhuUE_MultiModeRAT_Cap ue_MultiModeRAT_Cap;
 NhuSecCap securityCap;
 NhuUE_Positioning_Cap ue_positioning_Cap;
 NhuMeasurementCap measurementCap;
} NhuUE_RadioAccessCap;

typedef struct NhuUE_RadioAccessCapabBandFDDfddRF_Cap
{
 TknPres pres;
 NhuUE_PowerClassExt ue_PowerClass;
 NhuTxRxFrequencySeparation txRxFrequencySeparation;
} NhuUE_RadioAccessCapabBandFDDfddRF_Cap;

typedef struct NhuUE_RadioAccessCapabBandFDD
{
 TknPres pres;
 NhuRadioFrequencyBandFDD radioFrequencyBandFDD;
 NhuUE_RadioAccessCapabBandFDDfddRF_Cap fddRF_Cap;
 NhuMeasurementCapExt measurementCap;
} NhuUE_RadioAccessCapabBandFDD;

typedef struct NhuUE_RadioAccessCapabBandFDDLst
{
 TknU16 noComp;
 NhuUE_RadioAccessCapabBandFDD *member;
}NhuUE_RadioAccessCapabBandFDDLst;

typedef struct NhuUE_RadioAccessCap_v370ext
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCapabBandFDDLst;
} NhuUE_RadioAccessCap_v370ext;

typedef struct NhuUE_RadioAccessCapInfo
{
 TknPres pres;
 NhuUE_RadioAccessCap ue_RadioAccessCap;
 NhuUE_RadioAccessCap_v370ext ue_RadioAccessCap_v370ext;
} NhuUE_RadioAccessCapInfo;


typedef TknU8 NhuUE_PositioningCapExt_v380rx_tx_TimeDifferenceTyp2Capable;

typedef struct NhuUE_PositioningCapExt_v380
{
 TknPres pres;
 NhuUE_PositioningCapExt_v380rx_tx_TimeDifferenceTyp2Capable rx_tx_TimeDifferenceTyp2Capable;
} NhuUE_PositioningCapExt_v380;

typedef struct NhuUE_RadioAccessCap_v380ext
{
 TknPres pres;
 NhuUE_PositioningCapExt_v380 ue_PositioningCapExt_v380;
} NhuUE_RadioAccessCap_v380ext;


typedef enum enumNhuUE_PositioningCapExt_v3a0validity_CellPCH_UraPCH
{
 NhuUE_PositioningCapExt_v3a0validity_CellPCH_UraPCHtrueEnum
} EnumNhuUE_PositioningCapExt_v3a0validity_CellPCH_UraPCH;
typedef TknU32 NhuUE_PositioningCapExt_v3a0validity_CellPCH_UraPCH;

typedef struct NhuUE_PositioningCapExt_v3a0
{
 TknPres pres;
 NhuUE_PositioningCapExt_v3a0validity_CellPCH_UraPCH validity_CellPCH_UraPCH;
} NhuUE_PositioningCapExt_v3a0;

typedef struct NhuUE_RadioAccessCap_v3a0ext
{
 TknPres pres;
 NhuUE_PositioningCapExt_v3a0 ue_PositioningCapExt_v3a0;
} NhuUE_RadioAccessCap_v3a0ext;


typedef enum enumNhuUE_PositioningCapExt_v3g0sfn_sfnTyp2Cap
{
 NhuUE_PositioningCapExt_v3g0sfn_sfnTyp2CaptrueEnum
} EnumNhuUE_PositioningCapExt_v3g0sfn_sfnTyp2Cap;
typedef TknU32 NhuUE_PositioningCapExt_v3g0sfn_sfnTyp2Cap;

typedef struct NhuUE_PositioningCapExt_v3g0
{
 TknPres pres;
 NhuUE_PositioningCapExt_v3g0sfn_sfnTyp2Cap sfn_sfnTyp2Cap;
} NhuUE_PositioningCapExt_v3g0;

typedef struct NhuUE_RadioAccessCap_v3g0ext
{
 TknPres pres;
 NhuUE_PositioningCapExt_v3g0 ue_PositioningCapExt_v3g0;
} NhuUE_RadioAccessCap_v3g0ext;

typedef struct NhuUE_RadioAccessCapabBandFDD2fddRF_Cap
{
 TknPres pres;
 NhuUE_PowerClassExt ue_PowerClass;
 NhuTxRxFrequencySeparation txRxFrequencySeparation;
} NhuUE_RadioAccessCapabBandFDD2fddRF_Cap;

typedef struct NhuUE_RadioAccessCapabBandFDD2
{
 TknPres pres;
 NhuRadioFrequencyBandFDD2 radioFrequencyBandFDD2;
 NhuUE_RadioAccessCapabBandFDD2fddRF_Cap fddRF_Cap;
 NhuMeasurementCapExt2 measurementCap2;
} NhuUE_RadioAccessCapabBandFDD2;

typedef struct NhuUE_RadioAccessCapabBandFDDLst2
{
 TknU16 noComp;
 NhuUE_RadioAccessCapabBandFDD2 *member;
}NhuUE_RadioAccessCapabBandFDDLst2;

typedef struct NhuUE_RadioAccessCapabBandFDD_ext
{
 TknPres pres;
 NhuRadioFrequencyBandFDD radioFrequencyBandFDD;
 NhuCompressedModeMeasCapabFDDLst_ext compressedModeMeasCapabFDDLst_ext;
} NhuUE_RadioAccessCapabBandFDD_ext;

typedef struct NhuUE_RadioAccessCapabBandFDDLst_ext
{
 TknU16 noComp;
 NhuUE_RadioAccessCapabBandFDD_ext *member;
}NhuUE_RadioAccessCapabBandFDDLst_ext;

typedef struct NhuUE_RadioAccessCap_v650ext
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandFDDLst2 ue_RadioAccessCapabBandFDDLst2;
 NhuUE_RadioAccessCapabBandFDDLst_ext ue_RadioAccessCapabBandFDDLst_ext;
} NhuUE_RadioAccessCap_v650ext;


typedef enum enumNhuUE_RadioAccessCap_v7e0extsupportForTwoDRXSchemesInPCH
{
 NhuUE_RadioAccessCap_v7e0extsupportForTwoDRXSchemesInPCHtrueEnum
} EnumNhuUE_RadioAccessCap_v7e0extsupportForTwoDRXSchemesInPCH;
typedef TknU32 NhuUE_RadioAccessCap_v7e0extsupportForTwoDRXSchemesInPCH;


typedef enum enumNhuUE_RadioAccessCap_v7e0extsupportEDPDCHPowerInterpolation
{
 NhuUE_RadioAccessCap_v7e0extsupportEDPDCHPowerInterpolationtrueEnum
} EnumNhuUE_RadioAccessCap_v7e0extsupportEDPDCHPowerInterpolation;
typedef TknU32 NhuUE_RadioAccessCap_v7e0extsupportEDPDCHPowerInterpolation;

typedef struct NhuUE_RadioAccessCap_v7e0ext
{
 TknPres pres;
 NhuUE_RadioAccessCap_v7e0extsupportForTwoDRXSchemesInPCH supportForTwoDRXSchemesInPCH;
 NhuUE_RadioAccessCap_v7e0extsupportEDPDCHPowerInterpolation supportEDPDCHPowerInterpolation;
} NhuUE_RadioAccessCap_v7e0ext;


typedef TknU32 NhuUE_RadioAccessCapComp_TDD128_v7f0exttdd_edch_PhysicalLyrCategory;


typedef enum enumNhuUE_RadioAccessCapComp_TDD128_v7f0extsupportForCSVoiceoverHSPA
{
 NhuUE_RadioAccessCapComp_TDD128_v7f0extsupportForCSVoiceoverHSPAtrueEnum
} EnumNhuUE_RadioAccessCapComp_TDD128_v7f0extsupportForCSVoiceoverHSPA;
typedef TknU32 NhuUE_RadioAccessCapComp_TDD128_v7f0extsupportForCSVoiceoverHSPA;

typedef struct NhuUE_RadioAccessCapComp_TDD128_v7f0ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category hSDSCH_physical_layer_category;
 NhuMultiCarrier_HSDSCH_physical_layer_category multiCarrier_physical_layer_category;
 NhuUE_RadioAccessCapComp_TDD128_v7f0exttdd_edch_PhysicalLyrCategory tdd_edch_PhysicalLyrCategory;
 NhuDL_CapWithSimultaneousHS_DSCHConfig dl_CapWithSimultaneousHS_DSCHConfig;
 NhuUE_RadioAccessCapComp_TDD128_v7f0extsupportForCSVoiceoverHSPA supportForCSVoiceoverHSPA;
 NhuTotalRLC_AM_BufferSize_r5_ext totalRLC_AM_BufferSize;
} NhuUE_RadioAccessCapComp_TDD128_v7f0ext;


typedef enum enumNhuUE_RadioAccessCap_v7f0extsupportofTxDivOnNonMIMOChannel
{
 NhuUE_RadioAccessCap_v7f0extsupportofTxDivOnNonMIMOChanneltrueEnum
} EnumNhuUE_RadioAccessCap_v7f0extsupportofTxDivOnNonMIMOChannel;
typedef TknU32 NhuUE_RadioAccessCap_v7f0extsupportofTxDivOnNonMIMOChannel;

typedef struct NhuUE_RadioAccessCap_v7f0ext
{
 TknPres pres;
 NhuUE_RadioAccessCap_v7f0extsupportofTxDivOnNonMIMOChannel supportofTxDivOnNonMIMOChannel;
 NhuPhysicalChannelCap_LCR_r4 physicalChannelCap_LCR;
 NhuUE_RadioAccessCapComp_TDD128_v7f0ext ue_RadioAccessCapComp_TDD128;
} NhuUE_RadioAccessCap_v7f0ext;


typedef enum enumNhuUE_RadioAccessCapInfo_v770extganssSupportInd
{
 NhuUE_RadioAccessCapInfo_v770extganssSupportIndtrueEnum
} EnumNhuUE_RadioAccessCapInfo_v770extganssSupportInd;
typedef TknU32 NhuUE_RadioAccessCapInfo_v770extganssSupportInd;


typedef enum enumNhuUE_RadioAccessCapInfo_v770extmac_ehsSupport
{
 NhuUE_RadioAccessCapInfo_v770extmac_ehsSupporttrueEnum
} EnumNhuUE_RadioAccessCapInfo_v770extmac_ehsSupport;
typedef TknU32 NhuUE_RadioAccessCapInfo_v770extmac_ehsSupport;

typedef struct NhuUE_RadioAccessCapInfo_v770ext
{
 TknPres pres;
 NhuRF_Cap_v770ext rf_Cap;
 NhuPhysicalChannelCapInfo_v770ext physicalChannelCap;
 NhuUE_RadioAccessCapInfo_v770extganssSupportInd ganssSupportInd;
 NhuUE_RadioAccessCapInfo_v770extmac_ehsSupport mac_ehsSupport;
 NhuUE_SpecificCapInfo_LCRTDD ue_SpecificCapInfo;
} NhuUE_RadioAccessCapInfo_v770ext;

typedef struct NhuUE_RadioAccessCapInfo_TDD128_v8b0ext
{
 TknPres pres;
 NhuMeasurementCapTDD measurementCapTDD;
 NhuHSDSCH_physical_layer_category_extension hSDSCH_physical_layer_category_extension;
} NhuUE_RadioAccessCapInfo_TDD128_v8b0ext;

typedef struct NhuUE_RadioAccessCap_v860ext
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandFDDLst3 ue_RadioAccessCapabBandFDDLst3;
} NhuUE_RadioAccessCap_v860ext;


typedef enum enumNhuUE_RadioAccessCap_v880extsupportForPriorityReselectionInUTRAN
{
 NhuUE_RadioAccessCap_v880extsupportForPriorityReselectionInUTRANtrueEnum
} EnumNhuUE_RadioAccessCap_v880extsupportForPriorityReselectionInUTRAN;
typedef TknU32 NhuUE_RadioAccessCap_v880extsupportForPriorityReselectionInUTRAN;

typedef struct NhuUE_RadioAccessCap_v880ext
{
 TknPres pres;
 NhuUE_RadioAccessCap_v880extsupportForPriorityReselectionInUTRAN supportForPriorityReselectionInUTRAN;
} NhuUE_RadioAccessCap_v880ext;


typedef enum enumNhuUE_RadioAccessCap_v890extsupportCellSpecificTxDiversityinDC_Operation
{
 NhuUE_RadioAccessCap_v890extsupportCellSpecificTxDiversityinDC_OperationtrueEnum
} EnumNhuUE_RadioAccessCap_v890extsupportCellSpecificTxDiversityinDC_Operation;
typedef TknU32 NhuUE_RadioAccessCap_v890extsupportCellSpecificTxDiversityinDC_Operation;

typedef struct NhuUE_RadioAccessCap_v890ext
{
 TknPres pres;
 NhuUE_RadioAccessCap_v890extsupportCellSpecificTxDiversityinDC_Operation supportCellSpecificTxDiversityinDC_Operation;
} NhuUE_RadioAccessCap_v890ext;


typedef enum enumNhuUE_RadioAccessCap_v920extsupportOfenhancedTS0
{
 NhuUE_RadioAccessCap_v920extsupportOfenhancedTS0trueEnum
} EnumNhuUE_RadioAccessCap_v920extsupportOfenhancedTS0;
typedef TknU32 NhuUE_RadioAccessCap_v920extsupportOfenhancedTS0;

typedef struct NhuUE_RadioAccessCap_v920ext
{
 TknPres pres;
 NhuUE_RadioAccessCap_v920extsupportOfenhancedTS0 supportOfenhancedTS0;
} NhuUE_RadioAccessCap_v920ext;

typedef struct NhuUE_RadioAccessCap_va40ext
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandFDDLst4 ue_RadioAccessCapabBandFDDLst4;
} NhuUE_RadioAccessCap_va40ext;

typedef struct NhuUE_RadioAccessCap_va60ext
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandFDDLst4_va60ext ue_RadioAccessCapabBandFDDLst4;
} NhuUE_RadioAccessCap_va60ext;

typedef struct NhuUE_RadioAccessCap_vbxyext
{
 TknPres pres;
 NhuRLC_Cap_vbxyext rlc_Cap;
 NhuUE_RadioAccessCapabBandFDDLst4_vbxyext ue_RadioAccessCapabBandFDDLst4;
} NhuUE_RadioAccessCap_vbxyext;

typedef struct NhuUE_RadioAccessCapabBandFDD5fddRF_Cap
{
 TknPres pres;
 NhuUE_PowerClassExt ue_PowerClass;
 NhuTxRxFrequencySeparation txRxFrequencySeparation;
} NhuUE_RadioAccessCapabBandFDD5fddRF_Cap;

typedef struct NhuUE_RadioAccessCapabBandFDD5
{
 TknPres pres;
 NhuRadioFrequencyBandFDD3 radioFrequencyBandFDD3;
 NhuUE_RadioAccessCapabBandFDD5fddRF_Cap fddRF_Cap;
 NhuMeasurementCapExt4 measurementCap4;
} NhuUE_RadioAccessCapabBandFDD5;

typedef struct NhuUE_RadioAccessCapabBandFDDLst5
{
 TknU16 noComp;
 NhuUE_RadioAccessCapabBandFDD5 *member;
}NhuUE_RadioAccessCapabBandFDDLst5;

typedef struct NhuUE_RadioAccessCapabBandFDD_ext2
{
 TknPres pres;
 NhuRadioFrequencyBandFDD radioFrequencyBandFDD;
 NhuRadioFrequencyBandFDD2 radioFrequencyBandFDD2;
 NhuCompressedModeMeasCapabFDDLst3 compressedModeMeasCapabFDDLst3;
} NhuUE_RadioAccessCapabBandFDD_ext2;

typedef struct NhuUE_RadioAccessCapabBandFDDLst_ext2
{
 TknU16 noComp;
 NhuUE_RadioAccessCapabBandFDD_ext2 *member;
}NhuUE_RadioAccessCapabBandFDDLst_ext2;

typedef struct NhuUE_RadioAccessCapabBand_va40ext
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandFDDLst5 ue_RadioAccessCapabBandFDDLst5;
 NhuUE_RadioAccessCapabBandFDDLst_ext2 ue_RadioAccessCapabBandFDDLst_ext2;
} NhuUE_RadioAccessCapabBand_va40ext;

typedef struct NhuUE_RadioAccessCap_v4b0exttdd_CapExt
{
 TknPres pres;
 NhuRF_Cap_r4_ext rf_Cap;
 NhuPhysicalChannelCap_LCR_r4 physicalChannelCap_LCR;
 NhuMeasurementCap_r4_ext measurementCap_r4_ext;
} NhuUE_RadioAccessCap_v4b0exttdd_CapExt;

typedef struct NhuUE_RadioAccessCap_v4b0ext
{
 TknPres pres;
 NhuPDCP_Cap_r4_ext pdcp_Cap_r4_ext;
 NhuUE_RadioAccessCap_v4b0exttdd_CapExt tdd_CapExt;
 NhuAccessStratumRlsIndicator accessStratumRlsIndicator;
} NhuUE_RadioAccessCap_v4b0ext;


typedef enum enumNhuRF_CapabBandFDDComp
{
 NhuRF_CapabBandFDDCompnotSuppEnum,
 NhuRF_CapabBandFDDCompdefault_TxRx_separationEnum,
 NhuRF_CapabBandFDDCompspare2Enum,
 NhuRF_CapabBandFDDCompspare1Enum
} EnumNhuRF_CapabBandFDDComp;
typedef TknU32 NhuRF_CapabBandFDDComp;

typedef struct NhuRF_CapabBandLstFDDComp
{
 TknU16 noComp;
 NhuRF_CapabBandFDDComp *member;
}NhuRF_CapabBandLstFDDComp;

typedef struct NhuRF_CapCompfdd
{
 TknU8 choice;
 union {
  NhuRF_CapabBandLstFDDComp supported;
 } val;
} NhuRF_CapCompfdd;

typedef struct NhuRF_CapComptdd384_RF_Cap
{
 TknU8 choice;
 union {
  NhuRadioFrequencyBandTDDLst supported;
 } val;
} NhuRF_CapComptdd384_RF_Cap;

typedef struct NhuRF_CapComptdd128_RF_Cap
{
 TknU8 choice;
 union {
  NhuRadioFrequencyBandTDDLst supported;
 } val;
} NhuRF_CapComptdd128_RF_Cap;

typedef struct NhuRF_CapComp
{
 TknPres pres;
 NhuRF_CapCompfdd fdd;
 NhuRF_CapComptdd384_RF_Cap tdd384_RF_Cap;
 NhuRF_CapComptdd128_RF_Cap tdd128_RF_Cap;
} NhuRF_CapComp;


typedef TknU8 NhuUE_RadioAccessCapComptotalAM_RLCMemoryExceeds10kB;

typedef struct NhuUE_RadioAccessCapComp
{
 TknPres pres;
 NhuUE_RadioAccessCapComptotalAM_RLCMemoryExceeds10kB totalAM_RLCMemoryExceeds10kB;
 NhuRF_CapComp rf_CapComp;
} NhuUE_RadioAccessCapComp;

typedef struct NhuRF_CapabBandLstFDDComp_ext
{
 TknU16 noComp;
 NhuRF_CapabBandFDDComp *member;
}NhuRF_CapabBandLstFDDComp_ext;

typedef struct NhuUE_RadioAccessCapComp_ext
{
 TknPres pres;
 NhuRF_CapabBandLstFDDComp_ext rf_CapFDDComp;
} NhuUE_RadioAccessCapComp_ext;

typedef struct NhuRF_CapComp_v770exttdd768_RF_Cap
{
 TknU8 choice;
 union {
  NhuRadioFrequencyBandTDDLst_r7 supported;
 } val;
} NhuRF_CapComp_v770exttdd768_RF_Cap;

typedef struct NhuRF_CapComp_v770ext
{
 TknPres pres;
 NhuRadioFrequencyBandTDDLst_r7 tdd384_RF_Cap;
 NhuRF_CapComp_v770exttdd768_RF_Cap tdd768_RF_Cap;
 NhuRadioFrequencyBandTDDLst_r7 tdd128_RF_Cap;
} NhuRF_CapComp_v770ext;


typedef enum enumNhuUE_RadioAccessCapComp_v770extsecurityCapInd
{
 NhuUE_RadioAccessCapComp_v770extsecurityCapIndtrueEnum
} EnumNhuUE_RadioAccessCapComp_v770extsecurityCapInd;
typedef TknU32 NhuUE_RadioAccessCapComp_v770extsecurityCapInd;


typedef enum enumNhuUE_RadioAccessCapComp_v770extganssSupportInd
{
 NhuUE_RadioAccessCapComp_v770extganssSupportIndtrueEnum
} EnumNhuUE_RadioAccessCapComp_v770extganssSupportInd;
typedef TknU32 NhuUE_RadioAccessCapComp_v770extganssSupportInd;


typedef enum enumNhuUE_RadioAccessCapComp_v770extmac_ehsSupport
{
 NhuUE_RadioAccessCapComp_v770extmac_ehsSupporttrueEnum
} EnumNhuUE_RadioAccessCapComp_v770extmac_ehsSupport;
typedef TknU32 NhuUE_RadioAccessCapComp_v770extmac_ehsSupport;

typedef struct NhuUE_RadioAccessCapComp_v770ext
{
 TknPres pres;
 NhuRF_CapComp_v770ext rf_CapComp;
 NhuUE_RadioAccessCapComp_v770extsecurityCapInd securityCapInd;
 NhuUE_RadioAccessCapComp_v770extganssSupportInd ganssSupportInd;
 NhuUE_RadioAccessCapComp_v770extmac_ehsSupport mac_ehsSupport;
} NhuUE_RadioAccessCapComp_v770ext;

typedef struct NhuUE_RadioAccessCapComp2fddPhysicalChannelCapab_hspdsch_edch
{
 TknPres pres;
 NhuDL_CapWithSimultaneousHS_DSCHConfig dl_CapWithSimultaneousHS_DSCHConfig;
 NhuHSDSCH_physical_layer_category physicalChannelCapabComp_hspdsch_r6;
 NhuPhysicalChannelCap_edch_r6 physicalChannelCap_edch_r6;
} NhuUE_RadioAccessCapComp2fddPhysicalChannelCapab_hspdsch_edch;

typedef struct NhuUE_RadioAccessCapComp2
{
 TknPres pres;
 NhuUE_RadioAccessCapComp2fddPhysicalChannelCapab_hspdsch_edch fddPhysicalChannelCapab_hspdsch_edch;
} NhuUE_RadioAccessCapComp2;


typedef TknU32 NhuUE_RadioAccessCapComp2_v770extedch_PhysicalLyrCategory_extension;


typedef enum enumNhuUE_RadioAccessCapComp2_v770exthsscchlessHsdschOperation
{
 NhuUE_RadioAccessCapComp2_v770exthsscchlessHsdschOperationtrueEnum
} EnumNhuUE_RadioAccessCapComp2_v770exthsscchlessHsdschOperation;
typedef TknU32 NhuUE_RadioAccessCapComp2_v770exthsscchlessHsdschOperation;


typedef enum enumNhuUE_RadioAccessCapComp2_v770extenhancedFdpch
{
 NhuUE_RadioAccessCapComp2_v770extenhancedFdpchtrueEnum
} EnumNhuUE_RadioAccessCapComp2_v770extenhancedFdpch;
typedef TknU32 NhuUE_RadioAccessCapComp2_v770extenhancedFdpch;


typedef enum enumNhuUE_RadioAccessCapComp2_v770exthsdschReception_CellFach
{
 NhuUE_RadioAccessCapComp2_v770exthsdschReception_CellFachtrueEnum
} EnumNhuUE_RadioAccessCapComp2_v770exthsdschReception_CellFach;
typedef TknU32 NhuUE_RadioAccessCapComp2_v770exthsdschReception_CellFach;


typedef enum enumNhuUE_RadioAccessCapComp2_v770exthsdschReception_CellUraPch
{
 NhuUE_RadioAccessCapComp2_v770exthsdschReception_CellUraPchtrueEnum
} EnumNhuUE_RadioAccessCapComp2_v770exthsdschReception_CellUraPch;
typedef TknU32 NhuUE_RadioAccessCapComp2_v770exthsdschReception_CellUraPch;


typedef enum enumNhuUE_RadioAccessCapComp2_v770extdiscontinuousDpcchTransmission
{
 NhuUE_RadioAccessCapComp2_v770extdiscontinuousDpcchTransmissiontrueEnum
} EnumNhuUE_RadioAccessCapComp2_v770extdiscontinuousDpcchTransmission;
typedef TknU32 NhuUE_RadioAccessCapComp2_v770extdiscontinuousDpcchTransmission;


typedef enum enumNhuUE_RadioAccessCapComp2_v770extslotFormat4
{
 NhuUE_RadioAccessCapComp2_v770extslotFormat4trueEnum
} EnumNhuUE_RadioAccessCapComp2_v770extslotFormat4;
typedef TknU32 NhuUE_RadioAccessCapComp2_v770extslotFormat4;

typedef struct NhuUE_RadioAccessCapComp2_v770ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext hsdsch_physical_layer_category_ext;
 NhuUE_RadioAccessCapComp2_v770extedch_PhysicalLyrCategory_extension edch_PhysicalLyrCategory_extension;
 NhuUE_RadioAccessCapComp2_v770exthsscchlessHsdschOperation hsscchlessHsdschOperation;
 NhuUE_RadioAccessCapComp2_v770extenhancedFdpch enhancedFdpch;
 NhuUE_RadioAccessCapComp2_v770exthsdschReception_CellFach hsdschReception_CellFach;
 NhuUE_RadioAccessCapComp2_v770exthsdschReception_CellUraPch hsdschReception_CellUraPch;
 NhuUE_RadioAccessCapComp2_v770extdiscontinuousDpcchTransmission discontinuousDpcchTransmission;
 NhuUE_RadioAccessCapComp2_v770extslotFormat4 slotFormat4;
 NhuPDCP_Cap_v770ext pdcp_Cap;
} NhuUE_RadioAccessCapComp2_v770ext;


typedef enum enumNhuUE_RadioAccessCapComp2_v7f0extsupportofTxDivOnNonMIMOChannel
{
 NhuUE_RadioAccessCapComp2_v7f0extsupportofTxDivOnNonMIMOChanneltrueEnum
} EnumNhuUE_RadioAccessCapComp2_v7f0extsupportofTxDivOnNonMIMOChannel;
typedef TknU32 NhuUE_RadioAccessCapComp2_v7f0extsupportofTxDivOnNonMIMOChannel;

typedef struct NhuUE_RadioAccessCapComp2_v7f0ext
{
 TknPres pres;
 NhuUE_RadioAccessCapComp2_v7f0extsupportofTxDivOnNonMIMOChannel supportofTxDivOnNonMIMOChannel;
} NhuUE_RadioAccessCapComp2_v7f0ext;


typedef enum enumNhuUE_RadioAccessCapComp2_v860extsupportOfMACiis
{
 NhuUE_RadioAccessCapComp2_v860extsupportOfMACiistrueEnum
} EnumNhuUE_RadioAccessCapComp2_v860extsupportOfMACiis;
typedef TknU32 NhuUE_RadioAccessCapComp2_v860extsupportOfMACiis;

typedef struct NhuUE_RadioAccessCapComp2_v860ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext2 hsdsch_physical_layer_category_ext2;
 NhuUE_RadioAccessCapComp2_v860extsupportOfMACiis supportOfMACiis;
} NhuUE_RadioAccessCapComp2_v860ext;


typedef TknU32 NhuUE_RadioAccessCapComp2_v920extedch_PhysicalLyrCategory_extension2;

typedef struct NhuUE_RadioAccessCapComp2_v920ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext3 hsdsch_physical_layer_category_ext3;
 NhuUE_RadioAccessCapComp2_v920extedch_PhysicalLyrCategory_extension2 edch_PhysicalLyrCategory_extension2;
} NhuUE_RadioAccessCapComp2_v920ext;

typedef struct NhuUE_RadioAccessCapComp2_va40ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext4 hsdsch_physical_layer_category_ext4;
 NhuHSDSCH_physical_layer_category_ext5 hsdsch_physical_layer_category_ext5;
} NhuUE_RadioAccessCapComp2_va40ext;

typedef struct NhuUE_RadioAccessCapComp2_vbxyext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext6 hsdsch_physical_layer_category_ext6;
 NhuHSDSCH_physical_layer_category_ext7 hsdsch_physical_layer_category_ext7;
} NhuUE_RadioAccessCapComp2_vbxyext;


typedef enum enumNhuUE_RadioAccessCapComp_TDD128supportOfSFModeForHSPDSCHDualStream
{
 NhuUE_RadioAccessCapComp_TDD128supportOfSFModeForHSPDSCHDualStreamsf1Enum,
 NhuUE_RadioAccessCapComp_TDD128supportOfSFModeForHSPDSCHDualStreamsf1sf16Enum
} EnumNhuUE_RadioAccessCapComp_TDD128supportOfSFModeForHSPDSCHDualStream;
typedef TknU32 NhuUE_RadioAccessCapComp_TDD128supportOfSFModeForHSPDSCHDualStream;


typedef enum enumNhuUE_RadioAccessCapComp_TDD128supportOfCmnEDCH
{
 NhuUE_RadioAccessCapComp_TDD128supportOfCmnEDCHtrueEnum
} EnumNhuUE_RadioAccessCapComp_TDD128supportOfCmnEDCH;
typedef TknU32 NhuUE_RadioAccessCapComp_TDD128supportOfCmnEDCH;


typedef enum enumNhuUE_RadioAccessCapComp_TDD128supportOfMACiis
{
 NhuUE_RadioAccessCapComp_TDD128supportOfMACiistrueEnum
} EnumNhuUE_RadioAccessCapComp_TDD128supportOfMACiis;
typedef TknU32 NhuUE_RadioAccessCapComp_TDD128supportOfMACiis;


typedef enum enumNhuUE_RadioAccessCapComp_TDD128supportOfSPSOperation
{
 NhuUE_RadioAccessCapComp_TDD128supportOfSPSOperationtrueEnum
} EnumNhuUE_RadioAccessCapComp_TDD128supportOfSPSOperation;
typedef TknU32 NhuUE_RadioAccessCapComp_TDD128supportOfSPSOperation;


typedef enum enumNhuUE_RadioAccessCapComp_TDD128supportOfCntrlChannelDRXOperation
{
 NhuUE_RadioAccessCapComp_TDD128supportOfCntrlChannelDRXOperationtrueEnum
} EnumNhuUE_RadioAccessCapComp_TDD128supportOfCntrlChannelDRXOperation;
typedef TknU32 NhuUE_RadioAccessCapComp_TDD128supportOfCntrlChannelDRXOperation;

typedef struct NhuUE_RadioAccessCapComp_TDD128
{
 TknPres pres;
 NhuRadioFrequencyBandTDDextLst tdd128RF_Cap;
 NhuUE_RadioAccessCapComp_TDD128supportOfSFModeForHSPDSCHDualStream supportOfSFModeForHSPDSCHDualStream;
 NhuUE_RadioAccessCapComp_TDD128supportOfCmnEDCH supportOfCmnEDCH;
 NhuUE_RadioAccessCapComp_TDD128supportOfMACiis supportOfMACiis;
 NhuUE_RadioAccessCapComp_TDD128supportOfSPSOperation supportOfSPSOperation;
 NhuUE_RadioAccessCapComp_TDD128supportOfCntrlChannelDRXOperation supportOfCntrlChannelDRXOperation;
} NhuUE_RadioAccessCapComp_TDD128;

typedef struct NhuRF_CapabBandLstFDDComp_ext2
{
 TknU16 noComp;
 NhuRF_CapabBandFDDComp *member;
}NhuRF_CapabBandLstFDDComp_ext2;

typedef struct NhuUE_RadioAccessCap_v590ext
{
 TknPres pres;
 NhuDL_CapWithSimultaneousHS_DSCHConfig dl_CapWithSimultaneousHS_DSCHConfig;
 NhuPDCP_Cap_r5_ext pdcp_Cap_r5_ext;
 NhuRLC_Cap_r5_ext rlc_Cap_r5_ext;
 NhuPhysicalChannelCap_hspdsch_r5 physicalChannelCap;
 NhuMultiModeRAT_Cap_v590ext multiModeRAT_Cap_v590ext;
} NhuUE_RadioAccessCap_v590ext;

typedef struct NhuUE_RadioAccessCap_v5c0ext
{
 TknPres pres;
 NhuPDCP_Cap_r5_ext2 pdcp_Cap_r5_ext2;
} NhuUE_RadioAccessCap_v5c0ext;

typedef struct NhuUE_RadioAccessCap_v680ext
{
 TknPres pres;
 NhuMultiModeRAT_Cap_v680ext multiModeRAT_Cap_v680ext;
} NhuUE_RadioAccessCap_v680ext;


typedef enum enumNhuUL_OLTD_InfoFDDulOLTDActvn
{
 NhuUL_OLTD_InfoFDDulOLTDActvntrueEnum
} EnumNhuUL_OLTD_InfoFDDulOLTDActvn;
typedef TknU32 NhuUL_OLTD_InfoFDDulOLTDActvn;

typedef struct NhuUL_OLTD_InfoFDD
{
 TknPres pres;
 NhuUL_OLTD_InfoFDDulOLTDActvn ulOLTDActvn;
} NhuUL_OLTD_InfoFDD;

typedef struct NhuUL_PhysChCapFDD_r6
{
 TknPres pres;
 NhuMaxNoDPDCH_BitsTransmitted maxNoDPDCH_BitsTransmitted;
 NhuPhysicalChannelCap_edch_r6 physicalchannelcapability_edch;
} NhuUL_PhysChCapFDD_r6;

typedef struct NhuUE_SecInfo
{
 TknPres pres;
 NhuSTART_Value start_CS;
} NhuUE_SecInfo;

typedef struct NhuUE_SecInfo2
{
 TknPres pres;
 NhuSTART_Value start_PS;
} NhuUE_SecInfo2;


typedef enum enumNhuURA_UpdCause
{
 NhuURA_UpdCausechangeOfURAEnum,
 NhuURA_UpdCauseperiodicURAUpdEnum,
 NhuURA_UpdCausedummyEnum,
 NhuURA_UpdCausespare1Enum
} EnumNhuURA_UpdCause;
typedef TknU32 NhuURA_UpdCause;


typedef TknU32 NhuUTRAN_DRX_CycleLengthCoefficient;


typedef TknU32 NhuUTRAN_DRX_CycleLengthCoefficient_r7drx_CycleLengthCoefficient;


typedef TknU32 NhuUTRAN_DRX_CycleLengthCoefficient_r7drx_CycleLengthCoefficient2;

typedef struct NhuUTRAN_DRX_CycleLengthCoefficient_r7
{
 TknPres pres;
 NhuUTRAN_DRX_CycleLengthCoefficient_r7drx_CycleLengthCoefficient drx_CycleLengthCoefficient;
 NhuUTRAN_DRX_CycleLengthCoefficient_r7drx_CycleLengthCoefficient2 drx_CycleLengthCoefficient2;
 NhuT_319 timeForDRXCycle2;
} NhuUTRAN_DRX_CycleLengthCoefficient_r7;


typedef TknU32 NhuWaitTime;


typedef enum enumNhuExpectReordering
{
 NhuExpectReorderingreorderingNotExpectedEnum,
 NhuExpectReorderingreorderingExpectedEnum
} EnumNhuExpectReordering;
typedef TknU32 NhuExpectReordering;


typedef TknU32 NhuRFC2507_Infof_MAX_PERIOD;


typedef TknU32 NhuRFC2507_Infof_MAX_TIME;


typedef TknU32 NhuRFC2507_Infomax_HEADER;


typedef TknU32 NhuRFC2507_Infotcp_SPACE;


typedef TknU32 NhuRFC2507_Infonon_TCP_SPACE;

typedef struct NhuRFC2507_Info
{
 TknPres pres;
 NhuRFC2507_Infof_MAX_PERIOD f_MAX_PERIOD;
 NhuRFC2507_Infof_MAX_TIME f_MAX_TIME;
 NhuRFC2507_Infomax_HEADER max_HEADER;
 NhuRFC2507_Infotcp_SPACE tcp_SPACE;
 NhuRFC2507_Infonon_TCP_SPACE non_TCP_SPACE;
 NhuExpectReordering expectReordering;
} NhuRFC2507_Info;

typedef struct NhuAlgorithmSpecificInfo
{
 TknU8 choice;
 union {
  NhuRFC2507_Info rfc2507_Info;
 } val;
} NhuAlgorithmSpecificInfo;


typedef TknU32 NhuROHC_Profile_r4;

typedef struct NhuROHC_ProfileLst_r4
{
 TknU16 noComp;
 NhuROHC_Profile_r4 *member;
}NhuROHC_ProfileLst_r4;


typedef enum enumNhuCID_InclusionInfo_r4
{
 NhuCID_InclusionInfo_r4pdcp_HeaderEnum,
 NhuCID_InclusionInfo_r4rfc3095_PacketFormatEnum
} EnumNhuCID_InclusionInfo_r4;
typedef TknU32 NhuCID_InclusionInfo_r4;


typedef TknU32 NhuROHC_PacketSize_r4;

typedef struct NhuROHC_PacketSizeLst_r4
{
 TknU16 noComp;
 NhuROHC_PacketSize_r4 *member;
}NhuROHC_PacketSizeLst_r4;


typedef TknU32 NhuUL_RFC3095_r4max_CID;

typedef struct NhuUL_RFC3095_r4
{
 TknPres pres;
 NhuCID_InclusionInfo_r4 dummy1;
 NhuUL_RFC3095_r4max_CID max_CID;
 NhuROHC_PacketSizeLst_r4 dummy;
} NhuUL_RFC3095_r4;


typedef TknU32 NhuDL_RFC3095_r4max_CID;


typedef TknU32 NhuDL_RFC3095_r4reverseDecompressionDepth;

typedef struct NhuDL_RFC3095_r4
{
 TknPres pres;
 NhuCID_InclusionInfo_r4 dummy;
 NhuDL_RFC3095_r4max_CID max_CID;
 NhuDL_RFC3095_r4reverseDecompressionDepth reverseDecompressionDepth;
} NhuDL_RFC3095_r4;

typedef struct NhuRFC3095_Info_r4
{
 TknPres pres;
 NhuROHC_ProfileLst_r4 rohcProfileLst;
 NhuUL_RFC3095_r4 ul_RFC3095;
 NhuDL_RFC3095_r4 dl_RFC3095;
} NhuRFC3095_Info_r4;

typedef struct NhuAlgorithmSpecificInfo_r4
{
 TknU8 choice;
 union {
  NhuRFC2507_Info rfc2507_Info;
  NhuRFC3095_Info_r4 rfc3095_Info;
 } val;
} NhuAlgorithmSpecificInfo_r4;


typedef TknU32 NhuLogChannelIdentity;


typedef TknU32 NhuMAC_ehs_QueueId;

typedef struct NhuCmnRBMappingInfo
{
 TknPres pres;
 NhuLogChannelIdentity logicalChannelIdentity;
 NhuMAC_ehs_QueueId mac_ehs_QueueId;
} NhuCmnRBMappingInfo;


typedef TknU32 NhuCOUNT_C;


typedef TknU32 NhuCOUNT_C_MSB;


typedef enum enumNhuUL_AMR_Rate
{
 NhuUL_AMR_Ratet0Enum,
 NhuUL_AMR_Ratet1Enum,
 NhuUL_AMR_Ratet2Enum,
 NhuUL_AMR_Ratet3Enum,
 NhuUL_AMR_Ratet4Enum,
 NhuUL_AMR_Ratet5Enum,
 NhuUL_AMR_Ratet6Enum,
 NhuUL_AMR_Ratet7Enum,
 NhuUL_AMR_Ratet8Enum,
 NhuUL_AMR_Ratespare7Enum,
 NhuUL_AMR_Ratespare6Enum,
 NhuUL_AMR_Ratespare5Enum,
 NhuUL_AMR_Ratespare4Enum,
 NhuUL_AMR_Ratespare3Enum,
 NhuUL_AMR_Ratespare2Enum,
 NhuUL_AMR_Ratespare1Enum
} EnumNhuUL_AMR_Rate;
typedef TknU32 NhuUL_AMR_Rate;


typedef TknU32 NhuMaxCS_Delay;

typedef struct NhuCS_HSPA_Info
{
 TknPres pres;
 NhuUL_AMR_Rate ul_AMR_Rate;
 NhuMaxCS_Delay maxCS_Delay;
} NhuCS_HSPA_Info;


typedef enum enumNhuDefaultConfigMode
{
 NhuDefaultConfigModefddEnum,
 NhuDefaultConfigModetddEnum
} EnumNhuDefaultConfigMode;
typedef TknU32 NhuDefaultConfigMode;


typedef TknU32 NhuDefaultConfigIdForCellFACH;

typedef struct NhuDefaultConfigForCellFACH
{
 TknPres pres;
 NhuDefaultConfigMode defaultConfigMode;
 NhuDefaultConfigIdForCellFACH defaultConfigIdForCellFACH;
} NhuDefaultConfigForCellFACH;


typedef TknU32 NhuDefaultConfigIdentity;


typedef TknU32 NhuDefaultConfigIdentity_r4;


typedef TknU32 NhuDefaultConfigIdentity_r5;


typedef TknU32 NhuDefaultConfigIdentity_r6;


typedef TknU32 NhuDDI;


typedef enum enumNhuReceivingWindowSize
{
 NhuReceivingWindowSizerw1Enum,
 NhuReceivingWindowSizerw8Enum,
 NhuReceivingWindowSizerw16Enum,
 NhuReceivingWindowSizerw32Enum,
 NhuReceivingWindowSizerw64Enum,
 NhuReceivingWindowSizerw128Enum,
 NhuReceivingWindowSizerw256Enum,
 NhuReceivingWindowSizerw512Enum,
 NhuReceivingWindowSizerw768Enum,
 NhuReceivingWindowSizerw1024Enum,
 NhuReceivingWindowSizerw1536Enum,
 NhuReceivingWindowSizerw2047Enum,
 NhuReceivingWindowSizerw2560Enum,
 NhuReceivingWindowSizerw3072Enum,
 NhuReceivingWindowSizerw3584Enum,
 NhuReceivingWindowSizerw4095Enum
} EnumNhuReceivingWindowSize;
typedef TknU32 NhuReceivingWindowSize;


typedef enum enumNhuTimerStatusProhibit
{
 NhuTimerStatusProhibittsp10Enum,
 NhuTimerStatusProhibittsp20Enum,
 NhuTimerStatusProhibittsp30Enum,
 NhuTimerStatusProhibittsp40Enum,
 NhuTimerStatusProhibittsp50Enum,
 NhuTimerStatusProhibittsp60Enum,
 NhuTimerStatusProhibittsp70Enum,
 NhuTimerStatusProhibittsp80Enum,
 NhuTimerStatusProhibittsp90Enum,
 NhuTimerStatusProhibittsp100Enum,
 NhuTimerStatusProhibittsp110Enum,
 NhuTimerStatusProhibittsp120Enum,
 NhuTimerStatusProhibittsp130Enum,
 NhuTimerStatusProhibittsp140Enum,
 NhuTimerStatusProhibittsp150Enum,
 NhuTimerStatusProhibittsp160Enum,
 NhuTimerStatusProhibittsp170Enum,
 NhuTimerStatusProhibittsp180Enum,
 NhuTimerStatusProhibittsp190Enum,
 NhuTimerStatusProhibittsp200Enum,
 NhuTimerStatusProhibittsp210Enum,
 NhuTimerStatusProhibittsp220Enum,
 NhuTimerStatusProhibittsp230Enum,
 NhuTimerStatusProhibittsp240Enum,
 NhuTimerStatusProhibittsp250Enum,
 NhuTimerStatusProhibittsp260Enum,
 NhuTimerStatusProhibittsp270Enum,
 NhuTimerStatusProhibittsp280Enum,
 NhuTimerStatusProhibittsp290Enum,
 NhuTimerStatusProhibittsp300Enum,
 NhuTimerStatusProhibittsp310Enum,
 NhuTimerStatusProhibittsp320Enum,
 NhuTimerStatusProhibittsp330Enum,
 NhuTimerStatusProhibittsp340Enum,
 NhuTimerStatusProhibittsp350Enum,
 NhuTimerStatusProhibittsp360Enum,
 NhuTimerStatusProhibittsp370Enum,
 NhuTimerStatusProhibittsp380Enum,
 NhuTimerStatusProhibittsp390Enum,
 NhuTimerStatusProhibittsp400Enum,
 NhuTimerStatusProhibittsp410Enum,
 NhuTimerStatusProhibittsp420Enum,
 NhuTimerStatusProhibittsp430Enum,
 NhuTimerStatusProhibittsp440Enum,
 NhuTimerStatusProhibittsp450Enum,
 NhuTimerStatusProhibittsp460Enum,
 NhuTimerStatusProhibittsp470Enum,
 NhuTimerStatusProhibittsp480Enum,
 NhuTimerStatusProhibittsp490Enum,
 NhuTimerStatusProhibittsp500Enum,
 NhuTimerStatusProhibittsp510Enum,
 NhuTimerStatusProhibittsp520Enum,
 NhuTimerStatusProhibittsp530Enum,
 NhuTimerStatusProhibittsp540Enum,
 NhuTimerStatusProhibittsp550Enum,
 NhuTimerStatusProhibittsp600Enum,
 NhuTimerStatusProhibittsp650Enum,
 NhuTimerStatusProhibittsp700Enum,
 NhuTimerStatusProhibittsp750Enum,
 NhuTimerStatusProhibittsp800Enum,
 NhuTimerStatusProhibittsp850Enum,
 NhuTimerStatusProhibittsp900Enum,
 NhuTimerStatusProhibittsp950Enum,
 NhuTimerStatusProhibittsp1000Enum
} EnumNhuTimerStatusProhibit;
typedef TknU32 NhuTimerStatusProhibit;


typedef enum enumNhuTimerEPC
{
 NhuTimerEPCte50Enum,
 NhuTimerEPCte60Enum,
 NhuTimerEPCte70Enum,
 NhuTimerEPCte80Enum,
 NhuTimerEPCte90Enum,
 NhuTimerEPCte100Enum,
 NhuTimerEPCte120Enum,
 NhuTimerEPCte140Enum,
 NhuTimerEPCte160Enum,
 NhuTimerEPCte180Enum,
 NhuTimerEPCte200Enum,
 NhuTimerEPCte300Enum,
 NhuTimerEPCte400Enum,
 NhuTimerEPCte500Enum,
 NhuTimerEPCte700Enum,
 NhuTimerEPCte900Enum
} EnumNhuTimerEPC;
typedef TknU32 NhuTimerEPC;


typedef enum enumNhuTimerStatusPeriodic
{
 NhuTimerStatusPeriodictsp100Enum,
 NhuTimerStatusPeriodictsp200Enum,
 NhuTimerStatusPeriodictsp300Enum,
 NhuTimerStatusPeriodictsp400Enum,
 NhuTimerStatusPeriodictsp500Enum,
 NhuTimerStatusPeriodictsp750Enum,
 NhuTimerStatusPeriodictsp1000Enum,
 NhuTimerStatusPeriodictsp2000Enum
} EnumNhuTimerStatusPeriodic;
typedef TknU32 NhuTimerStatusPeriodic;


typedef TknU8 NhuDL_RLC_StatusInfomissingPDU_Indicator;

typedef struct NhuDL_RLC_StatusInfo
{
 TknPres pres;
 NhuTimerStatusProhibit timerStatusProhibit;
 NhuTimerEPC dummy;
 NhuDL_RLC_StatusInfomissingPDU_Indicator missingPDU_Indicator;
 NhuTimerStatusPeriodic timerStatusPeriodic;
} NhuDL_RLC_StatusInfo;


typedef TknU8 NhuDL_AM_RLC_ModeinSequenceDlvry;

typedef struct NhuDL_AM_RLC_Mode
{
 TknPres pres;
 NhuDL_AM_RLC_ModeinSequenceDlvry inSequenceDlvry;
 NhuReceivingWindowSize receivingWindowSize;
 NhuDL_RLC_StatusInfo dl_RLC_StatusInfo;
} NhuDL_AM_RLC_Mode;


typedef TknU32 NhuOctetModeRLC_SizeInfoTyp1sizeTyp1;


typedef TknU32 NhuOctetModeRLC_SizeInfoTyp1sizeTyp2part1;


typedef TknU32 NhuOctetModeRLC_SizeInfoTyp1sizeTyp2part2;

typedef struct NhuOctetModeRLC_SizeInfoTyp1sizeTyp2
{
 TknPres pres;
 NhuOctetModeRLC_SizeInfoTyp1sizeTyp2part1 part1;
 NhuOctetModeRLC_SizeInfoTyp1sizeTyp2part2 part2;
} NhuOctetModeRLC_SizeInfoTyp1sizeTyp2;


typedef TknU32 NhuOctetModeRLC_SizeInfoTyp1sizeTyp3part1;


typedef TknU32 NhuOctetModeRLC_SizeInfoTyp1sizeTyp3part2;

typedef struct NhuOctetModeRLC_SizeInfoTyp1sizeTyp3
{
 TknPres pres;
 NhuOctetModeRLC_SizeInfoTyp1sizeTyp3part1 part1;
 NhuOctetModeRLC_SizeInfoTyp1sizeTyp3part2 part2;
} NhuOctetModeRLC_SizeInfoTyp1sizeTyp3;

typedef struct NhuOctetModeRLC_SizeInfoTyp1
{
 TknU8 choice;
 union {
  NhuOctetModeRLC_SizeInfoTyp1sizeTyp1 sizeTyp1;
  NhuOctetModeRLC_SizeInfoTyp1sizeTyp2 sizeTyp2;
  NhuOctetModeRLC_SizeInfoTyp1sizeTyp3 sizeTyp3;
 } val;
} NhuOctetModeRLC_SizeInfoTyp1;


typedef TknU8 NhuDL_AM_RLC_Mode_r5inSequenceDlvry;

typedef struct NhuDL_AM_RLC_Mode_r5
{
 TknPres pres;
 NhuOctetModeRLC_SizeInfoTyp1 dl_RLC_PDU_size;
 NhuDL_AM_RLC_Mode_r5inSequenceDlvry inSequenceDlvry;
 NhuReceivingWindowSize receivingWindowSize;
 NhuDL_RLC_StatusInfo dl_RLC_StatusInfo;
} NhuDL_AM_RLC_Mode_r5;


typedef enum enumNhuDL_AM_RLC_Mode_r7dl_RLC_PDU_sizeflexibleSize
{
 NhuDL_AM_RLC_Mode_r7dl_RLC_PDU_sizeflexibleSizesize7Enum,
 NhuDL_AM_RLC_Mode_r7dl_RLC_PDU_sizeflexibleSizesize15Enum
} EnumNhuDL_AM_RLC_Mode_r7dl_RLC_PDU_sizeflexibleSize;
typedef TknU32 NhuDL_AM_RLC_Mode_r7dl_RLC_PDU_sizeflexibleSize;

typedef struct NhuDL_AM_RLC_Mode_r7dl_RLC_PDU_size
{
 TknU8 choice;
 union {
  NhuOctetModeRLC_SizeInfoTyp1 fixedSize;
  NhuDL_AM_RLC_Mode_r7dl_RLC_PDU_sizeflexibleSize flexibleSize;
 } val;
} NhuDL_AM_RLC_Mode_r7dl_RLC_PDU_size;


typedef TknU8 NhuDL_AM_RLC_Mode_r7inSequenceDlvry;

typedef struct NhuDL_AM_RLC_Mode_r7
{
 TknPres pres;
 NhuDL_AM_RLC_Mode_r7dl_RLC_PDU_size dl_RLC_PDU_size;
 NhuDL_AM_RLC_Mode_r7inSequenceDlvry inSequenceDlvry;
 NhuReceivingWindowSize receivingWindowSize;
 NhuDL_RLC_StatusInfo dl_RLC_StatusInfo;
} NhuDL_AM_RLC_Mode_r7;


typedef TknU32 NhuPDCP_SN_Info;

typedef struct NhuRB_WithPDCP_Info
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_SN_Info pdcp_SN_Info;
} NhuRB_WithPDCP_Info;

typedef struct NhuRB_WithPDCP_InfoLst
{
 TknU16 noComp;
 NhuRB_WithPDCP_Info *member;
}NhuRB_WithPDCP_InfoLst;

typedef struct NhuDL_CounterSynchronisationInfo
{
 TknPres pres;
 NhuRB_WithPDCP_InfoLst rB_WithPDCP_InfoLst;
} NhuDL_CounterSynchronisationInfo;


typedef TknU8 NhuRB_PDCPCtxtRelocationdl_RFC3095_Ctxt_Relocation;


typedef TknU8 NhuRB_PDCPCtxtRelocationul_RFC3095_Ctxt_Relocation;

typedef struct NhuRB_PDCPCtxtRelocation
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRB_PDCPCtxtRelocationdl_RFC3095_Ctxt_Relocation dl_RFC3095_Ctxt_Relocation;
 NhuRB_PDCPCtxtRelocationul_RFC3095_Ctxt_Relocation ul_RFC3095_Ctxt_Relocation;
} NhuRB_PDCPCtxtRelocation;

typedef struct NhuRB_PDCPCtxtRelocationLst
{
 TknU16 noComp;
 NhuRB_PDCPCtxtRelocation *member;
}NhuRB_PDCPCtxtRelocationLst;

typedef struct NhuDL_CounterSynchronisationInfo_r5
{
 TknPres pres;
 NhuRB_WithPDCP_InfoLst rb_WithPDCP_InfoLst;
 NhuRB_PDCPCtxtRelocationLst rb_PDCPCtxtRelocationLst;
} NhuDL_CounterSynchronisationInfo_r5;


typedef TknU32 NhuTportChannelIdentity;

typedef struct NhuTportChannelIdentityDCHandDSCH
{
 TknPres pres;
 NhuTportChannelIdentity dch_transport_ch_id;
 NhuTportChannelIdentity dsch_transport_ch_id;
} NhuTportChannelIdentityDCHandDSCH;

typedef struct NhuDL_TportChannelTyp
{
 TknU8 choice;
 union {
  NhuTportChannelIdentity dch;
  NhuTportChannelIdentity dsch;
  NhuTportChannelIdentityDCHandDSCH dch_and_dsch;
 } val;
} NhuDL_TportChannelTyp;

typedef struct NhuDL_LogChannelMapping
{
 TknPres pres;
 NhuDL_TportChannelTyp dl_TportChannelTyp;
 NhuLogChannelIdentity logicalChannelIdentity;
} NhuDL_LogChannelMapping;


typedef TknU32 NhuMAC_d_FlowIdentity;

typedef struct NhuMAC_d_FlowIdentityDCHandHSDSCH
{
 TknPres pres;
 NhuTportChannelIdentity dch_transport_ch_id;
 NhuMAC_d_FlowIdentity hsdsch_mac_d_flow_id;
} NhuMAC_d_FlowIdentityDCHandHSDSCH;

typedef struct NhuDL_TportChannelTyp_r5
{
 TknU8 choice;
 union {
  NhuTportChannelIdentity dch;
  NhuTportChannelIdentity dsch;
  NhuTportChannelIdentityDCHandDSCH dch_and_dsch;
  NhuMAC_d_FlowIdentity hsdsch;
  NhuMAC_d_FlowIdentityDCHandHSDSCH dch_and_hsdsch;
 } val;
} NhuDL_TportChannelTyp_r5;

typedef struct NhuDL_LogChannelMapping_r5
{
 TknPres pres;
 NhuDL_TportChannelTyp_r5 dl_TportChannelTyp;
 NhuLogChannelIdentity logicalChannelIdentity;
} NhuDL_LogChannelMapping_r5;

typedef struct NhuMAC_ehs_QueueIdDCHandHSDSCH
{
 TknPres pres;
 NhuTportChannelIdentity dch_transport_ch_id;
 NhuMAC_ehs_QueueId hsdsch_mac_ehs_QueueId;
} NhuMAC_ehs_QueueIdDCHandHSDSCH;

typedef struct NhuDL_TportChannelTyp_r7hsdsch
{
 TknU8 choice;
 union {
  NhuMAC_d_FlowIdentity mac_hs;
  NhuMAC_ehs_QueueId mac_ehs;
 } val;
} NhuDL_TportChannelTyp_r7hsdsch;

typedef struct NhuDL_TportChannelTyp_r7dch_and_hsdsch
{
 TknU8 choice;
 union {
  NhuMAC_d_FlowIdentityDCHandHSDSCH mac_hs;
  NhuMAC_ehs_QueueIdDCHandHSDSCH mac_ehs;
 } val;
} NhuDL_TportChannelTyp_r7dch_and_hsdsch;

typedef struct NhuDL_TportChannelTyp_r7
{
 TknU8 choice;
 union {
  NhuTportChannelIdentity dch;
  NhuTportChannelIdentity dsch;
  NhuTportChannelIdentityDCHandDSCH dch_and_dsch;
  NhuDL_TportChannelTyp_r7hsdsch hsdsch;
  NhuDL_TportChannelTyp_r7dch_and_hsdsch dch_and_hsdsch;
 } val;
} NhuDL_TportChannelTyp_r7;

typedef struct NhuDL_LogChannelMapping_r7
{
 TknPres pres;
 NhuDL_TportChannelTyp_r7 dl_TportChannelTyp;
 NhuLogChannelIdentity logicalChannelIdentity;
} NhuDL_LogChannelMapping_r7;

typedef struct NhuDL_LogChannelMappingLst
{
 TknU16 noComp;
 NhuDL_LogChannelMapping *member;
}NhuDL_LogChannelMappingLst;

typedef struct NhuDL_LogChannelMappingLst_r5
{
 TknU16 noComp;
 NhuDL_LogChannelMapping_r5 *member;
}NhuDL_LogChannelMappingLst_r5;

typedef struct NhuDL_LogChannelMappingLst_r7
{
 TknU16 noComp;
 NhuDL_LogChannelMapping_r7 *member;
}NhuDL_LogChannelMappingLst_r7;


typedef enum enumNhuDL_Reception_Window_Size_r6
{
 NhuDL_Reception_Window_Size_r6size32Enum,
 NhuDL_Reception_Window_Size_r6size48Enum,
 NhuDL_Reception_Window_Size_r6size64Enum,
 NhuDL_Reception_Window_Size_r6size80Enum,
 NhuDL_Reception_Window_Size_r6size96Enum,
 NhuDL_Reception_Window_Size_r6size112Enum
} EnumNhuDL_Reception_Window_Size_r6;
typedef TknU32 NhuDL_Reception_Window_Size_r6;


typedef TknU8 NhuDL_TM_RLC_ModesegmentationInd;

typedef struct NhuDL_TM_RLC_Mode
{
 TknPres pres;
 NhuDL_TM_RLC_ModesegmentationInd segmentationInd;
} NhuDL_TM_RLC_Mode;

typedef struct NhuDL_RLC_Mode
{
 TknU8 choice;
 union {
  NhuDL_AM_RLC_Mode dl_AM_RLC_Mode;
  NhuDL_TM_RLC_Mode dl_TM_RLC_Mode;
 } val;
} NhuDL_RLC_Mode;


typedef enum enumNhuDL_UM_RLC_LI_size
{
 NhuDL_UM_RLC_LI_sizesize7Enum,
 NhuDL_UM_RLC_LI_sizesize15Enum
} EnumNhuDL_UM_RLC_LI_size;
typedef TknU32 NhuDL_UM_RLC_LI_size;

typedef struct NhuDL_UM_RLC_Mode_r5
{
 TknPres pres;
 NhuDL_UM_RLC_LI_size dl_UM_RLC_LI_size;
} NhuDL_UM_RLC_Mode_r5;

typedef struct NhuDL_RLC_Mode_r5
{
 TknU8 choice;
 union {
  NhuDL_AM_RLC_Mode_r5 dl_AM_RLC_Mode;
  NhuDL_UM_RLC_Mode_r5 dl_UM_RLC_Mode;
  NhuDL_TM_RLC_Mode dl_TM_RLC_Mode;
 } val;
} NhuDL_RLC_Mode_r5;

typedef struct NhuDL_UM_RLC_Mode_r6
{
 TknPres pres;
 NhuDL_UM_RLC_LI_size dl_UM_RLC_LI_size;
 NhuDL_Reception_Window_Size_r6 dl_Reception_Window_Size;
} NhuDL_UM_RLC_Mode_r6;

typedef struct NhuDL_RLC_Mode_r6
{
 TknU8 choice;
 union {
  NhuDL_AM_RLC_Mode_r5 dl_AM_RLC_Mode;
  NhuDL_UM_RLC_Mode_r6 dl_UM_RLC_Mode;
  NhuDL_TM_RLC_Mode dl_TM_RLC_Mode;
 } val;
} NhuDL_RLC_Mode_r6;

typedef struct NhuDL_RLC_Mode_r7
{
 TknU8 choice;
 union {
  NhuDL_AM_RLC_Mode_r7 dl_AM_RLC_Mode;
  NhuDL_UM_RLC_Mode_r6 dl_UM_RLC_Mode;
  NhuDL_TM_RLC_Mode dl_TM_RLC_Mode;
 } val;
} NhuDL_RLC_Mode_r7;


typedef enum enumNhuTimerMRW
{
 NhuTimerMRWte50Enum,
 NhuTimerMRWte60Enum,
 NhuTimerMRWte70Enum,
 NhuTimerMRWte80Enum,
 NhuTimerMRWte90Enum,
 NhuTimerMRWte100Enum,
 NhuTimerMRWte120Enum,
 NhuTimerMRWte140Enum,
 NhuTimerMRWte160Enum,
 NhuTimerMRWte180Enum,
 NhuTimerMRWte200Enum,
 NhuTimerMRWte300Enum,
 NhuTimerMRWte400Enum,
 NhuTimerMRWte500Enum,
 NhuTimerMRWte700Enum,
 NhuTimerMRWte900Enum
} EnumNhuTimerMRW;
typedef TknU32 NhuTimerMRW;


typedef enum enumNhuTimerDiscard
{
 NhuTimerDiscardtd0_1Enum,
 NhuTimerDiscardtd0_25Enum,
 NhuTimerDiscardtd0_5Enum,
 NhuTimerDiscardtd0_75Enum,
 NhuTimerDiscardtd1Enum,
 NhuTimerDiscardtd1_25Enum,
 NhuTimerDiscardtd1_5Enum,
 NhuTimerDiscardtd1_75Enum,
 NhuTimerDiscardtd2Enum,
 NhuTimerDiscardtd2_5Enum,
 NhuTimerDiscardtd3Enum,
 NhuTimerDiscardtd3_5Enum,
 NhuTimerDiscardtd4Enum,
 NhuTimerDiscardtd4_5Enum,
 NhuTimerDiscardtd5Enum,
 NhuTimerDiscardtd7_5Enum
} EnumNhuTimerDiscard;
typedef TknU32 NhuTimerDiscard;


typedef enum enumNhuMaxMRW
{
 NhuMaxMRWmm1Enum,
 NhuMaxMRWmm4Enum,
 NhuMaxMRWmm6Enum,
 NhuMaxMRWmm8Enum,
 NhuMaxMRWmm12Enum,
 NhuMaxMRWmm16Enum,
 NhuMaxMRWmm24Enum,
 NhuMaxMRWmm32Enum
} EnumNhuMaxMRW;
typedef TknU32 NhuMaxMRW;

typedef struct NhuExplicitDiscard
{
 TknPres pres;
 NhuTimerMRW timerMRW;
 NhuTimerDiscard timerDiscard;
 NhuMaxMRW maxMRW;
} NhuExplicitDiscard;

typedef struct NhuHeaderCompressionInfo
{
 TknPres pres;
 NhuAlgorithmSpecificInfo algorithmSpecificInfo;
} NhuHeaderCompressionInfo;

typedef struct NhuHeaderCompressionInfoLst
{
 TknU16 noComp;
 NhuHeaderCompressionInfo *member;
}NhuHeaderCompressionInfoLst;

typedef struct NhuHeaderCompressionInfo_r4
{
 TknPres pres;
 NhuAlgorithmSpecificInfo_r4 algorithmSpecificInfo;
} NhuHeaderCompressionInfo_r4;

typedef struct NhuHeaderCompressionInfoLst_r4
{
 TknU16 noComp;
 NhuHeaderCompressionInfo_r4 *member;
}NhuHeaderCompressionInfoLst_r4;


typedef enum enumNhuMaxPDCP_SN_WindowSize
{
 NhuMaxPDCP_SN_WindowSizesn255Enum,
 NhuMaxPDCP_SN_WindowSizesn65535Enum
} EnumNhuMaxPDCP_SN_WindowSize;
typedef TknU32 NhuMaxPDCP_SN_WindowSize;

typedef struct NhuLosslessSRNS_RelocSupport
{
 TknU8 choice;
 union {
  NhuMaxPDCP_SN_WindowSize supported;
 } val;
} NhuLosslessSRNS_RelocSupport;


typedef TknStrBSXL NhuMAC_d_HFN_initial_value;

typedef TknU32 NhuMAC_LogChannelPriority;


typedef enum enumNhuMaxDAT
{
 NhuMaxDATdat1Enum,
 NhuMaxDATdat2Enum,
 NhuMaxDATdat3Enum,
 NhuMaxDATdat4Enum,
 NhuMaxDATdat5Enum,
 NhuMaxDATdat6Enum,
 NhuMaxDATdat7Enum,
 NhuMaxDATdat8Enum,
 NhuMaxDATdat9Enum,
 NhuMaxDATdat10Enum,
 NhuMaxDATdat15Enum,
 NhuMaxDATdat20Enum,
 NhuMaxDATdat25Enum,
 NhuMaxDATdat30Enum,
 NhuMaxDATdat35Enum,
 NhuMaxDATdat40Enum
} EnumNhuMaxDAT;
typedef TknU32 NhuMaxDAT;

typedef struct NhuMaxDAT_ReTxs
{
 TknPres pres;
 NhuMaxDAT maxDAT;
 NhuTimerMRW timerMRW;
 NhuMaxMRW maxMRW;
} NhuMaxDAT_ReTxs;


typedef enum enumNhuMaxRST
{
 NhuMaxRSTrst1Enum,
 NhuMaxRSTrst4Enum,
 NhuMaxRSTrst6Enum,
 NhuMaxRSTrst8Enum,
 NhuMaxRSTrst12Enum,
 NhuMaxRSTrst16Enum,
 NhuMaxRSTrst24Enum,
 NhuMaxRSTrst32Enum
} EnumNhuMaxRST;
typedef TknU32 NhuMaxRST;


typedef enum enumNhuNoExplicitDiscard
{
 NhuNoExplicitDiscarddt10Enum,
 NhuNoExplicitDiscarddt20Enum,
 NhuNoExplicitDiscarddt30Enum,
 NhuNoExplicitDiscarddt40Enum,
 NhuNoExplicitDiscarddt50Enum,
 NhuNoExplicitDiscarddt60Enum,
 NhuNoExplicitDiscarddt70Enum,
 NhuNoExplicitDiscarddt80Enum,
 NhuNoExplicitDiscarddt90Enum,
 NhuNoExplicitDiscarddt100Enum
} EnumNhuNoExplicitDiscard;
typedef TknU32 NhuNoExplicitDiscard;


typedef enum enumNhuPDCP_PDU_Header
{
 NhuPDCP_PDU_HeaderpresentEnum,
 NhuPDCP_PDU_HeaderabsentEnum
} EnumNhuPDCP_PDU_Header;
typedef TknU32 NhuPDCP_PDU_Header;

typedef struct NhuPDCP_Info
{
 TknPres pres;
 NhuLosslessSRNS_RelocSupport losslessSRNS_RelocSupport;
 NhuPDCP_PDU_Header pdcp_PDU_Header;
 NhuHeaderCompressionInfoLst headerCompressionInfoLst;
} NhuPDCP_Info;

typedef struct NhuPDCP_Info_r4
{
 TknPres pres;
 NhuLosslessSRNS_RelocSupport losslessSRNS_RelocSupport;
 NhuPDCP_PDU_Header pdcp_PDU_Header;
 NhuHeaderCompressionInfoLst_r4 headerCompressionInfoLst;
} NhuPDCP_Info_r4;


typedef TknU32 NhuPDCP_InfoReconfigdummy;

typedef struct NhuPDCP_InfoReconfig
{
 TknPres pres;
 NhuPDCP_Info pdcp_Info;
 NhuPDCP_InfoReconfigdummy dummy;
} NhuPDCP_InfoReconfig;

typedef struct NhuPDCP_InfoReconfig_r4
{
 TknPres pres;
 NhuPDCP_Info_r4 pdcp_Info;
} NhuPDCP_InfoReconfig_r4;


typedef enum enumNhuPDCP_ROHC_TgtMode
{
 NhuPDCP_ROHC_TgtModeo_ModeEnum,
 NhuPDCP_ROHC_TgtModer_ModeEnum
} EnumNhuPDCP_ROHC_TgtMode;
typedef TknU32 NhuPDCP_ROHC_TgtMode;


typedef enum enumNhuPoll_PDU
{
 NhuPoll_PDUpdu1Enum,
 NhuPoll_PDUpdu2Enum,
 NhuPoll_PDUpdu4Enum,
 NhuPoll_PDUpdu8Enum,
 NhuPoll_PDUpdu16Enum,
 NhuPoll_PDUpdu32Enum,
 NhuPoll_PDUpdu64Enum,
 NhuPoll_PDUpdu128Enum
} EnumNhuPoll_PDU;
typedef TknU32 NhuPoll_PDU;


typedef enum enumNhuPoll_SDU
{
 NhuPoll_SDUsdu1Enum,
 NhuPoll_SDUsdu4Enum,
 NhuPoll_SDUsdu16Enum,
 NhuPoll_SDUsdu64Enum
} EnumNhuPoll_SDU;
typedef TknU32 NhuPoll_SDU;


typedef enum enumNhuTimerPollProhibit
{
 NhuTimerPollProhibittpp10Enum,
 NhuTimerPollProhibittpp20Enum,
 NhuTimerPollProhibittpp30Enum,
 NhuTimerPollProhibittpp40Enum,
 NhuTimerPollProhibittpp50Enum,
 NhuTimerPollProhibittpp60Enum,
 NhuTimerPollProhibittpp70Enum,
 NhuTimerPollProhibittpp80Enum,
 NhuTimerPollProhibittpp90Enum,
 NhuTimerPollProhibittpp100Enum,
 NhuTimerPollProhibittpp110Enum,
 NhuTimerPollProhibittpp120Enum,
 NhuTimerPollProhibittpp130Enum,
 NhuTimerPollProhibittpp140Enum,
 NhuTimerPollProhibittpp150Enum,
 NhuTimerPollProhibittpp160Enum,
 NhuTimerPollProhibittpp170Enum,
 NhuTimerPollProhibittpp180Enum,
 NhuTimerPollProhibittpp190Enum,
 NhuTimerPollProhibittpp200Enum,
 NhuTimerPollProhibittpp210Enum,
 NhuTimerPollProhibittpp220Enum,
 NhuTimerPollProhibittpp230Enum,
 NhuTimerPollProhibittpp240Enum,
 NhuTimerPollProhibittpp250Enum,
 NhuTimerPollProhibittpp260Enum,
 NhuTimerPollProhibittpp270Enum,
 NhuTimerPollProhibittpp280Enum,
 NhuTimerPollProhibittpp290Enum,
 NhuTimerPollProhibittpp300Enum,
 NhuTimerPollProhibittpp310Enum,
 NhuTimerPollProhibittpp320Enum,
 NhuTimerPollProhibittpp330Enum,
 NhuTimerPollProhibittpp340Enum,
 NhuTimerPollProhibittpp350Enum,
 NhuTimerPollProhibittpp360Enum,
 NhuTimerPollProhibittpp370Enum,
 NhuTimerPollProhibittpp380Enum,
 NhuTimerPollProhibittpp390Enum,
 NhuTimerPollProhibittpp400Enum,
 NhuTimerPollProhibittpp410Enum,
 NhuTimerPollProhibittpp420Enum,
 NhuTimerPollProhibittpp430Enum,
 NhuTimerPollProhibittpp440Enum,
 NhuTimerPollProhibittpp450Enum,
 NhuTimerPollProhibittpp460Enum,
 NhuTimerPollProhibittpp470Enum,
 NhuTimerPollProhibittpp480Enum,
 NhuTimerPollProhibittpp490Enum,
 NhuTimerPollProhibittpp500Enum,
 NhuTimerPollProhibittpp510Enum,
 NhuTimerPollProhibittpp520Enum,
 NhuTimerPollProhibittpp530Enum,
 NhuTimerPollProhibittpp540Enum,
 NhuTimerPollProhibittpp550Enum,
 NhuTimerPollProhibittpp600Enum,
 NhuTimerPollProhibittpp650Enum,
 NhuTimerPollProhibittpp700Enum,
 NhuTimerPollProhibittpp750Enum,
 NhuTimerPollProhibittpp800Enum,
 NhuTimerPollProhibittpp850Enum,
 NhuTimerPollProhibittpp900Enum,
 NhuTimerPollProhibittpp950Enum,
 NhuTimerPollProhibittpp1000Enum
} EnumNhuTimerPollProhibit;
typedef TknU32 NhuTimerPollProhibit;


typedef enum enumNhuTimerPoll
{
 NhuTimerPolltp10Enum,
 NhuTimerPolltp20Enum,
 NhuTimerPolltp30Enum,
 NhuTimerPolltp40Enum,
 NhuTimerPolltp50Enum,
 NhuTimerPolltp60Enum,
 NhuTimerPolltp70Enum,
 NhuTimerPolltp80Enum,
 NhuTimerPolltp90Enum,
 NhuTimerPolltp100Enum,
 NhuTimerPolltp110Enum,
 NhuTimerPolltp120Enum,
 NhuTimerPolltp130Enum,
 NhuTimerPolltp140Enum,
 NhuTimerPolltp150Enum,
 NhuTimerPolltp160Enum,
 NhuTimerPolltp170Enum,
 NhuTimerPolltp180Enum,
 NhuTimerPolltp190Enum,
 NhuTimerPolltp200Enum,
 NhuTimerPolltp210Enum,
 NhuTimerPolltp220Enum,
 NhuTimerPolltp230Enum,
 NhuTimerPolltp240Enum,
 NhuTimerPolltp250Enum,
 NhuTimerPolltp260Enum,
 NhuTimerPolltp270Enum,
 NhuTimerPolltp280Enum,
 NhuTimerPolltp290Enum,
 NhuTimerPolltp300Enum,
 NhuTimerPolltp310Enum,
 NhuTimerPolltp320Enum,
 NhuTimerPolltp330Enum,
 NhuTimerPolltp340Enum,
 NhuTimerPolltp350Enum,
 NhuTimerPolltp360Enum,
 NhuTimerPolltp370Enum,
 NhuTimerPolltp380Enum,
 NhuTimerPolltp390Enum,
 NhuTimerPolltp400Enum,
 NhuTimerPolltp410Enum,
 NhuTimerPolltp420Enum,
 NhuTimerPolltp430Enum,
 NhuTimerPolltp440Enum,
 NhuTimerPolltp450Enum,
 NhuTimerPolltp460Enum,
 NhuTimerPolltp470Enum,
 NhuTimerPolltp480Enum,
 NhuTimerPolltp490Enum,
 NhuTimerPolltp500Enum,
 NhuTimerPolltp510Enum,
 NhuTimerPolltp520Enum,
 NhuTimerPolltp530Enum,
 NhuTimerPolltp540Enum,
 NhuTimerPolltp550Enum,
 NhuTimerPolltp600Enum,
 NhuTimerPolltp650Enum,
 NhuTimerPolltp700Enum,
 NhuTimerPolltp750Enum,
 NhuTimerPolltp800Enum,
 NhuTimerPolltp850Enum,
 NhuTimerPolltp900Enum,
 NhuTimerPolltp950Enum,
 NhuTimerPolltp1000Enum
} EnumNhuTimerPoll;
typedef TknU32 NhuTimerPoll;


typedef enum enumNhuPollWindow
{
 NhuPollWindowpw50Enum,
 NhuPollWindowpw60Enum,
 NhuPollWindowpw70Enum,
 NhuPollWindowpw80Enum,
 NhuPollWindowpw85Enum,
 NhuPollWindowpw90Enum,
 NhuPollWindowpw95Enum,
 NhuPollWindowpw99Enum
} EnumNhuPollWindow;
typedef TknU32 NhuPollWindow;


typedef enum enumNhuTimerPollPeriodic
{
 NhuTimerPollPeriodictper100Enum,
 NhuTimerPollPeriodictper200Enum,
 NhuTimerPollPeriodictper300Enum,
 NhuTimerPollPeriodictper400Enum,
 NhuTimerPollPeriodictper500Enum,
 NhuTimerPollPeriodictper750Enum,
 NhuTimerPollPeriodictper1000Enum,
 NhuTimerPollPeriodictper2000Enum
} EnumNhuTimerPollPeriodic;
typedef TknU32 NhuTimerPollPeriodic;


typedef TknU8 NhuPollingInfolastTransmissionPDU_Poll;


typedef TknU8 NhuPollingInfolastReTxPDU_Poll;

typedef struct NhuPollingInfo
{
 TknPres pres;
 NhuTimerPollProhibit timerPollProhibit;
 NhuTimerPoll timerPoll;
 NhuPoll_PDU poll_PDU;
 NhuPoll_SDU poll_SDU;
 NhuPollingInfolastTransmissionPDU_Poll lastTransmissionPDU_Poll;
 NhuPollingInfolastReTxPDU_Poll lastReTxPDU_Poll;
 NhuPollWindow pollWindow;
 NhuTimerPollPeriodic timerPollPeriodic;
} NhuPollingInfo;


typedef TknU32 NhuPredefinedConfigIdentity;


typedef TknU32 NhuPredefinedConfigValueTag;

typedef struct NhuTransmissionRLC_Discard
{
 TknU8 choice;
 union {
  NhuExplicitDiscard timerBasedExplicit;
  NhuNoExplicitDiscard timerBasedNoExplicit;
  NhuMaxDAT_ReTxs maxDAT_ReTxs;
  NhuMaxDAT noDiscard;
 } val;
} NhuTransmissionRLC_Discard;


typedef enum enumNhuTransmissionWindowSize
{
 NhuTransmissionWindowSizetw1Enum,
 NhuTransmissionWindowSizetw8Enum,
 NhuTransmissionWindowSizetw16Enum,
 NhuTransmissionWindowSizetw32Enum,
 NhuTransmissionWindowSizetw64Enum,
 NhuTransmissionWindowSizetw128Enum,
 NhuTransmissionWindowSizetw256Enum,
 NhuTransmissionWindowSizetw512Enum,
 NhuTransmissionWindowSizetw768Enum,
 NhuTransmissionWindowSizetw1024Enum,
 NhuTransmissionWindowSizetw1536Enum,
 NhuTransmissionWindowSizetw2047Enum,
 NhuTransmissionWindowSizetw2560Enum,
 NhuTransmissionWindowSizetw3072Enum,
 NhuTransmissionWindowSizetw3584Enum,
 NhuTransmissionWindowSizetw4095Enum
} EnumNhuTransmissionWindowSize;
typedef TknU32 NhuTransmissionWindowSize;


typedef enum enumNhuTimerRST
{
 NhuTimerRSTtr50Enum,
 NhuTimerRSTtr100Enum,
 NhuTimerRSTtr150Enum,
 NhuTimerRSTtr200Enum,
 NhuTimerRSTtr250Enum,
 NhuTimerRSTtr300Enum,
 NhuTimerRSTtr350Enum,
 NhuTimerRSTtr400Enum,
 NhuTimerRSTtr450Enum,
 NhuTimerRSTtr500Enum,
 NhuTimerRSTtr550Enum,
 NhuTimerRSTtr600Enum,
 NhuTimerRSTtr700Enum,
 NhuTimerRSTtr800Enum,
 NhuTimerRSTtr900Enum,
 NhuTimerRSTtr1000Enum
} EnumNhuTimerRST;
typedef TknU32 NhuTimerRST;

typedef struct NhuUL_AM_RLC_Mode
{
 TknPres pres;
 NhuTransmissionRLC_Discard transmissionRLC_Discard;
 NhuTransmissionWindowSize transmissionWindowSize;
 NhuTimerRST timerRST;
 NhuMaxRST max_RST;
 NhuPollingInfo pollingInfo;
} NhuUL_AM_RLC_Mode;

typedef struct NhuUL_UM_RLC_Mode
{
 TknPres pres;
 NhuTransmissionRLC_Discard transmissionRLC_Discard;
} NhuUL_UM_RLC_Mode;


typedef TknU8 NhuUL_TM_RLC_ModesegmentationInd;

typedef struct NhuUL_TM_RLC_Mode
{
 TknPres pres;
 NhuTransmissionRLC_Discard transmissionRLC_Discard;
 NhuUL_TM_RLC_ModesegmentationInd segmentationInd;
} NhuUL_TM_RLC_Mode;

typedef struct NhuUL_RLC_Mode
{
 TknU8 choice;
 union {
  NhuUL_AM_RLC_Mode ul_AM_RLC_Mode;
  NhuUL_UM_RLC_Mode ul_UM_RLC_Mode;
  NhuUL_TM_RLC_Mode ul_TM_RLC_Mode;
 } val;
} NhuUL_RLC_Mode;

typedef struct NhuRLC_Info
{
 TknPres pres;
 NhuUL_RLC_Mode ul_RLC_Mode;
 NhuDL_RLC_Mode dl_RLC_Mode;
} NhuRLC_Info;

typedef struct NhuRLC_InfoChoice
{
 TknU8 choice;
 union {
  NhuRLC_Info rlc_Info;
  NhuRB_Identity same_as_RB;
 } val;
} NhuRLC_InfoChoice;

typedef struct NhuUL_TportChannelTyp
{
 TknU8 choice;
 union {
  NhuTportChannelIdentity dch;
  NhuTportChannelIdentity usch;
 } val;
} NhuUL_TportChannelTyp;


typedef TknU32 NhuRLC_SizeInforlc_SizeIdx;

typedef struct NhuRLC_SizeInfo
{
 TknPres pres;
 NhuRLC_SizeInforlc_SizeIdx rlc_SizeIdx;
} NhuRLC_SizeInfo;

typedef struct NhuRLC_SizeExplicitLst
{
 TknU16 noComp;
 NhuRLC_SizeInfo *member;
}NhuRLC_SizeExplicitLst;

typedef struct NhuUL_LogChannelMappingrlc_SizeLst
{
 TknU8 choice;
 union {
  NhuRLC_SizeExplicitLst explicitLst;
 } val;
} NhuUL_LogChannelMappingrlc_SizeLst;

typedef struct NhuUL_LogChannelMapping
{
 TknPres pres;
 NhuUL_TportChannelTyp ul_TportChannelTyp;
 NhuLogChannelIdentity logicalChannelIdentity;
 NhuUL_LogChannelMappingrlc_SizeLst rlc_SizeLst;
 NhuMAC_LogChannelPriority mac_LogChannelPriority;
} NhuUL_LogChannelMapping;


typedef TknU8 NhuUL_LogChannelMappingLstrlc_LogChannelMappingIndicator;

typedef struct NhuUL_LogChannelMappingLstul_LogChannelMapping
{
 TknU16 noComp;
 NhuUL_LogChannelMapping *member;
}NhuUL_LogChannelMappingLstul_LogChannelMapping;

typedef struct NhuUL_LogChannelMappingLst
{
 TknPres pres;
 NhuUL_LogChannelMappingLstrlc_LogChannelMappingIndicator rlc_LogChannelMappingIndicator;
 NhuUL_LogChannelMappingLstul_LogChannelMapping ul_LogChannelMapping;
} NhuUL_LogChannelMappingLst;

typedef struct NhuUL_LogChannelMappings
{
 TknU8 choice;
 union {
  NhuUL_LogChannelMapping oneLogChannel;
  NhuUL_LogChannelMappingLst twoLogChannels;
 } val;
} NhuUL_LogChannelMappings;

typedef struct NhuRB_MappingOption
{
 TknPres pres;
 NhuUL_LogChannelMappings ul_LogChannelMappings;
 NhuDL_LogChannelMappingLst dl_LogChannelMappingLst;
} NhuRB_MappingOption;

typedef struct NhuRB_MappingInfo
{
 TknU16 noComp;
 NhuRB_MappingOption *member;
}NhuRB_MappingInfo;

typedef struct NhuSRB_InfoSetup
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRLC_InfoChoice rlc_InfoChoice;
 NhuRB_MappingInfo rb_MappingInfo;
} NhuSRB_InfoSetup;

typedef struct NhuSRB_InfoSetupLst
{
 TknU16 noComp;
 NhuSRB_InfoSetup *member;
}NhuSRB_InfoSetupLst;

typedef struct NhuRB_InfoSetup
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_Info pdcp_Info;
 NhuRLC_InfoChoice rlc_InfoChoice;
 NhuRB_MappingInfo rb_MappingInfo;
} NhuRB_InfoSetup;

typedef struct NhuRB_InfoSetupLst
{
 TknU16 noComp;
 NhuRB_InfoSetup *member;
}NhuRB_InfoSetupLst;

typedef struct NhuPredefinedRB_Cfg
{
 TknPres pres;
 NhuRe_EstablishmentTimer re_EstablishmentTimer;
 NhuSRB_InfoSetupLst srb_InfoLst;
 NhuRB_InfoSetupLst rb_InfoLst;
} NhuPredefinedRB_Cfg;


typedef TknU32 NhuTFC_Value;

typedef struct NhuAllowedTFC_Lst
{
 TknU16 noComp;
 NhuTFC_Value *member;
}NhuAllowedTFC_Lst;

typedef struct NhuNon_allowedTFC_Lst
{
 TknU16 noComp;
 NhuTFC_Value *member;
}NhuNon_allowedTFC_Lst;


typedef enum enumNhuUL_TrCH_Typ
{
 NhuUL_TrCH_TypdchEnum,
 NhuUL_TrCH_TypuschEnum
} EnumNhuUL_TrCH_Typ;
typedef TknU32 NhuUL_TrCH_Typ;

typedef TknU32 NhuAllowedTFI_LstMember;

typedef struct NhuAllowedTFI_Lst
{
 TknU16 noComp;
 NhuAllowedTFI_LstMember *member;
}NhuAllowedTFI_Lst;

typedef struct NhuRestrictedTrChInfo
{
 TknPres pres;
 NhuUL_TrCH_Typ ul_TportChannelTyp;
 NhuTportChannelIdentity restrictedTrChIdentity;
 NhuAllowedTFI_Lst allowedTFI_Lst;
} NhuRestrictedTrChInfo;

typedef struct NhuRestrictedTrChInfoLst
{
 TknU16 noComp;
 NhuRestrictedTrChInfo *member;
}NhuRestrictedTrChInfoLst;

typedef struct NhuTFC_Subset
{
 TknU8 choice;
 union {
  NhuTFC_Value minimumAllowedTFC_Number;
  NhuAllowedTFC_Lst allowedTFC_Lst;
  NhuNon_allowedTFC_Lst non_allowedTFC_Lst;
  NhuRestrictedTrChInfoLst restrictedTrChInfoLst;
 } val;
} NhuTFC_Subset;


typedef TknU32 NhuGainFactor;


typedef TknU32 NhuReferenceTFC_ID;

typedef struct NhuSignalledGainFactorsmodeSpecificInfofdd
{
 TknPres pres;
 NhuGainFactor gainFactorBetaC;
} NhuSignalledGainFactorsmodeSpecificInfofdd;

typedef struct NhuSignalledGainFactorsmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuSignalledGainFactorsmodeSpecificInfofdd fdd;
 } val;
} NhuSignalledGainFactorsmodeSpecificInfo;

typedef struct NhuSignalledGainFactors
{
 TknPres pres;
 NhuSignalledGainFactorsmodeSpecificInfo modeSpecificInfo;
 NhuGainFactor gainFactorBetaD;
 NhuReferenceTFC_ID referenceTFC_ID;
} NhuSignalledGainFactors;

typedef struct NhuGainFactorInfo
{
 TknU8 choice;
 union {
  NhuSignalledGainFactors signalledGainFactors;
  NhuReferenceTFC_ID computedGainFactors;
 } val;
} NhuGainFactorInfo;


typedef TknS32 NhuPowerOffsetPp_m;

typedef struct NhuPowerOffsetInfo
{
 TknPres pres;
 NhuGainFactorInfo gainFactorInfo;
 NhuPowerOffsetPp_m powerOffsetPp_m;
} NhuPowerOffsetInfo;


typedef TknU32 NhuTFCS_ReconfAddctfcSizectfc2BitMemberctfc2;

typedef struct NhuTFCS_ReconfAddctfcSizectfc2BitMember
{
 TknPres pres;
 NhuTFCS_ReconfAddctfcSizectfc2BitMemberctfc2 ctfc2;
 NhuPowerOffsetInfo powerOffsetInfo;
} NhuTFCS_ReconfAddctfcSizectfc2BitMember;

typedef struct NhuTFCS_ReconfAddctfcSizectfc2Bit
{
 TknU16 noComp;
 NhuTFCS_ReconfAddctfcSizectfc2BitMember *member;
}NhuTFCS_ReconfAddctfcSizectfc2Bit;


typedef TknU32 NhuTFCS_ReconfAddctfcSizectfc4BitMemberctfc4;

typedef struct NhuTFCS_ReconfAddctfcSizectfc4BitMember
{
 TknPres pres;
 NhuTFCS_ReconfAddctfcSizectfc4BitMemberctfc4 ctfc4;
 NhuPowerOffsetInfo powerOffsetInfo;
} NhuTFCS_ReconfAddctfcSizectfc4BitMember;

typedef struct NhuTFCS_ReconfAddctfcSizectfc4Bit
{
 TknU16 noComp;
 NhuTFCS_ReconfAddctfcSizectfc4BitMember *member;
}NhuTFCS_ReconfAddctfcSizectfc4Bit;


typedef TknU32 NhuTFCS_ReconfAddctfcSizectfc6BitMemberctfc6;

typedef struct NhuTFCS_ReconfAddctfcSizectfc6BitMember
{
 TknPres pres;
 NhuTFCS_ReconfAddctfcSizectfc6BitMemberctfc6 ctfc6;
 NhuPowerOffsetInfo powerOffsetInfo;
} NhuTFCS_ReconfAddctfcSizectfc6BitMember;

typedef struct NhuTFCS_ReconfAddctfcSizectfc6Bit
{
 TknU16 noComp;
 NhuTFCS_ReconfAddctfcSizectfc6BitMember *member;
}NhuTFCS_ReconfAddctfcSizectfc6Bit;


typedef TknU32 NhuTFCS_ReconfAddctfcSizectfc8BitMemberctfc8;

typedef struct NhuTFCS_ReconfAddctfcSizectfc8BitMember
{
 TknPres pres;
 NhuTFCS_ReconfAddctfcSizectfc8BitMemberctfc8 ctfc8;
 NhuPowerOffsetInfo powerOffsetInfo;
} NhuTFCS_ReconfAddctfcSizectfc8BitMember;

typedef struct NhuTFCS_ReconfAddctfcSizectfc8Bit
{
 TknU16 noComp;
 NhuTFCS_ReconfAddctfcSizectfc8BitMember *member;
}NhuTFCS_ReconfAddctfcSizectfc8Bit;


typedef TknU32 NhuTFCS_ReconfAddctfcSizectfc12BitMemberctfc12;

typedef struct NhuTFCS_ReconfAddctfcSizectfc12BitMember
{
 TknPres pres;
 NhuTFCS_ReconfAddctfcSizectfc12BitMemberctfc12 ctfc12;
 NhuPowerOffsetInfo powerOffsetInfo;
} NhuTFCS_ReconfAddctfcSizectfc12BitMember;

typedef struct NhuTFCS_ReconfAddctfcSizectfc12Bit
{
 TknU16 noComp;
 NhuTFCS_ReconfAddctfcSizectfc12BitMember *member;
}NhuTFCS_ReconfAddctfcSizectfc12Bit;


typedef TknU32 NhuTFCS_ReconfAddctfcSizectfc16BitMemberctfc16;

typedef struct NhuTFCS_ReconfAddctfcSizectfc16BitMember
{
 TknPres pres;
 NhuTFCS_ReconfAddctfcSizectfc16BitMemberctfc16 ctfc16;
 NhuPowerOffsetInfo powerOffsetInfo;
} NhuTFCS_ReconfAddctfcSizectfc16BitMember;

typedef struct NhuTFCS_ReconfAddctfcSizectfc16Bit
{
 TknU16 noComp;
 NhuTFCS_ReconfAddctfcSizectfc16BitMember *member;
}NhuTFCS_ReconfAddctfcSizectfc16Bit;


typedef TknU32 NhuTFCS_ReconfAddctfcSizectfc24BitMemberctfc24;

typedef struct NhuTFCS_ReconfAddctfcSizectfc24BitMember
{
 TknPres pres;
 NhuTFCS_ReconfAddctfcSizectfc24BitMemberctfc24 ctfc24;
 NhuPowerOffsetInfo powerOffsetInfo;
} NhuTFCS_ReconfAddctfcSizectfc24BitMember;

typedef struct NhuTFCS_ReconfAddctfcSizectfc24Bit
{
 TknU16 noComp;
 NhuTFCS_ReconfAddctfcSizectfc24BitMember *member;
}NhuTFCS_ReconfAddctfcSizectfc24Bit;

typedef struct NhuTFCS_ReconfAddctfcSize
{
 TknU8 choice;
 union {
  NhuTFCS_ReconfAddctfcSizectfc2Bit ctfc2Bit;
  NhuTFCS_ReconfAddctfcSizectfc4Bit ctfc4Bit;
  NhuTFCS_ReconfAddctfcSizectfc6Bit ctfc6Bit;
  NhuTFCS_ReconfAddctfcSizectfc8Bit ctfc8Bit;
  NhuTFCS_ReconfAddctfcSizectfc12Bit ctfc12Bit;
  NhuTFCS_ReconfAddctfcSizectfc16Bit ctfc16Bit;
  NhuTFCS_ReconfAddctfcSizectfc24Bit ctfc24Bit;
 } val;
} NhuTFCS_ReconfAddctfcSize;

typedef struct NhuTFCS_ReconfAdd
{
 TknPres pres;
 NhuTFCS_ReconfAddctfcSize ctfcSize;
} NhuTFCS_ReconfAdd;


typedef TknU32 NhuTFCS_Removaltfci;

typedef struct NhuTFCS_Removal
{
 TknPres pres;
 NhuTFCS_Removaltfci tfci;
} NhuTFCS_Removal;

typedef struct NhuTFCS_RemovalLst
{
 TknU16 noComp;
 NhuTFCS_Removal *member;
}NhuTFCS_RemovalLst;

typedef struct NhuExplicitTFCS_Cfgreplacement
{
 TknPres pres;
 NhuTFCS_RemovalLst tfcsRemoval;
 NhuTFCS_ReconfAdd tfcsAdd;
} NhuExplicitTFCS_Cfgreplacement;

typedef struct NhuExplicitTFCS_Cfg
{
 TknU8 choice;
 union {
  NhuTFCS_ReconfAdd complete;
  NhuTFCS_ReconfAdd addition;
  NhuTFCS_RemovalLst removal;
  NhuExplicitTFCS_Cfgreplacement replacement;
 } val;
} NhuExplicitTFCS_Cfg;


typedef enum enumNhuSplitTyp
{
 NhuSplitTyphardSplitEnum,
 NhuSplitTyplogicalSplitEnum
} EnumNhuSplitTyp;
typedef TknU32 NhuSplitTyp;


typedef TknU32 NhuTFCS_InfoForDSCHctfc2bit;


typedef TknU32 NhuTFCS_InfoForDSCHctfc4bit;


typedef TknU32 NhuTFCS_InfoForDSCHctfc6bit;


typedef TknU32 NhuTFCS_InfoForDSCHctfc8bit;


typedef TknU32 NhuTFCS_InfoForDSCHctfc12bit;


typedef TknU32 NhuTFCS_InfoForDSCHctfc16bit;


typedef TknU32 NhuTFCS_InfoForDSCHctfc24bit;

typedef struct NhuTFCS_InfoForDSCH
{
 TknU8 choice;
 union {
  NhuTFCS_InfoForDSCHctfc2bit ctfc2bit;
  NhuTFCS_InfoForDSCHctfc4bit ctfc4bit;
  NhuTFCS_InfoForDSCHctfc6bit ctfc6bit;
  NhuTFCS_InfoForDSCHctfc8bit ctfc8bit;
  NhuTFCS_InfoForDSCHctfc12bit ctfc12bit;
  NhuTFCS_InfoForDSCHctfc16bit ctfc16bit;
  NhuTFCS_InfoForDSCHctfc24bit ctfc24bit;
 } val;
} NhuTFCS_InfoForDSCH;


typedef TknU32 NhuTFCI_RangemaxTFCIField2Value;

typedef struct NhuTFCI_Range
{
 TknPres pres;
 NhuTFCI_RangemaxTFCIField2Value maxTFCIField2Value;
 NhuTFCS_InfoForDSCH tfcs_InfoForDSCH;
} NhuTFCI_Range;

typedef struct NhuTFCI_RangeLst
{
 TknU16 noComp;
 NhuTFCI_Range *member;
}NhuTFCI_RangeLst;

typedef struct NhuTFCI_Field2_Info
{
 TknU8 choice;
 union {
  NhuTFCI_RangeLst tfci_Range;
  NhuExplicitTFCS_Cfg explicit_config;
 } val;
} NhuTFCI_Field2_Info;


typedef TknU32 NhuSplitTFCI_Signallingtfci_Field2_Length;

typedef struct NhuSplitTFCI_Signalling
{
 TknPres pres;
 NhuSplitTyp splitTyp;
 NhuSplitTFCI_Signallingtfci_Field2_Length tfci_Field2_Length;
 NhuExplicitTFCS_Cfg tfci_Field1_Info;
 NhuTFCI_Field2_Info tfci_Field2_Info;
} NhuSplitTFCI_Signalling;

typedef struct NhuTFCS
{
 TknU8 choice;
 union {
  NhuExplicitTFCS_Cfg normalTFCI_Signalling;
  NhuSplitTFCI_Signalling dummy;
 } val;
} NhuTFCS;


typedef TknU32 NhuTFCS_IdentityPlain;


typedef TknU8 NhuTFCS_IdentitysharedChannelIndicator;

typedef struct NhuTFCS_Identity
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuTFCS_IdentitysharedChannelIndicator sharedChannelIndicator;
} NhuTFCS_Identity;

typedef struct NhuIvdualUL_CCTrCH_Info
{
 TknPres pres;
 NhuTFCS_Identity ul_TFCS_Identity;
 NhuTFCS ul_TFCS;
 NhuTFC_Subset tfc_Subset;
} NhuIvdualUL_CCTrCH_Info;

typedef struct NhuIvdualUL_CCTrCH_InfoLst
{
 TknU16 noComp;
 NhuIvdualUL_CCTrCH_Info *member;
}NhuIvdualUL_CCTrCH_InfoLst;

typedef struct NhuUL_CmnTransChInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuTFCS ul_TFCS;
} NhuUL_CmnTransChInfomodeSpecificInfofdd;

typedef struct NhuUL_CmnTransChInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuIvdualUL_CCTrCH_InfoLst individualUL_CCTrCH_InfoLst;
} NhuUL_CmnTransChInfomodeSpecificInfotdd;

typedef struct NhuUL_CmnTransChInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_CmnTransChInfomodeSpecificInfofdd fdd;
  NhuUL_CmnTransChInfomodeSpecificInfotdd tdd;
 } val;
} NhuUL_CmnTransChInfomodeSpecificInfo;

typedef struct NhuUL_CmnTransChInfo
{
 TknPres pres;
 NhuTFC_Subset tfc_Subset;
 NhuTFCS prach_TFCS;
 NhuUL_CmnTransChInfomodeSpecificInfo modeSpecificInfo;
} NhuUL_CmnTransChInfo;


typedef TknU32 NhuBitModeRLC_SizeInfosizeTyp1;


typedef TknU32 NhuBitModeRLC_SizeInfosizeTyp2part1;


typedef TknU32 NhuBitModeRLC_SizeInfosizeTyp2part2;

typedef struct NhuBitModeRLC_SizeInfosizeTyp2
{
 TknPres pres;
 NhuBitModeRLC_SizeInfosizeTyp2part1 part1;
 NhuBitModeRLC_SizeInfosizeTyp2part2 part2;
} NhuBitModeRLC_SizeInfosizeTyp2;


typedef TknU32 NhuBitModeRLC_SizeInfosizeTyp3part1;


typedef TknU32 NhuBitModeRLC_SizeInfosizeTyp3part2;

typedef struct NhuBitModeRLC_SizeInfosizeTyp3
{
 TknPres pres;
 NhuBitModeRLC_SizeInfosizeTyp3part1 part1;
 NhuBitModeRLC_SizeInfosizeTyp3part2 part2;
} NhuBitModeRLC_SizeInfosizeTyp3;


typedef TknU32 NhuBitModeRLC_SizeInfosizeTyp4part1;


typedef TknU32 NhuBitModeRLC_SizeInfosizeTyp4part2;

typedef struct NhuBitModeRLC_SizeInfosizeTyp4
{
 TknPres pres;
 NhuBitModeRLC_SizeInfosizeTyp4part1 part1;
 NhuBitModeRLC_SizeInfosizeTyp4part2 part2;
} NhuBitModeRLC_SizeInfosizeTyp4;

typedef struct NhuBitModeRLC_SizeInfo
{
 TknU8 choice;
 union {
  NhuBitModeRLC_SizeInfosizeTyp1 sizeTyp1;
  NhuBitModeRLC_SizeInfosizeTyp2 sizeTyp2;
  NhuBitModeRLC_SizeInfosizeTyp3 sizeTyp3;
  NhuBitModeRLC_SizeInfosizeTyp4 sizeTyp4;
 } val;
} NhuBitModeRLC_SizeInfo;


typedef TknU32 NhuNumberOfTportBlockssmall;


typedef TknU32 NhuNumberOfTportBlockslarge;

typedef struct NhuNumberOfTportBlocks
{
 TknU8 choice;
 union {
  NhuNumberOfTportBlockssmall small;
  NhuNumberOfTportBlockslarge large;
 } val;
} NhuNumberOfTportBlocks;


typedef TknU32 NhuLogChannelByRBlogChOfRb;

typedef struct NhuLogChannelByRB
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuLogChannelByRBlogChOfRb logChOfRb;
} NhuLogChannelByRB;

typedef struct NhuLogChannelLstexplicitLst
{
 TknU16 noComp;
 NhuLogChannelByRB *member;
}NhuLogChannelLstexplicitLst;

typedef struct NhuLogChannelLst
{
 TknU8 choice;
 union {
  NhuLogChannelLstexplicitLst explicitLst;
 } val;
} NhuLogChannelLst;

typedef struct NhuDedicatedDynamicTF_Inforlc_Size
{
 TknU8 choice;
 union {
  NhuBitModeRLC_SizeInfo bitMode;
  NhuOctetModeRLC_SizeInfoTyp1 octetModeTyp1;
 } val;
} NhuDedicatedDynamicTF_Inforlc_Size;

typedef struct NhuDedicatedDynamicTF_InfonumberOfTbSizeLst
{
 TknU16 noComp;
 NhuNumberOfTportBlocks *member;
}NhuDedicatedDynamicTF_InfonumberOfTbSizeLst;

typedef struct NhuDedicatedDynamicTF_Info
{
 TknPres pres;
 NhuDedicatedDynamicTF_Inforlc_Size rlc_Size;
 NhuDedicatedDynamicTF_InfonumberOfTbSizeLst numberOfTbSizeLst;
 NhuLogChannelLst logicalChannelLst;
} NhuDedicatedDynamicTF_Info;

typedef struct NhuDedicatedDynamicTF_InfoLst
{
 TknU16 noComp;
 NhuDedicatedDynamicTF_Info *member;
}NhuDedicatedDynamicTF_InfoLst;


typedef enum enumNhuTransmissionTimeInterval
{
 NhuTransmissionTimeIntervaltti10Enum,
 NhuTransmissionTimeIntervaltti20Enum,
 NhuTransmissionTimeIntervaltti40Enum,
 NhuTransmissionTimeIntervaltti80Enum
} EnumNhuTransmissionTimeInterval;
typedef TknU32 NhuTransmissionTimeInterval;

typedef struct NhuNumberOfTbSizeAndTTILstMember
{
 TknPres pres;
 NhuNumberOfTportBlocks numberOfTportBlocks;
 NhuTransmissionTimeInterval transmissionTimeInterval;
} NhuNumberOfTbSizeAndTTILstMember;

typedef struct NhuNumberOfTbSizeAndTTILst
{
 TknU16 noComp;
 NhuNumberOfTbSizeAndTTILstMember *member;
}NhuNumberOfTbSizeAndTTILst;

typedef struct NhuDedicatedDynamicTF_Info_DynamicTTIrlc_Size
{
 TknU8 choice;
 union {
  NhuBitModeRLC_SizeInfo bitMode;
  NhuOctetModeRLC_SizeInfoTyp1 octetModeTyp1;
 } val;
} NhuDedicatedDynamicTF_Info_DynamicTTIrlc_Size;

typedef struct NhuDedicatedDynamicTF_Info_DynamicTTI
{
 TknPres pres;
 NhuDedicatedDynamicTF_Info_DynamicTTIrlc_Size rlc_Size;
 NhuNumberOfTbSizeAndTTILst numberOfTbSizeAndTTILst;
 NhuLogChannelLst logicalChannelLst;
} NhuDedicatedDynamicTF_Info_DynamicTTI;

typedef struct NhuDedicatedDynamicTF_InfoLst_DynamicTTI
{
 TknU16 noComp;
 NhuDedicatedDynamicTF_Info_DynamicTTI *member;
}NhuDedicatedDynamicTF_InfoLst_DynamicTTI;


typedef enum enumNhuCodingRate
{
 NhuCodingRatehalfEnum,
 NhuCodingRatethirdEnum
} EnumNhuCodingRate;
typedef TknU32 NhuCodingRate;

typedef struct NhuChannelCodingTyp
{
 TknU8 choice;
 union {
  NhuCodingRate convolutional;
 } val;
} NhuChannelCodingTyp;


typedef TknU32 NhuRateMatchingAttribute;


typedef enum enumNhuCRC_Size
{
 NhuCRC_Sizecrc0Enum,
 NhuCRC_Sizecrc8Enum,
 NhuCRC_Sizecrc12Enum,
 NhuCRC_Sizecrc16Enum,
 NhuCRC_Sizecrc24Enum
} EnumNhuCRC_Size;
typedef TknU32 NhuCRC_Size;

typedef struct NhuSemistaticTF_Info
{
 TknPres pres;
 NhuChannelCodingTyp channelCodingTyp;
 NhuRateMatchingAttribute rateMatchingAttribute;
 NhuCRC_Size crc_Size;
} NhuSemistaticTF_Info;

typedef struct NhuDedicatedTransChTFStti
{
 TknU8 choice;
 union {
  NhuDedicatedDynamicTF_InfoLst tti10;
  NhuDedicatedDynamicTF_InfoLst tti20;
  NhuDedicatedDynamicTF_InfoLst tti40;
  NhuDedicatedDynamicTF_InfoLst tti80;
  NhuDedicatedDynamicTF_InfoLst_DynamicTTI dynamic;
 } val;
} NhuDedicatedTransChTFStti;

typedef struct NhuDedicatedTransChTFS
{
 TknPres pres;
 NhuDedicatedTransChTFStti tti;
 NhuSemistaticTF_Info semistaticTF_Info;
} NhuDedicatedTransChTFS;


typedef TknU32 NhuOctetModeRLC_SizeInfoTyp2sizeTyp1;


typedef TknU32 NhuOctetModeRLC_SizeInfoTyp2sizeTyp2;


typedef TknU32 NhuOctetModeRLC_SizeInfoTyp2sizeTyp3;

typedef struct NhuOctetModeRLC_SizeInfoTyp2
{
 TknU8 choice;
 union {
  NhuOctetModeRLC_SizeInfoTyp2sizeTyp1 sizeTyp1;
  NhuOctetModeRLC_SizeInfoTyp2sizeTyp2 sizeTyp2;
  NhuOctetModeRLC_SizeInfoTyp2sizeTyp3 sizeTyp3;
 } val;
} NhuOctetModeRLC_SizeInfoTyp2;

typedef struct NhuCmnDynamicTF_Inforlc_Sizefdd
{
 TknPres pres;
 NhuOctetModeRLC_SizeInfoTyp2 octetModeRLC_SizeInfoTyp2;
} NhuCmnDynamicTF_Inforlc_Sizefdd;

typedef struct NhuCmnDynamicTF_Inforlc_SizetddcommonTDD_Choice
{
 TknU8 choice;
 union {
  NhuBitModeRLC_SizeInfo bitModeRLC_SizeInfo;
  NhuOctetModeRLC_SizeInfoTyp1 octetModeRLC_SizeInfoTyp1;
 } val;
} NhuCmnDynamicTF_Inforlc_SizetddcommonTDD_Choice;

typedef struct NhuCmnDynamicTF_Inforlc_Sizetdd
{
 TknPres pres;
 NhuCmnDynamicTF_Inforlc_SizetddcommonTDD_Choice commonTDD_Choice;
} NhuCmnDynamicTF_Inforlc_Sizetdd;

typedef struct NhuCmnDynamicTF_Inforlc_Size
{
 TknU8 choice;
 union {
  NhuCmnDynamicTF_Inforlc_Sizefdd fdd;
  NhuCmnDynamicTF_Inforlc_Sizetdd tdd;
 } val;
} NhuCmnDynamicTF_Inforlc_Size;

typedef struct NhuCmnDynamicTF_InfonumberOfTbSizeLst
{
 TknU16 noComp;
 NhuNumberOfTportBlocks *member;
}NhuCmnDynamicTF_InfonumberOfTbSizeLst;

typedef struct NhuCmnDynamicTF_Info
{
 TknPres pres;
 NhuCmnDynamicTF_Inforlc_Size rlc_Size;
 NhuCmnDynamicTF_InfonumberOfTbSizeLst numberOfTbSizeLst;
 NhuLogChannelLst logicalChannelLst;
} NhuCmnDynamicTF_Info;

typedef struct NhuCmnDynamicTF_InfoLst
{
 TknU16 noComp;
 NhuCmnDynamicTF_Info *member;
}NhuCmnDynamicTF_InfoLst;

typedef struct NhuCmnDynamicTF_Info_DynamicTTIcommonTDD_Choice
{
 TknU8 choice;
 union {
  NhuBitModeRLC_SizeInfo bitModeRLC_SizeInfo;
  NhuOctetModeRLC_SizeInfoTyp1 octetModeRLC_SizeInfoTyp1;
 } val;
} NhuCmnDynamicTF_Info_DynamicTTIcommonTDD_Choice;

typedef struct NhuCmnDynamicTF_Info_DynamicTTI
{
 TknPres pres;
 NhuCmnDynamicTF_Info_DynamicTTIcommonTDD_Choice commonTDD_Choice;
 NhuNumberOfTbSizeAndTTILst numberOfTbSizeAndTTILst;
 NhuLogChannelLst logicalChannelLst;
} NhuCmnDynamicTF_Info_DynamicTTI;

typedef struct NhuCmnDynamicTF_InfoLst_DynamicTTI
{
 TknU16 noComp;
 NhuCmnDynamicTF_Info_DynamicTTI *member;
}NhuCmnDynamicTF_InfoLst_DynamicTTI;

typedef struct NhuCmnTransChTFStti
{
 TknU8 choice;
 union {
  NhuCmnDynamicTF_InfoLst tti10;
  NhuCmnDynamicTF_InfoLst tti20;
  NhuCmnDynamicTF_InfoLst tti40;
  NhuCmnDynamicTF_InfoLst tti80;
  NhuCmnDynamicTF_InfoLst_DynamicTTI dynamic;
 } val;
} NhuCmnTransChTFStti;

typedef struct NhuCmnTransChTFS
{
 TknPres pres;
 NhuCmnTransChTFStti tti;
 NhuSemistaticTF_Info semistaticTF_Info;
} NhuCmnTransChTFS;

typedef struct NhuTportFormatSet
{
 TknU8 choice;
 union {
  NhuDedicatedTransChTFS dedicatedTransChTFS;
  NhuCmnTransChTFS commonTransChTFS;
 } val;
} NhuTportFormatSet;

typedef struct NhuUL_AddReconfTransChInfo
{
 TknPres pres;
 NhuUL_TrCH_Typ ul_TportChannelTyp;
 NhuTportChannelIdentity transportChannelIdentity;
 NhuTportFormatSet transportFormatSet;
} NhuUL_AddReconfTransChInfo;

typedef struct NhuUL_AddReconfTransChInfoLst
{
 TknU16 noComp;
 NhuUL_AddReconfTransChInfo *member;
}NhuUL_AddReconfTransChInfoLst;

typedef struct NhuIvdualDL_CCTrCH_Infotfcs_SignallingMode
{
 TknU8 choice;
 union {
  NhuTFCS explicit_config;
  NhuTFCS_Identity sameAsUL;
 } val;
} NhuIvdualDL_CCTrCH_Infotfcs_SignallingMode;

typedef struct NhuIvdualDL_CCTrCH_Info
{
 TknPres pres;
 NhuTFCS_Identity dl_TFCS_Identity;
 NhuIvdualDL_CCTrCH_Infotfcs_SignallingMode tfcs_SignallingMode;
} NhuIvdualDL_CCTrCH_Info;

typedef struct NhuIvdualDL_CCTrCH_InfoLst
{
 TknU16 noComp;
 NhuIvdualDL_CCTrCH_Info *member;
}NhuIvdualDL_CCTrCH_InfoLst;

typedef struct NhuDL_CmnTransChInfomodeSpecificInfofdddl_Params
{
 TknU8 choice;
 union {
  NhuTFCS dl_DCH_TFCS;
 } val;
} NhuDL_CmnTransChInfomodeSpecificInfofdddl_Params;

typedef struct NhuDL_CmnTransChInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuDL_CmnTransChInfomodeSpecificInfofdddl_Params dl_Params;
} NhuDL_CmnTransChInfomodeSpecificInfofdd;

typedef struct NhuDL_CmnTransChInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuIvdualDL_CCTrCH_InfoLst individualDL_CCTrCH_InfoLst;
} NhuDL_CmnTransChInfomodeSpecificInfotdd;

typedef struct NhuDL_CmnTransChInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_CmnTransChInfomodeSpecificInfofdd fdd;
  NhuDL_CmnTransChInfomodeSpecificInfotdd tdd;
 } val;
} NhuDL_CmnTransChInfomodeSpecificInfo;

typedef struct NhuDL_CmnTransChInfo
{
 TknPres pres;
 NhuTFCS sccpch_TFCS;
 NhuDL_CmnTransChInfomodeSpecificInfo modeSpecificInfo;
} NhuDL_CmnTransChInfo;


typedef enum enumNhuDL_TrCH_Typ
{
 NhuDL_TrCH_TypdchEnum,
 NhuDL_TrCH_TypdschEnum
} EnumNhuDL_TrCH_Typ;
typedef TknU32 NhuDL_TrCH_Typ;

typedef struct NhuUL_TportChannelIdentity
{
 TknPres pres;
 NhuUL_TrCH_Typ ul_TportChannelTyp;
 NhuTportChannelIdentity ul_TportChannelIdentity;
} NhuUL_TportChannelIdentity;


typedef TknS32 NhuBLER_QualityValue;

typedef struct NhuQualityTgt
{
 TknPres pres;
 NhuBLER_QualityValue bler_QualityValue;
} NhuQualityTgt;


typedef enum enumNhuMessTyp
{
 NhuMessTyptransportFormatCombinationCntrlEnum
} EnumNhuMessTyp;
typedef TknU32 NhuMessTyp;

typedef struct NhuUL_CntrlledTrChLst
{
 TknU16 noComp;
 NhuTportChannelIdentity *member;
}NhuUL_CntrlledTrChLst;

typedef struct NhuTM_SignallingInfotm_SignallingModemode2
{
 TknPres pres;
 NhuUL_CntrlledTrChLst ul_controlledTrChLst;
} NhuTM_SignallingInfotm_SignallingModemode2;

typedef struct NhuTM_SignallingInfotm_SignallingMode
{
 TknU8 choice;
 union {
  NhuTM_SignallingInfotm_SignallingModemode2 mode2;
 } val;
} NhuTM_SignallingInfotm_SignallingMode;

typedef struct NhuTM_SignallingInfo
{
 TknPres pres;
 NhuMessTyp messTyp;
 NhuTM_SignallingInfotm_SignallingMode tm_SignallingMode;
} NhuTM_SignallingInfo;

typedef struct NhuDL_AddReconfTransChInfotfs_SignallingMode
{
 TknU8 choice;
 union {
  NhuTportFormatSet explicit_config;
  NhuUL_TportChannelIdentity sameAsULTrCH;
 } val;
} NhuDL_AddReconfTransChInfotfs_SignallingMode;

typedef struct NhuDL_AddReconfTransChInfo
{
 TknPres pres;
 NhuDL_TrCH_Typ dl_TportChannelTyp;
 NhuTportChannelIdentity dl_transportChannelIdentity;
 NhuDL_AddReconfTransChInfotfs_SignallingMode tfs_SignallingMode;
 NhuQualityTgt dch_QualityTgt;
 NhuTM_SignallingInfo dummy;
} NhuDL_AddReconfTransChInfo;

typedef struct NhuDL_AddReconfTransChInfoLst
{
 TknU16 noComp;
 NhuDL_AddReconfTransChInfo *member;
}NhuDL_AddReconfTransChInfoLst;

typedef struct NhuPreDefTransChCfg
{
 TknPres pres;
 NhuUL_CmnTransChInfo ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst ul_AddReconfTrChInfoLst;
 NhuDL_CmnTransChInfo dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst dl_TrChInfoLst;
} NhuPreDefTransChCfg;


typedef TknS32 NhuConstantValueTdd;

typedef struct NhuUL_DPCH_PowerCntrlInfoPredeffdd
{
 TknPres pres;
 NhuPowerCntrlAlgorithm powerCntrlAlgorithm;
} NhuUL_DPCH_PowerCntrlInfoPredeffdd;

typedef struct NhuUL_DPCH_PowerCntrlInfoPredeftdd
{
 TknPres pres;
 NhuConstantValueTdd dpch_ConstantValue;
} NhuUL_DPCH_PowerCntrlInfoPredeftdd;

typedef struct NhuUL_DPCH_PowerCntrlInfoPredef
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfoPredeffdd fdd;
  NhuUL_DPCH_PowerCntrlInfoPredeftdd tdd;
 } val;
} NhuUL_DPCH_PowerCntrlInfoPredef;


typedef enum enumNhuPuncturingLimit
{
 NhuPuncturingLimitpl0_40Enum,
 NhuPuncturingLimitpl0_44Enum,
 NhuPuncturingLimitpl0_48Enum,
 NhuPuncturingLimitpl0_52Enum,
 NhuPuncturingLimitpl0_56Enum,
 NhuPuncturingLimitpl0_60Enum,
 NhuPuncturingLimitpl0_64Enum,
 NhuPuncturingLimitpl0_68Enum,
 NhuPuncturingLimitpl0_72Enum,
 NhuPuncturingLimitpl0_76Enum,
 NhuPuncturingLimitpl0_80Enum,
 NhuPuncturingLimitpl0_84Enum,
 NhuPuncturingLimitpl0_88Enum,
 NhuPuncturingLimitpl0_92Enum,
 NhuPuncturingLimitpl0_96Enum,
 NhuPuncturingLimitpl1Enum
} EnumNhuPuncturingLimit;
typedef TknU32 NhuPuncturingLimit;


typedef enum enumNhuSecondInterleavingMode
{
 NhuSecondInterleavingModeframeRelatedEnum,
 NhuSecondInterleavingModetimeslotRelatedEnum
} EnumNhuSecondInterleavingMode;
typedef TknU32 NhuSecondInterleavingMode;


typedef enum enumNhuTFCI_Coding
{
 NhuTFCI_Codingtfci_bits_4Enum,
 NhuTFCI_Codingtfci_bits_8Enum,
 NhuTFCI_Codingtfci_bits_16Enum,
 NhuTFCI_Codingtfci_bits_32Enum
} EnumNhuTFCI_Coding;
typedef TknU32 NhuTFCI_Coding;


typedef TknU32 NhuRepetitionPeriodAndLengthrepetitionPeriod2;


typedef TknU32 NhuRepetitionPeriodAndLengthrepetitionPeriod4;


typedef TknU32 NhuRepetitionPeriodAndLengthrepetitionPeriod8;


typedef TknU32 NhuRepetitionPeriodAndLengthrepetitionPeriod16;


typedef TknU32 NhuRepetitionPeriodAndLengthrepetitionPeriod32;


typedef TknU32 NhuRepetitionPeriodAndLengthrepetitionPeriod64;

typedef struct NhuRepetitionPeriodAndLength
{
 TknU8 choice;
 union {
  NhuRepetitionPeriodAndLengthrepetitionPeriod2 repetitionPeriod2;
  NhuRepetitionPeriodAndLengthrepetitionPeriod4 repetitionPeriod4;
  NhuRepetitionPeriodAndLengthrepetitionPeriod8 repetitionPeriod8;
  NhuRepetitionPeriodAndLengthrepetitionPeriod16 repetitionPeriod16;
  NhuRepetitionPeriodAndLengthrepetitionPeriod32 repetitionPeriod32;
  NhuRepetitionPeriodAndLengthrepetitionPeriod64 repetitionPeriod64;
 } val;
} NhuRepetitionPeriodAndLength;

typedef struct NhuCmnTimeslotInfo
{
 TknPres pres;
 NhuSecondInterleavingMode secondInterleavingMode;
 NhuTFCI_Coding tfci_Coding;
 NhuPuncturingLimit puncturingLimit;
 NhuRepetitionPeriodAndLength repetitionPeriodAndLength;
} NhuCmnTimeslotInfo;


typedef TknU8 NhuUL_DPCH_InfoPredefmodeSpecificInfofddtfci_Existence;

typedef struct NhuUL_DPCH_InfoPredefmodeSpecificInfofdd
{
 TknPres pres;
 NhuUL_DPCH_InfoPredefmodeSpecificInfofddtfci_Existence tfci_Existence;
 NhuPuncturingLimit puncturingLimit;
} NhuUL_DPCH_InfoPredefmodeSpecificInfofdd;

typedef struct NhuUL_DPCH_InfoPredefmodeSpecificInfotdd
{
 TknPres pres;
 NhuCmnTimeslotInfo commonTimeslotInfo;
} NhuUL_DPCH_InfoPredefmodeSpecificInfotdd;

typedef struct NhuUL_DPCH_InfoPredefmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_DPCH_InfoPredefmodeSpecificInfofdd fdd;
  NhuUL_DPCH_InfoPredefmodeSpecificInfotdd tdd;
 } val;
} NhuUL_DPCH_InfoPredefmodeSpecificInfo;

typedef struct NhuUL_DPCH_InfoPredef
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfoPredef ul_DPCH_PowerCntrlInfo;
 NhuUL_DPCH_InfoPredefmodeSpecificInfo modeSpecificInfo;
} NhuUL_DPCH_InfoPredef;


typedef enum enumNhuPilotBits128
{
 NhuPilotBits128pb4Enum,
 NhuPilotBits128pb8Enum
} EnumNhuPilotBits128;
typedef TknU32 NhuPilotBits128;


typedef enum enumNhuPilotBits256
{
 NhuPilotBits256pb2Enum,
 NhuPilotBits256pb4Enum,
 NhuPilotBits256pb8Enum
} EnumNhuPilotBits256;
typedef TknU32 NhuPilotBits256;

typedef struct NhuSF512_AndPilot
{
 TknU8 choice;
 union {
  NhuPilotBits128 sfd128;
  NhuPilotBits256 sfd256;
 } val;
} NhuSF512_AndPilot;


typedef enum enumNhuPositionFixedOrFlexible
{
 NhuPositionFixedOrFlexiblefixedEnum,
 NhuPositionFixedOrFlexibleflexibleEnum
} EnumNhuPositionFixedOrFlexible;
typedef TknU32 NhuPositionFixedOrFlexible;


typedef TknU8 NhuDL_DPCH_InfoCmnPredefmodeSpecificInfofddtfci_Existence;

typedef struct NhuDL_DPCH_InfoCmnPredefmodeSpecificInfofdd
{
 TknPres pres;
 NhuSF512_AndPilot spreadingFactorAndPilot;
 NhuPositionFixedOrFlexible positionFixedOrFlexible;
 NhuDL_DPCH_InfoCmnPredefmodeSpecificInfofddtfci_Existence tfci_Existence;
} NhuDL_DPCH_InfoCmnPredefmodeSpecificInfofdd;

typedef struct NhuDL_DPCH_InfoCmnPredefmodeSpecificInfotdd
{
 TknPres pres;
 NhuCmnTimeslotInfo commonTimeslotInfo;
} NhuDL_DPCH_InfoCmnPredefmodeSpecificInfotdd;

typedef struct NhuDL_DPCH_InfoCmnPredefmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmnPredefmodeSpecificInfofdd fdd;
  NhuDL_DPCH_InfoCmnPredefmodeSpecificInfotdd tdd;
 } val;
} NhuDL_DPCH_InfoCmnPredefmodeSpecificInfo;

typedef struct NhuDL_DPCH_InfoCmnPredef
{
 TknPres pres;
 NhuDL_DPCH_InfoCmnPredefmodeSpecificInfo modeSpecificInfo;
} NhuDL_DPCH_InfoCmnPredef;

typedef struct NhuDL_CmnInfoPredef
{
 TknPres pres;
 NhuDL_DPCH_InfoCmnPredef dl_DPCH_InfoCmn;
} NhuDL_CmnInfoPredef;

typedef struct NhuPreDefPhyChCfg
{
 TknPres pres;
 NhuUL_DPCH_InfoPredef ul_DPCH_InfoPredef;
 NhuDL_CmnInfoPredef dl_CmnInfoPredef;
} NhuPreDefPhyChCfg;

typedef struct NhuPreDefRadioCfg
{
 TknPres pres;
 NhuPredefinedRB_Cfg predefinedRB_Cfg;
 NhuPreDefTransChCfg preDefTransChCfg;
 NhuPreDefPhyChCfg preDefPhyChCfg;
} NhuPreDefRadioCfg;


typedef enum enumNhuNumberOfTPC_Bits
{
 NhuNumberOfTPC_Bitstpc4Enum
} EnumNhuNumberOfTPC_Bits;
typedef TknU32 NhuNumberOfTPC_Bits;

typedef struct NhuUL_DPCH_InfoPredef_v770extmodeSpecificInfofdd
{
 TknPres pres;
 NhuNumberOfTPC_Bits numberOfTPC_Bits;
} NhuUL_DPCH_InfoPredef_v770extmodeSpecificInfofdd;

typedef struct NhuUL_DPCH_InfoPredef_v770extmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_DPCH_InfoPredef_v770extmodeSpecificInfofdd fdd;
 } val;
} NhuUL_DPCH_InfoPredef_v770extmodeSpecificInfo;

typedef struct NhuUL_DPCH_InfoPredef_v770ext
{
 TknPres pres;
 NhuUL_DPCH_InfoPredef_v770extmodeSpecificInfo modeSpecificInfo;
} NhuUL_DPCH_InfoPredef_v770ext;

typedef struct NhuPreDefPhyChCfg_v770ext
{
 TknPres pres;
 NhuUL_DPCH_InfoPredef_v770ext ul_DPCH_InfoPredef;
} NhuPreDefPhyChCfg_v770ext;

typedef struct NhuPreDefRadioCfg_v770ext
{
 TknPres pres;
 NhuPreDefPhyChCfg_v770ext preDefPhyChCfg;
} NhuPreDefRadioCfg_v770ext;


typedef enum enumNhuMAC_hs_WindowSize_r9
{
 NhuMAC_hs_WindowSize_r9mws4Enum,
 NhuMAC_hs_WindowSize_r9mws6Enum,
 NhuMAC_hs_WindowSize_r9mws8Enum,
 NhuMAC_hs_WindowSize_r9mws12Enum,
 NhuMAC_hs_WindowSize_r9mws16Enum,
 NhuMAC_hs_WindowSize_r9mws24Enum,
 NhuMAC_hs_WindowSize_r9mws32Enum,
 NhuMAC_hs_WindowSize_r9mw64Enum,
 NhuMAC_hs_WindowSize_r9mw128Enum
} EnumNhuMAC_hs_WindowSize_r9;
typedef TknU32 NhuMAC_hs_WindowSize_r9;

typedef struct NhuPreDefRadioCfg_v920ext
{
 TknPres pres;
 NhuMAC_hs_WindowSize_r9 mac_ehsWindowSize;
} NhuPreDefRadioCfg_v920ext;

typedef struct NhuPredefinedConfigStatusInfoother
{
 TknU8 choice;
 union {
  NhuPredefinedConfigValueTag storedWithDifferentValueTag;
 } val;
} NhuPredefinedConfigStatusInfoother;

typedef struct NhuPredefinedConfigStatusInfo
{
 TknU8 choice;
 union {
  NhuPredefinedConfigStatusInfoother other;
 } val;
} NhuPredefinedConfigStatusInfo;

typedef struct NhuPredefinedConfigStatusLst
{
 TknU16 noComp;
 NhuPredefinedConfigStatusInfo *member;
}NhuPredefinedConfigStatusLst;

typedef struct NhuPredefinedConfigValueTagLst
{
 TknU16 noComp;
 NhuPredefinedConfigValueTag *member;
}NhuPredefinedConfigValueTagLst;


typedef TknU32 NhuPredefinedConfigSetWithDifferentValueTagstartPosition;

typedef struct NhuPredefinedConfigSetWithDifferentValueTag
{
 TknPres pres;
 NhuPredefinedConfigSetWithDifferentValueTagstartPosition startPosition;
 NhuPredefinedConfigValueTagLst valueTagLst;
} NhuPredefinedConfigSetWithDifferentValueTag;

typedef struct NhuPredefinedConfigSetsWithDifferentValueTag
{
 TknU16 noComp;
 NhuPredefinedConfigSetWithDifferentValueTag *member;
}NhuPredefinedConfigSetsWithDifferentValueTag;

typedef struct NhuPredefinedConfigStatusLstVarSz
{
 TknU16 noComp;
 NhuPredefinedConfigStatusInfo *member;
}NhuPredefinedConfigStatusLstVarSz;

typedef struct NhuPredefinedConfigStatusLstComp
{
 TknPres pres;
 NhuPredefinedConfigSetsWithDifferentValueTag setsWithDifferentValueTag;
 NhuPredefinedConfigStatusLstVarSz otherEntries;
} NhuPredefinedConfigStatusLstComp;

typedef struct NhuRAB_Info
{
 TknPres pres;
 NhuRAB_Identity rab_Identity;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuNAS_Synchronisation_Indicator nas_Synchronisation_Indicator;
 NhuRe_EstablishmentTimer re_EstablishmentTimer;
} NhuRAB_Info;


typedef TknStrOSXL NhuMBMS_SessionIdentity;
typedef struct NhuRAB_Info_r6_ext
{
 TknPres pres;
 NhuMBMS_SessionIdentity mbms_SessionIdentity;
} NhuRAB_Info_r6_ext;


typedef TknStrOSXL NhuRAB_Info_v6b0extmbms_ServiceIdentity;
typedef struct NhuRAB_Info_v6b0ext
{
 TknPres pres;
 NhuRAB_Info_v6b0extmbms_ServiceIdentity mbms_ServiceIdentity;
} NhuRAB_Info_v6b0ext;

typedef struct NhuRAB_Info_r6
{
 TknPres pres;
 NhuRAB_Identity rab_Identity;
 NhuMBMS_SessionIdentity mbms_SessionIdentity;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuNAS_Synchronisation_Indicator nas_Synchronisation_Indicator;
 NhuRe_EstablishmentTimer re_EstablishmentTimer;
} NhuRAB_Info_r6;


typedef TknStrOSXL NhuRAB_Info_r7mbms_ServiceIdentity;
typedef struct NhuRAB_Info_r7
{
 TknPres pres;
 NhuRAB_Identity rab_Identity;
 NhuMBMS_SessionIdentity mbms_SessionIdentity;
 NhuRAB_Info_r7mbms_ServiceIdentity mbms_ServiceIdentity;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuNAS_Synchronisation_Indicator nas_Synchronisation_Indicator;
 NhuRe_EstablishmentTimer re_EstablishmentTimer;
} NhuRAB_Info_r7;

typedef struct NhuRAB_InfoLst
{
 TknU16 noComp;
 NhuRAB_Info *member;
}NhuRAB_InfoLst;

typedef struct NhuRAB_InfoLst_r6
{
 TknU16 noComp;
 NhuRAB_Info_r6 *member;
}NhuRAB_InfoLst_r6;

typedef struct NhuRAB_InfoReconfig
{
 TknPres pres;
 NhuRAB_Identity rab_Identity;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuNAS_Synchronisation_Indicator nas_Synchronisation_Indicator;
} NhuRAB_InfoReconfig;

typedef struct NhuRAB_InfoReconfigLst
{
 TknU16 noComp;
 NhuRAB_InfoReconfig *member;
}NhuRAB_InfoReconfigLst;

typedef struct NhuRAB_InfoReconfig_r8
{
 TknPres pres;
 NhuRAB_Identity rab_Identity;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuNAS_Synchronisation_Indicator nas_Synchronisation_Indicator;
 NhuCS_HSPA_Info cs_HSPA_Info;
} NhuRAB_InfoReconfig_r8;

typedef struct NhuRAB_InfoReconfigLst_r8
{
 TknU16 noComp;
 NhuRAB_InfoReconfig_r8 *member;
}NhuRAB_InfoReconfigLst_r8;

typedef struct NhuRAB_Info_Post
{
 TknPres pres;
 NhuRAB_Identity rab_Identity;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuNAS_Synchronisation_Indicator nas_Synchronisation_Indicator;
} NhuRAB_Info_Post;


typedef TknStrOSXL NhuRAB_InfoMBMSPtpmbms_ServiceIdentity;
typedef struct NhuRAB_InfoMBMSPtp
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRAB_InfoMBMSPtpmbms_ServiceIdentity mbms_ServiceIdentity;
 NhuMBMS_SessionIdentity mbms_SessionIdentity;
} NhuRAB_InfoMBMSPtp;

typedef struct NhuRAB_InfoMBMSPtpLst
{
 TknU16 noComp;
 NhuRAB_InfoMBMSPtp *member;
}NhuRAB_InfoMBMSPtpLst;

typedef struct NhuRAB_InfoSetup
{
 TknPres pres;
 NhuRAB_Info rab_Info;
 NhuRB_InfoSetupLst rb_InfoSetupLst;
} NhuRAB_InfoSetup;

typedef struct NhuRB_InfoSetup_r4
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_Info_r4 pdcp_Info;
 NhuRLC_InfoChoice rlc_InfoChoice;
 NhuRB_MappingInfo rb_MappingInfo;
} NhuRB_InfoSetup_r4;

typedef struct NhuRB_InfoSetupLst_r4
{
 TknU16 noComp;
 NhuRB_InfoSetup_r4 *member;
}NhuRB_InfoSetupLst_r4;

typedef struct NhuRAB_InfoSetup_r4
{
 TknPres pres;
 NhuRAB_Info rab_Info;
 NhuRB_InfoSetupLst_r4 rb_InfoSetupLst;
} NhuRAB_InfoSetup_r4;


typedef TknU8 NhuRLC_Info_r5rlc_OneSidedReEst;

typedef struct NhuRLC_Info_r5
{
 TknPres pres;
 NhuUL_RLC_Mode ul_RLC_Mode;
 NhuDL_RLC_Mode_r5 dl_RLC_Mode;
 NhuRLC_Info_r5rlc_OneSidedReEst rlc_OneSidedReEst;
} NhuRLC_Info_r5;

typedef struct NhuRLC_InfoChoice_r5
{
 TknU8 choice;
 union {
  NhuRLC_Info_r5 rlc_Info;
  NhuRB_Identity same_as_RB;
 } val;
} NhuRLC_InfoChoice_r5;

typedef struct NhuRB_MappingOption_r5
{
 TknPres pres;
 NhuUL_LogChannelMappings ul_LogChannelMappings;
 NhuDL_LogChannelMappingLst_r5 dl_LogChannelMappingLst;
} NhuRB_MappingOption_r5;

typedef struct NhuRB_MappingInfo_r5
{
 TknU16 noComp;
 NhuRB_MappingOption_r5 *member;
}NhuRB_MappingInfo_r5;

typedef struct NhuRB_InfoSetup_r5
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_Info_r4 pdcp_Info;
 NhuRLC_InfoChoice_r5 rlc_InfoChoice;
 NhuRB_MappingInfo_r5 rb_MappingInfo;
} NhuRB_InfoSetup_r5;

typedef struct NhuRB_InfoSetupLst_r5
{
 TknU16 noComp;
 NhuRB_InfoSetup_r5 *member;
}NhuRB_InfoSetupLst_r5;

typedef struct NhuRAB_InfoSetup_r5
{
 TknPres pres;
 NhuRAB_Info rab_Info;
 NhuRB_InfoSetupLst_r5 rb_InfoSetupLst;
} NhuRAB_InfoSetup_r5;

typedef struct NhuRAB_InfoSetup_r6_ext
{
 TknPres pres;
 NhuRAB_Info_r6_ext rab_Info_r6_ext;
} NhuRAB_InfoSetup_r6_ext;


typedef TknU8 NhuRLC_Info_r6rlc_OneSidedReEst;


typedef enum enumNhuRLC_Info_r6altE_bitInterpretation
{
 NhuRLC_Info_r6altE_bitInterpretationtrueEnum
} EnumNhuRLC_Info_r6altE_bitInterpretation;
typedef TknU32 NhuRLC_Info_r6altE_bitInterpretation;

typedef struct NhuRLC_Info_r6
{
 TknPres pres;
 NhuUL_RLC_Mode ul_RLC_Mode;
 NhuDL_RLC_Mode_r6 dl_RLC_Mode;
 NhuRLC_Info_r6rlc_OneSidedReEst rlc_OneSidedReEst;
 NhuRLC_Info_r6altE_bitInterpretation altE_bitInterpretation;
} NhuRLC_Info_r6;

typedef struct NhuRLC_InfoChoice_r6
{
 TknU8 choice;
 union {
  NhuRLC_Info_r6 rlc_Info;
  NhuRB_Identity same_as_RB;
 } val;
} NhuRLC_InfoChoice_r6;


typedef TknU32 NhuE_DCH_MAC_d_FlowIdentity;


typedef NhuOctetModeRLC_SizeInfoTyp1 NhuRLC_PDU_Size;
typedef struct NhuRLC_PDU_SizeLst
{
 TknU16 noComp;
 NhuRLC_PDU_Size *member;
}NhuRLC_PDU_SizeLst;

typedef struct NhuUL_LogChannelMapping_r6ul_TrCH_Typdch_rach_uschrlc_SizeLst
{
 TknU8 choice;
 union {
  NhuRLC_SizeExplicitLst explicitLst;
 } val;
} NhuUL_LogChannelMapping_r6ul_TrCH_Typdch_rach_uschrlc_SizeLst;

typedef struct NhuUL_LogChannelMapping_r6ul_TrCH_Typdch_rach_usch
{
 TknPres pres;
 NhuUL_TportChannelTyp ul_TportChannelTyp;
 NhuLogChannelIdentity logicalChannelIdentity;
 NhuUL_LogChannelMapping_r6ul_TrCH_Typdch_rach_uschrlc_SizeLst rlc_SizeLst;
} NhuUL_LogChannelMapping_r6ul_TrCH_Typdch_rach_usch;


typedef TknU8 NhuUL_LogChannelMapping_r6ul_TrCH_Type_dchincludeInSchedulingInfo;

typedef struct NhuUL_LogChannelMapping_r6ul_TrCH_Type_dch
{
 TknPres pres;
 NhuLogChannelIdentity logicalChannelIdentity;
 NhuE_DCH_MAC_d_FlowIdentity e_DCH_MAC_d_FlowIdentity;
 NhuDDI ddi;
 NhuRLC_PDU_SizeLst rlc_PDU_SizeLst;
 NhuUL_LogChannelMapping_r6ul_TrCH_Type_dchincludeInSchedulingInfo includeInSchedulingInfo;
} NhuUL_LogChannelMapping_r6ul_TrCH_Type_dch;

typedef struct NhuUL_LogChannelMapping_r6ul_TrCH_Typ
{
 TknU8 choice;
 union {
  NhuUL_LogChannelMapping_r6ul_TrCH_Typdch_rach_usch dch_rach_usch;
  NhuUL_LogChannelMapping_r6ul_TrCH_Type_dch e_dch;
 } val;
} NhuUL_LogChannelMapping_r6ul_TrCH_Typ;

typedef struct NhuUL_LogChannelMapping_r6
{
 TknPres pres;
 NhuUL_LogChannelMapping_r6ul_TrCH_Typ ul_TrCH_Typ;
 NhuMAC_LogChannelPriority mac_LogChannelPriority;
} NhuUL_LogChannelMapping_r6;


typedef TknU8 NhuUL_LogChannelMappingLst_r6rlc_LogChannelMappingIndicator;

typedef struct NhuUL_LogChannelMappingLst_r6ul_LogChannelMapping
{
 TknU16 noComp;
 NhuUL_LogChannelMapping_r6 *member;
}NhuUL_LogChannelMappingLst_r6ul_LogChannelMapping;

typedef struct NhuUL_LogChannelMappingLst_r6
{
 TknPres pres;
 NhuUL_LogChannelMappingLst_r6rlc_LogChannelMappingIndicator rlc_LogChannelMappingIndicator;
 NhuUL_LogChannelMappingLst_r6ul_LogChannelMapping ul_LogChannelMapping;
} NhuUL_LogChannelMappingLst_r6;

typedef struct NhuUL_LogChannelMappings_r6
{
 TknU8 choice;
 union {
  NhuUL_LogChannelMapping_r6 oneLogChannel;
  NhuUL_LogChannelMappingLst_r6 twoLogChannels;
 } val;
} NhuUL_LogChannelMappings_r6;

typedef struct NhuRB_MappingOption_r6
{
 TknPres pres;
 NhuUL_LogChannelMappings_r6 ul_LogChannelMappings;
 NhuDL_LogChannelMappingLst_r5 dl_LogChannelMappingLst;
} NhuRB_MappingOption_r6;

typedef struct NhuRB_MappingInfo_r6
{
 TknU16 noComp;
 NhuRB_MappingOption_r6 *member;
}NhuRB_MappingInfo_r6;

typedef struct NhuRB_InfoSetup_r6
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_Info_r4 pdcp_Info;
 NhuRLC_InfoChoice_r6 rlc_InfoChoice;
 NhuRB_MappingInfo_r6 rb_MappingInfo;
} NhuRB_InfoSetup_r6;

typedef struct NhuRB_InfoSetupLst_r6
{
 TknU16 noComp;
 NhuRB_InfoSetup_r6 *member;
}NhuRB_InfoSetupLst_r6;

typedef struct NhuRAB_InfoSetup_r6
{
 TknPres pres;
 NhuRAB_Info_r6 rab_Info;
 NhuRB_InfoSetupLst_r6 rb_InfoSetupLst;
} NhuRAB_InfoSetup_r6;

typedef struct NhuRAB_InfoSetup_v6b0ext
{
 TknPres pres;
 NhuRAB_Info_v6b0ext rab_Info_v6b0ext;
} NhuRAB_InfoSetup_v6b0ext;


typedef TknU8 NhuRLC_Info_r7rlc_OneSidedReEst;


typedef enum enumNhuRLC_Info_r7altE_bitInterpretation
{
 NhuRLC_Info_r7altE_bitInterpretationtrueEnum
} EnumNhuRLC_Info_r7altE_bitInterpretation;
typedef TknU32 NhuRLC_Info_r7altE_bitInterpretation;


typedef enum enumNhuRLC_Info_r7useSpecialValueOfHEField
{
 NhuRLC_Info_r7useSpecialValueOfHEFieldtrueEnum
} EnumNhuRLC_Info_r7useSpecialValueOfHEField;
typedef TknU32 NhuRLC_Info_r7useSpecialValueOfHEField;

typedef struct NhuRLC_Info_r7
{
 TknPres pres;
 NhuUL_RLC_Mode ul_RLC_Mode;
 NhuDL_RLC_Mode_r7 dl_RLC_Mode;
 NhuRLC_Info_r7rlc_OneSidedReEst rlc_OneSidedReEst;
 NhuRLC_Info_r7altE_bitInterpretation altE_bitInterpretation;
 NhuRLC_Info_r7useSpecialValueOfHEField useSpecialValueOfHEField;
} NhuRLC_Info_r7;

typedef struct NhuRLC_InfoChoice_r7
{
 TknU8 choice;
 union {
  NhuRLC_Info_r7 rlc_Info;
  NhuRB_Identity same_as_RB;
 } val;
} NhuRLC_InfoChoice_r7;

typedef struct NhuRB_MappingOption_r7
{
 TknPres pres;
 NhuUL_LogChannelMappings_r6 ul_LogChannelMappings;
 NhuDL_LogChannelMappingLst_r7 dl_LogChannelMappingLst;
} NhuRB_MappingOption_r7;

typedef struct NhuRB_MappingInfo_r7
{
 TknU16 noComp;
 NhuRB_MappingOption_r7 *member;
}NhuRB_MappingInfo_r7;

typedef struct NhuRB_InfoSetup_r7
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_Info_r4 pdcp_Info;
 NhuRLC_InfoChoice_r7 rlc_InfoChoice;
 NhuRB_MappingInfo_r7 rb_MappingInfo;
} NhuRB_InfoSetup_r7;

typedef struct NhuRB_InfoSetupLst_r7
{
 TknU16 noComp;
 NhuRB_InfoSetup_r7 *member;
}NhuRB_InfoSetupLst_r7;

typedef struct NhuRAB_InfoSetup_r7
{
 TknPres pres;
 NhuRAB_Info_r7 rab_Info;
 NhuRB_InfoSetupLst_r7 rb_InfoSetupLst;
} NhuRAB_InfoSetup_r7;


typedef enum enumNhuRLC_PDU_SizeConstraintlengthIndicatorSize
{
 NhuRLC_PDU_SizeConstraintlengthIndicatorSizesize7Enum,
 NhuRLC_PDU_SizeConstraintlengthIndicatorSizesize15Enum
} EnumNhuRLC_PDU_SizeConstraintlengthIndicatorSize;
typedef TknU32 NhuRLC_PDU_SizeConstraintlengthIndicatorSize;


typedef TknU32 NhuRLC_PDU_SizeConstraintminRLC_PDU_Size;


typedef TknU32 NhuRLC_PDU_SizeConstraintlargestRLC_PDU_Size;

typedef struct NhuRLC_PDU_SizeConstraint
{
 TknPres pres;
 NhuRLC_PDU_SizeConstraintlengthIndicatorSize lengthIndicatorSize;
 NhuRLC_PDU_SizeConstraintminRLC_PDU_Size minRLC_PDU_Size;
 NhuRLC_PDU_SizeConstraintlargestRLC_PDU_Size largestRLC_PDU_Size;
} NhuRLC_PDU_SizeConstraint;

typedef struct NhuUL_LogChannelMapping_r8ul_TrCH_Typdch_rach_uschrlc_SizeLst
{
 TknU8 choice;
 union {
  NhuRLC_SizeExplicitLst explicitLst;
 } val;
} NhuUL_LogChannelMapping_r8ul_TrCH_Typdch_rach_uschrlc_SizeLst;

typedef struct NhuUL_LogChannelMapping_r8ul_TrCH_Typdch_rach_usch
{
 TknPres pres;
 NhuUL_TportChannelTyp ul_TportChannelTyp;
 NhuLogChannelIdentity logicalChannelIdentity;
 NhuUL_LogChannelMapping_r8ul_TrCH_Typdch_rach_uschrlc_SizeLst rlc_SizeLst;
} NhuUL_LogChannelMapping_r8ul_TrCH_Typdch_rach_usch;

typedef struct NhuUL_LogChannelMapping_r8ul_TrCH_Type_dchrlc_PDU_SizefixedSize
{
 TknPres pres;
 NhuDDI ddi;
 NhuRLC_PDU_SizeLst rlc_PDU_SizeLst;
} NhuUL_LogChannelMapping_r8ul_TrCH_Type_dchrlc_PDU_SizefixedSize;

typedef struct NhuUL_LogChannelMapping_r8ul_TrCH_Type_dchrlc_PDU_Size
{
 TknU8 choice;
 union {
  NhuUL_LogChannelMapping_r8ul_TrCH_Type_dchrlc_PDU_SizefixedSize fixedSize;
  NhuRLC_PDU_SizeConstraint flexibleSize;
 } val;
} NhuUL_LogChannelMapping_r8ul_TrCH_Type_dchrlc_PDU_Size;


typedef TknU8 NhuUL_LogChannelMapping_r8ul_TrCH_Type_dchincludeInSchedulingInfo;

typedef struct NhuUL_LogChannelMapping_r8ul_TrCH_Type_dch
{
 TknPres pres;
 NhuLogChannelIdentity logicalChannelIdentity;
 NhuE_DCH_MAC_d_FlowIdentity e_DCH_MAC_d_FlowIdentity;
 NhuUL_LogChannelMapping_r8ul_TrCH_Type_dchrlc_PDU_Size rlc_PDU_Size;
 NhuUL_LogChannelMapping_r8ul_TrCH_Type_dchincludeInSchedulingInfo includeInSchedulingInfo;
} NhuUL_LogChannelMapping_r8ul_TrCH_Type_dch;

typedef struct NhuUL_LogChannelMapping_r8ul_TrCH_Typ
{
 TknU8 choice;
 union {
  NhuUL_LogChannelMapping_r8ul_TrCH_Typdch_rach_usch dch_rach_usch;
  NhuUL_LogChannelMapping_r8ul_TrCH_Type_dch e_dch;
 } val;
} NhuUL_LogChannelMapping_r8ul_TrCH_Typ;

typedef struct NhuUL_LogChannelMapping_r8
{
 TknPres pres;
 NhuUL_LogChannelMapping_r8ul_TrCH_Typ ul_TrCH_Typ;
 NhuMAC_LogChannelPriority mac_LogChannelPriority;
} NhuUL_LogChannelMapping_r8;


typedef TknU8 NhuUL_LogChannelMappingLst_r8rlc_LogChannelMappingIndicator;

typedef struct NhuUL_LogChannelMappingLst_r8ul_LogChannelMapping
{
 TknU16 noComp;
 NhuUL_LogChannelMapping_r8 *member;
}NhuUL_LogChannelMappingLst_r8ul_LogChannelMapping;

typedef struct NhuUL_LogChannelMappingLst_r8
{
 TknPres pres;
 NhuUL_LogChannelMappingLst_r8rlc_LogChannelMappingIndicator rlc_LogChannelMappingIndicator;
 NhuUL_LogChannelMappingLst_r8ul_LogChannelMapping ul_LogChannelMapping;
} NhuUL_LogChannelMappingLst_r8;

typedef struct NhuUL_LogChannelMappings_r8
{
 TknU8 choice;
 union {
  NhuUL_LogChannelMapping_r8 oneLogChannel;
  NhuUL_LogChannelMappingLst_r8 twoLogChannels;
 } val;
} NhuUL_LogChannelMappings_r8;

typedef struct NhuRB_MappingOption_r8
{
 TknPres pres;
 NhuUL_LogChannelMappings_r8 ul_LogChannelMappings;
 NhuDL_LogChannelMappingLst_r7 dl_LogChannelMappingLst;
} NhuRB_MappingOption_r8;

typedef struct NhuRB_MappingInfo_r8
{
 TknU16 noComp;
 NhuRB_MappingOption_r8 *member;
}NhuRB_MappingInfo_r8;

typedef struct NhuRB_InfoSetup_r8
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_Info_r4 pdcp_Info;
 NhuRLC_InfoChoice_r7 rlc_InfoChoice;
 NhuRB_MappingInfo_r8 rb_MappingInfo;
} NhuRB_InfoSetup_r8;

typedef struct NhuRB_InfoSetupLst_r8
{
 TknU16 noComp;
 NhuRB_InfoSetup_r8 *member;
}NhuRB_InfoSetupLst_r8;

typedef struct NhuRAB_InfoSetup_r8
{
 TknPres pres;
 NhuRAB_Info_r7 rab_Info;
 NhuCS_HSPA_Info cs_HSPA_Info;
 NhuRAB_InfoReplace rab_InfoReplace;
 NhuRB_InfoSetupLst_r8 rb_InfoSetupLst;
} NhuRAB_InfoSetup_r8;

typedef struct NhuRAB_InfoSetup_v820ext
{
 TknPres pres;
 NhuCS_HSPA_Info cs_HSPA_Info;
} NhuRAB_InfoSetup_v820ext;

typedef struct NhuRAB_InfoSetupLst
{
 TknU16 noComp;
 NhuRAB_InfoSetup *member;
}NhuRAB_InfoSetupLst;

typedef struct NhuRAB_InfoSetupLst_r4
{
 TknU16 noComp;
 NhuRAB_InfoSetup_r4 *member;
}NhuRAB_InfoSetupLst_r4;

typedef struct NhuRAB_InfoSetupLst_r5
{
 TknU16 noComp;
 NhuRAB_InfoSetup_r5 *member;
}NhuRAB_InfoSetupLst_r5;

typedef struct NhuRAB_InfoSetupLst_r6
{
 TknU16 noComp;
 NhuRAB_InfoSetup_r6 *member;
}NhuRAB_InfoSetupLst_r6;

typedef struct NhuRAB_InfoSetupLst_r6_ext
{
 TknU16 noComp;
 NhuRAB_InfoSetup_r6_ext *member;
}NhuRAB_InfoSetupLst_r6_ext;

typedef struct NhuRAB_InfoSetupLst_v6b0ext
{
 TknU16 noComp;
 NhuRAB_InfoSetup_v6b0ext *member;
}NhuRAB_InfoSetupLst_v6b0ext;

typedef struct NhuRAB_InfoSetupLst_r7
{
 TknU16 noComp;
 NhuRAB_InfoSetup_r7 *member;
}NhuRAB_InfoSetupLst_r7;

typedef struct NhuRAB_InfoSetupLst_r8
{
 TknU16 noComp;
 NhuRAB_InfoSetup_r8 *member;
}NhuRAB_InfoSetupLst_r8;

typedef struct NhuRAB_InfoSetupLst_v820ext
{
 TknU16 noComp;
 NhuRAB_InfoSetup_v820ext *member;
}NhuRAB_InfoSetupLst_v820ext;

typedef struct NhuRB_COUNT_C_Info
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuCOUNT_C count_C_UL;
 NhuCOUNT_C count_C_DL;
} NhuRB_COUNT_C_Info;

typedef struct NhuRB_COUNT_C_InfoLst
{
 TknU16 noComp;
 NhuRB_COUNT_C_Info *member;
}NhuRB_COUNT_C_InfoLst;

typedef struct NhuRB_COUNT_C_MSB_Info
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuCOUNT_C_MSB count_C_MSB_UL;
 NhuCOUNT_C_MSB count_C_MSB_DL;
} NhuRB_COUNT_C_MSB_Info;

typedef struct NhuRB_COUNT_C_MSB_InfoLst
{
 TknU16 noComp;
 NhuRB_COUNT_C_MSB_Info *member;
}NhuRB_COUNT_C_MSB_InfoLst;

typedef struct NhuRB_IdentityLst
{
 TknU16 noComp;
 NhuRB_Identity *member;
}NhuRB_IdentityLst;

typedef struct NhuRB_InfoAffected
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRB_MappingInfo rb_MappingInfo;
} NhuRB_InfoAffected;

typedef struct NhuRB_InfoAffected_r5
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRB_MappingInfo_r5 rb_MappingInfo;
} NhuRB_InfoAffected_r5;

typedef struct NhuRB_InfoAffected_r6
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRB_MappingInfo_r6 rb_MappingInfo;
} NhuRB_InfoAffected_r6;

typedef struct NhuRB_InfoAffected_r7
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRB_MappingInfo_r7 rb_MappingInfo;
} NhuRB_InfoAffected_r7;

typedef struct NhuRB_InfoAffected_r8
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRB_MappingInfo_r8 rb_MappingInfo;
} NhuRB_InfoAffected_r8;

typedef struct NhuRB_InfoAffectedLst
{
 TknU16 noComp;
 NhuRB_InfoAffected *member;
}NhuRB_InfoAffectedLst;

typedef struct NhuRB_InfoAffectedLst_r5
{
 TknU16 noComp;
 NhuRB_InfoAffected_r5 *member;
}NhuRB_InfoAffectedLst_r5;

typedef struct NhuRB_InfoAffectedLst_r6
{
 TknU16 noComp;
 NhuRB_InfoAffected_r6 *member;
}NhuRB_InfoAffectedLst_r6;

typedef struct NhuRB_InfoAffectedLst_r7
{
 TknU16 noComp;
 NhuRB_InfoAffected_r7 *member;
}NhuRB_InfoAffectedLst_r7;

typedef struct NhuRB_InfoAffectedLst_r8
{
 TknU16 noComp;
 NhuRB_InfoAffected_r8 *member;
}NhuRB_InfoAffectedLst_r8;

typedef struct NhuRB_InfoChanged_r6rb_Change
{
 TknU8 choice;
 union {
  NhuRB_Identity re_mapToDefaultRb;
 } val;
} NhuRB_InfoChanged_r6rb_Change;

typedef struct NhuRB_InfoChanged_r6
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRB_InfoChanged_r6rb_Change rb_Change;
} NhuRB_InfoChanged_r6;

typedef struct NhuRB_InfoChangedLst_r6
{
 TknU16 noComp;
 NhuRB_InfoChanged_r6 *member;
}NhuRB_InfoChangedLst_r6;


typedef enum enumNhuRB_StopContinue
{
 NhuRB_StopContinuestopRBEnum,
 NhuRB_StopContinuecontinueRBEnum
} EnumNhuRB_StopContinue;
typedef TknU32 NhuRB_StopContinue;

typedef struct NhuRB_InfoReconfig
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_InfoReconfig pdcp_Info;
 NhuPDCP_SN_Info pdcp_SN_Info;
 NhuRLC_Info rlc_Info;
 NhuRB_MappingInfo rb_MappingInfo;
 NhuRB_StopContinue rb_StopContinue;
} NhuRB_InfoReconfig;

typedef struct NhuRB_InfoReconfig_r4
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_InfoReconfig_r4 pdcp_Info;
 NhuPDCP_SN_Info pdcp_SN_Info;
 NhuRLC_Info rlc_Info;
 NhuRB_MappingInfo rb_MappingInfo;
 NhuRB_StopContinue rb_StopContinue;
} NhuRB_InfoReconfig_r4;

typedef struct NhuRB_InfoReconfig_r5
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_InfoReconfig_r4 pdcp_Info;
 NhuPDCP_SN_Info pdcp_SN_Info;
 NhuRLC_Info_r5 rlc_Info;
 NhuRB_MappingInfo_r5 rb_MappingInfo;
 NhuRB_StopContinue rb_StopContinue;
} NhuRB_InfoReconfig_r5;

typedef struct NhuRB_InfoReconfig_r6
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_InfoReconfig_r4 pdcp_Info;
 NhuPDCP_SN_Info pdcp_SN_Info;
 NhuRLC_Info_r6 rlc_Info;
 NhuRB_MappingInfo_r6 rb_MappingInfo;
 NhuRB_StopContinue rb_StopContinue;
} NhuRB_InfoReconfig_r6;

typedef struct NhuRB_InfoReconfig_r7
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_InfoReconfig_r4 pdcp_Info;
 NhuPDCP_SN_Info pdcp_SN_Info;
 NhuRLC_Info_r7 rlc_Info;
 NhuRB_MappingInfo_r7 rb_MappingInfo;
 NhuRB_StopContinue rb_StopContinue;
} NhuRB_InfoReconfig_r7;

typedef struct NhuRB_InfoReconfig_r8
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_InfoReconfig_r4 pdcp_Info;
 NhuPDCP_SN_Info pdcp_SN_Info;
 NhuRLC_Info_r7 rlc_Info;
 NhuRB_MappingInfo_r8 rb_MappingInfo;
 NhuRB_StopContinue rb_StopContinue;
} NhuRB_InfoReconfig_r8;

typedef struct NhuRB_InfoReconfigLst
{
 TknU16 noComp;
 NhuRB_InfoReconfig *member;
}NhuRB_InfoReconfigLst;

typedef struct NhuRB_InfoReconfigLst_r4
{
 TknU16 noComp;
 NhuRB_InfoReconfig_r4 *member;
}NhuRB_InfoReconfigLst_r4;

typedef struct NhuRB_InfoReconfigLst_r5
{
 TknU16 noComp;
 NhuRB_InfoReconfig_r5 *member;
}NhuRB_InfoReconfigLst_r5;

typedef struct NhuRB_InfoReconfigLst_r6
{
 TknU16 noComp;
 NhuRB_InfoReconfig_r6 *member;
}NhuRB_InfoReconfigLst_r6;

typedef struct NhuRB_InfoReconfigLst_r7
{
 TknU16 noComp;
 NhuRB_InfoReconfig_r7 *member;
}NhuRB_InfoReconfigLst_r7;

typedef struct NhuRB_InfoReconfigLst_r8
{
 TknU16 noComp;
 NhuRB_InfoReconfig_r8 *member;
}NhuRB_InfoReconfigLst_r8;

typedef struct NhuRB_InfoRlsLst
{
 TknU16 noComp;
 NhuRB_Identity *member;
}NhuRB_InfoRlsLst;


typedef enum enumNhuTimerOSD_r6
{
 NhuTimerOSD_r6ms40Enum,
 NhuTimerOSD_r6ms80Enum,
 NhuTimerOSD_r6ms120Enum,
 NhuTimerOSD_r6ms160Enum,
 NhuTimerOSD_r6ms240Enum,
 NhuTimerOSD_r6ms320Enum,
 NhuTimerOSD_r6ms480Enum,
 NhuTimerOSD_r6ms640Enum,
 NhuTimerOSD_r6ms960Enum,
 NhuTimerOSD_r6ms1280Enum,
 NhuTimerOSD_r6ms1920Enum,
 NhuTimerOSD_r6ms2560Enum,
 NhuTimerOSD_r6ms3840Enum,
 NhuTimerOSD_r6ms5120Enum
} EnumNhuTimerOSD_r6;
typedef TknU32 NhuTimerOSD_r6;


typedef enum enumNhuWindowSizeOSD_r6
{
 NhuWindowSizeOSD_r6ws8Enum,
 NhuWindowSizeOSD_r6ws16Enum,
 NhuWindowSizeOSD_r6ws32Enum,
 NhuWindowSizeOSD_r6ws40Enum,
 NhuWindowSizeOSD_r6ws48Enum,
 NhuWindowSizeOSD_r6ws56Enum,
 NhuWindowSizeOSD_r6ws64Enum
} EnumNhuWindowSizeOSD_r6;
typedef TknU32 NhuWindowSizeOSD_r6;

typedef struct NhuUM_RLC_OutOSeqDlvry_Info_r6
{
 TknPres pres;
 NhuTimerOSD_r6 timer_OSD;
 NhuWindowSizeOSD_r6 windowSize_OSD;
} NhuUM_RLC_OutOSeqDlvry_Info_r6;

typedef struct NhuRLC_Info_MCCH_r6
{
 TknPres pres;
 NhuDL_UM_RLC_LI_size dl_UM_RLC_LI_size;
 NhuUM_RLC_OutOSeqDlvry_Info_r6 dl_UM_RLC_OutOSeqDlvry_Info;
} NhuRLC_Info_MCCH_r6;

typedef struct NhuRLC_Info_MSCH_r6
{
 TknPres pres;
 NhuDL_UM_RLC_LI_size dl_UM_RLC_LI_size;
} NhuRLC_Info_MSCH_r6;


typedef enum enumNhuTimerDAR_r6
{
 NhuTimerDAR_r6ms40Enum,
 NhuTimerDAR_r6ms80Enum,
 NhuTimerDAR_r6ms120Enum,
 NhuTimerDAR_r6ms160Enum,
 NhuTimerDAR_r6ms240Enum,
 NhuTimerDAR_r6ms320Enum,
 NhuTimerDAR_r6ms480Enum,
 NhuTimerDAR_r6ms640Enum,
 NhuTimerDAR_r6ms960Enum,
 NhuTimerDAR_r6ms1280Enum,
 NhuTimerDAR_r6ms1920Enum,
 NhuTimerDAR_r6ms2560Enum,
 NhuTimerDAR_r6ms3840Enum,
 NhuTimerDAR_r6ms5120Enum
} EnumNhuTimerDAR_r6;
typedef TknU32 NhuTimerDAR_r6;


typedef enum enumNhuWindowSizeDAR_r6
{
 NhuWindowSizeDAR_r6ws4Enum,
 NhuWindowSizeDAR_r6ws8Enum,
 NhuWindowSizeDAR_r6ws16Enum,
 NhuWindowSizeDAR_r6ws32Enum,
 NhuWindowSizeDAR_r6ws40Enum,
 NhuWindowSizeDAR_r6ws48Enum,
 NhuWindowSizeDAR_r6ws56Enum,
 NhuWindowSizeDAR_r6ws64Enum
} EnumNhuWindowSizeDAR_r6;
typedef TknU32 NhuWindowSizeDAR_r6;

typedef struct NhuUM_RLC_DuplAvoid_Reord_Info_r6
{
 TknPres pres;
 NhuTimerDAR_r6 timer_DAR;
 NhuWindowSizeDAR_r6 widowSize_DAR;
} NhuUM_RLC_DuplAvoid_Reord_Info_r6;

typedef struct NhuRLC_Info_MTCH_r6
{
 TknPres pres;
 NhuDL_UM_RLC_LI_size dl_UM_RLC_LI_size;
 NhuUM_RLC_DuplAvoid_Reord_Info_r6 dl_UM_RLC_DuplAvoid_Reord_Info;
} NhuRLC_Info_MTCH_r6;

typedef struct NhuSRB_InfoSetup_r5
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRLC_InfoChoice_r5 rlc_InfoChoice;
 NhuRB_MappingInfo_r5 rb_MappingInfo;
} NhuSRB_InfoSetup_r5;

typedef struct NhuSRB_InfoSetup_r6
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRLC_InfoChoice_r6 rlc_InfoChoice;
 NhuRB_MappingInfo_r6 rb_MappingInfo;
} NhuSRB_InfoSetup_r6;

typedef struct NhuSRB_InfoSetup_r7
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRLC_InfoChoice_r7 rlc_InfoChoice;
 NhuRB_MappingInfo_r7 rb_MappingInfo;
} NhuSRB_InfoSetup_r7;

typedef struct NhuSRB_InfoSetup_r8
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRLC_InfoChoice_r7 rlc_InfoChoice;
 NhuRB_MappingInfo_r8 rb_MappingInfo;
} NhuSRB_InfoSetup_r8;

typedef struct NhuSRB_InfoSetupLst_r5
{
 TknU16 noComp;
 NhuSRB_InfoSetup_r5 *member;
}NhuSRB_InfoSetupLst_r5;

typedef struct NhuSRB_InfoSetupLst_r6
{
 TknU16 noComp;
 NhuSRB_InfoSetup_r6 *member;
}NhuSRB_InfoSetupLst_r6;

typedef struct NhuSRB_InfoSetupLst_r7
{
 TknU16 noComp;
 NhuSRB_InfoSetup_r7 *member;
}NhuSRB_InfoSetupLst_r7;

typedef struct NhuSRB_InfoSetupLst_r8
{
 TknU16 noComp;
 NhuSRB_InfoSetup_r8 *member;
}NhuSRB_InfoSetupLst_r8;

typedef struct NhuSRB_InfoSetupLst2
{
 TknU16 noComp;
 NhuSRB_InfoSetup *member;
}NhuSRB_InfoSetupLst2;

typedef struct NhuSRB_InfoSetupLst2_r6
{
 TknU16 noComp;
 NhuSRB_InfoSetup_r6 *member;
}NhuSRB_InfoSetupLst2_r6;

typedef struct NhuSRB_InfoSetupLst2_r7
{
 TknU16 noComp;
 NhuSRB_InfoSetup_r7 *member;
}NhuSRB_InfoSetupLst2_r7;

typedef struct NhuSRB_InfoSetupLst2_r8
{
 TknU16 noComp;
 NhuSRB_InfoSetup_r8 *member;
}NhuSRB_InfoSetupLst2_r8;

typedef struct NhuUL_CounterSynchronisationInfo
{
 TknPres pres;
 NhuRB_WithPDCP_InfoLst rB_WithPDCP_InfoLst;
 NhuSTARTLst startLst;
} NhuUL_CounterSynchronisationInfo;


typedef enum enumNhuT1_RlsTimer
{
 NhuT1_RlsTimerrt10Enum,
 NhuT1_RlsTimerrt20Enum,
 NhuT1_RlsTimerrt30Enum,
 NhuT1_RlsTimerrt40Enum,
 NhuT1_RlsTimerrt50Enum,
 NhuT1_RlsTimerrt60Enum,
 NhuT1_RlsTimerrt70Enum,
 NhuT1_RlsTimerrt80Enum,
 NhuT1_RlsTimerrt90Enum,
 NhuT1_RlsTimerrt100Enum,
 NhuT1_RlsTimerrt120Enum,
 NhuT1_RlsTimerrt140Enum,
 NhuT1_RlsTimerrt160Enum,
 NhuT1_RlsTimerrt200Enum,
 NhuT1_RlsTimerrt300Enum,
 NhuT1_RlsTimerrt400Enum
} EnumNhuT1_RlsTimer;
typedef TknU32 NhuT1_RlsTimer;


typedef enum enumNhuMAC_hs_WindowSize
{
 NhuMAC_hs_WindowSizemws4Enum,
 NhuMAC_hs_WindowSizemws6Enum,
 NhuMAC_hs_WindowSizemws8Enum,
 NhuMAC_hs_WindowSizemws12Enum,
 NhuMAC_hs_WindowSizemws16Enum,
 NhuMAC_hs_WindowSizemws24Enum,
 NhuMAC_hs_WindowSizemws32Enum
} EnumNhuMAC_hs_WindowSize;
typedef TknU32 NhuMAC_hs_WindowSize;


typedef TknU32 NhuMAC_d_PDUsizeInfomac_d_PDU_Size;


typedef TknU32 NhuMAC_d_PDUsizeInfomac_d_PDU_Idx;

typedef struct NhuMAC_d_PDUsizeInfo
{
 TknPres pres;
 NhuMAC_d_PDUsizeInfomac_d_PDU_Size mac_d_PDU_Size;
 NhuMAC_d_PDUsizeInfomac_d_PDU_Idx mac_d_PDU_Idx;
} NhuMAC_d_PDUsizeInfo;

typedef struct NhuMAC_d_PDU_SizeInfo_Lst
{
 TknU16 noComp;
 NhuMAC_d_PDUsizeInfo *member;
}NhuMAC_d_PDU_SizeInfo_Lst;


typedef TknU32 NhuMAC_hs_AddReconfQueuemac_hsQueueId;

typedef struct NhuMAC_hs_AddReconfQueue
{
 TknPres pres;
 NhuMAC_hs_AddReconfQueuemac_hsQueueId mac_hsQueueId;
 NhuMAC_d_FlowIdentity mac_dFlowId;
 NhuT1_RlsTimer reorderingRlsTimer;
 NhuMAC_hs_WindowSize mac_hsWindowSize;
 NhuMAC_d_PDU_SizeInfo_Lst mac_d_PDU_SizeInfo_Lst;
} NhuMAC_hs_AddReconfQueue;

typedef struct NhuMAC_hs_AddReconfQueue_Lst
{
 TknU16 noComp;
 NhuMAC_hs_AddReconfQueue *member;
}NhuMAC_hs_AddReconfQueue_Lst;


typedef TknU32 NhuMAC_hs_DelQueuemac_hsQueueId;

typedef struct NhuMAC_hs_DelQueue
{
 TknPres pres;
 NhuMAC_hs_DelQueuemac_hsQueueId mac_hsQueueId;
} NhuMAC_hs_DelQueue;

typedef struct NhuMAC_hs_DelQueue_Lst
{
 TknU16 noComp;
 NhuMAC_hs_DelQueue *member;
}NhuMAC_hs_DelQueue_Lst;

typedef struct NhuAddOrReconfMAC_dFlow
{
 TknPres pres;
 NhuMAC_hs_AddReconfQueue_Lst mac_hs_AddReconfQueue_Lst;
 NhuMAC_hs_DelQueue_Lst mac_hs_DelQueue_Lst;
} NhuAddOrReconfMAC_dFlow;


typedef enum enumNhuTreset_ResetTimer
{
 NhuTreset_ResetTimerrt1Enum,
 NhuTreset_ResetTimerrt2Enum,
 NhuTreset_ResetTimerrt3Enum,
 NhuTreset_ResetTimerrt4Enum
} EnumNhuTreset_ResetTimer;
typedef TknU32 NhuTreset_ResetTimer;

typedef struct NhuMAC_ehs_AddReconfReordQ
{
 TknPres pres;
 NhuMAC_ehs_QueueId mac_ehs_QueueId;
 NhuT1_RlsTimer reorderingRlsTimer;
 NhuTreset_ResetTimer reorderingResetTimer;
 NhuMAC_hs_WindowSize mac_ehsWindowSize;
} NhuMAC_ehs_AddReconfReordQ;

typedef struct NhuMAC_ehs_AddReconfReordQ_Lst
{
 TknU16 noComp;
 NhuMAC_ehs_AddReconfReordQ *member;
}NhuMAC_ehs_AddReconfReordQ_Lst;

typedef struct NhuMAC_ehs_DelReordQ
{
 TknPres pres;
 NhuMAC_ehs_QueueId mac_ehs_QueueId;
} NhuMAC_ehs_DelReordQ;

typedef struct NhuMAC_ehs_DelReordQ_Lst
{
 TknU16 noComp;
 NhuMAC_ehs_DelReordQ *member;
}NhuMAC_ehs_DelReordQ_Lst;

typedef struct NhuAddOrReconfMAC_ehs_ReordQ
{
 TknPres pres;
 NhuMAC_ehs_AddReconfReordQ_Lst mac_ehs_AddReconfQueue_Lst;
 NhuMAC_ehs_DelReordQ_Lst dummy;
} NhuAddOrReconfMAC_ehs_ReordQ;

typedef struct NhuMAC_ehs_AddReconfReordQ_r9
{
 TknPres pres;
 NhuMAC_ehs_QueueId mac_ehs_QueueId;
 NhuT1_RlsTimer reorderingRlsTimer;
 NhuTreset_ResetTimer reorderingResetTimer;
 NhuMAC_hs_WindowSize_r9 mac_ehsWindowSize;
} NhuMAC_ehs_AddReconfReordQ_r9;

typedef struct NhuMAC_ehs_AddReconfReordQ_Lst_r9
{
 TknU16 noComp;
 NhuMAC_ehs_AddReconfReordQ_r9 *member;
}NhuMAC_ehs_AddReconfReordQ_Lst_r9;

typedef struct NhuAddOrReconfMAC_ehs_ReordQ_r9
{
 TknPres pres;
 NhuMAC_ehs_AddReconfReordQ_Lst_r9 mac_ehs_AddReconfQueue_Lst;
} NhuAddOrReconfMAC_ehs_ReordQ_r9;


typedef enum enumNhuMAC_hs_WindowSize_r11
{
 NhuMAC_hs_WindowSize_r11mws4Enum,
 NhuMAC_hs_WindowSize_r11mws6Enum,
 NhuMAC_hs_WindowSize_r11mws8Enum,
 NhuMAC_hs_WindowSize_r11mws12Enum,
 NhuMAC_hs_WindowSize_r11mws16Enum,
 NhuMAC_hs_WindowSize_r11mws24Enum,
 NhuMAC_hs_WindowSize_r11mws32Enum,
 NhuMAC_hs_WindowSize_r11mw64Enum,
 NhuMAC_hs_WindowSize_r11mw128Enum,
 NhuMAC_hs_WindowSize_r11mw256Enum
} EnumNhuMAC_hs_WindowSize_r11;
typedef TknU32 NhuMAC_hs_WindowSize_r11;

typedef struct NhuMAC_ehs_AddReconfReordQ_r11
{
 TknPres pres;
 NhuMAC_ehs_QueueId mac_ehs_QueueId;
 NhuT1_RlsTimer reorderingRlsTimer;
 NhuTreset_ResetTimer reorderingResetTimer;
 NhuMAC_hs_WindowSize_r11 mac_ehsWindowSize;
} NhuMAC_ehs_AddReconfReordQ_r11;

typedef struct NhuMAC_ehs_AddReconfReordQ_Lst_r11
{
 TknU16 noComp;
 NhuMAC_ehs_AddReconfReordQ_r11 *member;
}NhuMAC_ehs_AddReconfReordQ_Lst_r11;

typedef struct NhuAddOrReconfMAC_ehs_ReordQ_r11
{
 TknPres pres;
 NhuMAC_ehs_AddReconfReordQ_Lst_r11 mac_ehs_AddReconfQueue_Lst;
} NhuAddOrReconfMAC_ehs_ReordQ_r11;


typedef TknU32 NhuE_DCH_MAC_d_FlowPowerOffset;


typedef TknU32 NhuE_DCH_MAC_d_FlowMaxRetrans;


typedef TknStrBSXL NhuE_DCH_MAC_d_FlowMultiplexingLst;

typedef enum enumNhuE_DCH_MAC_d_FlowRetransTimer
{
 NhuE_DCH_MAC_d_FlowRetransTimerms10Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms15Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms20Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms25Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms30Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms35Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms40Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms45Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms50Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms55Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms60Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms65Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms70Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms75Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms80Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms85Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms90Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms95Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms100Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms110Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms120Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms140Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms160Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms200Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms240Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms280Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms320Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms400Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms480Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms560Enum
} EnumNhuE_DCH_MAC_d_FlowRetransTimer;
typedef TknU32 NhuE_DCH_MAC_d_FlowRetransTimer;

typedef struct NhuCmn_E_DCH_MAC_d_Flow
{
 TknPres pres;
 NhuE_DCH_MAC_d_FlowIdentity mac_d_FlowIdentity;
 NhuE_DCH_MAC_d_FlowPowerOffset mac_d_FlowPowerOffset;
 NhuE_DCH_MAC_d_FlowMaxRetrans mac_d_FlowMaxRetrans;
 NhuE_DCH_MAC_d_FlowMultiplexingLst mac_d_FlowMultiplexingLst;
 NhuE_DCH_MAC_d_FlowRetransTimer e_dch_mac_d_flow_retransmission_timer;
} NhuCmn_E_DCH_MAC_d_Flow;

typedef struct NhuCmn_E_DCH_MAC_d_FlowLst
{
 TknU16 noComp;
 NhuCmn_E_DCH_MAC_d_Flow *member;
}NhuCmn_E_DCH_MAC_d_FlowLst;

typedef struct NhuCmnTransChTFS_LCRtti
{
 TknU8 choice;
 union {
  NhuCmnDynamicTF_InfoLst tti5;
  NhuCmnDynamicTF_InfoLst tti10;
  NhuCmnDynamicTF_InfoLst tti20;
  NhuCmnDynamicTF_InfoLst tti40;
  NhuCmnDynamicTF_InfoLst tti80;
  NhuCmnDynamicTF_InfoLst_DynamicTTI dynamic;
 } val;
} NhuCmnTransChTFS_LCRtti;

typedef struct NhuCmnTransChTFS_LCR
{
 TknPres pres;
 NhuCmnTransChTFS_LCRtti tti;
 NhuSemistaticTF_Info semistaticTF_Info;
} NhuCmnTransChTFS_LCR;

typedef struct NhuCmn_MAC_ehs_ReorderingQueue
{
 TknPres pres;
 NhuMAC_ehs_QueueId mac_ehs_QueueId;
 NhuT1_RlsTimer t1_RlsTimer;
 NhuTreset_ResetTimer reorderingResetTimer;
 NhuMAC_hs_WindowSize mac_ehsWindowSize;
} NhuCmn_MAC_ehs_ReorderingQueue;

typedef struct NhuCmn_MAC_ehs_ReorderingQueueLst
{
 TknU16 noComp;
 NhuCmn_MAC_ehs_ReorderingQueue *member;
}NhuCmn_MAC_ehs_ReorderingQueueLst;


typedef TknU32 NhuCPCH_SetID;

typedef struct NhuDL_AddReconfTransChInfo2tfs_SignallingMode
{
 TknU8 choice;
 union {
  NhuTportFormatSet explicit_config;
  NhuUL_TportChannelIdentity sameAsULTrCH;
 } val;
} NhuDL_AddReconfTransChInfo2tfs_SignallingMode;

typedef struct NhuDL_AddReconfTransChInfo2
{
 TknPres pres;
 NhuDL_TrCH_Typ dl_TportChannelTyp;
 NhuTportChannelIdentity transportChannelIdentity;
 NhuDL_AddReconfTransChInfo2tfs_SignallingMode tfs_SignallingMode;
 NhuQualityTgt qualityTgt;
} NhuDL_AddReconfTransChInfo2;

typedef struct NhuDL_AddReconfTransChInfo2Lst
{
 TknU16 noComp;
 NhuDL_AddReconfTransChInfo2 *member;
}NhuDL_AddReconfTransChInfo2Lst;

typedef struct NhuDL_AddReconfTransChInfo_r4tfs_SignallingMode
{
 TknU8 choice;
 union {
  NhuTportFormatSet explicit_config;
  NhuUL_TportChannelIdentity sameAsULTrCH;
 } val;
} NhuDL_AddReconfTransChInfo_r4tfs_SignallingMode;

typedef struct NhuDL_AddReconfTransChInfo_r4
{
 TknPres pres;
 NhuDL_TrCH_Typ dl_TportChannelTyp;
 NhuTportChannelIdentity dl_transportChannelIdentity;
 NhuDL_AddReconfTransChInfo_r4tfs_SignallingMode tfs_SignallingMode;
 NhuQualityTgt dch_QualityTgt;
} NhuDL_AddReconfTransChInfo_r4;

typedef struct NhuDL_AddReconfTransChInfoLst_r4
{
 TknU16 noComp;
 NhuDL_AddReconfTransChInfo_r4 *member;
}NhuDL_AddReconfTransChInfoLst_r4;

typedef struct NhuDL_TrCH_TypId1_r5
{
 TknU8 choice;
 union {
  NhuTportChannelIdentity dch;
  NhuTportChannelIdentity dsch;
 } val;
} NhuDL_TrCH_TypId1_r5;


typedef enum enumNhuHARQMemorySize
{
 NhuHARQMemorySizehms800Enum,
 NhuHARQMemorySizehms1600Enum,
 NhuHARQMemorySizehms2400Enum,
 NhuHARQMemorySizehms3200Enum,
 NhuHARQMemorySizehms4000Enum,
 NhuHARQMemorySizehms4800Enum,
 NhuHARQMemorySizehms5600Enum,
 NhuHARQMemorySizehms6400Enum,
 NhuHARQMemorySizehms7200Enum,
 NhuHARQMemorySizehms8000Enum,
 NhuHARQMemorySizehms8800Enum,
 NhuHARQMemorySizehms9600Enum,
 NhuHARQMemorySizehms10400Enum,
 NhuHARQMemorySizehms11200Enum,
 NhuHARQMemorySizehms12000Enum,
 NhuHARQMemorySizehms12800Enum,
 NhuHARQMemorySizehms13600Enum,
 NhuHARQMemorySizehms14400Enum,
 NhuHARQMemorySizehms15200Enum,
 NhuHARQMemorySizehms16000Enum,
 NhuHARQMemorySizehms17600Enum,
 NhuHARQMemorySizehms19200Enum,
 NhuHARQMemorySizehms20800Enum,
 NhuHARQMemorySizehms22400Enum,
 NhuHARQMemorySizehms24000Enum,
 NhuHARQMemorySizehms25600Enum,
 NhuHARQMemorySizehms27200Enum,
 NhuHARQMemorySizehms28800Enum,
 NhuHARQMemorySizehms30400Enum,
 NhuHARQMemorySizehms32000Enum,
 NhuHARQMemorySizehms36000Enum,
 NhuHARQMemorySizehms40000Enum,
 NhuHARQMemorySizehms44000Enum,
 NhuHARQMemorySizehms48000Enum,
 NhuHARQMemorySizehms52000Enum,
 NhuHARQMemorySizehms56000Enum,
 NhuHARQMemorySizehms60000Enum,
 NhuHARQMemorySizehms64000Enum,
 NhuHARQMemorySizehms68000Enum,
 NhuHARQMemorySizehms72000Enum,
 NhuHARQMemorySizehms76000Enum,
 NhuHARQMemorySizehms80000Enum,
 NhuHARQMemorySizehms88000Enum,
 NhuHARQMemorySizehms96000Enum,
 NhuHARQMemorySizehms104000Enum,
 NhuHARQMemorySizehms112000Enum,
 NhuHARQMemorySizehms120000Enum,
 NhuHARQMemorySizehms128000Enum,
 NhuHARQMemorySizehms136000Enum,
 NhuHARQMemorySizehms144000Enum,
 NhuHARQMemorySizehms152000Enum,
 NhuHARQMemorySizehms160000Enum,
 NhuHARQMemorySizehms176000Enum,
 NhuHARQMemorySizehms192000Enum,
 NhuHARQMemorySizehms208000Enum,
 NhuHARQMemorySizehms224000Enum,
 NhuHARQMemorySizehms240000Enum,
 NhuHARQMemorySizehms256000Enum,
 NhuHARQMemorySizehms272000Enum,
 NhuHARQMemorySizehms288000Enum,
 NhuHARQMemorySizehms304000Enum
} EnumNhuHARQMemorySize;
typedef TknU32 NhuHARQMemorySize;


typedef TknU32 NhuHARQ_InfonumberOfProcesses;

typedef struct NhuHARQ_InfomemoryPartitioningexplicit
{
 TknU16 noComp;
 NhuHARQMemorySize *member;
}NhuHARQ_InfomemoryPartitioningexplicit;

typedef struct NhuHARQ_InfomemoryPartitioning
{
 TknU8 choice;
 union {
  NhuHARQ_InfomemoryPartitioningexplicit explict;
 } val;
} NhuHARQ_InfomemoryPartitioning;

typedef struct NhuHARQ_Info
{
 TknPres pres;
 NhuHARQ_InfonumberOfProcesses numberOfProcesses;
 NhuHARQ_InfomemoryPartitioning memoryPartitioning;
} NhuHARQ_Info;

typedef struct NhuHSDSCH_Info
{
 TknPres pres;
 NhuHARQ_Info harqInfo;
 NhuAddOrReconfMAC_dFlow addOrReconfMAC_dFlow;
} NhuHSDSCH_Info;

typedef struct NhuDL_AddReconfTransChInfo_r5tfs_SignallingMode
{
 TknU8 choice;
 union {
  NhuTportFormatSet explicit_config;
  NhuUL_TportChannelIdentity sameAsULTrCH;
  NhuHSDSCH_Info hsdsch;
 } val;
} NhuDL_AddReconfTransChInfo_r5tfs_SignallingMode;

typedef struct NhuDL_AddReconfTransChInfo_r5
{
 TknPres pres;
 NhuDL_TrCH_TypId1_r5 dl_TportChannelTyp;
 NhuDL_AddReconfTransChInfo_r5tfs_SignallingMode tfs_SignallingMode;
 NhuQualityTgt dch_QualityTgt;
} NhuDL_AddReconfTransChInfo_r5;

typedef struct NhuDL_AddReconfTransChInfoLst_r5
{
 TknU16 noComp;
 NhuDL_AddReconfTransChInfo_r5 *member;
}NhuDL_AddReconfTransChInfoLst_r5;


typedef enum enumNhuHARQ_Info_r7numberOfProcesses
{
 NhuHARQ_Info_r7numberOfProcessesn1Enum,
 NhuHARQ_Info_r7numberOfProcessesn2Enum,
 NhuHARQ_Info_r7numberOfProcessesn3Enum,
 NhuHARQ_Info_r7numberOfProcessesn4Enum,
 NhuHARQ_Info_r7numberOfProcessesn5Enum,
 NhuHARQ_Info_r7numberOfProcessesn6Enum,
 NhuHARQ_Info_r7numberOfProcessesn7Enum,
 NhuHARQ_Info_r7numberOfProcessesn8Enum,
 NhuHARQ_Info_r7numberOfProcessesn12Enum,
 NhuHARQ_Info_r7numberOfProcessesn14Enum,
 NhuHARQ_Info_r7numberOfProcessesn16Enum
} EnumNhuHARQ_Info_r7numberOfProcesses;
typedef TknU32 NhuHARQ_Info_r7numberOfProcesses;

typedef struct NhuHARQ_Info_r7memoryPartitioningexplicitmemorySize
{
 TknU16 noComp;
 NhuHARQMemorySize *member;
}NhuHARQ_Info_r7memoryPartitioningexplicitmemorySize;

typedef struct NhuHARQ_Info_r7memoryPartitioningexplicitadditionalMemorySizesForMIMO
{
 TknU16 noComp;
 NhuHARQMemorySize *member;
}NhuHARQ_Info_r7memoryPartitioningexplicitadditionalMemorySizesForMIMO;

typedef struct NhuHARQ_Info_r7memoryPartitioningexplicit
{
 TknPres pres;
 NhuHARQ_Info_r7memoryPartitioningexplicitmemorySize memorySize;
 NhuHARQ_Info_r7memoryPartitioningexplicitadditionalMemorySizesForMIMO additionalMemorySizesForMIMO;
} NhuHARQ_Info_r7memoryPartitioningexplicit;

typedef struct NhuHARQ_Info_r7memoryPartitioning
{
 TknU8 choice;
 union {
  NhuHARQ_Info_r7memoryPartitioningexplicit explict;
 } val;
} NhuHARQ_Info_r7memoryPartitioning;

typedef struct NhuHARQ_Info_r7
{
 TknPres pres;
 NhuHARQ_Info_r7numberOfProcesses numberOfProcesses;
 NhuHARQ_Info_r7memoryPartitioning memoryPartitioning;
} NhuHARQ_Info_r7;

typedef struct NhuHSDSCH_Info_r7dl_MAC_HeaderTyp
{
 TknU8 choice;
 union {
  NhuAddOrReconfMAC_dFlow mac_hs;
  NhuAddOrReconfMAC_ehs_ReordQ mac_ehs;
 } val;
} NhuHSDSCH_Info_r7dl_MAC_HeaderTyp;

typedef struct NhuHSDSCH_Info_r7
{
 TknPres pres;
 NhuHARQ_Info_r7 harqInfo;
 NhuHSDSCH_Info_r7dl_MAC_HeaderTyp dl_MAC_HeaderTyp;
} NhuHSDSCH_Info_r7;

typedef struct NhuDL_AddReconfTransChInfo_r7tfs_SignallingMode
{
 TknU8 choice;
 union {
  NhuTportFormatSet explicit_config;
  NhuUL_TportChannelIdentity sameAsULTrCH;
  NhuHSDSCH_Info_r7 hsdsch;
 } val;
} NhuDL_AddReconfTransChInfo_r7tfs_SignallingMode;

typedef struct NhuDL_AddReconfTransChInfo_r7
{
 TknPres pres;
 NhuDL_TrCH_TypId1_r5 dl_TportChannelTyp;
 NhuDL_AddReconfTransChInfo_r7tfs_SignallingMode tfs_SignallingMode;
 NhuQualityTgt dch_QualityTgt;
} NhuDL_AddReconfTransChInfo_r7;

typedef struct NhuDL_AddReconfTransChInfoLst_r7
{
 TknU16 noComp;
 NhuDL_AddReconfTransChInfo_r7 *member;
}NhuDL_AddReconfTransChInfoLst_r7;

typedef struct NhuHSDSCH_Info_r9dl_MAC_HeaderTyp
{
 TknU8 choice;
 union {
  NhuAddOrReconfMAC_dFlow mac_hs;
  NhuAddOrReconfMAC_ehs_ReordQ_r9 mac_ehs;
 } val;
} NhuHSDSCH_Info_r9dl_MAC_HeaderTyp;

typedef struct NhuHSDSCH_Info_r9
{
 TknPres pres;
 NhuHARQ_Info_r7 harqInfo;
 NhuHSDSCH_Info_r9dl_MAC_HeaderTyp dl_MAC_HeaderTyp;
} NhuHSDSCH_Info_r9;

typedef struct NhuDL_AddReconfTransChInfo_r9tfs_SignallingMode
{
 TknU8 choice;
 union {
  NhuTportFormatSet explicit_config;
  NhuUL_TportChannelIdentity sameAsULTrCH;
  NhuHSDSCH_Info_r9 hsdsch;
 } val;
} NhuDL_AddReconfTransChInfo_r9tfs_SignallingMode;

typedef struct NhuDL_AddReconfTransChInfo_r9
{
 TknPres pres;
 NhuDL_TrCH_TypId1_r5 dl_TportChannelTyp;
 NhuDL_AddReconfTransChInfo_r9tfs_SignallingMode tfs_SignallingMode;
 NhuQualityTgt dch_QualityTgt;
} NhuDL_AddReconfTransChInfo_r9;

typedef struct NhuDL_AddReconfTransChInfoLst_r9
{
 TknU16 noComp;
 NhuDL_AddReconfTransChInfo_r9 *member;
}NhuDL_AddReconfTransChInfoLst_r9;

typedef struct NhuHSDSCH_Info_r11dl_MAC_HeaderTyp
{
 TknU8 choice;
 union {
  NhuAddOrReconfMAC_dFlow mac_hs;
  NhuAddOrReconfMAC_ehs_ReordQ_r11 mac_ehs;
 } val;
} NhuHSDSCH_Info_r11dl_MAC_HeaderTyp;

typedef struct NhuHSDSCH_Info_r11
{
 TknPres pres;
 NhuHARQ_Info_r7 harqInfo;
 NhuHSDSCH_Info_r11dl_MAC_HeaderTyp dl_MAC_HeaderTyp;
} NhuHSDSCH_Info_r11;

typedef struct NhuDL_AddReconfTransChInfo_r11tfs_SignallingMode
{
 TknU8 choice;
 union {
  NhuTportFormatSet explicit_config;
  NhuUL_TportChannelIdentity sameAsULTrCH;
  NhuHSDSCH_Info_r11 hsdsch;
 } val;
} NhuDL_AddReconfTransChInfo_r11tfs_SignallingMode;

typedef struct NhuDL_AddReconfTransChInfo_r11
{
 TknPres pres;
 NhuDL_TrCH_TypId1_r5 dl_TportChannelTyp;
 NhuDL_AddReconfTransChInfo_r11tfs_SignallingMode tfs_SignallingMode;
 NhuQualityTgt dch_QualityTgt;
} NhuDL_AddReconfTransChInfo_r11;

typedef struct NhuDL_AddReconfTransChInfoLst_r11
{
 TknU16 noComp;
 NhuDL_AddReconfTransChInfo_r11 *member;
}NhuDL_AddReconfTransChInfoLst_r11;

typedef struct NhuDL_CmnTransChInfo_r4modeSpecificInfofdddl_Paramsdl_DCH_TFCS
{
 TknPres pres;
 NhuTFCS tfcs;
} NhuDL_CmnTransChInfo_r4modeSpecificInfofdddl_Paramsdl_DCH_TFCS;

typedef struct NhuDL_CmnTransChInfo_r4modeSpecificInfofdddl_Params
{
 TknU8 choice;
 union {
  NhuDL_CmnTransChInfo_r4modeSpecificInfofdddl_Paramsdl_DCH_TFCS dl_DCH_TFCS;
 } val;
} NhuDL_CmnTransChInfo_r4modeSpecificInfofdddl_Params;

typedef struct NhuDL_CmnTransChInfo_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuDL_CmnTransChInfo_r4modeSpecificInfofdddl_Params dl_Params;
} NhuDL_CmnTransChInfo_r4modeSpecificInfofdd;

typedef struct NhuDL_CmnTransChInfo_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuIvdualDL_CCTrCH_InfoLst individualDL_CCTrCH_InfoLst;
} NhuDL_CmnTransChInfo_r4modeSpecificInfotdd;

typedef struct NhuDL_CmnTransChInfo_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_CmnTransChInfo_r4modeSpecificInfofdd fdd;
  NhuDL_CmnTransChInfo_r4modeSpecificInfotdd tdd;
 } val;
} NhuDL_CmnTransChInfo_r4modeSpecificInfo;

typedef struct NhuDL_CmnTransChInfo_r4
{
 TknPres pres;
 NhuTFCS sccpch_TFCS;
 NhuDL_CmnTransChInfo_r4modeSpecificInfo modeSpecificInfo;
} NhuDL_CmnTransChInfo_r4;

typedef struct NhuDL_TportChannelIdentity
{
 TknPres pres;
 NhuDL_TrCH_Typ dl_TportChannelTyp;
 NhuTportChannelIdentity dl_TportChannelIdentity;
} NhuDL_TportChannelIdentity;

typedef struct NhuDL_DeletedTransChInfoLst
{
 TknU16 noComp;
 NhuDL_TportChannelIdentity *member;
}NhuDL_DeletedTransChInfoLst;

typedef struct NhuDL_TrCH_TypId2_r5
{
 TknU8 choice;
 union {
  NhuTportChannelIdentity dch;
  NhuTportChannelIdentity dsch;
  NhuMAC_d_FlowIdentity hsdsch;
 } val;
} NhuDL_TrCH_TypId2_r5;

typedef struct NhuDL_TportChannelIdentity_r5
{
 TknPres pres;
 NhuDL_TrCH_TypId2_r5 dl_TportChannelTyp;
} NhuDL_TportChannelIdentity_r5;

typedef struct NhuDL_DeletedTransChInfoLst_r5
{
 TknU16 noComp;
 NhuDL_TportChannelIdentity_r5 *member;
}NhuDL_DeletedTransChInfoLst_r5;

typedef struct NhuDL_TrCH_TypId2_r7hsdsch
{
 TknU8 choice;
 union {
  NhuMAC_d_FlowIdentity mac_hs;
  NhuMAC_ehs_QueueId mac_ehs;
 } val;
} NhuDL_TrCH_TypId2_r7hsdsch;

typedef struct NhuDL_TrCH_TypId2_r7
{
 TknU8 choice;
 union {
  NhuTportChannelIdentity dch;
  NhuTportChannelIdentity dsch;
  NhuDL_TrCH_TypId2_r7hsdsch hsdsch;
 } val;
} NhuDL_TrCH_TypId2_r7;

typedef struct NhuDL_TportChannelIdentity_r7
{
 TknPres pres;
 NhuDL_TrCH_TypId2_r7 dl_TportChannelTyp;
} NhuDL_TportChannelIdentity_r7;

typedef struct NhuDL_DeletedTransChInfoLst_r7
{
 TknU16 noComp;
 NhuDL_TportChannelIdentity_r7 *member;
}NhuDL_DeletedTransChInfoLst_r7;


typedef TknU32 NhuDRAC_ClassIdentity;


typedef TknU32 NhuTransmissionTimeValidity;


typedef TknU32 NhuTimeDurationBeforeRetry;

typedef struct NhuDRAC_StaticInfo
{
 TknPres pres;
 NhuTransmissionTimeValidity transmissionTimeValidity;
 NhuTimeDurationBeforeRetry timeDurationBeforeRetry;
 NhuDRAC_ClassIdentity drac_ClassIdentity;
} NhuDRAC_StaticInfo;

typedef struct NhuDRAC_StaticInfoLst
{
 TknU16 noComp;
 NhuDRAC_StaticInfo *member;
}NhuDRAC_StaticInfoLst;


typedef TknU32 NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTypnon_ScheduledTransGrantInfomaxMAC_e_PDUContents;


typedef TknStrBSXL NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTypnon_ScheduledTransGrantInfoms2_NonSchedTransmGrantHARQAlloc;
typedef struct NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTypnon_ScheduledTransGrantInfo
{
 TknPres pres;
 NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTypnon_ScheduledTransGrantInfomaxMAC_e_PDUContents maxMAC_e_PDUContents;
 NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTypnon_ScheduledTransGrantInfoms2_NonSchedTransmGrantHARQAlloc ms2_NonSchedTransmGrantHARQAlloc;
} NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTypnon_ScheduledTransGrantInfo;

typedef struct NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTyp
{
 TknU8 choice;
 union {
  NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTypnon_ScheduledTransGrantInfo non_ScheduledTransGrantInfo;
 } val;
} NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTyp;

typedef struct NhuE_DCH_AddReconf_MAC_d_Flow
{
 TknPres pres;
 NhuE_DCH_MAC_d_FlowIdentity mac_d_FlowIdentity;
 NhuE_DCH_MAC_d_FlowPowerOffset mac_d_FlowPowerOffset;
 NhuE_DCH_MAC_d_FlowMaxRetrans mac_d_FlowMaxRetrans;
 NhuE_DCH_MAC_d_FlowMultiplexingLst mac_d_FlowMultiplexingLst;
 NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTyp transmissionGrantTyp;
} NhuE_DCH_AddReconf_MAC_d_Flow;


typedef TknU32 NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfofddmaxMAC_e_PDUContents;


typedef TknStrBSXL NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfofddms2_NonSchedTransmGrantHARQAlloc;
typedef struct NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfofddmaxMAC_e_PDUContents maxMAC_e_PDUContents;
 NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfofddms2_NonSchedTransmGrantHARQAlloc ms2_NonSchedTransmGrantHARQAlloc;
} NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfofdd;

typedef struct NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfofdd fdd;
 } val;
} NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfo;

typedef struct NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfo
{
 TknPres pres;
 NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfo modeSpecificInfo;
} NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfo;

typedef struct NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTyp
{
 TknU8 choice;
 union {
  NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfo non_ScheduledTransGrantInfo;
 } val;
} NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTyp;

typedef struct NhuE_DCH_AddReconf_MAC_d_Flow_r7
{
 TknPres pres;
 NhuE_DCH_MAC_d_FlowIdentity mac_d_FlowIdentity;
 NhuE_DCH_MAC_d_FlowPowerOffset mac_d_FlowPowerOffset;
 NhuE_DCH_MAC_d_FlowMaxRetrans mac_d_FlowMaxRetrans;
 NhuE_DCH_MAC_d_FlowRetransTimer mac_d_FlowRetransTimer;
 NhuE_DCH_MAC_d_FlowMultiplexingLst mac_d_FlowMultiplexingLst;
 NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTyp transmissionGrantTyp;
} NhuE_DCH_AddReconf_MAC_d_Flow_r7;

typedef struct NhuE_DCH_AddReconf_MAC_d_FlowLst
{
 TknU16 noComp;
 NhuE_DCH_AddReconf_MAC_d_Flow *member;
}NhuE_DCH_AddReconf_MAC_d_FlowLst;

typedef struct NhuE_DCH_AddReconf_MAC_d_FlowLst_r7
{
 TknU16 noComp;
 NhuE_DCH_AddReconf_MAC_d_Flow_r7 *member;
}NhuE_DCH_AddReconf_MAC_d_FlowLst_r7;


typedef enum enumNhuE_DCH_TTI
{
 NhuE_DCH_TTItti2Enum,
 NhuE_DCH_TTItti10Enum
} EnumNhuE_DCH_TTI;
typedef TknU32 NhuE_DCH_TTI;

typedef struct NhuPowerOffsetInfoShortmodeSpecificInfofdd
{
 TknPres pres;
 NhuGainFactor gainFactorBetaC;
} NhuPowerOffsetInfoShortmodeSpecificInfofdd;

typedef struct NhuPowerOffsetInfoShortmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuPowerOffsetInfoShortmodeSpecificInfofdd fdd;
 } val;
} NhuPowerOffsetInfoShortmodeSpecificInfo;

typedef struct NhuPowerOffsetInfoShort
{
 TknPres pres;
 NhuTFC_Value referenceTFC;
 NhuPowerOffsetInfoShortmodeSpecificInfo modeSpecificInfo;
 NhuGainFactor gainFactorBetaD;
} NhuPowerOffsetInfoShort;

typedef struct NhuTFC_SubsetLstMembermodeSpecificInfotdd
{
 TknPres pres;
 NhuTFCS_Identity tfcs_ID;
} NhuTFC_SubsetLstMembermodeSpecificInfotdd;

typedef struct NhuTFC_SubsetLstMembermodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuTFC_SubsetLstMembermodeSpecificInfotdd tdd;
 } val;
} NhuTFC_SubsetLstMembermodeSpecificInfo;

typedef struct NhuTFC_SubsetLstMember
{
 TknPres pres;
 NhuTFC_SubsetLstMembermodeSpecificInfo modeSpecificInfo;
 NhuTFC_Subset tfc_Subset;
} NhuTFC_SubsetLstMember;

typedef struct NhuTFC_SubsetLst
{
 TknU16 noComp;
 NhuTFC_SubsetLstMember *member;
}NhuTFC_SubsetLst;

typedef struct NhuTportFormatSet_LCR
{
 TknU8 choice;
 union {
  NhuDedicatedTransChTFS dedicatedTransChTFS;
  NhuCmnTransChTFS_LCR commonTransChTFS_LCR;
 } val;
} NhuTportFormatSet_LCR;

typedef struct NhuUL_AddReconfTransChInfo_r6dch_usch
{
 TknPres pres;
 NhuUL_TrCH_Typ ul_TportChannelTyp;
 NhuTportChannelIdentity transportChannelIdentity;
 NhuTportFormatSet transportFormatSet;
} NhuUL_AddReconfTransChInfo_r6dch_usch;


typedef enum enumNhuUL_AddReconfTransChInfo_r6e_dchharq_Info
{
 NhuUL_AddReconfTransChInfo_r6e_dchharq_Inforv0Enum,
 NhuUL_AddReconfTransChInfo_r6e_dchharq_InforvtableEnum
} EnumNhuUL_AddReconfTransChInfo_r6e_dchharq_Info;
typedef TknU32 NhuUL_AddReconfTransChInfo_r6e_dchharq_Info;

typedef struct NhuUL_AddReconfTransChInfo_r6e_dch
{
 TknPres pres;
 NhuE_DCH_TTI tti;
 NhuUL_AddReconfTransChInfo_r6e_dchharq_Info harq_Info;
 NhuE_DCH_AddReconf_MAC_d_FlowLst addReconf_MAC_d_FlowLst;
} NhuUL_AddReconfTransChInfo_r6e_dch;

typedef struct NhuUL_AddReconfTransChInfo_r6
{
 TknU8 choice;
 union {
  NhuUL_AddReconfTransChInfo_r6dch_usch dch_usch;
  NhuUL_AddReconfTransChInfo_r6e_dch e_dch;
 } val;
} NhuUL_AddReconfTransChInfo_r6;

typedef struct NhuUL_AddReconfTransChInfoLst_r6
{
 TknU16 noComp;
 NhuUL_AddReconfTransChInfo_r6 *member;
}NhuUL_AddReconfTransChInfoLst_r6;

typedef struct NhuUL_AddReconfTransChInfo_r7dch_usch
{
 TknPres pres;
 NhuUL_TrCH_Typ ul_TportChannelTyp;
 NhuTportChannelIdentity transportChannelIdentity;
 NhuTportFormatSet transportFormatSet;
} NhuUL_AddReconfTransChInfo_r7dch_usch;

typedef struct NhuUL_AddReconfTransChInfo_r7e_dchmodeSpecificfdd
{
 TknPres pres;
 NhuE_DCH_TTI tti;
} NhuUL_AddReconfTransChInfo_r7e_dchmodeSpecificfdd;

typedef struct NhuUL_AddReconfTransChInfo_r7e_dchmodeSpecific
{
 TknU8 choice;
 union {
  NhuUL_AddReconfTransChInfo_r7e_dchmodeSpecificfdd fdd;
 } val;
} NhuUL_AddReconfTransChInfo_r7e_dchmodeSpecific;


typedef enum enumNhuUL_AddReconfTransChInfo_r7e_dchharq_Info
{
 NhuUL_AddReconfTransChInfo_r7e_dchharq_Inforv0Enum,
 NhuUL_AddReconfTransChInfo_r7e_dchharq_InforvtableEnum
} EnumNhuUL_AddReconfTransChInfo_r7e_dchharq_Info;
typedef TknU32 NhuUL_AddReconfTransChInfo_r7e_dchharq_Info;

typedef struct NhuUL_AddReconfTransChInfo_r7e_dch
{
 TknPres pres;
 NhuUL_AddReconfTransChInfo_r7e_dchmodeSpecific modeSpecific;
 NhuUL_AddReconfTransChInfo_r7e_dchharq_Info harq_Info;
 NhuE_DCH_AddReconf_MAC_d_FlowLst_r7 addReconf_MAC_d_FlowLst;
} NhuUL_AddReconfTransChInfo_r7e_dch;

typedef struct NhuUL_AddReconfTransChInfo_r7
{
 TknU8 choice;
 union {
  NhuUL_AddReconfTransChInfo_r7dch_usch dch_usch;
  NhuUL_AddReconfTransChInfo_r7e_dch e_dch;
 } val;
} NhuUL_AddReconfTransChInfo_r7;

typedef struct NhuUL_AddReconfTransChInfoLst_r7
{
 TknU16 noComp;
 NhuUL_AddReconfTransChInfo_r7 *member;
}NhuUL_AddReconfTransChInfoLst_r7;

typedef struct NhuUL_AddReconfTransChInfo_r8dch_usch
{
 TknPres pres;
 NhuUL_TrCH_Typ ul_TportChannelTyp;
 NhuTportChannelIdentity transportChannelIdentity;
 NhuTportFormatSet transportFormatSet;
} NhuUL_AddReconfTransChInfo_r8dch_usch;


typedef enum enumNhuUL_AddReconfTransChInfo_r8e_dchul_MAC_HeaderTyp
{
 NhuUL_AddReconfTransChInfo_r8e_dchul_MAC_HeaderTypmac_iisEnum
} EnumNhuUL_AddReconfTransChInfo_r8e_dchul_MAC_HeaderTyp;
typedef TknU32 NhuUL_AddReconfTransChInfo_r8e_dchul_MAC_HeaderTyp;

typedef struct NhuUL_AddReconfTransChInfo_r8e_dchmodeSpecificfdd
{
 TknPres pres;
 NhuE_DCH_TTI tti;
} NhuUL_AddReconfTransChInfo_r8e_dchmodeSpecificfdd;

typedef struct NhuUL_AddReconfTransChInfo_r8e_dchmodeSpecific
{
 TknU8 choice;
 union {
  NhuUL_AddReconfTransChInfo_r8e_dchmodeSpecificfdd fdd;
 } val;
} NhuUL_AddReconfTransChInfo_r8e_dchmodeSpecific;


typedef enum enumNhuUL_AddReconfTransChInfo_r8e_dchharq_Info
{
 NhuUL_AddReconfTransChInfo_r8e_dchharq_Inforv0Enum,
 NhuUL_AddReconfTransChInfo_r8e_dchharq_InforvtableEnum
} EnumNhuUL_AddReconfTransChInfo_r8e_dchharq_Info;
typedef TknU32 NhuUL_AddReconfTransChInfo_r8e_dchharq_Info;

typedef struct NhuUL_AddReconfTransChInfo_r8e_dch
{
 TknPres pres;
 NhuUL_AddReconfTransChInfo_r8e_dchul_MAC_HeaderTyp ul_MAC_HeaderTyp;
 NhuUL_AddReconfTransChInfo_r8e_dchmodeSpecific modeSpecific;
 NhuUL_AddReconfTransChInfo_r8e_dchharq_Info harq_Info;
 NhuE_DCH_AddReconf_MAC_d_FlowLst_r7 addReconf_MAC_d_FlowLst;
} NhuUL_AddReconfTransChInfo_r8e_dch;

typedef struct NhuUL_AddReconfTransChInfo_r8
{
 TknU8 choice;
 union {
  NhuUL_AddReconfTransChInfo_r8dch_usch dch_usch;
  NhuUL_AddReconfTransChInfo_r8e_dch e_dch;
 } val;
} NhuUL_AddReconfTransChInfo_r8;

typedef struct NhuUL_AddReconfTransChInfoLst_r8
{
 TknU16 noComp;
 NhuUL_AddReconfTransChInfo_r8 *member;
}NhuUL_AddReconfTransChInfoLst_r8;

typedef struct NhuUL_CmnTransChInfo_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuTFCS ul_TFCS;
} NhuUL_CmnTransChInfo_r4modeSpecificInfofdd;

typedef struct NhuUL_CmnTransChInfo_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuIvdualUL_CCTrCH_InfoLst individualUL_CCTrCH_InfoLst;
} NhuUL_CmnTransChInfo_r4modeSpecificInfotdd;

typedef struct NhuUL_CmnTransChInfo_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_CmnTransChInfo_r4modeSpecificInfofdd fdd;
  NhuUL_CmnTransChInfo_r4modeSpecificInfotdd tdd;
 } val;
} NhuUL_CmnTransChInfo_r4modeSpecificInfo;

typedef struct NhuUL_CmnTransChInfo_r4
{
 TknPres pres;
 NhuTFC_Subset tfc_Subset;
 NhuTFCS prach_TFCS;
 NhuUL_CmnTransChInfo_r4modeSpecificInfo modeSpecificInfo;
 NhuTFC_SubsetLst tfc_SubsetLst;
} NhuUL_CmnTransChInfo_r4;

typedef struct NhuUL_DeletedTransChInfoLst
{
 TknU16 noComp;
 NhuUL_TportChannelIdentity *member;
}NhuUL_DeletedTransChInfoLst;

typedef struct NhuUL_TportChannelIdentity_r6dch_usch
{
 TknPres pres;
 NhuUL_TrCH_Typ ul_TportChannelTyp;
 NhuTportChannelIdentity ul_TportChannelIdentity;
} NhuUL_TportChannelIdentity_r6dch_usch;

typedef struct NhuUL_TportChannelIdentity_r6
{
 TknU8 choice;
 union {
  NhuUL_TportChannelIdentity_r6dch_usch dch_usch;
  NhuE_DCH_MAC_d_FlowIdentity e_dch;
 } val;
} NhuUL_TportChannelIdentity_r6;

typedef struct NhuUL_DeletedTransChInfoLst_r6
{
 TknU16 noComp;
 NhuUL_TportChannelIdentity_r6 *member;
}NhuUL_DeletedTransChInfoLst_r6;

typedef struct NhuUSCH_TportChannelsInfoMember
{
 TknPres pres;
 NhuTportChannelIdentity usch_TportChannelIdentity;
 NhuTportFormatSet usch_TFS;
} NhuUSCH_TportChannelsInfoMember;

typedef struct NhuUSCH_TportChannelsInfo
{
 TknU16 noComp;
 NhuUSCH_TportChannelsInfoMember *member;
}NhuUSCH_TportChannelsInfo;


typedef TknU32 NhuACK_NACK_repetitionFactor;


typedef TknU32 NhuAC_To_ASC_Mapping;

typedef struct NhuAC_To_ASC_MappingTable
{
 TknU16 noComp;
 NhuAC_To_ASC_Mapping *member;
}NhuAC_To_ASC_MappingTable;


typedef TknU32 NhuAccessServiceClass_FDDavailableSignatureStartIdx;


typedef TknU32 NhuAccessServiceClass_FDDavailableSignatureEndIdx;


typedef TknStrBSXL NhuAccessServiceClass_FDDassignedSubChannelNumber;
typedef struct NhuAccessServiceClass_FDD
{
 TknPres pres;
 NhuAccessServiceClass_FDDavailableSignatureStartIdx availableSignatureStartIdx;
 NhuAccessServiceClass_FDDavailableSignatureEndIdx availableSignatureEndIdx;
 NhuAccessServiceClass_FDDassignedSubChannelNumber assignedSubChannelNumber;
} NhuAccessServiceClass_FDD;


typedef TknStrBSXL NhuAccessServiceClass_TDDchannelisationCodeIndices;

typedef enum enumNhuAccessServiceClass_TDDsubchannelSizesize2subchannels
{
 NhuAccessServiceClass_TDDsubchannelSizesize2subchannelssubch0Enum,
 NhuAccessServiceClass_TDDsubchannelSizesize2subchannelssubch1Enum
} EnumNhuAccessServiceClass_TDDsubchannelSizesize2subchannels;
typedef TknU32 NhuAccessServiceClass_TDDsubchannelSizesize2subchannels;

typedef struct NhuAccessServiceClass_TDDsubchannelSizesize2
{
 TknPres pres;
 NhuAccessServiceClass_TDDsubchannelSizesize2subchannels subchannels;
} NhuAccessServiceClass_TDDsubchannelSizesize2;


typedef TknStrBSXL NhuAccessServiceClass_TDDsubchannelSizesize4subchannels;
typedef struct NhuAccessServiceClass_TDDsubchannelSizesize4
{
 TknPres pres;
 NhuAccessServiceClass_TDDsubchannelSizesize4subchannels subchannels;
} NhuAccessServiceClass_TDDsubchannelSizesize4;


typedef TknStrBSXL NhuAccessServiceClass_TDDsubchannelSizesize8subchannels;
typedef struct NhuAccessServiceClass_TDDsubchannelSizesize8
{
 TknPres pres;
 NhuAccessServiceClass_TDDsubchannelSizesize8subchannels subchannels;
} NhuAccessServiceClass_TDDsubchannelSizesize8;

typedef struct NhuAccessServiceClass_TDDsubchannelSize
{
 TknU8 choice;
 union {
  NhuAccessServiceClass_TDDsubchannelSizesize2 size2;
  NhuAccessServiceClass_TDDsubchannelSizesize4 size4;
  NhuAccessServiceClass_TDDsubchannelSizesize8 size8;
 } val;
} NhuAccessServiceClass_TDDsubchannelSize;

typedef struct NhuAccessServiceClass_TDD
{
 TknPres pres;
 NhuAccessServiceClass_TDDchannelisationCodeIndices channelisationCodeIndices;
 NhuAccessServiceClass_TDDsubchannelSize subchannelSize;
} NhuAccessServiceClass_TDD;


typedef TknStrBSXL NhuAccessServiceClass_TDD_r7channelisationCodeIndices;

typedef enum enumNhuAccessServiceClass_TDD_r7subchannelSizesize2subchannels
{
 NhuAccessServiceClass_TDD_r7subchannelSizesize2subchannelssubch0Enum,
 NhuAccessServiceClass_TDD_r7subchannelSizesize2subchannelssubch1Enum
} EnumNhuAccessServiceClass_TDD_r7subchannelSizesize2subchannels;
typedef TknU32 NhuAccessServiceClass_TDD_r7subchannelSizesize2subchannels;

typedef struct NhuAccessServiceClass_TDD_r7subchannelSizesize2
{
 TknPres pres;
 NhuAccessServiceClass_TDD_r7subchannelSizesize2subchannels subchannels;
} NhuAccessServiceClass_TDD_r7subchannelSizesize2;


typedef TknStrBSXL NhuAccessServiceClass_TDD_r7subchannelSizesize4subchannels;
typedef struct NhuAccessServiceClass_TDD_r7subchannelSizesize4
{
 TknPres pres;
 NhuAccessServiceClass_TDD_r7subchannelSizesize4subchannels subchannels;
} NhuAccessServiceClass_TDD_r7subchannelSizesize4;


typedef TknStrBSXL NhuAccessServiceClass_TDD_r7subchannelSizesize8subchannels;
typedef struct NhuAccessServiceClass_TDD_r7subchannelSizesize8
{
 TknPres pres;
 NhuAccessServiceClass_TDD_r7subchannelSizesize8subchannels subchannels;
} NhuAccessServiceClass_TDD_r7subchannelSizesize8;


typedef TknStrBSXL NhuAccessServiceClass_TDD_r7subchannelSizesize16subchannels;
typedef struct NhuAccessServiceClass_TDD_r7subchannelSizesize16
{
 TknPres pres;
 NhuAccessServiceClass_TDD_r7subchannelSizesize16subchannels subchannels;
} NhuAccessServiceClass_TDD_r7subchannelSizesize16;

typedef struct NhuAccessServiceClass_TDD_r7subchannelSize
{
 TknU8 choice;
 union {
  NhuAccessServiceClass_TDD_r7subchannelSizesize2 size2;
  NhuAccessServiceClass_TDD_r7subchannelSizesize4 size4;
  NhuAccessServiceClass_TDD_r7subchannelSizesize8 size8;
  NhuAccessServiceClass_TDD_r7subchannelSizesize16 size16;
 } val;
} NhuAccessServiceClass_TDD_r7subchannelSize;

typedef struct NhuAccessServiceClass_TDD_r7
{
 TknPres pres;
 NhuAccessServiceClass_TDD_r7channelisationCodeIndices channelisationCodeIndices;
 NhuAccessServiceClass_TDD_r7subchannelSize subchannelSize;
} NhuAccessServiceClass_TDD_r7;


typedef TknStrBSXL NhuAccessServiceClass_TDD_LCR_r4availableSYNC_UlCodesIndics;

typedef enum enumNhuAccessServiceClass_TDD_LCR_r4subchannelSizesize2subchannels
{
 NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize2subchannelssubch0Enum,
 NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize2subchannelssubch1Enum
} EnumNhuAccessServiceClass_TDD_LCR_r4subchannelSizesize2subchannels;
typedef TknU32 NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize2subchannels;

typedef struct NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize2
{
 TknPres pres;
 NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize2subchannels subchannels;
} NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize2;


typedef TknStrBSXL NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize4subchannels;
typedef struct NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize4
{
 TknPres pres;
 NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize4subchannels subchannels;
} NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize4;


typedef TknStrBSXL NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize8subchannels;
typedef struct NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize8
{
 TknPres pres;
 NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize8subchannels subchannels;
} NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize8;

typedef struct NhuAccessServiceClass_TDD_LCR_r4subchannelSize
{
 TknU8 choice;
 union {
  NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize2 size2;
  NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize4 size4;
  NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize8 size8;
 } val;
} NhuAccessServiceClass_TDD_LCR_r4subchannelSize;

typedef struct NhuAccessServiceClass_TDD_LCR_r4
{
 TknPres pres;
 NhuAccessServiceClass_TDD_LCR_r4availableSYNC_UlCodesIndics availableSYNC_UlCodesIndics;
 NhuAccessServiceClass_TDD_LCR_r4subchannelSize subchannelSize;
} NhuAccessServiceClass_TDD_LCR_r4;


typedef TknU32 NhuActvnTimeOffset;

typedef struct NhuDynamicTFInfoCCCH
{
 TknPres pres;
 NhuOctetModeRLC_SizeInfoTyp2 octetModeRLC_SizeInfoTyp2;
} NhuDynamicTFInfoCCCH;

typedef struct NhuAdditionalPRACH_TF_and_TFCS_CCCH_IEs
{
 TknPres pres;
 NhuPowerOffsetInfo powerOffsetInfo;
 NhuDynamicTFInfoCCCH dynamicTFInfoCCCH;
} NhuAdditionalPRACH_TF_and_TFCS_CCCH_IEs;

typedef struct NhuAdditionalPRACH_TF_and_TFCS_CCCH
{
 TknPres pres;
 NhuAdditionalPRACH_TF_and_TFCS_CCCH_IEs additionalPRACH_TF_and_TFCS_CCCH_IEs;
} NhuAdditionalPRACH_TF_and_TFCS_CCCH;

typedef struct NhuAdditionalPRACH_TF_and_TFCS_CCCH_Lst
{
 TknU16 noComp;
 NhuAdditionalPRACH_TF_and_TFCS_CCCH *member;
}NhuAdditionalPRACH_TF_and_TFCS_CCCH_Lst;


typedef enum enumNhuHS_DSCH_TBSizeTable
{
 NhuHS_DSCH_TBSizeTableoctetAlignedEnum
} EnumNhuHS_DSCH_TBSizeTable;
typedef TknU32 NhuHS_DSCH_TBSizeTable;


typedef TknU32 NhuPrimaryScramblingCode;

typedef struct NhuPrimaryCPICH_Info
{
 TknPres pres;
 NhuPrimaryScramblingCode primaryScramblingCode;
} NhuPrimaryCPICH_Info;


typedef TknU32 NhuSecondaryScramblingCode;


typedef TknU32 NhuHS_SCCH_Codes;


typedef TknS32 NhuMeasurementPowerOffset;


typedef enum enumNhuMIMO_N_M_Ratio
{
 NhuMIMO_N_M_Ratiomnm1_2Enum,
 NhuMIMO_N_M_Ratiomnm2_3Enum,
 NhuMIMO_N_M_Ratiomnm3_4Enum,
 NhuMIMO_N_M_Ratiomnm4_5Enum,
 NhuMIMO_N_M_Ratiomnm5_6Enum,
 NhuMIMO_N_M_Ratiomnm6_7Enum,
 NhuMIMO_N_M_Ratiomnm7_8Enum,
 NhuMIMO_N_M_Ratiomnm8_9Enum,
 NhuMIMO_N_M_Ratiomnm9_10Enum,
 NhuMIMO_N_M_Ratiomnm1_1Enum
} EnumNhuMIMO_N_M_Ratio;
typedef TknU32 NhuMIMO_N_M_Ratio;


typedef TknU32 NhuChannelisationCode256;


typedef TknS32 NhuS_CPICH_PowerOffset_MIMO;

typedef struct NhuMIMO_PilotCfg_r9secondCPICH_PatterndiversityPattern
{
 TknPres pres;
 NhuChannelisationCode256 channelisationCode;
 NhuS_CPICH_PowerOffset_MIMO s_cpich_PowerOffset_Mimo;
} NhuMIMO_PilotCfg_r9secondCPICH_PatterndiversityPattern;

typedef struct NhuMIMO_PilotCfg_r9secondCPICH_Pattern
{
 TknU8 choice;
 union {
  NhuMIMO_PilotCfg_r9secondCPICH_PatterndiversityPattern diversityPattern;
 } val;
} NhuMIMO_PilotCfg_r9secondCPICH_Pattern;

typedef struct NhuMIMO_PilotCfg_r9
{
 TknPres pres;
 NhuMIMO_PilotCfg_r9secondCPICH_Pattern secondCPICH_Pattern;
} NhuMIMO_PilotCfg_r9;


typedef enum enumNhuSecondaryCellMIMOparametersFDD_r10newCfgprecodingWeightSetRestrn
{
 NhuSecondaryCellMIMOparametersFDD_r10newCfgprecodingWeightSetRestrntrueEnum
} EnumNhuSecondaryCellMIMOparametersFDD_r10newCfgprecodingWeightSetRestrn;
typedef TknU32 NhuSecondaryCellMIMOparametersFDD_r10newCfgprecodingWeightSetRestrn;

typedef struct NhuSecondaryCellMIMOparametersFDD_r10newCfg
{
 TknPres pres;
 NhuMIMO_N_M_Ratio mimoN_M_Ratio;
 NhuMIMO_PilotCfg_r9 mimoPilotCfg;
 NhuSecondaryCellMIMOparametersFDD_r10newCfgprecodingWeightSetRestrn precodingWeightSetRestrn;
} NhuSecondaryCellMIMOparametersFDD_r10newCfg;

typedef struct NhuSecondaryCellMIMOparametersFDD_r10
{
 TknU8 choice;
 union {
  NhuSecondaryCellMIMOparametersFDD_r10newCfg newCfg;
 } val;
} NhuSecondaryCellMIMOparametersFDD_r10;


typedef enum enumNhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdl_64QAM_Configured
{
 NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdl_64QAM_ConfiguredtrueEnum
} EnumNhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdl_64QAM_Configured;
typedef TknU32 NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdl_64QAM_Configured;

typedef struct NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfghS_SCCHChannelisationCodeInfo
{
 TknU16 noComp;
 NhuHS_SCCH_Codes *member;
}NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfghS_SCCHChannelisationCodeInfo;


typedef enum enumNhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCell
{
 NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCelldifferentEnum
} EnumNhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCell;
typedef TknU32 NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCell;

typedef struct NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfg
{
 TknPres pres;
 NhuH_RNTI new_H_RNTI;
 NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdl_64QAM_Configured dl_64QAM_Configured;
 NhuHS_DSCH_TBSizeTable hs_DSCH_TBSizeTable;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuSecondaryScramblingCode dl_ScramblingCode;
 NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfghS_SCCHChannelisationCodeInfo hS_SCCHChannelisationCodeInfo;
 NhuMeasurementPowerOffset measurementPowerOffset;
 NhuUARFCN uarfcn_DL;
 NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCell differentTxModeFromServingHS_DSCHCell;
} NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfg;

typedef struct NhuDL_SecondaryCellInfoFDD_r10configurationInfo
{
 TknU8 choice;
 union {
  NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfg newCfg;
 } val;
} NhuDL_SecondaryCellInfoFDD_r10configurationInfo;

typedef struct NhuDL_SecondaryCellInfoFDD_r10
{
 TknPres pres;
 NhuDL_SecondaryCellInfoFDD_r10configurationInfo configurationInfo;
 NhuSecondaryCellMIMOparametersFDD_r10 secondaryCellMIMOparameters;
} NhuDL_SecondaryCellInfoFDD_r10;

typedef struct NhuAdditionalDLSecCellInfoFDD
{
 TknPres pres;
 NhuDL_SecondaryCellInfoFDD_r10 dl_SecondaryCellInfoFDD;
} NhuAdditionalDLSecCellInfoFDD;

typedef struct NhuAdditionalDLSecCellInfoLstFDD
{
 TknU16 noComp;
 NhuAdditionalDLSecCellInfoFDD *member;
}NhuAdditionalDLSecCellInfoLstFDD;

typedef struct NhuAdditionalDLSecCellInfoLstFDD2
{
 TknU16 noComp;
 NhuAdditionalDLSecCellInfoFDD *member;
}NhuAdditionalDLSecCellInfoLstFDD2;


typedef enum enumNhuAICH_TransmissionTiming
{
 NhuAICH_TransmissionTiminge0Enum,
 NhuAICH_TransmissionTiminge1Enum
} EnumNhuAICH_TransmissionTiming;
typedef TknU32 NhuAICH_TransmissionTiming;


typedef TknU8 NhuAICH_Infosttd_Indicator;

typedef struct NhuAICH_Info
{
 TknPres pres;
 NhuChannelisationCode256 channelisationCode256;
 NhuAICH_Infosttd_Indicator sttd_Indicator;
 NhuAICH_TransmissionTiming aich_TransmissionTiming;
} NhuAICH_Info;


typedef TknS32 NhuAICH_PowerOffset;


typedef TknU32 NhuAllocnPeriodInfoallocationActvnTime;


typedef TknU32 NhuAllocnPeriodInfoallocationDuration;

typedef struct NhuAllocnPeriodInfo
{
 TknPres pres;
 NhuAllocnPeriodInfoallocationActvnTime allocationActvnTime;
 NhuAllocnPeriodInfoallocationDuration allocationDuration;
} NhuAllocnPeriodInfo;


typedef TknU32 NhuAlpha;


typedef TknU32 NhuAP_AICH_ChannelisationCode;


typedef TknU32 NhuAP_PreambleScramblingCode;


typedef TknU32 NhuAP_Signature;


typedef TknU32 NhuAP_Subchannel;

typedef struct NhuAvailableAP_SubchannelLst
{
 TknU16 noComp;
 NhuAP_Subchannel *member;
}NhuAvailableAP_SubchannelLst;

typedef struct NhuAP_Signature_VCAM
{
 TknPres pres;
 NhuAP_Signature ap_Signature;
 NhuAvailableAP_SubchannelLst availableAP_SubchannelLst;
} NhuAP_Signature_VCAM;

typedef struct NhuASCSetting_FDD
{
 TknPres pres;
 NhuAccessServiceClass_FDD accessServiceClass_FDD;
} NhuASCSetting_FDD;

typedef struct NhuASCSetting_TDD
{
 TknPres pres;
 NhuAccessServiceClass_TDD accessServiceClass_TDD;
} NhuASCSetting_TDD;

typedef struct NhuASCSetting_TDD_r7
{
 TknPres pres;
 NhuAccessServiceClass_TDD_r7 accessServiceClass_TDD;
} NhuASCSetting_TDD_r7;

typedef struct NhuASCSetting_TDD_LCR_r4
{
 TknPres pres;
 NhuAccessServiceClass_TDD_LCR_r4 accessServiceClass_TDD_LCR;
} NhuASCSetting_TDD_LCR_r4;

typedef struct NhuAvailableAP_Signature_VCAMLst
{
 TknU16 noComp;
 NhuAP_Signature_VCAM *member;
}NhuAvailableAP_Signature_VCAMLst;

typedef struct NhuAvailableAP_SignatureLst
{
 TknU16 noComp;
 NhuAP_Signature *member;
}NhuAvailableAP_SignatureLst;


typedef enum enumNhuMinimumSpreadingFactor
{
 NhuMinimumSpreadingFactorsf4Enum,
 NhuMinimumSpreadingFactorsf8Enum,
 NhuMinimumSpreadingFactorsf16Enum,
 NhuMinimumSpreadingFactorsf32Enum,
 NhuMinimumSpreadingFactorsf64Enum,
 NhuMinimumSpreadingFactorsf128Enum,
 NhuMinimumSpreadingFactorsf256Enum
} EnumNhuMinimumSpreadingFactor;
typedef TknU32 NhuMinimumSpreadingFactor;


typedef TknU32 NhuNF_Max;


typedef TknU32 NhuMaxAvailablePCPCH_Number;

typedef struct NhuAvailableMinimumSF_VCAM
{
 TknPres pres;
 NhuMinimumSpreadingFactor minimumSpreadingFactor;
 NhuNF_Max nf_Max;
 NhuMaxAvailablePCPCH_Number maxAvailablePCPCH_Number;
 NhuAvailableAP_Signature_VCAMLst availableAP_Signature_VCAMLst;
} NhuAvailableMinimumSF_VCAM;

typedef struct NhuAvailableMinimumSF_LstVCAM
{
 TknU16 noComp;
 NhuAvailableMinimumSF_VCAM *member;
}NhuAvailableMinimumSF_LstVCAM;


typedef TknStrBSXL NhuAvailableSignatures;

typedef TknStrBSXL NhuAvailableSubChannelNumbers;

typedef enum enumNhuBEACON_PL_Est
{
 NhuBEACON_PL_EsttrueEnum
} EnumNhuBEACON_PL_Est;
typedef TknU32 NhuBEACON_PL_Est;


typedef enum enumNhuBurstTyp
{
 NhuBurstTyptype1Enum,
 NhuBurstTyptype2Enum
} EnumNhuBurstTyp;
typedef TknU32 NhuBurstTyp;


typedef TknS32 NhuBler_Tgt;


typedef TknS32 NhuDPCCH_PowerOffset;


typedef TknU32 NhuSRB_delay;


typedef TknU32 NhuUL_TgtSIR;


typedef TknU32 NhuTimeslotNumber;


typedef TknS32 NhuTDD_UL_Interference;

typedef struct NhuIvdualTS_Interference
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
 NhuTDD_UL_Interference ul_TimeslotInterference;
} NhuIvdualTS_Interference;

typedef struct NhuIvdualTS_InterferenceLst
{
 TknU16 noComp;
 NhuIvdualTS_Interference *member;
}NhuIvdualTS_InterferenceLst;


typedef TknU32 NhuPrimaryCCPCH_TX_Power;

typedef struct NhuUL_DPCH_PowerCntrlInfofdd
{
 TknPres pres;
 NhuDPCCH_PowerOffset dpcch_PowerOffset;
 NhuPC_Preamble pc_Preamble;
 NhuSRB_delay sRB_delay;
 NhuPowerCntrlAlgorithm powerCntrlAlgorithm;
} NhuUL_DPCH_PowerCntrlInfofdd;

typedef struct NhuUL_DPCH_PowerCntrlInfotddul_OL_PC_SignallingindividuallySignalled
{
 TknPres pres;
 NhuIvdualTS_InterferenceLst individualTS_InterferenceLst;
 NhuConstantValueTdd dpch_ConstantValue;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
} NhuUL_DPCH_PowerCntrlInfotddul_OL_PC_SignallingindividuallySignalled;

typedef struct NhuUL_DPCH_PowerCntrlInfotddul_OL_PC_Signalling
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfotddul_OL_PC_SignallingindividuallySignalled individuallySignalled;
 } val;
} NhuUL_DPCH_PowerCntrlInfotddul_OL_PC_Signalling;

typedef struct NhuUL_DPCH_PowerCntrlInfotdd
{
 TknPres pres;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuUL_DPCH_PowerCntrlInfotddul_OL_PC_Signalling ul_OL_PC_Signalling;
} NhuUL_DPCH_PowerCntrlInfotdd;

typedef struct NhuUL_DPCH_PowerCntrlInfo
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfofdd fdd;
  NhuUL_DPCH_PowerCntrlInfotdd tdd;
 } val;
} NhuUL_DPCH_PowerCntrlInfo;

typedef struct NhuCCTrCH_PowerCntrlInfo
{
 TknPres pres;
 NhuTFCS_Identity tfcs_Identity;
 NhuUL_DPCH_PowerCntrlInfo ul_DPCH_PowerCntrlInfo;
} NhuCCTrCH_PowerCntrlInfo;


typedef TknS32 NhuConstantValue;


typedef TknU32 NhuTPC_StepSizeTDD;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r4fdd
{
 TknPres pres;
 NhuDPCCH_PowerOffset dpcch_PowerOffset;
 NhuPC_Preamble pc_Preamble;
 NhuSRB_delay sRB_delay;
 NhuPowerCntrlAlgorithm powerCntrlAlgorithm;
} NhuUL_DPCH_PowerCntrlInfo_r4fdd;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384
{
 TknPres pres;
 NhuIvdualTS_InterferenceLst individualTS_InterferenceLst;
 NhuConstantValue dpch_ConstantValue;
} NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128
{
 TknPres pres;
 NhuTPC_StepSizeTDD tpc_StepSize;
} NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalledtddOption
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384 tdd384;
  NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128 tdd128;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalledtddOption;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalled
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalledtddOption tddOption;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
} NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalled;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_Signalling
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalled individuallySignalled;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_Signalling;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r4tdd
{
 TknPres pres;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_Signalling ul_OL_PC_Signalling;
} NhuUL_DPCH_PowerCntrlInfo_r4tdd;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r4
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r4fdd fdd;
  NhuUL_DPCH_PowerCntrlInfo_r4tdd tdd;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r4;

typedef struct NhuCCTrCH_PowerCntrlInfo_r4
{
 TknPres pres;
 NhuTFCS_Identity tfcs_Identity;
 NhuUL_DPCH_PowerCntrlInfo_r4 ul_DPCH_PowerCntrlInfo;
} NhuCCTrCH_PowerCntrlInfo_r4;


typedef TknU32 NhuDeltaACK;


typedef TknU32 NhuDeltaNACK;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r5fdd
{
 TknPres pres;
 NhuDPCCH_PowerOffset dpcch_PowerOffset;
 NhuPC_Preamble pc_Preamble;
 NhuSRB_delay sRB_delay;
 NhuPowerCntrlAlgorithm powerCntrlAlgorithm;
 NhuDeltaACK deltaACK;
 NhuDeltaNACK deltaNACK;
 NhuACK_NACK_repetitionFactor ack_NACK_repetition_factor;
} NhuUL_DPCH_PowerCntrlInfo_r5fdd;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384
{
 TknPres pres;
 NhuIvdualTS_InterferenceLst individualTS_InterferenceLst;
 NhuConstantValue dpch_ConstantValue;
} NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128
{
 TknPres pres;
 NhuTPC_StepSizeTDD tpc_StepSize;
} NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalledtddOption
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384 tdd384;
  NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128 tdd128;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalledtddOption;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalled
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalledtddOption tddOption;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
} NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalled;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_Signalling
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalled individuallySignalled;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_Signalling;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r5tdd
{
 TknPres pres;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_Signalling ul_OL_PC_Signalling;
} NhuUL_DPCH_PowerCntrlInfo_r5tdd;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r5
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r5fdd fdd;
  NhuUL_DPCH_PowerCntrlInfo_r5tdd tdd;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r5;

typedef struct NhuCCTrCH_PowerCntrlInfo_r5
{
 TknPres pres;
 NhuTFCS_Identity tfcs_Identity;
 NhuUL_DPCH_PowerCntrlInfo_r5 ul_DPCH_PowerCntrlInfo;
} NhuCCTrCH_PowerCntrlInfo_r5;


typedef TknU32 NhuHARQ_Preamble_Mode;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r7fdd
{
 TknPres pres;
 NhuDPCCH_PowerOffset dpcch_PowerOffset;
 NhuPC_Preamble pc_Preamble;
 NhuSRB_delay sRB_delay;
 NhuPowerCntrlAlgorithm powerCntrlAlgorithm;
 NhuDeltaACK deltaACK;
 NhuDeltaNACK deltaNACK;
 NhuACK_NACK_repetitionFactor ack_NACK_repetition_factor;
 NhuHARQ_Preamble_Mode harq_Preamble_Mode;
} NhuUL_DPCH_PowerCntrlInfo_r7fdd;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384
{
 TknPres pres;
 NhuIvdualTS_InterferenceLst individualTS_InterferenceLst;
 NhuConstantValue dpch_ConstantValue;
} NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd768
{
 TknPres pres;
 NhuIvdualTS_InterferenceLst individualTS_InterferenceLst;
 NhuConstantValue dpch_ConstantValue;
} NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd768;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128
{
 TknPres pres;
 NhuBEACON_PL_Est beaconPLEst;
 NhuTPC_StepSizeTDD tpc_StepSize;
} NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOption
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384 tdd384;
  NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd768 tdd768;
  NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128 tdd128;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOption;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalled
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOption tddOption;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
} NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalled;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_Signalling
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalled individuallySignalled;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_Signalling;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r7tdd
{
 TknPres pres;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_Signalling ul_OL_PC_Signalling;
} NhuUL_DPCH_PowerCntrlInfo_r7tdd;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r7
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r7fdd fdd;
  NhuUL_DPCH_PowerCntrlInfo_r7tdd tdd;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r7;

typedef struct NhuCCTrCH_PowerCntrlInfo_r7
{
 TknPres pres;
 NhuTFCS_Identity tfcs_Identity;
 NhuUL_DPCH_PowerCntrlInfo_r7 ul_DPCH_PowerCntrlInfo;
} NhuCCTrCH_PowerCntrlInfo_r7;


typedef TknU32 NhuCD_AccessSlotSubchannel;

typedef struct NhuCD_AccessSlotSubchannelLst
{
 TknU16 noComp;
 NhuCD_AccessSlotSubchannel *member;
}NhuCD_AccessSlotSubchannelLst;


typedef TknU32 NhuCD_CA_ICH_ChannelisationCode;


typedef TknU32 NhuCD_PreambleScramblingCode;


typedef TknU32 NhuCD_SignatureCode;

typedef struct NhuCD_SignatureCodeLst
{
 TknU16 noComp;
 NhuCD_SignatureCode *member;
}NhuCD_SignatureCodeLst;


typedef TknU32 NhuMidambleShiftLong;


typedef TknU32 NhuCellParamsID;

typedef struct NhuCellAndChannelIdentity
{
 TknPres pres;
 NhuBurstTyp burstTyp;
 NhuMidambleShiftLong midambleShift;
 NhuTimeslotNumber timeslot;
 NhuCellParamsID cellParamsID;
} NhuCellAndChannelIdentity;


typedef TknU32 NhuCfntargetsfnframeoffset;

typedef struct NhuChannelAssignmentActive
{
 TknU8 choice;
 union {
  NhuAvailableMinimumSF_LstVCAM isActive;
 } val;
} NhuChannelAssignmentActive;

typedef struct NhuChannelReqParamsForUCSM
{
 TknPres pres;
 NhuAvailableAP_SignatureLst availableAP_SignatureLst;
 NhuAvailableAP_SubchannelLst availableAP_SubchannelLst;
} NhuChannelReqParamsForUCSM;


typedef enum enumNhuClosedLoopTimingAdjMode
{
 NhuClosedLoopTimingAdjModeslot1Enum,
 NhuClosedLoopTimingAdjModeslot2Enum
} EnumNhuClosedLoopTimingAdjMode;
typedef TknU32 NhuClosedLoopTimingAdjMode;


typedef TknU32 NhuCodeNumberDSCH;


typedef enum enumNhuSF_PDSCH
{
 NhuSF_PDSCHsfp4Enum,
 NhuSF_PDSCHsfp8Enum,
 NhuSF_PDSCHsfp16Enum,
 NhuSF_PDSCHsfp32Enum,
 NhuSF_PDSCHsfp64Enum,
 NhuSF_PDSCHsfp128Enum,
 NhuSF_PDSCHsfp256Enum
} EnumNhuSF_PDSCH;
typedef TknU32 NhuSF_PDSCH;


typedef TknU32 NhuMultiCodeInfo;

typedef struct NhuPDSCH_CodeMap
{
 TknPres pres;
 NhuSF_PDSCH spreadingFactor;
 NhuMultiCodeInfo multiCodeInfo;
 NhuCodeNumberDSCH codeNumberStart;
 NhuCodeNumberDSCH codeNumberStop;
} NhuPDSCH_CodeMap;

typedef struct NhuPDSCH_CodeMapLst
{
 TknU16 noComp;
 NhuPDSCH_CodeMap *member;
}NhuPDSCH_CodeMapLst;

typedef struct NhuCodeRange
{
 TknPres pres;
 NhuPDSCH_CodeMapLst pdsch_CodeMapLst;
} NhuCodeRange;


typedef enum enumNhuHS_ChannelisationCode_LCR
{
 NhuHS_ChannelisationCode_LCRcc16_1Enum,
 NhuHS_ChannelisationCode_LCRcc16_2Enum,
 NhuHS_ChannelisationCode_LCRcc16_3Enum,
 NhuHS_ChannelisationCode_LCRcc16_4Enum,
 NhuHS_ChannelisationCode_LCRcc16_5Enum,
 NhuHS_ChannelisationCode_LCRcc16_6Enum,
 NhuHS_ChannelisationCode_LCRcc16_7Enum,
 NhuHS_ChannelisationCode_LCRcc16_8Enum,
 NhuHS_ChannelisationCode_LCRcc16_9Enum,
 NhuHS_ChannelisationCode_LCRcc16_10Enum,
 NhuHS_ChannelisationCode_LCRcc16_11Enum,
 NhuHS_ChannelisationCode_LCRcc16_12Enum,
 NhuHS_ChannelisationCode_LCRcc16_13Enum,
 NhuHS_ChannelisationCode_LCRcc16_14Enum,
 NhuHS_ChannelisationCode_LCRcc16_15Enum,
 NhuHS_ChannelisationCode_LCRcc16_16Enum
} EnumNhuHS_ChannelisationCode_LCR;
typedef TknU32 NhuHS_ChannelisationCode_LCR;

typedef struct NhuCodeResourceInfo_TDD128
{
 TknPres pres;
 NhuHS_ChannelisationCode_LCR start_code;
 NhuHS_ChannelisationCode_LCR stop_code;
} NhuCodeResourceInfo_TDD128;


typedef enum enumNhuCodeWordSet
{
 NhuCodeWordSetlongCWSEnum,
 NhuCodeWordSetmediumCWSEnum,
 NhuCodeWordSetshortCWSEnum,
 NhuCodeWordSetssdtOffEnum
} EnumNhuCodeWordSet;
typedef TknU32 NhuCodeWordSet;


typedef TknU32 NhuE_HICH_RGCH_SignatureSequence;

typedef struct NhuE_RGCH_Info_CmnEdch
{
 TknPres pres;
 NhuE_HICH_RGCH_SignatureSequence signatureSequence;
} NhuE_RGCH_Info_CmnEdch;


typedef TknU32 NhuE_HICH_ChannelisationCode;

typedef struct NhuE_HICH_Info_CmnEdch
{
 TknPres pres;
 NhuE_HICH_ChannelisationCode channelisationCode;
 NhuE_HICH_RGCH_SignatureSequence signatureSequence;
} NhuE_HICH_Info_CmnEdch;

typedef struct NhuUL_DPCH_CodeInfoForCmnEDCH
{
 TknPres pres;
 NhuScramblingCodeTyp ul_DPCCHscramblingCodeTyp;
 NhuUL_ScramblingCode ul_DPCCHscramblingCode;
} NhuUL_DPCH_CodeInfoForCmnEDCH;


typedef TknU32 NhuCmn_E_DCH_ResourceInfoLsts_offset;


typedef TknU32 NhuCmn_E_DCH_ResourceInfoLstf_dpch_ChannelisationCodeNumber;

typedef struct NhuCmn_E_DCH_ResourceInfoLst
{
 TknPres pres;
 NhuCmn_E_DCH_ResourceInfoLsts_offset s_offset;
 NhuCmn_E_DCH_ResourceInfoLstf_dpch_ChannelisationCodeNumber f_dpch_ChannelisationCodeNumber;
 NhuE_RGCH_Info_CmnEdch e_RGCH_Info;
 NhuE_HICH_Info_CmnEdch e_hich_Info;
 NhuUL_DPCH_CodeInfoForCmnEDCH ul_DPCH_CodeInfoForCmnEDCH;
} NhuCmn_E_DCH_ResourceInfoLst;


typedef TknU32 NhuCmn_E_RNTI_InfoMembernumber_of_group;


typedef TknU32 NhuCmn_E_RNTI_InfoMembernumber_of_ENRTI_per_group;

typedef struct NhuCmn_E_RNTI_InfoMember
{
 TknPres pres;
 NhuE_RNTI starting_E_RNTI;
 NhuCmn_E_RNTI_InfoMembernumber_of_group number_of_group;
 NhuCmn_E_RNTI_InfoMembernumber_of_ENRTI_per_group number_of_ENRTI_per_group;
} NhuCmn_E_RNTI_InfoMember;

typedef struct NhuCmn_E_RNTI_Info
{
 TknU16 noComp;
 NhuCmn_E_RNTI_InfoMember *member;
}NhuCmn_E_RNTI_Info;

typedef struct NhuCmnTimeslotInfoMBMS
{
 TknPres pres;
 NhuSecondInterleavingMode secondInterleavingMode;
 NhuTFCI_Coding tfci_Coding;
 NhuPuncturingLimit puncturingLimit;
} NhuCmnTimeslotInfoMBMS;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod2offset;

typedef struct NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod2
{
 TknPres pres;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod2offset offset;
} NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod2;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod4length;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod4offset;

typedef struct NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod4
{
 TknPres pres;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod4length length;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod4offset offset;
} NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod4;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod8length;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod8offset;

typedef struct NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod8
{
 TknPres pres;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod8length length;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod8offset offset;
} NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod8;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod16length;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod16offset;

typedef struct NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod16
{
 TknPres pres;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod16length length;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod16offset offset;
} NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod16;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod32length;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod32offset;

typedef struct NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod32
{
 TknPres pres;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod32length length;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod32offset offset;
} NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod32;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod64length;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod64offset;

typedef struct NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod64
{
 TknPres pres;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod64length length;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod64offset offset;
} NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod64;

typedef struct NhuRepetitionPeriodLengthAndOffset
{
 TknU8 choice;
 union {
  NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod2 repetitionPeriod2;
  NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod4 repetitionPeriod4;
  NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod8 repetitionPeriod8;
  NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod16 repetitionPeriod16;
  NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod32 repetitionPeriod32;
  NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod64 repetitionPeriod64;
 } val;
} NhuRepetitionPeriodLengthAndOffset;

typedef struct NhuCmnTimeslotInfoSCCPCH
{
 TknPres pres;
 NhuSecondInterleavingMode secondInterleavingMode;
 NhuTFCI_Coding tfci_Coding;
 NhuPuncturingLimit puncturingLimit;
 NhuRepetitionPeriodLengthAndOffset repetitionPeriodLengthAndOffset;
} NhuCmnTimeslotInfoSCCPCH;


typedef enum enumNhuCntrlChannelDRXCycle_TDD128
{
 NhuCntrlChannelDRXCycle_TDD128sub_frames_1Enum,
 NhuCntrlChannelDRXCycle_TDD128sub_frames_2Enum,
 NhuCntrlChannelDRXCycle_TDD128sub_frames_4Enum,
 NhuCntrlChannelDRXCycle_TDD128sub_frames_8Enum,
 NhuCntrlChannelDRXCycle_TDD128sub_frames_16Enum,
 NhuCntrlChannelDRXCycle_TDD128sub_frames_32Enum,
 NhuCntrlChannelDRXCycle_TDD128sub_frames_64Enum,
 NhuCntrlChannelDRXCycle_TDD128spare1Enum
} EnumNhuCntrlChannelDRXCycle_TDD128;
typedef TknU32 NhuCntrlChannelDRXCycle_TDD128;


typedef enum enumNhuEnablingDelay_TDD128
{
 NhuEnablingDelay_TDD128radio_frames_0Enum,
 NhuEnablingDelay_TDD128radio_frames_1Enum,
 NhuEnablingDelay_TDD128radio_frames_2Enum,
 NhuEnablingDelay_TDD128radio_frames_4Enum,
 NhuEnablingDelay_TDD128radio_frames_8Enum,
 NhuEnablingDelay_TDD128radio_frames_16Enum,
 NhuEnablingDelay_TDD128radio_frames_32Enum,
 NhuEnablingDelay_TDD128radio_frames_64Enum,
 NhuEnablingDelay_TDD128radio_frames_128Enum,
 NhuEnablingDelay_TDD128spare7Enum,
 NhuEnablingDelay_TDD128spare6Enum,
 NhuEnablingDelay_TDD128spare5Enum,
 NhuEnablingDelay_TDD128spare4Enum,
 NhuEnablingDelay_TDD128spare3Enum,
 NhuEnablingDelay_TDD128spare2Enum,
 NhuEnablingDelay_TDD128infinityEnum
} EnumNhuEnablingDelay_TDD128;
typedef TknU32 NhuEnablingDelay_TDD128;


typedef enum enumNhuHS_SCCH_DRX_InactivityThreshold_TDD128
{
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_1Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_2Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_4Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_8Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_16Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_32Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_64Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_128Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_256Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_512Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128spare6Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128spare5Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128spare4Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128spare3Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128spare2Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128infinityEnum
} EnumNhuHS_SCCH_DRX_InactivityThreshold_TDD128;
typedef TknU32 NhuHS_SCCH_DRX_InactivityThreshold_TDD128;


typedef TknU32 NhuHS_SCCH_DRX_Info_TDD128hS_SCCH_DRX_Offset;

typedef struct NhuHS_SCCH_DRX_Info_TDD128
{
 TknPres pres;
 NhuCntrlChannelDRXCycle_TDD128 hS_SCCH_DRX_Cycle;
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128 hS_SCCH_DRX_InactivityThreshold;
 NhuHS_SCCH_DRX_Info_TDD128hS_SCCH_DRX_Offset hS_SCCH_DRX_Offset;
} NhuHS_SCCH_DRX_Info_TDD128;


typedef enum enumNhuE_AGCH_InactivityMonitorThreshold_TDD128
{
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_0Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_1Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_2Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_4Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_8Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_16Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_32Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_64Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_128Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_256Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_512Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128spare5Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128spare4Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128spare3Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128spare2Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128infinityEnum
} EnumNhuE_AGCH_InactivityMonitorThreshold_TDD128;
typedef TknU32 NhuE_AGCH_InactivityMonitorThreshold_TDD128;


typedef TknU32 NhuE_AGCH_DRX_Info_TDD128e_AGCH_DRX_InfoType_AGCH_DRX_Paramse_AGCH_DRX_Offset;

typedef struct NhuE_AGCH_DRX_Info_TDD128e_AGCH_DRX_InfoType_AGCH_DRX_Params
{
 TknPres pres;
 NhuCntrlChannelDRXCycle_TDD128 e_AGCH_DRX_Cycle;
 NhuE_AGCH_InactivityMonitorThreshold_TDD128 e_AGCH_InactivityMonitorThreshold;
 NhuE_AGCH_DRX_Info_TDD128e_AGCH_DRX_InfoType_AGCH_DRX_Paramse_AGCH_DRX_Offset e_AGCH_DRX_Offset;
} NhuE_AGCH_DRX_Info_TDD128e_AGCH_DRX_InfoType_AGCH_DRX_Params;

typedef struct NhuE_AGCH_DRX_Info_TDD128e_AGCH_DRX_InfoTyp
{
 TknU8 choice;
 union {
  NhuE_AGCH_DRX_Info_TDD128e_AGCH_DRX_InfoType_AGCH_DRX_Params e_AGCH_DRX_Params;
 } val;
} NhuE_AGCH_DRX_Info_TDD128e_AGCH_DRX_InfoTyp;

typedef struct NhuE_AGCH_DRX_Info_TDD128
{
 TknPres pres;
 NhuE_AGCH_DRX_Info_TDD128e_AGCH_DRX_InfoTyp e_AGCH_DRX_InfoTyp;
} NhuE_AGCH_DRX_Info_TDD128;

typedef struct NhuCntrlChannelDRXInfo_TDD128_r8controlChannelDrxOperationcontinue
{
 TknPres pres;
 NhuEnablingDelay_TDD128 enablingDelay;
} NhuCntrlChannelDRXInfo_TDD128_r8controlChannelDrxOperationcontinue;

typedef struct NhuCntrlChannelDRXInfo_TDD128_r8controlChannelDrxOperationnewOperation
{
 TknPres pres;
 NhuHS_SCCH_DRX_Info_TDD128 hS_SCCH_Drx_Info;
 NhuE_AGCH_DRX_Info_TDD128 e_AGCH_Drx_Info;
 NhuEnablingDelay_TDD128 enablingDelay;
} NhuCntrlChannelDRXInfo_TDD128_r8controlChannelDrxOperationnewOperation;

typedef struct NhuCntrlChannelDRXInfo_TDD128_r8controlChannelDrxOperation
{
 TknU8 choice;
 union {
  NhuCntrlChannelDRXInfo_TDD128_r8controlChannelDrxOperationcontinue continu;
  NhuCntrlChannelDRXInfo_TDD128_r8controlChannelDrxOperationnewOperation newOperation;
 } val;
} NhuCntrlChannelDRXInfo_TDD128_r8controlChannelDrxOperation;

typedef struct NhuCntrlChannelDRXInfo_TDD128_r8
{
 TknPres pres;
 NhuCntrlChannelDRXInfo_TDD128_r8controlChannelDrxOperation controlChannelDrxOperation;
} NhuCntrlChannelDRXInfo_TDD128_r8;


typedef TknU32 NhuDynamicPersistenceLvl;

typedef struct NhuDynamicPersistenceLvlTF_Lst
{
 TknU16 noComp;
 NhuDynamicPersistenceLvl *member;
}NhuDynamicPersistenceLvlTF_Lst;

typedef struct NhuCPCH_PersistenceLvls
{
 TknPres pres;
 NhuCPCH_SetID cpch_SetID;
 NhuDynamicPersistenceLvlTF_Lst dynamicPersistenceLvlTF_Lst;
} NhuCPCH_PersistenceLvls;

typedef struct NhuCPCH_PersistenceLvlsLst
{
 TknU16 noComp;
 NhuCPCH_PersistenceLvls *member;
}NhuCPCH_PersistenceLvlsLst;


typedef TknS32 NhuDeltaPp_m;


typedef enum enumNhuUL_DPCCH_SlotFormat
{
 NhuUL_DPCCH_SlotFormatslf0Enum,
 NhuUL_DPCCH_SlotFormatslf1Enum,
 NhuUL_DPCCH_SlotFormatslf2Enum
} EnumNhuUL_DPCCH_SlotFormat;
typedef TknU32 NhuUL_DPCCH_SlotFormat;


typedef TknU32 NhuN_StartMsg;


typedef TknU32 NhuN_EOT;


typedef enum enumNhuCPCH_StatusIndMode
{
 NhuCPCH_StatusIndModepa_modeEnum,
 NhuCPCH_StatusIndModepamsf_modeEnum
} EnumNhuCPCH_StatusIndMode;
typedef TknU32 NhuCPCH_StatusIndMode;


typedef enum enumNhuPCP_Length
{
 NhuPCP_Lengthas0Enum,
 NhuPCP_Lengthas8Enum
} EnumNhuPCP_Length;
typedef TknU32 NhuPCP_Length;

typedef struct NhuUCSM_Info
{
 TknPres pres;
 NhuMinimumSpreadingFactor minimumSpreadingFactor;
 NhuNF_Max nf_Max;
 NhuChannelReqParamsForUCSM channelReqParamsForUCSM;
} NhuUCSM_Info;


typedef TknU32 NhuPCPCH_ChannelInfopcpch_UL_ScramblingCode;


typedef TknU32 NhuPCPCH_ChannelInfopcpch_DL_ChannelisationCode;

typedef struct NhuPCPCH_ChannelInfo
{
 TknPres pres;
 NhuPCPCH_ChannelInfopcpch_UL_ScramblingCode pcpch_UL_ScramblingCode;
 NhuPCPCH_ChannelInfopcpch_DL_ChannelisationCode pcpch_DL_ChannelisationCode;
 NhuSecondaryScramblingCode pcpch_DL_ScramblingCode;
 NhuPCP_Length pcp_Length;
 NhuUCSM_Info ucsm_Info;
} NhuPCPCH_ChannelInfo;

typedef struct NhuPCPCH_ChannelInfoLst
{
 TknU16 noComp;
 NhuPCPCH_ChannelInfo *member;
}NhuPCPCH_ChannelInfoLst;

typedef struct NhuCPCH_SetInfo
{
 TknPres pres;
 NhuCPCH_SetID cpch_SetID;
 NhuTportFormatSet transportFormatSet;
 NhuTFCS tfcs;
 NhuAP_PreambleScramblingCode ap_PreambleScramblingCode;
 NhuAP_AICH_ChannelisationCode ap_AICH_ChannelisationCode;
 NhuCD_PreambleScramblingCode cd_PreambleScramblingCode;
 NhuCD_CA_ICH_ChannelisationCode cd_CA_ICH_ChannelisationCode;
 NhuCD_AccessSlotSubchannelLst cd_AccessSlotSubchannelLst;
 NhuCD_SignatureCodeLst cd_SignatureCodeLst;
 NhuDeltaPp_m deltaPp_m;
 NhuUL_DPCCH_SlotFormat ul_DPCCH_SlotFormat;
 NhuN_StartMsg n_StartMsg;
 NhuN_EOT n_EOT;
 NhuChannelAssignmentActive channelAssignmentActive;
 NhuCPCH_StatusIndMode cpch_StatusIndMode;
 NhuPCPCH_ChannelInfoLst pcpch_ChannelInfoLst;
} NhuCPCH_SetInfo;

typedef struct NhuCPCH_SetInfoLst
{
 TknU16 noComp;
 NhuCPCH_SetInfo *member;
}NhuCPCH_SetInfoLst;


typedef enum enumNhuCQI_DTX_Timer
{
 NhuCQI_DTX_Timersub_frames_0Enum,
 NhuCQI_DTX_Timersub_frames_1Enum,
 NhuCQI_DTX_Timersub_frames_2Enum,
 NhuCQI_DTX_Timersub_frames_4Enum,
 NhuCQI_DTX_Timersub_frames_8Enum,
 NhuCQI_DTX_Timersub_frames_16Enum,
 NhuCQI_DTX_Timersub_frames_32Enum,
 NhuCQI_DTX_Timersub_frames_64Enum,
 NhuCQI_DTX_Timersub_frames_128Enum,
 NhuCQI_DTX_Timersub_frames_256Enum,
 NhuCQI_DTX_Timersub_frames_512Enum,
 NhuCQI_DTX_Timersub_frames_InfinityEnum,
 NhuCQI_DTX_Timerspare4Enum,
 NhuCQI_DTX_Timerspare3Enum,
 NhuCQI_DTX_Timerspare2Enum,
 NhuCQI_DTX_Timerspare1Enum
} EnumNhuCQI_DTX_Timer;
typedef TknU32 NhuCQI_DTX_Timer;


typedef TknU32 NhuCQI_RepetitionFactor;


typedef TknS32 NhuCSICH_PowerOffset;


typedef TknU32 NhuDefaultDPCH_OffsetValueFDD;


typedef TknU32 NhuDefaultDPCH_OffsetValueTDD;


typedef TknU32 NhuDeltaCQI;


typedef TknU32 NhuDeltaSIR;


typedef TknS32 NhuDHS_Sync;


typedef TknU32 NhuDurationTimeInfo;

typedef struct NhuTimeInfo
{
 TknPres pres;
 NhuActvnTime activationTime;
 NhuDurationTimeInfo durationTimeInfo;
} NhuTimeInfo;


typedef enum enumNhuMidambleCfgBurstTyp1and3
{
 NhuMidambleCfgBurstTyp1and3ms4Enum,
 NhuMidambleCfgBurstTyp1and3ms8Enum,
 NhuMidambleCfgBurstTyp1and3ms16Enum
} EnumNhuMidambleCfgBurstTyp1and3;
typedef TknU32 NhuMidambleCfgBurstTyp1and3;


typedef enum enumNhuMidambleCfgBurstTyp2
{
 NhuMidambleCfgBurstTyp2ms3Enum,
 NhuMidambleCfgBurstTyp2ms6Enum
} EnumNhuMidambleCfgBurstTyp2;
typedef TknU32 NhuMidambleCfgBurstTyp2;


typedef TknU32 NhuMidambleShiftShort;

typedef struct NhuMidambleShiftAndBurstTypburstTyptype1midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftLong midambleShift;
} NhuMidambleShiftAndBurstTypburstTyptype1midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTypburstTyptype1midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTypburstTyptype1midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTypburstTyptype1midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTypburstTyptype1
{
 TknPres pres;
 NhuMidambleCfgBurstTyp1and3 midambleCfgBurstTyp1and3;
 NhuMidambleShiftAndBurstTypburstTyptype1midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTypburstTyptype1;

typedef struct NhuMidambleShiftAndBurstTypburstTyptype2midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftShort midambleShift;
} NhuMidambleShiftAndBurstTypburstTyptype2midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTypburstTyptype2midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTypburstTyptype2midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTypburstTyptype2midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTypburstTyptype2
{
 TknPres pres;
 NhuMidambleCfgBurstTyp2 midambleCfgBurstTyp2;
 NhuMidambleShiftAndBurstTypburstTyptype2midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTypburstTyptype2;

typedef struct NhuMidambleShiftAndBurstTypburstTyptype3midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftLong midambleShift;
} NhuMidambleShiftAndBurstTypburstTyptype3midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTypburstTyptype3midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTypburstTyptype3midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTypburstTyptype3midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTypburstTyptype3
{
 TknPres pres;
 NhuMidambleCfgBurstTyp1and3 midambleCfgBurstTyp1and3;
 NhuMidambleShiftAndBurstTypburstTyptype3midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTypburstTyptype3;

typedef struct NhuMidambleShiftAndBurstTypburstTyp
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTypburstTyptype1 type1;
  NhuMidambleShiftAndBurstTypburstTyptype2 type2;
  NhuMidambleShiftAndBurstTypburstTyptype3 type3;
 } val;
} NhuMidambleShiftAndBurstTypburstTyp;

typedef struct NhuMidambleShiftAndBurstTyp
{
 TknPres pres;
 NhuMidambleShiftAndBurstTypburstTyp burstTyp;
} NhuMidambleShiftAndBurstTyp;


typedef TknU8 NhuIvdualTimeslotInfotfci_Existence;

typedef struct NhuIvdualTimeslotInfo
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
 NhuIvdualTimeslotInfotfci_Existence tfci_Existence;
 NhuMidambleShiftAndBurstTyp midambleShiftAndBurstTyp;
} NhuIvdualTimeslotInfo;


typedef enum enumNhuDL_TS_ChannelisationCode
{
 NhuDL_TS_ChannelisationCodecc16_1Enum,
 NhuDL_TS_ChannelisationCodecc16_2Enum,
 NhuDL_TS_ChannelisationCodecc16_3Enum,
 NhuDL_TS_ChannelisationCodecc16_4Enum,
 NhuDL_TS_ChannelisationCodecc16_5Enum,
 NhuDL_TS_ChannelisationCodecc16_6Enum,
 NhuDL_TS_ChannelisationCodecc16_7Enum,
 NhuDL_TS_ChannelisationCodecc16_8Enum,
 NhuDL_TS_ChannelisationCodecc16_9Enum,
 NhuDL_TS_ChannelisationCodecc16_10Enum,
 NhuDL_TS_ChannelisationCodecc16_11Enum,
 NhuDL_TS_ChannelisationCodecc16_12Enum,
 NhuDL_TS_ChannelisationCodecc16_13Enum,
 NhuDL_TS_ChannelisationCodecc16_14Enum,
 NhuDL_TS_ChannelisationCodecc16_15Enum,
 NhuDL_TS_ChannelisationCodecc16_16Enum
} EnumNhuDL_TS_ChannelisationCode;
typedef TknU32 NhuDL_TS_ChannelisationCode;

typedef struct NhuDL_TS_ChannelisationCodesShortcodesRepresentationconsecutive
{
 TknPres pres;
 NhuDL_TS_ChannelisationCode firstChannelisationCode;
 NhuDL_TS_ChannelisationCode lastChannelisationCode;
} NhuDL_TS_ChannelisationCodesShortcodesRepresentationconsecutive;


typedef TknStrBSXL NhuDL_TS_ChannelisationCodesShortcodesRepresentationbitmap;
typedef struct NhuDL_TS_ChannelisationCodesShortcodesRepresentation
{
 TknU8 choice;
 union {
  NhuDL_TS_ChannelisationCodesShortcodesRepresentationconsecutive consecutive;
  NhuDL_TS_ChannelisationCodesShortcodesRepresentationbitmap bitmap;
 } val;
} NhuDL_TS_ChannelisationCodesShortcodesRepresentation;

typedef struct NhuDL_TS_ChannelisationCodesShort
{
 TknPres pres;
 NhuDL_TS_ChannelisationCodesShortcodesRepresentation codesRepresentation;
} NhuDL_TS_ChannelisationCodesShort;

typedef struct NhuDlnkAdditionalTimeslotsparameterssameAsLast
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
} NhuDlnkAdditionalTimeslotsparameterssameAsLast;

typedef struct NhuDlnkAdditionalTimeslotsparametersnewParams
{
 TknPres pres;
 NhuIvdualTimeslotInfo individualTimeslotInfo;
 NhuDL_TS_ChannelisationCodesShort dl_TS_ChannelisationCodesShort;
} NhuDlnkAdditionalTimeslotsparametersnewParams;

typedef struct NhuDlnkAdditionalTimeslotsparameters
{
 TknU8 choice;
 union {
  NhuDlnkAdditionalTimeslotsparameterssameAsLast sameAsLast;
  NhuDlnkAdditionalTimeslotsparametersnewParams newParams;
 } val;
} NhuDlnkAdditionalTimeslotsparameters;

typedef struct NhuDlnkAdditionalTimeslots
{
 TknPres pres;
 NhuDlnkAdditionalTimeslotsparameters parameters;
} NhuDlnkAdditionalTimeslots;


typedef TknU32 NhuDlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotsconsecutive;

typedef struct NhuDlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotstimeslotLst
{
 TknU16 noComp;
 NhuDlnkAdditionalTimeslots *member;
}NhuDlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotstimeslotLst;

typedef struct NhuDlnkTimeslotsCodesmoreTimeslotsadditionalTimeslots
{
 TknU8 choice;
 union {
  NhuDlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotsconsecutive consecutive;
  NhuDlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotstimeslotLst timeslotLst;
 } val;
} NhuDlnkTimeslotsCodesmoreTimeslotsadditionalTimeslots;

typedef struct NhuDlnkTimeslotsCodesmoreTimeslots
{
 TknU8 choice;
 union {
  NhuDlnkTimeslotsCodesmoreTimeslotsadditionalTimeslots additionalTimeslots;
 } val;
} NhuDlnkTimeslotsCodesmoreTimeslots;

typedef struct NhuDlnkTimeslotsCodes
{
 TknPres pres;
 NhuIvdualTimeslotInfo firstIvdualTimeslotInfo;
 NhuDL_TS_ChannelisationCodesShort dl_TS_ChannelisationCodesShort;
 NhuDlnkTimeslotsCodesmoreTimeslots moreTimeslots;
} NhuDlnkTimeslotsCodes;

typedef struct NhuUL_CCTrChTPCLst
{
 TknU16 noComp;
 NhuTFCS_Identity *member;
}NhuUL_CCTrChTPCLst;

typedef struct NhuDL_CCTrCh
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuTimeInfo timeInfo;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuDlnkTimeslotsCodes dl_CCTrCH_TimeslotsCodes;
 NhuUL_CCTrChTPCLst ul_CCTrChTPCLst;
} NhuDL_CCTrCh;


typedef TknU32 NhuTimeslotNumber_LCR_r4;


typedef TknU32 NhuMidambleShiftAndBurstTyp_LCR_r4midambleAllocnModeueSpecificMidamblemidambleShift;

typedef struct NhuMidambleShiftAndBurstTyp_LCR_r4midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_LCR_r4midambleAllocnModeueSpecificMidamblemidambleShift midambleShift;
} NhuMidambleShiftAndBurstTyp_LCR_r4midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_LCR_r4midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_LCR_r4midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_LCR_r4midambleAllocnMode;


typedef TknU32 NhuMidambleShiftAndBurstTyp_LCR_r4midambleCfg;

typedef struct NhuMidambleShiftAndBurstTyp_LCR_r4
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_LCR_r4midambleAllocnMode midambleAllocnMode;
 NhuMidambleShiftAndBurstTyp_LCR_r4midambleCfg midambleCfg;
} NhuMidambleShiftAndBurstTyp_LCR_r4;


typedef TknU8 NhuIvdualTimeslotInfo_LCR_r4tfci_Existence;


typedef enum enumNhuIvdualTimeslotInfo_LCR_r4modulation
{
 NhuIvdualTimeslotInfo_LCR_r4modulationmod_QPSKEnum,
 NhuIvdualTimeslotInfo_LCR_r4modulationmod_8PSKEnum
} EnumNhuIvdualTimeslotInfo_LCR_r4modulation;
typedef TknU32 NhuIvdualTimeslotInfo_LCR_r4modulation;


typedef enum enumNhuIvdualTimeslotInfo_LCR_r4ss_TPC_Symbols
{
 NhuIvdualTimeslotInfo_LCR_r4ss_TPC_SymbolszeroEnum,
 NhuIvdualTimeslotInfo_LCR_r4ss_TPC_SymbolsoneEnum,
 NhuIvdualTimeslotInfo_LCR_r4ss_TPC_SymbolssixteenOverSFEnum
} EnumNhuIvdualTimeslotInfo_LCR_r4ss_TPC_Symbols;
typedef TknU32 NhuIvdualTimeslotInfo_LCR_r4ss_TPC_Symbols;


typedef TknU32 NhuIvdualTimeslotInfo_LCR_r4additionalSS_TPC_Symbols;

typedef struct NhuIvdualTimeslotInfo_LCR_r4
{
 TknPres pres;
 NhuTimeslotNumber_LCR_r4 timeslotNumber;
 NhuIvdualTimeslotInfo_LCR_r4tfci_Existence tfci_Existence;
 NhuMidambleShiftAndBurstTyp_LCR_r4 midambleShiftAndBurstTyp;
 NhuIvdualTimeslotInfo_LCR_r4modulation modulation;
 NhuIvdualTimeslotInfo_LCR_r4ss_TPC_Symbols ss_TPC_Symbols;
 NhuIvdualTimeslotInfo_LCR_r4additionalSS_TPC_Symbols additionalSS_TPC_Symbols;
} NhuIvdualTimeslotInfo_LCR_r4;

typedef struct NhuDlnkAdditionalTimeslots_LCR_r4parameterssameAsLast
{
 TknPres pres;
 NhuTimeslotNumber_LCR_r4 timeslotNumber;
} NhuDlnkAdditionalTimeslots_LCR_r4parameterssameAsLast;

typedef struct NhuDlnkAdditionalTimeslots_LCR_r4parametersnewParams
{
 TknPres pres;
 NhuIvdualTimeslotInfo_LCR_r4 individualTimeslotInfo;
 NhuDL_TS_ChannelisationCodesShort dl_TS_ChannelisationCodesShort;
} NhuDlnkAdditionalTimeslots_LCR_r4parametersnewParams;

typedef struct NhuDlnkAdditionalTimeslots_LCR_r4parameters
{
 TknU8 choice;
 union {
  NhuDlnkAdditionalTimeslots_LCR_r4parameterssameAsLast sameAsLast;
  NhuDlnkAdditionalTimeslots_LCR_r4parametersnewParams newParams;
 } val;
} NhuDlnkAdditionalTimeslots_LCR_r4parameters;

typedef struct NhuDlnkAdditionalTimeslots_LCR_r4
{
 TknPres pres;
 NhuDlnkAdditionalTimeslots_LCR_r4parameters parameters;
} NhuDlnkAdditionalTimeslots_LCR_r4;


typedef TknU32 NhuDlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotsconsecutive;

typedef struct NhuDlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotstimeslotLst
{
 TknU16 noComp;
 NhuDlnkAdditionalTimeslots_LCR_r4 *member;
}NhuDlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotstimeslotLst;

typedef struct NhuDlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslots
{
 TknU8 choice;
 union {
  NhuDlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotsconsecutive consecutive;
  NhuDlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotstimeslotLst timeslotLst;
 } val;
} NhuDlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslots;

typedef struct NhuDlnkTimeslotsCodes_LCR_r4moreTimeslots
{
 TknU8 choice;
 union {
  NhuDlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslots additionalTimeslots;
 } val;
} NhuDlnkTimeslotsCodes_LCR_r4moreTimeslots;

typedef struct NhuDlnkTimeslotsCodes_LCR_r4
{
 TknPres pres;
 NhuIvdualTimeslotInfo_LCR_r4 firstIvdualTimeslotInfo;
 NhuDL_TS_ChannelisationCodesShort dl_TS_ChannelisationCodesShort;
 NhuDlnkTimeslotsCodes_LCR_r4moreTimeslots moreTimeslots;
} NhuDlnkTimeslotsCodes_LCR_r4;

typedef struct NhuDL_CCTrCh_r4tddOptiontdd384
{
 TknPres pres;
 NhuDlnkTimeslotsCodes dl_CCTrCH_TimeslotsCodes;
} NhuDL_CCTrCh_r4tddOptiontdd384;

typedef struct NhuDL_CCTrCh_r4tddOptiontdd128
{
 TknPres pres;
 NhuDlnkTimeslotsCodes_LCR_r4 dl_CCTrCH_TimeslotsCodes;
} NhuDL_CCTrCh_r4tddOptiontdd128;

typedef struct NhuDL_CCTrCh_r4tddOption
{
 TknU8 choice;
 union {
  NhuDL_CCTrCh_r4tddOptiontdd384 tdd384;
  NhuDL_CCTrCh_r4tddOptiontdd128 tdd128;
 } val;
} NhuDL_CCTrCh_r4tddOption;

typedef struct NhuDL_CCTrCh_r4
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuTimeInfo timeInfo;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuDL_CCTrCh_r4tddOption tddOption;
 NhuUL_CCTrChTPCLst ul_CCTrChTPCLst;
} NhuDL_CCTrCh_r4;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyptype1midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftLong midambleShift;
} NhuMidambleShiftAndBurstTyp_r7burstTyptype1midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyptype1midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_r7burstTyptype1midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_r7burstTyptype1midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyptype1
{
 TknPres pres;
 NhuMidambleCfgBurstTyp1and3 midambleCfgBurstTyp1and3;
 NhuMidambleShiftAndBurstTyp_r7burstTyptype1midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_r7burstTyptype1;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyptype2midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftShort midambleShift;
} NhuMidambleShiftAndBurstTyp_r7burstTyptype2midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyptype2midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_r7burstTyptype2midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_r7burstTyptype2midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyptype2
{
 TknPres pres;
 NhuMidambleCfgBurstTyp2 midambleCfgBurstTyp2;
 NhuMidambleShiftAndBurstTyp_r7burstTyptype2midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_r7burstTyptype2;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyptype3midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftLong midambleShift;
} NhuMidambleShiftAndBurstTyp_r7burstTyptype3midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyptype3midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_r7burstTyptype3midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_r7burstTyptype3midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyptype3
{
 TknPres pres;
 NhuMidambleCfgBurstTyp1and3 midambleCfgBurstTyp1and3;
 NhuMidambleShiftAndBurstTyp_r7burstTyptype3midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_r7burstTyptype3;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyp
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_r7burstTyptype1 type1;
  NhuMidambleShiftAndBurstTyp_r7burstTyptype2 type2;
  NhuMidambleShiftAndBurstTyp_r7burstTyptype3 type3;
 } val;
} NhuMidambleShiftAndBurstTyp_r7burstTyp;

typedef struct NhuMidambleShiftAndBurstTyp_r7
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_r7burstTyp burstTyp;
} NhuMidambleShiftAndBurstTyp_r7;


typedef TknU8 NhuIvdualTimeslotInfo_r7tfci_Existence;

typedef struct NhuIvdualTimeslotInfo_r7
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
 NhuIvdualTimeslotInfo_r7tfci_Existence tfci_Existence;
 NhuMidambleShiftAndBurstTyp_r7 midambleShiftAndBurstTyp;
} NhuIvdualTimeslotInfo_r7;

typedef struct NhuDlnkAdditionalTimeslots_r7parameterssameAsLast
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
} NhuDlnkAdditionalTimeslots_r7parameterssameAsLast;

typedef struct NhuDlnkAdditionalTimeslots_r7parametersnewParams
{
 TknPres pres;
 NhuIvdualTimeslotInfo_r7 individualTimeslotInfo;
 NhuDL_TS_ChannelisationCodesShort dl_TS_ChannelisationCodesShort;
} NhuDlnkAdditionalTimeslots_r7parametersnewParams;

typedef struct NhuDlnkAdditionalTimeslots_r7parameters
{
 TknU8 choice;
 union {
  NhuDlnkAdditionalTimeslots_r7parameterssameAsLast sameAsLast;
  NhuDlnkAdditionalTimeslots_r7parametersnewParams newParams;
 } val;
} NhuDlnkAdditionalTimeslots_r7parameters;

typedef struct NhuDlnkAdditionalTimeslots_r7
{
 TknPres pres;
 NhuDlnkAdditionalTimeslots_r7parameters parameters;
} NhuDlnkAdditionalTimeslots_r7;


typedef TknU32 NhuDlnkTimeslotsCodes_r7moreTimeslotsadditionalTimeslotsconsecutive;

typedef struct NhuDlnkTimeslotsCodes_r7moreTimeslotsadditionalTimeslotstimeslotLst
{
 TknU16 noComp;
 NhuDlnkAdditionalTimeslots_r7 *member;
}NhuDlnkTimeslotsCodes_r7moreTimeslotsadditionalTimeslotstimeslotLst;

typedef struct NhuDlnkTimeslotsCodes_r7moreTimeslotsadditionalTimeslots
{
 TknU8 choice;
 union {
  NhuDlnkTimeslotsCodes_r7moreTimeslotsadditionalTimeslotsconsecutive consecutive;
  NhuDlnkTimeslotsCodes_r7moreTimeslotsadditionalTimeslotstimeslotLst timeslotLst;
 } val;
} NhuDlnkTimeslotsCodes_r7moreTimeslotsadditionalTimeslots;

typedef struct NhuDlnkTimeslotsCodes_r7moreTimeslots
{
 TknU8 choice;
 union {
  NhuDlnkTimeslotsCodes_r7moreTimeslotsadditionalTimeslots additionalTimeslots;
 } val;
} NhuDlnkTimeslotsCodes_r7moreTimeslots;

typedef struct NhuDlnkTimeslotsCodes_r7
{
 TknPres pres;
 NhuIvdualTimeslotInfo_r7 firstIvdualTimeslotInfo;
 NhuDL_TS_ChannelisationCodesShort dl_TS_ChannelisationCodesShort;
 NhuDlnkTimeslotsCodes_r7moreTimeslots moreTimeslots;
} NhuDlnkTimeslotsCodes_r7;


typedef enum enumNhuMidambleCfgBurstTyp2_VHCR
{
 NhuMidambleCfgBurstTyp2_VHCRms4Enum,
 NhuMidambleCfgBurstTyp2_VHCRms8Enum
} EnumNhuMidambleCfgBurstTyp2_VHCR;
typedef TknU32 NhuMidambleCfgBurstTyp2_VHCR;


typedef TknU32 NhuMidambleShiftShort_VHCR;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyptype1midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftLong midambleShift;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyptype1midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyptype1midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_VHCRburstTyptype1midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyptype1midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyptype1
{
 TknPres pres;
 NhuMidambleCfgBurstTyp1and3 midambleCfgBurstTyp1and3;
 NhuMidambleShiftAndBurstTyp_VHCRburstTyptype1midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyptype1;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyptype2midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftShort_VHCR midambleShift;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyptype2midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyptype2midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_VHCRburstTyptype2midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyptype2midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyptype2
{
 TknPres pres;
 NhuMidambleCfgBurstTyp2_VHCR midambleCfgBurstTyp2;
 NhuMidambleShiftAndBurstTyp_VHCRburstTyptype2midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyptype2;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyptype3midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftLong midambleShift;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyptype3midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyptype3midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_VHCRburstTyptype3midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyptype3midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyptype3
{
 TknPres pres;
 NhuMidambleCfgBurstTyp1and3 midambleCfgBurstTyp1and3;
 NhuMidambleShiftAndBurstTyp_VHCRburstTyptype3midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyptype3;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyp
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_VHCRburstTyptype1 type1;
  NhuMidambleShiftAndBurstTyp_VHCRburstTyptype2 type2;
  NhuMidambleShiftAndBurstTyp_VHCRburstTyptype3 type3;
 } val;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyp;

typedef struct NhuMidambleShiftAndBurstTyp_VHCR
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_VHCRburstTyp burstTyp;
} NhuMidambleShiftAndBurstTyp_VHCR;


typedef TknU8 NhuIvdualTimeslotInfo_VHCRtfci_Existence;

typedef struct NhuIvdualTimeslotInfo_VHCR
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
 NhuIvdualTimeslotInfo_VHCRtfci_Existence tfci_Existence;
 NhuMidambleShiftAndBurstTyp_VHCR midambleShiftAndBurstTyp_VHCR;
} NhuIvdualTimeslotInfo_VHCR;


typedef enum enumNhuDL_TS_ChannelisationCode_VHCR
{
 NhuDL_TS_ChannelisationCode_VHCRcc32_1Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_2Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_3Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_4Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc132_5Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_6Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_7Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_8Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_9Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_10Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_11Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_12Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_13Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_14Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_15Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_16Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_17Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_18Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_19Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_20Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_21Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_22Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_23Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_24Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_25Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_26Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_27Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_28Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_29Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_30Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_31Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_32Enum
} EnumNhuDL_TS_ChannelisationCode_VHCR;
typedef TknU32 NhuDL_TS_ChannelisationCode_VHCR;

typedef struct NhuDL_TS_ChannelisationCodesShort_VHCRcodesRepresentationconsecutive
{
 TknPres pres;
 NhuDL_TS_ChannelisationCode_VHCR firstChannelisationCode;
 NhuDL_TS_ChannelisationCode_VHCR lastChannelisationCode;
} NhuDL_TS_ChannelisationCodesShort_VHCRcodesRepresentationconsecutive;


typedef TknStrBSXL NhuDL_TS_ChannelisationCodesShort_VHCRcodesRepresentationbitmap;
typedef struct NhuDL_TS_ChannelisationCodesShort_VHCRcodesRepresentation
{
 TknU8 choice;
 union {
  NhuDL_TS_ChannelisationCodesShort_VHCRcodesRepresentationconsecutive consecutive;
  NhuDL_TS_ChannelisationCodesShort_VHCRcodesRepresentationbitmap bitmap;
 } val;
} NhuDL_TS_ChannelisationCodesShort_VHCRcodesRepresentation;

typedef struct NhuDL_TS_ChannelisationCodesShort_VHCR
{
 TknPres pres;
 NhuDL_TS_ChannelisationCodesShort_VHCRcodesRepresentation codesRepresentation;
} NhuDL_TS_ChannelisationCodesShort_VHCR;

typedef struct NhuDlnkAdditionalTimeslots_VHCRparameterssameAsLast
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
} NhuDlnkAdditionalTimeslots_VHCRparameterssameAsLast;

typedef struct NhuDlnkAdditionalTimeslots_VHCRparametersnewParams
{
 TknPres pres;
 NhuIvdualTimeslotInfo_VHCR individualTimeslotInfo;
 NhuDL_TS_ChannelisationCodesShort_VHCR dl_TS_ChannelisationCodesShort;
} NhuDlnkAdditionalTimeslots_VHCRparametersnewParams;

typedef struct NhuDlnkAdditionalTimeslots_VHCRparameters
{
 TknU8 choice;
 union {
  NhuDlnkAdditionalTimeslots_VHCRparameterssameAsLast sameAsLast;
  NhuDlnkAdditionalTimeslots_VHCRparametersnewParams newParams;
 } val;
} NhuDlnkAdditionalTimeslots_VHCRparameters;

typedef struct NhuDlnkAdditionalTimeslots_VHCR
{
 TknPres pres;
 NhuDlnkAdditionalTimeslots_VHCRparameters parameters;
} NhuDlnkAdditionalTimeslots_VHCR;


typedef TknU32 NhuDlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotsconsecutive;

typedef struct NhuDlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotstimeslotLst
{
 TknU16 noComp;
 NhuDlnkAdditionalTimeslots_VHCR *member;
}NhuDlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotstimeslotLst;

typedef struct NhuDlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslots
{
 TknU8 choice;
 union {
  NhuDlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotsconsecutive consecutive;
  NhuDlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotstimeslotLst timeslotLst;
 } val;
} NhuDlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslots;

typedef struct NhuDlnkTimeslotsCodes_VHCRmoreTimeslots
{
 TknU8 choice;
 union {
  NhuDlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslots additionalTimeslots;
 } val;
} NhuDlnkTimeslotsCodes_VHCRmoreTimeslots;

typedef struct NhuDlnkTimeslotsCodes_VHCR
{
 TknPres pres;
 NhuIvdualTimeslotInfo_VHCR firstIvdualTimeslotInfo;
 NhuDL_TS_ChannelisationCodesShort_VHCR dl_TS_ChannelisationCodesShort;
 NhuDlnkTimeslotsCodes_VHCRmoreTimeslots moreTimeslots;
} NhuDlnkTimeslotsCodes_VHCR;

typedef struct NhuDL_CCTrCh_r7tddOptiontdd384
{
 TknPres pres;
 NhuDlnkTimeslotsCodes_r7 dl_CCTrCH_TimeslotsCodes;
} NhuDL_CCTrCh_r7tddOptiontdd384;

typedef struct NhuDL_CCTrCh_r7tddOptiontdd768
{
 TknPres pres;
 NhuDlnkTimeslotsCodes_VHCR dl_CCTrCH_TimeslotsCodes;
} NhuDL_CCTrCh_r7tddOptiontdd768;

typedef struct NhuDL_CCTrCh_r7tddOptiontdd128
{
 TknPres pres;
 NhuDlnkTimeslotsCodes_LCR_r4 dl_CCTrCH_TimeslotsCodes;
} NhuDL_CCTrCh_r7tddOptiontdd128;

typedef struct NhuDL_CCTrCh_r7tddOption
{
 TknU8 choice;
 union {
  NhuDL_CCTrCh_r7tddOptiontdd384 tdd384;
  NhuDL_CCTrCh_r7tddOptiontdd768 tdd768;
  NhuDL_CCTrCh_r7tddOptiontdd128 tdd128;
 } val;
} NhuDL_CCTrCh_r7tddOption;

typedef struct NhuDL_CCTrCh_r7
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuTimeInfo timeInfo;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuDL_CCTrCh_r7tddOption tddOption;
 NhuUL_CCTrChTPCLst ul_CCTrChTPCLst;
} NhuDL_CCTrCh_r7;

typedef struct NhuDL_CCTrChLst
{
 TknU16 noComp;
 NhuDL_CCTrCh *member;
}NhuDL_CCTrChLst;

typedef struct NhuDL_CCTrChLst_r7
{
 TknU16 noComp;
 NhuDL_CCTrCh_r7 *member;
}NhuDL_CCTrChLst_r7;

typedef struct NhuDL_CCTrChLst_r4
{
 TknU16 noComp;
 NhuDL_CCTrCh_r4 *member;
}NhuDL_CCTrChLst_r4;

typedef struct NhuDL_CCTrChLstToRemove
{
 TknU16 noComp;
 NhuTFCS_IdentityPlain *member;
}NhuDL_CCTrChLstToRemove;


typedef TknU32 NhuSF512_AndCodeNumbersf4;


typedef TknU32 NhuSF512_AndCodeNumbersf8;


typedef TknU32 NhuSF512_AndCodeNumbersf16;


typedef TknU32 NhuSF512_AndCodeNumbersf32;


typedef TknU32 NhuSF512_AndCodeNumbersf64;


typedef TknU32 NhuSF512_AndCodeNumbersf128;


typedef TknU32 NhuSF512_AndCodeNumbersf256;


typedef TknU32 NhuSF512_AndCodeNumbersf512;

typedef struct NhuSF512_AndCodeNumber
{
 TknU8 choice;
 union {
  NhuSF512_AndCodeNumbersf4 sf4;
  NhuSF512_AndCodeNumbersf8 sf8;
  NhuSF512_AndCodeNumbersf16 sf16;
  NhuSF512_AndCodeNumbersf32 sf32;
  NhuSF512_AndCodeNumbersf64 sf64;
  NhuSF512_AndCodeNumbersf128 sf128;
  NhuSF512_AndCodeNumbersf256 sf256;
  NhuSF512_AndCodeNumbersf512 sf512;
 } val;
} NhuSF512_AndCodeNumber;


typedef enum enumNhuScramblingCodeChange
{
 NhuScramblingCodeChangecodeChangeEnum,
 NhuScramblingCodeChangenoCodeChangeEnum
} EnumNhuScramblingCodeChange;
typedef TknU32 NhuScramblingCodeChange;

typedef struct NhuDL_ChannelisationCode
{
 TknPres pres;
 NhuSecondaryScramblingCode secondaryScramblingCode;
 NhuSF512_AndCodeNumber sf_AndCodeNumber;
 NhuScramblingCodeChange scramblingCodeChange;
} NhuDL_ChannelisationCode;

typedef struct NhuDL_ChannelisationCodeLst
{
 TknU16 noComp;
 NhuDL_ChannelisationCode *member;
}NhuDL_ChannelisationCodeLst;


typedef enum enumNhuDPC_Mode
{
 NhuDPC_ModesingleTPCEnum,
 NhuDPC_ModetpcTripletInSoftEnum
} EnumNhuDPC_Mode;
typedef TknU32 NhuDPC_Mode;

typedef struct NhuDL_DPCH_PowerCntrlInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuDPC_Mode dpc_Mode;
} NhuDL_DPCH_PowerCntrlInfomodeSpecificInfofdd;

typedef struct NhuDL_DPCH_PowerCntrlInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuTPC_StepSizeTDD tpc_StepSizeTDD;
} NhuDL_DPCH_PowerCntrlInfomodeSpecificInfotdd;

typedef struct NhuDL_DPCH_PowerCntrlInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_DPCH_PowerCntrlInfomodeSpecificInfofdd fdd;
  NhuDL_DPCH_PowerCntrlInfomodeSpecificInfotdd tdd;
 } val;
} NhuDL_DPCH_PowerCntrlInfomodeSpecificInfo;

typedef struct NhuDL_DPCH_PowerCntrlInfo
{
 TknPres pres;
 NhuDL_DPCH_PowerCntrlInfomodeSpecificInfo modeSpecificInfo;
} NhuDL_DPCH_PowerCntrlInfo;


typedef TknU32 NhuPowerOffsetPilot_pdpdch;

typedef struct NhuRestrictedTrCH
{
 TknPres pres;
 NhuDL_TrCH_Typ dl_restrictedTrCh_Typ;
 NhuTportChannelIdentity restrictedDL_TrCH_Identity;
 NhuAllowedTFI_Lst allowedTFILst;
} NhuRestrictedTrCH;

typedef struct NhuRestrictedTrCH_InfoLst
{
 TknU16 noComp;
 NhuRestrictedTrCH *member;
}NhuRestrictedTrCH_InfoLst;

typedef struct NhuDl_rate_matching_restriction
{
 TknPres pres;
 NhuRestrictedTrCH_InfoLst restrictedTrCH_InfoLst;
} NhuDl_rate_matching_restriction;

typedef struct NhuDL_DPCH_InfoCmncfnHandlinginitialise
{
 TknPres pres;
 NhuCfntargetsfnframeoffset dummy;
} NhuDL_DPCH_InfoCmncfnHandlinginitialise;

typedef struct NhuDL_DPCH_InfoCmncfnHandling
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmncfnHandlinginitialise initialise;
 } val;
} NhuDL_DPCH_InfoCmncfnHandling;


typedef TknU8 NhuDL_DPCH_InfoCmnmodeSpecificInfofddtfci_Existence;

typedef struct NhuDL_DPCH_InfoCmnmodeSpecificInfofdd
{
 TknPres pres;
 NhuDL_DPCH_PowerCntrlInfo dl_DPCH_PowerCntrlInfo;
 NhuPowerOffsetPilot_pdpdch powerOffsetPilot_pdpdch;
 NhuDl_rate_matching_restriction dl_rate_matching_restriction;
 NhuSF512_AndPilot spreadingFactorAndPilot;
 NhuPositionFixedOrFlexible positionFixedOrFlexible;
 NhuDL_DPCH_InfoCmnmodeSpecificInfofddtfci_Existence tfci_Existence;
} NhuDL_DPCH_InfoCmnmodeSpecificInfofdd;

typedef struct NhuDL_DPCH_InfoCmnmodeSpecificInfotdd
{
 TknPres pres;
 NhuDL_DPCH_PowerCntrlInfo dl_DPCH_PowerCntrlInfo;
} NhuDL_DPCH_InfoCmnmodeSpecificInfotdd;

typedef struct NhuDL_DPCH_InfoCmnmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmnmodeSpecificInfofdd fdd;
  NhuDL_DPCH_InfoCmnmodeSpecificInfotdd tdd;
 } val;
} NhuDL_DPCH_InfoCmnmodeSpecificInfo;

typedef struct NhuDL_DPCH_InfoCmn
{
 TknPres pres;
 NhuDL_DPCH_InfoCmncfnHandling cfnHandling;
 NhuDL_DPCH_InfoCmnmodeSpecificInfo modeSpecificInfo;
} NhuDL_DPCH_InfoCmn;


typedef TknU32 NhuTGCFN;


typedef enum enumNhuTGMP
{
 NhuTGMPtdd_MeasurementEnum,
 NhuTGMPfdd_MeasurementEnum,
 NhuTGMPgsm_CarrierRSSIMeasurementEnum,
 NhuTGMPgsm_initialBSICIdentificationEnum,
 NhuTGMPgsmBSICReconfirmationEnum,
 NhuTGMPmulti_carrierEnum
} EnumNhuTGMP;
typedef TknU32 NhuTGMP;


typedef TknU32 NhuTGPRC;


typedef TknU32 NhuTGSN;


typedef TknU32 NhuTGL;


typedef TknU32 NhuTGD;


typedef TknU32 NhuTGPL;


typedef enum enumNhuRPP
{
 NhuRPPmode0Enum,
 NhuRPPmode1Enum
} EnumNhuRPP;
typedef TknU32 NhuRPP;


typedef enum enumNhuITP
{
 NhuITPmode0Enum,
 NhuITPmode1Enum
} EnumNhuITP;
typedef TknU32 NhuITP;


typedef enum enumNhuUL_CompressedModeMethod
{
 NhuUL_CompressedModeMethodsf_2Enum,
 NhuUL_CompressedModeMethodhigherLyrSchedulingEnum
} EnumNhuUL_CompressedModeMethod;
typedef TknU32 NhuUL_CompressedModeMethod;


typedef enum enumNhuDL_CompressedModeMethod
{
 NhuDL_CompressedModeMethoddummyEnum,
 NhuDL_CompressedModeMethodsf_2Enum,
 NhuDL_CompressedModeMethodhigherLyrSchedulingEnum
} EnumNhuDL_CompressedModeMethod;
typedef TknU32 NhuDL_CompressedModeMethod;

typedef struct NhuUL_DL_Modeul_and_dl
{
 TknPres pres;
 NhuUL_CompressedModeMethod ul;
 NhuDL_CompressedModeMethod dl;
} NhuUL_DL_Modeul_and_dl;

typedef struct NhuUL_DL_Mode
{
 TknU8 choice;
 union {
  NhuUL_CompressedModeMethod ul;
  NhuDL_CompressedModeMethod dl;
  NhuUL_DL_Modeul_and_dl ul_and_dl;
 } val;
} NhuUL_DL_Mode;


typedef enum enumNhuDL_FrameTyp
{
 NhuDL_FrameTypdl_FrameTypAEnum,
 NhuDL_FrameTypdl_FrameTypBEnum
} EnumNhuDL_FrameTyp;
typedef TknU32 NhuDL_FrameTyp;


typedef TknU32 NhuNidentifyAbort;


typedef TknU32 NhuTreconfirmAbort;

typedef struct NhuTGPS_CfgParams
{
 TknPres pres;
 NhuTGMP tgmp;
 NhuTGPRC tgprc;
 NhuTGSN tgsn;
 NhuTGL tgl1;
 NhuTGL tgl2;
 NhuTGD tgd;
 NhuTGPL tgpl1;
 NhuTGPL dummy;
 NhuRPP rpp;
 NhuITP itp;
 NhuUL_DL_Mode ul_DL_Mode;
 NhuDL_FrameTyp dl_FrameTyp;
 NhuDeltaSIR deltaSIR1;
 NhuDeltaSIR deltaSIRAfter1;
 NhuDeltaSIR deltaSIR2;
 NhuDeltaSIR deltaSIRAfter2;
 NhuNidentifyAbort nidentifyAbort;
 NhuTreconfirmAbort treconfirmAbort;
} NhuTGPS_CfgParams;

typedef struct NhuTGP_Sequencetgps_Statusactivate
{
 TknPres pres;
 NhuTGCFN tgcfn;
} NhuTGP_Sequencetgps_Statusactivate;

typedef struct NhuTGP_Sequencetgps_Status
{
 TknU8 choice;
 union {
  NhuTGP_Sequencetgps_Statusactivate activate;
 } val;
} NhuTGP_Sequencetgps_Status;

typedef struct NhuTGP_Sequence
{
 TknPres pres;
 NhuTGPSI tgpsi;
 NhuTGP_Sequencetgps_Status tgps_Status;
 NhuTGPS_CfgParams tgps_CfgParams;
} NhuTGP_Sequence;

typedef struct NhuTGP_SequenceLst
{
 TknU16 noComp;
 NhuTGP_Sequence *member;
}NhuTGP_SequenceLst;

typedef struct NhuDPCH_CompressedModeInfo
{
 TknPres pres;
 NhuTGP_SequenceLst tgp_SequenceLst;
} NhuDPCH_CompressedModeInfo;


typedef enum enumNhuTX_DiversityMode
{
 NhuTX_DiversityModenoDiversityEnum,
 NhuTX_DiversityModesttdEnum,
 NhuTX_DiversityModeclosedLoopMode1Enum,
 NhuTX_DiversityModedummyEnum
} EnumNhuTX_DiversityMode;
typedef TknU32 NhuTX_DiversityMode;


typedef enum enumNhuS_Field
{
 NhuS_Fielde1bitEnum,
 NhuS_Fielde2bitsEnum
} EnumNhuS_Field;
typedef TknU32 NhuS_Field;

typedef struct NhuSSDT_Info
{
 TknPres pres;
 NhuS_Field s_Field;
 NhuCodeWordSet codeWordSet;
} NhuSSDT_Info;

typedef struct NhuDL_CmnInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuDefaultDPCH_OffsetValueFDD defaultDPCH_OffsetValue;
 NhuDPCH_CompressedModeInfo dpch_CompressedModeInfo;
 NhuTX_DiversityMode tx_DiversityMode;
 NhuSSDT_Info dummy;
} NhuDL_CmnInfomodeSpecificInfofdd;

typedef struct NhuDL_CmnInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuDefaultDPCH_OffsetValueTDD defaultDPCH_OffsetValue;
} NhuDL_CmnInfomodeSpecificInfotdd;

typedef struct NhuDL_CmnInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_CmnInfomodeSpecificInfofdd fdd;
  NhuDL_CmnInfomodeSpecificInfotdd tdd;
 } val;
} NhuDL_CmnInfomodeSpecificInfo;

typedef struct NhuDL_CmnInfo
{
 TknPres pres;
 NhuDL_DPCH_InfoCmn dl_DPCH_InfoCmn;
 NhuDL_CmnInfomodeSpecificInfo modeSpecificInfo;
} NhuDL_CmnInfo;

typedef struct NhuDL_DPCH_InfoCmn_r4cfnHandlinginitialise
{
 TknPres pres;
 NhuCfntargetsfnframeoffset dummy;
} NhuDL_DPCH_InfoCmn_r4cfnHandlinginitialise;

typedef struct NhuDL_DPCH_InfoCmn_r4cfnHandling
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmn_r4cfnHandlinginitialise initialise;
 } val;
} NhuDL_DPCH_InfoCmn_r4cfnHandling;


typedef TknU8 NhuDL_DPCH_InfoCmn_r4modeSpecificInfofddtfci_Existence;

typedef struct NhuDL_DPCH_InfoCmn_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuDL_DPCH_PowerCntrlInfo dl_DPCH_PowerCntrlInfo;
 NhuPowerOffsetPilot_pdpdch powerOffsetPilot_pdpdch;
 NhuDl_rate_matching_restriction dl_rate_matching_restriction;
 NhuSF512_AndPilot spreadingFactorAndPilot;
 NhuPositionFixedOrFlexible positionFixedOrFlexible;
 NhuDL_DPCH_InfoCmn_r4modeSpecificInfofddtfci_Existence tfci_Existence;
} NhuDL_DPCH_InfoCmn_r4modeSpecificInfofdd;

typedef struct NhuDL_DPCH_InfoCmn_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuDL_DPCH_PowerCntrlInfo dl_DPCH_PowerCntrlInfo;
} NhuDL_DPCH_InfoCmn_r4modeSpecificInfotdd;

typedef struct NhuDL_DPCH_InfoCmn_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmn_r4modeSpecificInfofdd fdd;
  NhuDL_DPCH_InfoCmn_r4modeSpecificInfotdd tdd;
 } val;
} NhuDL_DPCH_InfoCmn_r4modeSpecificInfo;

typedef struct NhuDL_DPCH_InfoCmn_r4
{
 TknPres pres;
 NhuDL_DPCH_InfoCmn_r4cfnHandling cfnHandling;
 NhuDL_DPCH_InfoCmn_r4modeSpecificInfo modeSpecificInfo;
 NhuMAC_d_HFN_initial_value mac_d_HFN_initial_value;
} NhuDL_DPCH_InfoCmn_r4;


typedef enum enumNhuSSDT_UL
{
 NhuSSDT_ULulEnum,
 NhuSSDT_ULul_AndDLEnum
} EnumNhuSSDT_UL;
typedef TknU32 NhuSSDT_UL;

typedef struct NhuSSDT_Info_r4
{
 TknPres pres;
 NhuS_Field s_Field;
 NhuCodeWordSet codeWordSet;
 NhuSSDT_UL ssdt_UL_r4;
} NhuSSDT_Info_r4;

typedef struct NhuDL_CmnInfo_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuDefaultDPCH_OffsetValueFDD defaultDPCH_OffsetValue;
 NhuDPCH_CompressedModeInfo dpch_CompressedModeInfo;
 NhuTX_DiversityMode tx_DiversityMode;
 NhuSSDT_Info_r4 dummy;
} NhuDL_CmnInfo_r4modeSpecificInfofdd;


typedef TknU8 NhuDL_CmnInfo_r4modeSpecificInfotddtddOptiontdd128tstd_Indicator;

typedef struct NhuDL_CmnInfo_r4modeSpecificInfotddtddOptiontdd128
{
 TknPres pres;
 NhuDL_CmnInfo_r4modeSpecificInfotddtddOptiontdd128tstd_Indicator tstd_Indicator;
} NhuDL_CmnInfo_r4modeSpecificInfotddtddOptiontdd128;

typedef struct NhuDL_CmnInfo_r4modeSpecificInfotddtddOption
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r4modeSpecificInfotddtddOptiontdd128 tdd128;
 } val;
} NhuDL_CmnInfo_r4modeSpecificInfotddtddOption;

typedef struct NhuDL_CmnInfo_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuDL_CmnInfo_r4modeSpecificInfotddtddOption tddOption;
 NhuDefaultDPCH_OffsetValueTDD defaultDPCH_OffsetValue;
} NhuDL_CmnInfo_r4modeSpecificInfotdd;

typedef struct NhuDL_CmnInfo_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r4modeSpecificInfofdd fdd;
  NhuDL_CmnInfo_r4modeSpecificInfotdd tdd;
 } val;
} NhuDL_CmnInfo_r4modeSpecificInfo;

typedef struct NhuDL_CmnInfo_r4
{
 TknPres pres;
 NhuDL_DPCH_InfoCmn_r4 dl_DPCH_InfoCmn;
 NhuDL_CmnInfo_r4modeSpecificInfo modeSpecificInfo;
} NhuDL_CmnInfo_r4;

typedef struct NhuDL_CmnInfo_r5modeSpecificInfofdd
{
 TknPres pres;
 NhuDefaultDPCH_OffsetValueFDD defaultDPCH_OffsetValue;
 NhuDPCH_CompressedModeInfo dpch_CompressedModeInfo;
 NhuTX_DiversityMode tx_DiversityMode;
 NhuSSDT_Info_r4 dummy;
} NhuDL_CmnInfo_r5modeSpecificInfofdd;


typedef TknU8 NhuDL_CmnInfo_r5modeSpecificInfotddtddOptiontdd128tstd_Indicator;

typedef struct NhuDL_CmnInfo_r5modeSpecificInfotddtddOptiontdd128
{
 TknPres pres;
 NhuDL_CmnInfo_r5modeSpecificInfotddtddOptiontdd128tstd_Indicator tstd_Indicator;
} NhuDL_CmnInfo_r5modeSpecificInfotddtddOptiontdd128;

typedef struct NhuDL_CmnInfo_r5modeSpecificInfotddtddOption
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r5modeSpecificInfotddtddOptiontdd128 tdd128;
 } val;
} NhuDL_CmnInfo_r5modeSpecificInfotddtddOption;

typedef struct NhuDL_CmnInfo_r5modeSpecificInfotdd
{
 TknPres pres;
 NhuDL_CmnInfo_r5modeSpecificInfotddtddOption tddOption;
 NhuDefaultDPCH_OffsetValueTDD defaultDPCH_OffsetValue;
} NhuDL_CmnInfo_r5modeSpecificInfotdd;

typedef struct NhuDL_CmnInfo_r5modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r5modeSpecificInfofdd fdd;
  NhuDL_CmnInfo_r5modeSpecificInfotdd tdd;
 } val;
} NhuDL_CmnInfo_r5modeSpecificInfo;


typedef enum enumNhuDL_CmnInfo_r5mac_hsResetIndicator
{
 NhuDL_CmnInfo_r5mac_hsResetIndicatortrueEnum
} EnumNhuDL_CmnInfo_r5mac_hsResetIndicator;
typedef TknU32 NhuDL_CmnInfo_r5mac_hsResetIndicator;

typedef struct NhuDL_CmnInfo_r5
{
 TknPres pres;
 NhuDL_DPCH_InfoCmn_r4 dl_DPCH_InfoCmn;
 NhuDL_CmnInfo_r5modeSpecificInfo modeSpecificInfo;
 NhuDL_CmnInfo_r5mac_hsResetIndicator mac_hsResetIndicator;
} NhuDL_CmnInfo_r5;


typedef enum enumNhuTimingMaintainedSynchInd
{
 NhuTimingMaintainedSynchIndfalseEnum
} EnumNhuTimingMaintainedSynchInd;
typedef TknU32 NhuTimingMaintainedSynchInd;

typedef struct NhuDL_DPCH_InfoCmn_r6cfnHandlingmaintain
{
 TknPres pres;
 NhuTimingMaintainedSynchInd timingmaintainedsynchind;
} NhuDL_DPCH_InfoCmn_r6cfnHandlingmaintain;

typedef struct NhuDL_DPCH_InfoCmn_r6cfnHandling
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmn_r6cfnHandlingmaintain maintain;
 } val;
} NhuDL_DPCH_InfoCmn_r6cfnHandling;


typedef TknU8 NhuDL_DPCH_InfoCmn_r6modeSpecificInfofddtfci_Existence;

typedef struct NhuDL_DPCH_InfoCmn_r6modeSpecificInfofdd
{
 TknPres pres;
 NhuDL_DPCH_PowerCntrlInfo dl_DPCH_PowerCntrlInfo;
 NhuPowerOffsetPilot_pdpdch powerOffsetPilot_pdpdch;
 NhuDl_rate_matching_restriction dl_rate_matching_restriction;
 NhuSF512_AndPilot spreadingFactorAndPilot;
 NhuPositionFixedOrFlexible positionFixedOrFlexible;
 NhuDL_DPCH_InfoCmn_r6modeSpecificInfofddtfci_Existence tfci_Existence;
} NhuDL_DPCH_InfoCmn_r6modeSpecificInfofdd;

typedef struct NhuDL_DPCH_InfoCmn_r6modeSpecificInfotdd
{
 TknPres pres;
 NhuDL_DPCH_PowerCntrlInfo dl_DPCH_PowerCntrlInfo;
} NhuDL_DPCH_InfoCmn_r6modeSpecificInfotdd;

typedef struct NhuDL_DPCH_InfoCmn_r6modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmn_r6modeSpecificInfofdd fdd;
  NhuDL_DPCH_InfoCmn_r6modeSpecificInfotdd tdd;
 } val;
} NhuDL_DPCH_InfoCmn_r6modeSpecificInfo;

typedef struct NhuDL_DPCH_InfoCmn_r6
{
 TknPres pres;
 NhuDL_DPCH_InfoCmn_r6cfnHandling cfnHandling;
 NhuDL_DPCH_InfoCmn_r6modeSpecificInfo modeSpecificInfo;
 NhuMAC_d_HFN_initial_value mac_d_HFN_initial_value;
} NhuDL_DPCH_InfoCmn_r6;

typedef struct NhuDL_FDPCH_InfoCmn_r6cfnHandlingmaintain
{
 TknPres pres;
 NhuTimingMaintainedSynchInd timingmaintainedsynchind;
} NhuDL_FDPCH_InfoCmn_r6cfnHandlingmaintain;

typedef struct NhuDL_FDPCH_InfoCmn_r6cfnHandling
{
 TknU8 choice;
 union {
  NhuDL_FDPCH_InfoCmn_r6cfnHandlingmaintain maintain;
 } val;
} NhuDL_FDPCH_InfoCmn_r6cfnHandling;


typedef TknU32 NhuDL_FDPCH_InfoCmn_r6dl_FDPCH_TPCcommandErrRate;

typedef struct NhuDL_FDPCH_InfoCmn_r6
{
 TknPres pres;
 NhuDL_FDPCH_InfoCmn_r6cfnHandling cfnHandling;
 NhuDL_DPCH_PowerCntrlInfo dl_FDPCH_PowerCntrlInfo;
 NhuDL_FDPCH_InfoCmn_r6dl_FDPCH_TPCcommandErrRate dl_FDPCH_TPCcommandErrRate;
} NhuDL_FDPCH_InfoCmn_r6;

typedef struct NhuDL_CmnInfo_r6dl_dpchInfoCmn
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmn_r6 dl_DPCH_InfoCmn;
  NhuDL_FDPCH_InfoCmn_r6 dl_FDPCH_InfoCmn;
 } val;
} NhuDL_CmnInfo_r6dl_dpchInfoCmn;

typedef struct NhuDL_CmnInfo_r6modeSpecificInfofdd
{
 TknPres pres;
 NhuDefaultDPCH_OffsetValueFDD defaultDPCH_OffsetValue;
 NhuDPCH_CompressedModeInfo dpch_CompressedModeInfo;
 NhuTX_DiversityMode tx_DiversityMode;
} NhuDL_CmnInfo_r6modeSpecificInfofdd;


typedef TknU8 NhuDL_CmnInfo_r6modeSpecificInfotddtddOptiontdd128tstd_Indicator;

typedef struct NhuDL_CmnInfo_r6modeSpecificInfotddtddOptiontdd128
{
 TknPres pres;
 NhuDL_CmnInfo_r6modeSpecificInfotddtddOptiontdd128tstd_Indicator tstd_Indicator;
} NhuDL_CmnInfo_r6modeSpecificInfotddtddOptiontdd128;

typedef struct NhuDL_CmnInfo_r6modeSpecificInfotddtddOption
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r6modeSpecificInfotddtddOptiontdd128 tdd128;
 } val;
} NhuDL_CmnInfo_r6modeSpecificInfotddtddOption;

typedef struct NhuDL_CmnInfo_r6modeSpecificInfotdd
{
 TknPres pres;
 NhuDL_CmnInfo_r6modeSpecificInfotddtddOption tddOption;
 NhuDefaultDPCH_OffsetValueTDD defaultDPCH_OffsetValue;
} NhuDL_CmnInfo_r6modeSpecificInfotdd;

typedef struct NhuDL_CmnInfo_r6modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r6modeSpecificInfofdd fdd;
  NhuDL_CmnInfo_r6modeSpecificInfotdd tdd;
 } val;
} NhuDL_CmnInfo_r6modeSpecificInfo;


typedef enum enumNhuDL_CmnInfo_r6mac_hsResetIndicator
{
 NhuDL_CmnInfo_r6mac_hsResetIndicatortrueEnum
} EnumNhuDL_CmnInfo_r6mac_hsResetIndicator;
typedef TknU32 NhuDL_CmnInfo_r6mac_hsResetIndicator;


typedef enum enumNhuDL_CmnInfo_r6postVerificationPeriod
{
 NhuDL_CmnInfo_r6postVerificationPeriodtrueEnum
} EnumNhuDL_CmnInfo_r6postVerificationPeriod;
typedef TknU32 NhuDL_CmnInfo_r6postVerificationPeriod;

typedef struct NhuDL_CmnInfo_r6
{
 TknPres pres;
 NhuDL_CmnInfo_r6dl_dpchInfoCmn dl_dpchInfoCmn;
 NhuDL_CmnInfo_r6modeSpecificInfo modeSpecificInfo;
 NhuDL_CmnInfo_r6mac_hsResetIndicator mac_hsResetIndicator;
 NhuDL_CmnInfo_r6postVerificationPeriod postVerificationPeriod;
} NhuDL_CmnInfo_r6;

typedef struct NhuDL_CmnInfo_r7dl_dpchInfoCmn
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmn_r6 dl_DPCH_InfoCmn;
  NhuDL_FDPCH_InfoCmn_r6 dl_FDPCH_InfoCmn;
 } val;
} NhuDL_CmnInfo_r7dl_dpchInfoCmn;

typedef struct NhuDL_CmnInfo_r7modeSpecificInfofdd
{
 TknPres pres;
 NhuDefaultDPCH_OffsetValueFDD defaultDPCH_OffsetValue;
 NhuDPCH_CompressedModeInfo dpch_CompressedModeInfo;
 NhuTX_DiversityMode tx_DiversityMode;
} NhuDL_CmnInfo_r7modeSpecificInfofdd;


typedef TknU8 NhuDL_CmnInfo_r7modeSpecificInfotddtddOptiontdd128tstd_Indicator;

typedef struct NhuDL_CmnInfo_r7modeSpecificInfotddtddOptiontdd128
{
 TknPres pres;
 NhuDL_CmnInfo_r7modeSpecificInfotddtddOptiontdd128tstd_Indicator tstd_Indicator;
} NhuDL_CmnInfo_r7modeSpecificInfotddtddOptiontdd128;

typedef struct NhuDL_CmnInfo_r7modeSpecificInfotddtddOption
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r7modeSpecificInfotddtddOptiontdd128 tdd128;
 } val;
} NhuDL_CmnInfo_r7modeSpecificInfotddtddOption;

typedef struct NhuDL_CmnInfo_r7modeSpecificInfotdd
{
 TknPres pres;
 NhuDL_CmnInfo_r7modeSpecificInfotddtddOption tddOption;
 NhuDefaultDPCH_OffsetValueTDD defaultDPCH_OffsetValue;
} NhuDL_CmnInfo_r7modeSpecificInfotdd;

typedef struct NhuDL_CmnInfo_r7modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r7modeSpecificInfofdd fdd;
  NhuDL_CmnInfo_r7modeSpecificInfotdd tdd;
 } val;
} NhuDL_CmnInfo_r7modeSpecificInfo;


typedef enum enumNhuDL_CmnInfo_r7mac_hsResetIndicator
{
 NhuDL_CmnInfo_r7mac_hsResetIndicatortrueEnum
} EnumNhuDL_CmnInfo_r7mac_hsResetIndicator;
typedef TknU32 NhuDL_CmnInfo_r7mac_hsResetIndicator;


typedef enum enumNhuDL_CmnInfo_r7postVerificationPeriod
{
 NhuDL_CmnInfo_r7postVerificationPeriodtrueEnum
} EnumNhuDL_CmnInfo_r7postVerificationPeriod;
typedef TknU32 NhuDL_CmnInfo_r7postVerificationPeriod;

typedef struct NhuDL_CmnInfo_r7
{
 TknPres pres;
 NhuDL_CmnInfo_r7dl_dpchInfoCmn dl_dpchInfoCmn;
 NhuDL_CmnInfo_r7modeSpecificInfo modeSpecificInfo;
 NhuDL_CmnInfo_r7mac_hsResetIndicator mac_hsResetIndicator;
 NhuDL_CmnInfo_r7postVerificationPeriod postVerificationPeriod;
} NhuDL_CmnInfo_r7;


typedef enum enumNhuTGMP_r8
{
 NhuTGMP_r8tdd_MeasurementEnum,
 NhuTGMP_r8fdd_MeasurementEnum,
 NhuTGMP_r8gsm_CarrierRSSIMeasurementEnum,
 NhuTGMP_r8gsm_initialBSICIdentificationEnum,
 NhuTGMP_r8gsmBSICReconfirmationEnum,
 NhuTGMP_r8multi_carrierEnum,
 NhuTGMP_r8e_UTRAEnum,
 NhuTGMP_r8spareEnum
} EnumNhuTGMP_r8;
typedef TknU32 NhuTGMP_r8;

typedef struct NhuTGPS_CfgParams_r8
{
 TknPres pres;
 NhuTGMP_r8 tgmp;
 NhuTGPRC tgprc;
 NhuTGSN tgsn;
 NhuTGL tgl1;
 NhuTGL tgl2;
 NhuTGD tgd;
 NhuTGPL tgpl1;
 NhuRPP rpp;
 NhuITP itp;
 NhuUL_DL_Mode ul_DL_Mode;
 NhuDL_FrameTyp dl_FrameTyp;
 NhuDeltaSIR deltaSIR1;
 NhuDeltaSIR deltaSIRAfter1;
 NhuDeltaSIR deltaSIR2;
 NhuDeltaSIR deltaSIRAfter2;
 NhuNidentifyAbort nidentifyAbort;
 NhuTreconfirmAbort treconfirmAbort;
} NhuTGPS_CfgParams_r8;

typedef struct NhuTGP_Sequence_r8tgps_Statusactivate
{
 TknPres pres;
 NhuTGCFN tgcfn;
} NhuTGP_Sequence_r8tgps_Statusactivate;

typedef struct NhuTGP_Sequence_r8tgps_Status
{
 TknU8 choice;
 union {
  NhuTGP_Sequence_r8tgps_Statusactivate activate;
 } val;
} NhuTGP_Sequence_r8tgps_Status;

typedef struct NhuTGP_Sequence_r8
{
 TknPres pres;
 NhuTGPSI tgpsi;
 NhuTGP_Sequence_r8tgps_Status tgps_Status;
 NhuTGPS_CfgParams_r8 tgps_CfgParams;
} NhuTGP_Sequence_r8;

typedef struct NhuTGP_SequenceLst_r8
{
 TknU16 noComp;
 NhuTGP_Sequence_r8 *member;
}NhuTGP_SequenceLst_r8;

typedef struct NhuDPCH_CompressedModeInfo_r8
{
 TknPres pres;
 NhuTGP_SequenceLst_r8 tgp_SequenceLst;
} NhuDPCH_CompressedModeInfo_r8;

typedef struct NhuDL_CmnInfo_r8dl_dpchInfoCmn
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmn_r6 dl_DPCH_InfoCmn;
  NhuDL_FDPCH_InfoCmn_r6 dl_FDPCH_InfoCmn;
 } val;
} NhuDL_CmnInfo_r8dl_dpchInfoCmn;

typedef struct NhuDL_CmnInfo_r8modeSpecificInfofdd
{
 TknPres pres;
 NhuDefaultDPCH_OffsetValueFDD defaultDPCH_OffsetValue;
 NhuDPCH_CompressedModeInfo_r8 dpch_CompressedModeInfo;
 NhuTX_DiversityMode tx_DiversityMode;
} NhuDL_CmnInfo_r8modeSpecificInfofdd;


typedef TknU8 NhuDL_CmnInfo_r8modeSpecificInfotddtddOptiontdd128tstd_Indicator;

typedef struct NhuDL_CmnInfo_r8modeSpecificInfotddtddOptiontdd128
{
 TknPres pres;
 NhuDL_CmnInfo_r8modeSpecificInfotddtddOptiontdd128tstd_Indicator tstd_Indicator;
} NhuDL_CmnInfo_r8modeSpecificInfotddtddOptiontdd128;

typedef struct NhuDL_CmnInfo_r8modeSpecificInfotddtddOption
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r8modeSpecificInfotddtddOptiontdd128 tdd128;
 } val;
} NhuDL_CmnInfo_r8modeSpecificInfotddtddOption;

typedef struct NhuDL_CmnInfo_r8modeSpecificInfotdd
{
 TknPres pres;
 NhuDL_CmnInfo_r8modeSpecificInfotddtddOption tddOption;
 NhuDefaultDPCH_OffsetValueTDD defaultDPCH_OffsetValue;
} NhuDL_CmnInfo_r8modeSpecificInfotdd;

typedef struct NhuDL_CmnInfo_r8modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r8modeSpecificInfofdd fdd;
  NhuDL_CmnInfo_r8modeSpecificInfotdd tdd;
 } val;
} NhuDL_CmnInfo_r8modeSpecificInfo;


typedef enum enumNhuDL_CmnInfo_r8mac_hsResetIndicator
{
 NhuDL_CmnInfo_r8mac_hsResetIndicatortrueEnum
} EnumNhuDL_CmnInfo_r8mac_hsResetIndicator;
typedef TknU32 NhuDL_CmnInfo_r8mac_hsResetIndicator;


typedef enum enumNhuDL_CmnInfo_r8postVerificationPeriod
{
 NhuDL_CmnInfo_r8postVerificationPeriodtrueEnum
} EnumNhuDL_CmnInfo_r8postVerificationPeriod;
typedef TknU32 NhuDL_CmnInfo_r8postVerificationPeriod;

typedef struct NhuDL_CmnInfo_r8
{
 TknPres pres;
 NhuDL_CmnInfo_r8dl_dpchInfoCmn dl_dpchInfoCmn;
 NhuDL_CmnInfo_r8modeSpecificInfo modeSpecificInfo;
 NhuDL_CmnInfo_r8mac_hsResetIndicator mac_hsResetIndicator;
 NhuDL_CmnInfo_r8postVerificationPeriod postVerificationPeriod;
} NhuDL_CmnInfo_r8;


typedef enum enumNhuTGPS_CfgParams_r10freqSpecificCompressedMode
{
 NhuTGPS_CfgParams_r10freqSpecificCompressedModetrueEnum
} EnumNhuTGPS_CfgParams_r10freqSpecificCompressedMode;
typedef TknU32 NhuTGPS_CfgParams_r10freqSpecificCompressedMode;

typedef struct NhuTGPS_CfgParams_r10
{
 TknPres pres;
 NhuTGMP_r8 tgmp;
 NhuTGPS_CfgParams_r10freqSpecificCompressedMode freqSpecificCompressedMode;
 NhuTGPRC tgprc;
 NhuTGSN tgsn;
 NhuTGL tgl1;
 NhuTGL tgl2;
 NhuTGD tgd;
 NhuTGPL tgpl1;
 NhuRPP rpp;
 NhuITP itp;
 NhuUL_DL_Mode ul_DL_Mode;
 NhuDL_FrameTyp dl_FrameTyp;
 NhuDeltaSIR deltaSIR1;
 NhuDeltaSIR deltaSIRAfter1;
 NhuDeltaSIR deltaSIR2;
 NhuDeltaSIR deltaSIRAfter2;
 NhuNidentifyAbort nidentifyAbort;
 NhuTreconfirmAbort treconfirmAbort;
} NhuTGPS_CfgParams_r10;

typedef struct NhuTGP_Sequence_r10tgps_Statusactivate
{
 TknPres pres;
 NhuTGCFN tgcfn;
} NhuTGP_Sequence_r10tgps_Statusactivate;

typedef struct NhuTGP_Sequence_r10tgps_Status
{
 TknU8 choice;
 union {
  NhuTGP_Sequence_r10tgps_Statusactivate activate;
 } val;
} NhuTGP_Sequence_r10tgps_Status;

typedef struct NhuTGP_Sequence_r10
{
 TknPres pres;
 NhuTGPSI tgpsi;
 NhuTGP_Sequence_r10tgps_Status tgps_Status;
 NhuTGPS_CfgParams_r10 tgps_CfgParams;
} NhuTGP_Sequence_r10;

typedef struct NhuTGP_SequenceLst_r10
{
 TknU16 noComp;
 NhuTGP_Sequence_r10 *member;
}NhuTGP_SequenceLst_r10;

typedef struct NhuDPCH_CompressedModeInfo_r10
{
 TknPres pres;
 NhuTGP_SequenceLst_r10 tgp_SequenceLst;
} NhuDPCH_CompressedModeInfo_r10;

typedef struct NhuDL_CmnInfo_r10dl_dpchInfoCmn
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmn_r6 dl_DPCH_InfoCmn;
  NhuDL_FDPCH_InfoCmn_r6 dl_FDPCH_InfoCmn;
 } val;
} NhuDL_CmnInfo_r10dl_dpchInfoCmn;

typedef struct NhuDL_CmnInfo_r10modeSpecificInfofdd
{
 TknPres pres;
 NhuDefaultDPCH_OffsetValueFDD defaultDPCH_OffsetValue;
 NhuDPCH_CompressedModeInfo_r10 dpch_CompressedModeInfo;
 NhuTX_DiversityMode tx_DiversityMode;
} NhuDL_CmnInfo_r10modeSpecificInfofdd;


typedef TknU8 NhuDL_CmnInfo_r10modeSpecificInfotddtddOptiontdd128tstd_Indicator;

typedef struct NhuDL_CmnInfo_r10modeSpecificInfotddtddOptiontdd128
{
 TknPres pres;
 NhuDL_CmnInfo_r10modeSpecificInfotddtddOptiontdd128tstd_Indicator tstd_Indicator;
} NhuDL_CmnInfo_r10modeSpecificInfotddtddOptiontdd128;

typedef struct NhuDL_CmnInfo_r10modeSpecificInfotddtddOption
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r10modeSpecificInfotddtddOptiontdd128 tdd128;
 } val;
} NhuDL_CmnInfo_r10modeSpecificInfotddtddOption;

typedef struct NhuDL_CmnInfo_r10modeSpecificInfotdd
{
 TknPres pres;
 NhuDL_CmnInfo_r10modeSpecificInfotddtddOption tddOption;
 NhuDefaultDPCH_OffsetValueTDD defaultDPCH_OffsetValue;
} NhuDL_CmnInfo_r10modeSpecificInfotdd;

typedef struct NhuDL_CmnInfo_r10modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r10modeSpecificInfofdd fdd;
  NhuDL_CmnInfo_r10modeSpecificInfotdd tdd;
 } val;
} NhuDL_CmnInfo_r10modeSpecificInfo;


typedef enum enumNhuDL_CmnInfo_r10mac_hsResetIndicator
{
 NhuDL_CmnInfo_r10mac_hsResetIndicatortrueEnum
} EnumNhuDL_CmnInfo_r10mac_hsResetIndicator;
typedef TknU32 NhuDL_CmnInfo_r10mac_hsResetIndicator;


typedef enum enumNhuDL_CmnInfo_r10postVerificationPeriod
{
 NhuDL_CmnInfo_r10postVerificationPeriodtrueEnum
} EnumNhuDL_CmnInfo_r10postVerificationPeriod;
typedef TknU32 NhuDL_CmnInfo_r10postVerificationPeriod;

typedef struct NhuDL_CmnInfo_r10
{
 TknPres pres;
 NhuDL_CmnInfo_r10dl_dpchInfoCmn dl_dpchInfoCmn;
 NhuDL_CmnInfo_r10modeSpecificInfo modeSpecificInfo;
 NhuDL_CmnInfo_r10mac_hsResetIndicator mac_hsResetIndicator;
 NhuDL_CmnInfo_r10postVerificationPeriod postVerificationPeriod;
} NhuDL_CmnInfo_r10;

typedef struct NhuDL_DPCH_InfoCmnPost
{
 TknPres pres;
 NhuDL_DPCH_PowerCntrlInfo dl_DPCH_PowerCntrlInfo;
} NhuDL_DPCH_InfoCmnPost;

typedef struct NhuDL_CmnInfoPost
{
 TknPres pres;
 NhuDL_DPCH_InfoCmnPost dl_DPCH_InfoCmn;
} NhuDL_CmnInfoPost;


typedef enum enumNhuPCPICH_UsageForChannelEst
{
 NhuPCPICH_UsageForChannelEstmayBeUsedEnum,
 NhuPCPICH_UsageForChannelEstshallNotBeUsedEnum
} EnumNhuPCPICH_UsageForChannelEst;
typedef TknU32 NhuPCPICH_UsageForChannelEst;


typedef TknU32 NhuDPCH_FrameOffset;

typedef struct NhuSecondaryCPICH_Info
{
 TknPres pres;
 NhuSecondaryScramblingCode secondaryDL_ScramblingCode;
 NhuChannelisationCode256 channelisationCode;
} NhuSecondaryCPICH_Info;


typedef TknU32 NhuTPC_CombinationIdx;


typedef enum enumNhuSSDT_CellIdentity
{
 NhuSSDT_CellIdentityssdt_id_aEnum,
 NhuSSDT_CellIdentityssdt_id_bEnum,
 NhuSSDT_CellIdentityssdt_id_cEnum,
 NhuSSDT_CellIdentityssdt_id_dEnum,
 NhuSSDT_CellIdentityssdt_id_eEnum,
 NhuSSDT_CellIdentityssdt_id_fEnum,
 NhuSSDT_CellIdentityssdt_id_gEnum,
 NhuSSDT_CellIdentityssdt_id_hEnum
} EnumNhuSSDT_CellIdentity;
typedef TknU32 NhuSSDT_CellIdentity;

typedef struct NhuDL_DPCH_InfoPerRLfdd
{
 TknPres pres;
 NhuPCPICH_UsageForChannelEst pCPICH_UsageForChannelEst;
 NhuDPCH_FrameOffset dpch_FrameOffset;
 NhuSecondaryCPICH_Info secondaryCPICH_Info;
 NhuDL_ChannelisationCodeLst dl_ChannelisationCodeLst;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
 NhuSSDT_CellIdentity dummy;
 NhuClosedLoopTimingAdjMode closedLoopTimingAdjMode;
} NhuDL_DPCH_InfoPerRLfdd;

typedef struct NhuDL_DPCH_InfoPerRLtdd
{
 TknPres pres;
 NhuDL_CCTrChLst dl_CCTrChLstToEstablish;
 NhuDL_CCTrChLstToRemove dl_CCTrChLstToRemove;
} NhuDL_DPCH_InfoPerRLtdd;

typedef struct NhuDL_DPCH_InfoPerRL
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoPerRLfdd fdd;
  NhuDL_DPCH_InfoPerRLtdd tdd;
 } val;
} NhuDL_DPCH_InfoPerRL;

typedef struct NhuDL_DPCH_InfoPerRL_r4fdd
{
 TknPres pres;
 NhuPCPICH_UsageForChannelEst pCPICH_UsageForChannelEst;
 NhuDPCH_FrameOffset dpch_FrameOffset;
 NhuSecondaryCPICH_Info secondaryCPICH_Info;
 NhuDL_ChannelisationCodeLst dl_ChannelisationCodeLst;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
 NhuSSDT_CellIdentity dummy;
 NhuClosedLoopTimingAdjMode closedLoopTimingAdjMode;
} NhuDL_DPCH_InfoPerRL_r4fdd;

typedef struct NhuDL_DPCH_InfoPerRL_r4tdd
{
 TknPres pres;
 NhuDL_CCTrChLst_r4 dl_CCTrChLstToEstablish;
 NhuDL_CCTrChLstToRemove dl_CCTrChLstToRemove;
} NhuDL_DPCH_InfoPerRL_r4tdd;

typedef struct NhuDL_DPCH_InfoPerRL_r4
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoPerRL_r4fdd fdd;
  NhuDL_DPCH_InfoPerRL_r4tdd tdd;
 } val;
} NhuDL_DPCH_InfoPerRL_r4;


typedef TknU32 NhuPowerOffsetTPC_pdpdch;

typedef struct NhuDL_DPCH_InfoPerRL_r5fdd
{
 TknPres pres;
 NhuPCPICH_UsageForChannelEst pCPICH_UsageForChannelEst;
 NhuDPCH_FrameOffset dpch_FrameOffset;
 NhuSecondaryCPICH_Info secondaryCPICH_Info;
 NhuDL_ChannelisationCodeLst dl_ChannelisationCodeLst;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
 NhuPowerOffsetTPC_pdpdch powerOffsetTPC_pdpdch;
 NhuSSDT_CellIdentity dummy;
 NhuClosedLoopTimingAdjMode closedLoopTimingAdjMode;
} NhuDL_DPCH_InfoPerRL_r5fdd;

typedef struct NhuDL_DPCH_InfoPerRL_r5tdd
{
 TknPres pres;
 NhuDL_CCTrChLst_r4 dl_CCTrChLstToEstablish;
 NhuDL_CCTrChLstToRemove dl_CCTrChLstToRemove;
} NhuDL_DPCH_InfoPerRL_r5tdd;

typedef struct NhuDL_DPCH_InfoPerRL_r5
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoPerRL_r5fdd fdd;
  NhuDL_DPCH_InfoPerRL_r5tdd tdd;
 } val;
} NhuDL_DPCH_InfoPerRL_r5;

typedef struct NhuDL_DPCH_InfoPerRL_r6fdd
{
 TknPres pres;
 NhuPCPICH_UsageForChannelEst pCPICH_UsageForChannelEst;
 NhuDPCH_FrameOffset dpch_FrameOffset;
 NhuSecondaryCPICH_Info secondaryCPICH_Info;
 NhuDL_ChannelisationCodeLst dl_ChannelisationCodeLst;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
 NhuPowerOffsetTPC_pdpdch powerOffsetTPC_pdpdch;
 NhuClosedLoopTimingAdjMode closedLoopTimingAdjMode;
} NhuDL_DPCH_InfoPerRL_r6fdd;

typedef struct NhuDL_DPCH_InfoPerRL_r6tdd
{
 TknPres pres;
 NhuDL_CCTrChLst_r4 dl_CCTrChLstToEstablish;
 NhuDL_CCTrChLstToRemove dl_CCTrChLstToRemove;
} NhuDL_DPCH_InfoPerRL_r6tdd;

typedef struct NhuDL_DPCH_InfoPerRL_r6
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoPerRL_r6fdd fdd;
  NhuDL_DPCH_InfoPerRL_r6tdd tdd;
 } val;
} NhuDL_DPCH_InfoPerRL_r6;

typedef struct NhuDL_DPCH_InfoPerRL_r7fdd
{
 TknPres pres;
 NhuPCPICH_UsageForChannelEst pCPICH_UsageForChannelEst;
 NhuDPCH_FrameOffset dpch_FrameOffset;
 NhuSecondaryCPICH_Info secondaryCPICH_Info;
 NhuDL_ChannelisationCodeLst dl_ChannelisationCodeLst;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
 NhuPowerOffsetTPC_pdpdch powerOffsetTPC_pdpdch;
 NhuClosedLoopTimingAdjMode closedLoopTimingAdjMode;
} NhuDL_DPCH_InfoPerRL_r7fdd;

typedef struct NhuDL_DPCH_InfoPerRL_r7tdd
{
 TknPres pres;
 NhuDL_CCTrChLst_r7 dl_CCTrChLstToEstablish;
 NhuDL_CCTrChLstToRemove dl_CCTrChLstToRemove;
} NhuDL_DPCH_InfoPerRL_r7tdd;

typedef struct NhuDL_DPCH_InfoPerRL_r7
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoPerRL_r7fdd fdd;
  NhuDL_DPCH_InfoPerRL_r7tdd tdd;
 } val;
} NhuDL_DPCH_InfoPerRL_r7;


typedef TknU32 NhuDL_FDPCH_InfoPerRL_r6dl_ChannelisationCode;

typedef struct NhuDL_FDPCH_InfoPerRL_r6
{
 TknPres pres;
 NhuPCPICH_UsageForChannelEst pCPICH_UsageForChannelEst;
 NhuDPCH_FrameOffset fdpch_FrameOffset;
 NhuSecondaryCPICH_Info secondaryCPICH_Info;
 NhuSecondaryScramblingCode secondaryScramblingCode;
 NhuDL_FDPCH_InfoPerRL_r6dl_ChannelisationCode dl_ChannelisationCode;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
} NhuDL_FDPCH_InfoPerRL_r6;


typedef TknU32 NhuFDPCH_SlotFormat;


typedef enum enumNhuSTTDInd
{
 NhuSTTDIndtrueEnum
} EnumNhuSTTDInd;
typedef TknU32 NhuSTTDInd;


typedef TknU32 NhuDL_FDPCH_InfoPerRL_r7dl_ChannelisationCode;

typedef struct NhuDL_FDPCH_InfoPerRL_r7
{
 TknPres pres;
 NhuPCPICH_UsageForChannelEst pCPICH_UsageForChannelEst;
 NhuDPCH_FrameOffset fdpch_FrameOffset;
 NhuFDPCH_SlotFormat fdpch_SlotFormat;
 NhuSecondaryCPICH_Info secondaryCPICH_Info;
 NhuSecondaryScramblingCode secondaryScramblingCode;
 NhuDL_FDPCH_InfoPerRL_r7dl_ChannelisationCode dl_ChannelisationCode;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
 NhuSTTDInd sttdInd;
} NhuDL_FDPCH_InfoPerRL_r7;

typedef struct NhuDL_DPCH_InfoPerRL_PostFDD
{
 TknPres pres;
 NhuPCPICH_UsageForChannelEst pCPICH_UsageForChannelEst;
 NhuDL_ChannelisationCode dl_ChannelisationCode;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
} NhuDL_DPCH_InfoPerRL_PostFDD;

typedef struct NhuDL_DPCH_InfoPerRL_PostTDD
{
 TknPres pres;
 NhuDlnkTimeslotsCodes dl_DPCH_TimeslotsCodes;
} NhuDL_DPCH_InfoPerRL_PostTDD;

typedef struct NhuDL_DPCH_InfoPerRL_PostTDD_LCR_r4
{
 TknPres pres;
 NhuDlnkTimeslotsCodes_LCR_r4 dl_CCTrCH_TimeslotsCodes;
} NhuDL_DPCH_InfoPerRL_PostTDD_LCR_r4;


typedef enum enumNhuOutofSyncWindow
{
 NhuOutofSyncWindowms40Enum,
 NhuOutofSyncWindowms80Enum,
 NhuOutofSyncWindowms160Enum,
 NhuOutofSyncWindowms320Enum,
 NhuOutofSyncWindowms640Enum,
 NhuOutofSyncWindowspare3Enum,
 NhuOutofSyncWindowspare2Enum,
 NhuOutofSyncWindowspare1Enum
} EnumNhuOutofSyncWindow;
typedef TknU32 NhuOutofSyncWindow;

typedef struct NhuMidambleShiftAndBurstTyp_DLburstTyptype1midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftLong midambleShift;
} NhuMidambleShiftAndBurstTyp_DLburstTyptype1midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_DLburstTyptype1midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_DLburstTyptype1midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_DLburstTyptype1midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_DLburstTyptype1
{
 TknPres pres;
 NhuMidambleCfgBurstTyp1and3 midambleCfgBurstTyp1and3;
 NhuMidambleShiftAndBurstTyp_DLburstTyptype1midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_DLburstTyptype1;

typedef struct NhuMidambleShiftAndBurstTyp_DLburstTyptype2midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftShort midambleShift;
} NhuMidambleShiftAndBurstTyp_DLburstTyptype2midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_DLburstTyptype2midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_DLburstTyptype2midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_DLburstTyptype2midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_DLburstTyptype2
{
 TknPres pres;
 NhuMidambleCfgBurstTyp2 midambleCfgBurstTyp2;
 NhuMidambleShiftAndBurstTyp_DLburstTyptype2midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_DLburstTyptype2;

typedef struct NhuMidambleShiftAndBurstTyp_DLburstTyp
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_DLburstTyptype1 type1;
  NhuMidambleShiftAndBurstTyp_DLburstTyptype2 type2;
 } val;
} NhuMidambleShiftAndBurstTyp_DLburstTyp;

typedef struct NhuMidambleShiftAndBurstTyp_DL
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_DLburstTyp burstTyp;
} NhuMidambleShiftAndBurstTyp_DL;

typedef struct NhuDL_HSPDSCH_TS_CfgMember
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
 NhuMidambleShiftAndBurstTyp_DL midambleShiftAndBurstTyp;
} NhuDL_HSPDSCH_TS_CfgMember;

typedef struct NhuDL_HSPDSCH_TS_Cfg
{
 TknU16 noComp;
 NhuDL_HSPDSCH_TS_CfgMember *member;
}NhuDL_HSPDSCH_TS_Cfg;

typedef struct NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype1midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftLong midambleShift;
} NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype1midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype1midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype1midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype1midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype1
{
 TknPres pres;
 NhuMidambleCfgBurstTyp1and3 midambleCfgBurstTyp1and3;
 NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype1midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype1;

typedef struct NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype2midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftShort_VHCR midambleShift;
} NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype2midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype2midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype2midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype2midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype2
{
 TknPres pres;
 NhuMidambleCfgBurstTyp2_VHCR midambleCfgBurstTyp2;
 NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype2midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype2;

typedef struct NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyp
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype1 type1;
  NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype2 type2;
 } val;
} NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyp;

typedef struct NhuMidambleShiftAndBurstTyp_DL_VHCR
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyp burstTyp;
} NhuMidambleShiftAndBurstTyp_DL_VHCR;

typedef struct NhuDL_HSPDSCH_TS_Cfg_VHCRMember
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
 NhuMidambleShiftAndBurstTyp_DL_VHCR midambleShiftAndBurstTyp;
} NhuDL_HSPDSCH_TS_Cfg_VHCRMember;

typedef struct NhuDL_HSPDSCH_TS_Cfg_VHCR
{
 TknU16 noComp;
 NhuDL_HSPDSCH_TS_Cfg_VHCRMember *member;
}NhuDL_HSPDSCH_TS_Cfg_VHCR;


typedef TknU32 NhuDSCH_RadioLinkId;

typedef struct NhuRL_IdLst
{
 TknU16 noComp;
 NhuPrimaryCPICH_Info *member;
}NhuRL_IdLst;

typedef struct NhuPDSCH_SHO_DCH_Info
{
 TknPres pres;
 NhuDSCH_RadioLinkId dsch_RadioLinkId;
 NhuRL_IdLst rl_IdLst;
} NhuPDSCH_SHO_DCH_Info;


typedef TknU32 NhuMaxTFCI_Field2Value;

typedef struct NhuDSCH_Mapping
{
 TknPres pres;
 NhuMaxTFCI_Field2Value maxTFCI_Field2Value;
 NhuSF_PDSCH spreadingFactor;
 NhuCodeNumberDSCH codeNumber;
 NhuMultiCodeInfo multiCodeInfo;
} NhuDSCH_Mapping;

typedef struct NhuDSCH_MappingLst
{
 TknU16 noComp;
 NhuDSCH_Mapping *member;
}NhuDSCH_MappingLst;

typedef struct NhuPDSCH_CodeInfo
{
 TknPres pres;
 NhuSF_PDSCH spreadingFactor;
 NhuCodeNumberDSCH codeNumber;
 NhuMultiCodeInfo multiCodeInfo;
} NhuPDSCH_CodeInfo;

typedef struct NhuPDSCH_CodeInfoLst
{
 TknU16 noComp;
 NhuPDSCH_CodeInfo *member;
}NhuPDSCH_CodeInfoLst;

typedef struct NhuReplacedPDSCH_CodeInfo
{
 TknPres pres;
 NhuMaxTFCI_Field2Value tfci_Field2;
 NhuSF_PDSCH spreadingFactor;
 NhuCodeNumberDSCH codeNumber;
 NhuMultiCodeInfo multiCodeInfo;
} NhuReplacedPDSCH_CodeInfo;

typedef struct NhuReplacedPDSCH_CodeInfoLst
{
 TknU16 noComp;
 NhuReplacedPDSCH_CodeInfo *member;
}NhuReplacedPDSCH_CodeInfoLst;

typedef struct NhuPDSCH_CodeMappingsignallingMethod
{
 TknU8 choice;
 union {
  NhuCodeRange codeRange;
  NhuDSCH_MappingLst tfci_Range;
  NhuPDSCH_CodeInfoLst explicit_config;
  NhuReplacedPDSCH_CodeInfoLst replace;
 } val;
} NhuPDSCH_CodeMappingsignallingMethod;

typedef struct NhuPDSCH_CodeMapping
{
 TknPres pres;
 NhuSecondaryScramblingCode dl_ScramblingCode;
 NhuPDSCH_CodeMappingsignallingMethod signallingMethod;
} NhuPDSCH_CodeMapping;

typedef struct NhuDL_PDSCH_Info
{
 TknPres pres;
 NhuPDSCH_SHO_DCH_Info dummy1;
 NhuPDSCH_CodeMapping dummy2;
} NhuDL_PDSCH_Info;


typedef enum enumNhuDL_SecondaryCellInfoFDDnewCfgdl_64QAM_Configured
{
 NhuDL_SecondaryCellInfoFDDnewCfgdl_64QAM_ConfiguredtrueEnum
} EnumNhuDL_SecondaryCellInfoFDDnewCfgdl_64QAM_Configured;
typedef TknU32 NhuDL_SecondaryCellInfoFDDnewCfgdl_64QAM_Configured;

typedef struct NhuDL_SecondaryCellInfoFDDnewCfghS_SCCHChannelisationCodeInfo
{
 TknU16 noComp;
 NhuHS_SCCH_Codes *member;
}NhuDL_SecondaryCellInfoFDDnewCfghS_SCCHChannelisationCodeInfo;

typedef struct NhuDL_SecondaryCellInfoFDDnewCfg
{
 TknPres pres;
 NhuH_RNTI new_H_RNTI;
 NhuDL_SecondaryCellInfoFDDnewCfgdl_64QAM_Configured dl_64QAM_Configured;
 NhuHS_DSCH_TBSizeTable hs_DSCH_TBSizeTable;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuSecondaryScramblingCode dl_ScramblingCode;
 NhuDL_SecondaryCellInfoFDDnewCfghS_SCCHChannelisationCodeInfo hS_SCCHChannelisationCodeInfo;
 NhuMeasurementPowerOffset measurementPowerOffset;
 NhuUARFCN uarfcn_DL;
} NhuDL_SecondaryCellInfoFDDnewCfg;

typedef struct NhuDL_SecondaryCellInfoFDD
{
 TknU8 choice;
 union {
  NhuDL_SecondaryCellInfoFDDnewCfg newCfg;
 } val;
} NhuDL_SecondaryCellInfoFDD;


typedef enum enumNhuDL_SecondaryCellInfoFDD_v890extdifferentTxModeFromServingHS_DSCHCell
{
 NhuDL_SecondaryCellInfoFDD_v890extdifferentTxModeFromServingHS_DSCHCelldifferentEnum
} EnumNhuDL_SecondaryCellInfoFDD_v890extdifferentTxModeFromServingHS_DSCHCell;
typedef TknU32 NhuDL_SecondaryCellInfoFDD_v890extdifferentTxModeFromServingHS_DSCHCell;

typedef struct NhuDL_SecondaryCellInfoFDD_v890ext
{
 TknPres pres;
 NhuDL_SecondaryCellInfoFDD_v890extdifferentTxModeFromServingHS_DSCHCell differentTxModeFromServingHS_DSCHCell;
} NhuDL_SecondaryCellInfoFDD_v890ext;

typedef struct NhuSecondaryCellMIMOparametersFDDnewCfg
{
 TknPres pres;
 NhuMIMO_N_M_Ratio mimoN_M_Ratio;
 NhuMIMO_PilotCfg_r9 mimoPilotCfg;
} NhuSecondaryCellMIMOparametersFDDnewCfg;

typedef struct NhuSecondaryCellMIMOparametersFDD
{
 TknU8 choice;
 union {
  NhuSecondaryCellMIMOparametersFDDnewCfg newCfg;
 } val;
} NhuSecondaryCellMIMOparametersFDD;


typedef enum enumNhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdl_64QAM_Configured
{
 NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdl_64QAM_ConfiguredtrueEnum
} EnumNhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdl_64QAM_Configured;
typedef TknU32 NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdl_64QAM_Configured;

typedef struct NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfghS_SCCHChannelisationCodeInfo
{
 TknU16 noComp;
 NhuHS_SCCH_Codes *member;
}NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfghS_SCCHChannelisationCodeInfo;


typedef enum enumNhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCell
{
 NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCelldifferentEnum
} EnumNhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCell;
typedef TknU32 NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCell;

typedef struct NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfg
{
 TknPres pres;
 NhuH_RNTI new_H_RNTI;
 NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdl_64QAM_Configured dl_64QAM_Configured;
 NhuHS_DSCH_TBSizeTable hs_DSCH_TBSizeTable;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuSecondaryScramblingCode dl_ScramblingCode;
 NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfghS_SCCHChannelisationCodeInfo hS_SCCHChannelisationCodeInfo;
 NhuMeasurementPowerOffset measurementPowerOffset;
 NhuUARFCN uarfcn_DL;
 NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCell differentTxModeFromServingHS_DSCHCell;
} NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfg;

typedef struct NhuDL_SecondaryCellInfoFDD_r9configurationInfo
{
 TknU8 choice;
 union {
  NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfg newCfg;
 } val;
} NhuDL_SecondaryCellInfoFDD_r9configurationInfo;

typedef struct NhuDL_SecondaryCellInfoFDD_r9
{
 TknPres pres;
 NhuDL_SecondaryCellInfoFDD_r9configurationInfo configurationInfo;
 NhuSecondaryCellMIMOparametersFDD secondaryCellMIMOparameters;
} NhuDL_SecondaryCellInfoFDD_r9;

typedef struct NhuDL_TPC_PowerOffsetPerRL
{
 TknPres pres;
 NhuPowerOffsetTPC_pdpdch powerOffsetTPC_pdpdch;
} NhuDL_TPC_PowerOffsetPerRL;

typedef struct NhuDL_TPC_PowerOffsetPerRL_Lst
{
 TknU16 noComp;
 NhuDL_TPC_PowerOffsetPerRL *member;
}NhuDL_TPC_PowerOffsetPerRL_Lst;


typedef TknU32 NhuDL_ChannelCodes_MBSFN_IMB384firstChannelisationCode;


typedef TknU32 NhuDL_ChannelCodes_MBSFN_IMB384lastChannelisationCode;

typedef struct NhuDL_ChannelCodes_MBSFN_IMB384
{
 TknPres pres;
 NhuDL_ChannelCodes_MBSFN_IMB384firstChannelisationCode firstChannelisationCode;
 NhuDL_ChannelCodes_MBSFN_IMB384lastChannelisationCode lastChannelisationCode;
} NhuDL_ChannelCodes_MBSFN_IMB384;


typedef TknS32 NhuDPCCH_PowerOffset2;


typedef TknU32 NhuTGPS_Recfgn_CFN;

typedef struct NhuTGP_SequenceShorttgps_Statusactivate
{
 TknPres pres;
 NhuTGCFN tgcfn;
} NhuTGP_SequenceShorttgps_Statusactivate;

typedef struct NhuTGP_SequenceShorttgps_Status
{
 TknU8 choice;
 union {
  NhuTGP_SequenceShorttgps_Statusactivate activate;
 } val;
} NhuTGP_SequenceShorttgps_Status;

typedef struct NhuTGP_SequenceShort
{
 TknPres pres;
 NhuTGPSI tgpsi;
 NhuTGP_SequenceShorttgps_Status tgps_Status;
} NhuTGP_SequenceShort;

typedef struct NhuDPCH_CompressedModeStatusInfotgp_SequenceShortLst
{
 TknU16 noComp;
 NhuTGP_SequenceShort *member;
}NhuDPCH_CompressedModeStatusInfotgp_SequenceShortLst;

typedef struct NhuDPCH_CompressedModeStatusInfo
{
 TknPres pres;
 NhuTGPS_Recfgn_CFN tgps_Recfgn_CFN;
 NhuDPCH_CompressedModeStatusInfotgp_SequenceShortLst tgp_SequenceShortLst;
} NhuDPCH_CompressedModeStatusInfo;

typedef struct NhuTGP_SequenceShort_r10tgps_Statusactivate
{
 TknPres pres;
 NhuTGCFN tgcfn;
} NhuTGP_SequenceShort_r10tgps_Statusactivate;

typedef struct NhuTGP_SequenceShort_r10tgps_Status
{
 TknU8 choice;
 union {
  NhuTGP_SequenceShort_r10tgps_Statusactivate activate;
 } val;
} NhuTGP_SequenceShort_r10tgps_Status;


typedef enum enumNhuTGP_SequenceShort_r10freqSpecificCompressedMode
{
 NhuTGP_SequenceShort_r10freqSpecificCompressedModetrueEnum
} EnumNhuTGP_SequenceShort_r10freqSpecificCompressedMode;
typedef TknU32 NhuTGP_SequenceShort_r10freqSpecificCompressedMode;

typedef struct NhuTGP_SequenceShort_r10
{
 TknPres pres;
 NhuTGPSI tgpsi;
 NhuTGP_SequenceShort_r10tgps_Status tgps_Status;
 NhuTGP_SequenceShort_r10freqSpecificCompressedMode freqSpecificCompressedMode;
} NhuTGP_SequenceShort_r10;

typedef struct NhuDPCH_CompressedModeStatusInfo_r10tgp_SequenceShortLst
{
 TknU16 noComp;
 NhuTGP_SequenceShort_r10 *member;
}NhuDPCH_CompressedModeStatusInfo_r10tgp_SequenceShortLst;

typedef struct NhuDPCH_CompressedModeStatusInfo_r10
{
 TknPres pres;
 NhuTGPS_Recfgn_CFN tgps_Recfgn_CFN;
 NhuDPCH_CompressedModeStatusInfo_r10tgp_SequenceShortLst tgp_SequenceShortLst;
} NhuDPCH_CompressedModeStatusInfo_r10;


typedef enum enumNhuUE_DRX_Cycle_InactivityThreshold
{
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_0Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_1Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_2Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_4Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_8Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_16Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_32Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_64Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_128Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_256Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_512Enum,
 NhuUE_DRX_Cycle_InactivityThresholdspare5Enum,
 NhuUE_DRX_Cycle_InactivityThresholdspare4Enum,
 NhuUE_DRX_Cycle_InactivityThresholdspare3Enum,
 NhuUE_DRX_Cycle_InactivityThresholdspare2Enum,
 NhuUE_DRX_Cycle_InactivityThresholdspare1Enum
} EnumNhuUE_DRX_Cycle_InactivityThreshold;
typedef TknU32 NhuUE_DRX_Cycle_InactivityThreshold;


typedef enum enumNhuUE_DRX_Cycle
{
 NhuUE_DRX_Cyclesub_frames_4Enum,
 NhuUE_DRX_Cyclesub_frames_5Enum,
 NhuUE_DRX_Cyclesub_frames_8Enum,
 NhuUE_DRX_Cyclesub_frames_10Enum,
 NhuUE_DRX_Cyclesub_frames_16Enum,
 NhuUE_DRX_Cyclesub_frames_20Enum,
 NhuUE_DRX_Cyclespare2Enum,
 NhuUE_DRX_Cyclespare1Enum
} EnumNhuUE_DRX_Cycle;
typedef TknU32 NhuUE_DRX_Cycle;


typedef enum enumNhuUE_GrantMonitoring_InactivityThreshold
{
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_0Enum,
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_1Enum,
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_2Enum,
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_4Enum,
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_8Enum,
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_16Enum,
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_32Enum,
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_64Enum,
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_128Enum,
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_256Enum,
 NhuUE_GrantMonitoring_InactivityThresholdspare6Enum,
 NhuUE_GrantMonitoring_InactivityThresholdspare5Enum,
 NhuUE_GrantMonitoring_InactivityThresholdspare4Enum,
 NhuUE_GrantMonitoring_InactivityThresholdspare3Enum,
 NhuUE_GrantMonitoring_InactivityThresholdspare2Enum,
 NhuUE_GrantMonitoring_InactivityThresholdspare1Enum
} EnumNhuUE_GrantMonitoring_InactivityThreshold;
typedef TknU32 NhuUE_GrantMonitoring_InactivityThreshold;


typedef TknU8 NhuDRX_Infoue_drx_GrantMonitoring;

typedef struct NhuDRX_Info
{
 TknPres pres;
 NhuUE_DRX_Cycle ue_drx_Cycle;
 NhuUE_DRX_Cycle_InactivityThreshold ue_drx_Cycle_InactivityThreshold;
 NhuUE_GrantMonitoring_InactivityThreshold ue_GrantMonitoring_InactivityThreshold;
 NhuDRX_Infoue_drx_GrantMonitoring ue_drx_GrantMonitoring;
} NhuDRX_Info;

typedef struct NhuDSCH_TportChannelsInfoMember
{
 TknPres pres;
 NhuTportChannelIdentity dsch_transport_channel_identity;
 NhuTportFormatSet dsch_TFS;
} NhuDSCH_TportChannelsInfoMember;

typedef struct NhuDSCH_TportChannelsInfo
{
 TknU16 noComp;
 NhuDSCH_TportChannelsInfoMember *member;
}NhuDSCH_TportChannelsInfo;


typedef enum enumNhuUE_DTX_Cycle1_10ms
{
 NhuUE_DTX_Cycle1_10mssub_frames_1Enum,
 NhuUE_DTX_Cycle1_10mssub_frames_5Enum,
 NhuUE_DTX_Cycle1_10mssub_frames_10Enum,
 NhuUE_DTX_Cycle1_10mssub_frames_20Enum
} EnumNhuUE_DTX_Cycle1_10ms;
typedef TknU32 NhuUE_DTX_Cycle1_10ms;


typedef enum enumNhuUE_DTX_Cycle2_10ms
{
 NhuUE_DTX_Cycle2_10mssub_frames_5Enum,
 NhuUE_DTX_Cycle2_10mssub_frames_10Enum,
 NhuUE_DTX_Cycle2_10mssub_frames_20Enum,
 NhuUE_DTX_Cycle2_10mssub_frames_40Enum,
 NhuUE_DTX_Cycle2_10mssub_frames_80Enum,
 NhuUE_DTX_Cycle2_10mssub_frames_160Enum,
 NhuUE_DTX_Cycle2_10msspare2Enum,
 NhuUE_DTX_Cycle2_10msspare1Enum
} EnumNhuUE_DTX_Cycle2_10ms;
typedef TknU32 NhuUE_DTX_Cycle2_10ms;


typedef enum enumNhuMAC_DTX_Cycle_10ms
{
 NhuMAC_DTX_Cycle_10mssub_frames_5Enum,
 NhuMAC_DTX_Cycle_10mssub_frames_10Enum,
 NhuMAC_DTX_Cycle_10mssub_frames_20Enum,
 NhuMAC_DTX_Cycle_10msspare1Enum
} EnumNhuMAC_DTX_Cycle_10ms;
typedef TknU32 NhuMAC_DTX_Cycle_10ms;

typedef struct NhuDTX_E_DCH_TTI_10ms
{
 TknPres pres;
 NhuUE_DTX_Cycle1_10ms ue_dtx_Cycle1_10ms;
 NhuUE_DTX_Cycle2_10ms ue_dtx_Cycle2_10ms;
 NhuMAC_DTX_Cycle_10ms mac_dtx_Cycle_10ms;
} NhuDTX_E_DCH_TTI_10ms;


typedef enum enumNhuUE_DTX_Cycle1_2ms
{
 NhuUE_DTX_Cycle1_2mssub_frames_1Enum,
 NhuUE_DTX_Cycle1_2mssub_frames_4Enum,
 NhuUE_DTX_Cycle1_2mssub_frames_5Enum,
 NhuUE_DTX_Cycle1_2mssub_frames_8Enum,
 NhuUE_DTX_Cycle1_2mssub_frames_10Enum,
 NhuUE_DTX_Cycle1_2mssub_frames_16Enum,
 NhuUE_DTX_Cycle1_2mssub_frames_20Enum,
 NhuUE_DTX_Cycle1_2msspare1Enum
} EnumNhuUE_DTX_Cycle1_2ms;
typedef TknU32 NhuUE_DTX_Cycle1_2ms;


typedef enum enumNhuUE_DTX_Cycle2_2ms
{
 NhuUE_DTX_Cycle2_2mssub_frames_4Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_5Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_8Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_10Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_16Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_20Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_32Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_40Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_64Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_80Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_128Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_160Enum,
 NhuUE_DTX_Cycle2_2msspare4Enum,
 NhuUE_DTX_Cycle2_2msspare3Enum,
 NhuUE_DTX_Cycle2_2msspare2Enum,
 NhuUE_DTX_Cycle2_2msspare1Enum
} EnumNhuUE_DTX_Cycle2_2ms;
typedef TknU32 NhuUE_DTX_Cycle2_2ms;


typedef enum enumNhuMAC_DTX_Cycle_2ms
{
 NhuMAC_DTX_Cycle_2mssub_frames_1Enum,
 NhuMAC_DTX_Cycle_2mssub_frames_4Enum,
 NhuMAC_DTX_Cycle_2mssub_frames_5Enum,
 NhuMAC_DTX_Cycle_2mssub_frames_8Enum,
 NhuMAC_DTX_Cycle_2mssub_frames_10Enum,
 NhuMAC_DTX_Cycle_2mssub_frames_16Enum,
 NhuMAC_DTX_Cycle_2mssub_frames_20Enum,
 NhuMAC_DTX_Cycle_2msspare1Enum
} EnumNhuMAC_DTX_Cycle_2ms;
typedef TknU32 NhuMAC_DTX_Cycle_2ms;

typedef struct NhuDTX_E_DCH_TTI_2ms
{
 TknPres pres;
 NhuUE_DTX_Cycle1_2ms ue_dtx_Cycle1_2ms;
 NhuUE_DTX_Cycle2_2ms ue_dtx_Cycle2_2ms;
 NhuMAC_DTX_Cycle_2ms mac_dtx_Cycle_2ms;
} NhuDTX_E_DCH_TTI_2ms;


typedef enum enumNhuUE_DTX_Cycle2InactivityThreshold
{
 NhuUE_DTX_Cycle2InactivityThresholde_dch_tti_1Enum,
 NhuUE_DTX_Cycle2InactivityThresholde_dch_tti_4Enum,
 NhuUE_DTX_Cycle2InactivityThresholde_dch_tti_8Enum,
 NhuUE_DTX_Cycle2InactivityThresholde_dch_tti_16Enum,
 NhuUE_DTX_Cycle2InactivityThresholde_dch_tti_32Enum,
 NhuUE_DTX_Cycle2InactivityThresholde_dch_tti_64Enum,
 NhuUE_DTX_Cycle2InactivityThresholde_dch_tti_128Enum,
 NhuUE_DTX_Cycle2InactivityThresholde_dch_tti_256Enum,
 NhuUE_DTX_Cycle2InactivityThresholdspare8Enum,
 NhuUE_DTX_Cycle2InactivityThresholdspare7Enum,
 NhuUE_DTX_Cycle2InactivityThresholdspare6Enum,
 NhuUE_DTX_Cycle2InactivityThresholdspare5Enum,
 NhuUE_DTX_Cycle2InactivityThresholdspare4Enum,
 NhuUE_DTX_Cycle2InactivityThresholdspare3Enum,
 NhuUE_DTX_Cycle2InactivityThresholdspare2Enum,
 NhuUE_DTX_Cycle2InactivityThresholdspare1Enum
} EnumNhuUE_DTX_Cycle2InactivityThreshold;
typedef TknU32 NhuUE_DTX_Cycle2InactivityThreshold;


typedef enum enumNhuUE_DTX_long_preamble_length
{
 NhuUE_DTX_long_preamble_lengthslots_4Enum,
 NhuUE_DTX_long_preamble_lengthslots_15Enum
} EnumNhuUE_DTX_long_preamble_length;
typedef TknU32 NhuUE_DTX_long_preamble_length;


typedef enum enumNhuMAC_InactivityThreshold
{
 NhuMAC_InactivityThresholde_dch_tti_1Enum,
 NhuMAC_InactivityThresholde_dch_tti_2Enum,
 NhuMAC_InactivityThresholde_dch_tti_4Enum,
 NhuMAC_InactivityThresholde_dch_tti_8Enum,
 NhuMAC_InactivityThresholde_dch_tti_16Enum,
 NhuMAC_InactivityThresholde_dch_tti_32Enum,
 NhuMAC_InactivityThresholde_dch_tti_64Enum,
 NhuMAC_InactivityThresholde_dch_tti_128Enum,
 NhuMAC_InactivityThresholde_dch_tti_256Enum,
 NhuMAC_InactivityThresholde_dch_tti_512Enum,
 NhuMAC_InactivityThresholde_dch_tti_InfinityEnum,
 NhuMAC_InactivityThresholdspare5Enum,
 NhuMAC_InactivityThresholdspare4Enum,
 NhuMAC_InactivityThresholdspare3Enum,
 NhuMAC_InactivityThresholdspare2Enum,
 NhuMAC_InactivityThresholdspare1Enum
} EnumNhuMAC_InactivityThreshold;
typedef TknU32 NhuMAC_InactivityThreshold;


typedef enum enumNhuUE_DPCCH_Burst
{
 NhuUE_DPCCH_Burstsub_frames_1Enum,
 NhuUE_DPCCH_Burstsub_frames_2Enum,
 NhuUE_DPCCH_Burstsub_frames_5Enum,
 NhuUE_DPCCH_Burstspare1Enum
} EnumNhuUE_DPCCH_Burst;
typedef TknU32 NhuUE_DPCCH_Burst;

typedef struct NhuDTX_Infoe_dch_TTI_Length
{
 TknU8 choice;
 union {
  NhuDTX_E_DCH_TTI_10ms dtx_e_dch_TTI_10ms;
  NhuDTX_E_DCH_TTI_2ms dtx_e_dch_TTI_2ms;
 } val;
} NhuDTX_Infoe_dch_TTI_Length;


typedef TknU32 NhuDTX_Infoue_dtx_cycle2DefaultSG;

typedef struct NhuDTX_Info
{
 TknPres pres;
 NhuDTX_Infoe_dch_TTI_Length e_dch_TTI_Length;
 NhuUE_DTX_Cycle2InactivityThreshold ue_dtx_cycle2InactivityThreshold;
 NhuDTX_Infoue_dtx_cycle2DefaultSG ue_dtx_cycle2DefaultSG;
 NhuUE_DTX_long_preamble_length ue_dtx_long_preamble_length;
 NhuMAC_InactivityThreshold mac_InactivityThreshold;
 NhuCQI_DTX_Timer cqi_dtx_Timer;
 NhuUE_DPCCH_Burst ue_dpcch_Burst1;
 NhuUE_DPCCH_Burst ue_dpcch_Burst2;
} NhuDTX_Info;


typedef enum enumNhuUlnk_DPCCH_Slot_Format_Info
{
 NhuUlnk_DPCCH_Slot_Format_Infoslot_format_1Enum,
 NhuUlnk_DPCCH_Slot_Format_InfodummyEnum,
 NhuUlnk_DPCCH_Slot_Format_Infoslot_format_4Enum,
 NhuUlnk_DPCCH_Slot_Format_Infospare1Enum
} EnumNhuUlnk_DPCCH_Slot_Format_Info;
typedef TknU32 NhuUlnk_DPCCH_Slot_Format_Info;

typedef struct NhuDTX_DRX_Info_r7
{
 TknPres pres;
 NhuDTX_Info dtx_Info;
 NhuDRX_Info drx_Info;
 NhuUlnk_DPCCH_Slot_Format_Info uplink_DPCCHSlotFormatInfo;
} NhuDTX_DRX_Info_r7;

typedef struct NhuDynamicPersistenceLvlLst
{
 TknU16 noComp;
 NhuDynamicPersistenceLvl *member;
}NhuDynamicPersistenceLvlLst;


typedef TknU32 NhuE_AGCH_ChannelisationCode;


typedef enum enumNhuMidambleCfgBurstTyp1
{
 NhuMidambleCfgBurstTyp1ms4Enum,
 NhuMidambleCfgBurstTyp1ms8Enum,
 NhuMidambleCfgBurstTyp1ms16Enum
} EnumNhuMidambleCfgBurstTyp1;
typedef TknU32 NhuMidambleCfgBurstTyp1;

typedef struct NhuMidambleShiftAndBurstTyp_EDCHburstTyptype1midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftLong midambleShift;
} NhuMidambleShiftAndBurstTyp_EDCHburstTyptype1midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_EDCHburstTyptype1midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_EDCHburstTyptype1midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_EDCHburstTyptype1midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_EDCHburstTyptype1
{
 TknPres pres;
 NhuMidambleCfgBurstTyp1 midambleCfgBurstTyp1;
 NhuMidambleShiftAndBurstTyp_EDCHburstTyptype1midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_EDCHburstTyptype1;

typedef struct NhuMidambleShiftAndBurstTyp_EDCHburstTyptype2midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftShort midambleShift;
} NhuMidambleShiftAndBurstTyp_EDCHburstTyptype2midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_EDCHburstTyptype2midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_EDCHburstTyptype2midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_EDCHburstTyptype2midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_EDCHburstTyptype2
{
 TknPres pres;
 NhuMidambleCfgBurstTyp2 midambleCfgBurstTyp2;
 NhuMidambleShiftAndBurstTyp_EDCHburstTyptype2midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_EDCHburstTyptype2;

typedef struct NhuMidambleShiftAndBurstTyp_EDCHburstTyp
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_EDCHburstTyptype1 type1;
  NhuMidambleShiftAndBurstTyp_EDCHburstTyptype2 type2;
 } val;
} NhuMidambleShiftAndBurstTyp_EDCHburstTyp;

typedef struct NhuMidambleShiftAndBurstTyp_EDCH
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_EDCHburstTyp burstTyp;
} NhuMidambleShiftAndBurstTyp_EDCH;


typedef TknU32 NhuE_AGCH_IvdualtS_number;

typedef struct NhuE_AGCH_Ivdual
{
 TknPres pres;
 NhuE_AGCH_IvdualtS_number tS_number;
 NhuDL_TS_ChannelisationCode channelisation_code;
 NhuMidambleShiftAndBurstTyp_EDCH midambleShiftAndBurstTyp;
} NhuE_AGCH_Ivdual;


typedef TknU32 NhuE_AGCH_Ivdual_VHCRtS_number;

typedef struct NhuE_AGCH_Ivdual_VHCR
{
 TknPres pres;
 NhuE_AGCH_Ivdual_VHCRtS_number tS_number;
 NhuDL_TS_ChannelisationCode_VHCR channelisation_code;
 NhuMidambleShiftAndBurstTyp_EDCH midambleShiftAndBurstTyp;
} NhuE_AGCH_Ivdual_VHCR;

typedef struct NhuE_AGCH_Set_Config
{
 TknU16 noComp;
 NhuE_AGCH_Ivdual *member;
}NhuE_AGCH_Set_Config;

typedef struct NhuE_AGCH_Set_Config_VHCR
{
 TknU16 noComp;
 NhuE_AGCH_Ivdual_VHCR *member;
}NhuE_AGCH_Set_Config_VHCR;

typedef struct NhuE_HICH_Info
{
 TknPres pres;
 NhuE_HICH_ChannelisationCode channelisationCode;
 NhuE_HICH_RGCH_SignatureSequence signatureSequence;
} NhuE_HICH_Info;


typedef TknU32 NhuE_RGCH_CombinationIdx;

typedef struct NhuE_RGCH_Info
{
 TknPres pres;
 NhuE_HICH_RGCH_SignatureSequence signatureSequence;
 NhuE_RGCH_CombinationIdx rg_CombinationIdx;
} NhuE_RGCH_Info;

typedef struct NhuE_DCH_RL_InfoOtherCelle_HICH_Info
{
 TknU8 choice;
 union {
  NhuE_HICH_Info e_HICH_Info;
 } val;
} NhuE_DCH_RL_InfoOtherCelle_HICH_Info;

typedef struct NhuE_DCH_RL_InfoOtherCelle_RGCH_Info
{
 TknU8 choice;
 union {
  NhuE_RGCH_Info e_RGCH_Info;
 } val;
} NhuE_DCH_RL_InfoOtherCelle_RGCH_Info;

typedef struct NhuE_DCH_RL_InfoOtherCell
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuE_DCH_RL_InfoOtherCelle_HICH_Info e_HICH_Info;
 NhuE_DCH_RL_InfoOtherCelle_RGCH_Info e_RGCH_Info;
} NhuE_DCH_RL_InfoOtherCell;

typedef struct NhuE_DCH_RL_InfoOtherCell_SecULFreqe_RGCH_Info
{
 TknU8 choice;
 union {
  NhuE_RGCH_Info e_RGCH_Info;
 } val;
} NhuE_DCH_RL_InfoOtherCell_SecULFreqe_RGCH_Info;

typedef struct NhuE_DCH_RL_InfoOtherCell_SecULFreq
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuE_HICH_Info e_HICH_Info;
 NhuE_DCH_RL_InfoOtherCell_SecULFreqe_RGCH_Info e_RGCH_Info;
} NhuE_DCH_RL_InfoOtherCell_SecULFreq;


typedef TknU32 NhuE_DPCCH_DPCCH_PowerOffset;


typedef TknU32 NhuE_DPDCH_Reference_E_TFCI_r7reference_E_TFCI;


typedef TknU32 NhuE_DPDCH_Reference_E_TFCI_r7reference_E_TFCI_PO_r7;

typedef struct NhuE_DPDCH_Reference_E_TFCI_r7
{
 TknPres pres;
 NhuE_DPDCH_Reference_E_TFCI_r7reference_E_TFCI reference_E_TFCI;
 NhuE_DPDCH_Reference_E_TFCI_r7reference_E_TFCI_PO_r7 reference_E_TFCI_PO_r7;
} NhuE_DPDCH_Reference_E_TFCI_r7;

typedef struct NhuE_DPDCH_Reference_E_TFCILst_r7
{
 TknU16 noComp;
 NhuE_DPDCH_Reference_E_TFCI_r7 *member;
}NhuE_DPDCH_Reference_E_TFCILst_r7;

typedef struct NhuE_DCH_RL_InfoSameServingCell
{
 TknPres pres;
 NhuE_DPCCH_DPCCH_PowerOffset e_DPCCH_DPCCH_PowerOffset;
 NhuE_DPDCH_Reference_E_TFCILst_r7 reference_E_TFCIs;
} NhuE_DCH_RL_InfoSameServingCell;


typedef TknU32 NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod2;


typedef TknU32 NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod4;


typedef TknU32 NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod8;


typedef TknU32 NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod16;


typedef TknU32 NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod32;

typedef struct NhuRepetitionPeriodAndLengthForSPS
{
 TknU8 choice;
 union {
  NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod2 repetitionPeriod2;
  NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod4 repetitionPeriod4;
  NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod8 repetitionPeriod8;
  NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod16 repetitionPeriod16;
  NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod32 repetitionPeriod32;
 } val;
} NhuRepetitionPeriodAndLengthForSPS;

typedef struct NhuE_DCH_TxPatternLst_TDD128Member
{
 TknPres pres;
 NhuRepetitionPeriodAndLengthForSPS repetitionPeriodAndLength;
} NhuE_DCH_TxPatternLst_TDD128Member;

typedef struct NhuE_DCH_TxPatternLst_TDD128
{
 TknU16 noComp;
 NhuE_DCH_TxPatternLst_TDD128Member *member;
}NhuE_DCH_TxPatternLst_TDD128;


typedef enum enumNhuHappyBit_DelayCondition
{
 NhuHappyBit_DelayConditionms2Enum,
 NhuHappyBit_DelayConditionms10Enum,
 NhuHappyBit_DelayConditionms20Enum,
 NhuHappyBit_DelayConditionms50Enum,
 NhuHappyBit_DelayConditionms100Enum,
 NhuHappyBit_DelayConditionms200Enum,
 NhuHappyBit_DelayConditionms500Enum,
 NhuHappyBit_DelayConditionms1000Enum
} EnumNhuHappyBit_DelayCondition;
typedef TknU32 NhuHappyBit_DelayCondition;

typedef struct NhuE_DPCCH_Info
{
 TknPres pres;
 NhuE_DPCCH_DPCCH_PowerOffset e_DPCCH_DPCCH_PowerOffset;
 NhuHappyBit_DelayCondition happyBit_DelayCondition;
} NhuE_DPCCH_Info;


typedef TknU32 NhuE_TFC_Boost_Info_r7e_TFCI_Boost;


typedef TknU32 NhuE_TFC_Boost_Info_r7delta_T2TP;

typedef struct NhuE_TFC_Boost_Info_r7
{
 TknPres pres;
 NhuE_TFC_Boost_Info_r7e_TFCI_Boost e_TFCI_Boost;
 NhuE_TFC_Boost_Info_r7delta_T2TP delta_T2TP;
} NhuE_TFC_Boost_Info_r7;


typedef TknU8 NhuE_DPDCH_PowerInterpolation;

typedef struct NhuE_DPCCH_Info_r7
{
 TknPres pres;
 NhuE_DPCCH_DPCCH_PowerOffset e_DPCCH_DPCCH_PowerOffset;
 NhuHappyBit_DelayCondition happyBit_DelayCondition;
 NhuE_TFC_Boost_Info_r7 e_TFC_Boost_Info;
 NhuE_DPDCH_PowerInterpolation e_DPDCH_PowerInterpolation;
} NhuE_DPCCH_Info_r7;


typedef TknU32 NhuE_TFCI_TableIdx;


typedef TknU32 NhuE_DPDCH_Reference_E_TFCIreference_E_TFCI;


typedef TknU32 NhuE_DPDCH_Reference_E_TFCIreference_E_TFCI_PO;

typedef struct NhuE_DPDCH_Reference_E_TFCI
{
 TknPres pres;
 NhuE_DPDCH_Reference_E_TFCIreference_E_TFCI reference_E_TFCI;
 NhuE_DPDCH_Reference_E_TFCIreference_E_TFCI_PO reference_E_TFCI_PO;
} NhuE_DPDCH_Reference_E_TFCI;

typedef struct NhuE_DPDCH_Reference_E_TFCILst
{
 TknU16 noComp;
 NhuE_DPDCH_Reference_E_TFCI *member;
}NhuE_DPDCH_Reference_E_TFCILst;


typedef enum enumNhuE_DPDCH_MaxChannelisationCodes
{
 NhuE_DPDCH_MaxChannelisationCodessf256Enum,
 NhuE_DPDCH_MaxChannelisationCodessf128Enum,
 NhuE_DPDCH_MaxChannelisationCodessf64Enum,
 NhuE_DPDCH_MaxChannelisationCodessf32Enum,
 NhuE_DPDCH_MaxChannelisationCodessf16Enum,
 NhuE_DPDCH_MaxChannelisationCodessf8Enum,
 NhuE_DPDCH_MaxChannelisationCodessf4Enum,
 NhuE_DPDCH_MaxChannelisationCodessf4x2Enum,
 NhuE_DPDCH_MaxChannelisationCodessf2x2Enum,
 NhuE_DPDCH_MaxChannelisationCodessf4x2_and_sf2x2Enum
} EnumNhuE_DPDCH_MaxChannelisationCodes;
typedef TknU32 NhuE_DPDCH_MaxChannelisationCodes;


typedef TknU32 NhuE_DPDCH_PL_NonMax;


typedef enum enumNhuE_DPDCH_PeriodicyOfSchedInfo
{
 NhuE_DPDCH_PeriodicyOfSchedInfoeveryEDCHTTIEnum,
 NhuE_DPDCH_PeriodicyOfSchedInfoms4Enum,
 NhuE_DPDCH_PeriodicyOfSchedInfoms10Enum,
 NhuE_DPDCH_PeriodicyOfSchedInfoms20Enum,
 NhuE_DPDCH_PeriodicyOfSchedInfoms50Enum,
 NhuE_DPDCH_PeriodicyOfSchedInfoms100Enum,
 NhuE_DPDCH_PeriodicyOfSchedInfoms200Enum,
 NhuE_DPDCH_PeriodicyOfSchedInfoms500Enum,
 NhuE_DPDCH_PeriodicyOfSchedInfoms1000Enum
} EnumNhuE_DPDCH_PeriodicyOfSchedInfo;
typedef TknU32 NhuE_DPDCH_PeriodicyOfSchedInfo;


typedef TknU32 NhuE_DPDCH_SchedulingInfoCfgpowerOffsetForSchedInfo;

typedef struct NhuE_DPDCH_SchedulingInfoCfg
{
 TknPres pres;
 NhuE_DPDCH_PeriodicyOfSchedInfo periodicityOfSchedInfo_NoGrant;
 NhuE_DPDCH_PeriodicyOfSchedInfo periodicityOfSchedInfo_Grant;
 NhuE_DPDCH_SchedulingInfoCfgpowerOffsetForSchedInfo powerOffsetForSchedInfo;
} NhuE_DPDCH_SchedulingInfoCfg;


typedef TknU32 NhuE_DPDCH_InfothreeIdxStepThreshold;


typedef TknU32 NhuE_DPDCH_InfotwoIdxStepThreshold;

typedef struct NhuE_DPDCH_Info
{
 TknPres pres;
 NhuE_TFCI_TableIdx e_TFCI_TableIdx;
 NhuE_DCH_MinimumSet_E_TFCI e_DCH_MinimumSet_E_TFCI;
 NhuE_DPDCH_Reference_E_TFCILst reference_E_TFCIs;
 NhuE_DPDCH_MaxChannelisationCodes maxChannelisationCodes;
 NhuE_DPDCH_PL_NonMax pl_NonMax;
 NhuE_DPDCH_SchedulingInfoCfg schedulingInfoCfg;
 NhuE_DPDCH_InfothreeIdxStepThreshold threeIdxStepThreshold;
 NhuE_DPDCH_InfotwoIdxStepThreshold twoIdxStepThreshold;
} NhuE_DPDCH_Info;


typedef TknU32 NhuE_DPDCH_Info_r7threeIdxStepThreshold;


typedef TknU32 NhuE_DPDCH_Info_r7twoIdxStepThreshold;

typedef struct NhuE_DPDCH_Info_r7
{
 TknPres pres;
 NhuE_TFCI_TableIdx e_TFCI_TableIdx;
 NhuE_DCH_MinimumSet_E_TFCI e_DCH_MinimumSet_E_TFCI;
 NhuE_DPDCH_Reference_E_TFCILst_r7 reference_E_TFCIs;
 NhuE_DPDCH_MaxChannelisationCodes maxChannelisationCodes;
 NhuE_DPDCH_PL_NonMax pl_NonMax;
 NhuE_DPDCH_SchedulingInfoCfg schedulingInfoCfg;
 NhuE_DPDCH_Info_r7threeIdxStepThreshold threeIdxStepThreshold;
 NhuE_DPDCH_Info_r7twoIdxStepThreshold twoIdxStepThreshold;
} NhuE_DPDCH_Info_r7;


typedef TknU32 NhuE_DPDCH_Info_r8threeIdxStepThreshold;


typedef TknU32 NhuE_DPDCH_Info_r8twoIdxStepThreshold;

typedef struct NhuE_DPDCH_Info_r8
{
 TknPres pres;
 NhuE_TFCI_TableIdx e_TFCI_TableIdx;
 NhuE_DCH_MinimumSet_E_TFCI e_DCH_MinimumSet_E_TFCI;
 NhuE_DPDCH_Reference_E_TFCILst_r7 reference_E_TFCIs;
 NhuMinReduced_E_DPDCH_GainFactor minReduced_E_DPDCH_GainFactor;
 NhuE_DPDCH_MaxChannelisationCodes maxChannelisationCodes;
 NhuE_DPDCH_PL_NonMax pl_NonMax;
 NhuE_DPDCH_SchedulingInfoCfg schedulingInfoCfg;
 NhuE_DPDCH_Info_r8threeIdxStepThreshold threeIdxStepThreshold;
 NhuE_DPDCH_Info_r8twoIdxStepThreshold twoIdxStepThreshold;
} NhuE_DPDCH_Info_r8;


typedef TknStrBSXL NhuE_DPDCH_SchedulingTransmCfgms2_SchedTransmGrantHARQAlloc;

typedef TknU32 NhuE_DPDCH_SchedulingTransmCfgservingGrantvalue;


typedef enum enumNhuE_DPDCH_SchedulingTransmCfgservingGrantprimary_Secondary_GrantSelector
{
 NhuE_DPDCH_SchedulingTransmCfgservingGrantprimary_Secondary_GrantSelectorprimaryEnum,
 NhuE_DPDCH_SchedulingTransmCfgservingGrantprimary_Secondary_GrantSelectorsecondaryEnum
} EnumNhuE_DPDCH_SchedulingTransmCfgservingGrantprimary_Secondary_GrantSelector;
typedef TknU32 NhuE_DPDCH_SchedulingTransmCfgservingGrantprimary_Secondary_GrantSelector;

typedef struct NhuE_DPDCH_SchedulingTransmCfgservingGrant
{
 TknPres pres;
 NhuE_DPDCH_SchedulingTransmCfgservingGrantvalue value;
 NhuE_DPDCH_SchedulingTransmCfgservingGrantprimary_Secondary_GrantSelector primary_Secondary_GrantSelector;
} NhuE_DPDCH_SchedulingTransmCfgservingGrant;

typedef struct NhuE_DPDCH_SchedulingTransmCfg
{
 TknPres pres;
 NhuE_DPDCH_SchedulingTransmCfgms2_SchedTransmGrantHARQAlloc ms2_SchedTransmGrantHARQAlloc;
 NhuE_DPDCH_SchedulingTransmCfgservingGrant servingGrant;
} NhuE_DPDCH_SchedulingTransmCfg;


typedef TknU32 NhuE_HICH_Info_TDD384_768n_E_HICH;


typedef TknU32 NhuE_HICH_Info_TDD384_768tS_Number;

typedef struct NhuE_HICH_Info_TDD384_768modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_TS_ChannelisationCode tdd384;
  NhuDL_TS_ChannelisationCode_VHCR tdd768;
 } val;
} NhuE_HICH_Info_TDD384_768modeSpecificInfo;


typedef enum enumNhuE_HICH_Info_TDD384_768burst_Typ
{
 NhuE_HICH_Info_TDD384_768burst_Typtype1Enum,
 NhuE_HICH_Info_TDD384_768burst_Typtype2Enum
} EnumNhuE_HICH_Info_TDD384_768burst_Typ;
typedef TknU32 NhuE_HICH_Info_TDD384_768burst_Typ;


typedef enum enumNhuE_HICH_Info_TDD384_768midamble_Allocn_Mode
{
 NhuE_HICH_Info_TDD384_768midamble_Allocn_ModedefaultEnum,
 NhuE_HICH_Info_TDD384_768midamble_Allocn_ModecommonEnum
} EnumNhuE_HICH_Info_TDD384_768midamble_Allocn_Mode;
typedef TknU32 NhuE_HICH_Info_TDD384_768midamble_Allocn_Mode;

typedef struct NhuE_HICH_Info_TDD384_768
{
 TknPres pres;
 NhuE_HICH_Info_TDD384_768n_E_HICH n_E_HICH;
 NhuE_HICH_Info_TDD384_768tS_Number tS_Number;
 NhuE_HICH_Info_TDD384_768modeSpecificInfo modeSpecificInfo;
 NhuE_HICH_Info_TDD384_768burst_Typ burst_Typ;
 NhuE_HICH_Info_TDD384_768midamble_Allocn_Mode midamble_Allocn_Mode;
} NhuE_HICH_Info_TDD384_768;


typedef TknU32 NhuE_PUCH_TS_Slotsts_Number;

typedef struct NhuE_PUCH_TS_Slots
{
 TknPres pres;
 NhuE_PUCH_TS_Slotsts_Number ts_Number;
 NhuMidambleShiftAndBurstTyp_EDCH midambleShiftAndBurstTyp;
} NhuE_PUCH_TS_Slots;

typedef struct NhuPRACH_Partitioning_LCR_r4
{
 TknU16 noComp;
 NhuASCSetting_TDD_LCR_r4 *member;
}NhuPRACH_Partitioning_LCR_r4;


typedef NhuPRACH_Partitioning_LCR_r4 NhuE_RUCCH_AccessServiceClass;

typedef enum enumNhuPersistenceScalingFactor
{
 NhuPersistenceScalingFactorpsf0_9Enum,
 NhuPersistenceScalingFactorpsf0_8Enum,
 NhuPersistenceScalingFactorpsf0_7Enum,
 NhuPersistenceScalingFactorpsf0_6Enum,
 NhuPersistenceScalingFactorpsf0_5Enum,
 NhuPersistenceScalingFactorpsf0_4Enum,
 NhuPersistenceScalingFactorpsf0_3Enum,
 NhuPersistenceScalingFactorpsf0_2Enum
} EnumNhuPersistenceScalingFactor;
typedef TknU32 NhuPersistenceScalingFactor;


typedef enum enumNhuSF16Codes
{
 NhuSF16Codescc16_1Enum,
 NhuSF16Codescc16_2Enum,
 NhuSF16Codescc16_3Enum,
 NhuSF16Codescc16_4Enum,
 NhuSF16Codescc16_5Enum,
 NhuSF16Codescc16_6Enum,
 NhuSF16Codescc16_7Enum,
 NhuSF16Codescc16_8Enum
} EnumNhuSF16Codes;
typedef TknU32 NhuSF16Codes;


typedef enum enumNhuSF8Codes
{
 NhuSF8Codescc8_1Enum,
 NhuSF8Codescc8_2Enum,
 NhuSF8Codescc8_3Enum,
 NhuSF8Codescc8_4Enum,
 NhuSF8Codescc8_5Enum,
 NhuSF8Codescc8_6Enum,
 NhuSF8Codescc8_7Enum,
 NhuSF8Codescc8_8Enum
} EnumNhuSF8Codes;
typedef TknU32 NhuSF8Codes;


typedef enum enumNhuSF32Codes
{
 NhuSF32Codescc32_1Enum,
 NhuSF32Codescc32_2Enum,
 NhuSF32Codescc32_3Enum,
 NhuSF32Codescc32_4Enum,
 NhuSF32Codescc32_5Enum,
 NhuSF32Codescc32_6Enum,
 NhuSF32Codescc32_7Enum,
 NhuSF32Codescc32_8Enum,
 NhuSF32Codescc32_9Enum,
 NhuSF32Codescc32_10Enum,
 NhuSF32Codescc32_11Enum,
 NhuSF32Codescc32_12Enum,
 NhuSF32Codescc32_13Enum,
 NhuSF32Codescc32_14Enum,
 NhuSF32Codescc32_15Enum,
 NhuSF32Codescc32_16Enum
} EnumNhuSF32Codes;
typedef TknU32 NhuSF32Codes;


typedef enum enumNhuSF16Codes2
{
 NhuSF16Codes2cc16_1Enum,
 NhuSF16Codes2cc16_2Enum,
 NhuSF16Codes2cc16_3Enum,
 NhuSF16Codes2cc16_4Enum,
 NhuSF16Codes2cc16_5Enum,
 NhuSF16Codes2cc16_6Enum,
 NhuSF16Codes2cc16_7Enum,
 NhuSF16Codes2cc16_8Enum,
 NhuSF16Codes2cc16_9Enum,
 NhuSF16Codes2cc16_10Enum,
 NhuSF16Codes2cc16_11Enum,
 NhuSF16Codes2cc16_12Enum,
 NhuSF16Codes2cc16_13Enum,
 NhuSF16Codes2cc16_14Enum,
 NhuSF16Codes2cc16_15Enum,
 NhuSF16Codes2cc16_16Enum
} EnumNhuSF16Codes2;
typedef TknU32 NhuSF16Codes2;

typedef struct NhuPersistenceScalingFactorLst
{
 TknU16 noComp;
 NhuPersistenceScalingFactor *member;
}NhuPersistenceScalingFactorLst;


typedef TknStrBSXL NhuSync_UL_Codes_Bitmap;

typedef TknU32 NhuSYNC_UL_InfoForE_RUCCHprxUpPCHdes;


typedef TknU32 NhuSYNC_UL_InfoForE_RUCCHpowerRampStep;


typedef enum enumNhuSYNC_UL_InfoForE_RUCCHmax_SYNC_UL_Transmissions
{
 NhuSYNC_UL_InfoForE_RUCCHmax_SYNC_UL_Transmissionstr1Enum,
 NhuSYNC_UL_InfoForE_RUCCHmax_SYNC_UL_Transmissionstr2Enum,
 NhuSYNC_UL_InfoForE_RUCCHmax_SYNC_UL_Transmissionstr4Enum,
 NhuSYNC_UL_InfoForE_RUCCHmax_SYNC_UL_Transmissionstr8Enum
} EnumNhuSYNC_UL_InfoForE_RUCCHmax_SYNC_UL_Transmissions;
typedef TknU32 NhuSYNC_UL_InfoForE_RUCCHmax_SYNC_UL_Transmissions;


typedef TknU32 NhuSYNC_UL_InfoForE_RUCCHmmax;

typedef struct NhuSYNC_UL_InfoForE_RUCCH
{
 TknPres pres;
 NhuSYNC_UL_InfoForE_RUCCHprxUpPCHdes prxUpPCHdes;
 NhuSYNC_UL_InfoForE_RUCCHpowerRampStep powerRampStep;
 NhuSYNC_UL_InfoForE_RUCCHmax_SYNC_UL_Transmissions max_SYNC_UL_Transmissions;
 NhuSync_UL_Codes_Bitmap e_RUCCH_Sync_UL_Codes_Bitmap;
 NhuSYNC_UL_InfoForE_RUCCHmmax mmax;
} NhuSYNC_UL_InfoForE_RUCCH;


typedef TknU32 NhuTimeslotNumber_PRACH_LCR_r4;


typedef enum enumNhuTDD_PRACH_CCode_LCR_r4
{
 NhuTDD_PRACH_CCode_LCR_r4cc4_1Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc4_2Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc4_3Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc4_4Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc8_1Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc8_2Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc8_3Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc8_4Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc8_5Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc8_6Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc8_7Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc8_8Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_1Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_2Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_3Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_4Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_5Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_6Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_7Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_8Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_9Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_10Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_11Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_12Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_13Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_14Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_15Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_16Enum
} EnumNhuTDD_PRACH_CCode_LCR_r4;
typedef TknU32 NhuTDD_PRACH_CCode_LCR_r4;

typedef struct NhuPRACH_ChanCodes_Lst_LCR
{
 TknU16 noComp;
 NhuTDD_PRACH_CCode_LCR_r4 *member;
}NhuPRACH_ChanCodes_Lst_LCR;


typedef enum enumNhuTDD_FPACH_CCode16_r4
{
 NhuTDD_FPACH_CCode16_r4cc16_1Enum,
 NhuTDD_FPACH_CCode16_r4cc16_2Enum,
 NhuTDD_FPACH_CCode16_r4cc16_3Enum,
 NhuTDD_FPACH_CCode16_r4cc16_4Enum,
 NhuTDD_FPACH_CCode16_r4cc16_5Enum,
 NhuTDD_FPACH_CCode16_r4cc16_6Enum,
 NhuTDD_FPACH_CCode16_r4cc16_7Enum,
 NhuTDD_FPACH_CCode16_r4cc16_8Enum,
 NhuTDD_FPACH_CCode16_r4cc16_9Enum,
 NhuTDD_FPACH_CCode16_r4cc16_10Enum,
 NhuTDD_FPACH_CCode16_r4cc16_11Enum,
 NhuTDD_FPACH_CCode16_r4cc16_12Enum,
 NhuTDD_FPACH_CCode16_r4cc16_13Enum,
 NhuTDD_FPACH_CCode16_r4cc16_14Enum,
 NhuTDD_FPACH_CCode16_r4cc16_15Enum,
 NhuTDD_FPACH_CCode16_r4cc16_16Enum
} EnumNhuTDD_FPACH_CCode16_r4;
typedef TknU32 NhuTDD_FPACH_CCode16_r4;


typedef TknU32 NhuWi_LCR;

typedef struct NhuFPACH_Info_r4
{
 TknPres pres;
 NhuTimeslotNumber_LCR_r4 timeslot;
 NhuTDD_FPACH_CCode16_r4 channelisationCode;
 NhuMidambleShiftAndBurstTyp_LCR_r4 midambleShiftAndBurstTyp;
 NhuWi_LCR wi;
} NhuFPACH_Info_r4;

typedef struct NhuPRACH_Info_LCR
{
 TknPres pres;
 NhuTimeslotNumber_PRACH_LCR_r4 timeslot;
 NhuPRACH_ChanCodes_Lst_LCR prach_ChanCodes_list_LCR;
 NhuMidambleShiftAndBurstTyp_LCR_r4 midambleShiftAndBurstTyp;
 NhuFPACH_Info_r4 fpach_Info;
} NhuPRACH_Info_LCR;

typedef struct NhuPRACH_Info_LCR_Lst
{
 TknU16 noComp;
 NhuPRACH_Info_LCR *member;
}NhuPRACH_Info_LCR_Lst;


typedef TknS32 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_ConstantValue;


typedef enum enumNhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCH
{
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCHms40Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCHms80Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCHms120Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCHms160Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCHms200Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCHms240Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCHms280Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCHms320Enum
} EnumNhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCH;
typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCH;


typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_TS_Number;


typedef enum enumNhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_Midamble
{
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_MidambledirectEnum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_Midambledirect_InvertedEnum
} EnumNhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_Midamble;
typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_Midamble;


typedef enum enumNhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_adv
{
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_advsec1Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_advsec2Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_advsec4Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_advsec8Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_advsec16Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_advsec32Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_advsec128Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_advinfinityEnum
} EnumNhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_adv;
typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_adv;


typedef enum enumNhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHED
{
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHEDzeroEnum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHEDms40Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHEDms80Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHEDms160Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHEDms250Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHEDsec1Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHEDsec2Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHEDsec4Enum
} EnumNhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHED;
typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHED;

typedef struct NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd384sF16
{
 TknU16 noComp;
 NhuSF16Codes *member;
}NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd384sF16;

typedef struct NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd384sF8
{
 TknU16 noComp;
 NhuSF8Codes *member;
}NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd384sF8;

typedef struct NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd384
{
 TknU8 choice;
 union {
  NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd384sF16 sF16;
  NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd384sF8 sF8;
 } val;
} NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd384;

typedef struct NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd768sF32
{
 TknU16 noComp;
 NhuSF32Codes *member;
}NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd768sF32;

typedef struct NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd768sF816
{
 TknU16 noComp;
 NhuSF16Codes2 *member;
}NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd768sF816;

typedef struct NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd768
{
 TknU8 choice;
 union {
  NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd768sF32 sF32;
  NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd768sF816 sF816;
 } val;
} NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd768;

typedef struct NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd384 tdd384;
  NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd768 tdd768;
 } val;
} NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfo;

typedef struct NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768
{
 TknPres pres;
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_ConstantValue e_RUCCH_ConstantValue;
 NhuPersistenceScalingFactor e_RUCCH_PersistenceScalingFactor;
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCH t_RUCCH;
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_TS_Number e_RUCCH_TS_Number;
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_Midamble e_RUCCH_Midamble;
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_adv t_adv;
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHED t_SCHED;
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfo modeSpecificInfo;
} NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768;


typedef enum enumNhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCH
{
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms20Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms40Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms60Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms80Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms120Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms160Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms200Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms240Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms280Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms320Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms400Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms500Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms600Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms800Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms1000Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms2000Enum
} EnumNhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCH;
typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCH;


typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd128n_RUCCH;


typedef enum enumNhuE_RUCCH_InfomodeSpecificInfotdd128t_WAIT
{
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAITeveryEDCHTTIEnum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAITms40Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAITms80Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAITms160Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAITms320Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAITms640Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAITms1000Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAITms2000Enum
} EnumNhuE_RUCCH_InfomodeSpecificInfotdd128t_WAIT;
typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAIT;


typedef enum enumNhuE_RUCCH_InfomodeSpecificInfotdd128t_SI
{
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_SIeveryEDCHTTIEnum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_SIms20Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_SIms40Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_SIms60Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_SIms80Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_SIms160Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_SIms200Enum
} EnumNhuE_RUCCH_InfomodeSpecificInfotdd128t_SI;
typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd128t_SI;


typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd128extendedEstimationWindow;

typedef struct NhuE_RUCCH_InfomodeSpecificInfotdd128
{
 TknPres pres;
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCH t_RUCCH;
 NhuE_RUCCH_InfomodeSpecificInfotdd128n_RUCCH n_RUCCH;
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAIT t_WAIT;
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_SI t_SI;
 NhuE_RUCCH_InfomodeSpecificInfotdd128extendedEstimationWindow extendedEstimationWindow;
 NhuE_RUCCH_AccessServiceClass e_RUCCH_AccessServiceClass;
 NhuPersistenceScalingFactorLst e_RUCCH_PersistenceScalingFactor;
 NhuSYNC_UL_InfoForE_RUCCH sync_UL_InfoForE_RUCCH;
 NhuPRACH_Info_LCR_Lst prach_information;
} NhuE_RUCCH_InfomodeSpecificInfotdd128;

typedef struct NhuE_RUCCH_InfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768 tdd384_tdd768;
  NhuE_RUCCH_InfomodeSpecificInfotdd128 tdd128;
 } val;
} NhuE_RUCCH_InfomodeSpecificInfo;

typedef struct NhuE_RUCCH_Info
{
 TknPres pres;
 NhuE_RUCCH_InfomodeSpecificInfo modeSpecificInfo;
} NhuE_RUCCH_Info;


typedef enum enumNhuE_RUCCH_Info_TDD128t_RUCCH
{
 NhuE_RUCCH_Info_TDD128t_RUCCHms20Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms40Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms60Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms80Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms120Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms160Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms200Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms240Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms280Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms320Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms400Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms500Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms600Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms800Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms1000Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms2000Enum
} EnumNhuE_RUCCH_Info_TDD128t_RUCCH;
typedef TknU32 NhuE_RUCCH_Info_TDD128t_RUCCH;


typedef TknU32 NhuE_RUCCH_Info_TDD128n_RUCCH;


typedef enum enumNhuE_RUCCH_Info_TDD128t_WAIT
{
 NhuE_RUCCH_Info_TDD128t_WAITeveryEDCHTTIEnum,
 NhuE_RUCCH_Info_TDD128t_WAITms40Enum,
 NhuE_RUCCH_Info_TDD128t_WAITms80Enum,
 NhuE_RUCCH_Info_TDD128t_WAITms160Enum,
 NhuE_RUCCH_Info_TDD128t_WAITms320Enum,
 NhuE_RUCCH_Info_TDD128t_WAITms640Enum,
 NhuE_RUCCH_Info_TDD128t_WAITms1000Enum,
 NhuE_RUCCH_Info_TDD128t_WAITms2000Enum
} EnumNhuE_RUCCH_Info_TDD128t_WAIT;
typedef TknU32 NhuE_RUCCH_Info_TDD128t_WAIT;


typedef enum enumNhuE_RUCCH_Info_TDD128t_SI
{
 NhuE_RUCCH_Info_TDD128t_SIeveryEDCHTTIEnum,
 NhuE_RUCCH_Info_TDD128t_SIms20Enum,
 NhuE_RUCCH_Info_TDD128t_SIms40Enum,
 NhuE_RUCCH_Info_TDD128t_SIms60Enum,
 NhuE_RUCCH_Info_TDD128t_SIms80Enum,
 NhuE_RUCCH_Info_TDD128t_SIms160Enum,
 NhuE_RUCCH_Info_TDD128t_SIms200Enum
} EnumNhuE_RUCCH_Info_TDD128t_SI;
typedef TknU32 NhuE_RUCCH_Info_TDD128t_SI;


typedef TknU32 NhuE_RUCCH_Info_TDD128extendedEstimationWindow;

typedef struct NhuE_RUCCH_Info_TDD128
{
 TknPres pres;
 NhuE_RUCCH_Info_TDD128t_RUCCH t_RUCCH;
 NhuE_RUCCH_Info_TDD128n_RUCCH n_RUCCH;
 NhuE_RUCCH_Info_TDD128t_WAIT t_WAIT;
 NhuE_RUCCH_Info_TDD128t_SI t_SI;
 NhuE_RUCCH_Info_TDD128extendedEstimationWindow extendedEstimationWindow;
 NhuE_RUCCH_AccessServiceClass e_RUCCH_AccessServiceClass;
 NhuPersistenceScalingFactorLst e_RUCCH_PersistenceScalingFactor;
 NhuSYNC_UL_InfoForE_RUCCH sync_UL_InfoForE_RUCCH;
 NhuPRACH_Info_LCR_Lst prach_information;
} NhuE_RUCCH_Info_TDD128;


typedef TknU32 NhuReference_Beta_QPSKreference_Code_Rate;


typedef TknS32 NhuReference_Beta_QPSKreference_Beta;

typedef struct NhuReference_Beta_QPSK
{
 TknPres pres;
 NhuReference_Beta_QPSKreference_Code_Rate reference_Code_Rate;
 NhuReference_Beta_QPSKreference_Beta reference_Beta;
} NhuReference_Beta_QPSK;


typedef TknU32 NhuReference_Beta_16QAMreference_Code_Rate;


typedef TknS32 NhuReference_Beta_16QAMreference_Beta;

typedef struct NhuReference_Beta_16QAM
{
 TknPres pres;
 NhuReference_Beta_16QAMreference_Code_Rate reference_Code_Rate;
 NhuReference_Beta_16QAMreference_Beta reference_Beta;
} NhuReference_Beta_16QAM;

typedef struct NhuE_TFCS_Inforeference_Beta_QPSK_Lst
{
 TknU16 noComp;
 NhuReference_Beta_QPSK *member;
}NhuE_TFCS_Inforeference_Beta_QPSK_Lst;

typedef struct NhuE_TFCS_Inforeference_Beta_16QAM_Lst
{
 TknU16 noComp;
 NhuReference_Beta_16QAM *member;
}NhuE_TFCS_Inforeference_Beta_16QAM_Lst;

typedef struct NhuE_TFCS_Info
{
 TknPres pres;
 NhuE_TFCS_Inforeference_Beta_QPSK_Lst reference_Beta_QPSK_Lst;
 NhuE_TFCS_Inforeference_Beta_16QAM_Lst reference_Beta_16QAM_Lst;
} NhuE_TFCS_Info;


typedef enum enumNhuEnablingDelay
{
 NhuEnablingDelayradio_frames_0Enum,
 NhuEnablingDelayradio_frames_1Enum,
 NhuEnablingDelayradio_frames_2Enum,
 NhuEnablingDelayradio_frames_4Enum,
 NhuEnablingDelayradio_frames_8Enum,
 NhuEnablingDelayradio_frames_16Enum,
 NhuEnablingDelayradio_frames_32Enum,
 NhuEnablingDelayradio_frames_64Enum,
 NhuEnablingDelayradio_frames_128Enum,
 NhuEnablingDelayspare7Enum,
 NhuEnablingDelayspare6Enum,
 NhuEnablingDelayspare5Enum,
 NhuEnablingDelayspare4Enum,
 NhuEnablingDelayspare3Enum,
 NhuEnablingDelayspare2Enum,
 NhuEnablingDelayspare1Enum
} EnumNhuEnablingDelay;
typedef TknU32 NhuEnablingDelay;


typedef TknU32 NhuEXT_UL_TimingAdvancemodeSpecificInfotdd384ex_ul_TimingAdvance;

typedef struct NhuEXT_UL_TimingAdvancemodeSpecificInfotdd384
{
 TknPres pres;
 NhuEXT_UL_TimingAdvancemodeSpecificInfotdd384ex_ul_TimingAdvance ex_ul_TimingAdvance;
} NhuEXT_UL_TimingAdvancemodeSpecificInfotdd384;


typedef TknU32 NhuEXT_UL_TimingAdvancemodeSpecificInfotdd768ex_ul_TimingAdvance;

typedef struct NhuEXT_UL_TimingAdvancemodeSpecificInfotdd768
{
 TknPres pres;
 NhuEXT_UL_TimingAdvancemodeSpecificInfotdd768ex_ul_TimingAdvance ex_ul_TimingAdvance;
} NhuEXT_UL_TimingAdvancemodeSpecificInfotdd768;

typedef struct NhuEXT_UL_TimingAdvancemodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuEXT_UL_TimingAdvancemodeSpecificInfotdd384 tdd384;
  NhuEXT_UL_TimingAdvancemodeSpecificInfotdd768 tdd768;
 } val;
} NhuEXT_UL_TimingAdvancemodeSpecificInfo;

typedef struct NhuEXT_UL_TimingAdvance
{
 TknPres pres;
 NhuEXT_UL_TimingAdvancemodeSpecificInfo modeSpecificInfo;
} NhuEXT_UL_TimingAdvance;


typedef TknU8 NhuFACH_PCH_Infoctch_Indicator;

typedef struct NhuFACH_PCH_Info
{
 TknPres pres;
 NhuTportFormatSet transportFormatSet;
 NhuTportChannelIdentity transportChannelIdentity;
 NhuFACH_PCH_Infoctch_Indicator ctch_Indicator;
} NhuFACH_PCH_Info;

typedef struct NhuFACH_PCH_InfoLst
{
 TknU16 noComp;
 NhuFACH_PCH_Info *member;
}NhuFACH_PCH_InfoLst;


typedef enum enumNhuFeedback_cycle
{
 NhuFeedback_cyclefc0Enum,
 NhuFeedback_cyclefc2Enum,
 NhuFeedback_cyclefc4Enum,
 NhuFeedback_cyclefc8Enum,
 NhuFeedback_cyclefc10Enum,
 NhuFeedback_cyclefc20Enum,
 NhuFeedback_cyclefc40Enum,
 NhuFeedback_cyclefc80Enum,
 NhuFeedback_cyclefc160Enum
} EnumNhuFeedback_cycle;
typedef TknU32 NhuFeedback_cycle;


typedef enum enumNhuFeedback_cycle_r7
{
 NhuFeedback_cycle_r7fc0Enum,
 NhuFeedback_cycle_r7fc2Enum,
 NhuFeedback_cycle_r7fc4Enum,
 NhuFeedback_cycle_r7fc8Enum,
 NhuFeedback_cycle_r7fc10Enum,
 NhuFeedback_cycle_r7fc20Enum,
 NhuFeedback_cycle_r7fc40Enum,
 NhuFeedback_cycle_r7fc80Enum,
 NhuFeedback_cycle_r7fc160Enum,
 NhuFeedback_cycle_r7fc16Enum,
 NhuFeedback_cycle_r7fc32Enum,
 NhuFeedback_cycle_r7fc64Enum,
 NhuFeedback_cycle_r7spare4Enum,
 NhuFeedback_cycle_r7spare3Enum,
 NhuFeedback_cycle_r7spare2Enum,
 NhuFeedback_cycle_r7spare1Enum
} EnumNhuFeedback_cycle_r7;
typedef TknU32 NhuFeedback_cycle_r7;


typedef TknU32 NhuFTPICH_SlotFormat;


typedef TknU32 NhuFTPICH_FrameOffset;


typedef TknU32 NhuF_TPICH_Infoftpich_CodeNumber;


typedef enum enumNhuF_TPICH_Infoftpich_ReliabilityWindowSize
{
 NhuF_TPICH_Infoftpich_ReliabilityWindowSizeslots_3Enum,
 NhuF_TPICH_Infoftpich_ReliabilityWindowSizeslots_240Enum
} EnumNhuF_TPICH_Infoftpich_ReliabilityWindowSize;
typedef TknU32 NhuF_TPICH_Infoftpich_ReliabilityWindowSize;

typedef struct NhuF_TPICH_Info
{
 TknPres pres;
 NhuFTPICH_SlotFormat ftpich_SlotFormat;
 NhuF_TPICH_Infoftpich_CodeNumber ftpich_CodeNumber;
 NhuFTPICH_FrameOffset ftpich_FrameOffset;
 NhuF_TPICH_Infoftpich_ReliabilityWindowSize ftpich_ReliabilityWindowSize;
} NhuF_TPICH_Info;


typedef TknU32 NhuFrequencyIdxForEnhancedMeas;

typedef struct NhuFreqIdxLstForEnhancedMeas
{
 TknU16 noComp;
 NhuFrequencyIdxForEnhancedMeas *member;
}NhuFreqIdxLstForEnhancedMeas;

typedef struct NhuHS_ChannelisationCodeSetInfo_LCR
{
 TknPres pres;
 NhuHS_ChannelisationCode_LCR startCode;
 NhuHS_ChannelisationCode_LCR stopCode;
} NhuHS_ChannelisationCodeSetInfo_LCR;

typedef struct NhuHS_SCCH_SysInfohS_SCCHChannelisationCodeInfo
{
 TknU16 noComp;
 NhuHS_SCCH_Codes *member;
}NhuHS_SCCH_SysInfohS_SCCHChannelisationCodeInfo;

typedef struct NhuHS_SCCH_SysInfo
{
 TknPres pres;
 NhuSecondaryScramblingCode dl_ScramblingCode;
 NhuHS_SCCH_SysInfohS_SCCHChannelisationCodeInfo hS_SCCHChannelisationCodeInfo;
} NhuHS_SCCH_SysInfo;

typedef struct NhuHS_DSCH_CmnSysInfocommon_H_RNTI_information
{
 TknU16 noComp;
 NhuH_RNTI *member;
}NhuHS_DSCH_CmnSysInfocommon_H_RNTI_information;

typedef struct NhuHS_DSCH_CmnSysInfo
{
 TknPres pres;
 NhuCmnRBMappingInfo ccch_MappingInfo;
 NhuCmnRBMappingInfo srb1_MappingInfo;
 NhuCmn_MAC_ehs_ReorderingQueueLst common_MAC_ehs_ReorderingQueueLst;
 NhuHS_SCCH_SysInfo hs_scch_SysInfo;
 NhuHARQ_Info harq_SysInfo;
 NhuHS_DSCH_CmnSysInfocommon_H_RNTI_information common_H_RNTI_information;
 NhuH_RNTI bcchSpecific_H_RNTI;
} NhuHS_DSCH_CmnSysInfo;


typedef enum enumNhuHS_DSCH_DrxBurstFach
{
 NhuHS_DSCH_DrxBurstFachf1Enum,
 NhuHS_DSCH_DrxBurstFachf2Enum,
 NhuHS_DSCH_DrxBurstFachf4Enum,
 NhuHS_DSCH_DrxBurstFachf8Enum,
 NhuHS_DSCH_DrxBurstFachf16Enum,
 NhuHS_DSCH_DrxBurstFachspare3Enum,
 NhuHS_DSCH_DrxBurstFachspare2Enum,
 NhuHS_DSCH_DrxBurstFachspare1Enum
} EnumNhuHS_DSCH_DrxBurstFach;
typedef TknU32 NhuHS_DSCH_DrxBurstFach;


typedef enum enumNhuHS_DSCH_DrxCycleFach
{
 NhuHS_DSCH_DrxCycleFachf4Enum,
 NhuHS_DSCH_DrxCycleFachf8Enum,
 NhuHS_DSCH_DrxCycleFachf16Enum,
 NhuHS_DSCH_DrxCycleFachf32Enum
} EnumNhuHS_DSCH_DrxCycleFach;
typedef TknU32 NhuHS_DSCH_DrxCycleFach;


typedef TknU8 NhuHS_DSCH_DrxCellfach_infodrxInterruption_hs_dsch;

typedef struct NhuHS_DSCH_DrxCellfach_info
{
 TknPres pres;
 NhuT_321 t_321;
 NhuHS_DSCH_DrxCycleFach hs_dsch_DrxCycleFach;
 NhuHS_DSCH_DrxBurstFach hs_dsch_DrxBurstFach;
 NhuHS_DSCH_DrxCellfach_infodrxInterruption_hs_dsch drxInterruption_hs_dsch;
} NhuHS_DSCH_DrxCellfach_info;

typedef struct NhuHS_DSCH_DrxCellfach_info_TDD128
{
 TknPres pres;
 NhuT_321 t_321;
 NhuHS_DSCH_DrxCycleFach hs_dsch_DrxCycleFach;
 NhuHS_DSCH_DrxBurstFach hs_dsch_DrxBurstFach;
} NhuHS_DSCH_DrxCellfach_info_TDD128;


typedef enum enumNhuPI_CountPerFrame
{
 NhuPI_CountPerFramee18Enum,
 NhuPI_CountPerFramee36Enum,
 NhuPI_CountPerFramee72Enum,
 NhuPI_CountPerFramee144Enum
} EnumNhuPI_CountPerFrame;
typedef TknU32 NhuPI_CountPerFrame;


typedef enum enumNhuTDD_PICH_CCode
{
 NhuTDD_PICH_CCodecc16_1Enum,
 NhuTDD_PICH_CCodecc16_2Enum,
 NhuTDD_PICH_CCodecc16_3Enum,
 NhuTDD_PICH_CCodecc16_4Enum,
 NhuTDD_PICH_CCodecc16_5Enum,
 NhuTDD_PICH_CCodecc16_6Enum,
 NhuTDD_PICH_CCodecc16_7Enum,
 NhuTDD_PICH_CCodecc16_8Enum,
 NhuTDD_PICH_CCodecc16_9Enum,
 NhuTDD_PICH_CCodecc16_10Enum,
 NhuTDD_PICH_CCodecc16_11Enum,
 NhuTDD_PICH_CCodecc16_12Enum,
 NhuTDD_PICH_CCodecc16_13Enum,
 NhuTDD_PICH_CCodecc16_14Enum,
 NhuTDD_PICH_CCodecc16_15Enum,
 NhuTDD_PICH_CCodecc16_16Enum
} EnumNhuTDD_PICH_CCode;
typedef TknU32 NhuTDD_PICH_CCode;


typedef TknU32 NhuRepPerLengthOffset_PICHrpp4_2;


typedef TknU32 NhuRepPerLengthOffset_PICHrpp8_2;


typedef TknU32 NhuRepPerLengthOffset_PICHrpp8_4;


typedef TknU32 NhuRepPerLengthOffset_PICHrpp16_2;


typedef TknU32 NhuRepPerLengthOffset_PICHrpp16_4;


typedef TknU32 NhuRepPerLengthOffset_PICHrpp32_2;


typedef TknU32 NhuRepPerLengthOffset_PICHrpp32_4;


typedef TknU32 NhuRepPerLengthOffset_PICHrpp64_2;


typedef TknU32 NhuRepPerLengthOffset_PICHrpp64_4;

typedef struct NhuRepPerLengthOffset_PICH
{
 TknU8 choice;
 union {
  NhuRepPerLengthOffset_PICHrpp4_2 rpp4_2;
  NhuRepPerLengthOffset_PICHrpp8_2 rpp8_2;
  NhuRepPerLengthOffset_PICHrpp8_4 rpp8_4;
  NhuRepPerLengthOffset_PICHrpp16_2 rpp16_2;
  NhuRepPerLengthOffset_PICHrpp16_4 rpp16_4;
  NhuRepPerLengthOffset_PICHrpp32_2 rpp32_2;
  NhuRepPerLengthOffset_PICHrpp32_4 rpp32_4;
  NhuRepPerLengthOffset_PICHrpp64_2 rpp64_2;
  NhuRepPerLengthOffset_PICHrpp64_4 rpp64_4;
 } val;
} NhuRepPerLengthOffset_PICH;


typedef enum enumNhuPagIndicatorLength
{
 NhuPagIndicatorLengthpi4Enum,
 NhuPagIndicatorLengthpi8Enum,
 NhuPagIndicatorLengthpi16Enum
} EnumNhuPagIndicatorLength;
typedef TknU32 NhuPagIndicatorLength;


typedef enum enumNhuN_GAP
{
 NhuN_GAPf2Enum,
 NhuN_GAPf4Enum,
 NhuN_GAPf8Enum
} EnumNhuN_GAP;
typedef TknU32 NhuN_GAP;


typedef TknU32 NhuN_PCH;


typedef TknU8 NhuPICH_Infofddsttd_Indicator;

typedef struct NhuPICH_Infofdd
{
 TknPres pres;
 NhuChannelisationCode256 channelisationCode256;
 NhuPI_CountPerFrame pi_CountPerFrame;
 NhuPICH_Infofddsttd_Indicator sttd_Indicator;
} NhuPICH_Infofdd;

typedef struct NhuPICH_Infotdd
{
 TknPres pres;
 NhuTDD_PICH_CCode channelisationCode;
 NhuTimeslotNumber timeslot;
 NhuMidambleShiftAndBurstTyp midambleShiftAndBurstTyp;
 NhuRepPerLengthOffset_PICH repetitionPeriodLengthOffset;
 NhuPagIndicatorLength pagingIndicatorLength;
 NhuN_GAP n_GAP;
 NhuN_PCH n_PCH;
} NhuPICH_Infotdd;

typedef struct NhuPICH_Info
{
 TknU8 choice;
 union {
  NhuPICH_Infofdd fdd;
  NhuPICH_Infotdd tdd;
 } val;
} NhuPICH_Info;


typedef TknU32 NhuPICH_ForHSDPASuppPaghs_pdschChannelisationCode;

typedef struct NhuPICH_ForHSDPASuppPag
{
 TknPres pres;
 NhuPICH_Info hsdpa_AssociatedPichInfo;
 NhuPICH_ForHSDPASuppPaghs_pdschChannelisationCode hs_pdschChannelisationCode;
} NhuPICH_ForHSDPASuppPag;


typedef TknU32 NhuTportBlockSizeIdx;

typedef struct NhuHS_DSCH_PagSysInfopich_ForHSDPASuppPagLst
{
 TknU16 noComp;
 NhuPICH_ForHSDPASuppPag *member;
}NhuHS_DSCH_PagSysInfopich_ForHSDPASuppPagLst;


typedef TknU32 NhuHS_DSCH_PagSysInfonumberOfPcchTransmissions;

typedef struct NhuHS_DSCH_PagSysInfotransportBlockSizeLst
{
 TknU16 noComp;
 NhuTportBlockSizeIdx *member;
}NhuHS_DSCH_PagSysInfotransportBlockSizeLst;

typedef struct NhuHS_DSCH_PagSysInfo
{
 TknPres pres;
 NhuSecondaryScramblingCode dlScramblingCode;
 NhuHS_DSCH_PagSysInfopich_ForHSDPASuppPagLst pich_ForHSDPASuppPagLst;
 NhuHS_DSCH_PagSysInfonumberOfPcchTransmissions numberOfPcchTransmissions;
 NhuHS_DSCH_PagSysInfotransportBlockSizeLst transportBlockSizeLst;
} NhuHS_DSCH_PagSysInfo;

typedef struct NhuHS_DSCH_RxPatternLst_TDD128Member
{
 TknPres pres;
 NhuRepetitionPeriodAndLengthForSPS repetitionPeriodAndLength;
} NhuHS_DSCH_RxPatternLst_TDD128Member;

typedef struct NhuHS_DSCH_RxPatternLst_TDD128
{
 TknU16 noComp;
 NhuHS_DSCH_RxPatternLst_TDD128Member *member;
}NhuHS_DSCH_RxPatternLst_TDD128;


typedef TknU32 NhuHS_DSCH_TbsLst_TDD128Memberhs_dsch_TBSizeIdx;

typedef struct NhuHS_DSCH_TbsLst_TDD128Member
{
 TknPres pres;
 NhuHS_DSCH_TbsLst_TDD128Memberhs_dsch_TBSizeIdx hs_dsch_TBSizeIdx;
} NhuHS_DSCH_TbsLst_TDD128Member;

typedef struct NhuHS_DSCH_TbsLst_TDD128
{
 TknU16 noComp;
 NhuHS_DSCH_TbsLst_TDD128Member *member;
}NhuHS_DSCH_TbsLst_TDD128;


typedef TknU32 NhuHS_SCCH_LessTFSLstMemberhs_scch_LessTFSI;


typedef TknU8 NhuHS_SCCH_LessTFSLstMemberhs_scch_LessSecondCodeSupport;

typedef struct NhuHS_SCCH_LessTFSLstMember
{
 TknPres pres;
 NhuHS_SCCH_LessTFSLstMemberhs_scch_LessTFSI hs_scch_LessTFSI;
 NhuHS_SCCH_LessTFSLstMemberhs_scch_LessSecondCodeSupport hs_scch_LessSecondCodeSupport;
} NhuHS_SCCH_LessTFSLstMember;

typedef struct NhuHS_SCCH_LessTFSLst
{
 TknU16 noComp;
 NhuHS_SCCH_LessTFSLstMember *member;
}NhuHS_SCCH_LessTFSLst;


typedef TknU32 NhuHS_SCCH_Less_NewOperationhs_pdsch_CodeIdx;

typedef struct NhuHS_SCCH_Less_NewOperation
{
 TknPres pres;
 NhuHS_SCCH_Less_NewOperationhs_pdsch_CodeIdx hs_pdsch_CodeIdx;
 NhuHS_SCCH_LessTFSLst hs_scch_LessTFS;
} NhuHS_SCCH_Less_NewOperation;

typedef struct NhuHS_SCCH_LessInfo_r7hs_scchLessOperation
{
 TknU8 choice;
 union {
  NhuHS_SCCH_Less_NewOperation newOperation;
 } val;
} NhuHS_SCCH_LessInfo_r7hs_scchLessOperation;

typedef struct NhuHS_SCCH_LessInfo_r7
{
 TknPres pres;
 NhuHS_SCCH_LessInfo_r7hs_scchLessOperation hs_scchLessOperation;
} NhuHS_SCCH_LessInfo_r7;


typedef TknU32 NhuHS_SICH_ReferenceSignalInfoLstMembermidambleCfg;


typedef TknU32 NhuHS_SICH_ReferenceSignalInfoLstMembermidambleShift;


typedef TknU32 NhuHS_SICH_ReferenceSignalInfoLstMembertimeSlot;

typedef struct NhuHS_SICH_ReferenceSignalInfoLstMember
{
 TknPres pres;
 NhuHS_SICH_ReferenceSignalInfoLstMembermidambleCfg midambleCfg;
 NhuHS_SICH_ReferenceSignalInfoLstMembermidambleShift midambleShift;
 NhuHS_SICH_ReferenceSignalInfoLstMembertimeSlot timeSlot;
} NhuHS_SICH_ReferenceSignalInfoLstMember;

typedef struct NhuHS_SICH_ReferenceSignalInfoLst
{
 TknU16 noComp;
 NhuHS_SICH_ReferenceSignalInfoLstMember *member;
}NhuHS_SICH_ReferenceSignalInfoLst;


typedef TknS32 NhuHS_SICH_Power_Cntrl_Info_TDD384ul_target_SIR;

typedef struct NhuHS_SICH_Power_Cntrl_Info_TDD384
{
 TknPres pres;
 NhuHS_SICH_Power_Cntrl_Info_TDD384ul_target_SIR ul_target_SIR;
 NhuConstantValue hs_sich_ConstantValue;
} NhuHS_SICH_Power_Cntrl_Info_TDD384;


typedef TknS32 NhuHS_SICH_Power_Cntrl_Info_TDD768ul_target_SIR;

typedef struct NhuHS_SICH_Power_Cntrl_Info_TDD768
{
 TknPres pres;
 NhuHS_SICH_Power_Cntrl_Info_TDD768ul_target_SIR ul_target_SIR;
 NhuConstantValue hs_sich_ConstantValue;
} NhuHS_SICH_Power_Cntrl_Info_TDD768;


typedef enum enumNhuIvdualTimeslotInfo_LCR_r4_extmodulation
{
 NhuIvdualTimeslotInfo_LCR_r4_extmodulationmod_QPSKEnum,
 NhuIvdualTimeslotInfo_LCR_r4_extmodulationmod_8PSKEnum
} EnumNhuIvdualTimeslotInfo_LCR_r4_extmodulation;
typedef TknU32 NhuIvdualTimeslotInfo_LCR_r4_extmodulation;


typedef enum enumNhuIvdualTimeslotInfo_LCR_r4_extss_TPC_Symbols
{
 NhuIvdualTimeslotInfo_LCR_r4_extss_TPC_SymbolszeroEnum,
 NhuIvdualTimeslotInfo_LCR_r4_extss_TPC_SymbolsoneEnum,
 NhuIvdualTimeslotInfo_LCR_r4_extss_TPC_SymbolssixteenOverSFEnum
} EnumNhuIvdualTimeslotInfo_LCR_r4_extss_TPC_Symbols;
typedef TknU32 NhuIvdualTimeslotInfo_LCR_r4_extss_TPC_Symbols;

typedef struct NhuIvdualTimeslotInfo_LCR_r4_ext
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_LCR_r4 midambleShiftAndBurstTyp;
 NhuIvdualTimeslotInfo_LCR_r4_extmodulation modulation;
 NhuIvdualTimeslotInfo_LCR_r4_extss_TPC_Symbols ss_TPC_Symbols;
} NhuIvdualTimeslotInfo_LCR_r4_ext;


typedef TknU32 NhuMaxPowerIncrease_r4;

typedef struct NhuMeasurement_Feedback_InfomodeSpecificInfofdd
{
 TknPres pres;
 NhuMeasurementPowerOffset measurementPowerOffset;
 NhuFeedback_cycle feedback_cycle;
 NhuCQI_RepetitionFactor cqi_RepetitionFactor;
 NhuDeltaCQI deltaCQI;
} NhuMeasurement_Feedback_InfomodeSpecificInfofdd;

typedef struct NhuMeasurement_Feedback_InfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuMeasurement_Feedback_InfomodeSpecificInfofdd fdd;
 } val;
} NhuMeasurement_Feedback_InfomodeSpecificInfo;

typedef struct NhuMeasurement_Feedback_Info
{
 TknPres pres;
 NhuMeasurement_Feedback_InfomodeSpecificInfo modeSpecificInfo;
} NhuMeasurement_Feedback_Info;

typedef struct NhuMeasurement_Feedback_Info_r7modeSpecificInfofdd
{
 TknPres pres;
 NhuMeasurementPowerOffset measurementPowerOffset;
 NhuFeedback_cycle_r7 feedback_cycle;
 NhuCQI_RepetitionFactor cqi_RepetitionFactor;
 NhuDeltaCQI deltaCQI;
} NhuMeasurement_Feedback_Info_r7modeSpecificInfofdd;

typedef struct NhuMeasurement_Feedback_Info_r7modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuMeasurement_Feedback_Info_r7modeSpecificInfofdd fdd;
 } val;
} NhuMeasurement_Feedback_Info_r7modeSpecificInfo;

typedef struct NhuMeasurement_Feedback_Info_r7
{
 TknPres pres;
 NhuMeasurement_Feedback_Info_r7modeSpecificInfo modeSpecificInfo;
} NhuMeasurement_Feedback_Info_r7;


typedef enum enumNhuMIMO_Operation
{
 NhuMIMO_OperationstartEnum,
 NhuMIMO_OperationcontinueEnum
} EnumNhuMIMO_Operation;
typedef TknU32 NhuMIMO_Operation;

typedef struct NhuMIMO_PilotCfgsecondCPICH_PatterndiversityPattern
{
 TknPres pres;
 NhuChannelisationCode256 channelisationCode;
} NhuMIMO_PilotCfgsecondCPICH_PatterndiversityPattern;

typedef struct NhuMIMO_PilotCfgsecondCPICH_Pattern
{
 TknU8 choice;
 union {
  NhuMIMO_PilotCfgsecondCPICH_PatterndiversityPattern diversityPattern;
 } val;
} NhuMIMO_PilotCfgsecondCPICH_Pattern;

typedef struct NhuMIMO_PilotCfg
{
 TknPres pres;
 NhuMIMO_PilotCfgsecondCPICH_Pattern secondCPICH_Pattern;
} NhuMIMO_PilotCfg;

typedef struct NhuMIMO_Params_r7
{
 TknPres pres;
 NhuMIMO_Operation mimoOperation;
 NhuMIMO_N_M_Ratio mimoN_M_Ratio;
 NhuMIMO_PilotCfg mimoPilotCfg;
} NhuMIMO_Params_r7;

typedef struct NhuMIMO_PilotCfg_v7f0ext
{
 TknPres pres;
 NhuS_CPICH_PowerOffset_MIMO s_cpich_PowerOffset_Mimo;
} NhuMIMO_PilotCfg_v7f0ext;


typedef NhuMIMO_PilotCfg_v7f0ext NhuMIMO_Params_v7f0ext;

typedef enum enumNhuMIMO_Params_v7g0extprecodingWeightSetRestrn
{
 NhuMIMO_Params_v7g0extprecodingWeightSetRestrntrueEnum
} EnumNhuMIMO_Params_v7g0extprecodingWeightSetRestrn;
typedef TknU32 NhuMIMO_Params_v7g0extprecodingWeightSetRestrn;

typedef struct NhuMIMO_Params_v7g0ext
{
 TknPres pres;
 NhuMIMO_Params_v7g0extprecodingWeightSetRestrn precodingWeightSetRestrn;
} NhuMIMO_Params_v7g0ext;

typedef struct NhuMIMO_Params_r8modeSpecificInfofdd
{
 TknPres pres;
 NhuMIMO_N_M_Ratio mimoN_M_Ratio;
 NhuMIMO_PilotCfg mimoPilotCfg;
} NhuMIMO_Params_r8modeSpecificInfofdd;


typedef enum enumNhuMIMO_Params_r8modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStream
{
 NhuMIMO_Params_r8modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStreamsf1Enum,
 NhuMIMO_Params_r8modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStreamsf1sf16Enum
} EnumNhuMIMO_Params_r8modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStream;
typedef TknU32 NhuMIMO_Params_r8modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStream;

typedef struct NhuMIMO_Params_r8modeSpecificInfotddtdd128
{
 TknPres pres;
 NhuMIMO_Params_r8modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStream mimoSFModeForHSPDSCHDualStream;
 NhuHS_SICH_ReferenceSignalInfoLst hs_sich_ReferenceSignalInfoLst;
} NhuMIMO_Params_r8modeSpecificInfotddtdd128;

typedef struct NhuMIMO_Params_r8modeSpecificInfotdd
{
 TknU8 choice;
 union {
  NhuMIMO_Params_r8modeSpecificInfotddtdd128 tdd128;
 } val;
} NhuMIMO_Params_r8modeSpecificInfotdd;

typedef struct NhuMIMO_Params_r8modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuMIMO_Params_r8modeSpecificInfofdd fdd;
  NhuMIMO_Params_r8modeSpecificInfotdd tdd;
 } val;
} NhuMIMO_Params_r8modeSpecificInfo;

typedef struct NhuMIMO_Params_r8
{
 TknPres pres;
 NhuMIMO_Operation mimoOperation;
 NhuMIMO_Params_r8modeSpecificInfo modeSpecificInfo;
} NhuMIMO_Params_r8;


typedef enum enumNhuMIMO_Params_r9modeSpecificInfofddprecodingWeightSetRestrn
{
 NhuMIMO_Params_r9modeSpecificInfofddprecodingWeightSetRestrntrueEnum
} EnumNhuMIMO_Params_r9modeSpecificInfofddprecodingWeightSetRestrn;
typedef TknU32 NhuMIMO_Params_r9modeSpecificInfofddprecodingWeightSetRestrn;

typedef struct NhuMIMO_Params_r9modeSpecificInfofdd
{
 TknPres pres;
 NhuMIMO_N_M_Ratio mimoN_M_Ratio;
 NhuMIMO_PilotCfg_r9 mimoPilotCfg;
 NhuMIMO_Params_r9modeSpecificInfofddprecodingWeightSetRestrn precodingWeightSetRestrn;
} NhuMIMO_Params_r9modeSpecificInfofdd;


typedef enum enumNhuMIMO_Params_r9modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStream
{
 NhuMIMO_Params_r9modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStreamsf1Enum,
 NhuMIMO_Params_r9modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStreamsf1sf16Enum
} EnumNhuMIMO_Params_r9modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStream;
typedef TknU32 NhuMIMO_Params_r9modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStream;

typedef struct NhuMIMO_Params_r9modeSpecificInfotddtdd128
{
 TknPres pres;
 NhuMIMO_Params_r9modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStream mimoSFModeForHSPDSCHDualStream;
 NhuHS_SICH_ReferenceSignalInfoLst hs_sich_ReferenceSignalInfoLst;
} NhuMIMO_Params_r9modeSpecificInfotddtdd128;

typedef struct NhuMIMO_Params_r9modeSpecificInfotdd
{
 TknU8 choice;
 union {
  NhuMIMO_Params_r9modeSpecificInfotddtdd128 tdd128;
 } val;
} NhuMIMO_Params_r9modeSpecificInfotdd;

typedef struct NhuMIMO_Params_r9modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuMIMO_Params_r9modeSpecificInfofdd fdd;
  NhuMIMO_Params_r9modeSpecificInfotdd tdd;
 } val;
} NhuMIMO_Params_r9modeSpecificInfo;

typedef struct NhuMIMO_Params_r9
{
 TknPres pres;
 NhuMIMO_Operation mimoOperation;
 NhuMIMO_Params_r9modeSpecificInfo modeSpecificInfo;
} NhuMIMO_Params_r9;


typedef TknU32 NhuUpPCHposition_LCR;

typedef struct NhuMulti_frequencyInfo_LCR_r7
{
 TknPres pres;
 NhuFrequencyInfoTDD secondFrequencyInfo;
 NhuFrequencyInfoTDD fPachFrequencyInfo;
 NhuUpPCHposition_LCR upPCHpositionInfo;
} NhuMulti_frequencyInfo_LCR_r7;


typedef enum enumNhuMU_MIMO_Operation
{
 NhuMU_MIMO_OperationuLEnum,
 NhuMU_MIMO_OperationdLEnum,
 NhuMU_MIMO_OperationuLandDLEnum,
 NhuMU_MIMO_OperationspareEnum
} EnumNhuMU_MIMO_Operation;
typedef TknU32 NhuMU_MIMO_Operation;


typedef TknU32 NhuStandaloneMidambleInfo_TDD128midambleCfg;


typedef TknU32 NhuStandaloneMidambleInfo_TDD128midambleShift;


typedef TknStrBSXL NhuStandaloneMidambleInfo_TDD128timeSlotInfo;

typedef TknU32 NhuStandaloneMidambleInfo_TDD128subframeNum;


typedef enum enumNhuStandaloneMidambleInfo_TDD128repetitionPeriod
{
 NhuStandaloneMidambleInfo_TDD128repetitionPeriodv1Enum,
 NhuStandaloneMidambleInfo_TDD128repetitionPeriodv2Enum,
 NhuStandaloneMidambleInfo_TDD128repetitionPeriodv4Enum,
 NhuStandaloneMidambleInfo_TDD128repetitionPeriodv8Enum,
 NhuStandaloneMidambleInfo_TDD128repetitionPeriodv16Enum,
 NhuStandaloneMidambleInfo_TDD128repetitionPeriodv32Enum,
 NhuStandaloneMidambleInfo_TDD128repetitionPeriodv64Enum,
 NhuStandaloneMidambleInfo_TDD128repetitionPeriodspareEnum
} EnumNhuStandaloneMidambleInfo_TDD128repetitionPeriod;
typedef TknU32 NhuStandaloneMidambleInfo_TDD128repetitionPeriod;


typedef TknS32 NhuStandaloneMidambleInfo_TDD128referenceBeta;

typedef struct NhuStandaloneMidambleInfo_TDD128
{
 TknPres pres;
 NhuStandaloneMidambleInfo_TDD128midambleCfg midambleCfg;
 NhuStandaloneMidambleInfo_TDD128midambleShift midambleShift;
 NhuStandaloneMidambleInfo_TDD128timeSlotInfo timeSlotInfo;
 NhuActvnTime activationTime;
 NhuStandaloneMidambleInfo_TDD128subframeNum subframeNum;
 NhuStandaloneMidambleInfo_TDD128repetitionPeriod repetitionPeriod;
 NhuStandaloneMidambleInfo_TDD128referenceBeta referenceBeta;
} NhuStandaloneMidambleInfo_TDD128;

typedef struct NhuMU_MIMO_Info_TDD128newCfg
{
 TknPres pres;
 NhuMU_MIMO_Operation mu_MIMO_Operation;
 NhuStandaloneMidambleInfo_TDD128 standaloneMidambleInfo;
} NhuMU_MIMO_Info_TDD128newCfg;

typedef struct NhuMU_MIMO_Info_TDD128
{
 TknU8 choice;
 union {
  NhuMU_MIMO_Info_TDD128newCfg newCfg;
 } val;
} NhuMU_MIMO_Info_TDD128;


typedef TknU32 NhuNB01;


typedef TknU32 NhuUE_DTX_DRX_Offset;

typedef struct NhuNewTiming
{
 TknPres pres;
 NhuEnablingDelay enablingDelay;
 NhuUE_DTX_DRX_Offset ue_dtx_drx_Offset;
} NhuNewTiming;


typedef TknU32 NhuNumberOfDPDCH;


typedef TknU32 NhuNumberOfFBI_Bits;

typedef struct NhuOpenLoopPowerCntrl_TDD
{
 TknPres pres;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuAlpha alpha;
 NhuConstantValueTdd prach_ConstantValue;
 NhuConstantValueTdd dpch_ConstantValue;
 NhuConstantValueTdd pusch_ConstantValue;
} NhuOpenLoopPowerCntrl_TDD;

typedef struct NhuOpenLoopPowerCntrl_IPDL_TDD_r4
{
 TknPres pres;
 NhuAlpha ipdl_alpha;
 NhuMaxPowerIncrease_r4 maxPowerIncrease;
} NhuOpenLoopPowerCntrl_IPDL_TDD_r4;

typedef struct NhuPDSCH_PowerCntrlInfo
{
 TknPres pres;
 NhuTPC_StepSizeTDD tpc_StepSizeTDD;
 NhuUL_CCTrChTPCLst ul_CCTrChTPCLst;
} NhuPDSCH_PowerCntrlInfo;


typedef TknU32 NhuPDSCH_Identity;

typedef struct NhuPDSCH_Info
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuDlnkTimeslotsCodes pdsch_TimeslotsCodes;
} NhuPDSCH_Info;

typedef struct NhuPDSCH_CapacityAllocnInfoconfigurationold_Cfg
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuPDSCH_Identity pdsch_Identity;
} NhuPDSCH_CapacityAllocnInfoconfigurationold_Cfg;

typedef struct NhuPDSCH_CapacityAllocnInfoconfigurationnew_Cfg
{
 TknPres pres;
 NhuPDSCH_Info pdsch_Info;
 NhuPDSCH_Identity pdsch_Identity;
} NhuPDSCH_CapacityAllocnInfoconfigurationnew_Cfg;

typedef struct NhuPDSCH_CapacityAllocnInfoconfiguration
{
 TknU8 choice;
 union {
  NhuPDSCH_CapacityAllocnInfoconfigurationold_Cfg old_Cfg;
  NhuPDSCH_CapacityAllocnInfoconfigurationnew_Cfg new_Cfg;
 } val;
} NhuPDSCH_CapacityAllocnInfoconfiguration;

typedef struct NhuPDSCH_CapacityAllocnInfo
{
 TknPres pres;
 NhuPDSCH_PowerCntrlInfo pdsch_PowerCntrlInfo;
 NhuAllocnPeriodInfo pdsch_AllocnPeriodInfo;
 NhuPDSCH_CapacityAllocnInfoconfiguration configuration;
} NhuPDSCH_CapacityAllocnInfo;

typedef struct NhuPDSCH_Info_r4tddOptiontdd384
{
 TknPres pres;
 NhuDlnkTimeslotsCodes pdsch_TimeslotsCodes;
} NhuPDSCH_Info_r4tddOptiontdd384;

typedef struct NhuPDSCH_Info_r4tddOptiontdd128
{
 TknPres pres;
 NhuDlnkTimeslotsCodes_LCR_r4 pdsch_TimeslotsCodes;
} NhuPDSCH_Info_r4tddOptiontdd128;

typedef struct NhuPDSCH_Info_r4tddOption
{
 TknU8 choice;
 union {
  NhuPDSCH_Info_r4tddOptiontdd384 tdd384;
  NhuPDSCH_Info_r4tddOptiontdd128 tdd128;
 } val;
} NhuPDSCH_Info_r4tddOption;

typedef struct NhuPDSCH_Info_r4
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuPDSCH_Info_r4tddOption tddOption;
} NhuPDSCH_Info_r4;

typedef struct NhuPDSCH_CapacityAllocnInfo_r4configurationold_Cfg
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuPDSCH_Identity pdsch_Identity;
} NhuPDSCH_CapacityAllocnInfo_r4configurationold_Cfg;

typedef struct NhuPDSCH_CapacityAllocnInfo_r4configurationnew_Cfg
{
 TknPres pres;
 NhuPDSCH_Info_r4 pdsch_Info;
 NhuPDSCH_Identity pdsch_Identity;
 NhuPDSCH_PowerCntrlInfo pdsch_PowerCntrlInfo;
} NhuPDSCH_CapacityAllocnInfo_r4configurationnew_Cfg;

typedef struct NhuPDSCH_CapacityAllocnInfo_r4configuration
{
 TknU8 choice;
 union {
  NhuPDSCH_CapacityAllocnInfo_r4configurationold_Cfg old_Cfg;
  NhuPDSCH_CapacityAllocnInfo_r4configurationnew_Cfg new_Cfg;
 } val;
} NhuPDSCH_CapacityAllocnInfo_r4configuration;

typedef struct NhuPDSCH_CapacityAllocnInfo_r4
{
 TknPres pres;
 NhuAllocnPeriodInfo pdsch_AllocnPeriodInfo;
 NhuPDSCH_CapacityAllocnInfo_r4configuration configuration;
} NhuPDSCH_CapacityAllocnInfo_r4;

typedef struct NhuPDSCH_Info_r7tddOptiontdd384
{
 TknPres pres;
 NhuDlnkTimeslotsCodes pdsch_TimeslotsCodes;
} NhuPDSCH_Info_r7tddOptiontdd384;

typedef struct NhuPDSCH_Info_r7tddOptiontdd768
{
 TknPres pres;
 NhuDlnkTimeslotsCodes_VHCR pdsch_TimeslotsCodes;
} NhuPDSCH_Info_r7tddOptiontdd768;

typedef struct NhuPDSCH_Info_r7tddOptiontdd128
{
 TknPres pres;
 NhuDlnkTimeslotsCodes_LCR_r4 pdsch_TimeslotsCodes;
} NhuPDSCH_Info_r7tddOptiontdd128;

typedef struct NhuPDSCH_Info_r7tddOption
{
 TknU8 choice;
 union {
  NhuPDSCH_Info_r7tddOptiontdd384 tdd384;
  NhuPDSCH_Info_r7tddOptiontdd768 tdd768;
  NhuPDSCH_Info_r7tddOptiontdd128 tdd128;
 } val;
} NhuPDSCH_Info_r7tddOption;

typedef struct NhuPDSCH_Info_r7
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuPDSCH_Info_r7tddOption tddOption;
} NhuPDSCH_Info_r7;

typedef struct NhuPDSCH_CapacityAllocnInfo_r7configurationold_Cfg
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuPDSCH_Identity pdsch_Identity;
} NhuPDSCH_CapacityAllocnInfo_r7configurationold_Cfg;

typedef struct NhuPDSCH_CapacityAllocnInfo_r7configurationnew_Cfg
{
 TknPres pres;
 NhuPDSCH_Info_r7 pdsch_Info;
 NhuPDSCH_Identity pdsch_Identity;
 NhuPDSCH_PowerCntrlInfo pdsch_PowerCntrlInfo;
} NhuPDSCH_CapacityAllocnInfo_r7configurationnew_Cfg;

typedef struct NhuPDSCH_CapacityAllocnInfo_r7configuration
{
 TknU8 choice;
 union {
  NhuPDSCH_CapacityAllocnInfo_r7configurationold_Cfg old_Cfg;
  NhuPDSCH_CapacityAllocnInfo_r7configurationnew_Cfg new_Cfg;
 } val;
} NhuPDSCH_CapacityAllocnInfo_r7configuration;

typedef struct NhuPDSCH_CapacityAllocnInfo_r7
{
 TknPres pres;
 NhuAllocnPeriodInfo pdsch_AllocnPeriodInfo;
 NhuPDSCH_CapacityAllocnInfo_r7configuration configuration;
} NhuPDSCH_CapacityAllocnInfo_r7;

typedef struct NhuPDSCH_Info_LCR_r4
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuDlnkTimeslotsCodes_LCR_r4 pdsch_TimeslotsCodes;
} NhuPDSCH_Info_LCR_r4;

typedef struct NhuPDSCH_SysInfo
{
 TknPres pres;
 NhuPDSCH_Identity pdsch_Identity;
 NhuPDSCH_Info pdsch_Info;
 NhuTportFormatSet dsch_TFS;
 NhuTFCS dsch_TFCS;
} NhuPDSCH_SysInfo;

typedef struct NhuPDSCH_SysInfo_VHCR_r7
{
 TknPres pres;
 NhuPDSCH_Identity pdsch_Identity;
 NhuPDSCH_Info_r7 pdsch_Info;
 NhuDSCH_TportChannelsInfo dsch_TportChannelsInfo;
 NhuTFCS dsch_TFCS;
} NhuPDSCH_SysInfo_VHCR_r7;

typedef struct NhuPDSCH_SysInfo_HCR_r5
{
 TknPres pres;
 NhuPDSCH_Identity pdsch_Identity;
 NhuPDSCH_Info pdsch_Info;
 NhuDSCH_TportChannelsInfo dsch_TportChannelsInfo;
 NhuTFCS dsch_TFCS;
} NhuPDSCH_SysInfo_HCR_r5;

typedef struct NhuPDSCH_SysInfo_LCR_r4
{
 TknPres pres;
 NhuPDSCH_Identity pdsch_Identity;
 NhuPDSCH_Info_LCR_r4 pdsch_Info;
 NhuTportFormatSet dsch_TFS;
 NhuTFCS dsch_TFCS;
} NhuPDSCH_SysInfo_LCR_r4;

typedef struct NhuPDSCH_SysInfoLst
{
 TknU16 noComp;
 NhuPDSCH_SysInfo *member;
}NhuPDSCH_SysInfoLst;

typedef struct NhuPDSCH_SysInfoLst_VHCR_r7
{
 TknU16 noComp;
 NhuPDSCH_SysInfo_VHCR_r7 *member;
}NhuPDSCH_SysInfoLst_VHCR_r7;

typedef struct NhuPDSCH_SysInfoLst_HCR_r5
{
 TknU16 noComp;
 NhuPDSCH_SysInfo_HCR_r5 *member;
}NhuPDSCH_SysInfoLst_HCR_r5;

typedef struct NhuPDSCH_SysInfoLst_LCR_r4
{
 TknU16 noComp;
 NhuPDSCH_SysInfo_LCR_r4 *member;
}NhuPDSCH_SysInfoLst_LCR_r4;


typedef TknU32 NhuSFN_TimeInfoactivationTimeSFN;

typedef struct NhuSFN_TimeInfo
{
 TknPres pres;
 NhuSFN_TimeInfoactivationTimeSFN activationTimeSFN;
 NhuDurationTimeInfo physChDuration;
} NhuSFN_TimeInfo;

typedef struct NhuPDSCH_SysInfoLst_SFNMember
{
 TknPres pres;
 NhuPDSCH_SysInfo pdsch_SysInfo;
 NhuSFN_TimeInfo sfn_TimeInfo;
} NhuPDSCH_SysInfoLst_SFNMember;

typedef struct NhuPDSCH_SysInfoLst_SFN
{
 TknU16 noComp;
 NhuPDSCH_SysInfoLst_SFNMember *member;
}NhuPDSCH_SysInfoLst_SFN;

typedef struct NhuPDSCH_SysInfoLst_SFN_HCR_r5Member
{
 TknPres pres;
 NhuPDSCH_SysInfo_HCR_r5 pdsch_SysInfo;
 NhuSFN_TimeInfo sfn_TimeInfo;
} NhuPDSCH_SysInfoLst_SFN_HCR_r5Member;

typedef struct NhuPDSCH_SysInfoLst_SFN_HCR_r5
{
 TknU16 noComp;
 NhuPDSCH_SysInfoLst_SFN_HCR_r5Member *member;
}NhuPDSCH_SysInfoLst_SFN_HCR_r5;

typedef struct NhuPDSCH_SysInfoLst_SFN_LCR_r4Member
{
 TknPres pres;
 NhuPDSCH_SysInfo_LCR_r4 pdsch_SysInfo;
 NhuSFN_TimeInfo sfn_TimeInfo;
} NhuPDSCH_SysInfoLst_SFN_LCR_r4Member;

typedef struct NhuPDSCH_SysInfoLst_SFN_LCR_r4
{
 TknU16 noComp;
 NhuPDSCH_SysInfoLst_SFN_LCR_r4Member *member;
}NhuPDSCH_SysInfoLst_SFN_LCR_r4;

typedef struct NhuPichChannelisationCodeLst_LCR_r4
{
 TknU16 noComp;
 NhuDL_TS_ChannelisationCode *member;
}NhuPichChannelisationCodeLst_LCR_r4;

typedef struct NhuPICH_Info_LCR_r4
{
 TknPres pres;
 NhuTimeslotNumber_LCR_r4 timeslot;
 NhuPichChannelisationCodeLst_LCR_r4 pichChannelisationCodeLst_LCR_r4;
 NhuMidambleShiftAndBurstTyp_LCR_r4 midambleShiftAndBurstTyp;
 NhuRepPerLengthOffset_PICH repetitionPeriodLengthOffset;
 NhuPagIndicatorLength pagingIndicatorLength;
 NhuN_GAP n_GAP;
 NhuN_PCH n_PCH;
} NhuPICH_Info_LCR_r4;

typedef struct NhuPICH_ForHSDPASuppPag_TDD128implicit
{
 TknPres pres;
 NhuOccurrenceSequenceNumberOfPICH occurrenceSequenceNumberOfPICH;
} NhuPICH_ForHSDPASuppPag_TDD128implicit;

typedef struct NhuPICH_ForHSDPASuppPag_TDD128
{
 TknU8 choice;
 union {
  NhuPICH_ForHSDPASuppPag_TDD128implicit implicit;
  NhuPICH_Info_LCR_r4 explict;
 } val;
} NhuPICH_ForHSDPASuppPag_TDD128;


typedef enum enumNhuTDD768_PICH_CCode
{
 NhuTDD768_PICH_CCodecc32_1Enum,
 NhuTDD768_PICH_CCodecc32_2Enum,
 NhuTDD768_PICH_CCodecc32_3Enum,
 NhuTDD768_PICH_CCodecc32_4Enum,
 NhuTDD768_PICH_CCodecc32_5Enum,
 NhuTDD768_PICH_CCodecc32_6Enum,
 NhuTDD768_PICH_CCodecc32_7Enum,
 NhuTDD768_PICH_CCodecc32_8Enum,
 NhuTDD768_PICH_CCodecc32_9Enum,
 NhuTDD768_PICH_CCodecc32_10Enum,
 NhuTDD768_PICH_CCodecc32_11Enum,
 NhuTDD768_PICH_CCodecc32_12Enum,
 NhuTDD768_PICH_CCodecc32_13Enum,
 NhuTDD768_PICH_CCodecc32_14Enum,
 NhuTDD768_PICH_CCodecc32_15Enum,
 NhuTDD768_PICH_CCodecc32_16Enum,
 NhuTDD768_PICH_CCodecc32_17Enum,
 NhuTDD768_PICH_CCodecc32_18Enum,
 NhuTDD768_PICH_CCodecc32_19Enum,
 NhuTDD768_PICH_CCodecc32_20Enum,
 NhuTDD768_PICH_CCodecc32_21Enum,
 NhuTDD768_PICH_CCodecc32_22Enum,
 NhuTDD768_PICH_CCodecc32_23Enum,
 NhuTDD768_PICH_CCodecc32_24Enum,
 NhuTDD768_PICH_CCodecc32_25Enum,
 NhuTDD768_PICH_CCodecc32_26Enum,
 NhuTDD768_PICH_CCodecc32_27Enum,
 NhuTDD768_PICH_CCodecc32_28Enum,
 NhuTDD768_PICH_CCodecc32_29Enum,
 NhuTDD768_PICH_CCodecc32_30Enum,
 NhuTDD768_PICH_CCodecc32_31Enum,
 NhuTDD768_PICH_CCodecc32_32Enum
} EnumNhuTDD768_PICH_CCode;
typedef TknU32 NhuTDD768_PICH_CCode;

typedef struct NhuPICH_Info_HCR_VHCR_r7channelisationCode
{
 TknU8 choice;
 union {
  NhuTDD_PICH_CCode tdd384;
  NhuTDD768_PICH_CCode tdd768;
 } val;
} NhuPICH_Info_HCR_VHCR_r7channelisationCode;

typedef struct NhuPICH_Info_HCR_VHCR_r7
{
 TknPres pres;
 NhuPICH_Info_HCR_VHCR_r7channelisationCode channelisationCode;
 NhuTimeslotNumber timeslot;
 NhuMidambleShiftAndBurstTyp midambleShiftAndBurstTyp;
 NhuRepPerLengthOffset_PICH repetitionPeriodLengthOffset;
 NhuPagIndicatorLength pagingIndicatorLength;
 NhuN_GAP n_GAP;
 NhuN_PCH n_PCH;
} NhuPICH_Info_HCR_VHCR_r7;


typedef TknS32 NhuPICH_PowerOffset;


typedef TknU32 NhuTPC_CmdTgtRate;


typedef TknU32 NhuPLCCH_InfoplcchSequenceNumber;

typedef struct NhuPLCCH_Info
{
 TknPres pres;
 NhuPLCCH_InfoplcchSequenceNumber plcchSequenceNumber;
 NhuTimeslotNumber_LCR_r4 timeslotNumber;
 NhuDL_TS_ChannelisationCode channelisationCode;
 NhuTPC_CmdTgtRate tpcCmdTgtRate;
} NhuPLCCH_Info;


typedef TknU32 NhuPowerCntrlGAP;


typedef TknU32 NhuPowerRampStep;

typedef struct NhuPRACH_ChanCodes_LCR_r4
{
 TknU16 noComp;
 NhuTDD_PRACH_CCode_LCR_r4 *member;
}NhuPRACH_ChanCodes_LCR_r4;

typedef struct NhuPRACH_Definition_LCR_r4
{
 TknPres pres;
 NhuTimeslotNumber_PRACH_LCR_r4 timeslot;
 NhuPRACH_ChanCodes_LCR_r4 prach_ChanCodes_LCR;
 NhuMidambleShiftAndBurstTyp_LCR_r4 midambleShiftAndBurstTyp;
 NhuFPACH_Info_r4 fpach_Info;
} NhuPRACH_Definition_LCR_r4;


typedef enum enumNhuPRACH_Midamble
{
 NhuPRACH_MidambledirectEnum,
 NhuPRACH_Midambledirect_InvertedEnum
} EnumNhuPRACH_Midamble;
typedef TknU32 NhuPRACH_Midamble;

typedef struct NhuPRACH_Partitioningfdd
{
 TknU16 noComp;
 NhuASCSetting_FDD *member;
}NhuPRACH_Partitioningfdd;

typedef struct NhuPRACH_Partitioningtdd
{
 TknU16 noComp;
 NhuASCSetting_TDD *member;
}NhuPRACH_Partitioningtdd;

typedef struct NhuPRACH_Partitioning
{
 TknU8 choice;
 union {
  NhuPRACH_Partitioningfdd fdd;
  NhuPRACH_Partitioningtdd tdd;
 } val;
} NhuPRACH_Partitioning;

typedef struct NhuPRACH_Partitioning_r7fdd
{
 TknU16 noComp;
 NhuASCSetting_FDD *member;
}NhuPRACH_Partitioning_r7fdd;

typedef struct NhuPRACH_Partitioning_r7tdd
{
 TknU16 noComp;
 NhuASCSetting_TDD_r7 *member;
}NhuPRACH_Partitioning_r7tdd;

typedef struct NhuPRACH_Partitioning_r7
{
 TknU8 choice;
 union {
  NhuPRACH_Partitioning_r7fdd fdd;
  NhuPRACH_Partitioning_r7tdd tdd;
 } val;
} NhuPRACH_Partitioning_r7;


typedef TknU32 NhuPreambleRetransMax;

typedef struct NhuPRACH_PowerOffset
{
 TknPres pres;
 NhuPowerRampStep powerRampStep;
 NhuPreambleRetransMax preambleRetransMax;
} NhuPRACH_PowerOffset;


typedef TknU32 NhuPreambleScramblingCodeWordNumber;


typedef TknS32 NhuPrimaryCPICH_TX_Power;


typedef TknU32 NhuRACH_TransmissionParamsmmax;

typedef struct NhuRACH_TransmissionParams
{
 TknPres pres;
 NhuRACH_TransmissionParamsmmax mmax;
 NhuNB01 nb01Min;
 NhuNB01 nb01Max;
} NhuRACH_TransmissionParams;


typedef TknU8 NhuPRACH_PreambleForEnhancedUlnke_ai_Ind;


typedef TknS32 NhuPRACH_PreambleForEnhancedUlnkpowerOffsetPp_e;

typedef struct NhuPRACH_PreambleForEnhancedUlnk
{
 TknPres pres;
 NhuAvailableSignatures availableSignatures;
 NhuPRACH_PreambleForEnhancedUlnke_ai_Ind e_ai_Ind;
 NhuPreambleScramblingCodeWordNumber preambleScramblingCodeWordNumber;
 NhuAvailableSubChannelNumbers availableSubChannelNumbers;
 NhuPRACH_Partitioning_r7 prach_Partitioning;
 NhuPersistenceScalingFactorLst persistenceScalingFactorLst;
 NhuAC_To_ASC_MappingTable ac_To_ASC_MappingTable;
 NhuPrimaryCPICH_TX_Power primaryCPICH_TX_Power;
 NhuConstantValue constantValue;
 NhuPRACH_PowerOffset prach_PowerOffset;
 NhuRACH_TransmissionParams rach_TransmissionParams;
 NhuAICH_Info aich_Info;
 NhuPRACH_PreambleForEnhancedUlnkpowerOffsetPp_e powerOffsetPp_e;
} NhuPRACH_PreambleForEnhancedUlnk;


typedef enum enumNhuSF_PRACH
{
 NhuSF_PRACHsfpr32Enum,
 NhuSF_PRACHsfpr64Enum,
 NhuSF_PRACHsfpr128Enum,
 NhuSF_PRACHsfpr256Enum
} EnumNhuSF_PRACH;
typedef TknU32 NhuSF_PRACH;


typedef enum enumNhuTDD_PRACH_CCode8
{
 NhuTDD_PRACH_CCode8cc8_1Enum,
 NhuTDD_PRACH_CCode8cc8_2Enum,
 NhuTDD_PRACH_CCode8cc8_3Enum,
 NhuTDD_PRACH_CCode8cc8_4Enum,
 NhuTDD_PRACH_CCode8cc8_5Enum,
 NhuTDD_PRACH_CCode8cc8_6Enum,
 NhuTDD_PRACH_CCode8cc8_7Enum,
 NhuTDD_PRACH_CCode8cc8_8Enum
} EnumNhuTDD_PRACH_CCode8;
typedef TknU32 NhuTDD_PRACH_CCode8;


typedef enum enumNhuTDD_PRACH_CCode16
{
 NhuTDD_PRACH_CCode16cc16_1Enum,
 NhuTDD_PRACH_CCode16cc16_2Enum,
 NhuTDD_PRACH_CCode16cc16_3Enum,
 NhuTDD_PRACH_CCode16cc16_4Enum,
 NhuTDD_PRACH_CCode16cc16_5Enum,
 NhuTDD_PRACH_CCode16cc16_6Enum,
 NhuTDD_PRACH_CCode16cc16_7Enum,
 NhuTDD_PRACH_CCode16cc16_8Enum,
 NhuTDD_PRACH_CCode16cc16_9Enum,
 NhuTDD_PRACH_CCode16cc16_10Enum,
 NhuTDD_PRACH_CCode16cc16_11Enum,
 NhuTDD_PRACH_CCode16cc16_12Enum,
 NhuTDD_PRACH_CCode16cc16_13Enum,
 NhuTDD_PRACH_CCode16cc16_14Enum,
 NhuTDD_PRACH_CCode16cc16_15Enum,
 NhuTDD_PRACH_CCode16cc16_16Enum
} EnumNhuTDD_PRACH_CCode16;
typedef TknU32 NhuTDD_PRACH_CCode16;

typedef struct NhuTDD_PRACH_CCodeLstsf8
{
 TknU16 noComp;
 NhuTDD_PRACH_CCode8 *member;
}NhuTDD_PRACH_CCodeLstsf8;

typedef struct NhuTDD_PRACH_CCodeLstsf16
{
 TknU16 noComp;
 NhuTDD_PRACH_CCode16 *member;
}NhuTDD_PRACH_CCodeLstsf16;

typedef struct NhuTDD_PRACH_CCodeLst
{
 TknU8 choice;
 union {
  NhuTDD_PRACH_CCodeLstsf8 sf8;
  NhuTDD_PRACH_CCodeLstsf16 sf16;
 } val;
} NhuTDD_PRACH_CCodeLst;

typedef struct NhuPRACH_RACH_InfomodeSpecificInfofdd
{
 TknPres pres;
 NhuAvailableSignatures availableSignatures;
 NhuSF_PRACH availableSF;
 NhuPreambleScramblingCodeWordNumber preambleScramblingCodeWordNumber;
 NhuPuncturingLimit puncturingLimit;
 NhuAvailableSubChannelNumbers availableSubChannelNumbers;
} NhuPRACH_RACH_InfomodeSpecificInfofdd;

typedef struct NhuPRACH_RACH_InfomodeSpecificInfotdd
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
 NhuTDD_PRACH_CCodeLst channelisationCodeLst;
 NhuPRACH_Midamble prach_Midamble;
} NhuPRACH_RACH_InfomodeSpecificInfotdd;

typedef struct NhuPRACH_RACH_InfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuPRACH_RACH_InfomodeSpecificInfofdd fdd;
  NhuPRACH_RACH_InfomodeSpecificInfotdd tdd;
 } val;
} NhuPRACH_RACH_InfomodeSpecificInfo;

typedef struct NhuPRACH_RACH_Info
{
 TknPres pres;
 NhuPRACH_RACH_InfomodeSpecificInfo modeSpecificInfo;
} NhuPRACH_RACH_Info;


typedef enum enumNhuTDD768_PRACH_CCode32
{
 NhuTDD768_PRACH_CCode32cc32_1Enum,
 NhuTDD768_PRACH_CCode32cc32_2Enum,
 NhuTDD768_PRACH_CCode32cc32_3Enum,
 NhuTDD768_PRACH_CCode32cc32_4Enum,
 NhuTDD768_PRACH_CCode32cc32_5Enum,
 NhuTDD768_PRACH_CCode32cc32_6Enum,
 NhuTDD768_PRACH_CCode32cc32_7Enum,
 NhuTDD768_PRACH_CCode32cc32_8Enum,
 NhuTDD768_PRACH_CCode32cc32_9Enum,
 NhuTDD768_PRACH_CCode32cc32_10Enum,
 NhuTDD768_PRACH_CCode32cc32_11Enum,
 NhuTDD768_PRACH_CCode32cc32_12Enum,
 NhuTDD768_PRACH_CCode32cc32_13Enum,
 NhuTDD768_PRACH_CCode32cc32_14Enum,
 NhuTDD768_PRACH_CCode32cc32_15Enum,
 NhuTDD768_PRACH_CCode32cc32_16Enum
} EnumNhuTDD768_PRACH_CCode32;
typedef TknU32 NhuTDD768_PRACH_CCode32;


typedef enum enumNhuTDD768_PRACH_CCode16
{
 NhuTDD768_PRACH_CCode16cc16_1Enum,
 NhuTDD768_PRACH_CCode16cc16_2Enum,
 NhuTDD768_PRACH_CCode16cc16_3Enum,
 NhuTDD768_PRACH_CCode16cc16_4Enum,
 NhuTDD768_PRACH_CCode16cc16_5Enum,
 NhuTDD768_PRACH_CCode16cc16_6Enum,
 NhuTDD768_PRACH_CCode16cc16_7Enum,
 NhuTDD768_PRACH_CCode16cc16_8Enum,
 NhuTDD768_PRACH_CCode16cc16_9Enum,
 NhuTDD768_PRACH_CCode16cc16_10Enum,
 NhuTDD768_PRACH_CCode16cc16_11Enum,
 NhuTDD768_PRACH_CCode16cc16_12Enum,
 NhuTDD768_PRACH_CCode16cc16_13Enum,
 NhuTDD768_PRACH_CCode16cc16_14Enum,
 NhuTDD768_PRACH_CCode16cc16_15Enum,
 NhuTDD768_PRACH_CCode16cc16_16Enum
} EnumNhuTDD768_PRACH_CCode16;
typedef TknU32 NhuTDD768_PRACH_CCode16;

typedef struct NhuTDD768_PRACH_CCodeLstsf32
{
 TknU16 noComp;
 NhuTDD768_PRACH_CCode32 *member;
}NhuTDD768_PRACH_CCodeLstsf32;

typedef struct NhuTDD768_PRACH_CCodeLstsf16
{
 TknU16 noComp;
 NhuTDD768_PRACH_CCode16 *member;
}NhuTDD768_PRACH_CCodeLstsf16;

typedef struct NhuTDD768_PRACH_CCodeLst
{
 TknU8 choice;
 union {
  NhuTDD768_PRACH_CCodeLstsf32 sf32;
  NhuTDD768_PRACH_CCodeLstsf16 sf16;
 } val;
} NhuTDD768_PRACH_CCodeLst;

typedef struct NhuPRACH_RACH_Info_VHCR_r7
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
 NhuTDD768_PRACH_CCodeLst channelisationCodeLst;
 NhuPRACH_Midamble prach_Midamble;
} NhuPRACH_RACH_Info_VHCR_r7;

typedef struct NhuPRACH_RACH_Info_LCR_v770ext
{
 TknPres pres;
 NhuSync_UL_Codes_Bitmap e_RUCCH_Sync_UL_Codes_Bitmap;
} NhuPRACH_RACH_Info_LCR_v770ext;


typedef TknU32 NhuSYNC_UL_Info_r4prxUpPCHdes;


typedef TknU32 NhuSYNC_UL_Info_r4powerRampStep;


typedef enum enumNhuSYNC_UL_Info_r4max_SYNC_UL_Transmissions
{
 NhuSYNC_UL_Info_r4max_SYNC_UL_Transmissionstr1Enum,
 NhuSYNC_UL_Info_r4max_SYNC_UL_Transmissionstr2Enum,
 NhuSYNC_UL_Info_r4max_SYNC_UL_Transmissionstr4Enum,
 NhuSYNC_UL_Info_r4max_SYNC_UL_Transmissionstr8Enum
} EnumNhuSYNC_UL_Info_r4max_SYNC_UL_Transmissions;
typedef TknU32 NhuSYNC_UL_Info_r4max_SYNC_UL_Transmissions;


typedef TknU32 NhuSYNC_UL_Info_r4mmax;

typedef struct NhuSYNC_UL_Info_r4
{
 TknPres pres;
 NhuSync_UL_Codes_Bitmap sync_UL_Codes_Bitmap;
 NhuSYNC_UL_Info_r4prxUpPCHdes prxUpPCHdes;
 NhuSYNC_UL_Info_r4powerRampStep powerRampStep;
 NhuSYNC_UL_Info_r4max_SYNC_UL_Transmissions max_SYNC_UL_Transmissions;
 NhuSYNC_UL_Info_r4mmax mmax;
} NhuSYNC_UL_Info_r4;

typedef struct NhuPRACH_RACH_Info_LCR_r4prach_DefinitionLst
{
 TknU16 noComp;
 NhuPRACH_Definition_LCR_r4 *member;
}NhuPRACH_RACH_Info_LCR_r4prach_DefinitionLst;

typedef struct NhuPRACH_RACH_Info_LCR_r4
{
 TknPres pres;
 NhuSYNC_UL_Info_r4 sync_UL_Info;
 NhuPRACH_RACH_Info_LCR_r4prach_DefinitionLst prach_DefinitionLst;
} NhuPRACH_RACH_Info_LCR_r4;

typedef struct NhuPRACH_SysInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_TX_Power primaryCPICH_TX_Power;
 NhuConstantValue constantValue;
 NhuPRACH_PowerOffset prach_PowerOffset;
 NhuRACH_TransmissionParams rach_TransmissionParams;
 NhuAICH_Info aich_Info;
} NhuPRACH_SysInfomodeSpecificInfofdd;

typedef struct NhuPRACH_SysInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuPRACH_SysInfomodeSpecificInfofdd fdd;
 } val;
} NhuPRACH_SysInfomodeSpecificInfo;

typedef struct NhuPRACH_SysInfo
{
 TknPres pres;
 NhuPRACH_RACH_Info prach_RACH_Info;
 NhuTportChannelIdentity transportChannelIdentity;
 NhuTportFormatSet rach_TportFormatSet;
 NhuTFCS rach_TFCS;
 NhuPRACH_Partitioning prach_Partitioning;
 NhuPersistenceScalingFactorLst persistenceScalingFactorLst;
 NhuAC_To_ASC_MappingTable ac_To_ASC_MappingTable;
 NhuPRACH_SysInfomodeSpecificInfo modeSpecificInfo;
} NhuPRACH_SysInfo;

typedef struct NhuPRACH_SysInfo_VHCR_r7
{
 TknPres pres;
 NhuPRACH_RACH_Info_VHCR_r7 prach_RACH_Info;
 NhuPRACH_Partitioning_r7 prach_Partitioning;
} NhuPRACH_SysInfo_VHCR_r7;

typedef struct NhuPRACH_SysInfo_LCR_r4
{
 TknPres pres;
 NhuPRACH_RACH_Info_LCR_r4 prach_RACH_Info_LCR;
 NhuTportFormatSet_LCR rach_TportFormatSet_LCR;
 NhuPRACH_Partitioning_LCR_r4 prach_Partitioning_LCR;
} NhuPRACH_SysInfo_LCR_r4;

typedef struct NhuPRACH_SysInfo_LCR_v770ext
{
 TknPres pres;
 NhuPRACH_RACH_Info_LCR_v770ext prach_RACH_Info_LCR;
} NhuPRACH_SysInfo_LCR_v770ext;

typedef struct NhuPRACH_SysInfoLst
{
 TknU16 noComp;
 NhuPRACH_SysInfo *member;
}NhuPRACH_SysInfoLst;

typedef struct NhuPRACH_SysInfoLst_VHCR_r7
{
 TknU16 noComp;
 NhuPRACH_SysInfo_VHCR_r7 *member;
}NhuPRACH_SysInfoLst_VHCR_r7;

typedef struct NhuPRACH_SysInfoLst_LCR_r4
{
 TknU16 noComp;
 NhuPRACH_SysInfo_LCR_r4 *member;
}NhuPRACH_SysInfoLst_LCR_r4;

typedef struct NhuPRACH_SysInfoLst_LCR_v770ext
{
 TknU16 noComp;
 NhuPRACH_SysInfo_LCR_v770ext *member;
}NhuPRACH_SysInfoLst_LCR_v770ext;


typedef TknU32 NhuTimeslotSync2;


typedef TknU8 NhuPrimaryCCPCH_Infofddtx_DiversityIndicator;

typedef struct NhuPrimaryCCPCH_Infofdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Infofddtx_DiversityIndicator tx_DiversityIndicator;
} NhuPrimaryCCPCH_Infofdd;

typedef struct NhuPrimaryCCPCH_InfotddsyncCasesyncCase1
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
} NhuPrimaryCCPCH_InfotddsyncCasesyncCase1;

typedef struct NhuPrimaryCCPCH_InfotddsyncCasesyncCase2
{
 TknPres pres;
 NhuTimeslotSync2 timeslotSync2;
} NhuPrimaryCCPCH_InfotddsyncCasesyncCase2;

typedef struct NhuPrimaryCCPCH_InfotddsyncCase
{
 TknU8 choice;
 union {
  NhuPrimaryCCPCH_InfotddsyncCasesyncCase1 syncCase1;
  NhuPrimaryCCPCH_InfotddsyncCasesyncCase2 syncCase2;
 } val;
} NhuPrimaryCCPCH_InfotddsyncCase;


typedef TknU8 NhuPrimaryCCPCH_Infotddsctd_Indicator;

typedef struct NhuPrimaryCCPCH_Infotdd
{
 TknPres pres;
 NhuPrimaryCCPCH_InfotddsyncCase syncCase;
 NhuCellParamsID cellParamsID;
 NhuPrimaryCCPCH_Infotddsctd_Indicator sctd_Indicator;
} NhuPrimaryCCPCH_Infotdd;

typedef struct NhuPrimaryCCPCH_Info
{
 TknU8 choice;
 union {
  NhuPrimaryCCPCH_Infofdd fdd;
  NhuPrimaryCCPCH_Infotdd tdd;
 } val;
} NhuPrimaryCCPCH_Info;


typedef TknU8 NhuPrimaryCCPCH_Info_r4fddtx_DiversityIndicator;

typedef struct NhuPrimaryCCPCH_Info_r4fdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Info_r4fddtx_DiversityIndicator tx_DiversityIndicator;
} NhuPrimaryCCPCH_Info_r4fdd;

typedef struct NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768syncCasesyncCase1
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
} NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768syncCasesyncCase1;

typedef struct NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768syncCasesyncCase2
{
 TknPres pres;
 NhuTimeslotSync2 timeslotSync2;
} NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768syncCasesyncCase2;

typedef struct NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768syncCase
{
 TknU8 choice;
 union {
  NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768syncCasesyncCase1 syncCase1;
  NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768syncCasesyncCase2 syncCase2;
 } val;
} NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768syncCase;

typedef struct NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768
{
 TknPres pres;
 NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768syncCase syncCase;
} NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768;


typedef TknU8 NhuPrimaryCCPCH_Info_r4tddtddOptiontdd128tstd_Indicator;

typedef struct NhuPrimaryCCPCH_Info_r4tddtddOptiontdd128
{
 TknPres pres;
 NhuPrimaryCCPCH_Info_r4tddtddOptiontdd128tstd_Indicator tstd_Indicator;
} NhuPrimaryCCPCH_Info_r4tddtddOptiontdd128;

typedef struct NhuPrimaryCCPCH_Info_r4tddtddOption
{
 TknU8 choice;
 union {
  NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768 tdd384_tdd768;
  NhuPrimaryCCPCH_Info_r4tddtddOptiontdd128 tdd128;
 } val;
} NhuPrimaryCCPCH_Info_r4tddtddOption;


typedef TknU8 NhuPrimaryCCPCH_Info_r4tddsctd_Indicator;

typedef struct NhuPrimaryCCPCH_Info_r4tdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Info_r4tddtddOption tddOption;
 NhuCellParamsID cellParamsID;
 NhuPrimaryCCPCH_Info_r4tddsctd_Indicator sctd_Indicator;
} NhuPrimaryCCPCH_Info_r4tdd;

typedef struct NhuPrimaryCCPCH_Info_r4
{
 TknU8 choice;
 union {
  NhuPrimaryCCPCH_Info_r4fdd fdd;
  NhuPrimaryCCPCH_Info_r4tdd tdd;
 } val;
} NhuPrimaryCCPCH_Info_r4;


typedef TknU8 NhuPrimaryCCPCH_Info_LCR_r4tstd_Indicator;


typedef TknU8 NhuPrimaryCCPCH_Info_LCR_r4sctd_Indicator;

typedef struct NhuPrimaryCCPCH_Info_LCR_r4
{
 TknPres pres;
 NhuPrimaryCCPCH_Info_LCR_r4tstd_Indicator tstd_Indicator;
 NhuCellParamsID cellParamsID;
 NhuPrimaryCCPCH_Info_LCR_r4sctd_Indicator sctd_Indicator;
} NhuPrimaryCCPCH_Info_LCR_r4;


typedef TknU8 NhuPrimaryCCPCH_Info_LCR_r4_exttstd_Indicator;

typedef struct NhuPrimaryCCPCH_Info_LCR_r4_ext
{
 TknPres pres;
 NhuPrimaryCCPCH_Info_LCR_r4_exttstd_Indicator tstd_Indicator;
} NhuPrimaryCCPCH_Info_LCR_r4_ext;

typedef struct NhuPrimaryCCPCH_InfoPostsyncCasesyncCase1
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
} NhuPrimaryCCPCH_InfoPostsyncCasesyncCase1;

typedef struct NhuPrimaryCCPCH_InfoPostsyncCasesyncCase2
{
 TknPres pres;
 NhuTimeslotSync2 timeslotSync2;
} NhuPrimaryCCPCH_InfoPostsyncCasesyncCase2;

typedef struct NhuPrimaryCCPCH_InfoPostsyncCase
{
 TknU8 choice;
 union {
  NhuPrimaryCCPCH_InfoPostsyncCasesyncCase1 syncCase1;
  NhuPrimaryCCPCH_InfoPostsyncCasesyncCase2 syncCase2;
 } val;
} NhuPrimaryCCPCH_InfoPostsyncCase;


typedef TknU8 NhuPrimaryCCPCH_InfoPostsctd_Indicator;

typedef struct NhuPrimaryCCPCH_InfoPost
{
 TknPres pres;
 NhuPrimaryCCPCH_InfoPostsyncCase syncCase;
 NhuCellParamsID cellParamsID;
 NhuPrimaryCCPCH_InfoPostsctd_Indicator sctd_Indicator;
} NhuPrimaryCCPCH_InfoPost;


typedef TknU8 NhuPrimaryCCPCH_InfoPostTDD_LCR_r4tstd_Indicator;


typedef TknU8 NhuPrimaryCCPCH_InfoPostTDD_LCR_r4sctd_Indicator;

typedef struct NhuPrimaryCCPCH_InfoPostTDD_LCR_r4
{
 TknPres pres;
 NhuPrimaryCCPCH_InfoPostTDD_LCR_r4tstd_Indicator tstd_Indicator;
 NhuCellParamsID cellParamsID;
 NhuPrimaryCCPCH_InfoPostTDD_LCR_r4sctd_Indicator sctd_Indicator;
} NhuPrimaryCCPCH_InfoPostTDD_LCR_r4;


typedef TknU32 NhuPUSCH_Identity;


typedef enum enumNhuUL_TS_ChannelisationCode
{
 NhuUL_TS_ChannelisationCodecc1_1Enum,
 NhuUL_TS_ChannelisationCodecc2_1Enum,
 NhuUL_TS_ChannelisationCodecc2_2Enum,
 NhuUL_TS_ChannelisationCodecc4_1Enum,
 NhuUL_TS_ChannelisationCodecc4_2Enum,
 NhuUL_TS_ChannelisationCodecc4_3Enum,
 NhuUL_TS_ChannelisationCodecc4_4Enum,
 NhuUL_TS_ChannelisationCodecc8_1Enum,
 NhuUL_TS_ChannelisationCodecc8_2Enum,
 NhuUL_TS_ChannelisationCodecc8_3Enum,
 NhuUL_TS_ChannelisationCodecc8_4Enum,
 NhuUL_TS_ChannelisationCodecc8_5Enum,
 NhuUL_TS_ChannelisationCodecc8_6Enum,
 NhuUL_TS_ChannelisationCodecc8_7Enum,
 NhuUL_TS_ChannelisationCodecc8_8Enum,
 NhuUL_TS_ChannelisationCodecc16_1Enum,
 NhuUL_TS_ChannelisationCodecc16_2Enum,
 NhuUL_TS_ChannelisationCodecc16_3Enum,
 NhuUL_TS_ChannelisationCodecc16_4Enum,
 NhuUL_TS_ChannelisationCodecc16_5Enum,
 NhuUL_TS_ChannelisationCodecc16_6Enum,
 NhuUL_TS_ChannelisationCodecc16_7Enum,
 NhuUL_TS_ChannelisationCodecc16_8Enum,
 NhuUL_TS_ChannelisationCodecc16_9Enum,
 NhuUL_TS_ChannelisationCodecc16_10Enum,
 NhuUL_TS_ChannelisationCodecc16_11Enum,
 NhuUL_TS_ChannelisationCodecc16_12Enum,
 NhuUL_TS_ChannelisationCodecc16_13Enum,
 NhuUL_TS_ChannelisationCodecc16_14Enum,
 NhuUL_TS_ChannelisationCodecc16_15Enum,
 NhuUL_TS_ChannelisationCodecc16_16Enum
} EnumNhuUL_TS_ChannelisationCode;
typedef TknU32 NhuUL_TS_ChannelisationCode;

typedef struct NhuUL_TS_ChannelisationCodeLst
{
 TknU16 noComp;
 NhuUL_TS_ChannelisationCode *member;
}NhuUL_TS_ChannelisationCodeLst;

typedef struct NhuUlnkAdditionalTimeslotsparameterssameAsLast
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
} NhuUlnkAdditionalTimeslotsparameterssameAsLast;

typedef struct NhuUlnkAdditionalTimeslotsparametersnewParams
{
 TknPres pres;
 NhuIvdualTimeslotInfo individualTimeslotInfo;
 NhuUL_TS_ChannelisationCodeLst ul_TS_ChannelisationCodeLst;
} NhuUlnkAdditionalTimeslotsparametersnewParams;

typedef struct NhuUlnkAdditionalTimeslotsparameters
{
 TknU8 choice;
 union {
  NhuUlnkAdditionalTimeslotsparameterssameAsLast sameAsLast;
  NhuUlnkAdditionalTimeslotsparametersnewParams newParams;
 } val;
} NhuUlnkAdditionalTimeslotsparameters;

typedef struct NhuUlnkAdditionalTimeslots
{
 TknPres pres;
 NhuUlnkAdditionalTimeslotsparameters parameters;
} NhuUlnkAdditionalTimeslots;


typedef TknU8 NhuUlnkTimeslotsCodesdynamicSFusage;


typedef TknU32 NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotsconsecutivenumAdditionalTimeslots;

typedef struct NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotsconsecutive
{
 TknPres pres;
 NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotsconsecutivenumAdditionalTimeslots numAdditionalTimeslots;
} NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotsconsecutive;

typedef struct NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotstimeslotLst
{
 TknU16 noComp;
 NhuUlnkAdditionalTimeslots *member;
}NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotstimeslotLst;

typedef struct NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslots
{
 TknU8 choice;
 union {
  NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotsconsecutive consecutive;
  NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotstimeslotLst timeslotLst;
 } val;
} NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslots;

typedef struct NhuUlnkTimeslotsCodesmoreTimeslots
{
 TknU8 choice;
 union {
  NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslots additionalTimeslots;
 } val;
} NhuUlnkTimeslotsCodesmoreTimeslots;

typedef struct NhuUlnkTimeslotsCodes
{
 TknPres pres;
 NhuUlnkTimeslotsCodesdynamicSFusage dynamicSFusage;
 NhuIvdualTimeslotInfo firstIvdualTimeslotInfo;
 NhuUL_TS_ChannelisationCodeLst ul_TS_ChannelisationCodeLst;
 NhuUlnkTimeslotsCodesmoreTimeslots moreTimeslots;
} NhuUlnkTimeslotsCodes;

typedef struct NhuPUSCH_Info
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuUlnkTimeslotsCodes pusch_TimeslotsCodes;
} NhuPUSCH_Info;

typedef struct NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignmentconfigurationold_Cfg
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuPUSCH_Identity pusch_Identity;
} NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignmentconfigurationold_Cfg;

typedef struct NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignmentconfigurationnew_Cfg
{
 TknPres pres;
 NhuPUSCH_Info pusch_Info;
 NhuPUSCH_Identity pusch_Identity;
} NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignmentconfigurationnew_Cfg;

typedef struct NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignmentconfiguration
{
 TknU8 choice;
 union {
  NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignmentconfigurationold_Cfg old_Cfg;
  NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignmentconfigurationnew_Cfg new_Cfg;
 } val;
} NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignmentconfiguration;

typedef struct NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignment
{
 TknPres pres;
 NhuAllocnPeriodInfo pusch_AllocnPeriodInfo;
 NhuUL_TgtSIR pusch_PowerCntrlInfo;
 NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignmentconfiguration configuration;
} NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignment;

typedef struct NhuPUSCH_CapacityAllocnInfopusch_Allocn
{
 TknU8 choice;
 union {
  NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignment pusch_AllocnAssignment;
 } val;
} NhuPUSCH_CapacityAllocnInfopusch_Allocn;

typedef struct NhuPUSCH_CapacityAllocnInfo
{
 TknPres pres;
 NhuPUSCH_CapacityAllocnInfopusch_Allocn pusch_Allocn;
} NhuPUSCH_CapacityAllocnInfo;

typedef struct NhuPUSCH_PowerCntrlInfo_r4tddOptiontdd128
{
 TknPres pres;
 NhuTPC_StepSizeTDD tpc_StepSize;
} NhuPUSCH_PowerCntrlInfo_r4tddOptiontdd128;

typedef struct NhuPUSCH_PowerCntrlInfo_r4tddOption
{
 TknU8 choice;
 union {
  NhuPUSCH_PowerCntrlInfo_r4tddOptiontdd128 tdd128;
 } val;
} NhuPUSCH_PowerCntrlInfo_r4tddOption;

typedef struct NhuPUSCH_PowerCntrlInfo_r4
{
 TknPres pres;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuPUSCH_PowerCntrlInfo_r4tddOption tddOption;
} NhuPUSCH_PowerCntrlInfo_r4;

typedef struct NhuUlnkAdditionalTimeslots_LCR_r4parameterssameAsLast
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
} NhuUlnkAdditionalTimeslots_LCR_r4parameterssameAsLast;

typedef struct NhuUlnkAdditionalTimeslots_LCR_r4parametersnewParams
{
 TknPres pres;
 NhuIvdualTimeslotInfo_LCR_r4 individualTimeslotInfo;
 NhuUL_TS_ChannelisationCodeLst ul_TS_ChannelisationCodeLst;
} NhuUlnkAdditionalTimeslots_LCR_r4parametersnewParams;

typedef struct NhuUlnkAdditionalTimeslots_LCR_r4parameters
{
 TknU8 choice;
 union {
  NhuUlnkAdditionalTimeslots_LCR_r4parameterssameAsLast sameAsLast;
  NhuUlnkAdditionalTimeslots_LCR_r4parametersnewParams newParams;
 } val;
} NhuUlnkAdditionalTimeslots_LCR_r4parameters;

typedef struct NhuUlnkAdditionalTimeslots_LCR_r4
{
 TknPres pres;
 NhuUlnkAdditionalTimeslots_LCR_r4parameters parameters;
} NhuUlnkAdditionalTimeslots_LCR_r4;


typedef TknU8 NhuUlnkTimeslotsCodes_LCR_r4dynamicSFusage;


typedef TknU32 NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotsconsecutivenumAdditionalTimeslots;

typedef struct NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotsconsecutive
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotsconsecutivenumAdditionalTimeslots numAdditionalTimeslots;
} NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotsconsecutive;

typedef struct NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotstimeslotLst
{
 TknU16 noComp;
 NhuUlnkAdditionalTimeslots_LCR_r4 *member;
}NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotstimeslotLst;

typedef struct NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslots
{
 TknU8 choice;
 union {
  NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotsconsecutive consecutive;
  NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotstimeslotLst timeslotLst;
 } val;
} NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslots;

typedef struct NhuUlnkTimeslotsCodes_LCR_r4moreTimeslots
{
 TknU8 choice;
 union {
  NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslots additionalTimeslots;
 } val;
} NhuUlnkTimeslotsCodes_LCR_r4moreTimeslots;

typedef struct NhuUlnkTimeslotsCodes_LCR_r4
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_LCR_r4dynamicSFusage dynamicSFusage;
 NhuIvdualTimeslotInfo_LCR_r4 firstIvdualTimeslotInfo;
 NhuUL_TS_ChannelisationCodeLst ul_TS_ChannelisationCodeLst;
 NhuUlnkTimeslotsCodes_LCR_r4moreTimeslots moreTimeslots;
} NhuUlnkTimeslotsCodes_LCR_r4;

typedef struct NhuPUSCH_Info_r4tddOptiontdd384
{
 TknPres pres;
 NhuUlnkTimeslotsCodes pusch_TimeslotsCodes;
} NhuPUSCH_Info_r4tddOptiontdd384;

typedef struct NhuPUSCH_Info_r4tddOptiontdd128
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_LCR_r4 pusch_TimeslotsCodes;
} NhuPUSCH_Info_r4tddOptiontdd128;

typedef struct NhuPUSCH_Info_r4tddOption
{
 TknU8 choice;
 union {
  NhuPUSCH_Info_r4tddOptiontdd384 tdd384;
  NhuPUSCH_Info_r4tddOptiontdd128 tdd128;
 } val;
} NhuPUSCH_Info_r4tddOption;

typedef struct NhuPUSCH_Info_r4
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuPUSCH_Info_r4tddOption tddOption;
} NhuPUSCH_Info_r4;

typedef struct NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignmentconfigurationold_Cfg
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuPUSCH_Identity pusch_Identity;
} NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignmentconfigurationold_Cfg;

typedef struct NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignmentconfigurationnew_Cfg
{
 TknPres pres;
 NhuPUSCH_Info_r4 pusch_Info;
 NhuPUSCH_Identity pusch_Identity;
} NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignmentconfigurationnew_Cfg;

typedef struct NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignmentconfiguration
{
 TknU8 choice;
 union {
  NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignmentconfigurationold_Cfg old_Cfg;
  NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignmentconfigurationnew_Cfg new_Cfg;
 } val;
} NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignmentconfiguration;

typedef struct NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignment
{
 TknPres pres;
 NhuAllocnPeriodInfo pusch_AllocnPeriodInfo;
 NhuPUSCH_PowerCntrlInfo_r4 pusch_PowerCntrlInfo;
 NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignmentconfiguration configuration;
} NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignment;

typedef struct NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocn
{
 TknU8 choice;
 union {
  NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignment pusch_AllocnAssignment;
 } val;
} NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocn;

typedef struct NhuPUSCH_CapacityAllocnInfo_r4
{
 TknPres pres;
 NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocn pusch_Allocn;
} NhuPUSCH_CapacityAllocnInfo_r4;

typedef struct NhuPUSCH_PowerCntrlInfo_r7tddOptiontdd128
{
 TknPres pres;
 NhuTPC_StepSizeTDD tpc_StepSize;
} NhuPUSCH_PowerCntrlInfo_r7tddOptiontdd128;

typedef struct NhuPUSCH_PowerCntrlInfo_r7tddOption
{
 TknU8 choice;
 union {
  NhuPUSCH_PowerCntrlInfo_r7tddOptiontdd128 tdd128;
 } val;
} NhuPUSCH_PowerCntrlInfo_r7tddOption;

typedef struct NhuPUSCH_PowerCntrlInfo_r7
{
 TknPres pres;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuPUSCH_PowerCntrlInfo_r7tddOption tddOption;
} NhuPUSCH_PowerCntrlInfo_r7;


typedef enum enumNhuUL_TS_ChannelisationCode_VHCR
{
 NhuUL_TS_ChannelisationCode_VHCRcc1_1Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc2_1Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc2_2Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc4_1Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc4_2Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc4_3Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc4_4Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc8_1Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc8_2Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc8_3Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc8_4Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc8_5Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc8_6Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc8_7Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc8_8Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_1Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_2Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_3Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_4Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_5Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_6Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_7Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_8Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_9Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_10Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_11Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_12Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_13Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_14Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_15Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_16Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_1Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_2Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_3Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_4Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_5Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_6Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_7Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_8Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_9Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_10Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_11Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_12Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_13Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_14Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_15Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_16Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_17Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_18Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_19Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_20Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_21Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_22Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_23Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_24Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_25Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_26Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_27Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_28Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_29Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_30Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_31Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_32Enum
} EnumNhuUL_TS_ChannelisationCode_VHCR;
typedef TknU32 NhuUL_TS_ChannelisationCode_VHCR;

typedef struct NhuUL_TS_ChannelisationCodeLst_VHCR
{
 TknU16 noComp;
 NhuUL_TS_ChannelisationCode_VHCR *member;
}NhuUL_TS_ChannelisationCodeLst_VHCR;

typedef struct NhuUlnkAdditionalTimeslots_VHCRparameterssameAsLast
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
} NhuUlnkAdditionalTimeslots_VHCRparameterssameAsLast;

typedef struct NhuUlnkAdditionalTimeslots_VHCRparametersnewParams
{
 TknPres pres;
 NhuIvdualTimeslotInfo_VHCR individualTimeslotInfo;
 NhuUL_TS_ChannelisationCodeLst ul_TS_ChannelisationCodeLst;
} NhuUlnkAdditionalTimeslots_VHCRparametersnewParams;

typedef struct NhuUlnkAdditionalTimeslots_VHCRparameters
{
 TknU8 choice;
 union {
  NhuUlnkAdditionalTimeslots_VHCRparameterssameAsLast sameAsLast;
  NhuUlnkAdditionalTimeslots_VHCRparametersnewParams newParams;
 } val;
} NhuUlnkAdditionalTimeslots_VHCRparameters;

typedef struct NhuUlnkAdditionalTimeslots_VHCR
{
 TknPres pres;
 NhuUlnkAdditionalTimeslots_VHCRparameters parameters;
} NhuUlnkAdditionalTimeslots_VHCR;


typedef TknU8 NhuUlnkTimeslotsCodes_VHCRdynamicSFusage;


typedef TknU32 NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotsconsecutivenumAdditionalTimeslots;

typedef struct NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotsconsecutive
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotsconsecutivenumAdditionalTimeslots numAdditionalTimeslots;
} NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotsconsecutive;

typedef struct NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotstimeslotLst
{
 TknU16 noComp;
 NhuUlnkAdditionalTimeslots_VHCR *member;
}NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotstimeslotLst;

typedef struct NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslots
{
 TknU8 choice;
 union {
  NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotsconsecutive consecutive;
  NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotstimeslotLst timeslotLst;
 } val;
} NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslots;

typedef struct NhuUlnkTimeslotsCodes_VHCRmoreTimeslots
{
 TknU8 choice;
 union {
  NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslots additionalTimeslots;
 } val;
} NhuUlnkTimeslotsCodes_VHCRmoreTimeslots;

typedef struct NhuUlnkTimeslotsCodes_VHCR
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_VHCRdynamicSFusage dynamicSFusage;
 NhuIvdualTimeslotInfo_VHCR firstIvdualTimeslotInfo;
 NhuUL_TS_ChannelisationCodeLst_VHCR ul_TS_ChannelisationCodeLst;
 NhuUlnkTimeslotsCodes_VHCRmoreTimeslots moreTimeslots;
} NhuUlnkTimeslotsCodes_VHCR;

typedef struct NhuPUSCH_Info_VHCR
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuUlnkTimeslotsCodes_VHCR pusch_TimeslotsCodes_VHCR;
} NhuPUSCH_Info_VHCR;

typedef struct NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignmentconfigurationold_Cfg
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuPUSCH_Identity pusch_Identity;
} NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignmentconfigurationold_Cfg;

typedef struct NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignmentconfigurationnew_Cfg
{
 TknPres pres;
 NhuPUSCH_Info_VHCR pusch_Info;
 NhuPUSCH_Identity pusch_Identity;
} NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignmentconfigurationnew_Cfg;

typedef struct NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignmentconfiguration
{
 TknU8 choice;
 union {
  NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignmentconfigurationold_Cfg old_Cfg;
  NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignmentconfigurationnew_Cfg new_Cfg;
 } val;
} NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignmentconfiguration;

typedef struct NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignment
{
 TknPres pres;
 NhuAllocnPeriodInfo pusch_AllocnPeriodInfo;
 NhuPUSCH_PowerCntrlInfo_r7 pusch_PowerCntrlInfo;
 NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignmentconfiguration configuration;
} NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignment;

typedef struct NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocn
{
 TknU8 choice;
 union {
  NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignment pusch_AllocnAssignment;
 } val;
} NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocn;

typedef struct NhuPUSCH_CapacityAllocnInfo_r7
{
 TknPres pres;
 NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocn pusch_Allocn;
} NhuPUSCH_CapacityAllocnInfo_r7;

typedef struct NhuPUSCH_Info_LCR_r4
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuUlnkTimeslotsCodes_LCR_r4 pusch_TimeslotsCodes;
} NhuPUSCH_Info_LCR_r4;

typedef struct NhuPUSCH_SysInfo
{
 TknPres pres;
 NhuPUSCH_Identity pusch_Identity;
 NhuPUSCH_Info pusch_Info;
 NhuTportFormatSet usch_TFS;
 NhuTFCS usch_TFCS;
} NhuPUSCH_SysInfo;

typedef struct NhuPUSCH_SysInfo_VHCR
{
 TknPres pres;
 NhuPUSCH_Identity pusch_Identity;
 NhuPUSCH_Info_VHCR pusch_Info_VHCR;
 NhuUSCH_TportChannelsInfo usch_TportChannelsInfo;
 NhuTFCS usch_TFCS;
} NhuPUSCH_SysInfo_VHCR;

typedef struct NhuPUSCH_SysInfo_HCR_r5
{
 TknPres pres;
 NhuPUSCH_Identity pusch_Identity;
 NhuPUSCH_Info pusch_Info;
 NhuUSCH_TportChannelsInfo usch_TportChannelsInfo;
 NhuTFCS usch_TFCS;
} NhuPUSCH_SysInfo_HCR_r5;

typedef struct NhuPUSCH_SysInfo_LCR_r4
{
 TknPres pres;
 NhuPUSCH_Identity pusch_Identity;
 NhuPUSCH_Info_LCR_r4 pusch_Info;
 NhuTportFormatSet usch_TFS;
 NhuTFCS usch_TFCS;
} NhuPUSCH_SysInfo_LCR_r4;

typedef struct NhuPUSCH_SysInfoLst
{
 TknU16 noComp;
 NhuPUSCH_SysInfo *member;
}NhuPUSCH_SysInfoLst;

typedef struct NhuPUSCH_SysInfoLst_HCR_r5
{
 TknU16 noComp;
 NhuPUSCH_SysInfo_HCR_r5 *member;
}NhuPUSCH_SysInfoLst_HCR_r5;

typedef struct NhuPUSCH_SysInfoLst_LCR_r4
{
 TknU16 noComp;
 NhuPUSCH_SysInfo_LCR_r4 *member;
}NhuPUSCH_SysInfoLst_LCR_r4;

typedef struct NhuPUSCH_SysInfoLst_SFNMember
{
 TknPres pres;
 NhuPUSCH_SysInfo pusch_SysInfo;
 NhuSFN_TimeInfo sfn_TimeInfo;
} NhuPUSCH_SysInfoLst_SFNMember;

typedef struct NhuPUSCH_SysInfoLst_SFN
{
 TknU16 noComp;
 NhuPUSCH_SysInfoLst_SFNMember *member;
}NhuPUSCH_SysInfoLst_SFN;

typedef struct NhuPUSCH_SysInfoLst_SFN_HCR_r5Member
{
 TknPres pres;
 NhuPUSCH_SysInfo_HCR_r5 pusch_SysInfo;
 NhuSFN_TimeInfo sfn_TimeInfo;
} NhuPUSCH_SysInfoLst_SFN_HCR_r5Member;

typedef struct NhuPUSCH_SysInfoLst_SFN_HCR_r5
{
 TknU16 noComp;
 NhuPUSCH_SysInfoLst_SFN_HCR_r5Member *member;
}NhuPUSCH_SysInfoLst_SFN_HCR_r5;

typedef struct NhuPUSCH_SysInfoLst_SFN_LCR_r4Member
{
 TknPres pres;
 NhuPUSCH_SysInfo_LCR_r4 pusch_SysInfo;
 NhuSFN_TimeInfo sfn_TimeInfo;
} NhuPUSCH_SysInfoLst_SFN_LCR_r4Member;

typedef struct NhuPUSCH_SysInfoLst_SFN_LCR_r4
{
 TknU16 noComp;
 NhuPUSCH_SysInfoLst_SFN_LCR_r4Member *member;
}NhuPUSCH_SysInfoLst_SFN_LCR_r4;

typedef struct NhuPUSCH_SysInfoLst_SFN_VHCRMember
{
 TknPres pres;
 NhuPUSCH_SysInfo_VHCR pusch_SysInfo_VHCR;
 NhuSFN_TimeInfo sfn_TimeInfo;
} NhuPUSCH_SysInfoLst_SFN_VHCRMember;

typedef struct NhuPUSCH_SysInfoLst_SFN_VHCR
{
 TknU16 noComp;
 NhuPUSCH_SysInfoLst_SFN_VHCRMember *member;
}NhuPUSCH_SysInfoLst_SFN_VHCR;


typedef TknU32 NhuReducedScramblingCodeNumber;


typedef TknU32 NhuRepPerLengthOffset_MICHrpp4_2;


typedef TknU32 NhuRepPerLengthOffset_MICHrpp8_2;


typedef TknU32 NhuRepPerLengthOffset_MICHrpp8_4;


typedef TknU32 NhuRepPerLengthOffset_MICHrpp16_2;


typedef TknU32 NhuRepPerLengthOffset_MICHrpp16_4;


typedef TknU32 NhuRepPerLengthOffset_MICHrpp32_2;


typedef TknU32 NhuRepPerLengthOffset_MICHrpp32_4;


typedef TknU32 NhuRepPerLengthOffset_MICHrpp64_2;


typedef TknU32 NhuRepPerLengthOffset_MICHrpp64_4;

typedef struct NhuRepPerLengthOffset_MICH
{
 TknU8 choice;
 union {
  NhuRepPerLengthOffset_MICHrpp4_2 rpp4_2;
  NhuRepPerLengthOffset_MICHrpp8_2 rpp8_2;
  NhuRepPerLengthOffset_MICHrpp8_4 rpp8_4;
  NhuRepPerLengthOffset_MICHrpp16_2 rpp16_2;
  NhuRepPerLengthOffset_MICHrpp16_4 rpp16_4;
  NhuRepPerLengthOffset_MICHrpp32_2 rpp32_2;
  NhuRepPerLengthOffset_MICHrpp32_4 rpp32_4;
  NhuRepPerLengthOffset_MICHrpp64_2 rpp64_2;
  NhuRepPerLengthOffset_MICHrpp64_4 rpp64_4;
 } val;
} NhuRepPerLengthOffset_MICH;

typedef struct NhuRL_RemovalInfoLst
{
 TknU16 noComp;
 NhuPrimaryCPICH_Info *member;
}NhuRL_RemovalInfoLst;

typedef struct NhuRL_RemovalInfoLst_SecULFreq
{
 TknU16 noComp;
 NhuPrimaryCPICH_Info *member;
}NhuRL_RemovalInfoLst_SecULFreq;


typedef enum enumNhuSCCPCH_ChannelisationCode
{
 NhuSCCPCH_ChannelisationCodecc16_1Enum,
 NhuSCCPCH_ChannelisationCodecc16_2Enum,
 NhuSCCPCH_ChannelisationCodecc16_3Enum,
 NhuSCCPCH_ChannelisationCodecc16_4Enum,
 NhuSCCPCH_ChannelisationCodecc16_5Enum,
 NhuSCCPCH_ChannelisationCodecc16_6Enum,
 NhuSCCPCH_ChannelisationCodecc16_7Enum,
 NhuSCCPCH_ChannelisationCodecc16_8Enum,
 NhuSCCPCH_ChannelisationCodecc16_9Enum,
 NhuSCCPCH_ChannelisationCodecc16_10Enum,
 NhuSCCPCH_ChannelisationCodecc16_11Enum,
 NhuSCCPCH_ChannelisationCodecc16_12Enum,
 NhuSCCPCH_ChannelisationCodecc16_13Enum,
 NhuSCCPCH_ChannelisationCodecc16_14Enum,
 NhuSCCPCH_ChannelisationCodecc16_15Enum,
 NhuSCCPCH_ChannelisationCodecc16_16Enum
} EnumNhuSCCPCH_ChannelisationCode;
typedef TknU32 NhuSCCPCH_ChannelisationCode;


typedef enum enumNhuSCCPCH_ChannelisationCode_VHCR
{
 NhuSCCPCH_ChannelisationCode_VHCRcc32_1Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_2Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_3Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_4Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_5Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_6Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_7Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_8Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_9Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_10Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_11Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_12Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_13Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_14Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_15Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_16Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_17Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_18Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_19Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_20Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_21Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_22Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_23Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_24Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_25Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_26Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_27Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_28Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_29Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_30Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_31Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_32Enum
} EnumNhuSCCPCH_ChannelisationCode_VHCR;
typedef TknU32 NhuSCCPCH_ChannelisationCode_VHCR;

typedef struct NhuSCCPCH_ChannelisationCodeLst
{
 TknU16 noComp;
 NhuSCCPCH_ChannelisationCode *member;
}NhuSCCPCH_ChannelisationCodeLst;

typedef struct NhuSCCPCH_ChannelisationCodeLst_VHCR
{
 TknU16 noComp;
 NhuSCCPCH_ChannelisationCode_VHCR *member;
}NhuSCCPCH_ChannelisationCodeLst_VHCR;


typedef TknU32 NhuSF256_AndCodeNumbersf4;


typedef TknU32 NhuSF256_AndCodeNumbersf8;


typedef TknU32 NhuSF256_AndCodeNumbersf16;


typedef TknU32 NhuSF256_AndCodeNumbersf32;


typedef TknU32 NhuSF256_AndCodeNumbersf64;


typedef TknU32 NhuSF256_AndCodeNumbersf128;


typedef TknU32 NhuSF256_AndCodeNumbersf256;

typedef struct NhuSF256_AndCodeNumber
{
 TknU8 choice;
 union {
  NhuSF256_AndCodeNumbersf4 sf4;
  NhuSF256_AndCodeNumbersf8 sf8;
  NhuSF256_AndCodeNumbersf16 sf16;
  NhuSF256_AndCodeNumbersf32 sf32;
  NhuSF256_AndCodeNumbersf64 sf64;
  NhuSF256_AndCodeNumbersf128 sf128;
  NhuSF256_AndCodeNumbersf256 sf256;
 } val;
} NhuSF256_AndCodeNumber;


typedef TknU32 NhuTimingOffset;


typedef TknU8 NhuSecondaryCCPCH_InfomodeSpecificInfofddsttd_Indicator;


typedef TknU8 NhuSecondaryCCPCH_InfomodeSpecificInfofddpilotSymbolExistence;


typedef TknU8 NhuSecondaryCCPCH_InfomodeSpecificInfofddtfci_Existence;

typedef struct NhuSecondaryCCPCH_InfomodeSpecificInfofdd
{
 TknPres pres;
 NhuPCPICH_UsageForChannelEst dummy1;
 NhuSecondaryCPICH_Info dummy2;
 NhuSecondaryScramblingCode secondaryScramblingCode;
 NhuSecondaryCCPCH_InfomodeSpecificInfofddsttd_Indicator sttd_Indicator;
 NhuSF256_AndCodeNumber sf_AndCodeNumber;
 NhuSecondaryCCPCH_InfomodeSpecificInfofddpilotSymbolExistence pilotSymbolExistence;
 NhuSecondaryCCPCH_InfomodeSpecificInfofddtfci_Existence tfci_Existence;
 NhuPositionFixedOrFlexible positionFixedOrFlexible;
 NhuTimingOffset timingOffset;
} NhuSecondaryCCPCH_InfomodeSpecificInfofdd;

typedef struct NhuSecondaryCCPCH_InfomodeSpecificInfotdd
{
 TknPres pres;
 NhuCmnTimeslotInfoSCCPCH commonTimeslotInfo;
 NhuIvdualTimeslotInfo individualTimeslotInfo;
 NhuSCCPCH_ChannelisationCodeLst channelisationCode;
} NhuSecondaryCCPCH_InfomodeSpecificInfotdd;

typedef struct NhuSecondaryCCPCH_InfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuSecondaryCCPCH_InfomodeSpecificInfofdd fdd;
  NhuSecondaryCCPCH_InfomodeSpecificInfotdd tdd;
 } val;
} NhuSecondaryCCPCH_InfomodeSpecificInfo;

typedef struct NhuSecondaryCCPCH_Info
{
 TknPres pres;
 NhuSecondaryCCPCH_InfomodeSpecificInfo modeSpecificInfo;
} NhuSecondaryCCPCH_Info;

typedef struct NhuSCCPCH_SysInfo
{
 TknPres pres;
 NhuSecondaryCCPCH_Info secondaryCCPCH_Info;
 NhuTFCS tfcs;
 NhuFACH_PCH_InfoLst fach_PCH_InfoLst;
 NhuPICH_Info pich_Info;
} NhuSCCPCH_SysInfo;

typedef struct NhuSecondaryCCPCH_Info_LCR_r4_ext
{
 TknPres pres;
 NhuIvdualTimeslotInfo_LCR_r4_ext individualTimeslotLCR_Ext;
} NhuSecondaryCCPCH_Info_LCR_r4_ext;

typedef struct NhuSCCPCH_SysInfo_LCR_r4_ext
{
 TknPres pres;
 NhuSecondaryCCPCH_Info_LCR_r4_ext secondaryCCPCH_LCR_Extns;
 NhuPICH_Info_LCR_r4 pich_Info;
} NhuSCCPCH_SysInfo_LCR_r4_ext;

typedef struct NhuSecondaryCCPCH_Info_HCR_VHCR_r7modeSpecificInfotdd384
{
 TknPres pres;
 NhuIvdualTimeslotInfo_r7 individualTimeslotInfo;
 NhuSCCPCH_ChannelisationCodeLst channelisationCode;
} NhuSecondaryCCPCH_Info_HCR_VHCR_r7modeSpecificInfotdd384;

typedef struct NhuSecondaryCCPCH_Info_HCR_VHCR_r7modeSpecificInfotdd768
{
 TknPres pres;
 NhuIvdualTimeslotInfo_VHCR individualTimeslotInfo;
 NhuSCCPCH_ChannelisationCodeLst_VHCR channelisationCode;
} NhuSecondaryCCPCH_Info_HCR_VHCR_r7modeSpecificInfotdd768;

typedef struct NhuSecondaryCCPCH_Info_HCR_VHCR_r7modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuSecondaryCCPCH_Info_HCR_VHCR_r7modeSpecificInfotdd384 tdd384;
  NhuSecondaryCCPCH_Info_HCR_VHCR_r7modeSpecificInfotdd768 tdd768;
 } val;
} NhuSecondaryCCPCH_Info_HCR_VHCR_r7modeSpecificInfo;

typedef struct NhuSecondaryCCPCH_Info_HCR_VHCR_r7
{
 TknPres pres;
 NhuSecondaryCCPCH_Info_HCR_VHCR_r7modeSpecificInfo modeSpecificInfo;
} NhuSecondaryCCPCH_Info_HCR_VHCR_r7;

typedef struct NhuSCCPCH_SysInfo_HCR_VHCR_r7
{
 TknPres pres;
 NhuSecondaryCCPCH_Info_HCR_VHCR_r7 secondaryCCPCH_Info;
 NhuTFCS tfcs;
 NhuFACH_PCH_InfoLst fach_PCH_InfoLst;
 NhuPICH_Info_HCR_VHCR_r7 pich_Info;
} NhuSCCPCH_SysInfo_HCR_VHCR_r7;

typedef struct NhuSCCPCH_SysInfoLst
{
 TknU16 noComp;
 NhuSCCPCH_SysInfo *member;
}NhuSCCPCH_SysInfoLst;

typedef struct NhuSCCPCH_SysInfoLst_HCR_VHCR_r7
{
 TknU16 noComp;
 NhuSCCPCH_SysInfo_HCR_VHCR_r7 *member;
}NhuSCCPCH_SysInfoLst_HCR_VHCR_r7;

typedef struct NhuSCCPCH_SysInfoLst_LCR_r4_ext
{
 TknU16 noComp;
 NhuSCCPCH_SysInfo_LCR_r4_ext *member;
}NhuSCCPCH_SysInfoLst_LCR_r4_ext;


typedef TknU8 NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfofddsttd_Indicator;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfofdd
{
 TknPres pres;
 NhuSecondaryScramblingCode secondaryScramblingCode;
 NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfofddsttd_Indicator sttd_Indicator;
 NhuSF256_AndCodeNumber sf_AndCodeNumber;
 NhuTimingOffset timingOffset;
} NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfofdd;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfotdd384
{
 TknPres pres;
 NhuCmnTimeslotInfoMBMS commonTimeslotInfoMBMS;
 NhuDlnkTimeslotsCodes downlinkTimeslotsCodes;
} NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfotdd384;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfotdd128
{
 TknPres pres;
 NhuCmnTimeslotInfoMBMS commonTimeslotInfoMBMS;
 NhuDlnkTimeslotsCodes_LCR_r4 downlinkTimeslotsCodes;
} NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfotdd128;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfofdd fdd;
  NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfotdd384 tdd384;
  NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfotdd128 tdd128;
 } val;
} NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfo;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r6
{
 TknPres pres;
 NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfo modeSpecificInfo;
} NhuSecondaryCCPCHInfo_MBMS_r6;


typedef enum enumNhuMBMS_TCTF_Presence
{
 NhuMBMS_TCTF_PresencefalseEnum
} EnumNhuMBMS_TCTF_Presence;
typedef TknU32 NhuMBMS_TCTF_Presence;


typedef TknU32 NhuMBMS_MCCH_CfgInfo_r6accessInfoPeriodCoefficient;


typedef TknU32 NhuMBMS_MCCH_CfgInfo_r6repetitionPeriodCoefficient;


typedef TknU32 NhuMBMS_MCCH_CfgInfo_r6modificationPeriodCoefficient;

typedef struct NhuMBMS_MCCH_CfgInfo_r6
{
 TknPres pres;
 NhuMBMS_MCCH_CfgInfo_r6accessInfoPeriodCoefficient accessInfoPeriodCoefficient;
 NhuMBMS_MCCH_CfgInfo_r6repetitionPeriodCoefficient repetitionPeriodCoefficient;
 NhuMBMS_MCCH_CfgInfo_r6modificationPeriodCoefficient modificationPeriodCoefficient;
 NhuRLC_Info_MCCH_r6 rlc_Info;
 NhuMBMS_TCTF_Presence tctf_Presence;
} NhuMBMS_MCCH_CfgInfo_r6;

typedef struct NhuMBMS_FACHCarryingMTCH_Lst
{
 TknU16 noComp;
 NhuTportFormatSet *member;
}NhuMBMS_FACHCarryingMTCH_Lst;


typedef TknU32 NhuMBMS_MSCHSchedulingInfoschedulingPeriod_32_Offset;


typedef TknU32 NhuMBMS_MSCHSchedulingInfoschedulingPeriod_64_Offset;


typedef TknU32 NhuMBMS_MSCHSchedulingInfoschedulingPeriod_128_Offset;


typedef TknU32 NhuMBMS_MSCHSchedulingInfoschedulingPeriod_256_Offset;


typedef TknU32 NhuMBMS_MSCHSchedulingInfoschedulingPeriod_512_Offset;


typedef TknU32 NhuMBMS_MSCHSchedulingInfoschedulingPeriod_1024_Offset;

typedef struct NhuMBMS_MSCHSchedulingInfo
{
 TknU8 choice;
 union {
  NhuMBMS_MSCHSchedulingInfoschedulingPeriod_32_Offset schedulingPeriod_32_Offset;
  NhuMBMS_MSCHSchedulingInfoschedulingPeriod_64_Offset schedulingPeriod_64_Offset;
  NhuMBMS_MSCHSchedulingInfoschedulingPeriod_128_Offset schedulingPeriod_128_Offset;
  NhuMBMS_MSCHSchedulingInfoschedulingPeriod_256_Offset schedulingPeriod_256_Offset;
  NhuMBMS_MSCHSchedulingInfoschedulingPeriod_512_Offset schedulingPeriod_512_Offset;
  NhuMBMS_MSCHSchedulingInfoschedulingPeriod_1024_Offset schedulingPeriod_1024_Offset;
 } val;
} NhuMBMS_MSCHSchedulingInfo;

typedef struct NhuMBMS_MSCH_CfgInfo_r6
{
 TknPres pres;
 NhuMBMS_MSCHSchedulingInfo mschShedulingInfo;
 NhuRLC_Info_MSCH_r6 rlc_Info;
 NhuMBMS_TCTF_Presence tctf_Presence;
} NhuMBMS_MSCH_CfgInfo_r6;

typedef struct NhuSCCPCH_SysInfo_MBMS_r6fachCarryingMCCH
{
 TknPres pres;
 NhuTportFormatSet mcch_transportFormatSet;
 NhuMBMS_MCCH_CfgInfo_r6 mcch_CfgInfo;
} NhuSCCPCH_SysInfo_MBMS_r6fachCarryingMCCH;

typedef struct NhuSCCPCH_SysInfo_MBMS_r6fachCarryingMSCH
{
 TknPres pres;
 NhuTportFormatSet msch_transportFormatSet;
 NhuMBMS_MSCH_CfgInfo_r6 dummy;
} NhuSCCPCH_SysInfo_MBMS_r6fachCarryingMSCH;

typedef struct NhuSCCPCH_SysInfo_MBMS_r6
{
 TknPres pres;
 NhuSecondaryCCPCHInfo_MBMS_r6 secondaryCCPCHInfo_MBMS;
 NhuTFCS transportFormatCombinationSet;
 NhuSCCPCH_SysInfo_MBMS_r6fachCarryingMCCH fachCarryingMCCH;
 NhuMBMS_FACHCarryingMTCH_Lst fachCarryingMTCH_Lst;
 NhuSCCPCH_SysInfo_MBMS_r6fachCarryingMSCH fachCarryingMSCH;
} NhuSCCPCH_SysInfo_MBMS_r6;


typedef enum enumNhuTimeSlotLCR_ext
{
 NhuTimeSlotLCR_extts7Enum,
 NhuTimeSlotLCR_extspare3Enum,
 NhuTimeSlotLCR_extspare2Enum,
 NhuTimeSlotLCR_extspare1Enum
} EnumNhuTimeSlotLCR_ext;
typedef TknU32 NhuTimeSlotLCR_ext;


typedef TknU8 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofddsttd_Indicator;


typedef TknS32 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofddmodulationmod16QAM;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofddmodulation
{
 TknU8 choice;
 union {
  NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofddmodulationmod16QAM mod16QAM;
 } val;
} NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofddmodulation;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofdd
{
 TknPres pres;
 NhuSecondaryScramblingCode secondaryScramblingCode;
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofddsttd_Indicator sttd_Indicator;
 NhuSF256_AndCodeNumber sf_AndCodeNumber;
 NhuTimingOffset timingOffset;
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofddmodulation modulation;
} NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofdd;


typedef enum enumNhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd384modulation
{
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd384modulationmodQPSKEnum,
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd384modulationmod16QAMEnum
} EnumNhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd384modulation;
typedef TknU32 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd384modulation;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd384
{
 TknPres pres;
 NhuCmnTimeslotInfoMBMS commonTimeslotInfoMBMS;
 NhuDlnkTimeslotsCodes_r7 downlinkTimeslotsCodes;
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd384modulation modulation;
} NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd384;


typedef enum enumNhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd768modulation
{
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd768modulationmodQPSKEnum,
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd768modulationmod16QAMEnum
} EnumNhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd768modulation;
typedef TknU32 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd768modulation;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd768
{
 TknPres pres;
 NhuCmnTimeslotInfoMBMS commonTimeslotInfoMBMS;
 NhuDlnkTimeslotsCodes_VHCR downlinkTimeslotsCodes;
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd768modulation modulation;
} NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd768;


typedef enum enumNhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd128modulation
{
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd128modulationmodQPSKEnum,
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd128modulationmod16QAMEnum
} EnumNhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd128modulation;
typedef TknU32 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd128modulation;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd128
{
 TknPres pres;
 NhuCmnTimeslotInfoMBMS commonTimeslotInfoMBMS;
 NhuDlnkTimeslotsCodes_LCR_r4 downlinkTimeslotsCodes;
 NhuTimeSlotLCR_ext mbsfnSpecialTimeSlot;
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd128modulation modulation;
} NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd128;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofdd fdd;
  NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd384 tdd384;
  NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd768 tdd768;
  NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd128 tdd128;
 } val;
} NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfo;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r7
{
 TknPres pres;
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfo modeSpecificInfo;
} NhuSecondaryCCPCHInfo_MBMS_r7;

typedef struct NhuSCCPCH_SysInfo_MBMS_r7fachCarryingMCCH
{
 TknPres pres;
 NhuTportFormatSet mcch_transportFormatSet;
 NhuMBMS_MCCH_CfgInfo_r6 mcch_CfgInfo;
} NhuSCCPCH_SysInfo_MBMS_r7fachCarryingMCCH;

typedef struct NhuSCCPCH_SysInfo_MBMS_r7fachCarryingMSCH
{
 TknPres pres;
 NhuTportFormatSet msch_transportFormatSet;
} NhuSCCPCH_SysInfo_MBMS_r7fachCarryingMSCH;

typedef struct NhuSCCPCH_SysInfo_MBMS_r7
{
 TknPres pres;
 NhuSecondaryCCPCHInfo_MBMS_r7 secondaryCCPCHInfo_MBMS;
 NhuTFCS transportFormatCombinationSet;
 NhuSCCPCH_SysInfo_MBMS_r7fachCarryingMCCH fachCarryingMCCH;
 NhuMBMS_FACHCarryingMTCH_Lst fachCarryingMTCH_Lst;
 NhuSCCPCH_SysInfo_MBMS_r7fachCarryingMSCH fachCarryingMSCH;
} NhuSCCPCH_SysInfo_MBMS_r7;


typedef TknU8 NhuSecondaryCCPCH_Info_r4modeSpecificInfofddsttd_Indicator;


typedef TknU8 NhuSecondaryCCPCH_Info_r4modeSpecificInfofddpilotSymbolExistence;


typedef TknU8 NhuSecondaryCCPCH_Info_r4modeSpecificInfofddtfci_Existence;

typedef struct NhuSecondaryCCPCH_Info_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuSecondaryScramblingCode secondaryScramblingCode;
 NhuSecondaryCCPCH_Info_r4modeSpecificInfofddsttd_Indicator sttd_Indicator;
 NhuSF256_AndCodeNumber sf_AndCodeNumber;
 NhuSecondaryCCPCH_Info_r4modeSpecificInfofddpilotSymbolExistence pilotSymbolExistence;
 NhuSecondaryCCPCH_Info_r4modeSpecificInfofddtfci_Existence tfci_Existence;
 NhuPositionFixedOrFlexible positionFixedOrFlexible;
 NhuTimingOffset timingOffset;
} NhuSecondaryCCPCH_Info_r4modeSpecificInfofdd;

typedef struct NhuSecondaryCCPCH_Info_r4modeSpecificInfotddtddOptiontdd384
{
 TknPres pres;
 NhuIvdualTimeslotInfo individualTimeslotInfo;
} NhuSecondaryCCPCH_Info_r4modeSpecificInfotddtddOptiontdd384;

typedef struct NhuSecondaryCCPCH_Info_r4modeSpecificInfotddtddOptiontdd128
{
 TknPres pres;
 NhuIvdualTimeslotInfo_LCR_r4 individualTimeslotInfo;
} NhuSecondaryCCPCH_Info_r4modeSpecificInfotddtddOptiontdd128;

typedef struct NhuSecondaryCCPCH_Info_r4modeSpecificInfotddtddOption
{
 TknU8 choice;
 union {
  NhuSecondaryCCPCH_Info_r4modeSpecificInfotddtddOptiontdd384 tdd384;
  NhuSecondaryCCPCH_Info_r4modeSpecificInfotddtddOptiontdd128 tdd128;
 } val;
} NhuSecondaryCCPCH_Info_r4modeSpecificInfotddtddOption;

typedef struct NhuSecondaryCCPCH_Info_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuCmnTimeslotInfoSCCPCH commonTimeslotInfo;
 NhuSecondaryCCPCH_Info_r4modeSpecificInfotddtddOption tddOption;
 NhuSCCPCH_ChannelisationCodeLst channelisationCode;
} NhuSecondaryCCPCH_Info_r4modeSpecificInfotdd;

typedef struct NhuSecondaryCCPCH_Info_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuSecondaryCCPCH_Info_r4modeSpecificInfofdd fdd;
  NhuSecondaryCCPCH_Info_r4modeSpecificInfotdd tdd;
 } val;
} NhuSecondaryCCPCH_Info_r4modeSpecificInfo;

typedef struct NhuSecondaryCCPCH_Info_r4
{
 TknPres pres;
 NhuSecondaryCCPCH_Info_r4modeSpecificInfo modeSpecificInfo;
} NhuSecondaryCCPCH_Info_r4;


typedef TknU32 NhuSecondaryCCPCHFrameTyp2InfosubFrameNumber;


typedef TknS32 NhuSecondaryCCPCHFrameTyp2Infomodulationmod16QAMcpich_SecCCPCH_PowerOffset;

typedef struct NhuSecondaryCCPCHFrameTyp2Infomodulationmod16QAM
{
 TknPres pres;
 NhuSecondaryCCPCHFrameTyp2Infomodulationmod16QAMcpich_SecCCPCH_PowerOffset cpich_SecCCPCH_PowerOffset;
} NhuSecondaryCCPCHFrameTyp2Infomodulationmod16QAM;

typedef struct NhuSecondaryCCPCHFrameTyp2Infomodulation
{
 TknU8 choice;
 union {
  NhuSecondaryCCPCHFrameTyp2Infomodulationmod16QAM mod16QAM;
 } val;
} NhuSecondaryCCPCHFrameTyp2Infomodulation;

typedef struct NhuSecondaryCCPCHFrameTyp2Info
{
 TknPres pres;
 NhuSecondaryCCPCHFrameTyp2InfosubFrameNumber subFrameNumber;
 NhuDL_ChannelCodes_MBSFN_IMB384 dl_ChannelisationCodes;
 NhuSecondaryCCPCHFrameTyp2Infomodulation modulation;
} NhuSecondaryCCPCHFrameTyp2Info;


typedef TknU8 NhuSecondaryCCPCHInfoDiff_MBMSsttd_Indicator;

typedef struct NhuSecondaryCCPCHInfoDiff_MBMS
{
 TknPres pres;
 NhuSecondaryScramblingCode secondaryScramblingCode;
 NhuSecondaryCCPCHInfoDiff_MBMSsttd_Indicator sttd_Indicator;
 NhuSF256_AndCodeNumber sf_AndCodeNumber;
 NhuTimingOffset timingOffset;
} NhuSecondaryCCPCHInfoDiff_MBMS;


typedef enum enumNhuSecondaryCellMIMOparametersFDD_v950extprecodingWeightSetRestrn
{
 NhuSecondaryCellMIMOparametersFDD_v950extprecodingWeightSetRestrntrueEnum
} EnumNhuSecondaryCellMIMOparametersFDD_v950extprecodingWeightSetRestrn;
typedef TknU32 NhuSecondaryCellMIMOparametersFDD_v950extprecodingWeightSetRestrn;

typedef struct NhuSecondaryCellMIMOparametersFDD_v950ext
{
 TknPres pres;
 NhuSecondaryCellMIMOparametersFDD_v950extprecodingWeightSetRestrn precodingWeightSetRestrn;
} NhuSecondaryCellMIMOparametersFDD_v950ext;


typedef TknU8 NhuServingCellChangeMACreset;


typedef enum enumNhuServingCellChangeMsgTyp
{
 NhuServingCellChangeMsgTypradioBrSetupEnum,
 NhuServingCellChangeMsgTypradioBrRecfgnEnum,
 NhuServingCellChangeMsgTyptransportChannelRecfgnEnum,
 NhuServingCellChangeMsgTypphysicalChannelRecfgnEnum
} EnumNhuServingCellChangeMsgTyp;
typedef TknU32 NhuServingCellChangeMsgTyp;


typedef TknU32 NhuServingCellChangeTrId;

typedef struct NhuServingCellChangeParams
{
 TknPres pres;
 NhuServingCellChangeMACreset servingCellChangeMACreset;
 NhuServingCellChangeMsgTyp servingCellChangeMsgTyp;
 NhuServingCellChangeTrId servingCellChangeTrId;
} NhuServingCellChangeParams;


typedef TknU32 NhuSpecialBurstScheduling;


typedef enum enumNhuSpreadingFactor
{
 NhuSpreadingFactorsf4Enum,
 NhuSpreadingFactorsf8Enum,
 NhuSpreadingFactorsf16Enum,
 NhuSpreadingFactorsf32Enum,
 NhuSpreadingFactorsf64Enum,
 NhuSpreadingFactorsf128Enum,
 NhuSpreadingFactorsf256Enum
} EnumNhuSpreadingFactor;
typedef TknU32 NhuSpreadingFactor;


typedef enum enumNhuSYNC_UL_Procedure_r4max_SYNC_UL_Transmissions
{
 NhuSYNC_UL_Procedure_r4max_SYNC_UL_Transmissionstr1Enum,
 NhuSYNC_UL_Procedure_r4max_SYNC_UL_Transmissionstr2Enum,
 NhuSYNC_UL_Procedure_r4max_SYNC_UL_Transmissionstr4Enum,
 NhuSYNC_UL_Procedure_r4max_SYNC_UL_Transmissionstr8Enum
} EnumNhuSYNC_UL_Procedure_r4max_SYNC_UL_Transmissions;
typedef TknU32 NhuSYNC_UL_Procedure_r4max_SYNC_UL_Transmissions;


typedef TknU32 NhuSYNC_UL_Procedure_r4powerRampStep;

typedef struct NhuSYNC_UL_Procedure_r4
{
 TknPres pres;
 NhuSYNC_UL_Procedure_r4max_SYNC_UL_Transmissions max_SYNC_UL_Transmissions;
 NhuSYNC_UL_Procedure_r4powerRampStep powerRampStep;
} NhuSYNC_UL_Procedure_r4;


typedef TknStrBSXL NhuSynchronisationParams_r4sync_UL_CodesBitmap;

typedef TknU32 NhuSynchronisationParams_r4prxUpPCHdes;

typedef struct NhuSynchronisationParams_r4
{
 TknPres pres;
 NhuSynchronisationParams_r4sync_UL_CodesBitmap sync_UL_CodesBitmap;
 NhuFPACH_Info_r4 fpach_Info;
 NhuSynchronisationParams_r4prxUpPCHdes prxUpPCHdes;
 NhuSYNC_UL_Procedure_r4 sync_UL_Procedure;
} NhuSynchronisationParams_r4;

typedef struct NhuTDD_MBSFNTSlotInfo
{
 TknPres pres;
 NhuTimeslotNumber timeSlotNumber;
 NhuCellParamsID cellParamsID;
} NhuTDD_MBSFNTSlotInfo;

typedef struct NhuTDD_MBSFNInfo
{
 TknU16 noComp;
 NhuTDD_MBSFNTSlotInfo *member;
}NhuTDD_MBSFNInfo;


typedef enum enumNhuTFC_CntrlDuration
{
 NhuTFC_CntrlDurationtfc_cd1Enum,
 NhuTFC_CntrlDurationtfc_cd2Enum,
 NhuTFC_CntrlDurationtfc_cd4Enum,
 NhuTFC_CntrlDurationtfc_cd8Enum,
 NhuTFC_CntrlDurationtfc_cd16Enum,
 NhuTFC_CntrlDurationtfc_cd24Enum,
 NhuTFC_CntrlDurationtfc_cd32Enum,
 NhuTFC_CntrlDurationtfc_cd48Enum,
 NhuTFC_CntrlDurationtfc_cd64Enum,
 NhuTFC_CntrlDurationtfc_cd128Enum,
 NhuTFC_CntrlDurationtfc_cd192Enum,
 NhuTFC_CntrlDurationtfc_cd256Enum,
 NhuTFC_CntrlDurationtfc_cd512Enum
} EnumNhuTFC_CntrlDuration;
typedef TknU32 NhuTFC_CntrlDuration;

typedef struct NhuTimeslotLst
{
 TknU16 noComp;
 NhuTimeslotNumber *member;
}NhuTimeslotLst;

typedef struct NhuTimeslotLst_r4tdd384
{
 TknU16 noComp;
 NhuTimeslotNumber *member;
}NhuTimeslotLst_r4tdd384;

typedef struct NhuTimeslotLst_r4tdd128
{
 TknU16 noComp;
 NhuTimeslotNumber_LCR_r4 *member;
}NhuTimeslotLst_r4tdd128;

typedef struct NhuTimeslotLst_r4
{
 TknU8 choice;
 union {
  NhuTimeslotLst_r4tdd384 tdd384;
  NhuTimeslotLst_r4tdd128 tdd128;
 } val;
} NhuTimeslotLst_r4;

typedef struct NhuDTX_DRX_TimingInfo_r7timing
{
 TknU8 choice;
 union {
  NhuNewTiming newTiming;
 } val;
} NhuDTX_DRX_TimingInfo_r7timing;

typedef struct NhuDTX_DRX_TimingInfo_r7
{
 TknPres pres;
 NhuDTX_DRX_TimingInfo_r7timing timing;
} NhuDTX_DRX_TimingInfo_r7;


typedef TknU32 NhuUL_16QAM_Settingsbeta_Ed_Gain_E_AGCH_Table_Selection;

typedef struct NhuUL_16QAM_Settings
{
 TknPres pres;
 NhuUL_16QAM_Settingsbeta_Ed_Gain_E_AGCH_Table_Selection beta_Ed_Gain_E_AGCH_Table_Selection;
} NhuUL_16QAM_Settings;


typedef enum enumNhuUL_16QAM_Configmac_es_e_resetIndicator
{
 NhuUL_16QAM_Configmac_es_e_resetIndicatortrueEnum
} EnumNhuUL_16QAM_Configmac_es_e_resetIndicator;
typedef TknU32 NhuUL_16QAM_Configmac_es_e_resetIndicator;

typedef struct NhuUL_16QAM_Config
{
 TknPres pres;
 NhuUL_16QAM_Settings ul_16QAM_Settings;
 NhuE_TFCI_TableIdx e_TFCI_TableIdx;
 NhuUL_16QAM_Configmac_es_e_resetIndicator mac_es_e_resetIndicator;
} NhuUL_16QAM_Config;

typedef struct NhuUL_CCTrCH
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuTimeInfo timeInfo;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuUlnkTimeslotsCodes ul_CCTrCH_TimeslotsCodes;
} NhuUL_CCTrCH;

typedef struct NhuUL_CCTrCH_r4tddOptiontdd384
{
 TknPres pres;
 NhuUlnkTimeslotsCodes ul_CCTrCH_TimeslotsCodes;
} NhuUL_CCTrCH_r4tddOptiontdd384;

typedef struct NhuUL_CCTrCH_r4tddOptiontdd128
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_LCR_r4 ul_CCTrCH_TimeslotsCodes;
} NhuUL_CCTrCH_r4tddOptiontdd128;

typedef struct NhuUL_CCTrCH_r4tddOption
{
 TknU8 choice;
 union {
  NhuUL_CCTrCH_r4tddOptiontdd384 tdd384;
  NhuUL_CCTrCH_r4tddOptiontdd128 tdd128;
 } val;
} NhuUL_CCTrCH_r4tddOption;

typedef struct NhuUL_CCTrCH_r4
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuTimeInfo timeInfo;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuUL_CCTrCH_r4tddOption tddOption;
} NhuUL_CCTrCH_r4;

typedef struct NhuUL_TS_ChannelisationCodeLst_r7Member
{
 TknPres pres;
 NhuUL_TS_ChannelisationCode ul_TS_Channelisation_Code;
 NhuPLCCH_Info plcch_info;
} NhuUL_TS_ChannelisationCodeLst_r7Member;

typedef struct NhuUL_TS_ChannelisationCodeLst_r7
{
 TknU16 noComp;
 NhuUL_TS_ChannelisationCodeLst_r7Member *member;
}NhuUL_TS_ChannelisationCodeLst_r7;

typedef struct NhuUlnkAdditionalTimeslots_LCR_r7parameterssameAsLast
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
} NhuUlnkAdditionalTimeslots_LCR_r7parameterssameAsLast;

typedef struct NhuUlnkAdditionalTimeslots_LCR_r7parametersnewParams
{
 TknPres pres;
 NhuIvdualTimeslotInfo_LCR_r4 individualTimeslotInfo;
 NhuUL_TS_ChannelisationCodeLst_r7 ul_TS_ChannelisationCodeLst;
} NhuUlnkAdditionalTimeslots_LCR_r7parametersnewParams;

typedef struct NhuUlnkAdditionalTimeslots_LCR_r7parameters
{
 TknU8 choice;
 union {
  NhuUlnkAdditionalTimeslots_LCR_r7parameterssameAsLast sameAsLast;
  NhuUlnkAdditionalTimeslots_LCR_r7parametersnewParams newParams;
 } val;
} NhuUlnkAdditionalTimeslots_LCR_r7parameters;

typedef struct NhuUlnkAdditionalTimeslots_LCR_r7
{
 TknPres pres;
 NhuUlnkAdditionalTimeslots_LCR_r7parameters parameters;
} NhuUlnkAdditionalTimeslots_LCR_r7;


typedef TknU8 NhuUlnkTimeslotsCodes_LCR_r7dynamicSFusage;


typedef TknU32 NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslotsconsecutivenumAdditionalTimeslots;

typedef struct NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslotsconsecutive
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslotsconsecutivenumAdditionalTimeslots numAdditionalTimeslots;
} NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslotsconsecutive;

typedef struct NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslotstimeslotLst
{
 TknU16 noComp;
 NhuUlnkAdditionalTimeslots_LCR_r7 *member;
}NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslotstimeslotLst;

typedef struct NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslots
{
 TknU8 choice;
 union {
  NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslotsconsecutive consecutive;
  NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslotstimeslotLst timeslotLst;
 } val;
} NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslots;

typedef struct NhuUlnkTimeslotsCodes_LCR_r7moreTimeslots
{
 TknU8 choice;
 union {
  NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslots additionalTimeslots;
 } val;
} NhuUlnkTimeslotsCodes_LCR_r7moreTimeslots;

typedef struct NhuUlnkTimeslotsCodes_LCR_r7
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_LCR_r7dynamicSFusage dynamicSFusage;
 NhuIvdualTimeslotInfo_LCR_r4 firstIvdualTimeslotInfo;
 NhuUL_TS_ChannelisationCodeLst_r7 ul_TS_ChannelisationCodeLst;
 NhuUlnkTimeslotsCodes_LCR_r7moreTimeslots moreTimeslots;
} NhuUlnkTimeslotsCodes_LCR_r7;

typedef struct NhuUL_CCTrCH_r7tddOptiontdd384
{
 TknPres pres;
 NhuUlnkTimeslotsCodes ul_CCTrCH_TimeslotsCodes;
} NhuUL_CCTrCH_r7tddOptiontdd384;

typedef struct NhuUL_CCTrCH_r7tddOptiontdd768
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_VHCR ul_CCTrCH_TimeslotsCodes;
} NhuUL_CCTrCH_r7tddOptiontdd768;

typedef struct NhuUL_CCTrCH_r7tddOptiontdd128
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_LCR_r7 ul_CCTrCH_TimeslotsCodes;
} NhuUL_CCTrCH_r7tddOptiontdd128;

typedef struct NhuUL_CCTrCH_r7tddOption
{
 TknU8 choice;
 union {
  NhuUL_CCTrCH_r7tddOptiontdd384 tdd384;
  NhuUL_CCTrCH_r7tddOptiontdd768 tdd768;
  NhuUL_CCTrCH_r7tddOptiontdd128 tdd128;
 } val;
} NhuUL_CCTrCH_r7tddOption;

typedef struct NhuUL_CCTrCH_r7
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuTimeInfo timeInfo;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuUL_CCTrCH_r7tddOption tddOption;
} NhuUL_CCTrCH_r7;

typedef struct NhuUL_CCTrCHLst
{
 TknU16 noComp;
 NhuUL_CCTrCH *member;
}NhuUL_CCTrCHLst;

typedef struct NhuUL_CCTrCHLst_r4
{
 TknU16 noComp;
 NhuUL_CCTrCH_r4 *member;
}NhuUL_CCTrCHLst_r4;

typedef struct NhuUL_CCTrCHLst_r7
{
 TknU16 noComp;
 NhuUL_CCTrCH_r7 *member;
}NhuUL_CCTrCHLst_r7;

typedef struct NhuUL_CCTrCHLstToRemove
{
 TknU16 noComp;
 NhuTFCS_IdentityPlain *member;
}NhuUL_CCTrCHLstToRemove;


typedef TknU32 NhuUL_TimingAdvance;

typedef struct NhuUL_TimingAdvanceCntrlenabled
{
 TknPres pres;
 NhuUL_TimingAdvance ul_TimingAdvance;
 NhuActvnTime activationTime;
} NhuUL_TimingAdvanceCntrlenabled;

typedef struct NhuUL_TimingAdvanceCntrl
{
 TknU8 choice;
 union {
  NhuUL_TimingAdvanceCntrlenabled enabled;
 } val;
} NhuUL_TimingAdvanceCntrl;


typedef TknU8 NhuUL_DPCH_InfomodeSpecificInfofddtfci_Existence;

typedef struct NhuUL_DPCH_InfomodeSpecificInfofdd
{
 TknPres pres;
 NhuScramblingCodeTyp scramblingCodeTyp;
 NhuUL_ScramblingCode scramblingCode;
 NhuNumberOfDPDCH numberOfDPDCH;
 NhuSpreadingFactor spreadingFactor;
 NhuUL_DPCH_InfomodeSpecificInfofddtfci_Existence tfci_Existence;
 NhuNumberOfFBI_Bits numberOfFBI_Bits;
 NhuPuncturingLimit puncturingLimit;
} NhuUL_DPCH_InfomodeSpecificInfofdd;

typedef struct NhuUL_DPCH_InfomodeSpecificInfotdd
{
 TknPres pres;
 NhuUL_TimingAdvanceCntrl ul_TimingAdvance;
 NhuUL_CCTrCHLst ul_CCTrCHLst;
 NhuUL_CCTrCHLstToRemove ul_CCTrCHLstToRemove;
} NhuUL_DPCH_InfomodeSpecificInfotdd;

typedef struct NhuUL_DPCH_InfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_DPCH_InfomodeSpecificInfofdd fdd;
  NhuUL_DPCH_InfomodeSpecificInfotdd tdd;
 } val;
} NhuUL_DPCH_InfomodeSpecificInfo;

typedef struct NhuUL_DPCH_Info
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfo ul_DPCH_PowerCntrlInfo;
 NhuUL_DPCH_InfomodeSpecificInfo modeSpecificInfo;
} NhuUL_DPCH_Info;

typedef struct NhuUL_ChannelRequirement
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info ul_DPCH_Info;
  NhuCPCH_SetInfo dummy;
 } val;
} NhuUL_ChannelRequirement;


typedef TknU32 NhuUL_SynchronisationParams_r4stepSize;


typedef TknU32 NhuUL_SynchronisationParams_r4frequency;

typedef struct NhuUL_SynchronisationParams_r4
{
 TknPres pres;
 NhuUL_SynchronisationParams_r4stepSize stepSize;
 NhuUL_SynchronisationParams_r4frequency frequency;
} NhuUL_SynchronisationParams_r4;

typedef struct NhuUL_TimingAdvanceCntrl_r4enabledtddOptiontdd384
{
 TknPres pres;
 NhuUL_TimingAdvance ul_TimingAdvance;
 NhuActvnTime activationTime;
} NhuUL_TimingAdvanceCntrl_r4enabledtddOptiontdd384;

typedef struct NhuUL_TimingAdvanceCntrl_r4enabledtddOptiontdd128
{
 TknPres pres;
 NhuUL_SynchronisationParams_r4 ul_SynchronisationParams;
 NhuSynchronisationParams_r4 synchronisationParams;
} NhuUL_TimingAdvanceCntrl_r4enabledtddOptiontdd128;

typedef struct NhuUL_TimingAdvanceCntrl_r4enabledtddOption
{
 TknU8 choice;
 union {
  NhuUL_TimingAdvanceCntrl_r4enabledtddOptiontdd384 tdd384;
  NhuUL_TimingAdvanceCntrl_r4enabledtddOptiontdd128 tdd128;
 } val;
} NhuUL_TimingAdvanceCntrl_r4enabledtddOption;

typedef struct NhuUL_TimingAdvanceCntrl_r4enabled
{
 TknPres pres;
 NhuUL_TimingAdvanceCntrl_r4enabledtddOption tddOption;
} NhuUL_TimingAdvanceCntrl_r4enabled;

typedef struct NhuUL_TimingAdvanceCntrl_r4
{
 TknU8 choice;
 union {
  NhuUL_TimingAdvanceCntrl_r4enabled enabled;
 } val;
} NhuUL_TimingAdvanceCntrl_r4;


typedef TknU8 NhuUL_DPCH_Info_r4modeSpecificInfofddtfci_Existence;

typedef struct NhuUL_DPCH_Info_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuScramblingCodeTyp scramblingCodeTyp;
 NhuUL_ScramblingCode scramblingCode;
 NhuNumberOfDPDCH numberOfDPDCH;
 NhuSpreadingFactor spreadingFactor;
 NhuUL_DPCH_Info_r4modeSpecificInfofddtfci_Existence tfci_Existence;
 NhuNumberOfFBI_Bits numberOfFBI_Bits;
 NhuPuncturingLimit puncturingLimit;
} NhuUL_DPCH_Info_r4modeSpecificInfofdd;

typedef struct NhuUL_DPCH_Info_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuUL_TimingAdvanceCntrl_r4 ul_TimingAdvance;
 NhuUL_CCTrCHLst_r4 ul_CCTrCHLst;
 NhuUL_CCTrCHLstToRemove ul_CCTrCHLstToRemove;
} NhuUL_DPCH_Info_r4modeSpecificInfotdd;

typedef struct NhuUL_DPCH_Info_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r4modeSpecificInfofdd fdd;
  NhuUL_DPCH_Info_r4modeSpecificInfotdd tdd;
 } val;
} NhuUL_DPCH_Info_r4modeSpecificInfo;

typedef struct NhuUL_DPCH_Info_r4
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfo_r4 ul_DPCH_PowerCntrlInfo;
 NhuUL_DPCH_Info_r4modeSpecificInfo modeSpecificInfo;
} NhuUL_DPCH_Info_r4;

typedef struct NhuUL_ChannelRequirement_r4
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r4 ul_DPCH_Info;
  NhuCPCH_SetInfo dummy;
 } val;
} NhuUL_ChannelRequirement_r4;


typedef TknU8 NhuUL_DPCH_Info_r5modeSpecificInfofddtfci_Existence;

typedef struct NhuUL_DPCH_Info_r5modeSpecificInfofdd
{
 TknPres pres;
 NhuScramblingCodeTyp scramblingCodeTyp;
 NhuUL_ScramblingCode scramblingCode;
 NhuNumberOfDPDCH numberOfDPDCH;
 NhuSpreadingFactor spreadingFactor;
 NhuUL_DPCH_Info_r5modeSpecificInfofddtfci_Existence tfci_Existence;
 NhuNumberOfFBI_Bits numberOfFBI_Bits;
 NhuPuncturingLimit puncturingLimit;
} NhuUL_DPCH_Info_r5modeSpecificInfofdd;

typedef struct NhuUL_DPCH_Info_r5modeSpecificInfotdd
{
 TknPres pres;
 NhuUL_TimingAdvanceCntrl_r4 ul_TimingAdvance;
 NhuUL_CCTrCHLst_r4 ul_CCTrCHLst;
 NhuUL_CCTrCHLstToRemove ul_CCTrCHLstToRemove;
} NhuUL_DPCH_Info_r5modeSpecificInfotdd;

typedef struct NhuUL_DPCH_Info_r5modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r5modeSpecificInfofdd fdd;
  NhuUL_DPCH_Info_r5modeSpecificInfotdd tdd;
 } val;
} NhuUL_DPCH_Info_r5modeSpecificInfo;

typedef struct NhuUL_DPCH_Info_r5
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfo_r5 ul_DPCH_PowerCntrlInfo;
 NhuUL_DPCH_Info_r5modeSpecificInfo modeSpecificInfo;
} NhuUL_DPCH_Info_r5;

typedef struct NhuUL_ChannelRequirement_r5
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r5 ul_DPCH_Info;
  NhuCPCH_SetInfo dummy;
 } val;
} NhuUL_ChannelRequirement_r5;

typedef struct NhuUL_ChannelRequirementWithCPCH_SetID
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info ul_DPCH_Info;
  NhuCPCH_SetInfo dummy1;
  NhuCPCH_SetID dummy2;
 } val;
} NhuUL_ChannelRequirementWithCPCH_SetID;

typedef struct NhuUL_ChannelRequirementWithCPCH_SetID_r4
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r4 ul_DPCH_Info;
  NhuCPCH_SetInfo dummy1;
  NhuCPCH_SetID dummy2;
 } val;
} NhuUL_ChannelRequirementWithCPCH_SetID_r4;

typedef struct NhuUL_ChannelRequirementWithCPCH_SetID_r5
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r5 ul_DPCH_Info;
  NhuCPCH_SetInfo dummy1;
  NhuCPCH_SetID dummy2;
 } val;
} NhuUL_ChannelRequirementWithCPCH_SetID_r5;


typedef TknU32 NhuS_DPCCH_DPCCH_PowerOffset;

typedef struct NhuS_DPCCH_Info
{
 TknPres pres;
 NhuS_DPCCH_DPCCH_PowerOffset s_DPCCH_DPCCH_PowerOffset;
} NhuS_DPCCH_Info;


typedef enum enumNhuUL_CLTD_InfoFDDconfigurationInfonewCfginitial_CLTD_ActvnState
{
 NhuUL_CLTD_InfoFDDconfigurationInfonewCfginitial_CLTD_ActvnStatefirst_stateEnum,
 NhuUL_CLTD_InfoFDDconfigurationInfonewCfginitial_CLTD_ActvnStatefourth_stateEnum
} EnumNhuUL_CLTD_InfoFDDconfigurationInfonewCfginitial_CLTD_ActvnState;
typedef TknU32 NhuUL_CLTD_InfoFDDconfigurationInfonewCfginitial_CLTD_ActvnState;

typedef struct NhuUL_CLTD_InfoFDDconfigurationInfonewCfg
{
 TknPres pres;
 NhuS_DPCCH_Info s_dpcch_Info;
 NhuF_TPICH_Info f_tpich_Info;
 NhuUL_CLTD_InfoFDDconfigurationInfonewCfginitial_CLTD_ActvnState initial_CLTD_ActvnState;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUL_CLTD_InfoFDDconfigurationInfonewCfg;

typedef struct NhuUL_CLTD_InfoFDDconfigurationInfo
{
 TknU8 choice;
 union {
  NhuUL_CLTD_InfoFDDconfigurationInfonewCfg newCfg;
 } val;
} NhuUL_CLTD_InfoFDDconfigurationInfo;

typedef struct NhuUL_CLTD_InfoFDD
{
 TknU8 choice;
 union {
  NhuUL_CLTD_InfoFDDconfigurationInfo configurationInfo;
 } val;
} NhuUL_CLTD_InfoFDD;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r6fdd
{
 TknPres pres;
 NhuDPCCH_PowerOffset dpcch_PowerOffset;
 NhuPC_Preamble pc_Preamble;
 NhuSRB_delay sRB_delay;
 NhuPowerCntrlAlgorithm powerCntrlAlgorithm;
 NhuDeltaACK deltaACK;
 NhuDeltaNACK deltaNACK;
 NhuACK_NACK_repetitionFactor ack_NACK_repetition_factor;
 NhuHARQ_Preamble_Mode harq_Preamble_Mode;
} NhuUL_DPCH_PowerCntrlInfo_r6fdd;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384
{
 TknPres pres;
 NhuIvdualTS_InterferenceLst individualTS_InterferenceLst;
 NhuConstantValue dpch_ConstantValue;
} NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128
{
 TknPres pres;
 NhuBEACON_PL_Est beaconPLEst;
 NhuTPC_StepSizeTDD tpc_StepSize;
} NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalledtddOption
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384 tdd384;
  NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128 tdd128;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalledtddOption;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalled
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalledtddOption tddOption;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
} NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalled;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_Signalling
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalled individuallySignalled;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_Signalling;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r6tdd
{
 TknPres pres;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_Signalling ul_OL_PC_Signalling;
} NhuUL_DPCH_PowerCntrlInfo_r6tdd;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r6
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r6fdd fdd;
  NhuUL_DPCH_PowerCntrlInfo_r6tdd tdd;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r6;


typedef TknU8 NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencepresenttfci_Existence;

typedef struct NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencepresent
{
 TknPres pres;
 NhuNumberOfDPDCH numberOfDPDCH;
 NhuSpreadingFactor spreadingFactor;
 NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencepresenttfci_Existence tfci_Existence;
 NhuNumberOfFBI_Bits numberOfFBI_Bits;
 NhuPuncturingLimit puncturingLimit;
} NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencepresent;


typedef TknU8 NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencenotPresenttfci_Existence;

typedef struct NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencenotPresent
{
 TknPres pres;
 NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencenotPresenttfci_Existence tfci_Existence;
 NhuNumberOfFBI_Bits numberOfFBI_Bits;
} NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencenotPresent;

typedef struct NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresence
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencepresent present;
  NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencenotPresent notPresent;
 } val;
} NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresence;

typedef struct NhuUL_DPCH_Info_r6modeSpecificInfofdd
{
 TknPres pres;
 NhuScramblingCodeTyp scramblingCodeTyp;
 NhuUL_ScramblingCode scramblingCode;
 NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresence dpdchPresence;
} NhuUL_DPCH_Info_r6modeSpecificInfofdd;

typedef struct NhuUL_DPCH_Info_r6modeSpecificInfotdd
{
 TknPres pres;
 NhuUL_TimingAdvanceCntrl_r4 ul_TimingAdvance;
 NhuUL_CCTrCHLst_r4 ul_CCTrCHLst;
 NhuUL_CCTrCHLstToRemove ul_CCTrCHLstToRemove;
} NhuUL_DPCH_Info_r6modeSpecificInfotdd;

typedef struct NhuUL_DPCH_Info_r6modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r6modeSpecificInfofdd fdd;
  NhuUL_DPCH_Info_r6modeSpecificInfotdd tdd;
 } val;
} NhuUL_DPCH_Info_r6modeSpecificInfo;

typedef struct NhuUL_DPCH_Info_r6
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfo_r6 ul_DPCH_PowerCntrlInfo;
 NhuUL_DPCH_Info_r6modeSpecificInfo modeSpecificInfo;
} NhuUL_DPCH_Info_r6;

typedef struct NhuUL_TimingAdvanceCntrl_r7enabledtddOptiontdd384
{
 TknPres pres;
 NhuUL_TimingAdvance ul_TimingAdvance;
 NhuEXT_UL_TimingAdvance ext_UL_TimingAdvance;
 NhuActvnTime activationTime;
} NhuUL_TimingAdvanceCntrl_r7enabledtddOptiontdd384;

typedef struct NhuUL_TimingAdvanceCntrl_r7enabledtddOptiontdd768
{
 TknPres pres;
 NhuEXT_UL_TimingAdvance ext_UL_TimingAdvance;
 NhuActvnTime activationTime;
} NhuUL_TimingAdvanceCntrl_r7enabledtddOptiontdd768;

typedef struct NhuUL_TimingAdvanceCntrl_r7enabledtddOptiontdd128
{
 TknPres pres;
 NhuUL_SynchronisationParams_r4 ul_SynchronisationParams;
 NhuSynchronisationParams_r4 synchronisationParams;
} NhuUL_TimingAdvanceCntrl_r7enabledtddOptiontdd128;

typedef struct NhuUL_TimingAdvanceCntrl_r7enabledtddOption
{
 TknU8 choice;
 union {
  NhuUL_TimingAdvanceCntrl_r7enabledtddOptiontdd384 tdd384;
  NhuUL_TimingAdvanceCntrl_r7enabledtddOptiontdd768 tdd768;
  NhuUL_TimingAdvanceCntrl_r7enabledtddOptiontdd128 tdd128;
 } val;
} NhuUL_TimingAdvanceCntrl_r7enabledtddOption;

typedef struct NhuUL_TimingAdvanceCntrl_r7enabled
{
 TknPres pres;
 NhuUL_TimingAdvanceCntrl_r7enabledtddOption tddOption;
} NhuUL_TimingAdvanceCntrl_r7enabled;

typedef struct NhuUL_TimingAdvanceCntrl_r7
{
 TknU8 choice;
 union {
  NhuUL_TimingAdvanceCntrl_r7enabled enabled;
 } val;
} NhuUL_TimingAdvanceCntrl_r7;


typedef TknU8 NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencepresenttfci_Existence;

typedef struct NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencepresent
{
 TknPres pres;
 NhuNumberOfDPDCH numberOfDPDCH;
 NhuSpreadingFactor spreadingFactor;
 NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencepresenttfci_Existence tfci_Existence;
 NhuNumberOfFBI_Bits numberOfFBI_Bits;
 NhuNumberOfTPC_Bits numberOfTPC_Bits;
 NhuPuncturingLimit puncturingLimit;
} NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencepresent;


typedef TknU8 NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencenotPresenttfci_Existence;

typedef struct NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencenotPresent
{
 TknPres pres;
 NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencenotPresenttfci_Existence tfci_Existence;
 NhuNumberOfFBI_Bits numberOfFBI_Bits;
 NhuNumberOfTPC_Bits numberOfTPC_Bits;
} NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencenotPresent;

typedef struct NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresence
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencepresent present;
  NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencenotPresent notPresent;
 } val;
} NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresence;

typedef struct NhuUL_DPCH_Info_r7modeSpecificInfofdd
{
 TknPres pres;
 NhuScramblingCodeTyp scramblingCodeTyp;
 NhuUL_ScramblingCode scramblingCode;
 NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresence dpdchPresence;
} NhuUL_DPCH_Info_r7modeSpecificInfofdd;

typedef struct NhuUL_DPCH_Info_r7modeSpecificInfotdd
{
 TknPres pres;
 NhuUL_TimingAdvanceCntrl_r7 ul_TimingAdvance;
 NhuUL_CCTrCHLst_r7 ul_CCTrCHLst;
 NhuUL_CCTrCHLstToRemove ul_CCTrCHLstToRemove;
} NhuUL_DPCH_Info_r7modeSpecificInfotdd;

typedef struct NhuUL_DPCH_Info_r7modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r7modeSpecificInfofdd fdd;
  NhuUL_DPCH_Info_r7modeSpecificInfotdd tdd;
 } val;
} NhuUL_DPCH_Info_r7modeSpecificInfo;

typedef struct NhuUL_DPCH_Info_r7
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfo_r7 ul_DPCH_PowerCntrlInfo;
 NhuUL_DPCH_Info_r7modeSpecificInfo modeSpecificInfo;
} NhuUL_DPCH_Info_r7;

typedef struct NhuUL_DPCH_PowerCntrlInfoPostFDD
{
 TknPres pres;
 NhuDPCCH_PowerOffset2 dpcch_PowerOffset;
 NhuPC_Preamble pc_Preamble;
 NhuSRB_delay sRB_delay;
} NhuUL_DPCH_PowerCntrlInfoPostFDD;

typedef struct NhuUL_DPCH_InfoPostFDD
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfoPostFDD ul_DPCH_PowerCntrlInfo;
 NhuScramblingCodeTyp scramblingCodeTyp;
 NhuReducedScramblingCodeNumber reducedScramblingCodeNumber;
 NhuSpreadingFactor spreadingFactor;
} NhuUL_DPCH_InfoPostFDD;

typedef struct NhuUL_DPCH_PowerCntrlInfoPostTDD
{
 TknPres pres;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuTDD_UL_Interference ul_TimeslotInterference;
} NhuUL_DPCH_PowerCntrlInfoPostTDD;

typedef struct NhuUL_DPCH_InfoPostTDD
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfoPostTDD ul_DPCH_PowerCntrlInfo;
 NhuUL_TimingAdvanceCntrl ul_TimingAdvance;
 NhuUlnkTimeslotsCodes ul_CCTrCH_TimeslotsCodes;
} NhuUL_DPCH_InfoPostTDD;

typedef struct NhuUL_DPCH_PowerCntrlInfoPostTDD_LCR_r4
{
 TknPres pres;
 NhuUL_TgtSIR ul_TgtSIR;
} NhuUL_DPCH_PowerCntrlInfoPostTDD_LCR_r4;

typedef struct NhuUL_TimingAdvanceCntrl_LCR_r4enabled
{
 TknPres pres;
 NhuUL_SynchronisationParams_r4 ul_SynchronisationParams;
 NhuSynchronisationParams_r4 synchronisationParams;
} NhuUL_TimingAdvanceCntrl_LCR_r4enabled;

typedef struct NhuUL_TimingAdvanceCntrl_LCR_r4
{
 TknU8 choice;
 union {
  NhuUL_TimingAdvanceCntrl_LCR_r4enabled enabled;
 } val;
} NhuUL_TimingAdvanceCntrl_LCR_r4;

typedef struct NhuUL_DPCH_InfoPostTDD_LCR_r4
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfoPostTDD_LCR_r4 ul_DPCH_PowerCntrlInfo;
 NhuUL_TimingAdvanceCntrl_LCR_r4 ul_TimingAdvance;
 NhuUlnkTimeslotsCodes_LCR_r4 ul_CCTrCH_TimeslotsCodes;
} NhuUL_DPCH_InfoPostTDD_LCR_r4;

typedef struct NhuUL_DPCHpowerCntrlInfoForCmnEDCH
{
 TknPres pres;
 NhuPowerCntrlAlgorithm powerCntrlAlgorithm;
 NhuDeltaACK deltaACK;
 NhuDeltaNACK deltaNACK;
 NhuACK_NACK_repetitionFactor ack_NACK_repetition_factor;
} NhuUL_DPCHpowerCntrlInfoForCmnEDCH;

typedef struct NhuUL_MulticarrierEDCH_Deletelist_TDD128
{
 TknU16 noComp;
 NhuUARFCN *member;
}NhuUL_MulticarrierEDCH_Deletelist_TDD128;


typedef TknS32 NhuUL_Interference;


typedef TknU32 NhuSatID;


typedef enum enumNhuDopplerUncertainty
{
 NhuDopplerUncertaintyhz12_5Enum,
 NhuDopplerUncertaintyhz25Enum,
 NhuDopplerUncertaintyhz50Enum,
 NhuDopplerUncertaintyhz100Enum,
 NhuDopplerUncertaintyhz200Enum,
 NhuDopplerUncertaintyspare3Enum,
 NhuDopplerUncertaintyspare2Enum,
 NhuDopplerUncertaintyspare1Enum
} EnumNhuDopplerUncertainty;
typedef TknU32 NhuDopplerUncertainty;


typedef TknS32 NhuExtraDopplerInfodoppler1stOrder;

typedef struct NhuExtraDopplerInfo
{
 TknPres pres;
 NhuExtraDopplerInfodoppler1stOrder doppler1stOrder;
 NhuDopplerUncertainty dopplerUncertainty;
} NhuExtraDopplerInfo;


typedef enum enumNhuCodePhaseSearchWindow
{
 NhuCodePhaseSearchWindoww1023Enum,
 NhuCodePhaseSearchWindoww1Enum,
 NhuCodePhaseSearchWindoww2Enum,
 NhuCodePhaseSearchWindoww3Enum,
 NhuCodePhaseSearchWindoww4Enum,
 NhuCodePhaseSearchWindoww6Enum,
 NhuCodePhaseSearchWindoww8Enum,
 NhuCodePhaseSearchWindoww12Enum,
 NhuCodePhaseSearchWindoww16Enum,
 NhuCodePhaseSearchWindoww24Enum,
 NhuCodePhaseSearchWindoww32Enum,
 NhuCodePhaseSearchWindoww48Enum,
 NhuCodePhaseSearchWindoww64Enum,
 NhuCodePhaseSearchWindoww96Enum,
 NhuCodePhaseSearchWindoww128Enum,
 NhuCodePhaseSearchWindoww192Enum
} EnumNhuCodePhaseSearchWindow;
typedef TknU32 NhuCodePhaseSearchWindow;


typedef TknU32 NhuAzimuthAndElevationazimuth;


typedef TknU32 NhuAzimuthAndElevationelevation;

typedef struct NhuAzimuthAndElevation
{
 TknPres pres;
 NhuAzimuthAndElevationazimuth azimuth;
 NhuAzimuthAndElevationelevation elevation;
} NhuAzimuthAndElevation;


typedef TknS32 NhuAcquisitionSatInfodoppler0thOrder;


typedef TknU32 NhuAcquisitionSatInfocodePhase;


typedef TknU32 NhuAcquisitionSatInfointegerCodePhase;


typedef TknU32 NhuAcquisitionSatInfogps_BitNumber;

typedef struct NhuAcquisitionSatInfo
{
 TknPres pres;
 NhuSatID satID;
 NhuAcquisitionSatInfodoppler0thOrder doppler0thOrder;
 NhuExtraDopplerInfo extraDopplerInfo;
 NhuAcquisitionSatInfocodePhase codePhase;
 NhuAcquisitionSatInfointegerCodePhase integerCodePhase;
 NhuAcquisitionSatInfogps_BitNumber gps_BitNumber;
 NhuCodePhaseSearchWindow codePhaseSearchWindow;
 NhuAzimuthAndElevation azimuthAndElevation;
} NhuAcquisitionSatInfo;


typedef TknU32 NhuAzimuthAndElevation_va40extazimuthLSB;


typedef TknU32 NhuAzimuthAndElevation_va40extelevationLSB;

typedef struct NhuAzimuthAndElevation_va40ext
{
 TknPres pres;
 NhuAzimuthAndElevation_va40extazimuthLSB azimuthLSB;
 NhuAzimuthAndElevation_va40extelevationLSB elevationLSB;
} NhuAzimuthAndElevation_va40ext;

typedef struct NhuAcquisitionSatInfo_va40ext
{
 TknPres pres;
 NhuAzimuthAndElevation_va40ext azimuthAndElevation;
} NhuAcquisitionSatInfo_va40ext;


typedef TknU32 NhuAzimuthAndElevation_r10azimuth;


typedef TknU32 NhuAzimuthAndElevation_r10elevation;


typedef TknU32 NhuAzimuthAndElevation_r10azimuthLSB;


typedef TknU32 NhuAzimuthAndElevation_r10elevationLSB;

typedef struct NhuAzimuthAndElevation_r10
{
 TknPres pres;
 NhuAzimuthAndElevation_r10azimuth azimuth;
 NhuAzimuthAndElevation_r10elevation elevation;
 NhuAzimuthAndElevation_r10azimuthLSB azimuthLSB;
 NhuAzimuthAndElevation_r10elevationLSB elevationLSB;
} NhuAzimuthAndElevation_r10;


typedef TknS32 NhuAcquisitionSatInfo_r10doppler0thOrder;


typedef TknU32 NhuAcquisitionSatInfo_r10codePhase;


typedef TknU32 NhuAcquisitionSatInfo_r10integerCodePhase;


typedef TknU32 NhuAcquisitionSatInfo_r10gps_BitNumber;

typedef struct NhuAcquisitionSatInfo_r10
{
 TknPres pres;
 NhuSatID satID;
 NhuAcquisitionSatInfo_r10doppler0thOrder doppler0thOrder;
 NhuExtraDopplerInfo extraDopplerInfo;
 NhuAcquisitionSatInfo_r10codePhase codePhase;
 NhuAcquisitionSatInfo_r10integerCodePhase integerCodePhase;
 NhuAcquisitionSatInfo_r10gps_BitNumber gps_BitNumber;
 NhuCodePhaseSearchWindow codePhaseSearchWindow;
 NhuAzimuthAndElevation_r10 azimuthAndElevation;
} NhuAcquisitionSatInfo_r10;

typedef struct NhuAcquisitionSatInfoLst
{
 TknU16 noComp;
 NhuAcquisitionSatInfo *member;
}NhuAcquisitionSatInfoLst;

typedef struct NhuAcquisitionSatInfoLst_va40ext
{
 TknU16 noComp;
 NhuAcquisitionSatInfo_va40ext *member;
}NhuAcquisitionSatInfoLst_va40ext;

typedef struct NhuAcquisitionSatInfoLst_r10
{
 TknU16 noComp;
 NhuAcquisitionSatInfo_r10 *member;
}NhuAcquisitionSatInfoLst_r10;


typedef TknU32 NhuMeasurementIdentity;

typedef struct NhuAdditionalMeasurementID_Lst
{
 TknU16 noComp;
 NhuMeasurementIdentity *member;
}NhuAdditionalMeasurementID_Lst;


typedef TknU32 NhuMeasurementIdentity_r9;

typedef struct NhuAdditionalMeasurementID_Lst_r9
{
 TknU16 noComp;
 NhuMeasurementIdentity_r9 *member;
}NhuAdditionalMeasurementID_Lst_r9;


typedef TknU32 NhuAlmanacSatInfodataID;


typedef TknStrBSXL NhuAlmanacSatInfoe;

typedef TknStrBSXL NhuAlmanacSatInfot_oa;

typedef TknStrBSXL NhuAlmanacSatInfodeltaI;

typedef TknStrBSXL NhuAlmanacSatInfoomegaDot;

typedef TknStrBSXL NhuAlmanacSatInfosatHealth;

typedef TknStrBSXL NhuAlmanacSatInfoa_Sqrt;

typedef TknStrBSXL NhuAlmanacSatInfoomega0;

typedef TknStrBSXL NhuAlmanacSatInfom0;

typedef TknStrBSXL NhuAlmanacSatInfoomega;

typedef TknStrBSXL NhuAlmanacSatInfoaf0;

typedef TknStrBSXL NhuAlmanacSatInfoaf1;
typedef struct NhuAlmanacSatInfo
{
 TknPres pres;
 NhuAlmanacSatInfodataID dataID;
 NhuSatID satID;
 NhuAlmanacSatInfoe e;
 NhuAlmanacSatInfot_oa t_oa;
 NhuAlmanacSatInfodeltaI deltaI;
 NhuAlmanacSatInfoomegaDot omegaDot;
 NhuAlmanacSatInfosatHealth satHealth;
 NhuAlmanacSatInfoa_Sqrt a_Sqrt;
 NhuAlmanacSatInfoomega0 omega0;
 NhuAlmanacSatInfom0 m0;
 NhuAlmanacSatInfoomega omega;
 NhuAlmanacSatInfoaf0 af0;
 NhuAlmanacSatInfoaf1 af1;
} NhuAlmanacSatInfo;

typedef struct NhuAlmanacSatInfoLst
{
 TknU16 noComp;
 NhuAlmanacSatInfo *member;
}NhuAlmanacSatInfoLst;


typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmDataID;

typedef TknU32 NhuGANSS_SAT_Info_Almanac_SBASecefsvID;


typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmHealth;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmXg;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmYg;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmZg;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmXgdot;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmYgDot;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmZgDot;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmTo;
typedef struct NhuGANSS_SAT_Info_Almanac_SBASecef
{
 TknPres pres;
 NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmDataID sbasAlmDataID;
 NhuGANSS_SAT_Info_Almanac_SBASecefsvID svID;
 NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmHealth sbasAlmHealth;
 NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmXg sbasAlmXg;
 NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmYg sbasAlmYg;
 NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmZg sbasAlmZg;
 NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmXgdot sbasAlmXgdot;
 NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmYgDot sbasAlmYgDot;
 NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmZgDot sbasAlmZgDot;
 NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmTo sbasAlmTo;
} NhuGANSS_SAT_Info_Almanac_SBASecef;

typedef struct NhuGANSS_SAT_Info_Almanac_SBASecefLst
{
 TknU16 noComp;
 NhuGANSS_SAT_Info_Almanac_SBASecef *member;
}NhuGANSS_SAT_Info_Almanac_SBASecefLst;

typedef struct NhuALM_ECEFsbasAlmanacSet
{
 TknPres pres;
 NhuGANSS_SAT_Info_Almanac_SBASecefLst sat_info_SBASecefLst;
} NhuALM_ECEFsbasAlmanacSet;


typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmNA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmnA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmHA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmLambdaA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmTlambdaA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmDeltaIA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAkmDeltaTA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmDeltaTdotA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmEpsilonA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmOmegaA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmTauA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmCA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmMA;
typedef struct NhuGANSS_SAT_Info_Almanac_GLOkp
{
 TknPres pres;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmNA gloAlmNA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmnA gloAlmnA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmHA gloAlmHA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmLambdaA gloAlmLambdaA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmTlambdaA gloAlmTlambdaA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmDeltaIA gloAlmDeltaIA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAkmDeltaTA gloAkmDeltaTA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmDeltaTdotA gloAlmDeltaTdotA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmEpsilonA gloAlmEpsilonA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmOmegaA gloAlmOmegaA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmTauA gloAlmTauA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmCA gloAlmCA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmMA gloAlmMA;
} NhuGANSS_SAT_Info_Almanac_GLOkp;

typedef struct NhuGANSS_SAT_Info_Almanac_GLOkpLst
{
 TknU16 noComp;
 NhuGANSS_SAT_Info_Almanac_GLOkp *member;
}NhuGANSS_SAT_Info_Almanac_GLOkpLst;

typedef struct NhuALM_GlonassAlmanacSet
{
 TknPres pres;
 NhuGANSS_SAT_Info_Almanac_GLOkpLst sat_info_GLOkpLst;
} NhuALM_GlonassAlmanacSet;


typedef TknU32 NhuGANSS_SAT_Info_Almanac_KpsvId;


typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_alm_e;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_delta_I_alm;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_omegadot_alm;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_svhealth_alm;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_delta_a_sqrt_alm;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_omegazero_alm;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_m_zero_alm;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_omega_alm;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_af_zero_alm;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_af_one_alm;
typedef struct NhuGANSS_SAT_Info_Almanac_Kp
{
 TknPres pres;
 NhuGANSS_SAT_Info_Almanac_KpsvId svId;
 NhuGANSS_SAT_Info_Almanac_Kpganss_alm_e ganss_alm_e;
 NhuGANSS_SAT_Info_Almanac_Kpganss_delta_I_alm ganss_delta_I_alm;
 NhuGANSS_SAT_Info_Almanac_Kpganss_omegadot_alm ganss_omegadot_alm;
 NhuGANSS_SAT_Info_Almanac_Kpganss_svhealth_alm ganss_svhealth_alm;
 NhuGANSS_SAT_Info_Almanac_Kpganss_delta_a_sqrt_alm ganss_delta_a_sqrt_alm;
 NhuGANSS_SAT_Info_Almanac_Kpganss_omegazero_alm ganss_omegazero_alm;
 NhuGANSS_SAT_Info_Almanac_Kpganss_m_zero_alm ganss_m_zero_alm;
 NhuGANSS_SAT_Info_Almanac_Kpganss_omega_alm ganss_omega_alm;
 NhuGANSS_SAT_Info_Almanac_Kpganss_af_zero_alm ganss_af_zero_alm;
 NhuGANSS_SAT_Info_Almanac_Kpganss_af_one_alm ganss_af_one_alm;
} NhuGANSS_SAT_Info_Almanac_Kp;

typedef struct NhuGANSS_SAT_Info_Almanac_KpLst
{
 TknU16 noComp;
 NhuGANSS_SAT_Info_Almanac_Kp *member;
}NhuGANSS_SAT_Info_Almanac_KpLst;


typedef TknU32 NhuALM_keplerianParamst_oa;


typedef TknU32 NhuALM_keplerianParamsiod_a;

typedef struct NhuALM_keplerianParams
{
 TknPres pres;
 NhuALM_keplerianParamst_oa t_oa;
 NhuALM_keplerianParamsiod_a iod_a;
 NhuGANSS_SAT_Info_Almanac_KpLst sat_info_kpLst;
} NhuALM_keplerianParams;


typedef TknU32 NhuGANSS_SAT_Info_Almanac_MIDIkpsvID;


typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmE;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmDeltaI;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmOmegaDot;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmSqrtA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmOmega0;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmOmega;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmMo;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmaf0;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmaf1;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmL1Health;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmL2Health;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmL5Health;
typedef struct NhuGANSS_SAT_Info_Almanac_MIDIkp
{
 TknPres pres;
 NhuGANSS_SAT_Info_Almanac_MIDIkpsvID svID;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmE midiAlmE;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmDeltaI midiAlmDeltaI;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmOmegaDot midiAlmOmegaDot;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmSqrtA midiAlmSqrtA;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmOmega0 midiAlmOmega0;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmOmega midiAlmOmega;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmMo midiAlmMo;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmaf0 midiAlmaf0;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmaf1 midiAlmaf1;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmL1Health midiAlmL1Health;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmL2Health midiAlmL2Health;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmL5Health midiAlmL5Health;
} NhuGANSS_SAT_Info_Almanac_MIDIkp;

typedef struct NhuGANSS_SAT_Info_Almanac_MIDIkpLst
{
 TknU16 noComp;
 NhuGANSS_SAT_Info_Almanac_MIDIkp *member;
}NhuGANSS_SAT_Info_Almanac_MIDIkpLst;


typedef TknU32 NhuALM_MidiAlmanacSett_oa;

typedef struct NhuALM_MidiAlmanacSet
{
 TknPres pres;
 NhuALM_MidiAlmanacSett_oa t_oa;
 NhuGANSS_SAT_Info_Almanac_MIDIkpLst sat_info_MIDIkpLst;
} NhuALM_MidiAlmanacSet;


typedef TknU32 NhuGANSS_SAT_Info_Almanac_NAVkpsvID;


typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmE;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmDeltaI;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmOMEGADOT;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmSVHealth;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmSqrtA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmOMEGAo;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmOmega;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmMo;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmaf0;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmaf1;
typedef struct NhuGANSS_SAT_Info_Almanac_NAVkp
{
 TknPres pres;
 NhuGANSS_SAT_Info_Almanac_NAVkpsvID svID;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmE navAlmE;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmDeltaI navAlmDeltaI;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmOMEGADOT navAlmOMEGADOT;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmSVHealth navAlmSVHealth;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmSqrtA navAlmSqrtA;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmOMEGAo navAlmOMEGAo;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmOmega navAlmOmega;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmMo navAlmMo;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmaf0 navAlmaf0;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmaf1 navAlmaf1;
} NhuGANSS_SAT_Info_Almanac_NAVkp;

typedef struct NhuGANSS_SAT_Info_Almanac_NAVkpLst
{
 TknU16 noComp;
 NhuGANSS_SAT_Info_Almanac_NAVkp *member;
}NhuGANSS_SAT_Info_Almanac_NAVkpLst;


typedef TknU32 NhuALM_NAVKeplerianSett_oa;

typedef struct NhuALM_NAVKeplerianSet
{
 TknPres pres;
 NhuALM_NAVKeplerianSett_oa t_oa;
 NhuGANSS_SAT_Info_Almanac_NAVkpLst sat_info_NAVkpLst;
} NhuALM_NAVKeplerianSet;


typedef TknU32 NhuGANSS_SAT_Info_Almanac_REDkpsvID;


typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_REDkpredAlmDeltaA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_REDkpredAlmOmega0;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_REDkpredAlmPhi0;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_REDkpredAlmL1Health;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_REDkpredAlmL2Health;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_REDkpredAlmL5Health;
typedef struct NhuGANSS_SAT_Info_Almanac_REDkp
{
 TknPres pres;
 NhuGANSS_SAT_Info_Almanac_REDkpsvID svID;
 NhuGANSS_SAT_Info_Almanac_REDkpredAlmDeltaA redAlmDeltaA;
 NhuGANSS_SAT_Info_Almanac_REDkpredAlmOmega0 redAlmOmega0;
 NhuGANSS_SAT_Info_Almanac_REDkpredAlmPhi0 redAlmPhi0;
 NhuGANSS_SAT_Info_Almanac_REDkpredAlmL1Health redAlmL1Health;
 NhuGANSS_SAT_Info_Almanac_REDkpredAlmL2Health redAlmL2Health;
 NhuGANSS_SAT_Info_Almanac_REDkpredAlmL5Health redAlmL5Health;
} NhuGANSS_SAT_Info_Almanac_REDkp;

typedef struct NhuGANSS_SAT_Info_Almanac_REDkpLst
{
 TknU16 noComp;
 NhuGANSS_SAT_Info_Almanac_REDkp *member;
}NhuGANSS_SAT_Info_Almanac_REDkpLst;


typedef TknU32 NhuALM_ReducedKeplerianSett_oa;

typedef struct NhuALM_ReducedKeplerianSet
{
 TknPres pres;
 NhuALM_ReducedKeplerianSett_oa t_oa;
 NhuGANSS_SAT_Info_Almanac_REDkpLst sat_info_REDkpLst;
} NhuALM_ReducedKeplerianSet;


typedef TknU32 NhuAuxInfoGANSS_ID1_elementsvID;


typedef TknStrBSXL NhuAuxInfoGANSS_ID1_elementsignalsAvailable;
typedef struct NhuAuxInfoGANSS_ID1_element
{
 TknPres pres;
 NhuAuxInfoGANSS_ID1_elementsvID svID;
 NhuAuxInfoGANSS_ID1_elementsignalsAvailable signalsAvailable;
} NhuAuxInfoGANSS_ID1_element;

typedef struct NhuAuxInfoGANSS_ID1
{
 TknU16 noComp;
 NhuAuxInfoGANSS_ID1_element *member;
}NhuAuxInfoGANSS_ID1;


typedef TknU32 NhuAuxInfoGANSS_ID3_elementsvID;


typedef TknStrBSXL NhuAuxInfoGANSS_ID3_elementsignalsAvailable;

typedef TknS32 NhuAuxInfoGANSS_ID3_elementchannelNumber;

typedef struct NhuAuxInfoGANSS_ID3_element
{
 TknPres pres;
 NhuAuxInfoGANSS_ID3_elementsvID svID;
 NhuAuxInfoGANSS_ID3_elementsignalsAvailable signalsAvailable;
 NhuAuxInfoGANSS_ID3_elementchannelNumber channelNumber;
} NhuAuxInfoGANSS_ID3_element;

typedef struct NhuAuxInfoGANSS_ID3
{
 TknU16 noComp;
 NhuAuxInfoGANSS_ID3_element *member;
}NhuAuxInfoGANSS_ID3;


typedef enum enumNhuAverageRLC_BufferPayload
{
 NhuAverageRLC_BufferPayloadpla0Enum,
 NhuAverageRLC_BufferPayloadpla4Enum,
 NhuAverageRLC_BufferPayloadpla8Enum,
 NhuAverageRLC_BufferPayloadpla16Enum,
 NhuAverageRLC_BufferPayloadpla32Enum,
 NhuAverageRLC_BufferPayloadpla64Enum,
 NhuAverageRLC_BufferPayloadpla128Enum,
 NhuAverageRLC_BufferPayloadpla256Enum,
 NhuAverageRLC_BufferPayloadpla512Enum,
 NhuAverageRLC_BufferPayloadpla1024Enum,
 NhuAverageRLC_BufferPayloadpla2kEnum,
 NhuAverageRLC_BufferPayloadpla4kEnum,
 NhuAverageRLC_BufferPayloadpla8kEnum,
 NhuAverageRLC_BufferPayloadpla16kEnum,
 NhuAverageRLC_BufferPayloadpla32kEnum,
 NhuAverageRLC_BufferPayloadpla64kEnum,
 NhuAverageRLC_BufferPayloadpla128kEnum,
 NhuAverageRLC_BufferPayloadpla256kEnum,
 NhuAverageRLC_BufferPayloadpla512kEnum,
 NhuAverageRLC_BufferPayloadpla1024kEnum,
 NhuAverageRLC_BufferPayloadspare12Enum,
 NhuAverageRLC_BufferPayloadspare11Enum,
 NhuAverageRLC_BufferPayloadspare10Enum,
 NhuAverageRLC_BufferPayloadspare9Enum,
 NhuAverageRLC_BufferPayloadspare8Enum,
 NhuAverageRLC_BufferPayloadspare7Enum,
 NhuAverageRLC_BufferPayloadspare6Enum,
 NhuAverageRLC_BufferPayloadspare5Enum,
 NhuAverageRLC_BufferPayloadspare4Enum,
 NhuAverageRLC_BufferPayloadspare3Enum,
 NhuAverageRLC_BufferPayloadspare2Enum,
 NhuAverageRLC_BufferPayloadspare1Enum
} EnumNhuAverageRLC_BufferPayload;
typedef TknU32 NhuAverageRLC_BufferPayload;

typedef TknU32 NhuBadSatLstMember;

typedef struct NhuBadSatLst
{
 TknU16 noComp;
 NhuBadSatLstMember *member;
}NhuBadSatLst;


typedef TknU32 NhuDL_TportChannelBLER;

typedef struct NhuBLER_MeasurementResults
{
 TknPres pres;
 NhuTportChannelIdentity transportChannelIdentity;
 NhuDL_TportChannelBLER dl_TportChannelBLER;
} NhuBLER_MeasurementResults;

typedef struct NhuBLER_MeasurementResultsLst
{
 TknU16 noComp;
 NhuBLER_MeasurementResults *member;
}NhuBLER_MeasurementResultsLst;

typedef struct NhuBLER_TransChIdLst
{
 TknU16 noComp;
 NhuTportChannelIdentity *member;
}NhuBLER_TransChIdLst;


typedef enum enumNhuBSIC_VerificationReqd
{
 NhuBSIC_VerificationReqdrequiredEnum,
 NhuBSIC_VerificationReqdnotReqdEnum
} EnumNhuBSIC_VerificationReqd;
typedef TknU32 NhuBSIC_VerificationReqd;


typedef TknU32 NhuBSICReportedverifiedBSIC;

typedef struct NhuBSICReported
{
 TknU8 choice;
 union {
  NhuBSICReportedverifiedBSIC verifiedBSIC;
  NhuBCCH_ARFCN nonVerifiedBSIC;
 } val;
} NhuBSICReported;


typedef TknU32 NhuBurstModeParamsburstStart;


typedef TknU32 NhuBurstModeParamsburstLength;


typedef TknU32 NhuBurstModeParamsburstFreq;

typedef struct NhuBurstModeParams
{
 TknPres pres;
 NhuBurstModeParamsburstStart burstStart;
 NhuBurstModeParamsburstLength burstLength;
 NhuBurstModeParamsburstFreq burstFreq;
} NhuBurstModeParams;


typedef enum enumNhuTrgCondition2
{
 NhuTrgCondition2activeSetCellsOnlyEnum,
 NhuTrgCondition2monitoredSetCellsOnlyEnum,
 NhuTrgCondition2activeSetAndMonitoredSetCellsEnum,
 NhuTrgCondition2detectedSetCellsOnlyEnum,
 NhuTrgCondition2detectedSetAndMonitoredSetCellsEnum
} EnumNhuTrgCondition2;
typedef TknU32 NhuTrgCondition2;


typedef TknU32 NhuRprtngRange;

typedef struct NhuForbiddenAffectCell
{
 TknU8 choice;
 union {
  NhuPrimaryCPICH_Info fdd;
  NhuPrimaryCCPCH_Info tdd;
 } val;
} NhuForbiddenAffectCell;

typedef struct NhuForbiddenAffectCellLst
{
 TknU16 noComp;
 NhuForbiddenAffectCell *member;
}NhuForbiddenAffectCellLst;


typedef TknU32 NhuW;


typedef enum enumNhuReportDeactivationThreshold
{
 NhuReportDeactivationThresholdnotApplicableEnum,
 NhuReportDeactivationThresholdt1Enum,
 NhuReportDeactivationThresholdt2Enum,
 NhuReportDeactivationThresholdt3Enum,
 NhuReportDeactivationThresholdt4Enum,
 NhuReportDeactivationThresholdt5Enum,
 NhuReportDeactivationThresholdt6Enum,
 NhuReportDeactivationThresholdt7Enum
} EnumNhuReportDeactivationThreshold;
typedef TknU32 NhuReportDeactivationThreshold;


typedef enum enumNhuRprtngAmount
{
 NhuRprtngAmountra1Enum,
 NhuRprtngAmountra2Enum,
 NhuRprtngAmountra4Enum,
 NhuRprtngAmountra8Enum,
 NhuRprtngAmountra16Enum,
 NhuRprtngAmountra32Enum,
 NhuRprtngAmountra64Enum,
 NhuRprtngAmountra_InfinityEnum
} EnumNhuRprtngAmount;
typedef TknU32 NhuRprtngAmount;


typedef enum enumNhuRprtngInterval
{
 NhuRprtngIntervalnoPeriodicalreportingEnum,
 NhuRprtngIntervalri0_25Enum,
 NhuRprtngIntervalri0_5Enum,
 NhuRprtngIntervalri1Enum,
 NhuRprtngIntervalri2Enum,
 NhuRprtngIntervalri4Enum,
 NhuRprtngIntervalri8Enum,
 NhuRprtngIntervalri16Enum
} EnumNhuRprtngInterval;
typedef TknU32 NhuRprtngInterval;

typedef struct NhuEvent1a
{
 TknPres pres;
 NhuTrgCondition2 triggeringCondition;
 NhuRprtngRange reportingRange;
 NhuForbiddenAffectCellLst forbiddenAffectCellLst;
 NhuW w;
 NhuReportDeactivationThreshold reportDeactivationThreshold;
 NhuRprtngAmount reportingAmount;
 NhuRprtngInterval reportingInterval;
} NhuEvent1a;


typedef enum enumNhuTrgCondition1
{
 NhuTrgCondition1activeSetCellsOnlyEnum,
 NhuTrgCondition1monitoredSetCellsOnlyEnum,
 NhuTrgCondition1activeSetAndMonitoredSetCellsEnum
} EnumNhuTrgCondition1;
typedef TknU32 NhuTrgCondition1;

typedef struct NhuEvent1b
{
 TknPres pres;
 NhuTrgCondition1 triggeringCondition;
 NhuRprtngRange reportingRange;
 NhuForbiddenAffectCellLst forbiddenAffectCellLst;
 NhuW w;
} NhuEvent1b;


typedef enum enumNhuReplacementActvnThreshold
{
 NhuReplacementActvnThresholdnotApplicableEnum,
 NhuReplacementActvnThresholdt1Enum,
 NhuReplacementActvnThresholdt2Enum,
 NhuReplacementActvnThresholdt3Enum,
 NhuReplacementActvnThresholdt4Enum,
 NhuReplacementActvnThresholdt5Enum,
 NhuReplacementActvnThresholdt6Enum,
 NhuReplacementActvnThresholdt7Enum
} EnumNhuReplacementActvnThreshold;
typedef TknU32 NhuReplacementActvnThreshold;

typedef struct NhuEvent1c
{
 TknPres pres;
 NhuReplacementActvnThreshold replacementActvnThreshold;
 NhuRprtngAmount reportingAmount;
 NhuRprtngInterval reportingInterval;
} NhuEvent1c;


typedef TknS32 NhuThresholdUsedFrequency;

typedef struct NhuEvent1e
{
 TknPres pres;
 NhuTrgCondition2 triggeringCondition;
 NhuThresholdUsedFrequency thresholdUsedFrequency;
} NhuEvent1e;

typedef struct NhuEvent1f
{
 TknPres pres;
 NhuTrgCondition1 triggeringCondition;
 NhuThresholdUsedFrequency thresholdUsedFrequency;
} NhuEvent1f;

typedef struct NhuIntraFreqEvent
{
 TknU8 choice;
 union {
  NhuEvent1a e1a;
  NhuEvent1b e1b;
  NhuEvent1c e1c;
  NhuEvent1e e1e;
  NhuEvent1f e1f;
  NhuThresholdUsedFrequency e1h;
  NhuThresholdUsedFrequency e1i;
 } val;
} NhuIntraFreqEvent;





typedef enum enumNhu3gTimeToTrigger
{
 Nhu3gTimeToTriggerttt0Enum,
 Nhu3gTimeToTriggerttt10Enum,
 Nhu3gTimeToTriggerttt20Enum,
 Nhu3gTimeToTriggerttt40Enum,
 Nhu3gTimeToTriggerttt60Enum,
 Nhu3gTimeToTriggerttt80Enum,
 Nhu3gTimeToTriggerttt100Enum,
 Nhu3gTimeToTriggerttt120Enum,
 Nhu3gTimeToTriggerttt160Enum,
 Nhu3gTimeToTriggerttt200Enum,
 Nhu3gTimeToTriggerttt240Enum,
 Nhu3gTimeToTriggertt320Enum,
 Nhu3gTimeToTriggerttt640Enum,
 Nhu3gTimeToTriggerttt1280Enum,
 Nhu3gTimeToTriggerttt2560Enum,
 Nhu3gTimeToTriggerttt5000Enum
} EnumNhu3gTimeToTrigger;
typedef TknU32 Nhu3gTimeToTrigger;


typedef enum enumNhuMaxNumberOfRprtngCellsTyp1
{
 NhuMaxNumberOfRprtngCellsTyp1e1Enum,
 NhuMaxNumberOfRprtngCellsTyp1e2Enum,
 NhuMaxNumberOfRprtngCellsTyp1e3Enum,
 NhuMaxNumberOfRprtngCellsTyp1e4Enum,
 NhuMaxNumberOfRprtngCellsTyp1e5Enum,
 NhuMaxNumberOfRprtngCellsTyp1e6Enum
} EnumNhuMaxNumberOfRprtngCellsTyp1;
typedef TknU32 NhuMaxNumberOfRprtngCellsTyp1;


typedef enum enumNhuMaxNumberOfRprtngCellsTyp3
{
 NhuMaxNumberOfRprtngCellsTyp3viactCellsPlus1Enum,
 NhuMaxNumberOfRprtngCellsTyp3viactCellsPlus2Enum,
 NhuMaxNumberOfRprtngCellsTyp3viactCellsPlus3Enum,
 NhuMaxNumberOfRprtngCellsTyp3viactCellsPlus4Enum,
 NhuMaxNumberOfRprtngCellsTyp3viactCellsPlus5Enum,
 NhuMaxNumberOfRprtngCellsTyp3viactCellsPlus6Enum
} EnumNhuMaxNumberOfRprtngCellsTyp3;
typedef TknU32 NhuMaxNumberOfRprtngCellsTyp3;


typedef enum enumNhuMaxNumberOfRprtngCellsTyp2
{
 NhuMaxNumberOfRprtngCellsTyp2e1Enum,
 NhuMaxNumberOfRprtngCellsTyp2e2Enum,
 NhuMaxNumberOfRprtngCellsTyp2e3Enum,
 NhuMaxNumberOfRprtngCellsTyp2e4Enum,
 NhuMaxNumberOfRprtngCellsTyp2e5Enum,
 NhuMaxNumberOfRprtngCellsTyp2e6Enum,
 NhuMaxNumberOfRprtngCellsTyp2e7Enum,
 NhuMaxNumberOfRprtngCellsTyp2e8Enum,
 NhuMaxNumberOfRprtngCellsTyp2e9Enum,
 NhuMaxNumberOfRprtngCellsTyp2e10Enum,
 NhuMaxNumberOfRprtngCellsTyp2e11Enum,
 NhuMaxNumberOfRprtngCellsTyp2e12Enum
} EnumNhuMaxNumberOfRprtngCellsTyp2;
typedef TknU32 NhuMaxNumberOfRprtngCellsTyp2;

typedef struct NhuRprtngCellStatus
{
 TknU8 choice;
 union {
  NhuMaxNumberOfRprtngCellsTyp1 withinActiveSet;
  NhuMaxNumberOfRprtngCellsTyp1 withinMonitoredSetUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp1 withinActiveAndOrMonitoredUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp1 withinDetectedSetUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp1 withinMonitoredAndOrDetectedUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp3 allActiveplusMonitoredSet;
  NhuMaxNumberOfRprtngCellsTyp3 allActivePlusDetectedSet;
  NhuMaxNumberOfRprtngCellsTyp3 allActivePlusMonitoredAndOrDetectedSet;
  NhuMaxNumberOfRprtngCellsTyp1 withinVirtualActSet;
  NhuMaxNumberOfRprtngCellsTyp1 withinMonitoredSetNonUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp1 withinMonitoredAndOrVirtualActiveSetNonUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp3 allVirtualActSetplusMonitoredSetNonUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp2 withinActSetOrVirtualActSet_InterRATcells;
  NhuMaxNumberOfRprtngCellsTyp2 withinActSetAndOrMonitoredUsedFreqOrVirtualActSetAndOrMonitoredNonUsedFreq;
 } val;
} NhuRprtngCellStatus;

typedef struct NhuIntraFreqEventCriteria
{
 TknPres pres;
 NhuIntraFreqEvent event;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuIntraFreqEventCriteria;

typedef struct NhuIntraFreqEventCriteriaLst
{
 TknU16 noComp;
 NhuIntraFreqEventCriteria *member;
}NhuIntraFreqEventCriteriaLst;

typedef struct NhuIntraFreqRprtngCriteria
{
 TknPres pres;
 NhuIntraFreqEventCriteriaLst eventCriteriaLst;
} NhuIntraFreqRprtngCriteria;


typedef enum enumNhuRprtngIntervalLong
{
 NhuRprtngIntervalLongril0Enum,
 NhuRprtngIntervalLongril0_25Enum,
 NhuRprtngIntervalLongril0_5Enum,
 NhuRprtngIntervalLongril1Enum,
 NhuRprtngIntervalLongril2Enum,
 NhuRprtngIntervalLongril3Enum,
 NhuRprtngIntervalLongril4Enum,
 NhuRprtngIntervalLongril6Enum,
 NhuRprtngIntervalLongril8Enum,
 NhuRprtngIntervalLongril12Enum,
 NhuRprtngIntervalLongril16Enum,
 NhuRprtngIntervalLongril20Enum,
 NhuRprtngIntervalLongril24Enum,
 NhuRprtngIntervalLongril28Enum,
 NhuRprtngIntervalLongril32Enum,
 NhuRprtngIntervalLongril64Enum
} EnumNhuRprtngIntervalLong;
typedef TknU32 NhuRprtngIntervalLong;

typedef struct NhuPeriodicalRprtngCriteria
{
 TknPres pres;
 NhuRprtngAmount reportingAmount;
 NhuRprtngIntervalLong reportingInterval;
} NhuPeriodicalRprtngCriteria;

typedef struct NhuCellDCH_ReportCriteria
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria intraFreqRprtngCriteria;
  NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 } val;
} NhuCellDCH_ReportCriteria;

typedef struct NhuForbiddenAffectCell_LCR_r4
{
 TknPres pres;
 NhuPrimaryCCPCH_Info_LCR_r4 tdd;
} NhuForbiddenAffectCell_LCR_r4;

typedef struct NhuForbiddenAffectCellLst_LCR_r4
{
 TknU16 noComp;
 NhuForbiddenAffectCell_LCR_r4 *member;
}NhuForbiddenAffectCellLst_LCR_r4;

typedef struct NhuEvent1a_LCR_r4
{
 TknPres pres;
 NhuTrgCondition2 triggeringCondition;
 NhuRprtngRange reportingRange;
 NhuForbiddenAffectCellLst_LCR_r4 forbiddenAffectCellLst;
 NhuW w;
 NhuReportDeactivationThreshold reportDeactivationThreshold;
 NhuRprtngAmount reportingAmount;
 NhuRprtngInterval reportingInterval;
} NhuEvent1a_LCR_r4;

typedef struct NhuEvent1b_LCR_r4
{
 TknPres pres;
 NhuTrgCondition1 triggeringCondition;
 NhuRprtngRange reportingRange;
 NhuForbiddenAffectCellLst_LCR_r4 forbiddenAffectCellLst;
 NhuW w;
} NhuEvent1b_LCR_r4;

typedef struct NhuIntraFreqEvent_LCR_r4
{
 TknU8 choice;
 union {
  NhuEvent1a_LCR_r4 e1a;
  NhuEvent1b_LCR_r4 e1b;
  NhuEvent1c e1c;
  NhuEvent1e e1e;
  NhuEvent1f e1f;
  NhuThresholdUsedFrequency e1h;
  NhuThresholdUsedFrequency e1i;
 } val;
} NhuIntraFreqEvent_LCR_r4;

typedef struct NhuIntraFreqEventCriteria_LCR_r4
{
 TknPres pres;
 NhuIntraFreqEvent_LCR_r4 event;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuIntraFreqEventCriteria_LCR_r4;

typedef struct NhuIntraFreqEventCriteriaLst_LCR_r4
{
 TknU16 noComp;
 NhuIntraFreqEventCriteria_LCR_r4 *member;
}NhuIntraFreqEventCriteriaLst_LCR_r4;

typedef struct NhuIntraFreqRprtngCriteria_LCR_r4
{
 TknPres pres;
 NhuIntraFreqEventCriteriaLst_LCR_r4 eventCriteriaLst;
} NhuIntraFreqRprtngCriteria_LCR_r4;

typedef struct NhuCellDCH_ReportCriteria_LCR_r4
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_LCR_r4 intraFreqRprtngCriteria;
  NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 } val;
} NhuCellDCH_ReportCriteria_LCR_r4;


typedef TknU32 NhuMeasurementOccasionPatternParametermeasurement_Occasion_Coeff;


typedef TknU32 NhuMeasurementOccasionPatternParametermeasurement_Occasion_Offset;


typedef TknU32 NhuMeasurementOccasionPatternParametermeasurement_Occasion_Length;


typedef TknStrBSXL NhuMeasurementOccasionPatternParametertimeslotBitmap;
typedef struct NhuMeasurementOccasionPatternParameter
{
 TknPres pres;
 NhuMeasurementOccasionPatternParametermeasurement_Occasion_Coeff measurement_Occasion_Coeff;
 NhuMeasurementOccasionPatternParametermeasurement_Occasion_Offset measurement_Occasion_Offset;
 NhuMeasurementOccasionPatternParametermeasurement_Occasion_Length measurement_Occasion_Length;
 NhuMeasurementOccasionPatternParametertimeslotBitmap timeslotBitmap;
} NhuMeasurementOccasionPatternParameter;


typedef TknU32 NhuCellDCHMeasOccasionPattern_LCRpatternId;


typedef enum enumNhuCellDCHMeasOccasionPattern_LCRstatusFlag
{
 NhuCellDCHMeasOccasionPattern_LCRstatusFlagactivateEnum,
 NhuCellDCHMeasOccasionPattern_LCRstatusFlagdeactivateEnum
} EnumNhuCellDCHMeasOccasionPattern_LCRstatusFlag;
typedef TknU32 NhuCellDCHMeasOccasionPattern_LCRstatusFlag;


typedef TknStrBSXL NhuCellDCHMeasOccasionPattern_LCRmeasurementPurpose;
typedef struct NhuCellDCHMeasOccasionPattern_LCR
{
 TknPres pres;
 NhuCellDCHMeasOccasionPattern_LCRpatternId patternId;
 NhuCellDCHMeasOccasionPattern_LCRstatusFlag statusFlag;
 NhuCellDCHMeasOccasionPattern_LCRmeasurementPurpose measurementPurpose;
 NhuMeasurementOccasionPatternParameter measurementOccasionPatternParameter;
} NhuCellDCHMeasOccasionPattern_LCR;

typedef struct NhuCellDCHMeasOccasionInfo_TDD128_r9cellDCHMeasOccasionSequenceLst
{
 TknU16 noComp;
 NhuCellDCHMeasOccasionPattern_LCR *member;
}NhuCellDCHMeasOccasionInfo_TDD128_r9cellDCHMeasOccasionSequenceLst;

typedef struct NhuCellDCHMeasOccasionInfo_TDD128_r9
{
 TknPres pres;
 NhuCellDCHMeasOccasionInfo_TDD128_r9cellDCHMeasOccasionSequenceLst cellDCHMeasOccasionSequenceLst;
} NhuCellDCHMeasOccasionInfo_TDD128_r9;


typedef TknS32 NhuCellIvdualOffset;


typedef TknU32 NhuReferenceTimeDifferenceToCellaccuracy40;


typedef TknU32 NhuReferenceTimeDifferenceToCellaccuracy256;


typedef TknU32 NhuReferenceTimeDifferenceToCellaccuracy2560;

typedef struct NhuReferenceTimeDifferenceToCell
{
 TknU8 choice;
 union {
  NhuReferenceTimeDifferenceToCellaccuracy40 accuracy40;
  NhuReferenceTimeDifferenceToCellaccuracy256 accuracy256;
  NhuReferenceTimeDifferenceToCellaccuracy2560 accuracy2560;
 } val;
} NhuReferenceTimeDifferenceToCell;

typedef struct NhuTimeslotInfo
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
 NhuBurstTyp burstTyp;
} NhuTimeslotInfo;

typedef struct NhuTimeslotInfoLst
{
 TknU16 noComp;
 NhuTimeslotInfo *member;
}NhuTimeslotInfoLst;


typedef TknU8 NhuCellInfomodeSpecificInfofddreadSFN_Indicator;


typedef TknU8 NhuCellInfomodeSpecificInfofddtx_DiversityIndicator;

typedef struct NhuCellInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuPrimaryCPICH_TX_Power primaryCPICH_TX_Power;
 NhuCellInfomodeSpecificInfofddreadSFN_Indicator readSFN_Indicator;
 NhuCellInfomodeSpecificInfofddtx_DiversityIndicator tx_DiversityIndicator;
} NhuCellInfomodeSpecificInfofdd;


typedef TknU8 NhuCellInfomodeSpecificInfotddreadSFN_Indicator;

typedef struct NhuCellInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Info primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst timeslotInfoLst;
 NhuCellInfomodeSpecificInfotddreadSFN_Indicator readSFN_Indicator;
} NhuCellInfomodeSpecificInfotdd;

typedef struct NhuCellInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellInfomodeSpecificInfofdd fdd;
  NhuCellInfomodeSpecificInfotdd tdd;
 } val;
} NhuCellInfomodeSpecificInfo;

typedef struct NhuCellInfo
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuCellInfomodeSpecificInfo modeSpecificInfo;
} NhuCellInfo;

typedef struct NhuTimeslotInfo_LCR_r4
{
 TknPres pres;
 NhuTimeslotNumber_LCR_r4 timeslotNumber;
} NhuTimeslotInfo_LCR_r4;

typedef struct NhuTimeslotInfoLst_r4tdd384
{
 TknU16 noComp;
 NhuTimeslotInfo *member;
}NhuTimeslotInfoLst_r4tdd384;

typedef struct NhuTimeslotInfoLst_r4tdd128
{
 TknU16 noComp;
 NhuTimeslotInfo_LCR_r4 *member;
}NhuTimeslotInfoLst_r4tdd128;

typedef struct NhuTimeslotInfoLst_r4
{
 TknU8 choice;
 union {
  NhuTimeslotInfoLst_r4tdd384 tdd384;
  NhuTimeslotInfoLst_r4tdd128 tdd128;
 } val;
} NhuTimeslotInfoLst_r4;


typedef TknU8 NhuCellInfo_r4modeSpecificInfofddreadSFN_Indicator;


typedef TknU8 NhuCellInfo_r4modeSpecificInfofddtx_DiversityIndicator;

typedef struct NhuCellInfo_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuPrimaryCPICH_TX_Power primaryCPICH_TX_Power;
 NhuCellInfo_r4modeSpecificInfofddreadSFN_Indicator readSFN_Indicator;
 NhuCellInfo_r4modeSpecificInfofddtx_DiversityIndicator tx_DiversityIndicator;
} NhuCellInfo_r4modeSpecificInfofdd;


typedef TknU8 NhuCellInfo_r4modeSpecificInfotddreadSFN_Indicator;

typedef struct NhuCellInfo_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Info_r4 primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst_r4 timeslotInfoLst;
 NhuCellInfo_r4modeSpecificInfotddreadSFN_Indicator readSFN_Indicator;
} NhuCellInfo_r4modeSpecificInfotdd;

typedef struct NhuCellInfo_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellInfo_r4modeSpecificInfofdd fdd;
  NhuCellInfo_r4modeSpecificInfotdd tdd;
 } val;
} NhuCellInfo_r4modeSpecificInfo;

typedef struct NhuCellInfo_r4
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuCellInfo_r4modeSpecificInfo modeSpecificInfo;
} NhuCellInfo_r4;


typedef TknS32 NhuQ_OffsetS_N;


typedef enum enumNhuTemporaryOffset1
{
 NhuTemporaryOffset1to3Enum,
 NhuTemporaryOffset1to6Enum,
 NhuTemporaryOffset1to9Enum,
 NhuTemporaryOffset1to12Enum,
 NhuTemporaryOffset1to15Enum,
 NhuTemporaryOffset1to18Enum,
 NhuTemporaryOffset1to21Enum,
 NhuTemporaryOffset1infiniteEnum
} EnumNhuTemporaryOffset1;
typedef TknU32 NhuTemporaryOffset1;

typedef struct NhuPenaltyTime_RSCP
{
 TknU8 choice;
 union {
  NhuTemporaryOffset1 pt10;
  NhuTemporaryOffset1 pt20;
  NhuTemporaryOffset1 pt30;
  NhuTemporaryOffset1 pt40;
  NhuTemporaryOffset1 pt50;
  NhuTemporaryOffset1 pt60;
 } val;
} NhuPenaltyTime_RSCP;

typedef struct NhuHCS_CellReselectInfo_RSCP
{
 TknPres pres;
 NhuPenaltyTime_RSCP penaltyTime;
} NhuHCS_CellReselectInfo_RSCP;

typedef struct NhuHCS_NeighbouringCellInfo_RSCP
{
 TknPres pres;
 NhuHCS_PRIO hcs_PRIO;
 NhuQ_HCS q_HCS;
 NhuHCS_CellReselectInfo_RSCP hcs_CellReselectInfo;
} NhuHCS_NeighbouringCellInfo_RSCP;

typedef struct NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfofdd
{
 TknPres pres;
 NhuQ_QualMin q_QualMin;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfofdd;

typedef struct NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfotdd
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfotdd;

typedef struct NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfogsm
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfogsm;

typedef struct NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfofdd fdd;
  NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfotdd tdd;
  NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfogsm gsm;
 } val;
} NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfo;

typedef struct NhuCellSelectReselectInfoMC_RSCP
{
 TknPres pres;
 NhuQ_OffsetS_N q_OffsetS_N;
 NhuMaxAllowedUL_TX_Power maxAllowedUL_TX_Power;
 NhuHCS_NeighbouringCellInfo_RSCP hcs_NeighbouringCellInfo_RSCP;
 NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfo modeSpecificInfo;
} NhuCellSelectReselectInfoMC_RSCP;

typedef struct NhuCellInfo_LCR_r8_ext
{
 TknPres pres;
 NhuCellSelectReselectInfoMC_RSCP cellSelectionReselectionInfo;
} NhuCellInfo_LCR_r8_ext;


typedef TknU8 NhuCellInfo_r9modeSpecificInfofddreadSFN_Indicator;


typedef TknU8 NhuCellInfo_r9modeSpecificInfofddtx_DiversityIndicator;

typedef struct NhuCellInfo_r9modeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuPrimaryCPICH_TX_Power primaryCPICH_TX_Power;
 NhuCellInfo_r9modeSpecificInfofddreadSFN_Indicator readSFN_Indicator;
 NhuCellInfo_r9modeSpecificInfofddtx_DiversityIndicator tx_DiversityIndicator;
} NhuCellInfo_r9modeSpecificInfofdd;


typedef TknU8 NhuCellInfo_r9modeSpecificInfotddreadSFN_Indicator;

typedef struct NhuCellInfo_r9modeSpecificInfotdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Info_r4 primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst_r4 timeslotInfoLst;
 NhuCellInfo_r9modeSpecificInfotddreadSFN_Indicator readSFN_Indicator;
} NhuCellInfo_r9modeSpecificInfotdd;

typedef struct NhuCellInfo_r9modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellInfo_r9modeSpecificInfofdd fdd;
  NhuCellInfo_r9modeSpecificInfotdd tdd;
 } val;
} NhuCellInfo_r9modeSpecificInfo;

typedef struct NhuCellInfo_r9
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuCellInfo_r9modeSpecificInfo modeSpecificInfo;
 NhuCellSelectReselectInfoMC_RSCP cellSelectionReselectionInfo;
} NhuCellInfo_r9;

typedef struct NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfofdd
{
 TknPres pres;
 NhuQ_QualMin q_QualMin;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfofdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfotdd
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfotdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfogsm
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfogsm;

typedef struct NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfofdd fdd;
  NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfotdd tdd;
  NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfogsm gsm;
 } val;
} NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfo;

typedef struct NhuCellSelectReselectInfoSIB_11_12_RSCP
{
 TknPres pres;
 NhuQ_OffsetS_N q_OffsetS_N;
 NhuMaxAllowedUL_TX_Power maxAllowedUL_TX_Power;
 NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfo modeSpecificInfo;
} NhuCellSelectReselectInfoSIB_11_12_RSCP;


typedef TknU8 NhuCellInfoSI_RSCPmodeSpecificInfofddreadSFN_Indicator;


typedef TknU8 NhuCellInfoSI_RSCPmodeSpecificInfofddtx_DiversityIndicator;

typedef struct NhuCellInfoSI_RSCPmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuPrimaryCPICH_TX_Power primaryCPICH_TX_Power;
 NhuCellInfoSI_RSCPmodeSpecificInfofddreadSFN_Indicator readSFN_Indicator;
 NhuCellInfoSI_RSCPmodeSpecificInfofddtx_DiversityIndicator tx_DiversityIndicator;
} NhuCellInfoSI_RSCPmodeSpecificInfofdd;


typedef TknU8 NhuCellInfoSI_RSCPmodeSpecificInfotddreadSFN_Indicator;

typedef struct NhuCellInfoSI_RSCPmodeSpecificInfotdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Info primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst timeslotInfoLst;
 NhuCellInfoSI_RSCPmodeSpecificInfotddreadSFN_Indicator readSFN_Indicator;
} NhuCellInfoSI_RSCPmodeSpecificInfotdd;

typedef struct NhuCellInfoSI_RSCPmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellInfoSI_RSCPmodeSpecificInfofdd fdd;
  NhuCellInfoSI_RSCPmodeSpecificInfotdd tdd;
 } val;
} NhuCellInfoSI_RSCPmodeSpecificInfo;

typedef struct NhuCellInfoSI_RSCP
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuCellInfoSI_RSCPmodeSpecificInfo modeSpecificInfo;
 NhuCellSelectReselectInfoSIB_11_12_RSCP cellSelectionReselectionInfo;
} NhuCellInfoSI_RSCP;

typedef struct NhuTimeslotInfoLst_LCR_r4
{
 TknU16 noComp;
 NhuTimeslotInfo_LCR_r4 *member;
}NhuTimeslotInfoLst_LCR_r4;


typedef TknU8 NhuCellInfoSI_RSCP_LCR_r4readSFN_Indicator;

typedef struct NhuCellInfoSI_RSCP_LCR_r4
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuPrimaryCCPCH_Info_LCR_r4 primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst_LCR_r4 timeslotInfoLst;
 NhuCellInfoSI_RSCP_LCR_r4readSFN_Indicator readSFN_Indicator;
 NhuCellSelectReselectInfoSIB_11_12_RSCP cellSelectionReselectionInfo;
} NhuCellInfoSI_RSCP_LCR_r4;

typedef struct NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfofdd
{
 TknPres pres;
 NhuQ_QualMin q_QualMin;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfofdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfotdd
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfotdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfogsm
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfogsm;

typedef struct NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfofdd fdd;
  NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfotdd tdd;
  NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfogsm gsm;
 } val;
} NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfo;

typedef struct NhuCellSelectReselectInfoSIB_11_12_ECN0
{
 TknPres pres;
 NhuQ_OffsetS_N q_Offset1S_N;
 NhuQ_OffsetS_N q_Offset2S_N;
 NhuMaxAllowedUL_TX_Power maxAllowedUL_TX_Power;
 NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfo modeSpecificInfo;
} NhuCellSelectReselectInfoSIB_11_12_ECN0;


typedef TknU8 NhuCellInfoSI_ECN0modeSpecificInfofddreadSFN_Indicator;


typedef TknU8 NhuCellInfoSI_ECN0modeSpecificInfofddtx_DiversityIndicator;

typedef struct NhuCellInfoSI_ECN0modeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuPrimaryCPICH_TX_Power primaryCPICH_TX_Power;
 NhuCellInfoSI_ECN0modeSpecificInfofddreadSFN_Indicator readSFN_Indicator;
 NhuCellInfoSI_ECN0modeSpecificInfofddtx_DiversityIndicator tx_DiversityIndicator;
} NhuCellInfoSI_ECN0modeSpecificInfofdd;


typedef TknU8 NhuCellInfoSI_ECN0modeSpecificInfotddreadSFN_Indicator;

typedef struct NhuCellInfoSI_ECN0modeSpecificInfotdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Info primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst timeslotInfoLst;
 NhuCellInfoSI_ECN0modeSpecificInfotddreadSFN_Indicator readSFN_Indicator;
} NhuCellInfoSI_ECN0modeSpecificInfotdd;

typedef struct NhuCellInfoSI_ECN0modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellInfoSI_ECN0modeSpecificInfofdd fdd;
  NhuCellInfoSI_ECN0modeSpecificInfotdd tdd;
 } val;
} NhuCellInfoSI_ECN0modeSpecificInfo;

typedef struct NhuCellInfoSI_ECN0
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuCellInfoSI_ECN0modeSpecificInfo modeSpecificInfo;
 NhuCellSelectReselectInfoSIB_11_12_ECN0 cellSelectionReselectionInfo;
} NhuCellInfoSI_ECN0;


typedef TknU8 NhuCellInfoSI_ECN0_LCR_r4readSFN_Indicator;

typedef struct NhuCellInfoSI_ECN0_LCR_r4
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuPrimaryCCPCH_Info_LCR_r4 primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst_LCR_r4 timeslotInfoLst;
 NhuCellInfoSI_ECN0_LCR_r4readSFN_Indicator readSFN_Indicator;
 NhuCellSelectReselectInfoSIB_11_12_ECN0 cellSelectionReselectionInfo;
} NhuCellInfoSI_ECN0_LCR_r4;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfofdd
{
 TknPres pres;
 NhuQ_QualMin q_QualMin;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfofdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfotdd
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfotdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfogsm
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfogsm;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfofdd fdd;
  NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfotdd tdd;
  NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfogsm gsm;
 } val;
} NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfo;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_RSCP
{
 TknPres pres;
 NhuQ_OffsetS_N q_OffsetS_N;
 NhuMaxAllowedUL_TX_Power maxAllowedUL_TX_Power;
 NhuHCS_NeighbouringCellInfo_RSCP hcs_NeighbouringCellInfo_RSCP;
 NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfo modeSpecificInfo;
} NhuCellSelectReselectInfoSIB_11_12_HCS_RSCP;


typedef TknU8 NhuCellInfoSI_HCS_RSCPmodeSpecificInfofddreadSFN_Indicator;


typedef TknU8 NhuCellInfoSI_HCS_RSCPmodeSpecificInfofddtx_DiversityIndicator;

typedef struct NhuCellInfoSI_HCS_RSCPmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuPrimaryCPICH_TX_Power primaryCPICH_TX_Power;
 NhuCellInfoSI_HCS_RSCPmodeSpecificInfofddreadSFN_Indicator readSFN_Indicator;
 NhuCellInfoSI_HCS_RSCPmodeSpecificInfofddtx_DiversityIndicator tx_DiversityIndicator;
} NhuCellInfoSI_HCS_RSCPmodeSpecificInfofdd;


typedef TknU8 NhuCellInfoSI_HCS_RSCPmodeSpecificInfotddreadSFN_Indicator;

typedef struct NhuCellInfoSI_HCS_RSCPmodeSpecificInfotdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Info primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst timeslotInfoLst;
 NhuCellInfoSI_HCS_RSCPmodeSpecificInfotddreadSFN_Indicator readSFN_Indicator;
} NhuCellInfoSI_HCS_RSCPmodeSpecificInfotdd;

typedef struct NhuCellInfoSI_HCS_RSCPmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellInfoSI_HCS_RSCPmodeSpecificInfofdd fdd;
  NhuCellInfoSI_HCS_RSCPmodeSpecificInfotdd tdd;
 } val;
} NhuCellInfoSI_HCS_RSCPmodeSpecificInfo;

typedef struct NhuCellInfoSI_HCS_RSCP
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuCellInfoSI_HCS_RSCPmodeSpecificInfo modeSpecificInfo;
 NhuCellSelectReselectInfoSIB_11_12_HCS_RSCP cellSelectionReselectionInfo;
} NhuCellInfoSI_HCS_RSCP;


typedef TknU8 NhuCellInfoSI_HCS_RSCP_LCR_r4readSFN_Indicator;

typedef struct NhuCellInfoSI_HCS_RSCP_LCR_r4
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuPrimaryCCPCH_Info_LCR_r4 primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst_LCR_r4 timeslotInfoLst;
 NhuCellInfoSI_HCS_RSCP_LCR_r4readSFN_Indicator readSFN_Indicator;
 NhuCellSelectReselectInfoSIB_11_12_HCS_RSCP cellSelectionReselectionInfo;
} NhuCellInfoSI_HCS_RSCP_LCR_r4;


typedef enum enumNhuTemporaryOffset2
{
 NhuTemporaryOffset2to2Enum,
 NhuTemporaryOffset2to3Enum,
 NhuTemporaryOffset2to4Enum,
 NhuTemporaryOffset2to6Enum,
 NhuTemporaryOffset2to8Enum,
 NhuTemporaryOffset2to10Enum,
 NhuTemporaryOffset2to12Enum,
 NhuTemporaryOffset2infiniteEnum
} EnumNhuTemporaryOffset2;
typedef TknU32 NhuTemporaryOffset2;

typedef struct NhuTemporaryOffsetLst
{
 TknPres pres;
 NhuTemporaryOffset1 temporaryOffset1;
 NhuTemporaryOffset2 temporaryOffset2;
} NhuTemporaryOffsetLst;

typedef struct NhuPenaltyTime_ECN0
{
 TknU8 choice;
 union {
  NhuTemporaryOffsetLst pt10;
  NhuTemporaryOffsetLst pt20;
  NhuTemporaryOffsetLst pt30;
  NhuTemporaryOffsetLst pt40;
  NhuTemporaryOffsetLst pt50;
  NhuTemporaryOffsetLst pt60;
 } val;
} NhuPenaltyTime_ECN0;

typedef struct NhuHCS_CellReselectInfo_ECN0
{
 TknPres pres;
 NhuPenaltyTime_ECN0 penaltyTime;
} NhuHCS_CellReselectInfo_ECN0;

typedef struct NhuHCS_NeighbouringCellInfo_ECN0
{
 TknPres pres;
 NhuHCS_PRIO hcs_PRIO;
 NhuQ_HCS q_HCS;
 NhuHCS_CellReselectInfo_ECN0 hcs_CellReselectInfo;
} NhuHCS_NeighbouringCellInfo_ECN0;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfofdd
{
 TknPres pres;
 NhuQ_QualMin q_QualMin;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfofdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfotdd
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfotdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfogsm
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfogsm;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfofdd fdd;
  NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfotdd tdd;
  NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfogsm gsm;
 } val;
} NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfo;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0
{
 TknPres pres;
 NhuQ_OffsetS_N q_Offset1S_N;
 NhuQ_OffsetS_N q_Offset2S_N;
 NhuMaxAllowedUL_TX_Power maxAllowedUL_TX_Power;
 NhuHCS_NeighbouringCellInfo_ECN0 hcs_NeighbouringCellInfo_ECN0;
 NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfo modeSpecificInfo;
} NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0;


typedef TknU8 NhuCellInfoSI_HCS_ECN0modeSpecificInfofddreadSFN_Indicator;


typedef TknU8 NhuCellInfoSI_HCS_ECN0modeSpecificInfofddtx_DiversityIndicator;

typedef struct NhuCellInfoSI_HCS_ECN0modeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuPrimaryCPICH_TX_Power primaryCPICH_TX_Power;
 NhuCellInfoSI_HCS_ECN0modeSpecificInfofddreadSFN_Indicator readSFN_Indicator;
 NhuCellInfoSI_HCS_ECN0modeSpecificInfofddtx_DiversityIndicator tx_DiversityIndicator;
} NhuCellInfoSI_HCS_ECN0modeSpecificInfofdd;


typedef TknU8 NhuCellInfoSI_HCS_ECN0modeSpecificInfotddreadSFN_Indicator;

typedef struct NhuCellInfoSI_HCS_ECN0modeSpecificInfotdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Info primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst timeslotInfoLst;
 NhuCellInfoSI_HCS_ECN0modeSpecificInfotddreadSFN_Indicator readSFN_Indicator;
} NhuCellInfoSI_HCS_ECN0modeSpecificInfotdd;

typedef struct NhuCellInfoSI_HCS_ECN0modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellInfoSI_HCS_ECN0modeSpecificInfofdd fdd;
  NhuCellInfoSI_HCS_ECN0modeSpecificInfotdd tdd;
 } val;
} NhuCellInfoSI_HCS_ECN0modeSpecificInfo;

typedef struct NhuCellInfoSI_HCS_ECN0
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuCellInfoSI_HCS_ECN0modeSpecificInfo modeSpecificInfo;
 NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0 cellSelectionReselectionInfo;
} NhuCellInfoSI_HCS_ECN0;


typedef TknU8 NhuCellInfoSI_HCS_ECN0_LCR_r4readSFN_Indicator;

typedef struct NhuCellInfoSI_HCS_ECN0_LCR_r4
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuPrimaryCCPCH_Info_LCR_r4 primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst_LCR_r4 timeslotInfoLst;
 NhuCellInfoSI_HCS_ECN0_LCR_r4readSFN_Indicator readSFN_Indicator;
 NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0 cellSelectionReselectionInfo;
} NhuCellInfoSI_HCS_ECN0_LCR_r4;


typedef TknU32 NhuSFN_SFN_ObsTimeDifference1;


typedef TknU32 NhuSFN_SFN_ObsTimeDifference2;

typedef struct NhuSFN_SFN_ObsTimeDifference
{
 TknU8 choice;
 union {
  NhuSFN_SFN_ObsTimeDifference1 type1;
  NhuSFN_SFN_ObsTimeDifference2 type2;
 } val;
} NhuSFN_SFN_ObsTimeDifference;


typedef TknU32 NhuCountC_SFN_Frame_differencecountC_SFN_High;


typedef TknU32 NhuCountC_SFN_Frame_differenceoff;

typedef struct NhuCountC_SFN_Frame_difference
{
 TknPres pres;
 NhuCountC_SFN_Frame_differencecountC_SFN_High countC_SFN_High;
 NhuCountC_SFN_Frame_differenceoff off;
} NhuCountC_SFN_Frame_difference;


typedef TknU32 NhuCellSynchronisationInfomodeSpecificInfofddtm;

typedef struct NhuCellSynchronisationInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuCountC_SFN_Frame_difference countC_SFN_Frame_difference;
 NhuCellSynchronisationInfomodeSpecificInfofddtm tm;
} NhuCellSynchronisationInfomodeSpecificInfofdd;

typedef struct NhuCellSynchronisationInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuCountC_SFN_Frame_difference countC_SFN_Frame_difference;
} NhuCellSynchronisationInfomodeSpecificInfotdd;

typedef struct NhuCellSynchronisationInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellSynchronisationInfomodeSpecificInfofdd fdd;
  NhuCellSynchronisationInfomodeSpecificInfotdd tdd;
 } val;
} NhuCellSynchronisationInfomodeSpecificInfo;

typedef struct NhuCellSynchronisationInfo
{
 TknPres pres;
 NhuCellSynchronisationInfomodeSpecificInfo modeSpecificInfo;
} NhuCellSynchronisationInfo;


typedef TknU32 NhuCPICH_Ec_N0;


typedef TknU32 NhuCPICH_RSCP;


typedef TknU32 NhuPathloss;


typedef TknU32 NhuPrimaryCCPCH_RSCP;


typedef TknU32 NhuTimeslotISCP;

typedef struct NhuTimeslotISCP_Lst
{
 TknU16 noComp;
 NhuTimeslotISCP *member;
}NhuTimeslotISCP_Lst;

typedef struct NhuCellMeasuredResultsmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuCPICH_Ec_N0 cpich_Ec_N0;
 NhuCPICH_RSCP cpich_RSCP;
 NhuPathloss pathloss;
} NhuCellMeasuredResultsmodeSpecificInfofdd;

typedef struct NhuCellMeasuredResultsmodeSpecificInfotdd
{
 TknPres pres;
 NhuCellParamsID cellParamsID;
 NhuTGSN proposedTGSN;
 NhuPrimaryCCPCH_RSCP primaryCCPCH_RSCP;
 NhuPathloss pathloss;
 NhuTimeslotISCP_Lst timeslotISCP_Lst;
} NhuCellMeasuredResultsmodeSpecificInfotdd;

typedef struct NhuCellMeasuredResultsmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellMeasuredResultsmodeSpecificInfofdd fdd;
  NhuCellMeasuredResultsmodeSpecificInfotdd tdd;
 } val;
} NhuCellMeasuredResultsmodeSpecificInfo;

typedef struct NhuCellMeasuredResults
{
 TknPres pres;
 NhuCellIdentity cellIdentity;
 NhuSFN_SFN_ObsTimeDifference dummy;
 NhuCellSynchronisationInfo cellSynchronisationInfo;
 NhuCellMeasuredResultsmodeSpecificInfo modeSpecificInfo;
} NhuCellMeasuredResults;


typedef TknS32 NhuDeltaRSCP;

typedef struct NhuDeltaRSCPPerCell
{
 TknPres pres;
 NhuDeltaRSCP deltaRSCP;
} NhuDeltaRSCPPerCell;

typedef struct NhuCellMeasuredResults_r9modeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuCPICH_Ec_N0 cpich_Ec_N0;
 NhuCPICH_RSCP cpich_RSCP;
 NhuDeltaRSCPPerCell deltaRSCPPerCell;
 NhuPathloss pathloss;
} NhuCellMeasuredResults_r9modeSpecificInfofdd;

typedef struct NhuCellMeasuredResults_r9modeSpecificInfotdd
{
 TknPres pres;
 NhuCellParamsID cellParamsID;
 NhuTGSN proposedTGSN;
 NhuPrimaryCCPCH_RSCP primaryCCPCH_RSCP;
 NhuPathloss pathloss;
 NhuTimeslotISCP_Lst timeslotISCP_Lst;
} NhuCellMeasuredResults_r9modeSpecificInfotdd;

typedef struct NhuCellMeasuredResults_r9modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellMeasuredResults_r9modeSpecificInfofdd fdd;
  NhuCellMeasuredResults_r9modeSpecificInfotdd tdd;
 } val;
} NhuCellMeasuredResults_r9modeSpecificInfo;

typedef struct NhuCellMeasuredResults_r9
{
 TknPres pres;
 NhuCellIdentity cellIdentity;
 NhuCellSynchronisationInfo cellSynchronisationInfo;
 NhuCellMeasuredResults_r9modeSpecificInfo modeSpecificInfo;
} NhuCellMeasuredResults_r9;


typedef enum enumNhuCellMeasuredResults_v920extcsgMemberInd
{
 NhuCellMeasuredResults_v920extcsgMemberIndmemberEnum
} EnumNhuCellMeasuredResults_v920extcsgMemberInd;
typedef TknU32 NhuCellMeasuredResults_v920extcsgMemberInd;

typedef struct NhuCellMeasuredResults_v920ext
{
 TknPres pres;
 NhuCSG_Identity csgIdentity;
 NhuCellMeasuredResults_v920extcsgMemberInd csgMemberInd;
} NhuCellMeasuredResults_v920ext;

typedef struct NhuCellMeasurementEventResultsfdd
{
 TknU16 noComp;
 NhuPrimaryCPICH_Info *member;
}NhuCellMeasurementEventResultsfdd;

typedef struct NhuCellMeasurementEventResultstdd
{
 TknU16 noComp;
 NhuPrimaryCCPCH_Info *member;
}NhuCellMeasurementEventResultstdd;

typedef struct NhuCellMeasurementEventResults
{
 TknU8 choice;
 union {
  NhuCellMeasurementEventResultsfdd fdd;
  NhuCellMeasurementEventResultstdd tdd;
 } val;
} NhuCellMeasurementEventResults;

typedef struct NhuCellMeasurementEventResultsOnSecUlFreqfdd
{
 TknU16 noComp;
 NhuPrimaryCPICH_Info *member;
}NhuCellMeasurementEventResultsOnSecUlFreqfdd;

typedef struct NhuCellMeasurementEventResultsOnSecUlFreq
{
 TknU8 choice;
 union {
  NhuCellMeasurementEventResultsOnSecUlFreqfdd fdd;
 } val;
} NhuCellMeasurementEventResultsOnSecUlFreq;

typedef struct NhuCellMeasurementEventResults_LCR_r4
{
 TknU16 noComp;
 NhuPrimaryCCPCH_Info_LCR_r4 *member;
}NhuCellMeasurementEventResults_LCR_r4;


typedef enum enumNhuSFN_SFN_OTD_Typ
{
 NhuSFN_SFN_OTD_TypnoReportEnum,
 NhuSFN_SFN_OTD_Typtype1Enum,
 NhuSFN_SFN_OTD_Typtype2Enum
} EnumNhuSFN_SFN_OTD_Typ;
typedef TknU32 NhuSFN_SFN_OTD_Typ;


typedef TknU8 NhuCellRprtngQuantitiescellIdentity_reportingIndicator;


typedef TknU8 NhuCellRprtngQuantitiescellSynchronisationInfoRprtngIndicator;


typedef TknU8 NhuCellRprtngQuantitiesmodeSpecificInfofddcpich_Ec_N0_reportingIndicator;


typedef TknU8 NhuCellRprtngQuantitiesmodeSpecificInfofddcpich_RSCP_reportingIndicator;


typedef TknU8 NhuCellRprtngQuantitiesmodeSpecificInfofddpathloss_reportingIndicator;

typedef struct NhuCellRprtngQuantitiesmodeSpecificInfofdd
{
 TknPres pres;
 NhuCellRprtngQuantitiesmodeSpecificInfofddcpich_Ec_N0_reportingIndicator cpich_Ec_N0_reportingIndicator;
 NhuCellRprtngQuantitiesmodeSpecificInfofddcpich_RSCP_reportingIndicator cpich_RSCP_reportingIndicator;
 NhuCellRprtngQuantitiesmodeSpecificInfofddpathloss_reportingIndicator pathloss_reportingIndicator;
} NhuCellRprtngQuantitiesmodeSpecificInfofdd;


typedef TknU8 NhuCellRprtngQuantitiesmodeSpecificInfotddtimeslotISCP_reportingIndicator;


typedef TknU8 NhuCellRprtngQuantitiesmodeSpecificInfotddproposedTGSN_RprtngReqd;


typedef TknU8 NhuCellRprtngQuantitiesmodeSpecificInfotddprimaryCCPCH_RSCP_reportingIndicator;


typedef TknU8 NhuCellRprtngQuantitiesmodeSpecificInfotddpathloss_reportingIndicator;

typedef struct NhuCellRprtngQuantitiesmodeSpecificInfotdd
{
 TknPres pres;
 NhuCellRprtngQuantitiesmodeSpecificInfotddtimeslotISCP_reportingIndicator timeslotISCP_reportingIndicator;
 NhuCellRprtngQuantitiesmodeSpecificInfotddproposedTGSN_RprtngReqd proposedTGSN_RprtngReqd;
 NhuCellRprtngQuantitiesmodeSpecificInfotddprimaryCCPCH_RSCP_reportingIndicator primaryCCPCH_RSCP_reportingIndicator;
 NhuCellRprtngQuantitiesmodeSpecificInfotddpathloss_reportingIndicator pathloss_reportingIndicator;
} NhuCellRprtngQuantitiesmodeSpecificInfotdd;

typedef struct NhuCellRprtngQuantitiesmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellRprtngQuantitiesmodeSpecificInfofdd fdd;
  NhuCellRprtngQuantitiesmodeSpecificInfotdd tdd;
 } val;
} NhuCellRprtngQuantitiesmodeSpecificInfo;

typedef struct NhuCellRprtngQuantities
{
 TknPres pres;
 NhuSFN_SFN_OTD_Typ dummy;
 NhuCellRprtngQuantitiescellIdentity_reportingIndicator cellIdentity_reportingIndicator;
 NhuCellRprtngQuantitiescellSynchronisationInfoRprtngIndicator cellSynchronisationInfoRprtngIndicator;
 NhuCellRprtngQuantitiesmodeSpecificInfo modeSpecificInfo;
} NhuCellRprtngQuantities;

typedef struct NhuCellSelectReselectInfoSIB_11_12modeSpecificInfofdd
{
 TknPres pres;
 NhuQ_QualMin q_QualMin;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12modeSpecificInfofdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12modeSpecificInfotdd
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12modeSpecificInfotdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12modeSpecificInfogsm
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12modeSpecificInfogsm;

typedef struct NhuCellSelectReselectInfoSIB_11_12modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellSelectReselectInfoSIB_11_12modeSpecificInfofdd fdd;
  NhuCellSelectReselectInfoSIB_11_12modeSpecificInfotdd tdd;
  NhuCellSelectReselectInfoSIB_11_12modeSpecificInfogsm gsm;
 } val;
} NhuCellSelectReselectInfoSIB_11_12modeSpecificInfo;

typedef struct NhuCellSelectReselectInfoSIB_11_12
{
 TknPres pres;
 NhuQ_OffsetS_N q_Offset1S_N;
 NhuQ_OffsetS_N q_Offset2S_N;
 NhuMaxAllowedUL_TX_Power maxAllowedUL_TX_Power;
 NhuHCS_NeighbouringCellInfo_RSCP hcs_NeighbouringCellInfo_RSCP;
 NhuCellSelectReselectInfoSIB_11_12modeSpecificInfo modeSpecificInfo;
} NhuCellSelectReselectInfoSIB_11_12;


typedef TknS32 NhuDeltaQrxlevmin;

typedef struct NhuCellSelectReselectInfo_v590ext
{
 TknPres pres;
 NhuDeltaQrxlevmin deltaQrxlevmin;
 NhuDeltaRSCP deltaQhcs;
} NhuCellSelectReselectInfo_v590ext;

typedef struct NhuCellSelectReselectInfoPCHFACH_v5b0ext
{
 TknPres pres;
 NhuQ_Hyst_S_Fine q_Hyst_l_S_PCH;
 NhuQ_Hyst_S_Fine q_Hyst_l_S_FACH;
 NhuQ_Hyst_S_Fine q_Hyst_2_S_PCH;
 NhuQ_Hyst_S_Fine q_Hyst_2_S_FACH;
 NhuT_Reselection_S t_Reselection_S_PCH;
 NhuT_Reselection_S_Fine t_Reselection_S_FACH;
} NhuCellSelectReselectInfoPCHFACH_v5b0ext;

typedef struct NhuCellSelectReselectInfoTreselectionScaling_v5c0ext
{
 TknPres pres;
 NhuT_CRMax non_HCS_t_CR_Max;
 NhuSpeedDependentScalingFactor speedDependentScalingFactor;
 NhuTreselectionScalingFactor interFrequencyTreselectionScalingFactor;
 NhuTreselectionScalingFactor interRATTreselectionScalingFactor;
} NhuCellSelectReselectInfoTreselectionScaling_v5c0ext;


typedef TknU32 NhuInterFreqCellID;

typedef struct NhuCellsForInterFreqMeasLst
{
 TknU16 noComp;
 NhuInterFreqCellID *member;
}NhuCellsForInterFreqMeasLst;


typedef TknU32 NhuInterRATCellID;

typedef struct NhuCellsForInterRATMeasLst
{
 TknU16 noComp;
 NhuInterRATCellID *member;
}NhuCellsForInterRATMeasLst;


typedef TknU32 NhuIntraFreqCellID;

typedef struct NhuCellsForIntraFreqMeasLst
{
 TknU16 noComp;
 NhuIntraFreqCellID *member;
}NhuCellsForIntraFreqMeasLst;


typedef TknU32 NhuIntraFreqCellIDOnSecULFreq;

typedef struct NhuCellsForIntraFreqMeasLstOnSecULFreq
{
 TknU16 noComp;
 NhuIntraFreqCellIDOnSecULFreq *member;
}NhuCellsForIntraFreqMeasLstOnSecULFreq;

typedef struct NhuCellToReport
{
 TknPres pres;
 NhuBSICReported bsicReported;
} NhuCellToReport;

typedef struct NhuCellToReportLst
{
 TknU16 noComp;
 NhuCellToReport *member;
}NhuCellToReportLst;


typedef TknStrBSXL NhuCNAVclockModelcnavToc;

typedef TknStrBSXL NhuCNAVclockModelcnavTop;

typedef TknStrBSXL NhuCNAVclockModelcnavURA0;

typedef TknStrBSXL NhuCNAVclockModelcnavURA1;

typedef TknStrBSXL NhuCNAVclockModelcnavURA2;

typedef TknStrBSXL NhuCNAVclockModelcnavAf2;

typedef TknStrBSXL NhuCNAVclockModelcnavAf1;

typedef TknStrBSXL NhuCNAVclockModelcnavAf0;

typedef TknStrBSXL NhuCNAVclockModelcnavTgd;

typedef TknStrBSXL NhuCNAVclockModelcnavISCl1cp;

typedef TknStrBSXL NhuCNAVclockModelcnavISCl1cd;

typedef TknStrBSXL NhuCNAVclockModelcnavISCl1ca;

typedef TknStrBSXL NhuCNAVclockModelcnavISCl2c;

typedef TknStrBSXL NhuCNAVclockModelcnavISCl5i5;

typedef TknStrBSXL NhuCNAVclockModelcnavISCl5q5;
typedef struct NhuCNAVclockModel
{
 TknPres pres;
 NhuCNAVclockModelcnavToc cnavToc;
 NhuCNAVclockModelcnavTop cnavTop;
 NhuCNAVclockModelcnavURA0 cnavURA0;
 NhuCNAVclockModelcnavURA1 cnavURA1;
 NhuCNAVclockModelcnavURA2 cnavURA2;
 NhuCNAVclockModelcnavAf2 cnavAf2;
 NhuCNAVclockModelcnavAf1 cnavAf1;
 NhuCNAVclockModelcnavAf0 cnavAf0;
 NhuCNAVclockModelcnavTgd cnavTgd;
 NhuCNAVclockModelcnavISCl1cp cnavISCl1cp;
 NhuCNAVclockModelcnavISCl1cd cnavISCl1cd;
 NhuCNAVclockModelcnavISCl1ca cnavISCl1ca;
 NhuCNAVclockModelcnavISCl2c cnavISCl2c;
 NhuCNAVclockModelcnavISCl5i5 cnavISCl5i5;
 NhuCNAVclockModelcnavISCl5q5 cnavISCl5q5;
} NhuCNAVclockModel;


typedef TknU32 NhuCSGCellInfomodeSpecificInfofddnumberOfPSCs;

typedef struct NhuCSGCellInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info startPSC;
 NhuCSGCellInfomodeSpecificInfofddnumberOfPSCs numberOfPSCs;
} NhuCSGCellInfomodeSpecificInfofdd;

typedef struct NhuCSGCellInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCSGCellInfomodeSpecificInfofdd fdd;
 } val;
} NhuCSGCellInfomodeSpecificInfo;

typedef struct NhuCSGCellInfo
{
 TknPres pres;
 NhuCSGCellInfomodeSpecificInfo modeSpecificInfo;
} NhuCSGCellInfo;

typedef struct NhuCSGCellInfoLst
{
 TknU16 noComp;
 NhuCSGCellInfo *member;
}NhuCSGCellInfoLst;

typedef struct NhuCSGInterFreqCellInfo
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuCSGCellInfoLst cSGInterFreqCellInfoLstperFreq;
} NhuCSGInterFreqCellInfo;

typedef struct NhuCSGInterFreqCellInfoLst
{
 TknU16 noComp;
 NhuCSGInterFreqCellInfo *member;
}NhuCSGInterFreqCellInfoLst;


typedef NhuCSGCellInfoLst NhuCSGIntraFreqCellInfoLst;

typedef enum enumNhuCSGProximityDetectionuTRACSGProximityDetec
{
 NhuCSGProximityDetectionuTRACSGProximityDetecenableEnum
} EnumNhuCSGProximityDetectionuTRACSGProximityDetec;
typedef TknU32 NhuCSGProximityDetectionuTRACSGProximityDetec;


typedef enum enumNhuCSGProximityDetectione_UTRACSGProximityDetec
{
 NhuCSGProximityDetectione_UTRACSGProximityDetecenableEnum
} EnumNhuCSGProximityDetectione_UTRACSGProximityDetec;
typedef TknU32 NhuCSGProximityDetectione_UTRACSGProximityDetec;

typedef struct NhuCSGProximityDetection
{
 TknPres pres;
 NhuCSGProximityDetectionuTRACSGProximityDetec uTRACSGProximityDetec;
 NhuCSGProximityDetectione_UTRACSGProximityDetec e_UTRACSGProximityDetec;
} NhuCSGProximityDetection;


typedef enum enumNhuCSGProximityIndcSGproximityInd
{
 NhuCSGProximityIndcSGproximityIndenteringEnum,
 NhuCSGProximityIndcSGproximityIndleavingEnum
} EnumNhuCSGProximityIndcSGproximityInd;
typedef TknU32 NhuCSGProximityIndcSGproximityInd;

typedef struct NhuCSGProximityIndradioAccessTechnologyuTRA
{
 TknPres pres;
 NhuFrequencyInfo cSGFrequencyInfoUTRA;
} NhuCSGProximityIndradioAccessTechnologyuTRA;

typedef struct NhuCSGProximityIndradioAccessTechnologye_UTRA
{
 TknPres pres;
 NhuEARFCN cSGFrequencyInfoEUTRA;
} NhuCSGProximityIndradioAccessTechnologye_UTRA;

typedef struct NhuCSGProximityIndradioAccessTechnology
{
 TknU8 choice;
 union {
  NhuCSGProximityIndradioAccessTechnologyuTRA uTRA;
  NhuCSGProximityIndradioAccessTechnologye_UTRA e_UTRA;
 } val;
} NhuCSGProximityIndradioAccessTechnology;

typedef struct NhuCSGProximityInd
{
 TknPres pres;
 NhuCSGProximityIndcSGproximityInd cSGproximityInd;
 NhuCSGProximityIndradioAccessTechnology radioAccessTechnology;
} NhuCSGProximityInd;


typedef TknStrBSXL NhuDataBitAssistancedata_bits;
typedef struct NhuDataBitAssistance
{
 TknPres pres;
 NhuGANSS_Signal_Id ganss_signal_id;
 NhuDataBitAssistancedata_bits data_bits;
} NhuDataBitAssistance;

typedef struct NhuDataBitAssistanceSgnLst
{
 TknU16 noComp;
 NhuDataBitAssistance *member;
}NhuDataBitAssistanceSgnLst;


typedef TknU32 NhuDataBitAssistanceSatsatID;

typedef struct NhuDataBitAssistanceSat
{
 TknPres pres;
 NhuDataBitAssistanceSatsatID satID;
 NhuDataBitAssistanceSgnLst dataBitAssistanceSgnLst;
} NhuDataBitAssistanceSat;

typedef struct NhuDataBitAssistanceLst
{
 TknU16 noComp;
 NhuDataBitAssistanceSat *member;
}NhuDataBitAssistanceLst;


typedef TknS32 NhuDeltaPRC;


typedef TknS32 NhuDeltaRRC;


typedef TknStrBSXL NhuDeltaUT1b1;

typedef TknStrBSXL NhuDeltaUT1b2;
typedef struct NhuDeltaUT1
{
 TknPres pres;
 NhuDeltaUT1b1 b1;
 NhuDeltaUT1b2 b2;
} NhuDeltaUT1;


typedef enum enumNhuGANSS_Status_Health
{
 NhuGANSS_Status_Healthudre_scale_1dot0Enum,
 NhuGANSS_Status_Healthudre_scale_0dot75Enum,
 NhuGANSS_Status_Healthudre_scale_0dot5Enum,
 NhuGANSS_Status_Healthudre_scale_0dot3Enum,
 NhuGANSS_Status_Healthudre_scale_0dot2Enum,
 NhuGANSS_Status_Healthudre_scale_0dot1Enum,
 NhuGANSS_Status_Healthno_dataEnum,
 NhuGANSS_Status_Healthinvalid_dataEnum
} EnumNhuGANSS_Status_Health;
typedef TknU32 NhuGANSS_Status_Health;


typedef enum enumNhuUDRE
{
 NhuUDRElessThan1Enum,
 NhuUDREbetween1_and_4Enum,
 NhuUDREbetween4_and_8Enum,
 NhuUDREover8Enum
} EnumNhuUDRE;
typedef TknU32 NhuUDRE;


typedef TknU32 NhuDGANSSSignalInfosatId;


typedef TknStrBSXL NhuDGANSSSignalInfoiode_dganss;

typedef TknS32 NhuDGANSSSignalInfoganss_prc;


typedef TknS32 NhuDGANSSSignalInfoganss_rrc;

typedef struct NhuDGANSSSignalInfo
{
 TknPres pres;
 NhuDGANSSSignalInfosatId satId;
 NhuDGANSSSignalInfoiode_dganss iode_dganss;
 NhuUDRE udre;
 NhuDGANSSSignalInfoganss_prc ganss_prc;
 NhuDGANSSSignalInfoganss_rrc ganss_rrc;
} NhuDGANSSSignalInfo;

typedef struct NhuDGANSSSignalInfoLst
{
 TknU16 noComp;
 NhuDGANSSSignalInfo *member;
}NhuDGANSSSignalInfoLst;

typedef struct NhuDGANSSInfo
{
 TknPres pres;
 NhuGANSS_Signal_Id ganssSignalId;
 NhuGANSS_Status_Health ganssStatusHealth;
 NhuDGANSSSignalInfoLst dgansssignalInfoLst;
} NhuDGANSSInfo;


typedef enum enumNhuUDREGrowthRate
{
 NhuUDREGrowthRategrowth_1_5Enum,
 NhuUDREGrowthRategrowth_2Enum,
 NhuUDREGrowthRategrowth_4Enum,
 NhuUDREGrowthRategrowth_6Enum,
 NhuUDREGrowthRategrowth_8Enum,
 NhuUDREGrowthRategrowth_10Enum,
 NhuUDREGrowthRategrowth_12Enum,
 NhuUDREGrowthRategrowth_16Enum
} EnumNhuUDREGrowthRate;
typedef TknU32 NhuUDREGrowthRate;


typedef enum enumNhuUDREValidityTime
{
 NhuUDREValidityTimeval_20secEnum,
 NhuUDREValidityTimeval_40secEnum,
 NhuUDREValidityTimeval_80secEnum,
 NhuUDREValidityTimeval_160secEnum,
 NhuUDREValidityTimeval_320secEnum,
 NhuUDREValidityTimeval_640secEnum,
 NhuUDREValidityTimeval_1280secEnum,
 NhuUDREValidityTimeval_2560secEnum
} EnumNhuUDREValidityTime;
typedef TknU32 NhuUDREValidityTime;


typedef TknU32 NhuDGANSSSignalInfo_r9satId;


typedef TknStrBSXL NhuDGANSSSignalInfo_r9iode_dganss;

typedef TknS32 NhuDGANSSSignalInfo_r9ganss_prc;


typedef TknS32 NhuDGANSSSignalInfo_r9ganss_rrc;

typedef struct NhuDGANSSSignalInfo_r9
{
 TknPres pres;
 NhuDGANSSSignalInfo_r9satId satId;
 NhuDGANSSSignalInfo_r9iode_dganss iode_dganss;
 NhuUDRE udre;
 NhuDGANSSSignalInfo_r9ganss_prc ganss_prc;
 NhuDGANSSSignalInfo_r9ganss_rrc ganss_rrc;
 NhuUDREGrowthRate udreGrowthRate;
 NhuUDREValidityTime udreValidityTime;
} NhuDGANSSSignalInfo_r9;

typedef struct NhuDGANSSSignalInfoLst_r9
{
 TknU16 noComp;
 NhuDGANSSSignalInfo_r9 *member;
}NhuDGANSSSignalInfoLst_r9;

typedef struct NhuDGANSSInfo_r9
{
 TknPres pres;
 NhuGANSS_Signal_Id ganssSignalId;
 NhuGANSS_Status_Health ganssStatusHealth;
 NhuDGANSSSignalInfoLst_r9 dgansssignalInfoLst;
} NhuDGANSSInfo_r9;

typedef struct NhuDGANSSSignalInfo_v920ext
{
 TknPres pres;
 NhuUDREGrowthRate udreGrowthRate;
 NhuUDREValidityTime udreValidityTime;
} NhuDGANSSSignalInfo_v920ext;

typedef struct NhuDGANSSSignalInfoLst_v920ext
{
 TknU16 noComp;
 NhuDGANSSSignalInfo_v920ext *member;
}NhuDGANSSSignalInfoLst_v920ext;

typedef struct NhuDGANSSInfo_v920ext
{
 TknPres pres;
 NhuDGANSSSignalInfoLst_v920ext dgansssignalInfoLst;
} NhuDGANSSInfo_v920ext;

typedef struct NhuDGANSSInfoLst
{
 TknU16 noComp;
 NhuDGANSSInfo *member;
}NhuDGANSSInfoLst;

typedef struct NhuDGANSSInfoLst_r9
{
 TknU16 noComp;
 NhuDGANSSInfo_r9 *member;
}NhuDGANSSInfoLst_r9;

typedef struct NhuDGANSSInfoLst_v920ext
{
 TknU16 noComp;
 NhuDGANSSInfo_v920ext *member;
}NhuDGANSSInfoLst_v920ext;


typedef TknStrBSXL NhuDGANSS_Sig_Id_Req;

typedef TknU32 NhuIODE;


typedef TknS32 NhuPRC;


typedef TknS32 NhuRRC;

typedef struct NhuDGPS_CorrectionSatInfo
{
 TknPres pres;
 NhuSatID satID;
 NhuIODE iode;
 NhuUDRE udre;
 NhuPRC prc;
 NhuRRC rrc;
 NhuDeltaPRC dummy1;
 NhuDeltaRRC dummy2;
 NhuDeltaPRC dummy3;
 NhuDeltaRRC dummy4;
} NhuDGPS_CorrectionSatInfo;

typedef struct NhuDGPS_CorrectionSatInfo_r9
{
 TknPres pres;
 NhuSatID satID;
 NhuIODE iode;
 NhuUDRE udre;
 NhuPRC prc;
 NhuRRC rrc;
 NhuUDREGrowthRate udreGrowthRate;
 NhuUDREValidityTime udreValidityTime;
} NhuDGPS_CorrectionSatInfo_r9;

typedef struct NhuDGPS_CorrectionSatInfo_v920ext
{
 TknPres pres;
 NhuUDREGrowthRate udreGrowthRate;
 NhuUDREValidityTime udreValidityTime;
} NhuDGPS_CorrectionSatInfo_v920ext;

typedef struct NhuDGPS_CorrectionSatInfoLst
{
 TknU16 noComp;
 NhuDGPS_CorrectionSatInfo *member;
}NhuDGPS_CorrectionSatInfoLst;

typedef struct NhuDGPS_CorrectionSatInfoLst_r9
{
 TknU16 noComp;
 NhuDGPS_CorrectionSatInfo_r9 *member;
}NhuDGPS_CorrectionSatInfoLst_r9;

typedef struct NhuDGPS_CorrectionSatInfoLst_v920ext
{
 TknU16 noComp;
 NhuDGPS_CorrectionSatInfo_v920ext *member;
}NhuDGPS_CorrectionSatInfoLst_v920ext;


typedef enum enumNhuDiffCorrectionStatus
{
 NhuDiffCorrectionStatusudre_1_0Enum,
 NhuDiffCorrectionStatusudre_0_75Enum,
 NhuDiffCorrectionStatusudre_0_5Enum,
 NhuDiffCorrectionStatusudre_0_3Enum,
 NhuDiffCorrectionStatusudre_0_2Enum,
 NhuDiffCorrectionStatusudre_0_1Enum,
 NhuDiffCorrectionStatusnoDataEnum,
 NhuDiffCorrectionStatusinvalidDataEnum
} EnumNhuDiffCorrectionStatus;
typedef TknU32 NhuDiffCorrectionStatus;


typedef enum enumNhuEllipsoidPointlatitudeSign
{
 NhuEllipsoidPointlatitudeSignnorthEnum,
 NhuEllipsoidPointlatitudeSignsouthEnum
} EnumNhuEllipsoidPointlatitudeSign;
typedef TknU32 NhuEllipsoidPointlatitudeSign;


typedef TknU32 NhuEllipsoidPointlatitude;


typedef TknS32 NhuEllipsoidPointlongitude;

typedef struct NhuEllipsoidPoint
{
 TknPres pres;
 NhuEllipsoidPointlatitudeSign latitudeSign;
 NhuEllipsoidPointlatitude latitude;
 NhuEllipsoidPointlongitude longitude;
} NhuEllipsoidPoint;


typedef enum enumNhuEllipsoidPointAltitudelatitudeSign
{
 NhuEllipsoidPointAltitudelatitudeSignnorthEnum,
 NhuEllipsoidPointAltitudelatitudeSignsouthEnum
} EnumNhuEllipsoidPointAltitudelatitudeSign;
typedef TknU32 NhuEllipsoidPointAltitudelatitudeSign;


typedef TknU32 NhuEllipsoidPointAltitudelatitude;


typedef TknS32 NhuEllipsoidPointAltitudelongitude;


typedef enum enumNhuEllipsoidPointAltitudealtitudeDirection
{
 NhuEllipsoidPointAltitudealtitudeDirectionheightEnum,
 NhuEllipsoidPointAltitudealtitudeDirectiondepthEnum
} EnumNhuEllipsoidPointAltitudealtitudeDirection;
typedef TknU32 NhuEllipsoidPointAltitudealtitudeDirection;


typedef TknU32 NhuEllipsoidPointAltitudealtitude;

typedef struct NhuEllipsoidPointAltitude
{
 TknPres pres;
 NhuEllipsoidPointAltitudelatitudeSign latitudeSign;
 NhuEllipsoidPointAltitudelatitude latitude;
 NhuEllipsoidPointAltitudelongitude longitude;
 NhuEllipsoidPointAltitudealtitudeDirection altitudeDirection;
 NhuEllipsoidPointAltitudealtitude altitude;
} NhuEllipsoidPointAltitude;


typedef enum enumNhuEllipsoidPointAltitudeEllipsoidelatitudeSign
{
 NhuEllipsoidPointAltitudeEllipsoidelatitudeSignnorthEnum,
 NhuEllipsoidPointAltitudeEllipsoidelatitudeSignsouthEnum
} EnumNhuEllipsoidPointAltitudeEllipsoidelatitudeSign;
typedef TknU32 NhuEllipsoidPointAltitudeEllipsoidelatitudeSign;


typedef TknU32 NhuEllipsoidPointAltitudeEllipsoidelatitude;


typedef TknS32 NhuEllipsoidPointAltitudeEllipsoidelongitude;


typedef enum enumNhuEllipsoidPointAltitudeEllipsoidealtitudeDirection
{
 NhuEllipsoidPointAltitudeEllipsoidealtitudeDirectionheightEnum,
 NhuEllipsoidPointAltitudeEllipsoidealtitudeDirectiondepthEnum
} EnumNhuEllipsoidPointAltitudeEllipsoidealtitudeDirection;
typedef TknU32 NhuEllipsoidPointAltitudeEllipsoidealtitudeDirection;


typedef TknU32 NhuEllipsoidPointAltitudeEllipsoidealtitude;


typedef TknU32 NhuEllipsoidPointAltitudeEllipsoideuncertaintySemiMajor;


typedef TknU32 NhuEllipsoidPointAltitudeEllipsoideuncertaintySemiMinor;


typedef TknU32 NhuEllipsoidPointAltitudeEllipsoideorientationMajorAxis;


typedef TknU32 NhuEllipsoidPointAltitudeEllipsoideuncertaintyAltitude;


typedef TknU32 NhuEllipsoidPointAltitudeEllipsoideconfidence;

typedef struct NhuEllipsoidPointAltitudeEllipsoide
{
 TknPres pres;
 NhuEllipsoidPointAltitudeEllipsoidelatitudeSign latitudeSign;
 NhuEllipsoidPointAltitudeEllipsoidelatitude latitude;
 NhuEllipsoidPointAltitudeEllipsoidelongitude longitude;
 NhuEllipsoidPointAltitudeEllipsoidealtitudeDirection altitudeDirection;
 NhuEllipsoidPointAltitudeEllipsoidealtitude altitude;
 NhuEllipsoidPointAltitudeEllipsoideuncertaintySemiMajor uncertaintySemiMajor;
 NhuEllipsoidPointAltitudeEllipsoideuncertaintySemiMinor uncertaintySemiMinor;
 NhuEllipsoidPointAltitudeEllipsoideorientationMajorAxis orientationMajorAxis;
 NhuEllipsoidPointAltitudeEllipsoideuncertaintyAltitude uncertaintyAltitude;
 NhuEllipsoidPointAltitudeEllipsoideconfidence confidence;
} NhuEllipsoidPointAltitudeEllipsoide;


typedef enum enumNhuEllipsoidPointUncertCirclelatitudeSign
{
 NhuEllipsoidPointUncertCirclelatitudeSignnorthEnum,
 NhuEllipsoidPointUncertCirclelatitudeSignsouthEnum
} EnumNhuEllipsoidPointUncertCirclelatitudeSign;
typedef TknU32 NhuEllipsoidPointUncertCirclelatitudeSign;


typedef TknU32 NhuEllipsoidPointUncertCirclelatitude;


typedef TknS32 NhuEllipsoidPointUncertCirclelongitude;


typedef TknU32 NhuEllipsoidPointUncertCircleuncertaintyCode;

typedef struct NhuEllipsoidPointUncertCircle
{
 TknPres pres;
 NhuEllipsoidPointUncertCirclelatitudeSign latitudeSign;
 NhuEllipsoidPointUncertCirclelatitude latitude;
 NhuEllipsoidPointUncertCirclelongitude longitude;
 NhuEllipsoidPointUncertCircleuncertaintyCode uncertaintyCode;
} NhuEllipsoidPointUncertCircle;


typedef enum enumNhuEllipsoidPointUncertEllipselatitudeSign
{
 NhuEllipsoidPointUncertEllipselatitudeSignnorthEnum,
 NhuEllipsoidPointUncertEllipselatitudeSignsouthEnum
} EnumNhuEllipsoidPointUncertEllipselatitudeSign;
typedef TknU32 NhuEllipsoidPointUncertEllipselatitudeSign;


typedef TknU32 NhuEllipsoidPointUncertEllipselatitude;


typedef TknS32 NhuEllipsoidPointUncertEllipselongitude;


typedef TknU32 NhuEllipsoidPointUncertEllipseuncertaintySemiMajor;


typedef TknU32 NhuEllipsoidPointUncertEllipseuncertaintySemiMinor;


typedef TknU32 NhuEllipsoidPointUncertEllipseorientationMajorAxis;


typedef TknU32 NhuEllipsoidPointUncertEllipseconfidence;

typedef struct NhuEllipsoidPointUncertEllipse
{
 TknPres pres;
 NhuEllipsoidPointUncertEllipselatitudeSign latitudeSign;
 NhuEllipsoidPointUncertEllipselatitude latitude;
 NhuEllipsoidPointUncertEllipselongitude longitude;
 NhuEllipsoidPointUncertEllipseuncertaintySemiMajor uncertaintySemiMajor;
 NhuEllipsoidPointUncertEllipseuncertaintySemiMinor uncertaintySemiMinor;
 NhuEllipsoidPointUncertEllipseorientationMajorAxis orientationMajorAxis;
 NhuEllipsoidPointUncertEllipseconfidence confidence;
} NhuEllipsoidPointUncertEllipse;


typedef enum enumNhuEnvironmentCharacterisation
{
 NhuEnvironmentCharacterisationpossibleHeavyMultipathNLOSEnum,
 NhuEnvironmentCharacterisationlightMultipathLOSEnum,
 NhuEnvironmentCharacterisationnotDefinedEnum,
 NhuEnvironmentCharacterisationspareEnum
} EnumNhuEnvironmentCharacterisation;
typedef TknU32 NhuEnvironmentCharacterisation;

typedef struct NhuEutra_EventResultreportedCells
{
 TknU16 noComp;
 NhuEUTRA_PhysicalCellIdentity *member;
}NhuEutra_EventResultreportedCells;

typedef struct NhuEutra_EventResult
{
 TknPres pres;
 NhuEARFCN earfcn;
 NhuEutra_EventResultreportedCells reportedCells;
} NhuEutra_EventResult;

typedef struct NhuEutra_EventResultLst
{
 TknU16 noComp;
 NhuEutra_EventResult *member;
}NhuEutra_EventResultLst;


typedef enum enumNhuEventIDInterRAT
{
 NhuEventIDInterRATe3aEnum,
 NhuEventIDInterRATe3bEnum,
 NhuEventIDInterRATe3cEnum,
 NhuEventIDInterRATe3dEnum
} EnumNhuEventIDInterRAT;
typedef TknU32 NhuEventIDInterRAT;

typedef struct NhuEUTRA_EventResults
{
 TknPres pres;
 NhuEventIDInterRAT eventID;
 NhuEutra_EventResultLst eutra_EventResultsLst;
} NhuEUTRA_EventResults;


typedef enum enumNhuEUTRA_MeasurementBandwidth
{
 NhuEUTRA_MeasurementBandwidthmbw6Enum,
 NhuEUTRA_MeasurementBandwidthmbw15Enum,
 NhuEUTRA_MeasurementBandwidthmbw25Enum,
 NhuEUTRA_MeasurementBandwidthmbw50Enum,
 NhuEUTRA_MeasurementBandwidthmbw75Enum,
 NhuEUTRA_MeasurementBandwidthmbw100Enum
} EnumNhuEUTRA_MeasurementBandwidth;
typedef TknU32 NhuEUTRA_MeasurementBandwidth;


typedef TknU32 NhuEUTRA_FrequencyAndPriorityInfopriority;


typedef TknS32 NhuEUTRA_FrequencyAndPriorityInfoqRxLevMinEUTRA;


typedef TknU32 NhuEUTRA_FrequencyAndPriorityInfothreshXhigh;


typedef TknU32 NhuEUTRA_FrequencyAndPriorityInfothreshXlow;


typedef TknU8 NhuEUTRA_FrequencyAndPriorityInfoeutraDetection;

typedef struct NhuEUTRA_FrequencyAndPriorityInfo
{
 TknPres pres;
 NhuEARFCN earfcn;
 NhuEUTRA_MeasurementBandwidth measurementBandwidth;
 NhuEUTRA_FrequencyAndPriorityInfopriority priority;
 NhuEUTRA_FrequencyAndPriorityInfoqRxLevMinEUTRA qRxLevMinEUTRA;
 NhuEUTRA_FrequencyAndPriorityInfothreshXhigh threshXhigh;
 NhuEUTRA_FrequencyAndPriorityInfothreshXlow threshXlow;
 NhuEUTRA_BlacklistedCellPerFreqLst eutra_blackLstedCellLst;
 NhuEUTRA_FrequencyAndPriorityInfoeutraDetection eutraDetection;
} NhuEUTRA_FrequencyAndPriorityInfo;


typedef TknS32 NhuEUTRA_FrequencyAndPriorityInfo_v920extqqualMinEUTRA;


typedef TknU32 NhuEUTRA_FrequencyAndPriorityInfo_v920extthreshXhigh2;


typedef TknU32 NhuEUTRA_FrequencyAndPriorityInfo_v920extthreshXlow2;

typedef struct NhuEUTRA_FrequencyAndPriorityInfo_v920ext
{
 TknPres pres;
 NhuEUTRA_FrequencyAndPriorityInfo_v920extqqualMinEUTRA qqualMinEUTRA;
 NhuEUTRA_FrequencyAndPriorityInfo_v920extthreshXhigh2 threshXhigh2;
 NhuEUTRA_FrequencyAndPriorityInfo_v920extthreshXlow2 threshXlow2;
} NhuEUTRA_FrequencyAndPriorityInfo_v920ext;

typedef struct NhuEUTRA_FrequencyAndPriorityInfoLst
{
 TknU16 noComp;
 NhuEUTRA_FrequencyAndPriorityInfo *member;
}NhuEUTRA_FrequencyAndPriorityInfoLst;

typedef struct NhuEUTRA_FrequencyAndPriorityInfoLst_v920ext
{
 TknU16 noComp;
 NhuEUTRA_FrequencyAndPriorityInfo_v920ext *member;
}NhuEUTRA_FrequencyAndPriorityInfoLst_v920ext;

typedef struct NhuEUTRA_FrequencyRemovalremoveSomeFrequencies
{
 TknU16 noComp;
 NhuEARFCN *member;
}NhuEUTRA_FrequencyRemovalremoveSomeFrequencies;

typedef struct NhuEUTRA_FrequencyRemoval
{
 TknU8 choice;
 union {
  NhuEUTRA_FrequencyRemovalremoveSomeFrequencies removeSomeFrequencies;
 } val;
} NhuEUTRA_FrequencyRemoval;

typedef struct NhuEUTRA_FrequencyInfo
{
 TknPres pres;
 NhuEARFCN earfcn;
 NhuEUTRA_MeasurementBandwidth measurementBandwidth;
 NhuEUTRA_BlacklistedCellPerFreqLst eutra_blackLstedCellLst;
} NhuEUTRA_FrequencyInfo;

typedef struct NhuEUTRA_FrequencyInfoLst
{
 TknU16 noComp;
 NhuEUTRA_FrequencyInfo *member;
}NhuEUTRA_FrequencyInfoLst;

typedef struct NhuEUTRA_FrequencyLst
{
 TknPres pres;
 NhuEUTRA_FrequencyRemoval eutraFrequencyRemoval;
 NhuEUTRA_FrequencyInfoLst eutraNewFrequencies;
} NhuEUTRA_FrequencyLst;

typedef struct NhuEUTRA_SIAcquisition
{
 TknPres pres;
 NhuEARFCN earfcn;
 NhuEUTRA_PhysicalCellIdentity physicalCellIdentity;
} NhuEUTRA_SIAcquisition;

typedef struct NhuEUTRA_FrequencyLst_r9
{
 TknPres pres;
 NhuEUTRA_FrequencyRemoval eutraFrequencyRemoval;
 NhuEUTRA_FrequencyInfoLst eutraNewFrequencies;
 NhuEUTRA_SIAcquisition eutraSIAcquisition;
} NhuEUTRA_FrequencyLst_r9;


typedef TknU32 NhuEUTRA_MeasuredCellsrSRP;


typedef TknU32 NhuEUTRA_MeasuredCellsrSRQ;

typedef struct NhuEUTRA_MeasuredCells
{
 TknPres pres;
 NhuEUTRA_PhysicalCellIdentity physicalCellIdentity;
 NhuEUTRA_MeasuredCellsrSRP rSRP;
 NhuEUTRA_MeasuredCellsrSRQ rSRQ;
} NhuEUTRA_MeasuredCells;

typedef struct NhuEutra_MeasuredResultmeasuredEUTRACells
{
 TknU16 noComp;
 NhuEUTRA_MeasuredCells *member;
}NhuEutra_MeasuredResultmeasuredEUTRACells;

typedef struct NhuEutra_MeasuredResult
{
 TknPres pres;
 NhuEARFCN earfcn;
 NhuEutra_MeasuredResultmeasuredEUTRACells measuredEUTRACells;
} NhuEutra_MeasuredResult;

typedef struct NhuEutra_MeasuredResultLst
{
 TknU16 noComp;
 NhuEutra_MeasuredResult *member;
}NhuEutra_MeasuredResultLst;

typedef struct NhuEUTRA_MeasuredResults
{
 TknPres pres;
 NhuEutra_MeasuredResultLst eutraMeasuredResultLst;
} NhuEUTRA_MeasuredResults;


typedef TknStrBSXL NhuEUTRA_SIacquisitionResultscgiInfocellIdentity;

typedef TknStrBSXL NhuEUTRA_SIacquisitionResultscgiInfotrackingAreaCode;
typedef struct NhuEUTRA_SIacquisitionResultscgiInfo
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuEUTRA_SIacquisitionResultscgiInfocellIdentity cellIdentity;
 NhuEUTRA_SIacquisitionResultscgiInfotrackingAreaCode trackingAreaCode;
} NhuEUTRA_SIacquisitionResultscgiInfo;


typedef enum enumNhuEUTRA_SIacquisitionResultscsgMemberInd
{
 NhuEUTRA_SIacquisitionResultscsgMemberIndmemberEnum
} EnumNhuEUTRA_SIacquisitionResultscsgMemberInd;
typedef TknU32 NhuEUTRA_SIacquisitionResultscsgMemberInd;

typedef struct NhuEUTRA_SIacquisitionResults
{
 TknPres pres;
 NhuEUTRA_SIacquisitionResultscgiInfo cgiInfo;
 NhuCSG_Identity csgIdentity;
 NhuEUTRA_SIacquisitionResultscsgMemberInd csgMemberInd;
} NhuEUTRA_SIacquisitionResults;

typedef struct NhuEUTRA_MeasuredCells_v920ext
{
 TknPres pres;
 NhuEUTRA_SIacquisitionResults eutraSIacquisitionResults;
} NhuEUTRA_MeasuredCells_v920ext;

typedef struct NhuEutra_MeasuredResult_v920extmeasuredEUTRACells_v920ext
{
 TknU16 noComp;
 NhuEUTRA_MeasuredCells_v920ext *member;
}NhuEutra_MeasuredResult_v920extmeasuredEUTRACells_v920ext;

typedef struct NhuEutra_MeasuredResult_v920ext
{
 TknPres pres;
 NhuEutra_MeasuredResult_v920extmeasuredEUTRACells_v920ext measuredEUTRACells_v920ext;
} NhuEutra_MeasuredResult_v920ext;

typedef struct NhuEutra_MeasuredResultLst_v920ext
{
 TknU16 noComp;
 NhuEutra_MeasuredResult_v920ext *member;
}NhuEutra_MeasuredResultLst_v920ext;

typedef struct NhuEUTRA_MeasuredResults_v920ext
{
 TknPres pres;
 NhuEutra_MeasuredResultLst_v920ext eutraMeasuredResultLst_v920ext;
} NhuEUTRA_MeasuredResults_v920ext;

typedef struct NhuForbiddenAffectCell_r4
{
 TknU8 choice;
 union {
  NhuPrimaryCPICH_Info fdd;
  NhuPrimaryCCPCH_Info_r4 tdd;
 } val;
} NhuForbiddenAffectCell_r4;

typedef struct NhuForbiddenAffectCellLst_r4
{
 TknU16 noComp;
 NhuForbiddenAffectCell_r4 *member;
}NhuForbiddenAffectCellLst_r4;

typedef struct NhuEvent1a_r4
{
 TknPres pres;
 NhuTrgCondition2 triggeringCondition;
 NhuRprtngRange reportingRange;
 NhuForbiddenAffectCellLst_r4 forbiddenAffectCellLst;
 NhuW w;
 NhuReportDeactivationThreshold reportDeactivationThreshold;
 NhuRprtngAmount reportingAmount;
 NhuRprtngInterval reportingInterval;
} NhuEvent1a_r4;

typedef struct NhuForbiddenAffectCellOnSecULFreq
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH;
} NhuForbiddenAffectCellOnSecULFreq;

typedef struct NhuForbiddenAffectCellLstOnSecULFreq
{
 TknU16 noComp;
 NhuForbiddenAffectCellOnSecULFreq *member;
}NhuForbiddenAffectCellLstOnSecULFreq;

typedef struct NhuEvent1a_OnSecUlFreq_r9
{
 TknPres pres;
 NhuTrgCondition2 triggeringCondition;
 NhuRprtngRange reportingRange;
 NhuForbiddenAffectCellLstOnSecULFreq forbiddenAffectCellLstOnSecULFreq;
 NhuW w;
 NhuReportDeactivationThreshold reportDeactivationThreshold;
 NhuRprtngAmount reportingAmount;
 NhuRprtngInterval reportingInterval;
} NhuEvent1a_OnSecUlFreq_r9;

typedef struct NhuEvent1b_r4
{
 TknPres pres;
 NhuTrgCondition1 triggeringCondition;
 NhuRprtngRange reportingRange;
 NhuForbiddenAffectCellLst_r4 forbiddenAffectCellLst;
 NhuW w;
} NhuEvent1b_r4;

typedef struct NhuPeriodicRprtngInfo_1b
{
 TknPres pres;
 NhuRprtngAmount reportingAmount;
 NhuRprtngInterval reportingInterval;
} NhuPeriodicRprtngInfo_1b;

typedef struct NhuEvent1b_r7
{
 TknPres pres;
 NhuTrgCondition1 triggeringCondition;
 NhuRprtngRange reportingRange;
 NhuForbiddenAffectCellLst_r4 forbiddenAffectCellLst;
 NhuW w;
 NhuPeriodicRprtngInfo_1b periodicRprtngInfo_1b;
} NhuEvent1b_r7;

typedef struct NhuEvent1b_OnSecUlFreq_r9
{
 TknPres pres;
 NhuTrgCondition1 triggeringCondition;
 NhuRprtngRange reportingRange;
 NhuForbiddenAffectCellLstOnSecULFreq forbiddenAffectCellLstOnSecULFreq;
 NhuW w;
 NhuPeriodicRprtngInfo_1b periodicRprtngInfo_1b;
} NhuEvent1b_OnSecUlFreq_r9;


typedef TknU8 NhuEvent1duseCIO;

typedef struct NhuEvent1d
{
 TknPres pres;
 NhuTrgCondition2 triggeringCondition;
 NhuEvent1duseCIO useCIO;
} NhuEvent1d;


typedef TknS32 NhuThresholdUsedFrequency_r6;

typedef struct NhuEvent1e_r6
{
 TknPres pres;
 NhuTrgCondition2 triggeringCondition;
 NhuThresholdUsedFrequency_r6 thresholdUsedFrequency;
} NhuEvent1e_r6;

typedef struct NhuEvent1f_r6
{
 TknPres pres;
 NhuTrgCondition1 triggeringCondition;
 NhuThresholdUsedFrequency_r6 thresholdUsedFrequency;
} NhuEvent1f_r6;

typedef struct NhuEvent1j_r6
{
 TknPres pres;
 NhuReplacementActvnThreshold replacementActvnThreshold;
 NhuRprtngAmount reportingAmount;
 NhuRprtngInterval reportingInterval;
} NhuEvent1j_r6;


typedef TknS32 NhuThreshold;


typedef TknU32 NhuHysteresisInterFreq;

typedef struct NhuNonUsedFreqParameter
{
 TknPres pres;
 NhuThreshold nonUsedFreqThreshold;
 NhuW nonUsedFreqW;
} NhuNonUsedFreqParameter;

typedef struct NhuNonUsedFreqParameterLst
{
 TknU16 noComp;
 NhuNonUsedFreqParameter *member;
}NhuNonUsedFreqParameterLst;

typedef struct NhuEvent2a
{
 TknPres pres;
 NhuThreshold dummy;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
 NhuNonUsedFreqParameterLst nonUsedFreqParameterLst;
} NhuEvent2a;

typedef struct NhuNonUsedFreqWLst_r6
{
 TknU16 noComp;
 NhuW *member;
}NhuNonUsedFreqWLst_r6;

typedef struct NhuEvent2a_r6
{
 TknPres pres;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
 NhuNonUsedFreqWLst_r6 nonUsedFreqParameterLst;
} NhuEvent2a_r6;

typedef struct NhuRprtngCellStatus_r10
{
 TknU8 choice;
 union {
  NhuMaxNumberOfRprtngCellsTyp1 withinActiveSet;
  NhuMaxNumberOfRprtngCellsTyp1 withinMonitoredSetUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp1 withinActiveAndOrMonitoredUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp1 withinDetectedSetUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp1 withinMonitoredAndOrDetectedUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp3 allActiveplusMonitoredSet;
  NhuMaxNumberOfRprtngCellsTyp3 allActivePlusDetectedSet;
  NhuMaxNumberOfRprtngCellsTyp3 allActivePlusMonitoredAndOrDetectedSet;
  NhuMaxNumberOfRprtngCellsTyp1 withinVirtualActSet;
  NhuMaxNumberOfRprtngCellsTyp1 withinMonitoredSetNonUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp1 withinMonitoredAndOrVirtualActiveSetNonUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp3 allVirtualActSetplusMonitoredSetNonUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp2 withinActSetOrVirtualActSet_InterRATcells;
  NhuMaxNumberOfRprtngCellsTyp2 withinActSetAndOrMonitoredUsedFreqOrVirtualActSetAndOrMonitoredNonUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp3 allVirtualActSetplusMonitoredSetplusDetectedSetNonUsedFreq;
 } val;
} NhuRprtngCellStatus_r10;


typedef enum enumNhuNonUsedFreq2aParameter_r10nonUsedFreqTrgConditionDetectedCells
{
 NhuNonUsedFreq2aParameter_r10nonUsedFreqTrgConditionDetectedCellstrueEnum
} EnumNhuNonUsedFreq2aParameter_r10nonUsedFreqTrgConditionDetectedCells;
typedef TknU32 NhuNonUsedFreq2aParameter_r10nonUsedFreqTrgConditionDetectedCells;

typedef struct NhuNonUsedFreq2aParameter_r10
{
 TknPres pres;
 NhuW nonUsedFreqW;
 NhuNonUsedFreq2aParameter_r10nonUsedFreqTrgConditionDetectedCells nonUsedFreqTrgConditionDetectedCells;
} NhuNonUsedFreq2aParameter_r10;

typedef struct NhuNonUsedFreq2aParameterLst_r10
{
 TknU16 noComp;
 NhuNonUsedFreq2aParameter_r10 *member;
}NhuNonUsedFreq2aParameterLst_r10;

typedef struct NhuEvent2a_r10
{
 TknPres pres;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus_r10 reportingCellStatus;
 NhuNonUsedFreq2aParameterLst_r10 nonUsedFreqParameterLst;
} NhuEvent2a_r10;

typedef struct NhuEvent2b
{
 TknPres pres;
 NhuThreshold usedFreqThreshold;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
 NhuNonUsedFreqParameterLst nonUsedFreqParameterLst;
} NhuEvent2b;


typedef TknS32 NhuThreshold_r6;

typedef struct NhuNonUsedFreqParameter_r6
{
 TknPres pres;
 NhuThreshold_r6 nonUsedFreqThreshold;
 NhuW nonUsedFreqW;
} NhuNonUsedFreqParameter_r6;

typedef struct NhuNonUsedFreqParameterLst_r6
{
 TknU16 noComp;
 NhuNonUsedFreqParameter_r6 *member;
}NhuNonUsedFreqParameterLst_r6;

typedef struct NhuEvent2b_r6
{
 TknPres pres;
 NhuThreshold_r6 usedFreqThreshold;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
 NhuNonUsedFreqParameterLst_r6 nonUsedFreqParameterLst;
} NhuEvent2b_r6;


typedef enum enumNhuNonUsedFreqParameter_r10nonUsedFreqTrgConditionDetectedCells
{
 NhuNonUsedFreqParameter_r10nonUsedFreqTrgConditionDetectedCellstrueEnum
} EnumNhuNonUsedFreqParameter_r10nonUsedFreqTrgConditionDetectedCells;
typedef TknU32 NhuNonUsedFreqParameter_r10nonUsedFreqTrgConditionDetectedCells;

typedef struct NhuNonUsedFreqParameter_r10
{
 TknPres pres;
 NhuThreshold_r6 nonUsedFreqThreshold;
 NhuW nonUsedFreqW;
 NhuNonUsedFreqParameter_r10nonUsedFreqTrgConditionDetectedCells nonUsedFreqTrgConditionDetectedCells;
} NhuNonUsedFreqParameter_r10;

typedef struct NhuNonUsedFreqParameterLst_r10
{
 TknU16 noComp;
 NhuNonUsedFreqParameter_r10 *member;
}NhuNonUsedFreqParameterLst_r10;

typedef struct NhuEvent2b_r10
{
 TknPres pres;
 NhuThreshold_r6 usedFreqThreshold;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus_r10 reportingCellStatus;
 NhuNonUsedFreqParameterLst_r10 nonUsedFreqParameterLst;
} NhuEvent2b_r10;

typedef struct NhuEvent2c
{
 TknPres pres;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
 NhuNonUsedFreqParameterLst nonUsedFreqParameterLst;
} NhuEvent2c;

typedef struct NhuEvent2c_r6
{
 TknPres pres;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
 NhuNonUsedFreqParameterLst_r6 nonUsedFreqParameterLst;
} NhuEvent2c_r6;

typedef struct NhuEvent2c_r10
{
 TknPres pres;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus_r10 reportingCellStatus;
 NhuNonUsedFreqParameterLst_r10 nonUsedFreqParameterLst;
} NhuEvent2c_r10;

typedef struct NhuEvent2d
{
 TknPres pres;
 NhuThreshold usedFreqThreshold;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuEvent2d;

typedef struct NhuEvent2d_r6
{
 TknPres pres;
 NhuThreshold_r6 usedFreqThreshold;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuEvent2d_r6;

typedef struct NhuEvent2d_r10
{
 TknPres pres;
 NhuThreshold_r6 usedFreqThreshold;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus_r10 reportingCellStatus;
} NhuEvent2d_r10;

typedef struct NhuEvent2e
{
 TknPres pres;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
 NhuNonUsedFreqParameterLst nonUsedFreqParameterLst;
} NhuEvent2e;

typedef struct NhuEvent2e_r6
{
 TknPres pres;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
 NhuNonUsedFreqParameterLst_r6 nonUsedFreqParameterLst;
} NhuEvent2e_r6;

typedef struct NhuEvent2e_r10
{
 TknPres pres;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus_r10 reportingCellStatus;
 NhuNonUsedFreqParameterLst_r10 nonUsedFreqParameterLst;
} NhuEvent2e_r10;

typedef struct NhuEvent2f
{
 TknPres pres;
 NhuThreshold usedFreqThreshold;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuEvent2f;

typedef struct NhuEvent2f_r6
{
 TknPres pres;
 NhuThreshold_r6 usedFreqThreshold;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuEvent2f_r6;

typedef struct NhuEvent2f_r10
{
 TknPres pres;
 NhuThreshold_r6 usedFreqThreshold;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus_r10 reportingCellStatus;
} NhuEvent2f_r10;

typedef struct NhuEvent3a
{
 TknPres pres;
 NhuThreshold thresholdOwnSys;
 NhuW w;
 NhuThreshold thresholdOtherSys;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuEvent3a;

typedef struct NhuEvent3b
{
 TknPres pres;
 NhuThreshold thresholdOtherSys;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuEvent3b;

typedef struct NhuEvent3c
{
 TknPres pres;
 NhuThreshold thresholdOtherSys;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuEvent3c;

typedef struct NhuEvent3d
{
 TknPres pres;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuEvent3d;


typedef enum enumNhuEventIDInterFreq
{
 NhuEventIDInterFreqe2aEnum,
 NhuEventIDInterFreqe2bEnum,
 NhuEventIDInterFreqe2cEnum,
 NhuEventIDInterFreqe2dEnum,
 NhuEventIDInterFreqe2eEnum,
 NhuEventIDInterFreqe2fEnum,
 NhuEventIDInterFreqspare2Enum,
 NhuEventIDInterFreqspare1Enum
} EnumNhuEventIDInterFreq;
typedef TknU32 NhuEventIDInterFreq;


typedef enum enumNhuEventIDIntraFreq
{
 NhuEventIDIntraFreqe1aEnum,
 NhuEventIDIntraFreqe1bEnum,
 NhuEventIDIntraFreqe1cEnum,
 NhuEventIDIntraFreqe1dEnum,
 NhuEventIDIntraFreqe1eEnum,
 NhuEventIDIntraFreqe1fEnum,
 NhuEventIDIntraFreqe1gEnum,
 NhuEventIDIntraFreqe1hEnum,
 NhuEventIDIntraFreqe1iEnum,
 NhuEventIDIntraFreqe1jEnum,
 NhuEventIDIntraFreqspare6Enum,
 NhuEventIDIntraFreqspare5Enum,
 NhuEventIDIntraFreqspare4Enum,
 NhuEventIDIntraFreqspare3Enum,
 NhuEventIDIntraFreqspare2Enum,
 NhuEventIDIntraFreqspare1Enum
} EnumNhuEventIDIntraFreq;
typedef TknU32 NhuEventIDIntraFreq;

typedef struct NhuIntraFreqEventResults
{
 TknPres pres;
 NhuEventIDIntraFreq eventID;
 NhuCellMeasurementEventResults cellMeasurementEventResults;
} NhuIntraFreqEventResults;

typedef struct NhuInterFreqCell
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuCellMeasurementEventResults nonFreqRelatedEventResults;
} NhuInterFreqCell;

typedef struct NhuInterFreqCellLst
{
 TknU16 noComp;
 NhuInterFreqCell *member;
}NhuInterFreqCellLst;

typedef struct NhuInterFreqEventResults
{
 TknPres pres;
 NhuEventIDInterFreq eventID;
 NhuInterFreqCellLst interFreqCellLst;
} NhuInterFreqEventResults;

typedef struct NhuInterRATEventResults
{
 TknPres pres;
 NhuEventIDInterRAT eventID;
 NhuCellToReportLst cellToReportLst;
} NhuInterRATEventResults;

typedef struct NhuUL_TrCH_Identity
{
 TknU8 choice;
 union {
  NhuTportChannelIdentity dch;
  NhuTportChannelIdentity usch;
 } val;
} NhuUL_TrCH_Identity;


typedef enum enumNhuTrafficVolumeEventTyp
{
 NhuTrafficVolumeEventType4aEnum,
 NhuTrafficVolumeEventType4bEnum
} EnumNhuTrafficVolumeEventTyp;
typedef TknU32 NhuTrafficVolumeEventTyp;

typedef struct NhuTrafficVolumeEventResults
{
 TknPres pres;
 NhuUL_TrCH_Identity ul_transportChannelCausingEvent;
 NhuTrafficVolumeEventTyp trafficVolumeEventIdentity;
} NhuTrafficVolumeEventResults;

typedef struct NhuQualityEventResults
{
 TknU16 noComp;
 NhuTportChannelIdentity *member;
}NhuQualityEventResults;

typedef struct NhuUE_InternalEventResults
{
 TknU8 choice;
 union {
  NhuPrimaryCPICH_Info event6f;
  NhuPrimaryCPICH_Info event6g;
 } val;
} NhuUE_InternalEventResults;


typedef TknU32 NhuUTRAN_GPSReferenceTimeResultue_GPSTimingOfCellms_part;


typedef TknU32 NhuUTRAN_GPSReferenceTimeResultue_GPSTimingOfCellls_part;

typedef struct NhuUTRAN_GPSReferenceTimeResultue_GPSTimingOfCell
{
 TknPres pres;
 NhuUTRAN_GPSReferenceTimeResultue_GPSTimingOfCellms_part ms_part;
 NhuUTRAN_GPSReferenceTimeResultue_GPSTimingOfCellls_part ls_part;
} NhuUTRAN_GPSReferenceTimeResultue_GPSTimingOfCell;

typedef struct NhuUTRAN_GPSReferenceTimeResultmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info referenceIdentity;
} NhuUTRAN_GPSReferenceTimeResultmodeSpecificInfofdd;

typedef struct NhuUTRAN_GPSReferenceTimeResultmodeSpecificInfotdd
{
 TknPres pres;
 NhuCellParamsID referenceIdentity;
} NhuUTRAN_GPSReferenceTimeResultmodeSpecificInfotdd;

typedef struct NhuUTRAN_GPSReferenceTimeResultmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUTRAN_GPSReferenceTimeResultmodeSpecificInfofdd fdd;
  NhuUTRAN_GPSReferenceTimeResultmodeSpecificInfotdd tdd;
 } val;
} NhuUTRAN_GPSReferenceTimeResultmodeSpecificInfo;


typedef TknU32 NhuUTRAN_GPSReferenceTimeResultsfn;

typedef struct NhuUTRAN_GPSReferenceTimeResult
{
 TknPres pres;
 NhuUTRAN_GPSReferenceTimeResultue_GPSTimingOfCell ue_GPSTimingOfCell;
 NhuUTRAN_GPSReferenceTimeResultmodeSpecificInfo modeSpecificInfo;
 NhuUTRAN_GPSReferenceTimeResultsfn sfn;
} NhuUTRAN_GPSReferenceTimeResult;


typedef TknU32 NhuGPS_TOW_1msec;

typedef struct NhuPositionEstimate
{
 TknU8 choice;
 union {
  NhuEllipsoidPoint ellipsoidPoint;
  NhuEllipsoidPointUncertCircle ellipsoidPointUncertCircle;
  NhuEllipsoidPointUncertEllipse ellipsoidPointUncertEllipse;
  NhuEllipsoidPointAltitude ellipsoidPointAltitude;
  NhuEllipsoidPointAltitudeEllipsoide ellipsoidPointAltitudeEllipse;
 } val;
} NhuPositionEstimate;


typedef TknU32 NhuUE_Positioning_PositionEstimateInforeferenceTimecell_Timingsfn;

typedef struct NhuUE_Positioning_PositionEstimateInforeferenceTimecell_TimingmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUE_Positioning_PositionEstimateInforeferenceTimecell_TimingmodeSpecificInfofdd;

typedef struct NhuUE_Positioning_PositionEstimateInforeferenceTimecell_TimingmodeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity cellAndChannelIdentity;
} NhuUE_Positioning_PositionEstimateInforeferenceTimecell_TimingmodeSpecificInfotdd;

typedef struct NhuUE_Positioning_PositionEstimateInforeferenceTimecell_TimingmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_PositionEstimateInforeferenceTimecell_TimingmodeSpecificInfofdd fdd;
  NhuUE_Positioning_PositionEstimateInforeferenceTimecell_TimingmodeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_PositionEstimateInforeferenceTimecell_TimingmodeSpecificInfo;

typedef struct NhuUE_Positioning_PositionEstimateInforeferenceTimecell_Timing
{
 TknPres pres;
 NhuUE_Positioning_PositionEstimateInforeferenceTimecell_Timingsfn sfn;
 NhuUE_Positioning_PositionEstimateInforeferenceTimecell_TimingmodeSpecificInfo modeSpecificInfo;
} NhuUE_Positioning_PositionEstimateInforeferenceTimecell_Timing;

typedef struct NhuUE_Positioning_PositionEstimateInforeferenceTime
{
 TknU8 choice;
 union {
  NhuUTRAN_GPSReferenceTimeResult utran_GPSReferenceTimeResult;
  NhuGPS_TOW_1msec gps_ReferenceTimeOnly;
  NhuUE_Positioning_PositionEstimateInforeferenceTimecell_Timing cell_Timing;
 } val;
} NhuUE_Positioning_PositionEstimateInforeferenceTime;

typedef struct NhuUE_Positioning_PositionEstimateInfo
{
 TknPres pres;
 NhuUE_Positioning_PositionEstimateInforeferenceTime referenceTime;
 NhuPositionEstimate positionEstimate;
} NhuUE_Positioning_PositionEstimateInfo;


typedef TknU32 NhuUE_RX_TX_TimeDifferenceTyp2;


typedef TknStrBSXL NhuUE_Positioning_OTDOA_QualitystdResolution;

typedef TknStrBSXL NhuUE_Positioning_OTDOA_QualitynumberOfOTDOA_Measurements;

typedef TknStrBSXL NhuUE_Positioning_OTDOA_QualitystdOfOTDOA_Measurements;
typedef struct NhuUE_Positioning_OTDOA_Quality
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_QualitystdResolution stdResolution;
 NhuUE_Positioning_OTDOA_QualitynumberOfOTDOA_Measurements numberOfOTDOA_Measurements;
 NhuUE_Positioning_OTDOA_QualitystdOfOTDOA_Measurements stdOfOTDOA_Measurements;
} NhuUE_Positioning_OTDOA_Quality;

typedef struct NhuNeighbourQuality
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_Quality ue_Positioning_OTDOA_Quality;
} NhuNeighbourQuality;

typedef struct NhuUE_RX_TX_TimeDifferenceTyp2Info
{
 TknPres pres;
 NhuUE_RX_TX_TimeDifferenceTyp2 ue_RX_TX_TimeDifferenceTyp2;
 NhuNeighbourQuality neighbourQuality;
} NhuUE_RX_TX_TimeDifferenceTyp2Info;

typedef struct NhuNeighbourmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info neighbourIdentity;
 NhuUE_RX_TX_TimeDifferenceTyp2Info uE_RX_TX_TimeDifferenceTyp2Info;
} NhuNeighbourmodeSpecificInfofdd;

typedef struct NhuNeighbourmodeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity neighbourAndChannelIdentity;
} NhuNeighbourmodeSpecificInfotdd;

typedef struct NhuNeighbourmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuNeighbourmodeSpecificInfofdd fdd;
  NhuNeighbourmodeSpecificInfotdd tdd;
 } val;
} NhuNeighbourmodeSpecificInfo;

typedef struct NhuNeighbour
{
 TknPres pres;
 NhuNeighbourmodeSpecificInfo modeSpecificInfo;
 NhuNeighbourQuality neighbourQuality;
 NhuSFN_SFN_ObsTimeDifference2 sfn_SFN_ObsTimeDifference2;
} NhuNeighbour;

typedef struct NhuNeighbourLst
{
 TknU16 noComp;
 NhuNeighbour *member;
}NhuNeighbourLst;


typedef TknU32 NhuUE_Positioning_OTDOA_Measurementsfn;

typedef struct NhuUE_Positioning_OTDOA_MeasurementmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info referenceCellIDentity;
 NhuUE_RX_TX_TimeDifferenceTyp2Info ue_RX_TX_TimeDifferenceTyp2Info;
} NhuUE_Positioning_OTDOA_MeasurementmodeSpecificInfofdd;

typedef struct NhuUE_Positioning_OTDOA_MeasurementmodeSpecificInfotdd
{
 TknPres pres;
 NhuCellParamsID referenceCellIdentity;
} NhuUE_Positioning_OTDOA_MeasurementmodeSpecificInfotdd;

typedef struct NhuUE_Positioning_OTDOA_MeasurementmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_MeasurementmodeSpecificInfofdd fdd;
  NhuUE_Positioning_OTDOA_MeasurementmodeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_OTDOA_MeasurementmodeSpecificInfo;

typedef struct NhuUE_Positioning_OTDOA_Measurement
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_Measurementsfn sfn;
 NhuUE_Positioning_OTDOA_MeasurementmodeSpecificInfo modeSpecificInfo;
 NhuNeighbourLst neighbourLst;
} NhuUE_Positioning_OTDOA_Measurement;


typedef enum enumNhuMultipathIndicator
{
 NhuMultipathIndicatornmEnum,
 NhuMultipathIndicatorlowEnum,
 NhuMultipathIndicatormediumEnum,
 NhuMultipathIndicatorhighEnum
} EnumNhuMultipathIndicator;
typedef TknU32 NhuMultipathIndicator;


typedef TknU32 NhuGPS_MeasurementParamsatelliteID;


typedef TknU32 NhuGPS_MeasurementParamc_N0;


typedef TknS32 NhuGPS_MeasurementParamdoppler;


typedef TknU32 NhuGPS_MeasurementParamwholeGPS_Chips;


typedef TknU32 NhuGPS_MeasurementParamfractionalGPS_Chips;


typedef TknU32 NhuGPS_MeasurementParampseudorangeRMS_Err;

typedef struct NhuGPS_MeasurementParam
{
 TknPres pres;
 NhuGPS_MeasurementParamsatelliteID satelliteID;
 NhuGPS_MeasurementParamc_N0 c_N0;
 NhuGPS_MeasurementParamdoppler doppler;
 NhuGPS_MeasurementParamwholeGPS_Chips wholeGPS_Chips;
 NhuGPS_MeasurementParamfractionalGPS_Chips fractionalGPS_Chips;
 NhuMultipathIndicator multipathIndicator;
 NhuGPS_MeasurementParampseudorangeRMS_Err pseudorangeRMS_Err;
} NhuGPS_MeasurementParam;

typedef struct NhuGPS_MeasurementParamLst
{
 TknU16 noComp;
 NhuGPS_MeasurementParam *member;
}NhuGPS_MeasurementParamLst;

typedef struct NhuUE_Positioning_GPS_MeasurementResultsreferenceTime
{
 TknU8 choice;
 union {
  NhuUTRAN_GPSReferenceTimeResult utran_GPSReferenceTimeResult;
  NhuGPS_TOW_1msec gps_ReferenceTimeOnly;
 } val;
} NhuUE_Positioning_GPS_MeasurementResultsreferenceTime;

typedef struct NhuUE_Positioning_GPS_MeasurementResults
{
 TknPres pres;
 NhuUE_Positioning_GPS_MeasurementResultsreferenceTime referenceTime;
 NhuGPS_MeasurementParamLst gps_MeasurementParamLst;
} NhuUE_Positioning_GPS_MeasurementResults;

typedef struct NhuUE_Positioning_MeasurementEventResults
{
 TknU8 choice;
 union {
  NhuUE_Positioning_PositionEstimateInfo event7a;
  NhuUE_Positioning_OTDOA_Measurement event7b;
  NhuUE_Positioning_GPS_MeasurementResults event7c;
 } val;
} NhuUE_Positioning_MeasurementEventResults;

typedef struct NhuEventResults
{
 TknU8 choice;
 union {
  NhuIntraFreqEventResults intraFreqEventResults;
  NhuInterFreqEventResults interFreqEventResults;
  NhuInterRATEventResults interRATEventResults;
  NhuTrafficVolumeEventResults trafficVolumeEventResults;
  NhuQualityEventResults qualityEventResults;
  NhuUE_InternalEventResults ue_InternalEventResults;
  NhuUE_Positioning_MeasurementEventResults ue_positioning_MeasurementEventResults;
 } val;
} NhuEventResults;


typedef TknU32 NhuUTRAN_GANSSReferenceTimeue_GANSSTimingOfCellFramesms_Part;


typedef TknU32 NhuUTRAN_GANSSReferenceTimeue_GANSSTimingOfCellFramesls_Part;

typedef struct NhuUTRAN_GANSSReferenceTimeue_GANSSTimingOfCellFrames
{
 TknPres pres;
 NhuUTRAN_GANSSReferenceTimeue_GANSSTimingOfCellFramesms_Part ms_Part;
 NhuUTRAN_GANSSReferenceTimeue_GANSSTimingOfCellFramesls_Part ls_Part;
} NhuUTRAN_GANSSReferenceTimeue_GANSSTimingOfCellFrames;


typedef TknU32 NhuUTRAN_GANSSReferenceTimegANSS_TimeId;


typedef TknU32 NhuUTRAN_GANSSReferenceTimegANSS_TimeUncertainty;

typedef struct NhuUTRAN_GANSSReferenceTimemodefdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primary_CPICH_Info;
} NhuUTRAN_GANSSReferenceTimemodefdd;

typedef struct NhuUTRAN_GANSSReferenceTimemodetdd
{
 TknPres pres;
 NhuCellParamsID cellParams;
} NhuUTRAN_GANSSReferenceTimemodetdd;

typedef struct NhuUTRAN_GANSSReferenceTimemode
{
 TknU8 choice;
 union {
  NhuUTRAN_GANSSReferenceTimemodefdd fdd;
  NhuUTRAN_GANSSReferenceTimemodetdd tdd;
 } val;
} NhuUTRAN_GANSSReferenceTimemode;


typedef TknU32 NhuUTRAN_GANSSReferenceTimereferenceSfn;

typedef struct NhuUTRAN_GANSSReferenceTime
{
 TknPres pres;
 NhuUTRAN_GANSSReferenceTimeue_GANSSTimingOfCellFrames ue_GANSSTimingOfCellFrames;
 NhuUTRAN_GANSSReferenceTimegANSS_TimeId gANSS_TimeId;
 NhuUTRAN_GANSSReferenceTimegANSS_TimeUncertainty gANSS_TimeUncertainty;
 NhuUTRAN_GANSSReferenceTimemode mode;
 NhuUTRAN_GANSSReferenceTimereferenceSfn referenceSfn;
} NhuUTRAN_GANSSReferenceTime;


typedef TknU32 NhuGANSSReferenceTimeOnlygANSS_tod;


typedef TknU32 NhuGANSSReferenceTimeOnlygANSS_timeId;


typedef TknU32 NhuGANSSReferenceTimeOnlygANSS_tod_uncertainty;

typedef struct NhuGANSSReferenceTimeOnly
{
 TknPres pres;
 NhuGANSSReferenceTimeOnlygANSS_tod gANSS_tod;
 NhuGANSSReferenceTimeOnlygANSS_timeId gANSS_timeId;
 NhuGANSSReferenceTimeOnlygANSS_tod_uncertainty gANSS_tod_uncertainty;
} NhuGANSSReferenceTimeOnly;


typedef TknU32 NhuHorizontalVelocitybearing;


typedef TknU32 NhuHorizontalVelocityhorizontalSpeed;

typedef struct NhuHorizontalVelocity
{
 TknPres pres;
 NhuHorizontalVelocitybearing bearing;
 NhuHorizontalVelocityhorizontalSpeed horizontalSpeed;
} NhuHorizontalVelocity;


typedef enum enumNhuHorizontalWithVerticalVelocityverticalSpeedDirection
{
 NhuHorizontalWithVerticalVelocityverticalSpeedDirectionupwardEnum,
 NhuHorizontalWithVerticalVelocityverticalSpeedDirectiondownwardEnum
} EnumNhuHorizontalWithVerticalVelocityverticalSpeedDirection;
typedef TknU32 NhuHorizontalWithVerticalVelocityverticalSpeedDirection;


typedef TknU32 NhuHorizontalWithVerticalVelocitybearing;


typedef TknU32 NhuHorizontalWithVerticalVelocityhorizontalSpeed;


typedef TknU32 NhuHorizontalWithVerticalVelocityverticalSpeed;

typedef struct NhuHorizontalWithVerticalVelocity
{
 TknPres pres;
 NhuHorizontalWithVerticalVelocityverticalSpeedDirection verticalSpeedDirection;
 NhuHorizontalWithVerticalVelocitybearing bearing;
 NhuHorizontalWithVerticalVelocityhorizontalSpeed horizontalSpeed;
 NhuHorizontalWithVerticalVelocityverticalSpeed verticalSpeed;
} NhuHorizontalWithVerticalVelocity;


typedef TknU32 NhuHorizontalVelocityWithUncertaintybearing;


typedef TknU32 NhuHorizontalVelocityWithUncertaintyhorizontalSpeed;


typedef TknU32 NhuHorizontalVelocityWithUncertaintyhorizontalSpeedUncertainty;

typedef struct NhuHorizontalVelocityWithUncertainty
{
 TknPres pres;
 NhuHorizontalVelocityWithUncertaintybearing bearing;
 NhuHorizontalVelocityWithUncertaintyhorizontalSpeed horizontalSpeed;
 NhuHorizontalVelocityWithUncertaintyhorizontalSpeedUncertainty horizontalSpeedUncertainty;
} NhuHorizontalVelocityWithUncertainty;


typedef enum enumNhuHorizontalWithVerticalVelocityAndUncertaintyverticalSpeedDirection
{
 NhuHorizontalWithVerticalVelocityAndUncertaintyverticalSpeedDirectionupwardEnum,
 NhuHorizontalWithVerticalVelocityAndUncertaintyverticalSpeedDirectiondownwardEnum
} EnumNhuHorizontalWithVerticalVelocityAndUncertaintyverticalSpeedDirection;
typedef TknU32 NhuHorizontalWithVerticalVelocityAndUncertaintyverticalSpeedDirection;


typedef TknU32 NhuHorizontalWithVerticalVelocityAndUncertaintybearing;


typedef TknU32 NhuHorizontalWithVerticalVelocityAndUncertaintyhorizontalSpeed;


typedef TknU32 NhuHorizontalWithVerticalVelocityAndUncertaintyverticalSpeed;


typedef TknU32 NhuHorizontalWithVerticalVelocityAndUncertaintyhorizontalUncertaintySpeed;


typedef TknU32 NhuHorizontalWithVerticalVelocityAndUncertaintyverticalUncertaintySpeed;

typedef struct NhuHorizontalWithVerticalVelocityAndUncertainty
{
 TknPres pres;
 NhuHorizontalWithVerticalVelocityAndUncertaintyverticalSpeedDirection verticalSpeedDirection;
 NhuHorizontalWithVerticalVelocityAndUncertaintybearing bearing;
 NhuHorizontalWithVerticalVelocityAndUncertaintyhorizontalSpeed horizontalSpeed;
 NhuHorizontalWithVerticalVelocityAndUncertaintyverticalSpeed verticalSpeed;
 NhuHorizontalWithVerticalVelocityAndUncertaintyhorizontalUncertaintySpeed horizontalUncertaintySpeed;
 NhuHorizontalWithVerticalVelocityAndUncertaintyverticalUncertaintySpeed verticalUncertaintySpeed;
} NhuHorizontalWithVerticalVelocityAndUncertainty;

typedef struct NhuVelocityEstimate
{
 TknU8 choice;
 union {
  NhuHorizontalVelocity horizontalVelocity;
  NhuHorizontalWithVerticalVelocity horizontalWithVerticalVelocity;
  NhuHorizontalVelocityWithUncertainty horizontalVelocityWithUncertainty;
  NhuHorizontalWithVerticalVelocityAndUncertainty horizontalWithVerticalVelocityAndUncertainty;
 } val;
} NhuVelocityEstimate;


typedef TknU32 NhuUE_Positioning_GPS_ReferenceTimeUncertainty;

typedef struct NhuUE_Positioning_PositionEstimateInfo_v770extreferenceTimeOptionsr7referenceTime
{
 TknU8 choice;
 union {
  NhuUTRAN_GANSSReferenceTime utran_GANSSReferenceTimeResult;
  NhuGANSSReferenceTimeOnly ganssReferenceTimeOnly;
 } val;
} NhuUE_Positioning_PositionEstimateInfo_v770extreferenceTimeOptionsr7referenceTime;

typedef struct NhuUE_Positioning_PositionEstimateInfo_v770extreferenceTimeOptionsr7
{
 TknPres pres;
 NhuUE_Positioning_PositionEstimateInfo_v770extreferenceTimeOptionsr7referenceTime referenceTime;
 NhuPositionEstimate positionEstimate;
} NhuUE_Positioning_PositionEstimateInfo_v770extreferenceTimeOptionsr7;

typedef struct NhuUE_Positioning_PositionEstimateInfo_v770extreferenceTimeOptions
{
 TknU8 choice;
 union {
  NhuUE_Positioning_PositionEstimateInfo_v770extreferenceTimeOptionsr7 r7;
 } val;
} NhuUE_Positioning_PositionEstimateInfo_v770extreferenceTimeOptions;


typedef TknStrBSXL NhuUE_Positioning_PositionEstimateInfo_v770extpositionData;
typedef struct NhuUE_Positioning_PositionEstimateInfo_v770ext
{
 TknPres pres;
 NhuUE_Positioning_PositionEstimateInfo_v770extreferenceTimeOptions referenceTimeOptions;
 NhuUE_Positioning_PositionEstimateInfo_v770extpositionData positionData;
 NhuVelocityEstimate velocityEstimate;
 NhuUE_Positioning_GPS_ReferenceTimeUncertainty ue_Positioning_GPS_ReferenceTimeUncertainty;
} NhuUE_Positioning_PositionEstimateInfo_v770ext;

typedef struct NhuUE_Positioning_GPS_MeasurementResults_v770ext
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTimeUncertainty ue_Positioning_GPS_ReferenceTimeUncertainty;
} NhuUE_Positioning_GPS_MeasurementResults_v770ext;


typedef TknU32 NhuGANSSMeasurementParamsMembersatId;


typedef TknU32 NhuGANSSMeasurementParamsMembercSurNzero;


typedef enum enumNhuGANSSMeasurementParamsMembermultipathIndicator
{
 NhuGANSSMeasurementParamsMembermultipathIndicatornmEnum,
 NhuGANSSMeasurementParamsMembermultipathIndicatorlowEnum,
 NhuGANSSMeasurementParamsMembermultipathIndicatormediumEnum,
 NhuGANSSMeasurementParamsMembermultipathIndicatorhighEnum
} EnumNhuGANSSMeasurementParamsMembermultipathIndicator;
typedef TknU32 NhuGANSSMeasurementParamsMembermultipathIndicator;


typedef TknStrBSXL NhuGANSSMeasurementParamsMembercarrierQualityInd;

typedef TknU32 NhuGANSSMeasurementParamsMemberganssCodePhase;


typedef TknU32 NhuGANSSMeasurementParamsMemberganssIntegerCodePhase;


typedef TknU32 NhuGANSSMeasurementParamsMembercodePhaseRmsErr;


typedef TknS32 NhuGANSSMeasurementParamsMemberdoppler;


typedef TknU32 NhuGANSSMeasurementParamsMemberadr;

typedef struct NhuGANSSMeasurementParamsMember
{
 TknPres pres;
 NhuGANSSMeasurementParamsMembersatId satId;
 NhuGANSSMeasurementParamsMembercSurNzero cSurNzero;
 NhuGANSSMeasurementParamsMembermultipathIndicator multipathIndicator;
 NhuGANSSMeasurementParamsMembercarrierQualityInd carrierQualityInd;
 NhuGANSSMeasurementParamsMemberganssCodePhase ganssCodePhase;
 NhuGANSSMeasurementParamsMemberganssIntegerCodePhase ganssIntegerCodePhase;
 NhuGANSSMeasurementParamsMembercodePhaseRmsErr codePhaseRmsErr;
 NhuGANSSMeasurementParamsMemberdoppler doppler;
 NhuGANSSMeasurementParamsMemberadr adr;
} NhuGANSSMeasurementParamsMember;

typedef struct NhuGANSSMeasurementParams
{
 TknU16 noComp;
 NhuGANSSMeasurementParamsMember *member;
}NhuGANSSMeasurementParams;


typedef TknU32 NhuGANSSMeasurementSignalLstMemberganssCodePhaseAmbiguity;

typedef struct NhuGANSSMeasurementSignalLstMember
{
 TknPres pres;
 NhuGANSS_Signal_Id ganssSignalId;
 NhuGANSSMeasurementSignalLstMemberganssCodePhaseAmbiguity ganssCodePhaseAmbiguity;
 NhuGANSSMeasurementParams ganssMeasurementParams;
} NhuGANSSMeasurementSignalLstMember;

typedef struct NhuGANSSMeasurementSignalLst
{
 TknU16 noComp;
 NhuGANSSMeasurementSignalLstMember *member;
}NhuGANSSMeasurementSignalLst;


typedef TknU32 NhuGANSSGenericMeasurementInfoMemberganssId;

typedef struct NhuGANSSGenericMeasurementInfoMember
{
 TknPres pres;
 NhuGANSSGenericMeasurementInfoMemberganssId ganssId;
 NhuGANSSMeasurementSignalLst ganssMeasurementSignalLst;
} NhuGANSSGenericMeasurementInfoMember;

typedef struct NhuGANSSGenericMeasurementInfo
{
 TknU16 noComp;
 NhuGANSSGenericMeasurementInfoMember *member;
}NhuGANSSGenericMeasurementInfo;

typedef struct NhuUE_Positioning_GANSS_MeasuredResultsreferenceTime
{
 TknU8 choice;
 union {
  NhuUTRAN_GANSSReferenceTime utran_GANSSReferenceTimeResult;
  NhuGANSSReferenceTimeOnly ganssReferenceTimeOnly;
 } val;
} NhuUE_Positioning_GANSS_MeasuredResultsreferenceTime;

typedef struct NhuUE_Positioning_GANSS_MeasuredResults
{
 TknPres pres;
 NhuUE_Positioning_GANSS_MeasuredResultsreferenceTime referenceTime;
 NhuGANSSGenericMeasurementInfo ganssGenericMeasurementInfo;
} NhuUE_Positioning_GANSS_MeasuredResults;

typedef struct NhuUE_Positioning_MeasurementEventResults_v770ext
{
 TknU8 choice;
 union {
  NhuUE_Positioning_PositionEstimateInfo_v770ext event7a;
  NhuUE_Positioning_GPS_MeasurementResults_v770ext event7c;
  NhuUE_Positioning_GANSS_MeasuredResults event7d;
 } val;
} NhuUE_Positioning_MeasurementEventResults_v770ext;

typedef struct NhuEventResults_v770ext
{
 TknU8 choice;
 union {
  NhuUE_Positioning_MeasurementEventResults_v770ext ue_positioning_MeasurementEventResults;
 } val;
} NhuEventResults_v770ext;


typedef TknU32 NhuGANSSMeasurementParams_v860extMemberganssIntegerCodePhaseExt;

typedef struct NhuGANSSMeasurementParams_v860extMember
{
 TknPres pres;
 NhuGANSSMeasurementParams_v860extMemberganssIntegerCodePhaseExt ganssIntegerCodePhaseExt;
} NhuGANSSMeasurementParams_v860extMember;

typedef struct NhuGANSSMeasurementParams_v860ext
{
 TknU16 noComp;
 NhuGANSSMeasurementParams_v860extMember *member;
}NhuGANSSMeasurementParams_v860ext;


typedef TknU32 NhuGANSSMeasurementSignalLst_v860extMemberganssCodePhaseAmbiguityExt;

typedef struct NhuGANSSMeasurementSignalLst_v860extMember
{
 TknPres pres;
 NhuGANSSMeasurementSignalLst_v860extMemberganssCodePhaseAmbiguityExt ganssCodePhaseAmbiguityExt;
 NhuGANSSMeasurementParams_v860ext ganssMeasurementParams;
} NhuGANSSMeasurementSignalLst_v860extMember;

typedef struct NhuGANSSMeasurementSignalLst_v860ext
{
 TknU16 noComp;
 NhuGANSSMeasurementSignalLst_v860extMember *member;
}NhuGANSSMeasurementSignalLst_v860ext;

typedef struct NhuGANSSGenericMeasurementInfo_v860extMember
{
 TknPres pres;
 NhuGANSSMeasurementSignalLst_v860ext ganssMeasurementSignalLst;
} NhuGANSSGenericMeasurementInfo_v860extMember;

typedef struct NhuGANSSGenericMeasurementInfo_v860ext
{
 TknU16 noComp;
 NhuGANSSGenericMeasurementInfo_v860extMember *member;
}NhuGANSSGenericMeasurementInfo_v860ext;

typedef struct NhuUE_Positioning_GANSS_MeasuredResults_v860ext
{
 TknPres pres;
 NhuGANSSGenericMeasurementInfo_v860ext ganssGenericMeasurementInfo;
} NhuUE_Positioning_GANSS_MeasuredResults_v860ext;

typedef struct NhuUE_Positioning_MeasurementEventResults_v860ext
{
 TknU8 choice;
 union {
  NhuUE_Positioning_GANSS_MeasuredResults_v860ext event7d;
 } val;
} NhuUE_Positioning_MeasurementEventResults_v860ext;

typedef struct NhuEventResults_v860ext
{
 TknU8 choice;
 union {
  NhuUE_Positioning_MeasurementEventResults_v860ext ue_positioning_MeasurementEventResults;
 } val;
} NhuEventResults_v860ext;


typedef enum enumNhuInterFreqEventResults_va40extdetectedSetTrigger
{
 NhuInterFreqEventResults_va40extdetectedSetTriggertrueEnum
} EnumNhuInterFreqEventResults_va40extdetectedSetTrigger;
typedef TknU32 NhuInterFreqEventResults_va40extdetectedSetTrigger;

typedef struct NhuInterFreqEventResults_va40ext
{
 TknPres pres;
 NhuInterFreqEventResults_va40extdetectedSetTrigger detectedSetTrigger;
} NhuInterFreqEventResults_va40ext;

typedef struct NhuEventResults_va40ext
{
 TknU8 choice;
 union {
  NhuInterFreqEventResults_va40ext interFreqEventResults;
 } val;
} NhuEventResults_va40ext;

typedef struct NhuIntraFreqEventResultsOnSecUlFreq
{
 TknPres pres;
 NhuEventIDIntraFreq eventID;
 NhuCellMeasurementEventResultsOnSecUlFreq cellMeasurementEventResultsOnSecUlFreq;
} NhuIntraFreqEventResultsOnSecUlFreq;

typedef struct NhuEventResultsOnSecUlFreq
{
 TknPres pres;
 NhuIntraFreqEventResultsOnSecUlFreq intraFreqEventResults;
} NhuEventResultsOnSecUlFreq;


typedef TknS32 NhuExtraDopplerdopplerFirstOrder;


typedef enum enumNhuExtraDopplerdopplerUncertainty
{
 NhuExtraDopplerdopplerUncertaintydopU40Enum,
 NhuExtraDopplerdopplerUncertaintydopU20Enum,
 NhuExtraDopplerdopplerUncertaintydopU10Enum,
 NhuExtraDopplerdopplerUncertaintydopU5Enum,
 NhuExtraDopplerdopplerUncertaintydopU2_5Enum,
 NhuExtraDopplerdopplerUncertaintyspare3Enum,
 NhuExtraDopplerdopplerUncertaintyspare2Enum,
 NhuExtraDopplerdopplerUncertaintyspare1Enum
} EnumNhuExtraDopplerdopplerUncertainty;
typedef TknU32 NhuExtraDopplerdopplerUncertainty;

typedef struct NhuExtraDoppler
{
 TknPres pres;
 NhuExtraDopplerdopplerFirstOrder dopplerFirstOrder;
 NhuExtraDopplerdopplerUncertainty dopplerUncertainty;
} NhuExtraDoppler;


typedef enum enumNhu3gRAT_Typ
{
 NhuRAT_TypgsmEnum,
 NhuRAT_Typis2000Enum
} EnumNhu3gRAT_Typ;
typedef TknU32 Nhu3gRAT_Typ;


typedef TknU32 NhuFACH_MeasurementOccasionInfofACH_meas_occasion_coeff;


typedef TknU8 NhuFACH_MeasurementOccasionInfointer_freq_FDD_meas_ind;


typedef TknU8 NhuFACH_MeasurementOccasionInfointer_freq_TDD_meas_ind;

typedef struct NhuFACH_MeasurementOccasionInfointer_RAT_meas_ind
{
 TknU16 noComp;
 Nhu3gRAT_Typ *member;
}NhuFACH_MeasurementOccasionInfointer_RAT_meas_ind;

typedef struct NhuFACH_MeasurementOccasionInfo
{
 TknPres pres;
 NhuFACH_MeasurementOccasionInfofACH_meas_occasion_coeff fACH_meas_occasion_coeff;
 NhuFACH_MeasurementOccasionInfointer_freq_FDD_meas_ind inter_freq_FDD_meas_ind;
 NhuFACH_MeasurementOccasionInfointer_freq_TDD_meas_ind inter_freq_TDD_meas_ind;
 NhuFACH_MeasurementOccasionInfointer_RAT_meas_ind inter_RAT_meas_ind;
} NhuFACH_MeasurementOccasionInfo;


typedef TknU8 NhuFACH_MeasurementOccasionInfo_LCR_r4_extinter_freq_TDD128_meas_ind;

typedef struct NhuFACH_MeasurementOccasionInfo_LCR_r4_ext
{
 TknPres pres;
 NhuFACH_MeasurementOccasionInfo_LCR_r4_extinter_freq_TDD128_meas_ind inter_freq_TDD128_meas_ind;
} NhuFACH_MeasurementOccasionInfo_LCR_r4_ext;


typedef enum enumNhu3gFilterCoefficient
{
 Nhu3gFilterCoefficientfc0Enum,
 Nhu3gFilterCoefficientfc1Enum,
 Nhu3gFilterCoefficientfc2Enum,
 Nhu3gFilterCoefficientfc3Enum,
 Nhu3gFilterCoefficientfc4Enum,
 Nhu3gFilterCoefficientfc5Enum,
 Nhu3gFilterCoefficientfc6Enum,
 Nhu3gFilterCoefficientfc7Enum,
 Nhu3gFilterCoefficientfc8Enum,
 Nhu3gFilterCoefficientfc9Enum,
 Nhu3gFilterCoefficientfc11Enum,
 Nhu3gFilterCoefficientfc13Enum,
 Nhu3gFilterCoefficientfc15Enum,
 Nhu3gFilterCoefficientfc17Enum,
 Nhu3gFilterCoefficientfc19Enum,
 Nhu3gFilterCoefficientspare1Enum
} EnumNhu3gFilterCoefficient;
typedef TknU32 Nhu3gFilterCoefficient;


typedef TknU32 NhuFineSFN_SFN;


typedef enum enumNhuFreqQualityEstimateQuantity_FDD
{
 NhuFreqQualityEstimateQuantity_FDDcpich_Ec_N0Enum,
 NhuFreqQualityEstimateQuantity_FDDcpich_RSCPEnum
} EnumNhuFreqQualityEstimateQuantity_FDD;
typedef TknU32 NhuFreqQualityEstimateQuantity_FDD;


typedef enum enumNhuFreqQualityEstimateQuantity_TDD
{
 NhuFreqQualityEstimateQuantity_TDDprimaryCCPCH_RSCPEnum
} EnumNhuFreqQualityEstimateQuantity_TDD;
typedef TknU32 NhuFreqQualityEstimateQuantity_TDD;


typedef TknU32 NhuReqDataBitAssistanceganssDataBitInterval;

typedef TknU32 NhuReqDataBitAssistanceganssSatelliteInfoMember;

typedef struct NhuReqDataBitAssistanceganssSatelliteInfo
{
 TknU16 noComp;
 NhuReqDataBitAssistanceganssSatelliteInfoMember *member;
}NhuReqDataBitAssistanceganssSatelliteInfo;

typedef struct NhuReqDataBitAssistance
{
 TknPres pres;
 NhuDGANSS_Sig_Id_Req ganssSignalID;
 NhuReqDataBitAssistanceganssDataBitInterval ganssDataBitInterval;
 NhuReqDataBitAssistanceganssSatelliteInfo ganssSatelliteInfo;
} NhuReqDataBitAssistance;


typedef TknU32 NhuGanssDataBitsganssTod;

typedef struct NhuGanssDataBits
{
 TknPres pres;
 NhuGanssDataBitsganssTod ganssTod;
 NhuReqDataBitAssistance dataBitAssistance;
} NhuGanssDataBits;


typedef TknStrBSXL NhuGANSSDecipheringKeyscurrentDecipheringKey;

typedef TknStrBSXL NhuGANSSDecipheringKeysnextDecipheringKey;
typedef struct NhuGANSSDecipheringKeys
{
 TknPres pres;
 NhuGANSSDecipheringKeyscurrentDecipheringKey currentDecipheringKey;
 NhuGANSSDecipheringKeysnextDecipheringKey nextDecipheringKey;
} NhuGANSSDecipheringKeys;


typedef TknU32 NhuUE_Positioning_GANSS_TimeModelganss_timeModelreferenceTime;


typedef TknS32 NhuUE_Positioning_GANSS_TimeModelganss_t_a0;


typedef TknS32 NhuUE_Positioning_GANSS_TimeModelganss_t_a1;


typedef TknS32 NhuUE_Positioning_GANSS_TimeModelganss_t_a2;


typedef enum enumNhuUE_Positioning_GANSS_TimeModelgnss_to_id
{
 NhuUE_Positioning_GANSS_TimeModelgnss_to_idgpsEnum,
 NhuUE_Positioning_GANSS_TimeModelgnss_to_idgalileoEnum,
 NhuUE_Positioning_GANSS_TimeModelgnss_to_idqzssEnum,
 NhuUE_Positioning_GANSS_TimeModelgnss_to_idglonassEnum,
 NhuUE_Positioning_GANSS_TimeModelgnss_to_idspare4Enum,
 NhuUE_Positioning_GANSS_TimeModelgnss_to_idspare3Enum,
 NhuUE_Positioning_GANSS_TimeModelgnss_to_idspare2Enum,
 NhuUE_Positioning_GANSS_TimeModelgnss_to_idspare1Enum
} EnumNhuUE_Positioning_GANSS_TimeModelgnss_to_id;
typedef TknU32 NhuUE_Positioning_GANSS_TimeModelgnss_to_id;


typedef TknU32 NhuUE_Positioning_GANSS_TimeModelganss_wk_number;

typedef struct NhuUE_Positioning_GANSS_TimeModel
{
 TknPres pres;
 NhuUE_Positioning_GANSS_TimeModelganss_timeModelreferenceTime ganss_timeModelreferenceTime;
 NhuUE_Positioning_GANSS_TimeModelganss_t_a0 ganss_t_a0;
 NhuUE_Positioning_GANSS_TimeModelganss_t_a1 ganss_t_a1;
 NhuUE_Positioning_GANSS_TimeModelganss_t_a2 ganss_t_a2;
 NhuUE_Positioning_GANSS_TimeModelgnss_to_id gnss_to_id;
 NhuUE_Positioning_GANSS_TimeModelganss_wk_number ganss_wk_number;
} NhuUE_Positioning_GANSS_TimeModel;

typedef struct NhuGANSSTimeModelsLst
{
 TknU16 noComp;
 NhuUE_Positioning_GANSS_TimeModel *member;
}NhuGANSSTimeModelsLst;


typedef TknU32 NhuUE_Positioning_DGANSSCorrectionsdganssreferencetime;

typedef struct NhuUE_Positioning_DGANSSCorrections
{
 TknPres pres;
 NhuUE_Positioning_DGANSSCorrectionsdganssreferencetime dganssreferencetime;
 NhuDGANSSInfoLst dganssInfoLst;
} NhuUE_Positioning_DGANSSCorrections;


typedef TknStrBSXL NhuSatellite_clock_modelt_oc;

typedef TknStrBSXL NhuSatellite_clock_modelaf2;

typedef TknStrBSXL NhuSatellite_clock_modelaf1;

typedef TknStrBSXL NhuSatellite_clock_modelaf0;

typedef TknStrBSXL NhuSatellite_clock_modeltgd;

typedef TknU32 NhuSatellite_clock_modelmodel_id;

typedef struct NhuSatellite_clock_model
{
 TknPres pres;
 NhuSatellite_clock_modelt_oc t_oc;
 NhuSatellite_clock_modelaf2 af2;
 NhuSatellite_clock_modelaf1 af1;
 NhuSatellite_clock_modelaf0 af0;
 NhuSatellite_clock_modeltgd tgd;
 NhuSatellite_clock_modelmodel_id model_id;
} NhuSatellite_clock_model;

typedef struct NhuSatellite_clock_modelLst
{
 TknU16 noComp;
 NhuSatellite_clock_model *member;
}NhuSatellite_clock_modelLst;

typedef struct NhuUE_Positioning_GANSS_ClockModel
{
 TknPres pres;
 NhuSatellite_clock_modelLst satellite_clock_modelLst;
} NhuUE_Positioning_GANSS_ClockModel;


typedef TknStrBSXL NhuKeplerianParamstoe_nav;

typedef TknStrBSXL NhuKeplerianParamsganss_omega_nav;

typedef TknStrBSXL NhuKeplerianParamsdelta_n_nav;

typedef TknStrBSXL NhuKeplerianParamsm_zero_nav;

typedef TknStrBSXL NhuKeplerianParamsomegadot_nav;

typedef TknStrBSXL NhuKeplerianParamsganss_e_nav;

typedef TknStrBSXL NhuKeplerianParamsidot_nav;

typedef TknStrBSXL NhuKeplerianParamsa_sqrt_nav;

typedef TknStrBSXL NhuKeplerianParamsi_zero_nav;

typedef TknStrBSXL NhuKeplerianParamsomega_zero_nav;

typedef TknStrBSXL NhuKeplerianParamsc_rs_nav;

typedef TknStrBSXL NhuKeplerianParamsc_is_nav;

typedef TknStrBSXL NhuKeplerianParamsc_us_nav;

typedef TknStrBSXL NhuKeplerianParamsc_rc_nav;

typedef TknStrBSXL NhuKeplerianParamsc_ic_nav;

typedef TknStrBSXL NhuKeplerianParamsc_uc_nav;
typedef struct NhuKeplerianParams
{
 TknPres pres;
 NhuKeplerianParamstoe_nav toe_nav;
 NhuKeplerianParamsganss_omega_nav ganss_omega_nav;
 NhuKeplerianParamsdelta_n_nav delta_n_nav;
 NhuKeplerianParamsm_zero_nav m_zero_nav;
 NhuKeplerianParamsomegadot_nav omegadot_nav;
 NhuKeplerianParamsganss_e_nav ganss_e_nav;
 NhuKeplerianParamsidot_nav idot_nav;
 NhuKeplerianParamsa_sqrt_nav a_sqrt_nav;
 NhuKeplerianParamsi_zero_nav i_zero_nav;
 NhuKeplerianParamsomega_zero_nav omega_zero_nav;
 NhuKeplerianParamsc_rs_nav c_rs_nav;
 NhuKeplerianParamsc_is_nav c_is_nav;
 NhuKeplerianParamsc_us_nav c_us_nav;
 NhuKeplerianParamsc_rc_nav c_rc_nav;
 NhuKeplerianParamsc_ic_nav c_ic_nav;
 NhuKeplerianParamsc_uc_nav c_uc_nav;
} NhuKeplerianParams;

typedef struct NhuUE_Positioning_GANSS_OrbitModel
{
 TknPres pres;
 NhuKeplerianParams keplerianParams;
} NhuUE_Positioning_GANSS_OrbitModel;


typedef TknU32 NhuGanss_Sat_Info_NavsatId;


typedef TknStrBSXL NhuGanss_Sat_Info_NavsvHealth;

typedef TknStrBSXL NhuGanss_Sat_Info_Naviod;
typedef struct NhuGanss_Sat_Info_Nav
{
 TknPres pres;
 NhuGanss_Sat_Info_NavsatId satId;
 NhuGanss_Sat_Info_NavsvHealth svHealth;
 NhuGanss_Sat_Info_Naviod iod;
 NhuUE_Positioning_GANSS_ClockModel ganssClockModel;
 NhuUE_Positioning_GANSS_OrbitModel ganssOrbitModel;
} NhuGanss_Sat_Info_Nav;

typedef struct NhuGanss_Sat_Info_NavLst
{
 TknU16 noComp;
 NhuGanss_Sat_Info_Nav *member;
}NhuGanss_Sat_Info_NavLst;


typedef enum enumNhuUE_Positioning_GANSS_NavigationModelnon_broadcastInd
{
 NhuUE_Positioning_GANSS_NavigationModelnon_broadcastIndtrueEnum
} EnumNhuUE_Positioning_GANSS_NavigationModelnon_broadcastInd;
typedef TknU32 NhuUE_Positioning_GANSS_NavigationModelnon_broadcastInd;

typedef struct NhuUE_Positioning_GANSS_NavigationModel
{
 TknPres pres;
 NhuUE_Positioning_GANSS_NavigationModelnon_broadcastInd non_broadcastInd;
 NhuGanss_Sat_Info_NavLst ganssSatInfoNavLst;
} NhuUE_Positioning_GANSS_NavigationModel;


typedef TknU32 NhuUE_Positioning_GANSS_RealTimeIntegrityMemberbad_ganss_satId;


typedef TknStrBSXL NhuUE_Positioning_GANSS_RealTimeIntegrityMemberbad_ganss_signalId;
typedef struct NhuUE_Positioning_GANSS_RealTimeIntegrityMember
{
 TknPres pres;
 NhuUE_Positioning_GANSS_RealTimeIntegrityMemberbad_ganss_satId bad_ganss_satId;
 NhuUE_Positioning_GANSS_RealTimeIntegrityMemberbad_ganss_signalId bad_ganss_signalId;
} NhuUE_Positioning_GANSS_RealTimeIntegrityMember;

typedef struct NhuUE_Positioning_GANSS_RealTimeIntegrity
{
 TknU16 noComp;
 NhuUE_Positioning_GANSS_RealTimeIntegrityMember *member;
}NhuUE_Positioning_GANSS_RealTimeIntegrity;


typedef TknU32 NhuUE_Positioning_GANSS_Data_Bit_Assistanceganss_tod;

typedef struct NhuUE_Positioning_GANSS_Data_Bit_Assistance
{
 TknPres pres;
 NhuUE_Positioning_GANSS_Data_Bit_Assistanceganss_tod ganss_tod;
 NhuDataBitAssistanceLst dataBitAssistanceLst;
} NhuUE_Positioning_GANSS_Data_Bit_Assistance;


typedef TknU32 NhuGANSSSatelliteInfoganssSatId;


typedef TknS32 NhuGANSSSatelliteInfodopplerZeroOrder;


typedef TknU32 NhuGANSSSatelliteInfocodePhase;


typedef TknU32 NhuGANSSSatelliteInfointegerCodePhase;


typedef TknStrBSXL NhuGANSSSatelliteInfocodePhaseSearchWindow;
typedef struct NhuGANSSSatelliteInfo
{
 TknPres pres;
 NhuGANSSSatelliteInfoganssSatId ganssSatId;
 NhuGANSSSatelliteInfodopplerZeroOrder dopplerZeroOrder;
 NhuExtraDoppler extraDoppler;
 NhuGANSSSatelliteInfocodePhase codePhase;
 NhuGANSSSatelliteInfointegerCodePhase integerCodePhase;
 NhuGANSSSatelliteInfocodePhaseSearchWindow codePhaseSearchWindow;
 NhuAzimuthAndElevation azimuthandElevation;
} NhuGANSSSatelliteInfo;

typedef struct NhuGANSSSatelliteInfoLst
{
 TknU16 noComp;
 NhuGANSSSatelliteInfo *member;
}NhuGANSSSatelliteInfoLst;

typedef struct NhuUE_Positioning_GANSS_ReferenceMeasurementInfo
{
 TknPres pres;
 NhuGANSS_Signal_Id ganssSignalId;
 NhuGANSSSatelliteInfoLst satelliteInfoLst;
} NhuUE_Positioning_GANSS_ReferenceMeasurementInfo;


typedef TknU32 NhuUE_Positioning_GANSS_Almanacganss_wk_number;

typedef struct NhuUE_Positioning_GANSS_Almanac
{
 TknPres pres;
 NhuUE_Positioning_GANSS_Almanacganss_wk_number ganss_wk_number;
 NhuALM_keplerianParams alm_keplerianParams;
} NhuUE_Positioning_GANSS_Almanac;


typedef TknStrBSXL NhuUE_Positioning_GANSS_UTCModela_one_utc;

typedef TknStrBSXL NhuUE_Positioning_GANSS_UTCModela_zero_utc;

typedef TknStrBSXL NhuUE_Positioning_GANSS_UTCModelt_ot_utc;

typedef TknStrBSXL NhuUE_Positioning_GANSS_UTCModeldelta_t_ls_utc;

typedef TknStrBSXL NhuUE_Positioning_GANSS_UTCModelw_n_t_utc;

typedef TknStrBSXL NhuUE_Positioning_GANSS_UTCModelw_n_lsf_utc;

typedef TknStrBSXL NhuUE_Positioning_GANSS_UTCModeldn_utc;

typedef TknStrBSXL NhuUE_Positioning_GANSS_UTCModeldelta_t_lsf_utc;
typedef struct NhuUE_Positioning_GANSS_UTCModel
{
 TknPres pres;
 NhuUE_Positioning_GANSS_UTCModela_one_utc a_one_utc;
 NhuUE_Positioning_GANSS_UTCModela_zero_utc a_zero_utc;
 NhuUE_Positioning_GANSS_UTCModelt_ot_utc t_ot_utc;
 NhuUE_Positioning_GANSS_UTCModeldelta_t_ls_utc delta_t_ls_utc;
 NhuUE_Positioning_GANSS_UTCModelw_n_t_utc w_n_t_utc;
 NhuUE_Positioning_GANSS_UTCModelw_n_lsf_utc w_n_lsf_utc;
 NhuUE_Positioning_GANSS_UTCModeldn_utc dn_utc;
 NhuUE_Positioning_GANSS_UTCModeldelta_t_lsf_utc delta_t_lsf_utc;
} NhuUE_Positioning_GANSS_UTCModel;


typedef TknU32 NhuGANSSGenericDataganssId;

typedef struct NhuGANSSGenericData
{
 TknPres pres;
 NhuGANSSGenericDataganssId ganssId;
 NhuGANSSTimeModelsLst ganssTimeModelsLst;
 NhuUE_Positioning_DGANSSCorrections uePositioningDGANSSCorrections;
 NhuUE_Positioning_GANSS_NavigationModel uePositioningGANSSNavigationModel;
 NhuUE_Positioning_GANSS_RealTimeIntegrity uePositioningGANSSRealTimeIntegrity;
 NhuUE_Positioning_GANSS_Data_Bit_Assistance uePositioningGANSSDataBitAssistance;
 NhuUE_Positioning_GANSS_ReferenceMeasurementInfo uePositioningGANSSReferenceMeasurementInfo;
 NhuUE_Positioning_GANSS_Almanac uePositioningGANSSAlmanac;
 NhuUE_Positioning_GANSS_UTCModel uePositioningGANSSUTCModel;
} NhuGANSSGenericData;


typedef enum enumNhuUE_Positioning_GANSS_SBAS_ID
{
 NhuUE_Positioning_GANSS_SBAS_IDwaasEnum,
 NhuUE_Positioning_GANSS_SBAS_IDegnosEnum,
 NhuUE_Positioning_GANSS_SBAS_IDmsasEnum,
 NhuUE_Positioning_GANSS_SBAS_IDgaganEnum,
 NhuUE_Positioning_GANSS_SBAS_IDspare4Enum,
 NhuUE_Positioning_GANSS_SBAS_IDspare3Enum,
 NhuUE_Positioning_GANSS_SBAS_IDspare2Enum,
 NhuUE_Positioning_GANSS_SBAS_IDspare1Enum
} EnumNhuUE_Positioning_GANSS_SBAS_ID;
typedef TknU32 NhuUE_Positioning_GANSS_SBAS_ID;


typedef TknStrBSXL NhuNAVclockModelnavToc;

typedef TknStrBSXL NhuNAVclockModelnavaf2;

typedef TknStrBSXL NhuNAVclockModelnavaf1;

typedef TknStrBSXL NhuNAVclockModelnavaf0;

typedef TknStrBSXL NhuNAVclockModelnavTgd;
typedef struct NhuNAVclockModel
{
 TknPres pres;
 NhuNAVclockModelnavToc navToc;
 NhuNAVclockModelnavaf2 navaf2;
 NhuNAVclockModelnavaf1 navaf1;
 NhuNAVclockModelnavaf0 navaf0;
 NhuNAVclockModelnavTgd navTgd;
} NhuNAVclockModel;


typedef TknStrBSXL NhuGLONASSclockModelgloTau;

typedef TknStrBSXL NhuGLONASSclockModelgloGamma;

typedef TknStrBSXL NhuGLONASSclockModelgloDeltaTau;
typedef struct NhuGLONASSclockModel
{
 TknPres pres;
 NhuGLONASSclockModelgloTau gloTau;
 NhuGLONASSclockModelgloGamma gloGamma;
 NhuGLONASSclockModelgloDeltaTau gloDeltaTau;
} NhuGLONASSclockModel;


typedef TknStrBSXL NhuSBASclockModelsbasTo;

typedef TknStrBSXL NhuSBASclockModelsbasAgfo;

typedef TknStrBSXL NhuSBASclockModelsbasAgf1;
typedef struct NhuSBASclockModel
{
 TknPres pres;
 NhuSBASclockModelsbasTo sbasTo;
 NhuSBASclockModelsbasAgfo sbasAgfo;
 NhuSBASclockModelsbasAgf1 sbasAgf1;
} NhuSBASclockModel;

typedef struct NhuUE_Positioning_GANSS_AddClockModels
{
 TknPres pres;
 NhuNAVclockModel navClockModel;
 NhuCNAVclockModel cnavClockModel;
 NhuGLONASSclockModel glonassClockModel;
 NhuSBASclockModel sbasClockModel;
} NhuUE_Positioning_GANSS_AddClockModels;


typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavURA;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavFitFlag;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavToe;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavOmega;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavDeltaN;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavM0;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavOmegaADot;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavE;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavIDot;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavAPowerHalf;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavI0;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavOmegaA0;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavCrs;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavCis;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavCus;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavCrc;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavCic;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavCuc;
typedef struct NhuNavModel_NAVKeplerianSet
{
 TknPres pres;
 NhuNavModel_NAVKeplerianSetnavURA navURA;
 NhuNavModel_NAVKeplerianSetnavFitFlag navFitFlag;
 NhuNavModel_NAVKeplerianSetnavToe navToe;
 NhuNavModel_NAVKeplerianSetnavOmega navOmega;
 NhuNavModel_NAVKeplerianSetnavDeltaN navDeltaN;
 NhuNavModel_NAVKeplerianSetnavM0 navM0;
 NhuNavModel_NAVKeplerianSetnavOmegaADot navOmegaADot;
 NhuNavModel_NAVKeplerianSetnavE navE;
 NhuNavModel_NAVKeplerianSetnavIDot navIDot;
 NhuNavModel_NAVKeplerianSetnavAPowerHalf navAPowerHalf;
 NhuNavModel_NAVKeplerianSetnavI0 navI0;
 NhuNavModel_NAVKeplerianSetnavOmegaA0 navOmegaA0;
 NhuNavModel_NAVKeplerianSetnavCrs navCrs;
 NhuNavModel_NAVKeplerianSetnavCis navCis;
 NhuNavModel_NAVKeplerianSetnavCus navCus;
 NhuNavModel_NAVKeplerianSetnavCrc navCrc;
 NhuNavModel_NAVKeplerianSetnavCic navCic;
 NhuNavModel_NAVKeplerianSetnavCuc navCuc;
} NhuNavModel_NAVKeplerianSet;


typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavTop;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavURAindex;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavDeltaA;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavAdot;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavDeltaNo;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavDeltaNoDot;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavMo;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavE;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavOmega;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavOMEGA0;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavDeltaOmegaDot;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavIo;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavIoDot;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavCis;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavCic;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavCrs;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavCrc;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavCus;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavCuc;
typedef struct NhuNavModel_CNAVKeplerianSet
{
 TknPres pres;
 NhuNavModel_CNAVKeplerianSetcnavTop cnavTop;
 NhuNavModel_CNAVKeplerianSetcnavURAindex cnavURAindex;
 NhuNavModel_CNAVKeplerianSetcnavDeltaA cnavDeltaA;
 NhuNavModel_CNAVKeplerianSetcnavAdot cnavAdot;
 NhuNavModel_CNAVKeplerianSetcnavDeltaNo cnavDeltaNo;
 NhuNavModel_CNAVKeplerianSetcnavDeltaNoDot cnavDeltaNoDot;
 NhuNavModel_CNAVKeplerianSetcnavMo cnavMo;
 NhuNavModel_CNAVKeplerianSetcnavE cnavE;
 NhuNavModel_CNAVKeplerianSetcnavOmega cnavOmega;
 NhuNavModel_CNAVKeplerianSetcnavOMEGA0 cnavOMEGA0;
 NhuNavModel_CNAVKeplerianSetcnavDeltaOmegaDot cnavDeltaOmegaDot;
 NhuNavModel_CNAVKeplerianSetcnavIo cnavIo;
 NhuNavModel_CNAVKeplerianSetcnavIoDot cnavIoDot;
 NhuNavModel_CNAVKeplerianSetcnavCis cnavCis;
 NhuNavModel_CNAVKeplerianSetcnavCic cnavCic;
 NhuNavModel_CNAVKeplerianSetcnavCrs cnavCrs;
 NhuNavModel_CNAVKeplerianSetcnavCrc cnavCrc;
 NhuNavModel_CNAVKeplerianSetcnavCus cnavCus;
 NhuNavModel_CNAVKeplerianSetcnavCuc cnavCuc;
} NhuNavModel_CNAVKeplerianSet;


typedef TknStrBSXL NhuNavModel_GLONASSecefgloEn;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloP1;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloP2;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloM;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloX;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloXdot;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloXdotdot;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloY;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloYdot;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloYdotdot;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloZ;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloZdot;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloZdotdot;
typedef struct NhuNavModel_GLONASSecef
{
 TknPres pres;
 NhuNavModel_GLONASSecefgloEn gloEn;
 NhuNavModel_GLONASSecefgloP1 gloP1;
 NhuNavModel_GLONASSecefgloP2 gloP2;
 NhuNavModel_GLONASSecefgloM gloM;
 NhuNavModel_GLONASSecefgloX gloX;
 NhuNavModel_GLONASSecefgloXdot gloXdot;
 NhuNavModel_GLONASSecefgloXdotdot gloXdotdot;
 NhuNavModel_GLONASSecefgloY gloY;
 NhuNavModel_GLONASSecefgloYdot gloYdot;
 NhuNavModel_GLONASSecefgloYdotdot gloYdotdot;
 NhuNavModel_GLONASSecefgloZ gloZ;
 NhuNavModel_GLONASSecefgloZdot gloZdot;
 NhuNavModel_GLONASSecefgloZdotdot gloZdotdot;
} NhuNavModel_GLONASSecef;


typedef TknStrBSXL NhuNavModel_SBASecefsbasTo;

typedef TknStrBSXL NhuNavModel_SBASecefsbasAccuracy;

typedef TknStrBSXL NhuNavModel_SBASecefsbasXg;

typedef TknStrBSXL NhuNavModel_SBASecefsbasYg;

typedef TknStrBSXL NhuNavModel_SBASecefsbasZg;

typedef TknStrBSXL NhuNavModel_SBASecefsbasXgDot;

typedef TknStrBSXL NhuNavModel_SBASecefsbasYgDot;

typedef TknStrBSXL NhuNavModel_SBASecefsbasZgDot;

typedef TknStrBSXL NhuNavModel_SBASecefsbasXgDotDot;

typedef TknStrBSXL NhuNavModel_SBASecefsbagYgDotDot;

typedef TknStrBSXL NhuNavModel_SBASecefsbasZgDotDot;
typedef struct NhuNavModel_SBASecef
{
 TknPres pres;
 NhuNavModel_SBASecefsbasTo sbasTo;
 NhuNavModel_SBASecefsbasAccuracy sbasAccuracy;
 NhuNavModel_SBASecefsbasXg sbasXg;
 NhuNavModel_SBASecefsbasYg sbasYg;
 NhuNavModel_SBASecefsbasZg sbasZg;
 NhuNavModel_SBASecefsbasXgDot sbasXgDot;
 NhuNavModel_SBASecefsbasYgDot sbasYgDot;
 NhuNavModel_SBASecefsbasZgDot sbasZgDot;
 NhuNavModel_SBASecefsbasXgDotDot sbasXgDotDot;
 NhuNavModel_SBASecefsbagYgDotDot sbagYgDotDot;
 NhuNavModel_SBASecefsbasZgDotDot sbasZgDotDot;
} NhuNavModel_SBASecef;

typedef struct NhuUE_Positioning_GANSS_AddOrbitModels
{
 TknPres pres;
 NhuNavModel_NAVKeplerianSet navKeplerianSet;
 NhuNavModel_CNAVKeplerianSet cnavKeplerianSet;
 NhuNavModel_GLONASSecef glonassECEF;
 NhuNavModel_SBASecef sbasECEF;
} NhuUE_Positioning_GANSS_AddOrbitModels;


typedef TknU32 NhuGanss_Sat_Info_AddNavsatId;


typedef TknStrBSXL NhuGanss_Sat_Info_AddNavsvHealth;

typedef TknStrBSXL NhuGanss_Sat_Info_AddNaviod;
typedef struct NhuGanss_Sat_Info_AddNav
{
 TknPres pres;
 NhuGanss_Sat_Info_AddNavsatId satId;
 NhuGanss_Sat_Info_AddNavsvHealth svHealth;
 NhuGanss_Sat_Info_AddNaviod iod;
 NhuUE_Positioning_GANSS_AddClockModels ganssClockModel;
 NhuUE_Positioning_GANSS_AddOrbitModels ganssOrbitModel;
} NhuGanss_Sat_Info_AddNav;

typedef struct NhuGanss_Sat_Info_AddNavLst
{
 TknU16 noComp;
 NhuGanss_Sat_Info_AddNav *member;
}NhuGanss_Sat_Info_AddNavLst;


typedef enum enumNhuUE_Positioning_GANSS_AddNavigationModelsnon_broadcastInd
{
 NhuUE_Positioning_GANSS_AddNavigationModelsnon_broadcastIndtrueEnum
} EnumNhuUE_Positioning_GANSS_AddNavigationModelsnon_broadcastInd;
typedef TknU32 NhuUE_Positioning_GANSS_AddNavigationModelsnon_broadcastInd;

typedef struct NhuUE_Positioning_GANSS_AddNavigationModels
{
 TknPres pres;
 NhuUE_Positioning_GANSS_AddNavigationModelsnon_broadcastInd non_broadcastInd;
 NhuGanss_Sat_Info_AddNavLst ganssSatInfoNavLst;
} NhuUE_Positioning_GANSS_AddNavigationModels;

typedef struct NhuUE_Positioning_GANSS_Almanac_v860ext
{
 TknPres pres;
 NhuALM_NAVKeplerianSet alm_keplerianNAVAlmanac;
 NhuALM_ReducedKeplerianSet alm_keplerianReducedAlmanac;
 NhuALM_MidiAlmanacSet alm_keplerianMidiAlmanac;
 NhuALM_GlonassAlmanacSet alm_keplerianGLONASS;
 NhuALM_ECEFsbasAlmanacSet alm_ecefSBASAlmanac;
} NhuUE_Positioning_GANSS_Almanac_v860ext;


typedef TknStrBSXL NhuUTCmodelSet1utcA0;

typedef TknStrBSXL NhuUTCmodelSet1utcA1;

typedef TknStrBSXL NhuUTCmodelSet1utcA2;

typedef TknStrBSXL NhuUTCmodelSet1utcDeltaTls;

typedef TknStrBSXL NhuUTCmodelSet1utcTot;

typedef TknStrBSXL NhuUTCmodelSet1utcWNot;

typedef TknStrBSXL NhuUTCmodelSet1utcWNlsf;

typedef TknStrBSXL NhuUTCmodelSet1utcDN;

typedef TknStrBSXL NhuUTCmodelSet1utcDeltaTlsf;
typedef struct NhuUTCmodelSet1
{
 TknPres pres;
 NhuUTCmodelSet1utcA0 utcA0;
 NhuUTCmodelSet1utcA1 utcA1;
 NhuUTCmodelSet1utcA2 utcA2;
 NhuUTCmodelSet1utcDeltaTls utcDeltaTls;
 NhuUTCmodelSet1utcTot utcTot;
 NhuUTCmodelSet1utcWNot utcWNot;
 NhuUTCmodelSet1utcWNlsf utcWNlsf;
 NhuUTCmodelSet1utcDN utcDN;
 NhuUTCmodelSet1utcDeltaTlsf utcDeltaTlsf;
} NhuUTCmodelSet1;


typedef TknStrBSXL NhuUTCmodelSet2nA;

typedef TknStrBSXL NhuUTCmodelSet2tauC;

typedef TknStrBSXL NhuUTCmodelSet2kp;
typedef struct NhuUTCmodelSet2
{
 TknPres pres;
 NhuUTCmodelSet2nA nA;
 NhuUTCmodelSet2tauC tauC;
 NhuDeltaUT1 deltaUT1;
 NhuUTCmodelSet2kp kp;
} NhuUTCmodelSet2;


typedef TknStrBSXL NhuUTCmodelSet3utcA1wnt;

typedef TknStrBSXL NhuUTCmodelSet3utcA0wnt;

typedef TknStrBSXL NhuUTCmodelSet3utcTot;

typedef TknStrBSXL NhuUTCmodelSet3utcWNt;

typedef TknStrBSXL NhuUTCmodelSet3utcDeltaTls;

typedef TknStrBSXL NhuUTCmodelSet3utcWNlsf;

typedef TknStrBSXL NhuUTCmodelSet3utcDN;

typedef TknStrBSXL NhuUTCmodelSet3utcDeltaTlsf;

typedef TknStrBSXL NhuUTCmodelSet3utcStandardID;
typedef struct NhuUTCmodelSet3
{
 TknPres pres;
 NhuUTCmodelSet3utcA1wnt utcA1wnt;
 NhuUTCmodelSet3utcA0wnt utcA0wnt;
 NhuUTCmodelSet3utcTot utcTot;
 NhuUTCmodelSet3utcWNt utcWNt;
 NhuUTCmodelSet3utcDeltaTls utcDeltaTls;
 NhuUTCmodelSet3utcWNlsf utcWNlsf;
 NhuUTCmodelSet3utcDN utcDN;
 NhuUTCmodelSet3utcDeltaTlsf utcDeltaTlsf;
 NhuUTCmodelSet3utcStandardID utcStandardID;
} NhuUTCmodelSet3;

typedef struct NhuUE_Positioning_GANSS_AddUTCModels
{
 TknPres pres;
 NhuUTCmodelSet1 utcModel1;
 NhuUTCmodelSet2 utcModel2;
 NhuUTCmodelSet3 utcModel3;
} NhuUE_Positioning_GANSS_AddUTCModels;

typedef struct NhuUE_Positioning_GANSS_AuxiliaryInfo
{
 TknU8 choice;
 union {
  NhuAuxInfoGANSS_ID1 ganssID1;
  NhuAuxInfoGANSS_ID3 ganssID3;
 } val;
} NhuUE_Positioning_GANSS_AuxiliaryInfo;

typedef struct NhuGANSSGenericData_v860ext
{
 TknPres pres;
 NhuUE_Positioning_GANSS_SBAS_ID uePositiningGANSSsbasID;
 NhuUE_Positioning_GANSS_AddNavigationModels uePositioningGANSSAddNavigationModels;
 NhuUE_Positioning_GANSS_Almanac_v860ext uePositioningGANSSAlmanac;
 NhuUE_Positioning_GANSS_AddUTCModels uePositioningGANSSAddUTCModels;
 NhuUE_Positioning_GANSS_AuxiliaryInfo uePositioningGANSSAuxiliaryInfo;
} NhuGANSSGenericData_v860ext;


typedef TknU32 NhuUE_Positioning_GANSS_Almanac_r8ganss_wk_number;

typedef struct NhuUE_Positioning_GANSS_Almanac_r8
{
 TknPres pres;
 NhuUE_Positioning_GANSS_Almanac_r8ganss_wk_number ganss_wk_number;
 NhuALM_keplerianParams alm_keplerianParams;
 NhuALM_NAVKeplerianSet alm_keplerianNAVAlmanac;
 NhuALM_ReducedKeplerianSet alm_keplerianReducedAlmanac;
 NhuALM_MidiAlmanacSet alm_keplerianMidiAlmanac;
 NhuALM_GlonassAlmanacSet alm_keplerianGLONASS;
 NhuALM_ECEFsbasAlmanacSet alm_ecefSBASAlmanac;
} NhuUE_Positioning_GANSS_Almanac_r8;


typedef TknU32 NhuGANSSGenericData_r8ganssId;

typedef struct NhuGANSSGenericData_r8
{
 TknPres pres;
 NhuGANSSGenericData_r8ganssId ganssId;
 NhuUE_Positioning_GANSS_SBAS_ID uePositiningGANSSsbasID;
 NhuGANSSTimeModelsLst ganssTimeModelsLst;
 NhuUE_Positioning_DGANSSCorrections uePositioningDGANSSCorrections;
 NhuUE_Positioning_GANSS_NavigationModel uePositioningGANSSNavigationModel;
 NhuUE_Positioning_GANSS_AddNavigationModels uePositioningGANSSAddNavigationModels;
 NhuUE_Positioning_GANSS_RealTimeIntegrity uePositioningGANSSRealTimeIntegrity;
 NhuUE_Positioning_GANSS_Data_Bit_Assistance uePositioningGANSSDataBitAssistance;
 NhuUE_Positioning_GANSS_ReferenceMeasurementInfo uePositioningGANSSReferenceMeasurementInfo;
 NhuUE_Positioning_GANSS_Almanac_r8 uePositioningGANSSAlmanac;
 NhuUE_Positioning_GANSS_UTCModel uePositioningGANSSUTCModel;
 NhuUE_Positioning_GANSS_AddUTCModels uePositioningGANSSAddUTCModels;
 NhuUE_Positioning_GANSS_AuxiliaryInfo uePositioningGANSSAuxiliaryInfo;
} NhuGANSSGenericData_r8;


typedef TknU32 NhuUE_Positioning_DGANSSCorrections_r9dganssreferencetime;

typedef struct NhuUE_Positioning_DGANSSCorrections_r9
{
 TknPres pres;
 NhuUE_Positioning_DGANSSCorrections_r9dganssreferencetime dganssreferencetime;
 NhuDGANSSInfoLst_r9 dganssInfoLst;
} NhuUE_Positioning_DGANSSCorrections_r9;


typedef TknU32 NhuGANSSGenericData_r9ganssId;

typedef struct NhuGANSSGenericData_r9
{
 TknPres pres;
 NhuGANSSGenericData_r9ganssId ganssId;
 NhuUE_Positioning_GANSS_SBAS_ID uePositiningGANSSsbasID;
 NhuGANSSTimeModelsLst ganssTimeModelsLst;
 NhuUE_Positioning_DGANSSCorrections_r9 uePositioningDGANSSCorrections;
 NhuUE_Positioning_GANSS_NavigationModel uePositioningGANSSNavigationModel;
 NhuUE_Positioning_GANSS_AddNavigationModels uePositioningGANSSAddNavigationModels;
 NhuUE_Positioning_GANSS_RealTimeIntegrity uePositioningGANSSRealTimeIntegrity;
 NhuUE_Positioning_GANSS_Data_Bit_Assistance uePositioningGANSSDataBitAssistance;
 NhuUE_Positioning_GANSS_ReferenceMeasurementInfo uePositioningGANSSReferenceMeasurementInfo;
 NhuUE_Positioning_GANSS_Almanac_r8 uePositioningGANSSAlmanac;
 NhuUE_Positioning_GANSS_UTCModel uePositioningGANSSUTCModel;
 NhuUE_Positioning_GANSS_AddUTCModels uePositioningGANSSAddUTCModels;
 NhuUE_Positioning_GANSS_AuxiliaryInfo uePositioningGANSSAuxiliaryInfo;
} NhuGANSSGenericData_r9;

typedef struct NhuUE_Positioning_DGANSSCorrections_v920ext
{
 TknPres pres;
 NhuDGANSSInfoLst_v920ext dganssInfoLst;
} NhuUE_Positioning_DGANSSCorrections_v920ext;

typedef struct NhuGANSSGenericData_v920ext
{
 TknPres pres;
 NhuUE_Positioning_DGANSSCorrections_v920ext uePositioningDGANSSCorrections;
} NhuGANSSGenericData_v920ext;


typedef TknS32 NhuUE_Positioning_GANSS_TimeModel_va40extdeltaT;

typedef struct NhuUE_Positioning_GANSS_TimeModel_va40ext
{
 TknPres pres;
 NhuUE_Positioning_GANSS_TimeModel_va40extdeltaT deltaT;
} NhuUE_Positioning_GANSS_TimeModel_va40ext;

typedef struct NhuGANSSTimeModelsLst_va40ext
{
 TknU16 noComp;
 NhuUE_Positioning_GANSS_TimeModel_va40ext *member;
}NhuGANSSTimeModelsLst_va40ext;

typedef struct NhuGANSSSatelliteInfo_va40ext
{
 TknPres pres;
 NhuAzimuthAndElevation_va40ext azimuthAndElevation;
} NhuGANSSSatelliteInfo_va40ext;

typedef struct NhuGANSSSatelliteInfoLst_va40ext
{
 TknU16 noComp;
 NhuGANSSSatelliteInfo_va40ext *member;
}NhuGANSSSatelliteInfoLst_va40ext;

typedef struct NhuUE_Positioning_GANSS_ReferenceMeasurementInfo_va40ext
{
 TknPres pres;
 NhuGANSSSatelliteInfoLst_va40ext satelliteInfoLst;
} NhuUE_Positioning_GANSS_ReferenceMeasurementInfo_va40ext;


typedef TknU8 NhuUE_Positioning_GANSS_Almanac_va40extcomplete_Almanac_Provided;

typedef struct NhuUE_Positioning_GANSS_Almanac_va40ext
{
 TknPres pres;
 NhuUE_Positioning_GANSS_Almanac_va40extcomplete_Almanac_Provided complete_Almanac_Provided;
} NhuUE_Positioning_GANSS_Almanac_va40ext;

typedef struct NhuGANSSGenericData_va40ext
{
 TknPres pres;
 NhuGANSSTimeModelsLst_va40ext ganssTimeModelsLst;
 NhuUE_Positioning_GANSS_ReferenceMeasurementInfo_va40ext uePositioningGANSSReferenceMeasurementInfo;
 NhuUE_Positioning_GANSS_Almanac_va40ext uePositioningGANSSAlmanac;
} NhuGANSSGenericData_va40ext;


typedef TknU32 NhuUE_Positioning_GANSS_TimeModel_r10ganss_timeModelreferenceTime;


typedef TknS32 NhuUE_Positioning_GANSS_TimeModel_r10ganss_t_a0;


typedef TknS32 NhuUE_Positioning_GANSS_TimeModel_r10ganss_t_a1;


typedef TknS32 NhuUE_Positioning_GANSS_TimeModel_r10ganss_t_a2;


typedef enum enumNhuUE_Positioning_GANSS_TimeModel_r10gnss_to_id
{
 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_idgpsEnum,
 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_idgalileoEnum,
 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_idqzssEnum,
 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_idglonassEnum,
 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_idspare4Enum,
 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_idspare3Enum,
 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_idspare2Enum,
 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_idspare1Enum
} EnumNhuUE_Positioning_GANSS_TimeModel_r10gnss_to_id;
typedef TknU32 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_id;


typedef TknU32 NhuUE_Positioning_GANSS_TimeModel_r10ganss_wk_number;


typedef TknS32 NhuUE_Positioning_GANSS_TimeModel_r10deltaT;

typedef struct NhuUE_Positioning_GANSS_TimeModel_r10
{
 TknPres pres;
 NhuUE_Positioning_GANSS_TimeModel_r10ganss_timeModelreferenceTime ganss_timeModelreferenceTime;
 NhuUE_Positioning_GANSS_TimeModel_r10ganss_t_a0 ganss_t_a0;
 NhuUE_Positioning_GANSS_TimeModel_r10ganss_t_a1 ganss_t_a1;
 NhuUE_Positioning_GANSS_TimeModel_r10ganss_t_a2 ganss_t_a2;
 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_id gnss_to_id;
 NhuUE_Positioning_GANSS_TimeModel_r10ganss_wk_number ganss_wk_number;
 NhuUE_Positioning_GANSS_TimeModel_r10deltaT deltaT;
} NhuUE_Positioning_GANSS_TimeModel_r10;

typedef struct NhuGANSSTimeModelsLst_r10
{
 TknU16 noComp;
 NhuUE_Positioning_GANSS_TimeModel_r10 *member;
}NhuGANSSTimeModelsLst_r10;


typedef TknU32 NhuGANSSSatelliteInfo_r10ganssSatId;


typedef TknS32 NhuGANSSSatelliteInfo_r10dopplerZeroOrder;


typedef TknU32 NhuGANSSSatelliteInfo_r10codePhase;


typedef TknU32 NhuGANSSSatelliteInfo_r10integerCodePhase;


typedef TknStrBSXL NhuGANSSSatelliteInfo_r10codePhaseSearchWindow;
typedef struct NhuGANSSSatelliteInfo_r10
{
 TknPres pres;
 NhuGANSSSatelliteInfo_r10ganssSatId ganssSatId;
 NhuGANSSSatelliteInfo_r10dopplerZeroOrder dopplerZeroOrder;
 NhuExtraDoppler extraDoppler;
 NhuGANSSSatelliteInfo_r10codePhase codePhase;
 NhuGANSSSatelliteInfo_r10integerCodePhase integerCodePhase;
 NhuGANSSSatelliteInfo_r10codePhaseSearchWindow codePhaseSearchWindow;
 NhuAzimuthAndElevation_r10 azimuthandElevation;
} NhuGANSSSatelliteInfo_r10;

typedef struct NhuGANSSSatelliteInfoLst_r10
{
 TknU16 noComp;
 NhuGANSSSatelliteInfo_r10 *member;
}NhuGANSSSatelliteInfoLst_r10;

typedef struct NhuUE_Positioning_GANSS_ReferenceMeasurementInfo_r10
{
 TknPres pres;
 NhuGANSS_Signal_Id ganssSignalId;
 NhuGANSSSatelliteInfoLst_r10 satelliteInfoLst;
} NhuUE_Positioning_GANSS_ReferenceMeasurementInfo_r10;


typedef TknU32 NhuUE_Positioning_GANSS_Almanac_r10ganss_wk_number;


typedef TknU8 NhuUE_Positioning_GANSS_Almanac_r10complete_Almanac_Provided;

typedef struct NhuUE_Positioning_GANSS_Almanac_r10
{
 TknPres pres;
 NhuUE_Positioning_GANSS_Almanac_r10ganss_wk_number ganss_wk_number;
 NhuUE_Positioning_GANSS_Almanac_r10complete_Almanac_Provided complete_Almanac_Provided;
 NhuALM_keplerianParams alm_keplerianParams;
 NhuALM_NAVKeplerianSet alm_keplerianNAVAlmanac;
 NhuALM_ReducedKeplerianSet alm_keplerianReducedAlmanac;
 NhuALM_MidiAlmanacSet alm_keplerianMidiAlmanac;
 NhuALM_GlonassAlmanacSet alm_keplerianGLONASS;
 NhuALM_ECEFsbasAlmanacSet alm_ecefSBASAlmanac;
} NhuUE_Positioning_GANSS_Almanac_r10;


typedef TknU32 NhuGANSSGenericData_r10ganssId;

typedef struct NhuGANSSGenericData_r10
{
 TknPres pres;
 NhuGANSSGenericData_r10ganssId ganssId;
 NhuUE_Positioning_GANSS_SBAS_ID uePositiningGANSSsbasID;
 NhuGANSSTimeModelsLst_r10 ganssTimeModelsLst;
 NhuUE_Positioning_DGANSSCorrections_r9 uePositioningDGANSSCorrections;
 NhuUE_Positioning_GANSS_NavigationModel uePositioningGANSSNavigationModel;
 NhuUE_Positioning_GANSS_AddNavigationModels uePositioningGANSSAddNavigationModels;
 NhuUE_Positioning_GANSS_RealTimeIntegrity uePositioningGANSSRealTimeIntegrity;
 NhuUE_Positioning_GANSS_Data_Bit_Assistance uePositioningGANSSDataBitAssistance;
 NhuUE_Positioning_GANSS_ReferenceMeasurementInfo_r10 uePositioningGANSSReferenceMeasurementInfo;
 NhuUE_Positioning_GANSS_Almanac_r10 uePositioningGANSSAlmanac;
 NhuUE_Positioning_GANSS_UTCModel uePositioningGANSSUTCModel;
 NhuUE_Positioning_GANSS_AddUTCModels uePositioningGANSSAddUTCModels;
 NhuUE_Positioning_GANSS_AuxiliaryInfo uePositioningGANSSAuxiliaryInfo;
} NhuGANSSGenericData_r10;

typedef struct NhuGANSSGenericDataLst
{
 TknU16 noComp;
 NhuGANSSGenericData *member;
}NhuGANSSGenericDataLst;

typedef struct NhuGANSSGenericDataLst_v860ext
{
 TknU16 noComp;
 NhuGANSSGenericData_v860ext *member;
}NhuGANSSGenericDataLst_v860ext;

typedef struct NhuGANSSGenericDataLst_r8
{
 TknU16 noComp;
 NhuGANSSGenericData_r8 *member;
}NhuGANSSGenericDataLst_r8;

typedef struct NhuGANSSGenericDataLst_r9
{
 TknU16 noComp;
 NhuGANSSGenericData_r9 *member;
}NhuGANSSGenericDataLst_r9;

typedef struct NhuGANSSGenericDataLst_v920ext
{
 TknU16 noComp;
 NhuGANSSGenericData_v920ext *member;
}NhuGANSSGenericDataLst_v920ext;

typedef struct NhuGANSSGenericDataLst_va40ext
{
 TknU16 noComp;
 NhuGANSSGenericData_va40ext *member;
}NhuGANSSGenericDataLst_va40ext;

typedef struct NhuGANSSGenericDataLst_r10
{
 TknU16 noComp;
 NhuGANSSGenericData_r10 *member;
}NhuGANSSGenericDataLst_r10;


typedef TknU32 NhuSatellitesLstRelatedDatasatId;


typedef TknU32 NhuSatellitesLstRelatedDataiod;

typedef struct NhuSatellitesLstRelatedData
{
 TknPres pres;
 NhuSatellitesLstRelatedDatasatId satId;
 NhuSatellitesLstRelatedDataiod iod;
} NhuSatellitesLstRelatedData;

typedef struct NhuSatellitesLstRelatedDataLst
{
 TknU16 noComp;
 NhuSatellitesLstRelatedData *member;
}NhuSatellitesLstRelatedDataLst;


typedef TknU32 NhuGanssNavigationModelAdditionalDataganssWeek;


typedef TknU32 NhuGanssNavigationModelAdditionalDataganssToe;


typedef TknU32 NhuGanssNavigationModelAdditionalDatat_toeLimit;

typedef struct NhuGanssNavigationModelAdditionalData
{
 TknPres pres;
 NhuGanssNavigationModelAdditionalDataganssWeek ganssWeek;
 NhuGanssNavigationModelAdditionalDataganssToe ganssToe;
 NhuGanssNavigationModelAdditionalDatat_toeLimit t_toeLimit;
 NhuSatellitesLstRelatedDataLst satellitesLstRelatedDataLst;
} NhuGanssNavigationModelAdditionalData;


typedef TknU32 NhuGanssReqGenericDataganssId;


typedef TknU8 NhuGanssReqGenericDataganssRealTimeIntegrity;


typedef TknU8 NhuGanssReqGenericDataganssAlmanac;


typedef TknU8 NhuGanssReqGenericDataganssNavigationModel;


typedef TknStrBSXL NhuGanssReqGenericDataganssTimeModelGNSS_GNSS;

typedef TknU8 NhuGanssReqGenericDataganssReferenceMeasurementInfo;


typedef TknU8 NhuGanssReqGenericDataganssUTCModel;

typedef struct NhuGanssReqGenericData
{
 TknPres pres;
 NhuGanssReqGenericDataganssId ganssId;
 NhuGanssReqGenericDataganssRealTimeIntegrity ganssRealTimeIntegrity;
 NhuDGANSS_Sig_Id_Req ganssDifferentialCorrection;
 NhuGanssReqGenericDataganssAlmanac ganssAlmanac;
 NhuGanssReqGenericDataganssNavigationModel ganssNavigationModel;
 NhuGanssReqGenericDataganssTimeModelGNSS_GNSS ganssTimeModelGNSS_GNSS;
 NhuGanssReqGenericDataganssReferenceMeasurementInfo ganssReferenceMeasurementInfo;
 NhuGanssDataBits ganssDataBits;
 NhuGanssReqGenericDataganssUTCModel ganssUTCModel;
 NhuGanssNavigationModelAdditionalData ganssNavigationModelAdditionalData;
} NhuGanssReqGenericData;


typedef enum enumNhuGanssReqGenericData_v860extganssAddNavigationModel
{
 NhuGanssReqGenericData_v860extganssAddNavigationModeltrueEnum
} EnumNhuGanssReqGenericData_v860extganssAddNavigationModel;
typedef TknU32 NhuGanssReqGenericData_v860extganssAddNavigationModel;


typedef enum enumNhuGanssReqGenericData_v860extganssAddUTCmodel
{
 NhuGanssReqGenericData_v860extganssAddUTCmodeltrueEnum
} EnumNhuGanssReqGenericData_v860extganssAddUTCmodel;
typedef TknU32 NhuGanssReqGenericData_v860extganssAddUTCmodel;


typedef enum enumNhuGanssReqGenericData_v860extganssAuxInfo
{
 NhuGanssReqGenericData_v860extganssAuxInfotrueEnum
} EnumNhuGanssReqGenericData_v860extganssAuxInfo;
typedef TknU32 NhuGanssReqGenericData_v860extganssAuxInfo;


typedef TknU32 NhuGanssReqGenericData_v860extganssAddADchoicesorbitModelID;


typedef TknU32 NhuGanssReqGenericData_v860extganssAddADchoicesclockModelID;


typedef TknU32 NhuGanssReqGenericData_v860extganssAddADchoicesutcModelID;


typedef TknU32 NhuGanssReqGenericData_v860extganssAddADchoicesalmanacModelID;

typedef struct NhuGanssReqGenericData_v860extganssAddADchoices
{
 TknPres pres;
 NhuGanssReqGenericData_v860extganssAddADchoicesorbitModelID orbitModelID;
 NhuGanssReqGenericData_v860extganssAddADchoicesclockModelID clockModelID;
 NhuGanssReqGenericData_v860extganssAddADchoicesutcModelID utcModelID;
 NhuGanssReqGenericData_v860extganssAddADchoicesalmanacModelID almanacModelID;
} NhuGanssReqGenericData_v860extganssAddADchoices;

typedef struct NhuGanssReqGenericData_v860ext
{
 TknPres pres;
 NhuUE_Positioning_GANSS_SBAS_ID sbasId;
 NhuGanssReqGenericData_v860extganssAddNavigationModel ganssAddNavigationModel;
 NhuGanssReqGenericData_v860extganssAddUTCmodel ganssAddUTCmodel;
 NhuGanssReqGenericData_v860extganssAuxInfo ganssAuxInfo;
 NhuGanssReqGenericData_v860extganssAddADchoices ganssAddADchoices;
} NhuGanssReqGenericData_v860ext;

typedef struct NhuGanssRqstedGenericAssistanceDataLst
{
 TknU16 noComp;
 NhuGanssReqGenericData *member;
}NhuGanssRqstedGenericAssistanceDataLst;

typedef struct NhuGanssRqstedGenericAssistanceDataLst_v860ext
{
 TknU16 noComp;
 NhuGanssReqGenericData_v860ext *member;
}NhuGanssRqstedGenericAssistanceDataLst_v860ext;


typedef TknU8 NhuGANSS_Storm_Flagstorm_flag_one;


typedef TknU8 NhuGANSS_Storm_Flagstorm_flag_two;


typedef TknU8 NhuGANSS_Storm_Flagstorm_flag_three;


typedef TknU8 NhuGANSS_Storm_Flagstorm_flag_four;


typedef TknU8 NhuGANSS_Storm_Flagstorm_flag_five;

typedef struct NhuGANSS_Storm_Flag
{
 TknPres pres;
 NhuGANSS_Storm_Flagstorm_flag_one storm_flag_one;
 NhuGANSS_Storm_Flagstorm_flag_two storm_flag_two;
 NhuGANSS_Storm_Flagstorm_flag_three storm_flag_three;
 NhuGANSS_Storm_Flagstorm_flag_four storm_flag_four;
 NhuGANSS_Storm_Flagstorm_flag_five storm_flag_five;
} NhuGANSS_Storm_Flag;


typedef TknStrBSXL NhuGSM_CarrierRSSI;

typedef TknU32 NhuObservedTimeDifferenceToGSM;


typedef TknU32 NhuGSM_MeasuredResultsdummy;

typedef struct NhuGSM_MeasuredResults
{
 TknPres pres;
 NhuGSM_CarrierRSSI gsm_CarrierRSSI;
 NhuGSM_MeasuredResultsdummy dummy;
 NhuBSICReported bsicReported;
 NhuObservedTimeDifferenceToGSM dummy2;
} NhuGSM_MeasuredResults;

typedef struct NhuGSM_MeasuredResultsLst
{
 TknU16 noComp;
 NhuGSM_MeasuredResults *member;
}NhuGSM_MeasuredResultsLst;


typedef TknU32 NhuGPS_TOW_1sec;


typedef TknStrBSXL NhuGPS_TOW_Assisttlm_Msg;

typedef TknStrBSXL NhuGPS_TOW_Assisttlm_Reserved;

typedef TknU8 NhuGPS_TOW_Assistalert;


typedef TknU8 NhuGPS_TOW_AssistantiSpoof;

typedef struct NhuGPS_TOW_Assist
{
 TknPres pres;
 NhuSatID satID;
 NhuGPS_TOW_Assisttlm_Msg tlm_Msg;
 NhuGPS_TOW_Assisttlm_Reserved tlm_Reserved;
 NhuGPS_TOW_Assistalert alert;
 NhuGPS_TOW_AssistantiSpoof antiSpoof;
} NhuGPS_TOW_Assist;

typedef struct NhuGPS_TOW_AssistLst
{
 TknU16 noComp;
 NhuGPS_TOW_Assist *member;
}NhuGPS_TOW_AssistLst;


typedef TknU32 NhuGSM_CellIDgsm_CellID;

typedef struct NhuGSM_CellID
{
 TknPres pres;
 NhuGSM_CellIDgsm_CellID gsm_CellID;
} NhuGSM_CellID;


typedef TknU32 NhuGSM_PriorityInfopriority;


typedef TknS32 NhuGSM_PriorityInfoqRxLevMinGSM;


typedef TknU32 NhuGSM_PriorityInfothreshXhigh;


typedef TknU32 NhuGSM_PriorityInfothreshXlow;

typedef struct NhuGSM_PriorityInfo
{
 TknPres pres;
 NhuGSM_CellGroup gsmCellGroup;
 NhuGSM_PriorityInfopriority priority;
 NhuGSM_PriorityInfoqRxLevMinGSM qRxLevMinGSM;
 NhuGSM_PriorityInfothreshXhigh threshXhigh;
 NhuGSM_PriorityInfothreshXlow threshXlow;
} NhuGSM_PriorityInfo;

typedef struct NhuGSM_PriorityInfoLst
{
 TknU16 noComp;
 NhuGSM_PriorityInfo *member;
}NhuGSM_PriorityInfoLst;

typedef struct NhuGSMCellGroupingLst
{
 TknU16 noComp;
 NhuGSM_CellID *member;
}NhuGSMCellGroupingLst;


typedef TknU32 NhuIdleIntervalInfok;


typedef TknU32 NhuIdleIntervalInfooffset;

typedef struct NhuIdleIntervalInfo
{
 TknPres pres;
 NhuIdleIntervalInfok k;
 NhuIdleIntervalInfooffset offset;
} NhuIdleIntervalInfo;

typedef struct NhuInterFreqCell_LCR_r4
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuCellMeasurementEventResults_LCR_r4 nonFreqRelatedEventResults;
} NhuInterFreqCell_LCR_r4;

typedef struct NhuRemovedInterFreqCellLstremoveSomeInterFreqCells
{
 TknU16 noComp;
 NhuInterFreqCellID *member;
}NhuRemovedInterFreqCellLstremoveSomeInterFreqCells;

typedef struct NhuRemovedInterFreqCellLst
{
 TknU8 choice;
 union {
  NhuRemovedInterFreqCellLstremoveSomeInterFreqCells removeSomeInterFreqCells;
 } val;
} NhuRemovedInterFreqCellLst;

typedef struct NhuNewInterFreqCell
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfo cellInfo;
} NhuNewInterFreqCell;

typedef struct NhuNewInterFreqCellLst
{
 TknU16 noComp;
 NhuNewInterFreqCell *member;
}NhuNewInterFreqCellLst;

typedef struct NhuInterFreqCellInfoLst
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellLst newInterFreqCellLst;
 NhuCellsForInterFreqMeasLst cellsForInterFreqMeasLst;
} NhuInterFreqCellInfoLst;

typedef struct NhuNewInterFreqCell_r4
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfo_r4 cellInfo;
} NhuNewInterFreqCell_r4;

typedef struct NhuNewInterFreqCellLst_r4
{
 TknU16 noComp;
 NhuNewInterFreqCell_r4 *member;
}NhuNewInterFreqCellLst_r4;

typedef struct NhuInterFreqCellInfoLst_r4
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellLst_r4 newInterFreqCellLst;
 NhuCellsForInterFreqMeasLst cellsForInterFreqMeasLst;
} NhuInterFreqCellInfoLst_r4;


typedef TknU8 NhuNewInterFreqCell_r8modeSpecificInfotdd128intraSecondaryFreqIndicator;

typedef struct NhuNewInterFreqCell_r8modeSpecificInfotdd128
{
 TknPres pres;
 NhuNewInterFreqCell_r8modeSpecificInfotdd128intraSecondaryFreqIndicator intraSecondaryFreqIndicator;
} NhuNewInterFreqCell_r8modeSpecificInfotdd128;

typedef struct NhuNewInterFreqCell_r8modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuNewInterFreqCell_r8modeSpecificInfotdd128 tdd128;
 } val;
} NhuNewInterFreqCell_r8modeSpecificInfo;

typedef struct NhuNewInterFreqCell_r8
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfo_r4 cellInfo;
 NhuNewInterFreqCell_r8modeSpecificInfo modeSpecificInfo;
} NhuNewInterFreqCell_r8;

typedef struct NhuNewInterFreqCellLst_r8
{
 TknU16 noComp;
 NhuNewInterFreqCell_r8 *member;
}NhuNewInterFreqCellLst_r8;

typedef struct NhuInterFreqCellInfoLst_r8
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellLst_r8 newInterFreqCellLst;
 NhuCellsForInterFreqMeasLst cellsForInterFreqMeasLst;
} NhuInterFreqCellInfoLst_r8;


typedef TknU8 NhuNewInterFreqCell_r9modeSpecificInfotdd128intraSecondaryFreqIndicator;

typedef struct NhuNewInterFreqCell_r9modeSpecificInfotdd128
{
 TknPres pres;
 NhuNewInterFreqCell_r9modeSpecificInfotdd128intraSecondaryFreqIndicator intraSecondaryFreqIndicator;
} NhuNewInterFreqCell_r9modeSpecificInfotdd128;

typedef struct NhuNewInterFreqCell_r9modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuNewInterFreqCell_r9modeSpecificInfotdd128 tdd128;
 } val;
} NhuNewInterFreqCell_r9modeSpecificInfo;

typedef struct NhuNewInterFreqCell_r9
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfo_r9 cellInfo;
 NhuNewInterFreqCell_r9modeSpecificInfo modeSpecificInfo;
} NhuNewInterFreqCell_r9;

typedef struct NhuNewInterFreqCellLst_r9
{
 TknU16 noComp;
 NhuNewInterFreqCell_r9 *member;
}NhuNewInterFreqCellLst_r9;

typedef struct NhuInterFreqSIAcquisitionmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryScramblingCode;
} NhuInterFreqSIAcquisitionmodeSpecificInfofdd;

typedef struct NhuInterFreqSIAcquisitionmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuInterFreqSIAcquisitionmodeSpecificInfofdd fdd;
 } val;
} NhuInterFreqSIAcquisitionmodeSpecificInfo;

typedef struct NhuInterFreqSIAcquisition
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuInterFreqSIAcquisitionmodeSpecificInfo modeSpecificInfo;
} NhuInterFreqSIAcquisition;

typedef struct NhuInterFreqCellInfoLst_r9
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellLst_r9 newInterFreqCellLst;
 NhuCellsForInterFreqMeasLst cellsForInterFreqMeasLst;
 NhuCSGInterFreqCellInfoLst cSGInterFreqCellInfoLst;
 NhuInterFreqSIAcquisition interFreqSIAcquisition;
} NhuInterFreqCellInfoLst_r9;


typedef TknU8 NhuNewInterFreqCell_r10modeSpecificInfotdd128intraSecondaryFreqIndicator;


typedef TknStrBSXL NhuNewInterFreqCell_r10modeSpecificInfotdd128sNPLMonitorSetIndicator_TDD128;
typedef struct NhuNewInterFreqCell_r10modeSpecificInfotdd128
{
 TknPres pres;
 NhuNewInterFreqCell_r10modeSpecificInfotdd128intraSecondaryFreqIndicator intraSecondaryFreqIndicator;
 NhuNewInterFreqCell_r10modeSpecificInfotdd128sNPLMonitorSetIndicator_TDD128 sNPLMonitorSetIndicator_TDD128;
} NhuNewInterFreqCell_r10modeSpecificInfotdd128;

typedef struct NhuNewInterFreqCell_r10modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuNewInterFreqCell_r10modeSpecificInfotdd128 tdd128;
 } val;
} NhuNewInterFreqCell_r10modeSpecificInfo;

typedef struct NhuNewInterFreqCell_r10
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfo_r9 cellInfo;
 NhuNewInterFreqCell_r10modeSpecificInfo modeSpecificInfo;
} NhuNewInterFreqCell_r10;

typedef struct NhuNewInterFreqCellLst_r10
{
 TknU16 noComp;
 NhuNewInterFreqCell_r10 *member;
}NhuNewInterFreqCellLst_r10;

typedef struct NhuInterFreqCellInfoLst_r10
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellLst_r10 newInterFreqCellLst;
 NhuCellsForInterFreqMeasLst cellsForInterFreqMeasLst;
 NhuCSGInterFreqCellInfoLst cSGInterFreqCellInfoLst;
 NhuInterFreqSIAcquisition interFreqSIAcquisition;
} NhuInterFreqCellInfoLst_r10;

typedef struct NhuNewInterFreqCellSI_RSCP
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfoSI_RSCP cellInfo;
} NhuNewInterFreqCellSI_RSCP;

typedef struct NhuNewInterFreqCellSI_Lst_RSCP
{
 TknU16 noComp;
 NhuNewInterFreqCellSI_RSCP *member;
}NhuNewInterFreqCellSI_Lst_RSCP;

typedef struct NhuInterFreqCellInfoSI_Lst_RSCP
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellSI_Lst_RSCP newInterFreqCellLst;
} NhuInterFreqCellInfoSI_Lst_RSCP;

typedef struct NhuNewInterFreqCellSI_ECN0
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfoSI_ECN0 cellInfo;
} NhuNewInterFreqCellSI_ECN0;

typedef struct NhuNewInterFreqCellSI_Lst_ECN0
{
 TknU16 noComp;
 NhuNewInterFreqCellSI_ECN0 *member;
}NhuNewInterFreqCellSI_Lst_ECN0;

typedef struct NhuInterFreqCellInfoSI_Lst_ECN0
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellSI_Lst_ECN0 newInterFreqCellLst;
} NhuInterFreqCellInfoSI_Lst_ECN0;

typedef struct NhuNewInterFreqCellSI_HCS_RSCP
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfoSI_HCS_RSCP cellInfo;
} NhuNewInterFreqCellSI_HCS_RSCP;

typedef struct NhuNewInterFreqCellSI_Lst_HCS_RSCP
{
 TknU16 noComp;
 NhuNewInterFreqCellSI_HCS_RSCP *member;
}NhuNewInterFreqCellSI_Lst_HCS_RSCP;

typedef struct NhuInterFreqCellInfoSI_Lst_HCS_RSCP
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellSI_Lst_HCS_RSCP newInterFreqCellLst;
} NhuInterFreqCellInfoSI_Lst_HCS_RSCP;

typedef struct NhuNewInterFreqCellSI_HCS_ECN0
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfoSI_HCS_ECN0 cellInfo;
} NhuNewInterFreqCellSI_HCS_ECN0;

typedef struct NhuNewInterFreqCellSI_Lst_HCS_ECN0
{
 TknU16 noComp;
 NhuNewInterFreqCellSI_HCS_ECN0 *member;
}NhuNewInterFreqCellSI_Lst_HCS_ECN0;

typedef struct NhuInterFreqCellInfoSI_Lst_HCS_ECN0
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellSI_Lst_HCS_ECN0 newInterFreqCellLst;
} NhuInterFreqCellInfoSI_Lst_HCS_ECN0;

typedef struct NhuNewInterFreqCellSI_RSCP_LCR_r4
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfoSI_RSCP_LCR_r4 cellInfo;
} NhuNewInterFreqCellSI_RSCP_LCR_r4;

typedef struct NhuNewInterFreqCellSI_Lst_RSCP_LCR_r4
{
 TknU16 noComp;
 NhuNewInterFreqCellSI_RSCP_LCR_r4 *member;
}NhuNewInterFreqCellSI_Lst_RSCP_LCR_r4;

typedef struct NhuInterFreqCellInfoSI_Lst_RSCP_LCR
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellSI_Lst_RSCP_LCR_r4 newInterFreqCellLst;
} NhuInterFreqCellInfoSI_Lst_RSCP_LCR;

typedef struct NhuNewInterFreqCellSI_ECN0_LCR_r4
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfoSI_ECN0_LCR_r4 cellInfo;
} NhuNewInterFreqCellSI_ECN0_LCR_r4;

typedef struct NhuNewInterFreqCellSI_Lst_ECN0_LCR_r4
{
 TknU16 noComp;
 NhuNewInterFreqCellSI_ECN0_LCR_r4 *member;
}NhuNewInterFreqCellSI_Lst_ECN0_LCR_r4;

typedef struct NhuInterFreqCellInfoSI_Lst_ECN0_LCR
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellSI_Lst_ECN0_LCR_r4 newInterFreqCellLst;
} NhuInterFreqCellInfoSI_Lst_ECN0_LCR;

typedef struct NhuNewInterFreqCellSI_HCS_RSCP_LCR_r4
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfoSI_HCS_RSCP_LCR_r4 cellInfo;
} NhuNewInterFreqCellSI_HCS_RSCP_LCR_r4;

typedef struct NhuNewInterFreqCellSI_Lst_HCS_RSCP_LCR_r4
{
 TknU16 noComp;
 NhuNewInterFreqCellSI_HCS_RSCP_LCR_r4 *member;
}NhuNewInterFreqCellSI_Lst_HCS_RSCP_LCR_r4;

typedef struct NhuInterFreqCellInfoSI_Lst_HCS_RSCP_LCR
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellSI_Lst_HCS_RSCP_LCR_r4 newInterFreqCellLst;
} NhuInterFreqCellInfoSI_Lst_HCS_RSCP_LCR;

typedef struct NhuNewInterFreqCellSI_HCS_ECN0_LCR_r4
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfoSI_HCS_ECN0_LCR_r4 cellInfo;
} NhuNewInterFreqCellSI_HCS_ECN0_LCR_r4;

typedef struct NhuNewInterFreqCellSI_Lst_HCS_ECN0_LCR_r4
{
 TknU16 noComp;
 NhuNewInterFreqCellSI_HCS_ECN0_LCR_r4 *member;
}NhuNewInterFreqCellSI_Lst_HCS_ECN0_LCR_r4;

typedef struct NhuInterFreqCellInfoSI_Lst_HCS_ECN0_LCR
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellSI_Lst_HCS_ECN0_LCR_r4 newInterFreqCellLst;
} NhuInterFreqCellInfoSI_Lst_HCS_ECN0_LCR;

typedef struct NhuInterFreqCellLst_LCR_r4_ext
{
 TknU16 noComp;
 NhuInterFreqCell_LCR_r4 *member;
}NhuInterFreqCellLst_LCR_r4_ext;

typedef struct NhuInterFreqCellMeasuredResultsLst
{
 TknU16 noComp;
 NhuCellMeasuredResults *member;
}NhuInterFreqCellMeasuredResultsLst;

typedef struct NhuInterFreqCellMeasuredResultsLst_v920ext
{
 TknU16 noComp;
 NhuCellMeasuredResults_v920ext *member;
}NhuInterFreqCellMeasuredResultsLst_v920ext;

typedef struct NhuInterFreqEvent
{
 TknU8 choice;
 union {
  NhuEvent2a event2a;
  NhuEvent2b event2b;
  NhuEvent2c event2c;
  NhuEvent2d event2d;
  NhuEvent2e event2e;
  NhuEvent2f event2f;
 } val;
} NhuInterFreqEvent;

typedef struct NhuInterFreqEvent_r6
{
 TknU8 choice;
 union {
  NhuEvent2a_r6 event2a;
  NhuEvent2b_r6 event2b;
  NhuEvent2c_r6 event2c;
  NhuEvent2d_r6 event2d;
  NhuEvent2e_r6 event2e;
  NhuEvent2f_r6 event2f;
 } val;
} NhuInterFreqEvent_r6;

typedef struct NhuInterFreqEvent_r10
{
 TknU8 choice;
 union {
  NhuEvent2a_r10 event2a;
  NhuEvent2b_r10 event2b;
  NhuEvent2c_r10 event2c;
  NhuEvent2d_r10 event2d;
  NhuEvent2e_r10 event2e;
  NhuEvent2f_r10 event2f;
 } val;
} NhuInterFreqEvent_r10;

typedef struct NhuInterFreqEventLst
{
 TknU16 noComp;
 NhuInterFreqEvent *member;
}NhuInterFreqEventLst;

typedef struct NhuInterFreqEventLst_r6
{
 TknU16 noComp;
 NhuInterFreqEvent_r6 *member;
}NhuInterFreqEventLst_r6;

typedef struct NhuInterFreqEventLst_r10
{
 TknU16 noComp;
 NhuInterFreqEvent_r10 *member;
}NhuInterFreqEventLst_r10;

typedef struct NhuInterFrequencyMeasuredResultsLst_v590ext
{
 TknU16 noComp;
 NhuDeltaRSCPPerCell *member;
}NhuInterFrequencyMeasuredResultsLst_v590ext;

typedef struct NhuThreholdNonUsedFrequency_deltaLst
{
 TknU16 noComp;
 NhuDeltaRSCPPerCell *member;
}NhuThreholdNonUsedFrequency_deltaLst;

typedef struct NhuInter_FreqEventCriteria_v590ext
{
 TknPres pres;
 NhuDeltaRSCP threholdUsedFrequency_delta;
 NhuThreholdNonUsedFrequency_deltaLst threholdNonUsedFrequency_deltaLst;
} NhuInter_FreqEventCriteria_v590ext;

typedef struct NhuInter_FreqEventCriteriaLst_v590ext
{
 TknU16 noComp;
 NhuInter_FreqEventCriteria_v590ext *member;
}NhuInter_FreqEventCriteriaLst_v590ext;

typedef struct NhuIntra_FreqEventCriteriaLst_v590ext
{
 TknU16 noComp;
 NhuDeltaRSCP *member;
}NhuIntra_FreqEventCriteriaLst_v590ext;

typedef struct NhuIntraFrequencyMeasuredResultsLst_v590ext
{
 TknU16 noComp;
 NhuDeltaRSCPPerCell *member;
}NhuIntraFrequencyMeasuredResultsLst_v590ext;

typedef struct NhuInterFreqEventResults_LCR_r4_ext
{
 TknPres pres;
 NhuEventIDInterFreq eventID;
 NhuInterFreqCellLst_LCR_r4_ext interFreqCellLst;
} NhuInterFreqEventResults_LCR_r4_ext;


typedef enum enumNhuIntraFreqMeasQuantity_FDD
{
 NhuIntraFreqMeasQuantity_FDDcpich_Ec_N0Enum,
 NhuIntraFreqMeasQuantity_FDDcpich_RSCPEnum,
 NhuIntraFreqMeasQuantity_FDDpathlossEnum,
 NhuIntraFreqMeasQuantity_FDDdummyEnum
} EnumNhuIntraFreqMeasQuantity_FDD;
typedef TknU32 NhuIntraFreqMeasQuantity_FDD;


typedef enum enumNhuIntraFreqMeasQuantity_TDD
{
 NhuIntraFreqMeasQuantity_TDDprimaryCCPCH_RSCPEnum,
 NhuIntraFreqMeasQuantity_TDDpathlossEnum,
 NhuIntraFreqMeasQuantity_TDDtimeslotISCPEnum,
 NhuIntraFreqMeasQuantity_TDDdummyEnum
} EnumNhuIntraFreqMeasQuantity_TDD;
typedef TknU32 NhuIntraFreqMeasQuantity_TDD;

typedef struct NhuIntraFreqMeasQuantity_TDDLst
{
 TknU16 noComp;
 NhuIntraFreqMeasQuantity_TDD *member;
}NhuIntraFreqMeasQuantity_TDDLst;

typedef struct NhuIntraFreqMeasQuantitymodeSpecificInfofdd
{
 TknPres pres;
 NhuIntraFreqMeasQuantity_FDD intraFreqMeasQuantity_FDD;
} NhuIntraFreqMeasQuantitymodeSpecificInfofdd;

typedef struct NhuIntraFreqMeasQuantitymodeSpecificInfotdd
{
 TknPres pres;
 NhuIntraFreqMeasQuantity_TDDLst intraFreqMeasQuantity_TDDLst;
} NhuIntraFreqMeasQuantitymodeSpecificInfotdd;

typedef struct NhuIntraFreqMeasQuantitymodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuIntraFreqMeasQuantitymodeSpecificInfofdd fdd;
  NhuIntraFreqMeasQuantitymodeSpecificInfotdd tdd;
 } val;
} NhuIntraFreqMeasQuantitymodeSpecificInfo;

typedef struct NhuIntraFreqMeasQuantity
{
 TknPres pres;
 Nhu3gFilterCoefficient filterCoefficient;
 NhuIntraFreqMeasQuantitymodeSpecificInfo modeSpecificInfo;
} NhuIntraFreqMeasQuantity;

typedef struct NhuInterFreqMeasQuantityreportingCriteriaintraFreqRprtngCriteria
{
 TknPres pres;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
} NhuInterFreqMeasQuantityreportingCriteriaintraFreqRprtngCriteria;

typedef struct NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteriamodeSpecificInfofdd
{
 TknPres pres;
 NhuFreqQualityEstimateQuantity_FDD freqQualityEstimateQuantity_FDD;
} NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteriamodeSpecificInfofdd;

typedef struct NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteriamodeSpecificInfotdd
{
 TknPres pres;
 NhuFreqQualityEstimateQuantity_TDD freqQualityEstimateQuantity_TDD;
} NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteriamodeSpecificInfotdd;

typedef struct NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteriamodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteriamodeSpecificInfofdd fdd;
  NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteriamodeSpecificInfotdd tdd;
 } val;
} NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteriamodeSpecificInfo;

typedef struct NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteria
{
 TknPres pres;
 Nhu3gFilterCoefficient filterCoefficient;
 NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteriamodeSpecificInfo modeSpecificInfo;
} NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteria;

typedef struct NhuInterFreqMeasQuantityreportingCriteria
{
 TknU8 choice;
 union {
  NhuInterFreqMeasQuantityreportingCriteriaintraFreqRprtngCriteria intraFreqRprtngCriteria;
  NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteria interFreqRprtngCriteria;
 } val;
} NhuInterFreqMeasQuantityreportingCriteria;

typedef struct NhuInterFreqMeasQuantity
{
 TknPres pres;
 NhuInterFreqMeasQuantityreportingCriteria reportingCriteria;
} NhuInterFreqMeasQuantity;


typedef TknU32 NhuUTRA_CarrierRSSI;

typedef struct NhuInterFreqMeasuredResults
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuUTRA_CarrierRSSI utra_CarrierRSSI;
 NhuInterFreqCellMeasuredResultsLst interFreqCellMeasuredResultsLst;
} NhuInterFreqMeasuredResults;

typedef struct NhuInterFreqMeasuredResults_v920ext
{
 TknPres pres;
 NhuInterFreqCellMeasuredResultsLst_v920ext interFreqCellMeasuredResultsLst;
} NhuInterFreqMeasuredResults_v920ext;

typedef struct NhuInterFreqMeasuredResultsLst
{
 TknU16 noComp;
 NhuInterFreqMeasuredResults *member;
}NhuInterFreqMeasuredResultsLst;

typedef struct NhuInterFreqMeasuredResultsLst_v920ext
{
 TknU16 noComp;
 NhuInterFreqMeasuredResults_v920ext *member;
}NhuInterFreqMeasuredResultsLst_v920ext;

typedef struct NhuInterFreqMeasurementSysInfo_RSCP
{
 TknPres pres;
 NhuInterFreqCellInfoSI_Lst_RSCP interFreqCellInfoSI_Lst;
} NhuInterFreqMeasurementSysInfo_RSCP;

typedef struct NhuInterFreqMeasurementSysInfo_ECN0
{
 TknPres pres;
 NhuInterFreqCellInfoSI_Lst_ECN0 interFreqCellInfoSI_Lst;
} NhuInterFreqMeasurementSysInfo_ECN0;

typedef struct NhuInterFreqMeasurementSysInfo_HCS_RSCP
{
 TknPres pres;
 NhuInterFreqCellInfoSI_Lst_HCS_RSCP interFreqCellInfoSI_Lst;
} NhuInterFreqMeasurementSysInfo_HCS_RSCP;

typedef struct NhuInterFreqMeasurementSysInfo_HCS_ECN0
{
 TknPres pres;
 NhuInterFreqCellInfoSI_Lst_HCS_ECN0 interFreqCellInfoSI_Lst;
} NhuInterFreqMeasurementSysInfo_HCS_ECN0;

typedef struct NhuInterFreqMeasurementSysInfo_RSCP_LCR_r4
{
 TknPres pres;
 NhuInterFreqCellInfoSI_Lst_RSCP_LCR interFreqCellInfoSI_Lst;
} NhuInterFreqMeasurementSysInfo_RSCP_LCR_r4;

typedef struct NhuInterFreqMeasurementSysInfo_ECN0_LCR_r4
{
 TknPres pres;
 NhuInterFreqCellInfoSI_Lst_ECN0_LCR interFreqCellInfoSI_Lst;
} NhuInterFreqMeasurementSysInfo_ECN0_LCR_r4;

typedef struct NhuInterFreqMeasurementSysInfo_HCS_RSCP_LCR_r4
{
 TknPres pres;
 NhuInterFreqCellInfoSI_Lst_HCS_RSCP_LCR interFreqCellInfoSI_Lst;
} NhuInterFreqMeasurementSysInfo_HCS_RSCP_LCR_r4;

typedef struct NhuInterFreqMeasurementSysInfo_HCS_ECN0_LCR_r4
{
 TknPres pres;
 NhuInterFreqCellInfoSI_Lst_HCS_ECN0_LCR interFreqCellInfoSI_Lst;
} NhuInterFreqMeasurementSysInfo_HCS_ECN0_LCR_r4;

typedef struct NhuInterFreqRACHRepCellsLst
{
 TknU16 noComp;
 NhuInterFreqCellID *member;
}NhuInterFreqRACHRepCellsLst;


typedef enum enumNhuInterFreqRepQuantityRACH_FDD
{
 NhuInterFreqRepQuantityRACH_FDDcpich_EcN0Enum,
 NhuInterFreqRepQuantityRACH_FDDcpich_RSCPEnum
} EnumNhuInterFreqRepQuantityRACH_FDD;
typedef TknU32 NhuInterFreqRepQuantityRACH_FDD;


typedef enum enumNhuInterFreqRepQuantityRACH_TDD
{
 NhuInterFreqRepQuantityRACH_TDDdummyEnum,
 NhuInterFreqRepQuantityRACH_TDDprimaryCCPCH_RSCPEnum
} EnumNhuInterFreqRepQuantityRACH_TDD;
typedef TknU32 NhuInterFreqRepQuantityRACH_TDD;

typedef struct NhuInterFreqRepQuantityRACH_TDDLst
{
 TknU16 noComp;
 NhuInterFreqRepQuantityRACH_TDD *member;
}NhuInterFreqRepQuantityRACH_TDDLst;


typedef TknU32 NhuMaxReportedCellsOnRACHinterFreq;

typedef struct NhuDummy_InterFreqRACHRprtngInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuInterFreqRepQuantityRACH_FDD interFreqRepQuantityRACH_FDD;
} NhuDummy_InterFreqRACHRprtngInfomodeSpecificInfofdd;

typedef struct NhuDummy_InterFreqRACHRprtngInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuInterFreqRepQuantityRACH_TDDLst interFreqRepQuantityRACH_TDDLst;
} NhuDummy_InterFreqRACHRprtngInfomodeSpecificInfotdd;

typedef struct NhuDummy_InterFreqRACHRprtngInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDummy_InterFreqRACHRprtngInfomodeSpecificInfofdd fdd;
  NhuDummy_InterFreqRACHRprtngInfomodeSpecificInfotdd tdd;
  NhuThreshold interFreqRACHRprtngThreshold;
  NhuMaxReportedCellsOnRACHinterFreq maxReportedCellsOnRACHinterFreq;
 } val;
} NhuDummy_InterFreqRACHRprtngInfomodeSpecificInfo;

typedef struct NhuDummy_InterFreqRACHRprtngInfo
{
 TknPres pres;
 NhuDummy_InterFreqRACHRprtngInfomodeSpecificInfo modeSpecificInfo;
} NhuDummy_InterFreqRACHRprtngInfo;

typedef struct NhuInterFreqRACHRprtngInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuInterFreqRepQuantityRACH_FDD interFreqRepQuantityRACH_FDD;
} NhuInterFreqRACHRprtngInfomodeSpecificInfofdd;

typedef struct NhuInterFreqRACHRprtngInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuInterFreqRepQuantityRACH_TDDLst interFreqRepQuantityRACH_TDDLst;
} NhuInterFreqRACHRprtngInfomodeSpecificInfotdd;

typedef struct NhuInterFreqRACHRprtngInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuInterFreqRACHRprtngInfomodeSpecificInfofdd fdd;
  NhuInterFreqRACHRprtngInfomodeSpecificInfotdd tdd;
 } val;
} NhuInterFreqRACHRprtngInfomodeSpecificInfo;

typedef struct NhuInterFreqRACHRprtngInfo
{
 TknPres pres;
 NhuInterFreqRACHRprtngInfomodeSpecificInfo modeSpecificInfo;
 NhuThreshold interFreqRACHRprtngThreshold;
 NhuMaxReportedCellsOnRACHinterFreq maxReportedCellsOnRACHinterFreq;
} NhuInterFreqRACHRprtngInfo;

typedef struct NhuInterFreqRprtngCriteria
{
 TknPres pres;
 NhuInterFreqEventLst interFreqEventLst;
} NhuInterFreqRprtngCriteria;

typedef struct NhuPeriodicalWithRprtngCellStatus
{
 TknPres pres;
 NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 NhuRprtngCellStatus reportingCellStatus;
} NhuPeriodicalWithRprtngCellStatus;

typedef struct NhuRprtngCellStatusOpt
{
 TknPres pres;
 NhuRprtngCellStatus reportingCellStatus;
} NhuRprtngCellStatusOpt;

typedef struct NhuInterFreqReportCriteria
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria intraFreqRprtngCriteria;
  NhuInterFreqRprtngCriteria interFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuInterFreqReportCriteria;

typedef struct NhuIntraFreqEvent_r4
{
 TknU8 choice;
 union {
  NhuEvent1a_r4 e1a;
  NhuEvent1b_r4 e1b;
  NhuEvent1c e1c;
  NhuEvent1e e1e;
  NhuEvent1f e1f;
  NhuThresholdUsedFrequency e1h;
  NhuThresholdUsedFrequency e1i;
 } val;
} NhuIntraFreqEvent_r4;

typedef struct NhuIntraFreqEventCriteria_r4
{
 TknPres pres;
 NhuIntraFreqEvent_r4 event;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuIntraFreqEventCriteria_r4;

typedef struct NhuIntraFreqEventCriteriaLst_r4
{
 TknU16 noComp;
 NhuIntraFreqEventCriteria_r4 *member;
}NhuIntraFreqEventCriteriaLst_r4;

typedef struct NhuIntraFreqRprtngCriteria_r4
{
 TknPres pres;
 NhuIntraFreqEventCriteriaLst_r4 eventCriteriaLst;
} NhuIntraFreqRprtngCriteria_r4;

typedef struct NhuInterFreqReportCriteria_r4
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_r4 intraFreqRprtngCriteria;
  NhuInterFreqRprtngCriteria interFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuInterFreqReportCriteria_r4;

typedef struct NhuIntraFreqEvent_r6
{
 TknU8 choice;
 union {
  NhuEvent1a_r4 e1a;
  NhuEvent1b_r4 e1b;
  NhuEvent1c e1c;
  NhuEvent1d e1d;
  NhuEvent1e_r6 e1e;
  NhuEvent1f_r6 e1f;
  NhuThresholdUsedFrequency_r6 e1h;
  NhuThresholdUsedFrequency_r6 e1i;
  NhuEvent1j_r6 e1j;
 } val;
} NhuIntraFreqEvent_r6;

typedef struct NhuIntraFreqEventCriteria_r6
{
 TknPres pres;
 NhuIntraFreqEvent_r6 event;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuIntraFreqEventCriteria_r6;

typedef struct NhuIntraFreqEventCriteriaLst_r6
{
 TknU16 noComp;
 NhuIntraFreqEventCriteria_r6 *member;
}NhuIntraFreqEventCriteriaLst_r6;

typedef struct NhuIntraFreqRprtngCriteria_r6
{
 TknPres pres;
 NhuIntraFreqEventCriteriaLst_r6 eventCriteriaLst;
} NhuIntraFreqRprtngCriteria_r6;

typedef struct NhuInterFreqRprtngCriteria_r6
{
 TknPres pres;
 NhuInterFreqEventLst_r6 interFreqEventLst;
} NhuInterFreqRprtngCriteria_r6;

typedef struct NhuInterFreqReportCriteria_r6
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_r6 intraFreqRprtngCriteria;
  NhuInterFreqRprtngCriteria_r6 interFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuInterFreqReportCriteria_r6;

typedef struct NhuIntraFreqEvent_r7
{
 TknU8 choice;
 union {
  NhuEvent1a_r4 e1a;
  NhuEvent1b_r7 e1b;
  NhuEvent1c e1c;
  NhuEvent1d e1d;
  NhuEvent1e_r6 e1e;
  NhuEvent1f_r6 e1f;
  NhuThresholdUsedFrequency_r6 e1h;
  NhuThresholdUsedFrequency_r6 e1i;
  NhuEvent1j_r6 e1j;
 } val;
} NhuIntraFreqEvent_r7;

typedef struct NhuIntraFreqEventCriteria_r7
{
 TknPres pres;
 NhuIntraFreqEvent_r7 event;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuIntraFreqEventCriteria_r7;

typedef struct NhuIntraFreqEventCriteriaLst_r7
{
 TknU16 noComp;
 NhuIntraFreqEventCriteria_r7 *member;
}NhuIntraFreqEventCriteriaLst_r7;

typedef struct NhuIntraFreqRprtngCriteria_r7
{
 TknPres pres;
 NhuIntraFreqEventCriteriaLst_r7 eventCriteriaLst;
} NhuIntraFreqRprtngCriteria_r7;

typedef struct NhuInterFreqReportCriteria_r7
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_r7 intraFreqRprtngCriteria;
  NhuInterFreqRprtngCriteria_r6 interFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuInterFreqReportCriteria_r7;

typedef struct NhuIntraFreqEventOnSecULFreq
{
 TknU8 choice;
 union {
  NhuEvent1a_OnSecUlFreq_r9 e1a;
  NhuEvent1b_OnSecUlFreq_r9 e1b;
  NhuEvent1c e1c;
  NhuEvent1e_r6 e1e;
  NhuEvent1f_r6 e1f;
 } val;
} NhuIntraFreqEventOnSecULFreq;

typedef struct NhuIntraFreqEventCriteriaOnSecULFreq
{
 TknPres pres;
 NhuIntraFreqEventOnSecULFreq event;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuIntraFreqEventCriteriaOnSecULFreq;

typedef struct NhuIntraFreqEventCriteriaLstOnSecULFreqintraFreqEventCriteria
{
 TknU16 noComp;
 NhuIntraFreqEventCriteriaOnSecULFreq *member;
}NhuIntraFreqEventCriteriaLstOnSecULFreqintraFreqEventCriteria;

typedef struct NhuIntraFreqEventCriteriaLstOnSecULFreq
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuIntraFreqEventCriteriaLstOnSecULFreqintraFreqEventCriteria intraFreqEventCriteria;
} NhuIntraFreqEventCriteriaLstOnSecULFreq;

typedef struct NhuIntraFreqRprtngCriteria_r9
{
 TknPres pres;
 NhuIntraFreqEventCriteriaLst_r7 eventCriteriaLst;
 NhuIntraFreqEventCriteriaLstOnSecULFreq eventCriteriaLstOnSecULFreq;
} NhuIntraFreqRprtngCriteria_r9;

typedef struct NhuInterFreqReportCriteria_r9
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_r9 intraFreqRprtngCriteria;
  NhuInterFreqRprtngCriteria_r6 interFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuInterFreqReportCriteria_r9;

typedef struct NhuInterFreqRprtngCriteria_r10
{
 TknPres pres;
 NhuInterFreqEventLst_r10 interFreqEventLst;
} NhuInterFreqRprtngCriteria_r10;

typedef struct NhuPeriodicalWithRprtngCellStatus_r10
{
 TknPres pres;
 NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 NhuRprtngCellStatus_r10 reportingCellStatus;
} NhuPeriodicalWithRprtngCellStatus_r10;

typedef struct NhuRprtngCellStatusOpt_r10
{
 TknPres pres;
 NhuRprtngCellStatus_r10 reportingCellStatus;
} NhuRprtngCellStatusOpt_r10;

typedef struct NhuInterFreqReportCriteria_r10
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_r9 intraFreqRprtngCriteria;
  NhuInterFreqRprtngCriteria_r10 interFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus_r10 periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt_r10 noRprtng;
 } val;
} NhuInterFreqReportCriteria_r10;


typedef TknU8 NhuInterFreqRprtngQuantityutra_Carrier_RSSI;


typedef TknU8 NhuInterFreqRprtngQuantityfrequencyQualityEstimate;

typedef struct NhuInterFreqRprtngQuantity
{
 TknPres pres;
 NhuInterFreqRprtngQuantityutra_Carrier_RSSI utra_Carrier_RSSI;
 NhuInterFreqRprtngQuantityfrequencyQualityEstimate frequencyQualityEstimate;
 NhuCellRprtngQuantities nonFreqRelatedQuantities;
} NhuInterFreqRprtngQuantity;


typedef enum enumNhuMeasurementValidityue_State
{
 NhuMeasurementValidityue_Statecell_DCHEnum,
 NhuMeasurementValidityue_Stateall_But_Cell_DCHEnum,
 NhuMeasurementValidityue_Stateall_StatesEnum
} EnumNhuMeasurementValidityue_State;
typedef TknU32 NhuMeasurementValidityue_State;

typedef struct NhuMeasurementValidity
{
 TknPres pres;
 NhuMeasurementValidityue_State ue_State;
} NhuMeasurementValidity;

typedef struct NhuRL_AdditionInfoLst
{
 TknU16 noComp;
 NhuPrimaryCPICH_Info *member;
}NhuRL_AdditionInfoLst;

typedef struct NhuRL_InfoLsts
{
 TknPres pres;
 NhuRL_AdditionInfoLst rl_AdditionInfoLst;
 NhuRL_RemovalInfoLst rL_RemovalInfoLst;
} NhuRL_InfoLsts;

typedef struct NhuUE_AutonomousUpdMode
{
 TknU8 choice;
 union {
  NhuRL_InfoLsts dummy2;
 } val;
} NhuUE_AutonomousUpdMode;

typedef struct NhuInterFrequencyMeasurement
{
 TknPres pres;
 NhuInterFreqCellInfoLst interFreqCellInfoLst;
 NhuInterFreqMeasQuantity interFreqMeasQuantity;
 NhuInterFreqRprtngQuantity interFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_AutonomousUpdMode interFreqSetUpd;
 NhuInterFreqReportCriteria reportCriteria;
} NhuInterFrequencyMeasurement;

typedef struct NhuInterFrequencyMeasurement_r4
{
 TknPres pres;
 NhuInterFreqCellInfoLst_r4 interFreqCellInfoLst;
 NhuInterFreqMeasQuantity interFreqMeasQuantity;
 NhuInterFreqRprtngQuantity interFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_AutonomousUpdMode interFreqSetUpd;
 NhuInterFreqReportCriteria_r4 reportCriteria;
} NhuInterFrequencyMeasurement_r4;

typedef struct NhuInterFrequencyMeasurement_r6
{
 TknPres pres;
 NhuInterFreqCellInfoLst_r4 interFreqCellInfoLst;
 NhuInterFreqMeasQuantity interFreqMeasQuantity;
 NhuInterFreqRprtngQuantity interFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_AutonomousUpdMode interFreqSetUpd;
 NhuInterFreqReportCriteria_r6 reportCriteria;
} NhuInterFrequencyMeasurement_r6;

typedef struct NhuInterFrequencyMeasurement_r7
{
 TknPres pres;
 NhuInterFreqCellInfoLst_r4 interFreqCellInfoLst;
 NhuInterFreqMeasQuantity interFreqMeasQuantity;
 NhuInterFreqRprtngQuantity interFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_AutonomousUpdMode interFreqSetUpd;
 NhuInterFreqReportCriteria_r7 reportCriteria;
} NhuInterFrequencyMeasurement_r7;


typedef TknU32 NhuInterFrequencyMeasurement_r8adjacentFrequencyIdx;

typedef struct NhuInterFrequencyMeasurement_r8
{
 TknPres pres;
 NhuInterFreqCellInfoLst_r8 interFreqCellInfoLst;
 NhuInterFreqMeasQuantity interFreqMeasQuantity;
 NhuInterFreqRprtngQuantity interFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_AutonomousUpdMode interFreqSetUpd;
 NhuInterFrequencyMeasurement_r8adjacentFrequencyIdx adjacentFrequencyIdx;
 NhuInterFreqReportCriteria_r7 reportCriteria;
} NhuInterFrequencyMeasurement_r8;


typedef TknU32 NhuInterFrequencyMeasurement_r9adjacentFrequencyIdx;


typedef TknU32 NhuInterFrequencyMeasurement_r9interBandFrequencyIdx;

typedef struct NhuInterFrequencyMeasurement_r9
{
 TknPres pres;
 NhuInterFreqCellInfoLst_r9 interFreqCellInfoLst;
 NhuInterFreqMeasQuantity interFreqMeasQuantity;
 NhuInterFreqRprtngQuantity interFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_AutonomousUpdMode interFreqSetUpd;
 NhuInterFrequencyMeasurement_r9adjacentFrequencyIdx adjacentFrequencyIdx;
 NhuInterFrequencyMeasurement_r9interBandFrequencyIdx interBandFrequencyIdx;
 NhuInterFreqReportCriteria_r9 reportCriteria;
} NhuInterFrequencyMeasurement_r9;


typedef TknU32 NhuInterFrequencyMeasurement_r10adjacentFrequencyIdx;


typedef TknU32 NhuInterFrequencyMeasurement_r10interBandFrequencyIdx;

typedef struct NhuInterFrequencyMeasurement_r10
{
 TknPres pres;
 NhuInterFreqCellInfoLst_r10 interFreqCellInfoLst;
 NhuInterFreqMeasQuantity interFreqMeasQuantity;
 NhuInterFreqRprtngQuantity interFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_AutonomousUpdMode interFreqSetUpd;
 NhuInterFrequencyMeasurement_r10adjacentFrequencyIdx adjacentFrequencyIdx;
 NhuInterFrequencyMeasurement_r10interBandFrequencyIdx interBandFrequencyIdx;
 NhuFreqIdxLstForEnhancedMeas freqIdxLstForEnhancedMeas;
 NhuInterFreqReportCriteria_r10 reportCriteria;
} NhuInterFrequencyMeasurement_r10;


typedef TknStrBSXL NhuNC_Mode;
typedef struct NhuInterRAT_TgtCellDescriptiontechnologySpecificInfogsm
{
 TknPres pres;
 NhuBSIC bsic;
 NhuFrequency_Band frequency_band;
 NhuBCCH_ARFCN bcch_ARFCN;
 NhuNC_Mode ncMode;
} NhuInterRAT_TgtCellDescriptiontechnologySpecificInfogsm;

typedef struct NhuInterRAT_TgtCellDescriptiontechnologySpecificInfo
{
 TknU8 choice;
 union {
  NhuInterRAT_TgtCellDescriptiontechnologySpecificInfogsm gsm;
 } val;
} NhuInterRAT_TgtCellDescriptiontechnologySpecificInfo;

typedef struct NhuInterRAT_TgtCellDescription
{
 TknPres pres;
 NhuInterRAT_TgtCellDescriptiontechnologySpecificInfo technologySpecificInfo;
} NhuInterRAT_TgtCellDescription;


typedef TknU32 NhuInterRATCellInfoInd;

typedef struct NhuRemovedInterRATCellLstremoveSomeInterRATCells
{
 TknU16 noComp;
 NhuInterRATCellID *member;
}NhuRemovedInterRATCellLstremoveSomeInterRATCells;

typedef struct NhuRemovedInterRATCellLst
{
 TknU8 choice;
 union {
  NhuRemovedInterRATCellLstremoveSomeInterRATCells removeSomeInterRATCells;
 } val;
} NhuRemovedInterRATCellLst;


typedef TknS32 NhuInterRATCellIvdualOffset;


typedef enum enumNhuIS_2000SpecificMeasInfo
{
 NhuIS_2000SpecificMeasInfofrequencyEnum,
 NhuIS_2000SpecificMeasInfotimeslotEnum,
 NhuIS_2000SpecificMeasInfocolourcodeEnum,
 NhuIS_2000SpecificMeasInfooutputpowerEnum,
 NhuIS_2000SpecificMeasInfopn_OffsetEnum
} EnumNhuIS_2000SpecificMeasInfo;
typedef TknU32 NhuIS_2000SpecificMeasInfo;

typedef struct NhuNewInterRATCelltechnologySpecificInfogsm
{
 TknPres pres;
 NhuCellSelectReselectInfoSIB_11_12 cellSelectionReselectionInfo;
 NhuInterRATCellIvdualOffset interRATCellIvdualOffset;
 NhuBSIC bsic;
 NhuFrequency_Band frequency_band;
 NhuBCCH_ARFCN bcch_ARFCN;
} NhuNewInterRATCelltechnologySpecificInfogsm;

typedef struct NhuNewInterRATCelltechnologySpecificInfois_2000
{
 TknPres pres;
 NhuIS_2000SpecificMeasInfo is_2000SpecificMeasInfo;
} NhuNewInterRATCelltechnologySpecificInfois_2000;

typedef struct NhuNewInterRATCelltechnologySpecificInfo
{
 TknU8 choice;
 union {
  NhuNewInterRATCelltechnologySpecificInfogsm gsm;
  NhuNewInterRATCelltechnologySpecificInfois_2000 is_2000;
 } val;
} NhuNewInterRATCelltechnologySpecificInfo;

typedef struct NhuNewInterRATCell
{
 TknPres pres;
 NhuInterRATCellID interRATCellID;
 NhuNewInterRATCelltechnologySpecificInfo technologySpecificInfo;
} NhuNewInterRATCell;

typedef struct NhuNewInterRATCellLst
{
 TknU16 noComp;
 NhuNewInterRATCell *member;
}NhuNewInterRATCellLst;

typedef struct NhuInterRATCellInfoLst
{
 TknPres pres;
 NhuRemovedInterRATCellLst removedInterRATCellLst;
 NhuNewInterRATCellLst newInterRATCellLst;
 NhuCellsForInterRATMeasLst cellsForInterRATMeasLst;
} NhuInterRATCellInfoLst;

typedef struct NhuNewInterRATCell_BtechnologySpecificInfogsm
{
 TknPres pres;
 NhuCellSelectReselectInfoSIB_11_12 cellSelectionReselectionInfo;
 NhuInterRATCellIvdualOffset interRATCellIvdualOffset;
 NhuBSIC bsic;
 NhuFrequency_Band frequency_band;
 NhuBCCH_ARFCN bcch_ARFCN;
} NhuNewInterRATCell_BtechnologySpecificInfogsm;

typedef struct NhuNewInterRATCell_BtechnologySpecificInfois_2000
{
 TknPres pres;
 NhuIS_2000SpecificMeasInfo is_2000SpecificMeasInfo;
} NhuNewInterRATCell_BtechnologySpecificInfois_2000;

typedef struct NhuNewInterRATCell_BtechnologySpecificInfo
{
 TknU8 choice;
 union {
  NhuNewInterRATCell_BtechnologySpecificInfogsm gsm;
  NhuNewInterRATCell_BtechnologySpecificInfois_2000 is_2000;
 } val;
} NhuNewInterRATCell_BtechnologySpecificInfo;

typedef struct NhuNewInterRATCell_B
{
 TknPres pres;
 NhuInterRATCellID interRATCellID;
 NhuNewInterRATCell_BtechnologySpecificInfo technologySpecificInfo;
} NhuNewInterRATCell_B;

typedef struct NhuNewInterRATCellLst_B
{
 TknU16 noComp;
 NhuNewInterRATCell_B *member;
}NhuNewInterRATCellLst_B;

typedef struct NhuInterRATCellInfoLst_B
{
 TknPres pres;
 NhuRemovedInterRATCellLst removedInterRATCellLst;
 NhuNewInterRATCellLst_B newInterRATCellLst;
} NhuInterRATCellInfoLst_B;

typedef struct NhuInterRATCellInfoLst_r4
{
 TknPres pres;
 NhuRemovedInterRATCellLst removedInterRATCellLst;
 NhuNewInterRATCellLst newInterRATCellLst;
 NhuCellsForInterRATMeasLst cellsForInterRATMeasLst;
} NhuInterRATCellInfoLst_r4;

typedef struct NhuInterRATCellInfoLst_r6
{
 TknPres pres;
 NhuRemovedInterRATCellLst removedInterRATCellLst;
 NhuNewInterRATCellLst newInterRATCellLst;
 NhuCellsForInterRATMeasLst cellsForInterRATMeasLst;
 NhuInterRATCellInfoInd interRATCellInfoInd_r6;
} NhuInterRATCellInfoLst_r6;

typedef struct NhuInterRATEvent
{
 TknU8 choice;
 union {
  NhuEvent3a event3a;
  NhuEvent3b event3b;
  NhuEvent3c event3c;
  NhuEvent3d event3d;
 } val;
} NhuInterRATEvent;

typedef struct NhuInterRATEventLst
{
 TknU16 noComp;
 NhuInterRATEvent *member;
}NhuInterRATEventLst;


typedef enum enumNhuMeasurementQuantityGSM
{
 NhuMeasurementQuantityGSMgsm_CarrierRSSIEnum,
 NhuMeasurementQuantityGSMdummyEnum
} EnumNhuMeasurementQuantityGSM;
typedef TknU32 NhuMeasurementQuantityGSM;

typedef struct NhuInterRATMeasQuantityratSpecificInfogsm
{
 TknPres pres;
 NhuMeasurementQuantityGSM measurementQuantity;
 Nhu3gFilterCoefficient filterCoefficient;
 NhuBSIC_VerificationReqd bsic_VerificationReqd;
} NhuInterRATMeasQuantityratSpecificInfogsm;


typedef TknU32 NhuInterRATMeasQuantityratSpecificInfois_2000tadd_EcIo;


typedef TknU32 NhuInterRATMeasQuantityratSpecificInfois_2000tcomp_EcIo;


typedef TknU32 NhuInterRATMeasQuantityratSpecificInfois_2000softSlope;


typedef TknU32 NhuInterRATMeasQuantityratSpecificInfois_2000addIntercept;

typedef struct NhuInterRATMeasQuantityratSpecificInfois_2000
{
 TknPres pres;
 NhuInterRATMeasQuantityratSpecificInfois_2000tadd_EcIo tadd_EcIo;
 NhuInterRATMeasQuantityratSpecificInfois_2000tcomp_EcIo tcomp_EcIo;
 NhuInterRATMeasQuantityratSpecificInfois_2000softSlope softSlope;
 NhuInterRATMeasQuantityratSpecificInfois_2000addIntercept addIntercept;
} NhuInterRATMeasQuantityratSpecificInfois_2000;

typedef struct NhuInterRATMeasQuantityratSpecificInfo
{
 TknU8 choice;
 union {
  NhuInterRATMeasQuantityratSpecificInfogsm gsm;
  NhuInterRATMeasQuantityratSpecificInfois_2000 is_2000;
 } val;
} NhuInterRATMeasQuantityratSpecificInfo;

typedef struct NhuInterRATMeasQuantity
{
 TknPres pres;
 NhuIntraFreqMeasQuantity measQuantityUTRAN_QualityEstimate;
 NhuInterRATMeasQuantityratSpecificInfo ratSpecificInfo;
} NhuInterRATMeasQuantity;


typedef enum enumNhuMeasurementQuantityEUTRA
{
 NhuMeasurementQuantityEUTRArrspEnum,
 NhuMeasurementQuantityEUTRArsrqEnum
} EnumNhuMeasurementQuantityEUTRA;
typedef TknU32 NhuMeasurementQuantityEUTRA;

typedef struct NhuInterRATMeasQuantity_r8ratSpecificInfogsm
{
 TknPres pres;
 NhuMeasurementQuantityGSM measurementQuantity;
 Nhu3gFilterCoefficient filterCoefficient;
 NhuBSIC_VerificationReqd bsic_VerificationReqd;
} NhuInterRATMeasQuantity_r8ratSpecificInfogsm;


typedef TknU32 NhuInterRATMeasQuantity_r8ratSpecificInfois_2000tadd_EcIo;


typedef TknU32 NhuInterRATMeasQuantity_r8ratSpecificInfois_2000tcomp_EcIo;


typedef TknU32 NhuInterRATMeasQuantity_r8ratSpecificInfois_2000softSlope;


typedef TknU32 NhuInterRATMeasQuantity_r8ratSpecificInfois_2000addIntercept;

typedef struct NhuInterRATMeasQuantity_r8ratSpecificInfois_2000
{
 TknPres pres;
 NhuInterRATMeasQuantity_r8ratSpecificInfois_2000tadd_EcIo tadd_EcIo;
 NhuInterRATMeasQuantity_r8ratSpecificInfois_2000tcomp_EcIo tcomp_EcIo;
 NhuInterRATMeasQuantity_r8ratSpecificInfois_2000softSlope softSlope;
 NhuInterRATMeasQuantity_r8ratSpecificInfois_2000addIntercept addIntercept;
} NhuInterRATMeasQuantity_r8ratSpecificInfois_2000;

typedef struct NhuInterRATMeasQuantity_r8ratSpecificInfoe_UTRA
{
 TknPres pres;
 NhuMeasurementQuantityEUTRA measurementQuantity;
 Nhu3gFilterCoefficient filterCoefficient;
} NhuInterRATMeasQuantity_r8ratSpecificInfoe_UTRA;

typedef struct NhuInterRATMeasQuantity_r8ratSpecificInfo
{
 TknU8 choice;
 union {
  NhuInterRATMeasQuantity_r8ratSpecificInfogsm gsm;
  NhuInterRATMeasQuantity_r8ratSpecificInfois_2000 is_2000;
  NhuInterRATMeasQuantity_r8ratSpecificInfoe_UTRA e_UTRA;
 } val;
} NhuInterRATMeasQuantity_r8ratSpecificInfo;

typedef struct NhuInterRATMeasQuantity_r8
{
 TknPres pres;
 NhuIntraFreqMeasQuantity measQuantityUTRAN_QualityEstimate;
 NhuInterRATMeasQuantity_r8ratSpecificInfo ratSpecificInfo;
} NhuInterRATMeasQuantity_r8;

typedef struct NhuInterRATMeasuredResults
{
 TknU8 choice;
 union {
  NhuGSM_MeasuredResultsLst gsm;
 } val;
} NhuInterRATMeasuredResults;

typedef struct NhuInterRATMeasuredResultsLst
{
 TknU16 noComp;
 NhuInterRATMeasuredResults *member;
}NhuInterRATMeasuredResultsLst;


typedef TknU8 NhuInterRATRprtngQuantityutran_EstimatedQuality;


typedef TknU8 NhuInterRATRprtngQuantityratSpecificInfogsmdummy;


typedef TknU8 NhuInterRATRprtngQuantityratSpecificInfogsmdummy2;


typedef TknU8 NhuInterRATRprtngQuantityratSpecificInfogsmgsm_Carrier_RSSI;

typedef struct NhuInterRATRprtngQuantityratSpecificInfogsm
{
 TknPres pres;
 NhuInterRATRprtngQuantityratSpecificInfogsmdummy dummy;
 NhuInterRATRprtngQuantityratSpecificInfogsmdummy2 dummy2;
 NhuInterRATRprtngQuantityratSpecificInfogsmgsm_Carrier_RSSI gsm_Carrier_RSSI;
} NhuInterRATRprtngQuantityratSpecificInfogsm;

typedef struct NhuInterRATRprtngQuantityratSpecificInfo
{
 TknU8 choice;
 union {
  NhuInterRATRprtngQuantityratSpecificInfogsm gsm;
 } val;
} NhuInterRATRprtngQuantityratSpecificInfo;

typedef struct NhuInterRATRprtngQuantity
{
 TknPres pres;
 NhuInterRATRprtngQuantityutran_EstimatedQuality utran_EstimatedQuality;
 NhuInterRATRprtngQuantityratSpecificInfo ratSpecificInfo;
} NhuInterRATRprtngQuantity;

typedef struct NhuInterRATRprtngCriteria
{
 TknPres pres;
 NhuInterRATEventLst interRATEventLst;
} NhuInterRATRprtngCriteria;

typedef struct NhuInterRATReportCriteria
{
 TknU8 choice;
 union {
  NhuInterRATRprtngCriteria interRATRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuInterRATReportCriteria;

typedef struct NhuInterRATMeasurement
{
 TknPres pres;
 NhuInterRATCellInfoLst interRATCellInfoLst;
 NhuInterRATMeasQuantity interRATMeasQuantity;
 NhuInterRATRprtngQuantity interRATRprtngQuantity;
 NhuInterRATReportCriteria reportCriteria;
} NhuInterRATMeasurement;

typedef struct NhuInterRATMeasurement_r4
{
 TknPres pres;
 NhuInterRATCellInfoLst_r4 interRATCellInfoLst;
 NhuInterRATMeasQuantity interRATMeasQuantity;
 NhuInterRATRprtngQuantity interRATRprtngQuantity;
 NhuInterRATReportCriteria reportCriteria;
} NhuInterRATMeasurement_r4;

typedef struct NhuInterRATMeasurement_r6
{
 TknPres pres;
 NhuInterRATCellInfoLst_r6 interRATCellInfoLst;
 NhuInterRATMeasQuantity interRATMeasQuantity;
 NhuInterRATRprtngQuantity interRATRprtngQuantity;
 NhuInterRATReportCriteria reportCriteria;
} NhuInterRATMeasurement_r6;


typedef TknU8 NhuInterRATRprtngQuantity_r8utran_EstimatedQuality;


typedef TknU8 NhuInterRATRprtngQuantity_r8ratSpecificInfogsmgsm_Carrier_RSSI;

typedef struct NhuInterRATRprtngQuantity_r8ratSpecificInfogsm
{
 TknPres pres;
 NhuInterRATRprtngQuantity_r8ratSpecificInfogsmgsm_Carrier_RSSI gsm_Carrier_RSSI;
} NhuInterRATRprtngQuantity_r8ratSpecificInfogsm;


typedef enum enumNhuInterRATRprtngQuantity_r8ratSpecificInfoeutrareportingQuantity
{
 NhuInterRATRprtngQuantity_r8ratSpecificInfoeutrareportingQuantitymeasurementQuantityEnum,
 NhuInterRATRprtngQuantity_r8ratSpecificInfoeutrareportingQuantitybothEnum
} EnumNhuInterRATRprtngQuantity_r8ratSpecificInfoeutrareportingQuantity;
typedef TknU32 NhuInterRATRprtngQuantity_r8ratSpecificInfoeutrareportingQuantity;

typedef struct NhuInterRATRprtngQuantity_r8ratSpecificInfoeutra
{
 TknPres pres;
 NhuInterRATRprtngQuantity_r8ratSpecificInfoeutrareportingQuantity reportingQuantity;
} NhuInterRATRprtngQuantity_r8ratSpecificInfoeutra;

typedef struct NhuInterRATRprtngQuantity_r8ratSpecificInfo
{
 TknU8 choice;
 union {
  NhuInterRATRprtngQuantity_r8ratSpecificInfogsm gsm;
  NhuInterRATRprtngQuantity_r8ratSpecificInfoeutra eutra;
 } val;
} NhuInterRATRprtngQuantity_r8ratSpecificInfo;

typedef struct NhuInterRATRprtngQuantity_r8
{
 TknPres pres;
 NhuInterRATRprtngQuantity_r8utran_EstimatedQuality utran_EstimatedQuality;
 NhuInterRATRprtngQuantity_r8ratSpecificInfo ratSpecificInfo;
} NhuInterRATRprtngQuantity_r8;

typedef struct NhuInterRATMeasurement_r8interRATMeasurementObjects
{
 TknU8 choice;
 union {
  NhuInterRATCellInfoLst_r6 interRATCellInfoLst;
  NhuEUTRA_FrequencyLst eutra_FrequencyLst;
 } val;
} NhuInterRATMeasurement_r8interRATMeasurementObjects;

typedef struct NhuInterRATMeasurement_r8
{
 TknPres pres;
 NhuInterRATMeasurement_r8interRATMeasurementObjects interRATMeasurementObjects;
 NhuInterRATMeasQuantity_r8 interRATMeasQuantity;
 NhuInterRATRprtngQuantity_r8 interRATRprtngQuantity;
 NhuInterRATReportCriteria reportCriteria;
 NhuIdleIntervalInfo idleIntervalInfo;
} NhuInterRATMeasurement_r8;

typedef struct NhuInterRATMeasurement_r9interRATMeasurementObjects
{
 TknU8 choice;
 union {
  NhuInterRATCellInfoLst_r6 interRATCellInfoLst;
  NhuEUTRA_FrequencyLst_r9 eutra_FrequencyLst;
 } val;
} NhuInterRATMeasurement_r9interRATMeasurementObjects;

typedef struct NhuInterRATMeasurement_r9
{
 TknPres pres;
 NhuInterRATMeasurement_r9interRATMeasurementObjects interRATMeasurementObjects;
 NhuInterRATMeasQuantity_r8 interRATMeasQuantity;
 NhuInterRATRprtngQuantity_r8 interRATRprtngQuantity;
 NhuInterRATReportCriteria reportCriteria;
 NhuIdleIntervalInfo idleIntervalInfo;
} NhuInterRATMeasurement_r9;

typedef struct NhuInterRATMeasurementSysInfo
{
 TknPres pres;
 NhuInterRATCellInfoLst interRATCellInfoLst;
} NhuInterRATMeasurementSysInfo;

typedef struct NhuInterRATMeasurementSysInfo_B
{
 TknPres pres;
 NhuInterRATCellInfoLst_B interRATCellInfoLst;
} NhuInterRATMeasurementSysInfo_B;

typedef struct NhuRemovedIntraFreqCellLstremoveSomeIntraFreqCells
{
 TknU16 noComp;
 NhuIntraFreqCellID *member;
}NhuRemovedIntraFreqCellLstremoveSomeIntraFreqCells;

typedef struct NhuRemovedIntraFreqCellLst
{
 TknU8 choice;
 union {
  NhuRemovedIntraFreqCellLstremoveSomeIntraFreqCells removeSomeIntraFreqCells;
 } val;
} NhuRemovedIntraFreqCellLst;

typedef struct NhuNewIntraFreqCell
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfo cellInfo;
} NhuNewIntraFreqCell;

typedef struct NhuNewIntraFreqCellLst
{
 TknU16 noComp;
 NhuNewIntraFreqCell *member;
}NhuNewIntraFreqCellLst;

typedef struct NhuIntraFreqCellInfoLst
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellLst newIntraFreqCellLst;
 NhuCellsForIntraFreqMeasLst cellsForIntraFreqMeasLst;
} NhuIntraFreqCellInfoLst;

typedef struct NhuNewIntraFreqCell_r4
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfo_r4 cellInfo;
} NhuNewIntraFreqCell_r4;

typedef struct NhuNewIntraFreqCellLst_r4
{
 TknU16 noComp;
 NhuNewIntraFreqCell_r4 *member;
}NhuNewIntraFreqCellLst_r4;

typedef struct NhuIntraFreqCellInfoLst_r4
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellLst_r4 newIntraFreqCellLst;
 NhuCellsForIntraFreqMeasLst cellsForIntraFreqMeasLst;
} NhuIntraFreqCellInfoLst_r4;

typedef struct NhuRemovedIntraFreqCellLstOnSecULFreqremoveSomeIntraFreqCells
{
 TknU16 noComp;
 NhuIntraFreqCellIDOnSecULFreq *member;
}NhuRemovedIntraFreqCellLstOnSecULFreqremoveSomeIntraFreqCells;

typedef struct NhuRemovedIntraFreqCellLstOnSecULFreq
{
 TknU8 choice;
 union {
  NhuRemovedIntraFreqCellLstOnSecULFreqremoveSomeIntraFreqCells removeSomeIntraFreqCells;
 } val;
} NhuRemovedIntraFreqCellLstOnSecULFreq;

typedef struct NhuNewIntraFreqCellOnSecULFreq
{
 TknPres pres;
 NhuIntraFreqCellIDOnSecULFreq intraFreqCellIDOnSecULFreq;
 NhuCellInfo_r4 cellInfo;
} NhuNewIntraFreqCellOnSecULFreq;

typedef struct NhuNewIntraFreqCellLstOnSecULFreq
{
 TknU16 noComp;
 NhuNewIntraFreqCellOnSecULFreq *member;
}NhuNewIntraFreqCellLstOnSecULFreq;

typedef struct NhuIntraFreqCellInfoLstInfoOnSecULFreq
{
 TknPres pres;
 NhuRemovedIntraFreqCellLstOnSecULFreq removedIntraFreqCellLst;
 NhuNewIntraFreqCellLstOnSecULFreq newIntraFreqCellLst;
 NhuCellsForIntraFreqMeasLstOnSecULFreq cellsForIntraFreqMeasLst;
} NhuIntraFreqCellInfoLstInfoOnSecULFreq;

typedef struct NhuIntraFreqCellInfoLstOnSecULFreq
{
 TknPres pres;
 NhuIntraFreqCellInfoLstInfoOnSecULFreq intraFreqCellInfoLstOnSecULFreq;
} NhuIntraFreqCellInfoLstOnSecULFreq;

typedef struct NhuNewIntraFreqCell_r9
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfo_r9 cellInfo;
} NhuNewIntraFreqCell_r9;

typedef struct NhuNewIntraFreqCellLst_r9
{
 TknU16 noComp;
 NhuNewIntraFreqCell_r9 *member;
}NhuNewIntraFreqCellLst_r9;

typedef struct NhuIntraFreqSIAcquisitionInfo
{
 TknU16 noComp;
 NhuPrimaryCPICH_Info *member;
}NhuIntraFreqSIAcquisitionInfo;

typedef struct NhuIntraFreqSIAcquisitionmodeSpecificInfofdd
{
 TknPres pres;
 NhuIntraFreqSIAcquisitionInfo intraFreqSIAcquisitionInfo;
} NhuIntraFreqSIAcquisitionmodeSpecificInfofdd;

typedef struct NhuIntraFreqSIAcquisitionmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuIntraFreqSIAcquisitionmodeSpecificInfofdd fdd;
 } val;
} NhuIntraFreqSIAcquisitionmodeSpecificInfo;

typedef struct NhuIntraFreqSIAcquisition
{
 TknPres pres;
 NhuIntraFreqSIAcquisitionmodeSpecificInfo modeSpecificInfo;
} NhuIntraFreqSIAcquisition;

typedef struct NhuIntraFreqCellInfoLst_r9
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellLst_r9 newIntraFreqCellLst;
 NhuCellsForIntraFreqMeasLst cellsForIntraFreqMeasLst;
 NhuCSGIntraFreqCellInfoLst cSGIntraFreqCellInfoLst;
 NhuIntraFreqSIAcquisition intraFreqSIAcquisition;
} NhuIntraFreqCellInfoLst_r9;


typedef TknStrBSXL NhuNewIntraFreqCell_r10modeSpecificInfotdd128sNPLMonitorSetIndicator_TDD128;
typedef struct NhuNewIntraFreqCell_r10modeSpecificInfotdd128
{
 TknPres pres;
 NhuNewIntraFreqCell_r10modeSpecificInfotdd128sNPLMonitorSetIndicator_TDD128 sNPLMonitorSetIndicator_TDD128;
} NhuNewIntraFreqCell_r10modeSpecificInfotdd128;

typedef struct NhuNewIntraFreqCell_r10modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuNewIntraFreqCell_r10modeSpecificInfotdd128 tdd128;
 } val;
} NhuNewIntraFreqCell_r10modeSpecificInfo;

typedef struct NhuNewIntraFreqCell_r10
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfo_r9 cellInfo;
 NhuNewIntraFreqCell_r10modeSpecificInfo modeSpecificInfo;
} NhuNewIntraFreqCell_r10;

typedef struct NhuNewIntraFreqCellLst_r10
{
 TknU16 noComp;
 NhuNewIntraFreqCell_r10 *member;
}NhuNewIntraFreqCellLst_r10;

typedef struct NhuIntraFreqCellInfoLst_r10
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellLst_r10 newIntraFreqCellLst;
 NhuCellsForIntraFreqMeasLst cellsForIntraFreqMeasLst;
 NhuCSGIntraFreqCellInfoLst cSGIntraFreqCellInfoLst;
 NhuIntraFreqSIAcquisition intraFreqSIAcquisition;
} NhuIntraFreqCellInfoLst_r10;

typedef struct NhuNewIntraFreqCellSI_RSCP
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfoSI_RSCP cellInfo;
} NhuNewIntraFreqCellSI_RSCP;

typedef struct NhuNewIntraFreqCellSI_Lst_RSCP
{
 TknU16 noComp;
 NhuNewIntraFreqCellSI_RSCP *member;
}NhuNewIntraFreqCellSI_Lst_RSCP;

typedef struct NhuIntraFreqCellInfoSI_Lst_RSCP
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellSI_Lst_RSCP newIntraFreqCellLst;
} NhuIntraFreqCellInfoSI_Lst_RSCP;

typedef struct NhuNewIntraFreqCellSI_ECN0
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfoSI_ECN0 cellInfo;
} NhuNewIntraFreqCellSI_ECN0;

typedef struct NhuNewIntraFreqCellSI_Lst_ECN0
{
 TknU16 noComp;
 NhuNewIntraFreqCellSI_ECN0 *member;
}NhuNewIntraFreqCellSI_Lst_ECN0;

typedef struct NhuIntraFreqCellInfoSI_Lst_ECN0
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellSI_Lst_ECN0 newIntraFreqCellLst;
} NhuIntraFreqCellInfoSI_Lst_ECN0;

typedef struct NhuNewIntraFreqCellSI_HCS_RSCP
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfoSI_HCS_RSCP cellInfo;
} NhuNewIntraFreqCellSI_HCS_RSCP;

typedef struct NhuNewIntraFreqCellSI_Lst_HCS_RSCP
{
 TknU16 noComp;
 NhuNewIntraFreqCellSI_HCS_RSCP *member;
}NhuNewIntraFreqCellSI_Lst_HCS_RSCP;

typedef struct NhuIntraFreqCellInfoSI_Lst_HCS_RSCP
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellSI_Lst_HCS_RSCP newIntraFreqCellLst;
} NhuIntraFreqCellInfoSI_Lst_HCS_RSCP;

typedef struct NhuNewIntraFreqCellSI_HCS_ECN0
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfoSI_HCS_ECN0 cellInfo;
} NhuNewIntraFreqCellSI_HCS_ECN0;

typedef struct NhuNewIntraFreqCellSI_Lst_HCS_ECN0
{
 TknU16 noComp;
 NhuNewIntraFreqCellSI_HCS_ECN0 *member;
}NhuNewIntraFreqCellSI_Lst_HCS_ECN0;

typedef struct NhuIntraFreqCellInfoSI_Lst_HCS_ECN0
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellSI_Lst_HCS_ECN0 newIntraFreqCellLst;
} NhuIntraFreqCellInfoSI_Lst_HCS_ECN0;

typedef struct NhuNewIntraFreqCellSI_RSCP_LCR_r4
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfoSI_RSCP_LCR_r4 cellInfo;
} NhuNewIntraFreqCellSI_RSCP_LCR_r4;

typedef struct NhuNewIntraFreqCellSI_Lst_RSCP_LCR_r4
{
 TknU16 noComp;
 NhuNewIntraFreqCellSI_RSCP_LCR_r4 *member;
}NhuNewIntraFreqCellSI_Lst_RSCP_LCR_r4;

typedef struct NhuIntraFreqCellInfoSI_Lst_RSCP_LCR_r4
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellSI_Lst_RSCP_LCR_r4 newIntraFreqCellLst;
} NhuIntraFreqCellInfoSI_Lst_RSCP_LCR_r4;

typedef struct NhuNewIntraFreqCellSI_ECN0_LCR_r4
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfoSI_ECN0_LCR_r4 cellInfo;
} NhuNewIntraFreqCellSI_ECN0_LCR_r4;

typedef struct NhuNewIntraFreqCellSI_Lst_ECN0_LCR_r4
{
 TknU16 noComp;
 NhuNewIntraFreqCellSI_ECN0_LCR_r4 *member;
}NhuNewIntraFreqCellSI_Lst_ECN0_LCR_r4;

typedef struct NhuIntraFreqCellInfoSI_Lst_ECN0_LCR_r4
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellSI_Lst_ECN0_LCR_r4 newIntraFreqCellLst;
} NhuIntraFreqCellInfoSI_Lst_ECN0_LCR_r4;

typedef struct NhuNewIntraFreqCellSI_HCS_RSCP_LCR_r4
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfoSI_HCS_RSCP_LCR_r4 cellInfo;
} NhuNewIntraFreqCellSI_HCS_RSCP_LCR_r4;

typedef struct NhuNewIntraFreqCellSI_Lst_HCS_RSCP_LCR_r4
{
 TknU16 noComp;
 NhuNewIntraFreqCellSI_HCS_RSCP_LCR_r4 *member;
}NhuNewIntraFreqCellSI_Lst_HCS_RSCP_LCR_r4;

typedef struct NhuIntraFreqCellInfoSI_Lst_HCS_RSCP_LCR_r4
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellSI_Lst_HCS_RSCP_LCR_r4 newIntraFreqCellLst;
} NhuIntraFreqCellInfoSI_Lst_HCS_RSCP_LCR_r4;

typedef struct NhuNewIntraFreqCellSI_HCS_ECN0_LCR_r4
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfoSI_HCS_ECN0_LCR_r4 cellInfo;
} NhuNewIntraFreqCellSI_HCS_ECN0_LCR_r4;

typedef struct NhuNewIntraFreqCellSI_Lst_HCS_ECN0_LCR_r4
{
 TknU16 noComp;
 NhuNewIntraFreqCellSI_HCS_ECN0_LCR_r4 *member;
}NhuNewIntraFreqCellSI_Lst_HCS_ECN0_LCR_r4;

typedef struct NhuIntraFreqCellInfoSI_Lst_HCS_ECN0_LCR_r4
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellSI_Lst_HCS_ECN0_LCR_r4 newIntraFreqCellLst;
} NhuIntraFreqCellInfoSI_Lst_HCS_ECN0_LCR_r4;


typedef TknU8 NhuIntraFreqEvent_1d_r5useCIO;

typedef struct NhuIntraFreqEvent_1d_r5
{
 TknPres pres;
 NhuTrgCondition2 triggeringCondition;
 NhuIntraFreqEvent_1d_r5useCIO useCIO;
} NhuIntraFreqEvent_1d_r5;


typedef enum enumNhuIntraFreqMeasQuantity_FDD_sib3
{
 NhuIntraFreqMeasQuantity_FDD_sib3cpich_Ec_N0Enum,
 NhuIntraFreqMeasQuantity_FDD_sib3cpich_RSCPEnum
} EnumNhuIntraFreqMeasQuantity_FDD_sib3;
typedef TknU32 NhuIntraFreqMeasQuantity_FDD_sib3;

typedef enum enumNhuIntraFreqMeasQuantity_TDD_sib3LstMember
{
 NhuIntraFreqMeasQuantity_TDD_sib3LstMemberprimaryCCPCH_RSCPEnum,
 NhuIntraFreqMeasQuantity_TDD_sib3LstMembertimeslotISCPEnum
} EnumNhuIntraFreqMeasQuantity_TDD_sib3LstMember;
typedef TknU32 NhuIntraFreqMeasQuantity_TDD_sib3LstMember;

typedef struct NhuIntraFreqMeasQuantity_TDD_sib3Lst
{
 TknU16 noComp;
 NhuIntraFreqMeasQuantity_TDD_sib3LstMember *member;
}NhuIntraFreqMeasQuantity_TDD_sib3Lst;

typedef struct NhuIntraFreqMeasuredResultsLst
{
 TknU16 noComp;
 NhuCellMeasuredResults *member;
}NhuIntraFreqMeasuredResultsLst;

typedef struct NhuIntraFreqMeasuredResultsLst_v920ext
{
 TknU16 noComp;
 NhuCellMeasuredResults_v920ext *member;
}NhuIntraFreqMeasuredResultsLst_v920ext;


typedef enum enumNhuIntraFreqRepQuantityRACH_FDD
{
 NhuIntraFreqRepQuantityRACH_FDDcpich_EcN0Enum,
 NhuIntraFreqRepQuantityRACH_FDDcpich_RSCPEnum,
 NhuIntraFreqRepQuantityRACH_FDDpathlossEnum,
 NhuIntraFreqRepQuantityRACH_FDDnoReportEnum
} EnumNhuIntraFreqRepQuantityRACH_FDD;
typedef TknU32 NhuIntraFreqRepQuantityRACH_FDD;


typedef enum enumNhuIntraFreqRepQuantityRACH_TDD
{
 NhuIntraFreqRepQuantityRACH_TDDtimeslotISCPEnum,
 NhuIntraFreqRepQuantityRACH_TDDprimaryCCPCH_RSCPEnum,
 NhuIntraFreqRepQuantityRACH_TDDnoReportEnum
} EnumNhuIntraFreqRepQuantityRACH_TDD;
typedef TknU32 NhuIntraFreqRepQuantityRACH_TDD;

typedef struct NhuIntraFreqRepQuantityRACH_TDDLst
{
 TknU16 noComp;
 NhuIntraFreqRepQuantityRACH_TDD *member;
}NhuIntraFreqRepQuantityRACH_TDDLst;

typedef struct NhuIntraFreqRprtngQuantityForRACHmodeSpecificInfofdd
{
 TknPres pres;
 NhuIntraFreqRepQuantityRACH_FDD intraFreqRepQuantityRACH_FDD;
} NhuIntraFreqRprtngQuantityForRACHmodeSpecificInfofdd;

typedef struct NhuIntraFreqRprtngQuantityForRACHmodeSpecificInfotdd
{
 TknPres pres;
 NhuIntraFreqRepQuantityRACH_TDDLst intraFreqRepQuantityRACH_TDDLst;
} NhuIntraFreqRprtngQuantityForRACHmodeSpecificInfotdd;

typedef struct NhuIntraFreqRprtngQuantityForRACHmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngQuantityForRACHmodeSpecificInfofdd fdd;
  NhuIntraFreqRprtngQuantityForRACHmodeSpecificInfotdd tdd;
 } val;
} NhuIntraFreqRprtngQuantityForRACHmodeSpecificInfo;

typedef struct NhuIntraFreqRprtngQuantityForRACH
{
 TknPres pres;
 NhuSFN_SFN_OTD_Typ sfn_SFN_OTD_Typ;
 NhuIntraFreqRprtngQuantityForRACHmodeSpecificInfo modeSpecificInfo;
} NhuIntraFreqRprtngQuantityForRACH;


typedef enum enumNhuMaxReportedCellsOnRACH
{
 NhuMaxReportedCellsOnRACHnoReportEnum,
 NhuMaxReportedCellsOnRACHcurrentCellEnum,
 NhuMaxReportedCellsOnRACHcurrentAnd_1_BestNeighbourEnum,
 NhuMaxReportedCellsOnRACHcurrentAnd_2_BestNeighbourEnum,
 NhuMaxReportedCellsOnRACHcurrentAnd_3_BestNeighbourEnum,
 NhuMaxReportedCellsOnRACHcurrentAnd_4_BestNeighbourEnum,
 NhuMaxReportedCellsOnRACHcurrentAnd_5_BestNeighbourEnum,
 NhuMaxReportedCellsOnRACHcurrentAnd_6_BestNeighbourEnum
} EnumNhuMaxReportedCellsOnRACH;
typedef TknU32 NhuMaxReportedCellsOnRACH;

typedef struct NhuIntraFreqRprtngQuantity
{
 TknPres pres;
 NhuCellRprtngQuantities activeSetRprtngQuantities;
 NhuCellRprtngQuantities monitoredSetRprtngQuantities;
 NhuCellRprtngQuantities detectedSetRprtngQuantities;
} NhuIntraFreqRprtngQuantity;


typedef enum enumNhuTfrMode
{
 NhuTfrModeacknowledgedModeRLCEnum,
 NhuTfrModeunacknowledgedModeRLCEnum
} EnumNhuTfrMode;
typedef TknU32 NhuTfrMode;


typedef enum enumNhuPeriodicalOrEventTrigger
{
 NhuPeriodicalOrEventTriggerperiodicalEnum,
 NhuPeriodicalOrEventTriggereventTriggerEnum
} EnumNhuPeriodicalOrEventTrigger;
typedef TknU32 NhuPeriodicalOrEventTrigger;

typedef struct NhuMeasurementRprtngMode
{
 TknPres pres;
 NhuTfrMode measurementReportTfrMode;
 NhuPeriodicalOrEventTrigger periodicalOrEventTrigger;
} NhuMeasurementRprtngMode;

typedef struct NhuRprtngInfoForCellDCH
{
 TknPres pres;
 NhuIntraFreqRprtngQuantity intraFreqRprtngQuantity;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuCellDCH_ReportCriteria reportCriteria;
} NhuRprtngInfoForCellDCH;

typedef struct NhuIntraFreqMeasurementSysInfo_RSCP
{
 TknPres pres;
 NhuMeasurementIdentity intraFreqMeasurementID;
 NhuIntraFreqCellInfoSI_Lst_RSCP intraFreqCellInfoSI_Lst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantityForRACH intraFreqRprtngQuantityForRACH;
 NhuMaxReportedCellsOnRACH maxReportedCellsOnRACH;
 NhuRprtngInfoForCellDCH reportingInfoForCellDCH;
} NhuIntraFreqMeasurementSysInfo_RSCP;

typedef struct NhuIntraFreqMeasurementSysInfo_ECN0
{
 TknPres pres;
 NhuMeasurementIdentity intraFreqMeasurementID;
 NhuIntraFreqCellInfoSI_Lst_ECN0 intraFreqCellInfoSI_Lst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantityForRACH intraFreqRprtngQuantityForRACH;
 NhuMaxReportedCellsOnRACH maxReportedCellsOnRACH;
 NhuRprtngInfoForCellDCH reportingInfoForCellDCH;
} NhuIntraFreqMeasurementSysInfo_ECN0;

typedef struct NhuIntraFreqMeasurementSysInfo_HCS_RSCP
{
 TknPres pres;
 NhuMeasurementIdentity intraFreqMeasurementID;
 NhuIntraFreqCellInfoSI_Lst_HCS_RSCP intraFreqCellInfoSI_Lst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantityForRACH intraFreqRprtngQuantityForRACH;
 NhuMaxReportedCellsOnRACH maxReportedCellsOnRACH;
 NhuRprtngInfoForCellDCH reportingInfoForCellDCH;
} NhuIntraFreqMeasurementSysInfo_HCS_RSCP;

typedef struct NhuIntraFreqMeasurementSysInfo_HCS_ECN0
{
 TknPres pres;
 NhuMeasurementIdentity intraFreqMeasurementID;
 NhuIntraFreqCellInfoSI_Lst_HCS_ECN0 intraFreqCellInfoSI_Lst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantityForRACH intraFreqRprtngQuantityForRACH;
 NhuMaxReportedCellsOnRACH maxReportedCellsOnRACH;
 NhuRprtngInfoForCellDCH reportingInfoForCellDCH;
} NhuIntraFreqMeasurementSysInfo_HCS_ECN0;

typedef struct NhuRprtngInfoForCellDCH_LCR_r4
{
 TknPres pres;
 NhuIntraFreqRprtngQuantity intraFreqRprtngQuantity;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuCellDCH_ReportCriteria_LCR_r4 reportCriteria;
} NhuRprtngInfoForCellDCH_LCR_r4;

typedef struct NhuIntraFreqMeasurementSysInfo_RSCP_LCR_r4
{
 TknPres pres;
 NhuMeasurementIdentity intraFreqMeasurementID;
 NhuIntraFreqCellInfoSI_Lst_RSCP_LCR_r4 intraFreqCellInfoSI_Lst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantityForRACH intraFreqRprtngQuantityForRACH;
 NhuMaxReportedCellsOnRACH maxReportedCellsOnRACH;
 NhuRprtngInfoForCellDCH_LCR_r4 reportingInfoForCellDCH;
} NhuIntraFreqMeasurementSysInfo_RSCP_LCR_r4;

typedef struct NhuIntraFreqMeasurementSysInfo_ECN0_LCR_r4
{
 TknPres pres;
 NhuMeasurementIdentity intraFreqMeasurementID;
 NhuIntraFreqCellInfoSI_Lst_ECN0_LCR_r4 intraFreqCellInfoSI_Lst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantityForRACH intraFreqRprtngQuantityForRACH;
 NhuMaxReportedCellsOnRACH maxReportedCellsOnRACH;
 NhuRprtngInfoForCellDCH_LCR_r4 reportingInfoForCellDCH;
} NhuIntraFreqMeasurementSysInfo_ECN0_LCR_r4;

typedef struct NhuIntraFreqMeasurementSysInfo_HCS_RSCP_LCR_r4
{
 TknPres pres;
 NhuMeasurementIdentity intraFreqMeasurementID;
 NhuIntraFreqCellInfoSI_Lst_HCS_RSCP_LCR_r4 intraFreqCellInfoSI_Lst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantityForRACH intraFreqRprtngQuantityForRACH;
 NhuMaxReportedCellsOnRACH maxReportedCellsOnRACH;
 NhuRprtngInfoForCellDCH_LCR_r4 reportingInfoForCellDCH;
} NhuIntraFreqMeasurementSysInfo_HCS_RSCP_LCR_r4;

typedef struct NhuIntraFreqMeasurementSysInfo_HCS_ECN0_LCR_r4
{
 TknPres pres;
 NhuMeasurementIdentity intraFreqMeasurementID;
 NhuIntraFreqCellInfoSI_Lst_HCS_ECN0_LCR_r4 intraFreqCellInfoSI_Lst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantityForRACH intraFreqRprtngQuantityForRACH;
 NhuMaxReportedCellsOnRACH maxReportedCellsOnRACH;
 NhuRprtngInfoForCellDCH_LCR_r4 reportingInfoForCellDCH;
} NhuIntraFreqMeasurementSysInfo_HCS_ECN0_LCR_r4;

typedef struct NhuIntraFreqReportCriteria
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria intraFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuIntraFreqReportCriteria;

typedef struct NhuIntraFreqReportCriteria_r4
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_r4 intraFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuIntraFreqReportCriteria_r4;

typedef struct NhuIntraFreqReportCriteria_r6
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_r6 intraFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuIntraFreqReportCriteria_r6;

typedef struct NhuIntraFreqReportCriteria_r7
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_r7 intraFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuIntraFreqReportCriteria_r7;

typedef struct NhuIntraFreqReportCriteria_r9
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_r9 intraFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuIntraFreqReportCriteria_r9;

typedef struct NhuIntraFreqRprtngCriteria_1b_r5
{
 TknPres pres;
 NhuPeriodicRprtngInfo_1b periodicRprtngInfo_1b;
} NhuIntraFreqRprtngCriteria_1b_r5;

typedef struct NhuIntraFrequencyMeasurement
{
 TknPres pres;
 NhuIntraFreqCellInfoLst intraFreqCellInfoLst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantity intraFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuIntraFreqReportCriteria reportCriteria;
} NhuIntraFrequencyMeasurement;

typedef struct NhuIntraFrequencyMeasurement_r4
{
 TknPres pres;
 NhuIntraFreqCellInfoLst_r4 intraFreqCellInfoLst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantity intraFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuIntraFreqReportCriteria_r4 reportCriteria;
} NhuIntraFrequencyMeasurement_r4;

typedef struct NhuIntraFrequencyMeasurement_r6
{
 TknPres pres;
 NhuIntraFreqCellInfoLst_r4 intraFreqCellInfoLst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantity intraFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuIntraFreqReportCriteria_r6 reportCriteria;
} NhuIntraFrequencyMeasurement_r6;

typedef struct NhuIntraFrequencyMeasurement_r7
{
 TknPres pres;
 NhuIntraFreqCellInfoLst_r4 intraFreqCellInfoLst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantity intraFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuIntraFreqReportCriteria_r7 reportCriteria;
} NhuIntraFrequencyMeasurement_r7;

typedef struct NhuIntraFrequencyMeasurement_r9
{
 TknPres pres;
 NhuIntraFreqCellInfoLst_r9 intraFreqCellInfoLst;
 NhuIntraFreqCellInfoLstOnSecULFreq intraFreqCellInfoLstOnSecULFreq;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantity intraFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuIntraFreqReportCriteria_r9 reportCriteria;
} NhuIntraFrequencyMeasurement_r9;

typedef struct NhuIntraFrequencyMeasurement_r10
{
 TknPres pres;
 NhuIntraFreqCellInfoLst_r10 intraFreqCellInfoLst;
 NhuIntraFreqCellInfoLstOnSecULFreq intraFreqCellInfoLstOnSecULFreq;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantity intraFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuIntraFreqReportCriteria_r9 reportCriteria;
} NhuIntraFrequencyMeasurement_r10;

typedef struct NhuIntraFrequencyMeasuredResultsLstOnSecULFreq
{
 TknU16 noComp;
 NhuCellMeasuredResults_r9 *member;
}NhuIntraFrequencyMeasuredResultsLstOnSecULFreq;


typedef TknS32 NhuRSCPforANRrSCP;

typedef struct NhuRSCPforANR
{
 TknPres pres;
 NhuRSCPforANRrSCP rSCP;
} NhuRSCPforANR;

typedef struct NhuLoggingAbsoluteThreshold
{
 TknU8 choice;
 union {
  NhuRSCPforANR rscpforANR;
  NhuEc_N0forANR ec_N0forANR;
 } val;
} NhuLoggingAbsoluteThreshold;


typedef TknS32 NhuLoggingRelativeThreshold;

typedef struct NhuIntraUTRAANR
{
 TknPres pres;
 NhuLoggingAbsoluteThreshold loggingAbsoluteThreshold;
 NhuLoggingRelativeThreshold loggingRelativeThreshold;
} NhuIntraUTRAANR;


typedef enum enumNhuIP_Length
{
 NhuIP_Lengthipl5Enum,
 NhuIP_Lengthipl10Enum
} EnumNhuIP_Length;
typedef TknU32 NhuIP_Length;


typedef TknU8 NhuIP_PCCPCH_r4;


typedef enum enumNhuIP_Spacing
{
 NhuIP_Spacinge5Enum,
 NhuIP_Spacinge7Enum,
 NhuIP_Spacinge10Enum,
 NhuIP_Spacinge15Enum,
 NhuIP_Spacinge20Enum,
 NhuIP_Spacinge30Enum,
 NhuIP_Spacinge40Enum,
 NhuIP_Spacinge50Enum
} EnumNhuIP_Spacing;
typedef TknU32 NhuIP_Spacing;


typedef enum enumNhuIP_Spacing_TDD
{
 NhuIP_Spacing_TDDe30Enum,
 NhuIP_Spacing_TDDe40Enum,
 NhuIP_Spacing_TDDe50Enum,
 NhuIP_Spacing_TDDe70Enum,
 NhuIP_Spacing_TDDe100Enum
} EnumNhuIP_Spacing_TDD;
typedef TknU32 NhuIP_Spacing_TDD;


typedef enum enumNhuLoggedANRCfgInfologgingDuration
{
 NhuLoggedANRCfgInfologgingDurationmin10Enum,
 NhuLoggedANRCfgInfologgingDurationmin30Enum,
 NhuLoggedANRCfgInfologgingDurationhr1Enum,
 NhuLoggedANRCfgInfologgingDurationspare2Enum,
 NhuLoggedANRCfgInfologgingDurationspare1Enum
} EnumNhuLoggedANRCfgInfologgingDuration;
typedef TknU32 NhuLoggedANRCfgInfologgingDuration;


typedef enum enumNhuLoggedANRCfgInfointerRATANRforEUTRAIndicator
{
 NhuLoggedANRCfgInfointerRATANRforEUTRAIndicatortrueEnum
} EnumNhuLoggedANRCfgInfointerRATANRforEUTRAIndicator;
typedef TknU32 NhuLoggedANRCfgInfointerRATANRforEUTRAIndicator;


typedef enum enumNhuLoggedANRCfgInfointerRATANRforGSMIndicator
{
 NhuLoggedANRCfgInfointerRATANRforGSMIndicatortrueEnum
} EnumNhuLoggedANRCfgInfointerRATANRforGSMIndicator;
typedef TknU32 NhuLoggedANRCfgInfointerRATANRforGSMIndicator;

typedef struct NhuLoggedANRCfgInfo
{
 TknPres pres;
 NhuLoggedANRCfgInfologgingDuration loggingDuration;
 NhuIntraUTRAANR intraUTRAANR;
 NhuLoggedANRCfgInfointerRATANRforEUTRAIndicator interRATANRforEUTRAIndicator;
 NhuLoggedANRCfgInfointerRATANRforGSMIndicator interRATANRforGSMIndicator;
} NhuLoggedANRCfgInfo;

typedef struct NhuLoggedUTRACellInfo
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuCellIdentity cellIdentity;
 NhuUARFCN uarfcn;
 NhuCellParamsID cellParamsID;
 NhuPrimaryScramblingCode primaryScramblingCode;
} NhuLoggedUTRACellInfo;


typedef TknStrBSXL NhuLoggedEUTRACellInfotrackingAreaCode;

typedef TknStrBSXL NhuLoggedEUTRACellInfoeutraCellIdentity;
typedef struct NhuLoggedEUTRACellInfo
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuLoggedEUTRACellInfotrackingAreaCode trackingAreaCode;
 NhuLoggedEUTRACellInfoeutraCellIdentity eutraCellIdentity;
 NhuEARFCN earfcn;
 NhuEUTRA_PhysicalCellIdentity physicalCellIdentity;
} NhuLoggedEUTRACellInfo;


typedef TknStrBSXL NhuLoggedGSMCellInfolac;

typedef TknStrBSXL NhuLoggedGSMCellInfogsmCellIdentity;
typedef struct NhuLoggedGSMCellInfo
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuLoggedGSMCellInfolac lac;
 NhuLoggedGSMCellInfogsmCellIdentity gsmCellIdentity;
 NhuBCCH_ARFCN bcch_ARFCN;
 NhuFrequency_Band bandIndicator;
 NhuBSIC bsic;
} NhuLoggedGSMCellInfo;

typedef struct NhuLoggedCellInfo
{
 TknU8 choice;
 union {
  NhuLoggedUTRACellInfo loggedUTRACellInfo;
  NhuLoggedEUTRACellInfo loggedEUTRACellInfo;
  NhuLoggedGSMCellInfo loggedGSMCellInfo;
 } val;
} NhuLoggedCellInfo;

typedef struct NhuLoggedANRReportInfo
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuCellIdentity servingCell;
 NhuLoggedCellInfo loggedCellInfo;
} NhuLoggedANRReportInfo;

typedef struct NhuLoggedANRReportInfoLst
{
 TknU16 noComp;
 NhuLoggedANRReportInfo *member;
}NhuLoggedANRReportInfoLst;


typedef TknStrOSXL NhuTraceReferencetraceId;
typedef struct NhuTraceReference
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuTraceReferencetraceId traceId;
} NhuTraceReference;


typedef TknStrOSXL NhuTraceRecordingSessiontraceRecordingSession;
typedef struct NhuTraceRecordingSession
{
 TknPres pres;
 NhuTraceRecordingSessiontraceRecordingSession traceRecordingSession;
} NhuTraceRecordingSession;


typedef TknStrOSXL NhuTCE_Idtce_Id;
typedef struct NhuTCE_Id
{
 TknPres pres;
 NhuTCE_Idtce_Id tce_Id;
} NhuTCE_Id;


typedef TknStrBSXL NhuLoggedMeasurementsCfgInfoabsoluteTimeInfo;

typedef enum enumNhuLoggedMeasurementsCfgInfologgingDuration
{
 NhuLoggedMeasurementsCfgInfologgingDurationmin10Enum,
 NhuLoggedMeasurementsCfgInfologgingDurationmin20Enum,
 NhuLoggedMeasurementsCfgInfologgingDurationmin40Enum,
 NhuLoggedMeasurementsCfgInfologgingDurationhr1Enum,
 NhuLoggedMeasurementsCfgInfologgingDurationhr1min30Enum,
 NhuLoggedMeasurementsCfgInfologgingDurationhr2Enum,
 NhuLoggedMeasurementsCfgInfologgingDurationspare2Enum,
 NhuLoggedMeasurementsCfgInfologgingDurationspare1Enum
} EnumNhuLoggedMeasurementsCfgInfologgingDuration;
typedef TknU32 NhuLoggedMeasurementsCfgInfologgingDuration;


typedef enum enumNhuLoggedMeasurementsCfgInfologgingInterval
{
 NhuLoggedMeasurementsCfgInfologgingIntervalli128Enum,
 NhuLoggedMeasurementsCfgInfologgingIntervalli256Enum,
 NhuLoggedMeasurementsCfgInfologgingIntervalli512Enum,
 NhuLoggedMeasurementsCfgInfologgingIntervalli1024Enum,
 NhuLoggedMeasurementsCfgInfologgingIntervalli2048Enum,
 NhuLoggedMeasurementsCfgInfologgingIntervalli3072Enum,
 NhuLoggedMeasurementsCfgInfologgingIntervalli4096Enum,
 NhuLoggedMeasurementsCfgInfologgingIntervalli6144Enum
} EnumNhuLoggedMeasurementsCfgInfologgingInterval;
typedef TknU32 NhuLoggedMeasurementsCfgInfologgingInterval;

typedef struct NhuLoggedMeasurementsCfgInfoareaCfgcellIDLst
{
 TknU16 noComp;
 NhuCellIdentity *member;
}NhuLoggedMeasurementsCfgInfoareaCfgcellIDLst;

typedef struct NhuLoggedMeasurementsCfgInfoareaCfglocationAreaLst
{
 TknU16 noComp;
 NhuLAI *member;
}NhuLoggedMeasurementsCfgInfoareaCfglocationAreaLst;

typedef struct NhuLoggedMeasurementsCfgInfoareaCfgroutingAreaLst
{
 TknU16 noComp;
 NhuRAI *member;
}NhuLoggedMeasurementsCfgInfoareaCfgroutingAreaLst;

typedef struct NhuLoggedMeasurementsCfgInfoareaCfg
{
 TknU8 choice;
 union {
  NhuLoggedMeasurementsCfgInfoareaCfgcellIDLst cellIDLst;
  NhuLoggedMeasurementsCfgInfoareaCfglocationAreaLst locationAreaLst;
  NhuLoggedMeasurementsCfgInfoareaCfgroutingAreaLst routingAreaLst;
 } val;
} NhuLoggedMeasurementsCfgInfoareaCfg;

typedef struct NhuLoggedMeasurementsCfgInfo
{
 TknPres pres;
 NhuLoggedMeasurementsCfgInfoabsoluteTimeInfo absoluteTimeInfo;
 NhuLoggedMeasurementsCfgInfologgingDuration loggingDuration;
 NhuLoggedMeasurementsCfgInfologgingInterval loggingInterval;
 NhuTraceReference traceReference;
 NhuTraceRecordingSession traceRecordingSession;
 NhuTCE_Id tce_Id;
 NhuLoggedMeasurementsCfgInfoareaCfg areaCfg;
} NhuLoggedMeasurementsCfgInfo;

typedef struct NhuLoggedMeasNeighbourInfo_FDD
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuCPICH_RSCP cpich_RSCP;
 NhuCPICH_Ec_N0 cpich_Ec_N0;
} NhuLoggedMeasNeighbourInfo_FDD;

typedef struct NhuLoggedMeasInterfreqInfo_FDDloggedMeasInterfreqNeighbourLst
{
 TknU16 noComp;
 NhuLoggedMeasNeighbourInfo_FDD *member;
}NhuLoggedMeasInterfreqInfo_FDDloggedMeasInterfreqNeighbourLst;

typedef struct NhuLoggedMeasInterfreqInfo_FDD
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuLoggedMeasInterfreqInfo_FDDloggedMeasInterfreqNeighbourLst loggedMeasInterfreqNeighbourLst;
} NhuLoggedMeasInterfreqInfo_FDD;

typedef struct NhuLoggedMeasInterfreqLst_FDD
{
 TknU16 noComp;
 NhuLoggedMeasInterfreqInfo_FDD *member;
}NhuLoggedMeasInterfreqLst_FDD;

typedef struct NhuLoggedMeasNeighbourMeas_TDD128
{
 TknPres pres;
 NhuCellParamsID cellParamsID;
 NhuPrimaryCCPCH_RSCP primaryCCPCH_RSCP;
} NhuLoggedMeasNeighbourMeas_TDD128;

typedef struct NhuLoggedMeasInterfreqNeighbourLst_TDD128
{
 TknU16 noComp;
 NhuLoggedMeasNeighbourMeas_TDD128 *member;
}NhuLoggedMeasInterfreqNeighbourLst_TDD128;

typedef struct NhuLoggedMeasInterfreqInfo_TDD128
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuLoggedMeasInterfreqNeighbourLst_TDD128 loggedMeasInterfreqNeighbourLst;
} NhuLoggedMeasInterfreqInfo_TDD128;


typedef TknU32 NhuLoggedMeasEUTRAFreqNeighbourInforSRP;


typedef TknU32 NhuLoggedMeasEUTRAFreqNeighbourInforSRQ;

typedef struct NhuLoggedMeasEUTRAFreqNeighbourInfo
{
 TknPres pres;
 NhuEUTRA_PhysicalCellIdentity physicalCellIdentity;
 NhuLoggedMeasEUTRAFreqNeighbourInforSRP rSRP;
 NhuLoggedMeasEUTRAFreqNeighbourInforSRQ rSRQ;
} NhuLoggedMeasEUTRAFreqNeighbourInfo;

typedef struct NhuLoggedMeasEUTRAFreqInfologgedMeasEUTRAFreqNeighbourInfoLst
{
 TknU16 noComp;
 NhuLoggedMeasEUTRAFreqNeighbourInfo *member;
}NhuLoggedMeasEUTRAFreqInfologgedMeasEUTRAFreqNeighbourInfoLst;

typedef struct NhuLoggedMeasEUTRAFreqInfo
{
 TknPres pres;
 NhuEARFCN earfcn;
 NhuLoggedMeasEUTRAFreqInfologgedMeasEUTRAFreqNeighbourInfoLst loggedMeasEUTRAFreqNeighbourInfoLst;
} NhuLoggedMeasEUTRAFreqInfo;

typedef struct NhuLoggedMeasEUTRAFreqLst
{
 TknU16 noComp;
 NhuLoggedMeasEUTRAFreqInfo *member;
}NhuLoggedMeasEUTRAFreqLst;

typedef struct NhuLoggedMeasGSMNeighbourCellsinfo
{
 TknPres pres;
 NhuBSIC bsic;
 NhuFrequency_Band frequency_band;
 NhuBCCH_ARFCN bcch_ARFCN;
 NhuGSM_CarrierRSSI gsm_CarrierRSSI;
} NhuLoggedMeasGSMNeighbourCellsinfo;

typedef struct NhuLoggedMeasGSMNeighbourCellsLst
{
 TknU16 noComp;
 NhuLoggedMeasGSMNeighbourCellsinfo *member;
}NhuLoggedMeasGSMNeighbourCellsLst;

typedef struct NhuLoggedMeasInterRATNeighbourMeas
{
 TknPres pres;
 NhuLoggedMeasEUTRAFreqLst loggedMeasEUTRAFreqLst;
 NhuLoggedMeasGSMNeighbourCellsLst loggedMeasGSMNeighbourCellsLst;
} NhuLoggedMeasInterRATNeighbourMeas;

typedef struct NhuLoggedMeasIntrafreqNeighbourLst_FDD
{
 TknU16 noComp;
 NhuLoggedMeasNeighbourInfo_FDD *member;
}NhuLoggedMeasIntrafreqNeighbourLst_FDD;

typedef struct NhuLoggedMeasIntrafreqNeighbourMeasLst_TDD128
{
 TknU16 noComp;
 NhuLoggedMeasNeighbourMeas_TDD128 *member;
}NhuLoggedMeasIntrafreqNeighbourMeasLst_TDD128;

typedef struct NhuLoggedMeasLocInfo
{
 TknU8 choice;
 union {
  NhuEllipsoidPoint ellipsoidPoint;
  NhuEllipsoidPointAltitude ellipsoidPointAltitude;
 } val;
} NhuLoggedMeasLocInfo;

typedef struct NhuLoggedMeasServingCellMeas_FDD
{
 TknPres pres;
 NhuCellIdentity cellIdentity;
 NhuCPICH_RSCP cpich_RSCP;
 NhuCPICH_Ec_N0 cpich_Ec_N0;
} NhuLoggedMeasServingCellMeas_FDD;


typedef TknU32 NhuLoggedMeasInfo_FDDrelativeTimeStamp;

typedef struct NhuLoggedMeasInfo_FDD
{
 TknPres pres;
 NhuLoggedMeasInfo_FDDrelativeTimeStamp relativeTimeStamp;
 NhuLoggedMeasServingCellMeas_FDD loggedMeasServingCellMeas;
 NhuLoggedMeasIntrafreqNeighbourLst_FDD loggedMeasIntrafreqNeighbourLst;
 NhuLoggedMeasInterfreqLst_FDD loggedMeasInterfreqLst;
 NhuLoggedMeasInterRATNeighbourMeas loggedMeasInterRATNeighbourMeas;
 NhuLoggedMeasLocInfo loggedMeasLocInfo;
} NhuLoggedMeasInfo_FDD;

typedef struct NhuLoggedMeasServingCellMeas_TDD128
{
 TknPres pres;
 NhuCellIdentity cellIdentity;
 NhuPrimaryCCPCH_RSCP primaryCCPCH_RSCP;
} NhuLoggedMeasServingCellMeas_TDD128;

typedef struct NhuLoggedMeasInterfreqLst_TDD128
{
 TknU16 noComp;
 NhuLoggedMeasInterfreqInfo_TDD128 *member;
}NhuLoggedMeasInterfreqLst_TDD128;


typedef TknU32 NhuLoggedMeasInfo_TDD128relativeTimeStamp;

typedef struct NhuLoggedMeasInfo_TDD128
{
 TknPres pres;
 NhuLoggedMeasInfo_TDD128relativeTimeStamp relativeTimeStamp;
 NhuLoggedMeasServingCellMeas_TDD128 loggedMeasServingCellMeas;
 NhuLoggedMeasIntrafreqNeighbourMeasLst_TDD128 loggedMeasIntrafreqNeighbourLst;
 NhuLoggedMeasInterfreqLst_TDD128 loggedMeasInterfreqLst;
 NhuLoggedMeasInterRATNeighbourMeas loggedMeasInterRATNeighbourMeas;
 NhuLoggedMeasLocInfo loggedMeasLocInfo;
} NhuLoggedMeasInfo_TDD128;

typedef struct NhuLoggedMeasInfoLst_FDD
{
 TknU16 noComp;
 NhuLoggedMeasInfo_FDD *member;
}NhuLoggedMeasInfoLst_FDD;

typedef struct NhuLoggedMeasInfoLst_TDD128
{
 TknU16 noComp;
 NhuLoggedMeasInfo_TDD128 *member;
}NhuLoggedMeasInfoLst_TDD128;

typedef struct NhuLoggedMeasInfoLstmodeSpecificInfofdd
{
 TknPres pres;
 NhuLoggedMeasInfoLst_FDD loggedMeasInfoLst;
} NhuLoggedMeasInfoLstmodeSpecificInfofdd;

typedef struct NhuLoggedMeasInfoLstmodeSpecificInfotdd
{
 TknPres pres;
 NhuLoggedMeasInfoLst_TDD128 loggedMeasInfoLst;
} NhuLoggedMeasInfoLstmodeSpecificInfotdd;

typedef struct NhuLoggedMeasInfoLstmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuLoggedMeasInfoLstmodeSpecificInfofdd fdd;
  NhuLoggedMeasInfoLstmodeSpecificInfotdd tdd;
 } val;
} NhuLoggedMeasInfoLstmodeSpecificInfo;

typedef struct NhuLoggedMeasInfoLst
{
 TknPres pres;
 NhuLoggedMeasInfoLstmodeSpecificInfo modeSpecificInfo;
} NhuLoggedMeasInfoLst;


typedef TknStrBSXL NhuLoggedMeasReportabsoluteTimeInfo;

typedef enum enumNhuLoggedMeasReportloggedMeasAvailable
{
 NhuLoggedMeasReportloggedMeasAvailabletrueEnum
} EnumNhuLoggedMeasReportloggedMeasAvailable;
typedef TknU32 NhuLoggedMeasReportloggedMeasAvailable;

typedef struct NhuLoggedMeasReport
{
 TknPres pres;
 NhuLoggedMeasReportabsoluteTimeInfo absoluteTimeInfo;
 NhuTraceReference traceReference;
 NhuTraceRecordingSession traceRecordingSession;
 NhuTCE_Id tce_Id;
 NhuLoggedMeasInfoLst loggedMeasInfoLst;
 NhuLoggedMeasReportloggedMeasAvailable loggedMeasAvailable;
} NhuLoggedMeasReport;


typedef enum enumNhuRLC_BuffersPayload
{
 NhuRLC_BuffersPayloadpl0Enum,
 NhuRLC_BuffersPayloadpl4Enum,
 NhuRLC_BuffersPayloadpl8Enum,
 NhuRLC_BuffersPayloadpl16Enum,
 NhuRLC_BuffersPayloadpl32Enum,
 NhuRLC_BuffersPayloadpl64Enum,
 NhuRLC_BuffersPayloadpl128Enum,
 NhuRLC_BuffersPayloadpl256Enum,
 NhuRLC_BuffersPayloadpl512Enum,
 NhuRLC_BuffersPayloadpl1024Enum,
 NhuRLC_BuffersPayloadpl2kEnum,
 NhuRLC_BuffersPayloadpl4kEnum,
 NhuRLC_BuffersPayloadpl8kEnum,
 NhuRLC_BuffersPayloadpl16kEnum,
 NhuRLC_BuffersPayloadpl32kEnum,
 NhuRLC_BuffersPayloadpl64kEnum,
 NhuRLC_BuffersPayloadpl128kEnum,
 NhuRLC_BuffersPayloadpl256kEnum,
 NhuRLC_BuffersPayloadpl512kEnum,
 NhuRLC_BuffersPayloadpl1024kEnum,
 NhuRLC_BuffersPayloadspare12Enum,
 NhuRLC_BuffersPayloadspare11Enum,
 NhuRLC_BuffersPayloadspare10Enum,
 NhuRLC_BuffersPayloadspare9Enum,
 NhuRLC_BuffersPayloadspare8Enum,
 NhuRLC_BuffersPayloadspare7Enum,
 NhuRLC_BuffersPayloadspare6Enum,
 NhuRLC_BuffersPayloadspare5Enum,
 NhuRLC_BuffersPayloadspare4Enum,
 NhuRLC_BuffersPayloadspare3Enum,
 NhuRLC_BuffersPayloadspare2Enum,
 NhuRLC_BuffersPayloadspare1Enum
} EnumNhuRLC_BuffersPayload;
typedef TknU32 NhuRLC_BuffersPayload;


typedef enum enumNhuVarianceOfRLC_BufferPayload
{
 NhuVarianceOfRLC_BufferPayloadplv0Enum,
 NhuVarianceOfRLC_BufferPayloadplv4Enum,
 NhuVarianceOfRLC_BufferPayloadplv8Enum,
 NhuVarianceOfRLC_BufferPayloadplv16Enum,
 NhuVarianceOfRLC_BufferPayloadplv32Enum,
 NhuVarianceOfRLC_BufferPayloadplv64Enum,
 NhuVarianceOfRLC_BufferPayloadplv128Enum,
 NhuVarianceOfRLC_BufferPayloadplv256Enum,
 NhuVarianceOfRLC_BufferPayloadplv512Enum,
 NhuVarianceOfRLC_BufferPayloadplv1024Enum,
 NhuVarianceOfRLC_BufferPayloadplv2kEnum,
 NhuVarianceOfRLC_BufferPayloadplv4kEnum,
 NhuVarianceOfRLC_BufferPayloadplv8kEnum,
 NhuVarianceOfRLC_BufferPayloadplv16kEnum,
 NhuVarianceOfRLC_BufferPayloadspare2Enum,
 NhuVarianceOfRLC_BufferPayloadspare1Enum
} EnumNhuVarianceOfRLC_BufferPayload;
typedef TknU32 NhuVarianceOfRLC_BufferPayload;

typedef struct NhuTrafficVolumeMeasuredResults
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRLC_BuffersPayload rlc_BuffersPayload;
 NhuAverageRLC_BufferPayload averageRLC_BufferPayload;
 NhuVarianceOfRLC_BufferPayload varianceOfRLC_BufferPayload;
} NhuTrafficVolumeMeasuredResults;

typedef struct NhuTrafficVolumeMeasuredResultsLst
{
 TknU16 noComp;
 NhuTrafficVolumeMeasuredResults *member;
}NhuTrafficVolumeMeasuredResultsLst;


typedef TknU32 NhuSIR;

typedef struct NhuSIR_TimeslotLst
{
 TknU16 noComp;
 NhuSIR *member;
}NhuSIR_TimeslotLst;

typedef struct NhuSIR_MeasurementResults
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuSIR_TimeslotLst sir_TimeslotLst;
} NhuSIR_MeasurementResults;

typedef struct NhuSIR_MeasurementLst
{
 TknU16 noComp;
 NhuSIR_MeasurementResults *member;
}NhuSIR_MeasurementLst;

typedef struct NhuQualityMeasuredResultsmodeSpecificInfotdd
{
 TknPres pres;
 NhuSIR_MeasurementLst sir_MeasurementResults;
} NhuQualityMeasuredResultsmodeSpecificInfotdd;

typedef struct NhuQualityMeasuredResultsmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuQualityMeasuredResultsmodeSpecificInfotdd tdd;
 } val;
} NhuQualityMeasuredResultsmodeSpecificInfo;

typedef struct NhuQualityMeasuredResults
{
 TknPres pres;
 NhuBLER_MeasurementResultsLst blerMeasurementResultsLst;
 NhuQualityMeasuredResultsmodeSpecificInfo modeSpecificInfo;
} NhuQualityMeasuredResults;


typedef TknU32 NhuUE_TransmittedPower;


typedef TknU32 NhuUE_RX_TX_TimeDifferenceTyp1;

typedef struct NhuUE_RX_TX_ReportEntry
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuUE_RX_TX_TimeDifferenceTyp1 ue_RX_TX_TimeDifferenceTyp1;
} NhuUE_RX_TX_ReportEntry;

typedef struct NhuUE_RX_TX_ReportEntryLst
{
 TknU16 noComp;
 NhuUE_RX_TX_ReportEntry *member;
}NhuUE_RX_TX_ReportEntryLst;

typedef struct NhuUE_TransmittedPowerTDD_Lst
{
 TknU16 noComp;
 NhuUE_TransmittedPower *member;
}NhuUE_TransmittedPowerTDD_Lst;

typedef struct NhuUE_InternalMeasuredResultsmodeSpecificInfofdd
{
 TknPres pres;
 NhuUE_TransmittedPower ue_TransmittedPowerFDD;
 NhuUE_RX_TX_ReportEntryLst ue_RX_TX_ReportEntryLst;
} NhuUE_InternalMeasuredResultsmodeSpecificInfofdd;

typedef struct NhuUE_InternalMeasuredResultsmodeSpecificInfotdd
{
 TknPres pres;
 NhuUE_TransmittedPowerTDD_Lst ue_TransmittedPowerTDD_Lst;
 NhuUL_TimingAdvance appliedTA;
} NhuUE_InternalMeasuredResultsmodeSpecificInfotdd;

typedef struct NhuUE_InternalMeasuredResultsmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_InternalMeasuredResultsmodeSpecificInfofdd fdd;
  NhuUE_InternalMeasuredResultsmodeSpecificInfotdd tdd;
 } val;
} NhuUE_InternalMeasuredResultsmodeSpecificInfo;

typedef struct NhuUE_InternalMeasuredResults
{
 TknPres pres;
 NhuUE_InternalMeasuredResultsmodeSpecificInfo modeSpecificInfo;
} NhuUE_InternalMeasuredResults;


typedef enum enumNhuUE_Positioning_ErrCause
{
 NhuUE_Positioning_ErrCausenotEnoughOTDOA_CellsEnum,
 NhuUE_Positioning_ErrCausenotEnoughGPS_SatellitesEnum,
 NhuUE_Positioning_ErrCauseassistanceDataMissingEnum,
 NhuUE_Positioning_ErrCausenotAccomplishedGPS_TimingOfCellFramesEnum,
 NhuUE_Positioning_ErrCauseundefinedErrEnum,
 NhuUE_Positioning_ErrCauserequestDeniedByUserEnum,
 NhuUE_Positioning_ErrCausenotProcessedAndTimeoutEnum,
 NhuUE_Positioning_ErrCausereferenceCellNotServingCellEnum
} EnumNhuUE_Positioning_ErrCause;
typedef TknU32 NhuUE_Positioning_ErrCause;

typedef struct NhuSatData
{
 TknPres pres;
 NhuSatID satID;
 NhuIODE iode;
} NhuSatData;

typedef struct NhuSatDataLst
{
 TknU16 noComp;
 NhuSatData *member;
}NhuSatDataLst;


typedef TknU32 NhuUE_Positioning_GPS_NavModelAddDataReqgps_Week;


typedef TknU32 NhuUE_Positioning_GPS_NavModelAddDataReqgps_Toe;


typedef TknU32 NhuUE_Positioning_GPS_NavModelAddDataReqtToeLimit;

typedef struct NhuUE_Positioning_GPS_NavModelAddDataReq
{
 TknPres pres;
 NhuUE_Positioning_GPS_NavModelAddDataReqgps_Week gps_Week;
 NhuUE_Positioning_GPS_NavModelAddDataReqgps_Toe gps_Toe;
 NhuUE_Positioning_GPS_NavModelAddDataReqtToeLimit tToeLimit;
 NhuSatDataLst satDataLst;
} NhuUE_Positioning_GPS_NavModelAddDataReq;


typedef TknU8 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstalmanacRqst;


typedef TknU8 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstutcModelRqst;


typedef TknU8 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstionosphericModelRqst;


typedef TknU8 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstnavigationModelRqst;


typedef TknU8 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstdgpsCorrectionsRqst;


typedef TknU8 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstreferenceLocRqst;


typedef TknU8 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstreferenceTimeRqst;


typedef TknU8 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstaquisitionAssistanceRqst;


typedef TknU8 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstrealTimeIntegrityRqst;

typedef struct NhuUE_Positioning_GPS_AdditionalAssistanceDataRqst
{
 TknPres pres;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstalmanacRqst almanacRqst;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstutcModelRqst utcModelRqst;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstionosphericModelRqst ionosphericModelRqst;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstnavigationModelRqst navigationModelRqst;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstdgpsCorrectionsRqst dgpsCorrectionsRqst;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstreferenceLocRqst referenceLocRqst;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstreferenceTimeRqst referenceTimeRqst;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstaquisitionAssistanceRqst aquisitionAssistanceRqst;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstrealTimeIntegrityRqst realTimeIntegrityRqst;
 NhuUE_Positioning_GPS_NavModelAddDataReq navModelAddDataRqst;
} NhuUE_Positioning_GPS_AdditionalAssistanceDataRqst;

typedef struct NhuUE_Positioning_Err
{
 TknPres pres;
 NhuUE_Positioning_ErrCause errorReason;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqst ue_positioning_GPS_additionalAssistanceDataRqst;
} NhuUE_Positioning_Err;

typedef struct NhuUE_Positioning_MeasuredResults
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_Measurement ue_positioning_OTDOA_Measurement;
 NhuUE_Positioning_PositionEstimateInfo ue_positioning_PositionEstimateInfo;
 NhuUE_Positioning_GPS_MeasurementResults ue_positioning_GPS_Measurement;
 NhuUE_Positioning_Err ue_positioning_Err;
} NhuUE_Positioning_MeasuredResults;

typedef struct NhuMeasuredResults
{
 TknU8 choice;
 union {
  NhuIntraFreqMeasuredResultsLst intraFreqMeasuredResultsLst;
  NhuInterFreqMeasuredResultsLst interFreqMeasuredResultsLst;
  NhuInterRATMeasuredResultsLst interRATMeasuredResultsLst;
  NhuTrafficVolumeMeasuredResultsLst trafficVolumeMeasuredResultsLst;
  NhuQualityMeasuredResults qualityMeasuredResults;
  NhuUE_InternalMeasuredResults ue_InternalMeasuredResults;
  NhuUE_Positioning_MeasuredResults ue_positioning_MeasuredResults;
 } val;
} NhuMeasuredResults;

typedef struct NhuMeasuredResultsOnSecUlFreq
{
 TknPres pres;
 NhuIntraFrequencyMeasuredResultsLstOnSecULFreq intraFreqMeasuredResultsLst;
} NhuMeasuredResultsOnSecUlFreq;

typedef struct NhuNeighbour_v390extmodeSpecificInfofdd
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
} NhuNeighbour_v390extmodeSpecificInfofdd;

typedef struct NhuNeighbour_v390extmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuNeighbour_v390extmodeSpecificInfofdd fdd;
 } val;
} NhuNeighbour_v390extmodeSpecificInfo;

typedef struct NhuNeighbour_v390ext
{
 TknPres pres;
 NhuNeighbour_v390extmodeSpecificInfo modeSpecificInfo;
} NhuNeighbour_v390ext;

typedef struct NhuNeighbourLst_v390ext
{
 TknU16 noComp;
 NhuNeighbour_v390ext *member;
}NhuNeighbourLst_v390ext;

typedef struct NhuUE_Positioning_OTDOA_Measurement_v390ext
{
 TknPres pres;
 NhuNeighbourLst_v390ext neighbourLst_v390ext;
} NhuUE_Positioning_OTDOA_Measurement_v390ext;

typedef struct NhuUE_Positioning_MeasuredResults_v390ext
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_Measurement_v390ext ue_Positioning_OTDOA_Measurement_v390ext;
} NhuUE_Positioning_MeasuredResults_v390ext;

typedef struct NhuMeasuredResults_v390ext
{
 TknPres pres;
 NhuUE_Positioning_MeasuredResults_v390ext ue_positioning_MeasuredResults_v390ext;
} NhuMeasuredResults_v390ext;

typedef struct NhuMeasuredResults_v590ext
{
 TknU8 choice;
 union {
  NhuIntraFrequencyMeasuredResultsLst_v590ext intraFrequencyMeasuredResultsLst;
  NhuInterFrequencyMeasuredResultsLst_v590ext interFrequencyMeasuredResultsLst;
 } val;
} NhuMeasuredResults_v590ext;


typedef TknU32 NhuT_ADVinfo_extt_ADV;


typedef TknU32 NhuT_ADVinfo_extsfn;

typedef struct NhuT_ADVinfo_ext
{
 TknPres pres;
 NhuT_ADVinfo_extt_ADV t_ADV;
 NhuT_ADVinfo_extsfn sfn;
} NhuT_ADVinfo_ext;

typedef struct NhuUE_InternalMeasuredResults_v770extmodeSpecificInfotdd384_768
{
 TknPres pres;
 NhuEXT_UL_TimingAdvance appliedTA;
} NhuUE_InternalMeasuredResults_v770extmodeSpecificInfotdd384_768;

typedef struct NhuUE_InternalMeasuredResults_v770extmodeSpecificInfotdd128
{
 TknPres pres;
 NhuT_ADVinfo_ext t_ADVinfo;
} NhuUE_InternalMeasuredResults_v770extmodeSpecificInfotdd128;

typedef struct NhuUE_InternalMeasuredResults_v770extmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_InternalMeasuredResults_v770extmodeSpecificInfotdd384_768 tdd384_768;
  NhuUE_InternalMeasuredResults_v770extmodeSpecificInfotdd128 tdd128;
 } val;
} NhuUE_InternalMeasuredResults_v770extmodeSpecificInfo;

typedef struct NhuUE_InternalMeasuredResults_v770ext
{
 TknPres pres;
 NhuUE_InternalMeasuredResults_v770extmodeSpecificInfo modeSpecificInfo;
} NhuUE_InternalMeasuredResults_v770ext;


typedef enum enumNhuUE_Positioning_ErrCause_r7
{
 NhuUE_Positioning_ErrCause_r7notEnoughOTDOA_CellsEnum,
 NhuUE_Positioning_ErrCause_r7notEnoughGPS_SatellitesEnum,
 NhuUE_Positioning_ErrCause_r7assistanceDataMissingEnum,
 NhuUE_Positioning_ErrCause_r7notAccomplishedGPS_TimingOfCellFramesEnum,
 NhuUE_Positioning_ErrCause_r7undefinedErrEnum,
 NhuUE_Positioning_ErrCause_r7requestDeniedByUserEnum,
 NhuUE_Positioning_ErrCause_r7notProcessedAndTimeoutEnum,
 NhuUE_Positioning_ErrCause_r7referenceCellNotServingCellEnum,
 NhuUE_Positioning_ErrCause_r7notEnoughGANSS_SatellitesEnum,
 NhuUE_Positioning_ErrCause_r7notAccomplishedGANSS_TimingOfCellFramesEnum,
 NhuUE_Positioning_ErrCause_r7spare6Enum,
 NhuUE_Positioning_ErrCause_r7spare5Enum,
 NhuUE_Positioning_ErrCause_r7spare4Enum,
 NhuUE_Positioning_ErrCause_r7spare3Enum,
 NhuUE_Positioning_ErrCause_r7spare2Enum,
 NhuUE_Positioning_ErrCause_r7spare1Enum
} EnumNhuUE_Positioning_ErrCause_r7;
typedef TknU32 NhuUE_Positioning_ErrCause_r7;


typedef TknU8 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqstganssReferenceTime;


typedef TknU8 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqstganssreferenceLoc;


typedef TknU8 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqstganssIonosphericModel;

typedef struct NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst
{
 TknPres pres;
 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqstganssReferenceTime ganssReferenceTime;
 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqstganssreferenceLoc ganssreferenceLoc;
 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqstganssIonosphericModel ganssIonosphericModel;
 NhuGanssRqstedGenericAssistanceDataLst ganssRqstedGenericAssistanceDataLst;
} NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst;

typedef struct NhuUE_Positioning_Err_r7
{
 TknPres pres;
 NhuUE_Positioning_ErrCause_r7 errorReason;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqst ue_positioning_GPS_additionalAssistanceDataRqst;
 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst ue_positioning_GANSS_additionalAssistanceDataRqst;
} NhuUE_Positioning_Err_r7;

typedef struct NhuUE_Positioning_MeasuredResults_v770ext
{
 TknPres pres;
 NhuUE_Positioning_PositionEstimateInfo_v770ext ue_positioning_PositionEstimateInfo;
 NhuUE_Positioning_GPS_MeasurementResults_v770ext ue_positioning_GPS_Measurement;
 NhuUE_Positioning_Err_r7 ue_positioning_Err;
 NhuUE_Positioning_GANSS_MeasuredResults ue_positioning_Ganss_MeasuredResults;
} NhuUE_Positioning_MeasuredResults_v770ext;

typedef struct NhuMeasuredResults_v770ext
{
 TknU8 choice;
 union {
  NhuUE_InternalMeasuredResults_v770ext ueInternalMeasuredResults;
  NhuUE_Positioning_MeasuredResults_v770ext ue_positioning_MeasuredResults;
 } val;
} NhuMeasuredResults_v770ext;


typedef TknStrBSXL NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860extganssAddIonoModelReq;

typedef enum enumNhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860extganssEOPreq
{
 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860extganssEOPreqtrueEnum
} EnumNhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860extganssEOPreq;
typedef TknU32 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860extganssEOPreq;

typedef struct NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860ext
{
 TknPres pres;
 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860extganssAddIonoModelReq ganssAddIonoModelReq;
 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860extganssEOPreq ganssEOPreq;
 NhuGanssRqstedGenericAssistanceDataLst_v860ext ganssRqstedGenericAssistanceDataLst;
} NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860ext;

typedef struct NhuUE_Positioning_Err_v860ext
{
 TknPres pres;
 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860ext ue_positioning_GANSS_additionalAssistanceDataRqst;
} NhuUE_Positioning_Err_v860ext;

typedef struct NhuUE_Positioning_MeasuredResults_v860ext
{
 TknPres pres;
 NhuUE_Positioning_Err_v860ext ue_positioning_Err;
 NhuUE_Positioning_GANSS_MeasuredResults_v860ext ue_positioning_Ganss_MeasurementResults;
} NhuUE_Positioning_MeasuredResults_v860ext;

typedef struct NhuMeasuredResults_v860ext
{
 TknU8 choice;
 union {
  NhuUE_Positioning_MeasuredResults_v860ext ue_positioning_MeasuredResults;
 } val;
} NhuMeasuredResults_v860ext;

typedef struct NhuMeasuredResults_v920ext
{
 TknU8 choice;
 union {
  NhuIntraFreqMeasuredResultsLst_v920ext intraFreqMeasuredResultsLst;
  NhuInterFreqMeasuredResultsLst_v920ext interFreqMeasuredResultsLst;
 } val;
} NhuMeasuredResults_v920ext;

typedef struct NhuMeasuredResultsLst_v920ext
{
 TknU16 noComp;
 NhuMeasuredResults_v920ext *member;
}NhuMeasuredResultsLst_v920ext;

typedef struct NhuMeasuredResultsLstOnSecUlFreq
{
 TknU16 noComp;
 NhuMeasuredResultsOnSecUlFreq *member;
}NhuMeasuredResultsLstOnSecUlFreq;


typedef TknU32 NhuT_ADVinfot_ADV;


typedef TknU32 NhuT_ADVinfosfn;

typedef struct NhuT_ADVinfo
{
 TknPres pres;
 NhuT_ADVinfot_ADV t_ADV;
 NhuT_ADVinfosfn sfn;
} NhuT_ADVinfo;

typedef struct NhuUE_InternalMeasuredResults_LCR_r4
{
 TknPres pres;
 NhuUE_TransmittedPowerTDD_Lst ue_TransmittedPowerTDD_Lst;
 NhuT_ADVinfo t_ADVinfo;
} NhuUE_InternalMeasuredResults_LCR_r4;

typedef struct NhuMeasuredResults_LCR_r4
{
 TknU8 choice;
 union {
  NhuIntraFreqMeasuredResultsLst intraFreqMeasuredResultsLst;
  NhuInterFreqMeasuredResultsLst interFreqMeasuredResultsLst;
  NhuInterRATMeasuredResultsLst interRATMeasuredResultsLst;
  NhuTrafficVolumeMeasuredResultsLst trafficVolumeMeasuredResultsLst;
  NhuQualityMeasuredResults qualityMeasuredResults;
  NhuUE_InternalMeasuredResults_LCR_r4 ue_InternalMeasuredResults;
  NhuUE_Positioning_MeasuredResults ue_positioniing_MeasuredResults;
 } val;
} NhuMeasuredResults_LCR_r4;

typedef struct NhuMeasuredResultsLst
{
 TknU16 noComp;
 NhuMeasuredResults *member;
}NhuMeasuredResultsLst;

typedef struct NhuMeasuredResultsLst_LCR_r4_ext
{
 TknU16 noComp;
 NhuMeasuredResults_LCR_r4 *member;
}NhuMeasuredResultsLst_LCR_r4_ext;

typedef struct NhuMeasuredResultsLst_v770xetMember
{
 TknPres pres;
 NhuMeasuredResults_v770ext measuredResults;
} NhuMeasuredResultsLst_v770xetMember;

typedef struct NhuMeasuredResultsLst_v770xet
{
 TknU16 noComp;
 NhuMeasuredResultsLst_v770xetMember *member;
}NhuMeasuredResultsLst_v770xet;

typedef struct NhuMeasuredResultsLst_v860extMember
{
 TknPres pres;
 NhuMeasuredResults_v860ext measuredResults;
} NhuMeasuredResultsLst_v860extMember;

typedef struct NhuMeasuredResultsLst_v860ext
{
 TknU16 noComp;
 NhuMeasuredResultsLst_v860extMember *member;
}NhuMeasuredResultsLst_v860ext;

typedef struct NhuMonitoredCellRACH_ResultmodeSpecificInfofddmeasurementQuantity
{
 TknU8 choice;
 union {
  NhuCPICH_Ec_N0 cpich_Ec_N0;
  NhuCPICH_RSCP cpich_RSCP;
  NhuPathloss pathloss;
 } val;
} NhuMonitoredCellRACH_ResultmodeSpecificInfofddmeasurementQuantity;

typedef struct NhuMonitoredCellRACH_ResultmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuMonitoredCellRACH_ResultmodeSpecificInfofddmeasurementQuantity measurementQuantity;
} NhuMonitoredCellRACH_ResultmodeSpecificInfofdd;

typedef struct NhuMonitoredCellRACH_ResultmodeSpecificInfotdd
{
 TknPres pres;
 NhuCellParamsID cellParamsID;
 NhuPrimaryCCPCH_RSCP primaryCCPCH_RSCP;
} NhuMonitoredCellRACH_ResultmodeSpecificInfotdd;

typedef struct NhuMonitoredCellRACH_ResultmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuMonitoredCellRACH_ResultmodeSpecificInfofdd fdd;
  NhuMonitoredCellRACH_ResultmodeSpecificInfotdd tdd;
 } val;
} NhuMonitoredCellRACH_ResultmodeSpecificInfo;

typedef struct NhuMonitoredCellRACH_Result
{
 TknPres pres;
 NhuSFN_SFN_ObsTimeDifference sfn_SFN_ObsTimeDifference;
 NhuMonitoredCellRACH_ResultmodeSpecificInfo modeSpecificInfo;
} NhuMonitoredCellRACH_Result;

typedef struct NhuMonitoredCellRACH_Lst
{
 TknU16 noComp;
 NhuMonitoredCellRACH_Result *member;
}NhuMonitoredCellRACH_Lst;

typedef struct NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfofddmeasurementQuantity
{
 TknU8 choice;
 union {
  NhuCPICH_Ec_N0 cpich_Ec_N0;
  NhuCPICH_RSCP cpich_RSCP;
  NhuPathloss pathloss;
 } val;
} NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfofddmeasurementQuantity;

typedef struct NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfofdd
{
 TknPres pres;
 NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfofddmeasurementQuantity measurementQuantity;
} NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfofdd;

typedef struct NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfotdd
{
 TknPres pres;
 NhuTimeslotISCP_Lst timeslotISCP;
 NhuPrimaryCCPCH_RSCP primaryCCPCH_RSCP;
} NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfotdd;

typedef struct NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfofdd fdd;
  NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfotdd tdd;
 } val;
} NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfo;

typedef struct NhuMeasuredResultsOnRACHcurrentCell
{
 TknPres pres;
 NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfo modeSpecificInfo;
} NhuMeasuredResultsOnRACHcurrentCell;

typedef struct NhuMeasuredResultsOnRACH
{
 TknPres pres;
 NhuMeasuredResultsOnRACHcurrentCell currentCell;
 NhuMonitoredCellRACH_Lst monitoredCells;
} NhuMeasuredResultsOnRACH;

typedef struct NhuMonitoredCellRACH_Lst_v7g0ext
{
 TknU16 noComp;
 NhuDeltaRSCPPerCell *member;
}NhuMonitoredCellRACH_Lst_v7g0ext;

typedef struct NhuMeasuredResultsOnRACH_v7g0ext
{
 TknPres pres;
 NhuDeltaRSCPPerCell currentCell_DeltaRSCP;
 NhuMonitoredCellRACH_Lst_v7g0ext monitoredCellRACH_Lst_v7g0ext;
} NhuMeasuredResultsOnRACH_v7g0ext;


typedef TknU32 NhuMeasuredResultsOnRACHinterFreqinterFreqCellInd_SIB11;


typedef TknU32 NhuMeasuredResultsOnRACHinterFreqinterFreqCellInd_SIB12;

typedef struct NhuMeasuredResultsOnRACHinterFreq
{
 TknPres pres;
 NhuMeasuredResultsOnRACHinterFreqinterFreqCellInd_SIB11 interFreqCellInd_SIB11;
 NhuMeasuredResultsOnRACHinterFreqinterFreqCellInd_SIB12 interFreqCellInd_SIB12;
 NhuInterFreqRACHRepCellsLst interFreqRACHRepCellsLst;
} NhuMeasuredResultsOnRACHinterFreq;


typedef enum enumNhuUE_Positioning_MethodTyp
{
 NhuUE_Positioning_MethodTypue_AssistedEnum,
 NhuUE_Positioning_MethodTypue_BasedEnum,
 NhuUE_Positioning_MethodTypue_BasedPreferredEnum,
 NhuUE_Positioning_MethodTypue_AssistedPreferredEnum
} EnumNhuUE_Positioning_MethodTyp;
typedef TknU32 NhuUE_Positioning_MethodTyp;


typedef enum enumNhuPositioningMethod
{
 NhuPositioningMethodotdoaEnum,
 NhuPositioningMethodgpsEnum,
 NhuPositioningMethodotdoaOrGPSEnum,
 NhuPositioningMethodcellIDEnum
} EnumNhuPositioningMethod;
typedef TknU32 NhuPositioningMethod;


typedef enum enumNhuUE_Positioning_RspTime
{
 NhuUE_Positioning_RspTimes1Enum,
 NhuUE_Positioning_RspTimes2Enum,
 NhuUE_Positioning_RspTimes4Enum,
 NhuUE_Positioning_RspTimes8Enum,
 NhuUE_Positioning_RspTimes16Enum,
 NhuUE_Positioning_RspTimes32Enum,
 NhuUE_Positioning_RspTimes64Enum,
 NhuUE_Positioning_RspTimes128Enum
} EnumNhuUE_Positioning_RspTime;
typedef TknU32 NhuUE_Positioning_RspTime;


typedef TknStrBSXL NhuUE_Positioning_Accuracy;

typedef TknU8 NhuUE_Positioning_RprtngQuantitygps_TimingOfCellWanted;


typedef TknU8 NhuUE_Positioning_RprtngQuantitydummy2;


typedef TknU8 NhuUE_Positioning_RprtngQuantityadditionalAssistanceDataRqst;

typedef struct NhuUE_Positioning_RprtngQuantity
{
 TknPres pres;
 NhuUE_Positioning_MethodTyp methodTyp;
 NhuPositioningMethod positioningMethod;
 NhuUE_Positioning_RspTime dummy1;
 NhuUE_Positioning_Accuracy horizontal_Accuracy;
 NhuUE_Positioning_RprtngQuantitygps_TimingOfCellWanted gps_TimingOfCellWanted;
 NhuUE_Positioning_RprtngQuantitydummy2 dummy2;
 NhuUE_Positioning_RprtngQuantityadditionalAssistanceDataRqst additionalAssistanceDataRqst;
 NhuEnvironmentCharacterisation environmentCharacterisation;
} NhuUE_Positioning_RprtngQuantity;


typedef enum enumNhuUE_Positioning_MeasurementInterval
{
 NhuUE_Positioning_MeasurementIntervale5Enum,
 NhuUE_Positioning_MeasurementIntervale15Enum,
 NhuUE_Positioning_MeasurementIntervale60Enum,
 NhuUE_Positioning_MeasurementIntervale300Enum,
 NhuUE_Positioning_MeasurementIntervale900Enum,
 NhuUE_Positioning_MeasurementIntervale1800Enum,
 NhuUE_Positioning_MeasurementIntervale3600Enum,
 NhuUE_Positioning_MeasurementIntervale7200Enum
} EnumNhuUE_Positioning_MeasurementInterval;
typedef TknU32 NhuUE_Positioning_MeasurementInterval;


typedef enum enumNhuThresholdPositionChange
{
 NhuThresholdPositionChangepc10Enum,
 NhuThresholdPositionChangepc20Enum,
 NhuThresholdPositionChangepc30Enum,
 NhuThresholdPositionChangepc40Enum,
 NhuThresholdPositionChangepc50Enum,
 NhuThresholdPositionChangepc100Enum,
 NhuThresholdPositionChangepc200Enum,
 NhuThresholdPositionChangepc300Enum,
 NhuThresholdPositionChangepc500Enum,
 NhuThresholdPositionChangepc1000Enum,
 NhuThresholdPositionChangepc2000Enum,
 NhuThresholdPositionChangepc5000Enum,
 NhuThresholdPositionChangepc10000Enum,
 NhuThresholdPositionChangepc20000Enum,
 NhuThresholdPositionChangepc50000Enum,
 NhuThresholdPositionChangepc100000Enum
} EnumNhuThresholdPositionChange;
typedef TknU32 NhuThresholdPositionChange;


typedef enum enumNhuThresholdSFN_SFN_Change
{
 NhuThresholdSFN_SFN_Changec0_25Enum,
 NhuThresholdSFN_SFN_Changec0_5Enum,
 NhuThresholdSFN_SFN_Changec1Enum,
 NhuThresholdSFN_SFN_Changec2Enum,
 NhuThresholdSFN_SFN_Changec3Enum,
 NhuThresholdSFN_SFN_Changec4Enum,
 NhuThresholdSFN_SFN_Changec5Enum,
 NhuThresholdSFN_SFN_Changec10Enum,
 NhuThresholdSFN_SFN_Changec20Enum,
 NhuThresholdSFN_SFN_Changec50Enum,
 NhuThresholdSFN_SFN_Changec100Enum,
 NhuThresholdSFN_SFN_Changec200Enum,
 NhuThresholdSFN_SFN_Changec500Enum,
 NhuThresholdSFN_SFN_Changec1000Enum,
 NhuThresholdSFN_SFN_Changec2000Enum,
 NhuThresholdSFN_SFN_Changec5000Enum
} EnumNhuThresholdSFN_SFN_Change;
typedef TknU32 NhuThresholdSFN_SFN_Change;


typedef enum enumNhuThresholdSFN_GPS_TOW
{
 NhuThresholdSFN_GPS_TOWms1Enum,
 NhuThresholdSFN_GPS_TOWms2Enum,
 NhuThresholdSFN_GPS_TOWms3Enum,
 NhuThresholdSFN_GPS_TOWms5Enum,
 NhuThresholdSFN_GPS_TOWms10Enum,
 NhuThresholdSFN_GPS_TOWms20Enum,
 NhuThresholdSFN_GPS_TOWms50Enum,
 NhuThresholdSFN_GPS_TOWms100Enum
} EnumNhuThresholdSFN_GPS_TOW;
typedef TknU32 NhuThresholdSFN_GPS_TOW;

typedef struct NhuUE_Positioning_EventSpecificInfo
{
 TknU8 choice;
 union {
  NhuThresholdPositionChange e7a;
  NhuThresholdSFN_SFN_Change e7b;
  NhuThresholdSFN_GPS_TOW e7c;
 } val;
} NhuUE_Positioning_EventSpecificInfo;


typedef TknU8 NhuUE_Positioning_EventParamreportFirstFix;

typedef struct NhuUE_Positioning_EventParam
{
 TknPres pres;
 NhuRprtngAmount reportingAmount;
 NhuUE_Positioning_EventParamreportFirstFix reportFirstFix;
 NhuUE_Positioning_MeasurementInterval measurementInterval;
 NhuUE_Positioning_EventSpecificInfo eventSpecificInfo;
} NhuUE_Positioning_EventParam;

typedef struct NhuUE_Positioning_EventParamLst
{
 TknU16 noComp;
 NhuUE_Positioning_EventParam *member;
}NhuUE_Positioning_EventParamLst;

typedef struct NhuUE_Positioning_ReportCriteria
{
 TknU8 choice;
 union {
  NhuUE_Positioning_EventParamLst ue_positioning_RprtngCriteria;
  NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 } val;
} NhuUE_Positioning_ReportCriteria;


typedef TknU32 NhuUE_Positioning_IPDL_Paramsip_Offset;


typedef TknU32 NhuUE_Positioning_IPDL_Paramsseed;

typedef struct NhuUE_Positioning_IPDL_Params
{
 TknPres pres;
 NhuIP_Spacing ip_Spacing;
 NhuIP_Length ip_Length;
 NhuUE_Positioning_IPDL_Paramsip_Offset ip_Offset;
 NhuUE_Positioning_IPDL_Paramsseed seed;
 NhuBurstModeParams burstModeParams;
} NhuUE_Positioning_IPDL_Params;


typedef TknU32 NhuUE_Positioning_OTDOA_ReferenceCellInfosfn;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUE_Positioning_OTDOA_ReferenceCellInfomodeSpecificInfofdd;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity cellAndChannelIdentity;
} NhuUE_Positioning_OTDOA_ReferenceCellInfomodeSpecificInfotdd;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_ReferenceCellInfomodeSpecificInfofdd fdd;
  NhuUE_Positioning_OTDOA_ReferenceCellInfomodeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_OTDOA_ReferenceCellInfomodeSpecificInfo;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfopositioningModeueBased
{
 TknPres pres;
} NhuUE_Positioning_OTDOA_ReferenceCellInfopositioningModeueBased;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfopositioningModeueAssisted
{
 TknPres pres;
} NhuUE_Positioning_OTDOA_ReferenceCellInfopositioningModeueAssisted;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfopositioningMode
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_ReferenceCellInfopositioningModeueBased ueBased;
  NhuUE_Positioning_OTDOA_ReferenceCellInfopositioningModeueAssisted ueAssisted;
 } val;
} NhuUE_Positioning_OTDOA_ReferenceCellInfopositioningMode;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfosfn sfn;
 NhuUE_Positioning_OTDOA_ReferenceCellInfomodeSpecificInfo modeSpecificInfo;
 NhuFrequencyInfo frequencyInfo;
 NhuUE_Positioning_OTDOA_ReferenceCellInfopositioningMode positioningMode;
 NhuUE_Positioning_IPDL_Params ue_positioning_IPDL_Paremeters;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo;


typedef TknU32 NhuSFN_SFN_RelTimeDifference1sfn_Offset;


typedef TknU32 NhuSFN_SFN_RelTimeDifference1sfn_sfn_Reltimedifference;

typedef struct NhuSFN_SFN_RelTimeDifference1
{
 TknPres pres;
 NhuSFN_SFN_RelTimeDifference1sfn_Offset sfn_Offset;
 NhuSFN_SFN_RelTimeDifference1sfn_sfn_Reltimedifference sfn_sfn_Reltimedifference;
} NhuSFN_SFN_RelTimeDifference1;


typedef enum enumNhuSFN_SFN_Drift
{
 NhuSFN_SFN_Driftsfnsfndrift0Enum,
 NhuSFN_SFN_Driftsfnsfndrift1Enum,
 NhuSFN_SFN_Driftsfnsfndrift2Enum,
 NhuSFN_SFN_Driftsfnsfndrift3Enum,
 NhuSFN_SFN_Driftsfnsfndrift4Enum,
 NhuSFN_SFN_Driftsfnsfndrift5Enum,
 NhuSFN_SFN_Driftsfnsfndrift8Enum,
 NhuSFN_SFN_Driftsfnsfndrift10Enum,
 NhuSFN_SFN_Driftsfnsfndrift15Enum,
 NhuSFN_SFN_Driftsfnsfndrift25Enum,
 NhuSFN_SFN_Driftsfnsfndrift35Enum,
 NhuSFN_SFN_Driftsfnsfndrift50Enum,
 NhuSFN_SFN_Driftsfnsfndrift65Enum,
 NhuSFN_SFN_Driftsfnsfndrift80Enum,
 NhuSFN_SFN_Driftsfnsfndrift100Enum,
 NhuSFN_SFN_Driftsfnsfndrift_1Enum,
 NhuSFN_SFN_Driftsfnsfndrift_2Enum,
 NhuSFN_SFN_Driftsfnsfndrift_3Enum,
 NhuSFN_SFN_Driftsfnsfndrift_4Enum,
 NhuSFN_SFN_Driftsfnsfndrift_5Enum,
 NhuSFN_SFN_Driftsfnsfndrift_8Enum,
 NhuSFN_SFN_Driftsfnsfndrift_10Enum,
 NhuSFN_SFN_Driftsfnsfndrift_15Enum,
 NhuSFN_SFN_Driftsfnsfndrift_25Enum,
 NhuSFN_SFN_Driftsfnsfndrift_35Enum,
 NhuSFN_SFN_Driftsfnsfndrift_50Enum,
 NhuSFN_SFN_Driftsfnsfndrift_65Enum,
 NhuSFN_SFN_Driftsfnsfndrift_80Enum,
 NhuSFN_SFN_Driftsfnsfndrift_100Enum
} EnumNhuSFN_SFN_Drift;
typedef TknU32 NhuSFN_SFN_Drift;


typedef enum enumNhuOTDOA_SearchWindowSize
{
 NhuOTDOA_SearchWindowSizec20Enum,
 NhuOTDOA_SearchWindowSizec40Enum,
 NhuOTDOA_SearchWindowSizec80Enum,
 NhuOTDOA_SearchWindowSizec160Enum,
 NhuOTDOA_SearchWindowSizec320Enum,
 NhuOTDOA_SearchWindowSizec640Enum,
 NhuOTDOA_SearchWindowSizec1280Enum,
 NhuOTDOA_SearchWindowSizemoreThan1280Enum
} EnumNhuOTDOA_SearchWindowSize;
typedef TknU32 NhuOTDOA_SearchWindowSize;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUE_Positioning_OTDOA_NeighbourCellInfomodeSpecificInfofdd;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity cellAndChannelIdentity;
} NhuUE_Positioning_OTDOA_NeighbourCellInfomodeSpecificInfotdd;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_NeighbourCellInfomodeSpecificInfofdd fdd;
  NhuUE_Positioning_OTDOA_NeighbourCellInfomodeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_OTDOA_NeighbourCellInfomodeSpecificInfo;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfopositioningModeueBased
{
 TknPres pres;
} NhuUE_Positioning_OTDOA_NeighbourCellInfopositioningModeueBased;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfopositioningModeueAssisted
{
 TknPres pres;
} NhuUE_Positioning_OTDOA_NeighbourCellInfopositioningModeueAssisted;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfopositioningMode
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_NeighbourCellInfopositioningModeueBased ueBased;
  NhuUE_Positioning_OTDOA_NeighbourCellInfopositioningModeueAssisted ueAssisted;
 } val;
} NhuUE_Positioning_OTDOA_NeighbourCellInfopositioningMode;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_NeighbourCellInfomodeSpecificInfo modeSpecificInfo;
 NhuFrequencyInfo frequencyInfo;
 NhuUE_Positioning_IPDL_Params ue_positioning_IPDL_Paremeters;
 NhuSFN_SFN_RelTimeDifference1 sfn_SFN_RelTimeDifference;
 NhuSFN_SFN_Drift sfn_SFN_Drift;
 NhuOTDOA_SearchWindowSize searchWindowSize;
 NhuUE_Positioning_OTDOA_NeighbourCellInfopositioningMode positioningMode;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellLst
{
 TknU16 noComp;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo *member;
}NhuUE_Positioning_OTDOA_NeighbourCellLst;

typedef struct NhuUE_Positioning_OTDOA_AssistanceData
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo ue_positioning_OTDOA_ReferenceCellInfo;
 NhuUE_Positioning_OTDOA_NeighbourCellLst ue_positioning_OTDOA_NeighbourCellLst;
} NhuUE_Positioning_OTDOA_AssistanceData;


typedef TknU32 NhuUTRAN_GPSReferenceTimeutran_GPSTimingOfCellms_part;


typedef TknU32 NhuUTRAN_GPSReferenceTimeutran_GPSTimingOfCellls_part;

typedef struct NhuUTRAN_GPSReferenceTimeutran_GPSTimingOfCell
{
 TknPres pres;
 NhuUTRAN_GPSReferenceTimeutran_GPSTimingOfCellms_part ms_part;
 NhuUTRAN_GPSReferenceTimeutran_GPSTimingOfCellls_part ls_part;
} NhuUTRAN_GPSReferenceTimeutran_GPSTimingOfCell;

typedef struct NhuUTRAN_GPSReferenceTimemodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info referenceIdentity;
} NhuUTRAN_GPSReferenceTimemodeSpecificInfofdd;

typedef struct NhuUTRAN_GPSReferenceTimemodeSpecificInfotdd
{
 TknPres pres;
 NhuCellParamsID referenceIdentity;
} NhuUTRAN_GPSReferenceTimemodeSpecificInfotdd;

typedef struct NhuUTRAN_GPSReferenceTimemodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUTRAN_GPSReferenceTimemodeSpecificInfofdd fdd;
  NhuUTRAN_GPSReferenceTimemodeSpecificInfotdd tdd;
 } val;
} NhuUTRAN_GPSReferenceTimemodeSpecificInfo;


typedef TknU32 NhuUTRAN_GPSReferenceTimesfn;

typedef struct NhuUTRAN_GPSReferenceTime
{
 TknPres pres;
 NhuUTRAN_GPSReferenceTimeutran_GPSTimingOfCell utran_GPSTimingOfCell;
 NhuUTRAN_GPSReferenceTimemodeSpecificInfo modeSpecificInfo;
 NhuUTRAN_GPSReferenceTimesfn sfn;
} NhuUTRAN_GPSReferenceTime;


typedef enum enumNhuSFN_TOW_Uncertainty
{
 NhuSFN_TOW_UncertaintylessThan10Enum,
 NhuSFN_TOW_UncertaintymoreThan10Enum
} EnumNhuSFN_TOW_Uncertainty;
typedef TknU32 NhuSFN_TOW_Uncertainty;


typedef enum enumNhuUTRAN_GPS_DriftRate
{
 NhuUTRAN_GPS_DriftRateutran_GPSDrift0Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift1Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift2Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift5Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift10Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift15Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift25Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift50Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift_1Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift_2Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift_5Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift_10Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift_15Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift_25Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift_50Enum
} EnumNhuUTRAN_GPS_DriftRate;
typedef TknU32 NhuUTRAN_GPS_DriftRate;


typedef TknU32 NhuUE_Positioning_GPS_ReferenceTimegps_Week;

typedef struct NhuUE_Positioning_GPS_ReferenceTime
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTimegps_Week gps_Week;
 NhuGPS_TOW_1msec gps_tow_1msec;
 NhuUTRAN_GPSReferenceTime utran_GPSReferenceTime;
 NhuSFN_TOW_Uncertainty sfn_tow_Uncertainty;
 NhuUTRAN_GPS_DriftRate utran_GPS_DriftRate;
 NhuGPS_TOW_AssistLst gps_TOW_AssistLst;
} NhuUE_Positioning_GPS_ReferenceTime;

typedef struct NhuReferenceLoc
{
 TknPres pres;
 NhuEllipsoidPointAltitudeEllipsoide ellipsoidPointAltitudeEllipsoide;
} NhuReferenceLoc;

typedef struct NhuUE_Positioning_GPS_DGPS_Corrections
{
 TknPres pres;
 NhuGPS_TOW_1sec gps_TOW;
 NhuDiffCorrectionStatus statusHealth;
 NhuDGPS_CorrectionSatInfoLst dgps_CorrectionSatInfoLst;
} NhuUE_Positioning_GPS_DGPS_Corrections;


typedef enum enumNhuSatelliteStatus
{
 NhuSatelliteStatusns_NN_UEnum,
 NhuSatelliteStatuses_SNEnum,
 NhuSatelliteStatuses_NN_UEnum,
 NhuSatelliteStatusrev2Enum,
 NhuSatelliteStatusrevEnum
} EnumNhuSatelliteStatus;
typedef TknU32 NhuSatelliteStatus;


typedef TknStrBSXL NhuSubFrame1Reservedreserved1;

typedef TknStrBSXL NhuSubFrame1Reservedreserved2;

typedef TknStrBSXL NhuSubFrame1Reservedreserved3;

typedef TknStrBSXL NhuSubFrame1Reservedreserved4;
typedef struct NhuSubFrame1Reserved
{
 TknPres pres;
 NhuSubFrame1Reservedreserved1 reserved1;
 NhuSubFrame1Reservedreserved2 reserved2;
 NhuSubFrame1Reservedreserved3 reserved3;
 NhuSubFrame1Reservedreserved4 reserved4;
} NhuSubFrame1Reserved;


typedef TknStrBSXL NhuEphemerisParametercodeOnL2;

typedef TknStrBSXL NhuEphemerisParameteruraIdx;

typedef TknStrBSXL NhuEphemerisParametersatHealth;

typedef TknStrBSXL NhuEphemerisParameteriodc;

typedef TknStrBSXL NhuEphemerisParameterl2Pflag;

typedef TknStrBSXL NhuEphemerisParametert_GD;

typedef TknStrBSXL NhuEphemerisParametert_oc;

typedef TknStrBSXL NhuEphemerisParameteraf2;

typedef TknStrBSXL NhuEphemerisParameteraf1;

typedef TknStrBSXL NhuEphemerisParameteraf0;

typedef TknStrBSXL NhuEphemerisParameterc_rs;

typedef TknStrBSXL NhuEphemerisParameterdelta_n;

typedef TknStrBSXL NhuEphemerisParameterm0;

typedef TknStrBSXL NhuEphemerisParameterc_uc;

typedef TknStrBSXL NhuEphemerisParametere;

typedef TknStrBSXL NhuEphemerisParameterc_us;

typedef TknStrBSXL NhuEphemerisParametera_Sqrt;

typedef TknStrBSXL NhuEphemerisParametert_oe;

typedef TknStrBSXL NhuEphemerisParameterfitInterval;

typedef TknStrBSXL NhuEphemerisParameteraodo;

typedef TknStrBSXL NhuEphemerisParameterc_ic;

typedef TknStrBSXL NhuEphemerisParameteromega0;

typedef TknStrBSXL NhuEphemerisParameterc_is;

typedef TknStrBSXL NhuEphemerisParameteri0;

typedef TknStrBSXL NhuEphemerisParameterc_rc;

typedef TknStrBSXL NhuEphemerisParameteromega;

typedef TknStrBSXL NhuEphemerisParameteromegaDot;

typedef TknStrBSXL NhuEphemerisParameteriDot;
typedef struct NhuEphemerisParameter
{
 TknPres pres;
 NhuEphemerisParametercodeOnL2 codeOnL2;
 NhuEphemerisParameteruraIdx uraIdx;
 NhuEphemerisParametersatHealth satHealth;
 NhuEphemerisParameteriodc iodc;
 NhuEphemerisParameterl2Pflag l2Pflag;
 NhuSubFrame1Reserved sf1Revd;
 NhuEphemerisParametert_GD t_GD;
 NhuEphemerisParametert_oc t_oc;
 NhuEphemerisParameteraf2 af2;
 NhuEphemerisParameteraf1 af1;
 NhuEphemerisParameteraf0 af0;
 NhuEphemerisParameterc_rs c_rs;
 NhuEphemerisParameterdelta_n delta_n;
 NhuEphemerisParameterm0 m0;
 NhuEphemerisParameterc_uc c_uc;
 NhuEphemerisParametere e;
 NhuEphemerisParameterc_us c_us;
 NhuEphemerisParametera_Sqrt a_Sqrt;
 NhuEphemerisParametert_oe t_oe;
 NhuEphemerisParameterfitInterval fitInterval;
 NhuEphemerisParameteraodo aodo;
 NhuEphemerisParameterc_ic c_ic;
 NhuEphemerisParameteromega0 omega0;
 NhuEphemerisParameterc_is c_is;
 NhuEphemerisParameteri0 i0;
 NhuEphemerisParameterc_rc c_rc;
 NhuEphemerisParameteromega omega;
 NhuEphemerisParameteromegaDot omegaDot;
 NhuEphemerisParameteriDot iDot;
} NhuEphemerisParameter;

typedef struct NhuNavigationModelSatInfo
{
 TknPres pres;
 NhuSatID satID;
 NhuSatelliteStatus satelliteStatus;
 NhuEphemerisParameter ephemerisParameter;
} NhuNavigationModelSatInfo;

typedef struct NhuNavigationModelSatInfoLst
{
 TknU16 noComp;
 NhuNavigationModelSatInfo *member;
}NhuNavigationModelSatInfoLst;

typedef struct NhuUE_Positioning_GPS_NavigationModel
{
 TknPres pres;
 NhuNavigationModelSatInfoLst navigationModelSatInfoLst;
} NhuUE_Positioning_GPS_NavigationModel;


typedef TknStrBSXL NhuUE_Positioning_GPS_IonosphericModelalpha0;

typedef TknStrBSXL NhuUE_Positioning_GPS_IonosphericModelalpha1;

typedef TknStrBSXL NhuUE_Positioning_GPS_IonosphericModelalpha2;

typedef TknStrBSXL NhuUE_Positioning_GPS_IonosphericModelalpha3;

typedef TknStrBSXL NhuUE_Positioning_GPS_IonosphericModelbeta0;

typedef TknStrBSXL NhuUE_Positioning_GPS_IonosphericModelbeta1;

typedef TknStrBSXL NhuUE_Positioning_GPS_IonosphericModelbeta2;

typedef TknStrBSXL NhuUE_Positioning_GPS_IonosphericModelbeta3;
typedef struct NhuUE_Positioning_GPS_IonosphericModel
{
 TknPres pres;
 NhuUE_Positioning_GPS_IonosphericModelalpha0 alpha0;
 NhuUE_Positioning_GPS_IonosphericModelalpha1 alpha1;
 NhuUE_Positioning_GPS_IonosphericModelalpha2 alpha2;
 NhuUE_Positioning_GPS_IonosphericModelalpha3 alpha3;
 NhuUE_Positioning_GPS_IonosphericModelbeta0 beta0;
 NhuUE_Positioning_GPS_IonosphericModelbeta1 beta1;
 NhuUE_Positioning_GPS_IonosphericModelbeta2 beta2;
 NhuUE_Positioning_GPS_IonosphericModelbeta3 beta3;
} NhuUE_Positioning_GPS_IonosphericModel;


typedef TknStrBSXL NhuUE_Positioning_GPS_UTC_Modela1;

typedef TknStrBSXL NhuUE_Positioning_GPS_UTC_Modela0;

typedef TknStrBSXL NhuUE_Positioning_GPS_UTC_Modelt_ot;

typedef TknStrBSXL NhuUE_Positioning_GPS_UTC_Modelwn_t;

typedef TknStrBSXL NhuUE_Positioning_GPS_UTC_Modeldelta_t_LS;

typedef TknStrBSXL NhuUE_Positioning_GPS_UTC_Modelwn_lsf;

typedef TknStrBSXL NhuUE_Positioning_GPS_UTC_Modeldn;

typedef TknStrBSXL NhuUE_Positioning_GPS_UTC_Modeldelta_t_LSF;
typedef struct NhuUE_Positioning_GPS_UTC_Model
{
 TknPres pres;
 NhuUE_Positioning_GPS_UTC_Modela1 a1;
 NhuUE_Positioning_GPS_UTC_Modela0 a0;
 NhuUE_Positioning_GPS_UTC_Modelt_ot t_ot;
 NhuUE_Positioning_GPS_UTC_Modelwn_t wn_t;
 NhuUE_Positioning_GPS_UTC_Modeldelta_t_LS delta_t_LS;
 NhuUE_Positioning_GPS_UTC_Modelwn_lsf wn_lsf;
 NhuUE_Positioning_GPS_UTC_Modeldn dn;
 NhuUE_Positioning_GPS_UTC_Modeldelta_t_LSF delta_t_LSF;
} NhuUE_Positioning_GPS_UTC_Model;


typedef TknStrBSXL NhuUE_Positioning_GPS_Almanacwn_a;

typedef TknStrBSXL NhuUE_Positioning_GPS_Almanacsv_GlobalHealth;
typedef struct NhuUE_Positioning_GPS_Almanac
{
 TknPres pres;
 NhuUE_Positioning_GPS_Almanacwn_a wn_a;
 NhuAlmanacSatInfoLst almanacSatInfoLst;
 NhuUE_Positioning_GPS_Almanacsv_GlobalHealth sv_GlobalHealth;
} NhuUE_Positioning_GPS_Almanac;

typedef struct NhuUE_Positioning_GPS_AcquisitionAssistance
{
 TknPres pres;
 NhuGPS_TOW_1msec gps_ReferenceTime;
 NhuUTRAN_GPSReferenceTime utran_GPSReferenceTime;
 NhuAcquisitionSatInfoLst satelliteInfoLst;
} NhuUE_Positioning_GPS_AcquisitionAssistance;

typedef struct NhuUE_Positioning_GPS_ReferenceCellInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info referenceIdentity;
} NhuUE_Positioning_GPS_ReferenceCellInfomodeSpecificInfofdd;

typedef struct NhuUE_Positioning_GPS_ReferenceCellInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuCellParamsID referenceIdentity;
} NhuUE_Positioning_GPS_ReferenceCellInfomodeSpecificInfotdd;

typedef struct NhuUE_Positioning_GPS_ReferenceCellInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_GPS_ReferenceCellInfomodeSpecificInfofdd fdd;
  NhuUE_Positioning_GPS_ReferenceCellInfomodeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_GPS_ReferenceCellInfomodeSpecificInfo;

typedef struct NhuUE_Positioning_GPS_ReferenceCellInfo
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceCellInfomodeSpecificInfo modeSpecificInfo;
} NhuUE_Positioning_GPS_ReferenceCellInfo;

typedef struct NhuUE_Positioning_GPS_AssistanceData
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTime ue_positioning_GPS_ReferenceTime;
 NhuReferenceLoc ue_positioning_GPS_ReferenceLoc;
 NhuUE_Positioning_GPS_DGPS_Corrections ue_positioning_GPS_DGPS_Corrections;
 NhuUE_Positioning_GPS_NavigationModel ue_positioning_GPS_NavigationModel;
 NhuUE_Positioning_GPS_IonosphericModel ue_positioning_GPS_IonosphericModel;
 NhuUE_Positioning_GPS_UTC_Model ue_positioning_GPS_UTC_Model;
 NhuUE_Positioning_GPS_Almanac ue_positioning_GPS_Almanac;
 NhuUE_Positioning_GPS_AcquisitionAssistance ue_positioning_GPS_AcquisitionAssistance;
 NhuBadSatLst ue_positioning_GPS_Real_timeIntegrity;
 NhuUE_Positioning_GPS_ReferenceCellInfo dummy;
} NhuUE_Positioning_GPS_AssistanceData;

typedef struct NhuUE_Positioning_Measurement
{
 TknPres pres;
 NhuUE_Positioning_RprtngQuantity ue_positioning_RprtngQuantity;
 NhuUE_Positioning_ReportCriteria reportCriteria;
 NhuUE_Positioning_OTDOA_AssistanceData ue_positioning_OTDOA_AssistanceData;
 NhuUE_Positioning_GPS_AssistanceData ue_positioning_GPS_AssistanceData;
} NhuUE_Positioning_Measurement;

typedef struct NhuTrafficVolumeMeasurementObjectLst
{
 TknU16 noComp;
 NhuUL_TrCH_Identity *member;
}NhuTrafficVolumeMeasurementObjectLst;


typedef TknU32 NhuTimeInterval;

typedef struct NhuTrafficVolumeMeasQuantity
{
 TknU8 choice;
 union {
  NhuTimeInterval averageRLC_BufferPayload;
  NhuTimeInterval varianceOfRLC_BufferPayload;
 } val;
} NhuTrafficVolumeMeasQuantity;


typedef TknU8 NhuTrafficVolumeRprtngQuantityrlc_RB_BufferPayload;


typedef TknU8 NhuTrafficVolumeRprtngQuantityrlc_RB_BufferPayloadAverage;


typedef TknU8 NhuTrafficVolumeRprtngQuantityrlc_RB_BufferPayloadVariance;

typedef struct NhuTrafficVolumeRprtngQuantity
{
 TknPres pres;
 NhuTrafficVolumeRprtngQuantityrlc_RB_BufferPayload rlc_RB_BufferPayload;
 NhuTrafficVolumeRprtngQuantityrlc_RB_BufferPayloadAverage rlc_RB_BufferPayloadAverage;
 NhuTrafficVolumeRprtngQuantityrlc_RB_BufferPayloadVariance rlc_RB_BufferPayloadVariance;
} NhuTrafficVolumeRprtngQuantity;


typedef enum enumNhuTrafficVolumeThreshold
{
 NhuTrafficVolumeThresholdth8Enum,
 NhuTrafficVolumeThresholdth16Enum,
 NhuTrafficVolumeThresholdth32Enum,
 NhuTrafficVolumeThresholdth64Enum,
 NhuTrafficVolumeThresholdth128Enum,
 NhuTrafficVolumeThresholdth256Enum,
 NhuTrafficVolumeThresholdth512Enum,
 NhuTrafficVolumeThresholdth1024Enum,
 NhuTrafficVolumeThresholdth2kEnum,
 NhuTrafficVolumeThresholdth3kEnum,
 NhuTrafficVolumeThresholdth4kEnum,
 NhuTrafficVolumeThresholdth6kEnum,
 NhuTrafficVolumeThresholdth8kEnum,
 NhuTrafficVolumeThresholdth12kEnum,
 NhuTrafficVolumeThresholdth16kEnum,
 NhuTrafficVolumeThresholdth24kEnum,
 NhuTrafficVolumeThresholdth32kEnum,
 NhuTrafficVolumeThresholdth48kEnum,
 NhuTrafficVolumeThresholdth64kEnum,
 NhuTrafficVolumeThresholdth96kEnum,
 NhuTrafficVolumeThresholdth128kEnum,
 NhuTrafficVolumeThresholdth192kEnum,
 NhuTrafficVolumeThresholdth256kEnum,
 NhuTrafficVolumeThresholdth384kEnum,
 NhuTrafficVolumeThresholdth512kEnum,
 NhuTrafficVolumeThresholdth768kEnum
} EnumNhuTrafficVolumeThreshold;
typedef TknU32 NhuTrafficVolumeThreshold;


typedef enum enumNhuPendingTimeAfterTrigger
{
 NhuPendingTimeAfterTriggerptat0_25Enum,
 NhuPendingTimeAfterTriggerptat0_5Enum,
 NhuPendingTimeAfterTriggerptat1Enum,
 NhuPendingTimeAfterTriggerptat2Enum,
 NhuPendingTimeAfterTriggerptat4Enum,
 NhuPendingTimeAfterTriggerptat8Enum,
 NhuPendingTimeAfterTriggerptat16Enum
} EnumNhuPendingTimeAfterTrigger;
typedef TknU32 NhuPendingTimeAfterTrigger;


typedef enum enumNhuTX_InterruptionAfterTrigger
{
 NhuTX_InterruptionAfterTriggertxiat0_25Enum,
 NhuTX_InterruptionAfterTriggertxiat0_5Enum,
 NhuTX_InterruptionAfterTriggertxiat1Enum,
 NhuTX_InterruptionAfterTriggertxiat2Enum,
 NhuTX_InterruptionAfterTriggertxiat4Enum,
 NhuTX_InterruptionAfterTriggertxiat8Enum,
 NhuTX_InterruptionAfterTriggertxiat16Enum
} EnumNhuTX_InterruptionAfterTrigger;
typedef TknU32 NhuTX_InterruptionAfterTrigger;

typedef struct NhuTrafficVolumeEventParam
{
 TknPres pres;
 NhuTrafficVolumeEventTyp eventID;
 NhuTrafficVolumeThreshold reportingThreshold;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuPendingTimeAfterTrigger pendingTimeAfterTrigger;
 NhuTX_InterruptionAfterTrigger tx_InterruptionAfterTrigger;
} NhuTrafficVolumeEventParam;

typedef struct NhuTransChCriteriaeventSpecificParams
{
 TknU16 noComp;
 NhuTrafficVolumeEventParam *member;
}NhuTransChCriteriaeventSpecificParams;

typedef struct NhuTransChCriteria
{
 TknPres pres;
 NhuUL_TrCH_Identity ul_transportChannelID;
 NhuTransChCriteriaeventSpecificParams eventSpecificParams;
} NhuTransChCriteria;

typedef struct NhuTransChCriteriaLst
{
 TknU16 noComp;
 NhuTransChCriteria *member;
}NhuTransChCriteriaLst;

typedef struct NhuTrafficVolumeRprtngCriteria
{
 TknPres pres;
 NhuTransChCriteriaLst transChCriteriaLst;
} NhuTrafficVolumeRprtngCriteria;

typedef struct NhuTrafficVolumeReportCriteria
{
 TknU8 choice;
 union {
  NhuTrafficVolumeRprtngCriteria trafficVolumeRprtngCriteria;
  NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 } val;
} NhuTrafficVolumeReportCriteria;

typedef struct NhuTrafficVolumeMeasurement
{
 TknPres pres;
 NhuTrafficVolumeMeasurementObjectLst trafficVolumeMeasurementObjectLst;
 NhuTrafficVolumeMeasQuantity trafficVolumeMeasQuantity;
 NhuTrafficVolumeRprtngQuantity trafficVolumeRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuTrafficVolumeReportCriteria reportCriteria;
} NhuTrafficVolumeMeasurement;


typedef NhuTFCS_IdentityPlain NhuSIR_TFCS;
typedef struct NhuSIR_TFCS_Lst
{
 TknU16 noComp;
 NhuSIR_TFCS *member;
}NhuSIR_TFCS_Lst;


typedef TknU8 NhuQualityRprtngQuantitydl_TransChBLER;

typedef struct NhuQualityRprtngQuantitymodeSpecificInfotdd
{
 TknPres pres;
 NhuSIR_TFCS_Lst sir_TFCS_Lst;
} NhuQualityRprtngQuantitymodeSpecificInfotdd;

typedef struct NhuQualityRprtngQuantitymodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuQualityRprtngQuantitymodeSpecificInfotdd tdd;
 } val;
} NhuQualityRprtngQuantitymodeSpecificInfo;

typedef struct NhuQualityRprtngQuantity
{
 TknPres pres;
 NhuQualityRprtngQuantitydl_TransChBLER dl_TransChBLER;
 NhuBLER_TransChIdLst bler_dl_TransChIdLst;
 NhuQualityRprtngQuantitymodeSpecificInfo modeSpecificInfo;
} NhuQualityRprtngQuantity;


typedef TknU32 NhuQualityRprtngCriteriaSingletotalCRC;


typedef TknU32 NhuQualityRprtngCriteriaSinglebadCRC;


typedef TknU32 NhuQualityRprtngCriteriaSinglependingAfterTrigger;

typedef struct NhuQualityRprtngCriteriaSingle
{
 TknPres pres;
 NhuTportChannelIdentity transportChannelIdentity;
 NhuQualityRprtngCriteriaSingletotalCRC totalCRC;
 NhuQualityRprtngCriteriaSinglebadCRC badCRC;
 NhuQualityRprtngCriteriaSinglependingAfterTrigger pendingAfterTrigger;
} NhuQualityRprtngCriteriaSingle;

typedef struct NhuQualityRprtngCriteria
{
 TknU16 noComp;
 NhuQualityRprtngCriteriaSingle *member;
}NhuQualityRprtngCriteria;

typedef struct NhuQualityReportCriteria
{
 TknU8 choice;
 union {
  NhuQualityRprtngCriteria qualityRprtngCriteria;
  NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 } val;
} NhuQualityReportCriteria;

typedef struct NhuQualityMeasurement
{
 TknPres pres;
 NhuQualityRprtngQuantity qualityRprtngQuantity;
 NhuQualityReportCriteria reportCriteria;
} NhuQualityMeasurement;


typedef enum enumNhuUE_MeasurementQuantity
{
 NhuUE_MeasurementQuantityue_TransmittedPowerEnum,
 NhuUE_MeasurementQuantityutra_Carrier_RSSIEnum,
 NhuUE_MeasurementQuantityue_RX_TX_TimeDifferenceEnum
} EnumNhuUE_MeasurementQuantity;
typedef TknU32 NhuUE_MeasurementQuantity;

typedef struct NhuUE_InternalMeasQuantity
{
 TknPres pres;
 NhuUE_MeasurementQuantity measurementQuantity;
 Nhu3gFilterCoefficient filterCoefficient;
} NhuUE_InternalMeasQuantity;


typedef TknU8 NhuUE_InternalRprtngQuantityue_TransmittedPower;


typedef TknU8 NhuUE_InternalRprtngQuantitymodeSpecificInfofddue_RX_TX_TimeDifference;

typedef struct NhuUE_InternalRprtngQuantitymodeSpecificInfofdd
{
 TknPres pres;
 NhuUE_InternalRprtngQuantitymodeSpecificInfofddue_RX_TX_TimeDifference ue_RX_TX_TimeDifference;
} NhuUE_InternalRprtngQuantitymodeSpecificInfofdd;


typedef TknU8 NhuUE_InternalRprtngQuantitymodeSpecificInfotddappliedTA;

typedef struct NhuUE_InternalRprtngQuantitymodeSpecificInfotdd
{
 TknPres pres;
 NhuUE_InternalRprtngQuantitymodeSpecificInfotddappliedTA appliedTA;
} NhuUE_InternalRprtngQuantitymodeSpecificInfotdd;

typedef struct NhuUE_InternalRprtngQuantitymodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_InternalRprtngQuantitymodeSpecificInfofdd fdd;
  NhuUE_InternalRprtngQuantitymodeSpecificInfotdd tdd;
 } val;
} NhuUE_InternalRprtngQuantitymodeSpecificInfo;

typedef struct NhuUE_InternalRprtngQuantity
{
 TknPres pres;
 NhuUE_InternalRprtngQuantityue_TransmittedPower ue_TransmittedPower;
 NhuUE_InternalRprtngQuantitymodeSpecificInfo modeSpecificInfo;
} NhuUE_InternalRprtngQuantity;


typedef TknS32 NhuTransmittedPowerThreshold;

typedef struct NhuUE_6AB_Event
{
 TknPres pres;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuTransmittedPowerThreshold transmittedPowerThreshold;
} NhuUE_6AB_Event;


typedef TknU32 NhuUE_RX_TX_TimeDifferenceThreshold;

typedef struct NhuUE_6FG_Event
{
 TknPres pres;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuUE_RX_TX_TimeDifferenceThreshold ue_RX_TX_TimeDifferenceThreshold;
} NhuUE_6FG_Event;

typedef struct NhuUE_InternalEventParam
{
 TknU8 choice;
 union {
  NhuUE_6AB_Event event6a;
  NhuUE_6AB_Event event6b;
  Nhu3gTimeToTrigger event6c;
  Nhu3gTimeToTrigger event6d;
  Nhu3gTimeToTrigger event6e;
  NhuUE_6FG_Event event6f;
  NhuUE_6FG_Event event6g;
 } val;
} NhuUE_InternalEventParam;

typedef struct NhuUE_InternalEventParamLst
{
 TknU16 noComp;
 NhuUE_InternalEventParam *member;
}NhuUE_InternalEventParamLst;

typedef struct NhuUE_InternalRprtngCriteria
{
 TknPres pres;
 NhuUE_InternalEventParamLst ue_InternalEventParamLst;
} NhuUE_InternalRprtngCriteria;

typedef struct NhuUE_InternalReportCriteria
{
 TknU8 choice;
 union {
  NhuUE_InternalRprtngCriteria ue_InternalRprtngCriteria;
  NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 } val;
} NhuUE_InternalReportCriteria;

typedef struct NhuUE_InternalMeasurement
{
 TknPres pres;
 NhuUE_InternalMeasQuantity ue_InternalMeasQuantity;
 NhuUE_InternalRprtngQuantity ue_InternalRprtngQuantity;
 NhuUE_InternalReportCriteria reportCriteria;
} NhuUE_InternalMeasurement;

typedef struct NhuMeasurementTyp
{
 TknU8 choice;
 union {
  NhuIntraFrequencyMeasurement intraFrequencyMeasurement;
  NhuInterFrequencyMeasurement interFrequencyMeasurement;
  NhuInterRATMeasurement interRATMeasurement;
  NhuUE_Positioning_Measurement ue_positioning_Measurement;
  NhuTrafficVolumeMeasurement trafficVolumeMeasurement;
  NhuQualityMeasurement qualityMeasurement;
  NhuUE_InternalMeasurement ue_InternalMeasurement;
 } val;
} NhuMeasurementTyp;

typedef struct NhuMeasurementCmdmodify
{
 TknPres pres;
 NhuMeasurementTyp measurementTyp;
} NhuMeasurementCmdmodify;

typedef struct NhuMeasurementCmd
{
 TknU8 choice;
 union {
  NhuMeasurementTyp setup;
  NhuMeasurementCmdmodify modify;
 } val;
} NhuMeasurementCmd;


typedef TknU8 NhuUE_Positioning_RprtngQuantity_r4gps_TimingOfCellWanted;


typedef TknU8 NhuUE_Positioning_RprtngQuantity_r4additionalAssistanceDataReq;

typedef struct NhuUE_Positioning_RprtngQuantity_r4
{
 TknPres pres;
 NhuUE_Positioning_MethodTyp methodTyp;
 NhuPositioningMethod positioningMethod;
 NhuUE_Positioning_Accuracy horizontalAccuracy;
 NhuUE_Positioning_Accuracy verticalAccuracy;
 NhuUE_Positioning_RprtngQuantity_r4gps_TimingOfCellWanted gps_TimingOfCellWanted;
 NhuUE_Positioning_RprtngQuantity_r4additionalAssistanceDataReq additionalAssistanceDataReq;
 NhuEnvironmentCharacterisation environmentCharacterisation;
} NhuUE_Positioning_RprtngQuantity_r4;

typedef struct NhuReferenceCellPosition
{
 TknU8 choice;
 union {
  NhuEllipsoidPoint ellipsoidPoint;
  NhuEllipsoidPointAltitude ellipsoidPointWithAltitude;
 } val;
} NhuReferenceCellPosition;


typedef TknU32 NhuUE_Positioning_IPDL_Params_r4modeSpecificInfofddip_Offset;


typedef TknU32 NhuUE_Positioning_IPDL_Params_r4modeSpecificInfofddseed;

typedef struct NhuUE_Positioning_IPDL_Params_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuIP_Spacing ip_Spacing;
 NhuIP_Length ip_Length;
 NhuUE_Positioning_IPDL_Params_r4modeSpecificInfofddip_Offset ip_Offset;
 NhuUE_Positioning_IPDL_Params_r4modeSpecificInfofddseed seed;
} NhuUE_Positioning_IPDL_Params_r4modeSpecificInfofdd;


typedef TknU32 NhuUE_Positioning_IPDL_Params_r4modeSpecificInfotddip_slot;


typedef TknU32 NhuUE_Positioning_IPDL_Params_r4modeSpecificInfotddip_Start;

typedef struct NhuUE_Positioning_IPDL_Params_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuIP_Spacing_TDD ip_Spacing_TDD;
 NhuUE_Positioning_IPDL_Params_r4modeSpecificInfotddip_slot ip_slot;
 NhuUE_Positioning_IPDL_Params_r4modeSpecificInfotddip_Start ip_Start;
 NhuIP_PCCPCH_r4 ip_PCCPCG;
} NhuUE_Positioning_IPDL_Params_r4modeSpecificInfotdd;

typedef struct NhuUE_Positioning_IPDL_Params_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_IPDL_Params_r4modeSpecificInfofdd fdd;
  NhuUE_Positioning_IPDL_Params_r4modeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_IPDL_Params_r4modeSpecificInfo;

typedef struct NhuUE_Positioning_IPDL_Params_r4
{
 TknPres pres;
 NhuUE_Positioning_IPDL_Params_r4modeSpecificInfo modeSpecificInfo;
 NhuBurstModeParams burstModeParams;
} NhuUE_Positioning_IPDL_Params_r4;


typedef TknU32 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4sfn;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4modeSpecificInfofdd;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity cellAndChannelIdentity;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4modeSpecificInfotdd;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4modeSpecificInfofdd fdd;
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4modeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4modeSpecificInfo;


typedef TknU32 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningModeueBasedroundTripTime;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningModeueBased
{
 TknPres pres;
 NhuReferenceCellPosition cellPosition;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningModeueBasedroundTripTime roundTripTime;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningModeueBased;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningModeueAssisted
{
 TknPres pres;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningModeueAssisted;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningMode
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningModeueBased ueBased;
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningModeueAssisted ueAssisted;
 } val;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningMode;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4sfn sfn;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4modeSpecificInfo modeSpecificInfo;
 NhuFrequencyInfo frequencyInfo;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningMode positioningMode;
 NhuUE_Positioning_IPDL_Params_r4 ue_positioning_IPDL_Paremeters;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4;


typedef enum enumNhuSFN_Offset_Validity
{
 NhuSFN_Offset_ValidityfalseEnum
} EnumNhuSFN_Offset_Validity;
typedef TknU32 NhuSFN_Offset_Validity;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4modeSpecificInfofdd;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity cellAndChannelIdentity;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4modeSpecificInfotdd;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4modeSpecificInfofdd fdd;
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4modeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4modeSpecificInfo;


typedef TknS32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBasedrelativeNorth;


typedef TknS32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBasedrelativeEast;


typedef TknS32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBasedrelativeAltitude;


typedef TknU32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBasedroundTripTime;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBased
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBasedrelativeNorth relativeNorth;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBasedrelativeEast relativeEast;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBasedrelativeAltitude relativeAltitude;
 NhuFineSFN_SFN fineSFN_SFN;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBasedroundTripTime roundTripTime;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBased;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueAssisted
{
 TknPres pres;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueAssisted;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningMode
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBased ueBased;
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueAssisted ueAssisted;
 } val;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningMode;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4modeSpecificInfo modeSpecificInfo;
 NhuFrequencyInfo frequencyInfo;
 NhuUE_Positioning_IPDL_Params_r4 ue_positioning_IPDL_Paremeters;
 NhuSFN_SFN_RelTimeDifference1 sfn_SFN_RelTimeDifference;
 NhuSFN_Offset_Validity sfn_Offset_Validity;
 NhuSFN_SFN_Drift sfn_SFN_Drift;
 NhuOTDOA_SearchWindowSize searchWindowSize;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningMode positioningMode;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellLst_r4
{
 TknU16 noComp;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4 *member;
}NhuUE_Positioning_OTDOA_NeighbourCellLst_r4;

typedef struct NhuUE_Positioning_OTDOA_AssistanceData_r4
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4 ue_positioning_OTDOA_ReferenceCellInfo;
 NhuUE_Positioning_OTDOA_NeighbourCellLst_r4 ue_positioning_OTDOA_NeighbourCellLst;
} NhuUE_Positioning_OTDOA_AssistanceData_r4;

typedef struct NhuUE_Positioning_Measurement_r4
{
 TknPres pres;
 NhuUE_Positioning_RprtngQuantity_r4 ue_positioning_RprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_Positioning_ReportCriteria reportCriteria;
 NhuUE_Positioning_OTDOA_AssistanceData_r4 ue_positioning_OTDOA_AssistanceData;
 NhuUE_Positioning_GPS_AssistanceData ue_positioning_GPS_AssistanceData;
} NhuUE_Positioning_Measurement_r4;


typedef TknU8 NhuUE_InternalRprtngQuantity_r4ue_TransmittedPower;


typedef TknU8 NhuUE_InternalRprtngQuantity_r4modeSpecificInfofddue_RX_TX_TimeDifference;

typedef struct NhuUE_InternalRprtngQuantity_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuUE_InternalRprtngQuantity_r4modeSpecificInfofddue_RX_TX_TimeDifference ue_RX_TX_TimeDifference;
} NhuUE_InternalRprtngQuantity_r4modeSpecificInfofdd;


typedef TknU8 NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd384appliedTA;

typedef struct NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd384
{
 TknPres pres;
 NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd384appliedTA appliedTA;
} NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd384;


typedef TknU8 NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd128t_ADVinfo;

typedef struct NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd128
{
 TknPres pres;
 NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd128t_ADVinfo t_ADVinfo;
} NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd128;

typedef struct NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOption
{
 TknU8 choice;
 union {
  NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd384 tdd384;
  NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd128 tdd128;
 } val;
} NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOption;

typedef struct NhuUE_InternalRprtngQuantity_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOption tddOption;
} NhuUE_InternalRprtngQuantity_r4modeSpecificInfotdd;

typedef struct NhuUE_InternalRprtngQuantity_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_InternalRprtngQuantity_r4modeSpecificInfofdd fdd;
  NhuUE_InternalRprtngQuantity_r4modeSpecificInfotdd tdd;
 } val;
} NhuUE_InternalRprtngQuantity_r4modeSpecificInfo;

typedef struct NhuUE_InternalRprtngQuantity_r4
{
 TknPres pres;
 NhuUE_InternalRprtngQuantity_r4ue_TransmittedPower ue_TransmittedPower;
 NhuUE_InternalRprtngQuantity_r4modeSpecificInfo modeSpecificInfo;
} NhuUE_InternalRprtngQuantity_r4;

typedef struct NhuUE_InternalMeasurement_r4
{
 TknPres pres;
 NhuUE_InternalMeasQuantity ue_InternalMeasQuantity;
 NhuUE_InternalRprtngQuantity_r4 ue_InternalRprtngQuantity;
 NhuUE_InternalReportCriteria reportCriteria;
} NhuUE_InternalMeasurement_r4;

typedef struct NhuMeasurementTyp_r4
{
 TknU8 choice;
 union {
  NhuIntraFrequencyMeasurement_r4 intraFrequencyMeasurement;
  NhuInterFrequencyMeasurement_r4 interFrequencyMeasurement;
  NhuInterRATMeasurement_r4 interRATMeasurement;
  NhuUE_Positioning_Measurement_r4 up_Measurement;
  NhuTrafficVolumeMeasurement trafficVolumeMeasurement;
  NhuQualityMeasurement qualityMeasurement;
  NhuUE_InternalMeasurement_r4 ue_InternalMeasurement;
 } val;
} NhuMeasurementTyp_r4;

typedef struct NhuMeasurementCmd_r4modify
{
 TknPres pres;
 NhuMeasurementTyp_r4 measurementTyp;
} NhuMeasurementCmd_r4modify;

typedef struct NhuMeasurementCmd_r4
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r4 setup;
  NhuMeasurementCmd_r4modify modify;
 } val;
} NhuMeasurementCmd_r4;

typedef struct NhuMeasurementTyp_r6
{
 TknU8 choice;
 union {
  NhuIntraFrequencyMeasurement_r6 intraFrequencyMeasurement;
  NhuInterFrequencyMeasurement_r6 interFrequencyMeasurement;
  NhuInterRATMeasurement_r6 interRATMeasurement;
  NhuUE_Positioning_Measurement_r4 up_Measurement;
  NhuTrafficVolumeMeasurement trafficVolumeMeasurement;
  NhuQualityMeasurement qualityMeasurement;
  NhuUE_InternalMeasurement_r4 ue_InternalMeasurement;
 } val;
} NhuMeasurementTyp_r6;

typedef struct NhuMeasurementCmd_r6modify
{
 TknPres pres;
 NhuMeasurementTyp_r6 measurementTyp;
} NhuMeasurementCmd_r6modify;

typedef struct NhuMeasurementCmd_r6
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r6 setup;
  NhuMeasurementCmd_r6modify modify;
 } val;
} NhuMeasurementCmd_r6;


typedef TknU8 NhuUE_Positioning_RprtngQuantity_r7gps_TimingOfCellWanted;


typedef TknU8 NhuUE_Positioning_RprtngQuantity_r7additionalAssistanceDataReq;


typedef enum enumNhuUE_Positioning_RprtngQuantity_r7velocityRqsted
{
 NhuUE_Positioning_RprtngQuantity_r7velocityRqstedtrueEnum
} EnumNhuUE_Positioning_RprtngQuantity_r7velocityRqsted;
typedef TknU32 NhuUE_Positioning_RprtngQuantity_r7velocityRqsted;


typedef TknStrBSXL NhuUE_Positioning_RprtngQuantity_r7gANSSPositioningMethods;

typedef TknStrBSXL NhuUE_Positioning_RprtngQuantity_r7gANSSTimingOfCellWanted;

typedef TknStrBSXL NhuUE_Positioning_RprtngQuantity_r7gANSSCarrierPhaseMeasurementRqsted;
typedef struct NhuUE_Positioning_RprtngQuantity_r7
{
 TknPres pres;
 NhuUE_Positioning_MethodTyp methodTyp;
 NhuPositioningMethod positioningMethod;
 NhuUE_Positioning_Accuracy horizontalAccuracy;
 NhuUE_Positioning_Accuracy verticalAccuracy;
 NhuUE_Positioning_RprtngQuantity_r7gps_TimingOfCellWanted gps_TimingOfCellWanted;
 NhuUE_Positioning_RprtngQuantity_r7additionalAssistanceDataReq additionalAssistanceDataReq;
 NhuEnvironmentCharacterisation environmentCharacterisation;
 NhuUE_Positioning_RprtngQuantity_r7velocityRqsted velocityRqsted;
 NhuUE_Positioning_RprtngQuantity_r7gANSSPositioningMethods gANSSPositioningMethods;
 NhuUE_Positioning_RprtngQuantity_r7gANSSTimingOfCellWanted gANSSTimingOfCellWanted;
 NhuUE_Positioning_RprtngQuantity_r7gANSSCarrierPhaseMeasurementRqsted gANSSCarrierPhaseMeasurementRqsted;
} NhuUE_Positioning_RprtngQuantity_r7;


typedef enum enumNhuThresholdSFN_GPS_TOW_us
{
 NhuThresholdSFN_GPS_TOW_usus1Enum,
 NhuThresholdSFN_GPS_TOW_usus2Enum,
 NhuThresholdSFN_GPS_TOW_usus3Enum,
 NhuThresholdSFN_GPS_TOW_usus5Enum,
 NhuThresholdSFN_GPS_TOW_usus10Enum,
 NhuThresholdSFN_GPS_TOW_usus20Enum,
 NhuThresholdSFN_GPS_TOW_usus50Enum,
 NhuThresholdSFN_GPS_TOW_usus100Enum
} EnumNhuThresholdSFN_GPS_TOW_us;
typedef TknU32 NhuThresholdSFN_GPS_TOW_us;


typedef enum enumNhuThresholdSFN_GANSS_TOW
{
 NhuThresholdSFN_GANSS_TOWus1Enum,
 NhuThresholdSFN_GANSS_TOWus2Enum,
 NhuThresholdSFN_GANSS_TOWus3Enum,
 NhuThresholdSFN_GANSS_TOWus5Enum,
 NhuThresholdSFN_GANSS_TOWus10Enum,
 NhuThresholdSFN_GANSS_TOWus20Enum,
 NhuThresholdSFN_GANSS_TOWus50Enum,
 NhuThresholdSFN_GANSS_TOWus100Enum
} EnumNhuThresholdSFN_GANSS_TOW;
typedef TknU32 NhuThresholdSFN_GANSS_TOW;

typedef struct NhuUE_Positioning_EventSpecificInfo_r7
{
 TknU8 choice;
 union {
  NhuThresholdPositionChange e7a;
  NhuThresholdSFN_SFN_Change e7b;
  NhuThresholdSFN_GPS_TOW_us e7c;
  NhuThresholdSFN_GANSS_TOW e7d;
 } val;
} NhuUE_Positioning_EventSpecificInfo_r7;


typedef TknU8 NhuUE_Positioning_EventParam_r7reportFirstFix;

typedef struct NhuUE_Positioning_EventParam_r7
{
 TknPres pres;
 NhuRprtngAmount reportingAmount;
 NhuUE_Positioning_EventParam_r7reportFirstFix reportFirstFix;
 NhuUE_Positioning_MeasurementInterval measurementInterval;
 NhuUE_Positioning_EventSpecificInfo_r7 eventSpecificInfo;
} NhuUE_Positioning_EventParam_r7;

typedef struct NhuUE_Positioning_EventParamLst_r7
{
 TknU16 noComp;
 NhuUE_Positioning_EventParam_r7 *member;
}NhuUE_Positioning_EventParamLst_r7;

typedef struct NhuUE_Positioning_ReportCriteria_r7
{
 TknU8 choice;
 union {
  NhuUE_Positioning_EventParamLst_r7 ue_positioning_RprtngCriteria;
  NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 } val;
} NhuUE_Positioning_ReportCriteria_r7;


typedef TknU32 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7sfn;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7modeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7modeSpecificInfofdd;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7modeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity cellAndChannelIdentity;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7modeSpecificInfotdd;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7modeSpecificInfofdd fdd;
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7modeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7modeSpecificInfo;


typedef TknU32 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueBasedroundTripTime;


typedef TknU32 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueBasedroundTripTimeExtn;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueBased
{
 TknPres pres;
 NhuReferenceCellPosition cellPosition;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueBasedroundTripTime roundTripTime;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueBasedroundTripTimeExtn roundTripTimeExtn;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueBased;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueAssisted
{
 TknPres pres;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueAssisted;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningMode
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueBased ueBased;
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueAssisted ueAssisted;
 } val;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningMode;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7sfn sfn;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7modeSpecificInfo modeSpecificInfo;
 NhuFrequencyInfo frequencyInfo;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningMode positioningMode;
 NhuUE_Positioning_IPDL_Params_r4 ue_positioning_IPDL_Paremeters;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7modeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7modeSpecificInfofdd;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7modeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity cellAndChannelIdentity;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7modeSpecificInfotdd;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7modeSpecificInfofdd fdd;
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7modeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7modeSpecificInfo;


typedef TknS32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedrelativeNorth;


typedef TknS32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedrelativeEast;


typedef TknS32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedrelativeAltitude;


typedef TknU32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedroundTripTime;


typedef TknU32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedroundTripTimeExtn;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBased
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedrelativeNorth relativeNorth;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedrelativeEast relativeEast;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedrelativeAltitude relativeAltitude;
 NhuFineSFN_SFN fineSFN_SFN;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedroundTripTime roundTripTime;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedroundTripTimeExtn roundTripTimeExtn;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBased;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueAssisted
{
 TknPres pres;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueAssisted;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningMode
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBased ueBased;
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueAssisted ueAssisted;
 } val;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningMode;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7modeSpecificInfo modeSpecificInfo;
 NhuFrequencyInfo frequencyInfo;
 NhuUE_Positioning_IPDL_Params_r4 ue_positioning_IPDL_Paremeters;
 NhuSFN_SFN_RelTimeDifference1 sfn_SFN_RelTimeDifference;
 NhuSFN_Offset_Validity sfn_Offset_Validity;
 NhuSFN_SFN_Drift sfn_SFN_Drift;
 NhuOTDOA_SearchWindowSize searchWindowSize;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningMode positioningMode;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellLst_r7
{
 TknU16 noComp;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7 *member;
}NhuUE_Positioning_OTDOA_NeighbourCellLst_r7;

typedef struct NhuUE_Positioning_OTDOA_AssistanceData_r7
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7 ue_positioning_OTDOA_ReferenceCellInfo;
 NhuUE_Positioning_OTDOA_NeighbourCellLst_r7 ue_positioning_OTDOA_NeighbourCellLst;
} NhuUE_Positioning_OTDOA_AssistanceData_r7;


typedef TknU32 NhuUE_Positioning_GPS_ReferenceTime_r7gps_Week;

typedef struct NhuUE_Positioning_GPS_ReferenceTime_r7
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTime_r7gps_Week gps_Week;
 NhuGPS_TOW_1msec gps_tow_1msec;
 NhuUTRAN_GPSReferenceTime utran_GPSReferenceTime;
 NhuUE_Positioning_GPS_ReferenceTimeUncertainty ue_Positioning_GPS_ReferenceTimeUncertainty;
 NhuSFN_TOW_Uncertainty sfn_tow_Uncertainty;
 NhuUTRAN_GPS_DriftRate utran_GPS_DriftRate;
 NhuGPS_TOW_AssistLst gps_TOW_AssistLst;
} NhuUE_Positioning_GPS_ReferenceTime_r7;

typedef struct NhuUE_Positioning_GPS_AcquisitionAssistance_r7
{
 TknPres pres;
 NhuGPS_TOW_1msec gps_ReferenceTime;
 NhuUTRAN_GPSReferenceTime utran_GPSReferenceTime;
 NhuUE_Positioning_GPS_ReferenceTimeUncertainty ue_Positioning_GPS_ReferenceTimeUncertainty;
 NhuAcquisitionSatInfoLst satelliteInfoLst;
} NhuUE_Positioning_GPS_AcquisitionAssistance_r7;

typedef struct NhuUE_Positioning_GPS_AssistanceData_r7
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTime_r7 ue_positioning_GPS_ReferenceTime;
 NhuReferenceLoc ue_positioning_GPS_ReferenceLoc;
 NhuUE_Positioning_GPS_DGPS_Corrections ue_positioning_GPS_DGPS_Corrections;
 NhuUE_Positioning_GPS_NavigationModel ue_positioning_GPS_NavigationModel;
 NhuUE_Positioning_GPS_IonosphericModel ue_positioning_GPS_IonosphericModel;
 NhuUE_Positioning_GPS_UTC_Model ue_positioning_GPS_UTC_Model;
 NhuUE_Positioning_GPS_Almanac ue_positioning_GPS_Almanac;
 NhuUE_Positioning_GPS_AcquisitionAssistance_r7 ue_positioning_GPS_AcquisitionAssistance;
 NhuBadSatLst ue_positioning_GPS_Real_timeIntegrity;
} NhuUE_Positioning_GPS_AssistanceData_r7;


typedef enum enumNhuTutran_Ganss_DriftRate
{
 NhuTutran_Ganss_DriftRateugdr0Enum,
 NhuTutran_Ganss_DriftRateugdr1Enum,
 NhuTutran_Ganss_DriftRateugdr2Enum,
 NhuTutran_Ganss_DriftRateugdr5Enum,
 NhuTutran_Ganss_DriftRateugdr10Enum,
 NhuTutran_Ganss_DriftRateugdr15Enum,
 NhuTutran_Ganss_DriftRateugdr25Enum,
 NhuTutran_Ganss_DriftRateugdr50Enum,
 NhuTutran_Ganss_DriftRateugdr_1Enum,
 NhuTutran_Ganss_DriftRateugdr_2Enum,
 NhuTutran_Ganss_DriftRateugdr_5Enum,
 NhuTutran_Ganss_DriftRateugdr_10Enum,
 NhuTutran_Ganss_DriftRateugdr_15Enum,
 NhuTutran_Ganss_DriftRateugdr_25Enum,
 NhuTutran_Ganss_DriftRateugdr_50Enum,
 NhuTutran_Ganss_DriftRatespareEnum
} EnumNhuTutran_Ganss_DriftRate;
typedef TknU32 NhuTutran_Ganss_DriftRate;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTimeganssDay;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTimeganssTod;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTimeganssTodUncertainty;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTimeganssTimeId;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimetimingOfCellFrames;

typedef struct NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimemodefdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primary_CPICH_Info;
} NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimemodefdd;

typedef struct NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimemodetdd
{
 TknPres pres;
 NhuCellParamsID cellParams;
} NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimemodetdd;

typedef struct NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimemode
{
 TknU8 choice;
 union {
  NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimemodefdd fdd;
  NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimemodetdd tdd;
 } val;
} NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimemode;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimereferenceSfn;

typedef struct NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTime
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimetimingOfCellFrames timingOfCellFrames;
 NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimemode mode;
 NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimereferenceSfn referenceSfn;
} NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTime;

typedef struct NhuUE_Positioning_GANSS_ReferenceTime
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTimeganssDay ganssDay;
 NhuUE_Positioning_GANSS_ReferenceTimeganssTod ganssTod;
 NhuUE_Positioning_GANSS_ReferenceTimeganssTodUncertainty ganssTodUncertainty;
 NhuUE_Positioning_GANSS_ReferenceTimeganssTimeId ganssTimeId;
 NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTime utran_ganssreferenceTime;
 NhuTutran_Ganss_DriftRate tutran_ganss_driftRate;
} NhuUE_Positioning_GANSS_ReferenceTime;

typedef struct NhuReferenceLocGANSS
{
 TknPres pres;
 NhuEllipsoidPointAltitudeEllipsoide ellipsoidPointAltitudeEllipsoide;
} NhuReferenceLocGANSS;


typedef TknStrBSXL NhuUE_Positioning_GANSS_IonosphericModelalpha_zero_ionos;

typedef TknStrBSXL NhuUE_Positioning_GANSS_IonosphericModelalpha_one_ionos;

typedef TknStrBSXL NhuUE_Positioning_GANSS_IonosphericModelalpha_two_ionos;
typedef struct NhuUE_Positioning_GANSS_IonosphericModel
{
 TknPres pres;
 NhuUE_Positioning_GANSS_IonosphericModelalpha_zero_ionos alpha_zero_ionos;
 NhuUE_Positioning_GANSS_IonosphericModelalpha_one_ionos alpha_one_ionos;
 NhuUE_Positioning_GANSS_IonosphericModelalpha_two_ionos alpha_two_ionos;
 NhuGANSS_Storm_Flag gANSS_storm_flags;
} NhuUE_Positioning_GANSS_IonosphericModel;

typedef struct NhuUE_Positioning_GANSS_AssistanceData
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTime ue_positioning_GANSS_ReferenceTime;
 NhuReferenceLocGANSS uePositioningGanssReferencePosition;
 NhuUE_Positioning_GANSS_IonosphericModel uePositioningGanssIonosphericModel;
 NhuGANSSGenericDataLst ganssGenericDataLst;
} NhuUE_Positioning_GANSS_AssistanceData;

typedef struct NhuUE_Positioning_Measurement_r7
{
 TknPres pres;
 NhuUE_Positioning_RprtngQuantity_r7 ue_positioning_RprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_Positioning_ReportCriteria_r7 reportCriteria;
 NhuUE_Positioning_OTDOA_AssistanceData_r7 ue_positioning_OTDOA_AssistanceData;
 NhuUE_Positioning_GPS_AssistanceData_r7 ue_positioning_GPS_AssistanceData;
 NhuUE_Positioning_GANSS_AssistanceData ue_positioning_GANSS_AssistanceData;
} NhuUE_Positioning_Measurement_r7;

typedef struct NhuMeasurementTyp_r7
{
 TknU8 choice;
 union {
  NhuIntraFrequencyMeasurement_r7 intraFrequencyMeasurement;
  NhuInterFrequencyMeasurement_r7 interFrequencyMeasurement;
  NhuInterRATMeasurement_r6 interRATMeasurement;
  NhuUE_Positioning_Measurement_r7 up_Measurement;
  NhuTrafficVolumeMeasurement trafficVolumeMeasurement;
  NhuQualityMeasurement qualityMeasurement;
  NhuUE_InternalMeasurement_r4 ue_InternalMeasurement;
 } val;
} NhuMeasurementTyp_r7;

typedef struct NhuMeasurementCmd_r7modify
{
 TknPres pres;
 NhuMeasurementTyp_r7 measurementTyp;
} NhuMeasurementCmd_r7modify;

typedef struct NhuMeasurementCmd_r7
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r7 setup;
  NhuMeasurementCmd_r7modify modify;
 } val;
} NhuMeasurementCmd_r7;


typedef TknU8 NhuUE_Positioning_RprtngQuantity_r8gps_TimingOfCellWanted;


typedef TknU8 NhuUE_Positioning_RprtngQuantity_r8additionalAssistanceDataReq;


typedef enum enumNhuUE_Positioning_RprtngQuantity_r8velocityRqsted
{
 NhuUE_Positioning_RprtngQuantity_r8velocityRqstedtrueEnum
} EnumNhuUE_Positioning_RprtngQuantity_r8velocityRqsted;
typedef TknU32 NhuUE_Positioning_RprtngQuantity_r8velocityRqsted;


typedef TknStrBSXL NhuUE_Positioning_RprtngQuantity_r8gANSSPositioningMethods;

typedef TknStrBSXL NhuUE_Positioning_RprtngQuantity_r8gANSSTimingOfCellWanted;

typedef TknStrBSXL NhuUE_Positioning_RprtngQuantity_r8gANSSCarrierPhaseMeasurementRqsted;

typedef TknStrBSXL NhuUE_Positioning_RprtngQuantity_r8gANSSMultiFreqMeasurementRqsted;
typedef struct NhuUE_Positioning_RprtngQuantity_r8
{
 TknPres pres;
 NhuUE_Positioning_MethodTyp methodTyp;
 NhuPositioningMethod positioningMethod;
 NhuUE_Positioning_Accuracy horizontalAccuracy;
 NhuUE_Positioning_Accuracy verticalAccuracy;
 NhuUE_Positioning_RprtngQuantity_r8gps_TimingOfCellWanted gps_TimingOfCellWanted;
 NhuUE_Positioning_RprtngQuantity_r8additionalAssistanceDataReq additionalAssistanceDataReq;
 NhuEnvironmentCharacterisation environmentCharacterisation;
 NhuUE_Positioning_RprtngQuantity_r8velocityRqsted velocityRqsted;
 NhuUE_Positioning_RprtngQuantity_r8gANSSPositioningMethods gANSSPositioningMethods;
 NhuUE_Positioning_RprtngQuantity_r8gANSSTimingOfCellWanted gANSSTimingOfCellWanted;
 NhuUE_Positioning_RprtngQuantity_r8gANSSCarrierPhaseMeasurementRqsted gANSSCarrierPhaseMeasurementRqsted;
 NhuUE_Positioning_RprtngQuantity_r8gANSSMultiFreqMeasurementRqsted gANSSMultiFreqMeasurementRqsted;
} NhuUE_Positioning_RprtngQuantity_r8;


typedef TknStrBSXL NhuUE_Positioning_GANSS_AddIonoModeldataID;
typedef struct NhuUE_Positioning_GANSS_AddIonoModel
{
 TknPres pres;
 NhuUE_Positioning_GANSS_AddIonoModeldataID dataID;
 NhuUE_Positioning_GPS_IonosphericModel alpha_beta_parameters;
} NhuUE_Positioning_GANSS_AddIonoModel;


typedef TknStrBSXL NhuUE_Positioning_GANSS_EarthOrientParateop;

typedef TknStrBSXL NhuUE_Positioning_GANSS_EarthOrientParapmX;

typedef TknStrBSXL NhuUE_Positioning_GANSS_EarthOrientParapmXdot;

typedef TknStrBSXL NhuUE_Positioning_GANSS_EarthOrientParapmY;

typedef TknStrBSXL NhuUE_Positioning_GANSS_EarthOrientParapmYdot;

typedef TknStrBSXL NhuUE_Positioning_GANSS_EarthOrientParadeltaUT1;

typedef TknStrBSXL NhuUE_Positioning_GANSS_EarthOrientParadeltaUT1dot;
typedef struct NhuUE_Positioning_GANSS_EarthOrientPara
{
 TknPres pres;
 NhuUE_Positioning_GANSS_EarthOrientParateop teop;
 NhuUE_Positioning_GANSS_EarthOrientParapmX pmX;
 NhuUE_Positioning_GANSS_EarthOrientParapmXdot pmXdot;
 NhuUE_Positioning_GANSS_EarthOrientParapmY pmY;
 NhuUE_Positioning_GANSS_EarthOrientParapmYdot pmYdot;
 NhuUE_Positioning_GANSS_EarthOrientParadeltaUT1 deltaUT1;
 NhuUE_Positioning_GANSS_EarthOrientParadeltaUT1dot deltaUT1dot;
} NhuUE_Positioning_GANSS_EarthOrientPara;

typedef struct NhuUE_Positioning_GANSS_AssistanceData_r8
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTime ue_positioning_GANSS_ReferenceTime;
 NhuReferenceLocGANSS uePositioningGanssReferencePosition;
 NhuUE_Positioning_GANSS_IonosphericModel uePositioningGanssIonosphericModel;
 NhuUE_Positioning_GANSS_AddIonoModel uePositioningGanssAddIonoModel;
 NhuUE_Positioning_GANSS_EarthOrientPara uePositioningGanssEarthOrientationPara;
 NhuGANSSGenericDataLst_r8 ganssGenericDataLst;
} NhuUE_Positioning_GANSS_AssistanceData_r8;

typedef struct NhuUE_Positioning_Measurement_r8
{
 TknPres pres;
 NhuUE_Positioning_RprtngQuantity_r8 ue_positioning_RprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_Positioning_ReportCriteria_r7 reportCriteria;
 NhuUE_Positioning_OTDOA_AssistanceData_r7 ue_positioning_OTDOA_AssistanceData;
 NhuUE_Positioning_GPS_AssistanceData_r7 ue_positioning_GPS_AssistanceData;
 NhuUE_Positioning_GANSS_AssistanceData_r8 ue_positioning_GANSS_AssistanceData;
} NhuUE_Positioning_Measurement_r8;

typedef struct NhuMeasurementTyp_r8
{
 TknU8 choice;
 union {
  NhuIntraFrequencyMeasurement_r7 intraFrequencyMeasurement;
  NhuInterFrequencyMeasurement_r8 interFrequencyMeasurement;
  NhuInterRATMeasurement_r8 interRATMeasurement;
  NhuUE_Positioning_Measurement_r8 up_Measurement;
  NhuTrafficVolumeMeasurement trafficVolumeMeasurement;
  NhuQualityMeasurement qualityMeasurement;
  NhuUE_InternalMeasurement_r4 ue_InternalMeasurement;
 } val;
} NhuMeasurementTyp_r8;

typedef struct NhuMeasurementCmd_r8modify
{
 TknPres pres;
 NhuMeasurementTyp_r8 measurementTyp;
} NhuMeasurementCmd_r8modify;

typedef struct NhuMeasurementCmd_r8
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r8 setup;
  NhuMeasurementCmd_r8modify modify;
 } val;
} NhuMeasurementCmd_r8;

typedef struct NhuUE_Positioning_GPS_DGPS_Corrections_r9
{
 TknPres pres;
 NhuGPS_TOW_1sec gps_TOW;
 NhuDiffCorrectionStatus statusHealth;
 NhuDGPS_CorrectionSatInfoLst_r9 dgps_CorrectionSatInfoLst;
} NhuUE_Positioning_GPS_DGPS_Corrections_r9;

typedef struct NhuUE_Positioning_GPS_AssistanceData_r9
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTime_r7 ue_positioning_GPS_ReferenceTime;
 NhuReferenceLoc ue_positioning_GPS_ReferenceLoc;
 NhuUE_Positioning_GPS_DGPS_Corrections_r9 ue_positioning_GPS_DGPS_Corrections;
 NhuUE_Positioning_GPS_NavigationModel ue_positioning_GPS_NavigationModel;
 NhuUE_Positioning_GPS_IonosphericModel ue_positioning_GPS_IonosphericModel;
 NhuUE_Positioning_GPS_UTC_Model ue_positioning_GPS_UTC_Model;
 NhuUE_Positioning_GPS_Almanac ue_positioning_GPS_Almanac;
 NhuUE_Positioning_GPS_AcquisitionAssistance_r7 ue_positioning_GPS_AcquisitionAssistance;
 NhuBadSatLst ue_positioning_GPS_Real_timeIntegrity;
} NhuUE_Positioning_GPS_AssistanceData_r9;

typedef struct NhuUE_Positioning_GANSS_AssistanceData_r9
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTime ue_positioning_GANSS_ReferenceTime;
 NhuReferenceLocGANSS uePositioningGanssReferencePosition;
 NhuUE_Positioning_GANSS_IonosphericModel uePositioningGanssIonosphericModel;
 NhuUE_Positioning_GANSS_AddIonoModel uePositioningGanssAddIonoModel;
 NhuUE_Positioning_GANSS_EarthOrientPara uePositioningGanssEarthOrientationPara;
 NhuGANSSGenericDataLst_r9 ganssGenericDataLst;
} NhuUE_Positioning_GANSS_AssistanceData_r9;

typedef struct NhuUE_Positioning_Measurement_r9
{
 TknPres pres;
 NhuUE_Positioning_RprtngQuantity_r8 ue_positioning_RprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_Positioning_ReportCriteria_r7 reportCriteria;
 NhuUE_Positioning_OTDOA_AssistanceData_r7 ue_positioning_OTDOA_AssistanceData;
 NhuUE_Positioning_GPS_AssistanceData_r9 ue_positioning_GPS_AssistanceData;
 NhuUE_Positioning_GANSS_AssistanceData_r9 ue_positioning_GANSS_AssistanceData;
} NhuUE_Positioning_Measurement_r9;

typedef struct NhuMeasurementTyp_r9
{
 TknU8 choice;
 union {
  NhuIntraFrequencyMeasurement_r9 intraFrequencyMeasurement;
  NhuInterFrequencyMeasurement_r9 interFrequencyMeasurement;
  NhuInterRATMeasurement_r9 interRATMeasurement;
  NhuUE_Positioning_Measurement_r9 up_Measurement;
  NhuTrafficVolumeMeasurement trafficVolumeMeasurement;
  NhuQualityMeasurement qualityMeasurement;
  NhuUE_InternalMeasurement_r4 ue_InternalMeasurement;
  NhuCSGProximityDetection csgProximityDetection;
 } val;
} NhuMeasurementTyp_r9;

typedef struct NhuMeasurementCmd_r9modify
{
 TknPres pres;
 NhuMeasurementTyp_r9 measurementTyp;
} NhuMeasurementCmd_r9modify;

typedef struct NhuMeasurementCmd_r9
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r9 setup;
  NhuMeasurementCmd_r9modify modify;
 } val;
} NhuMeasurementCmd_r9;


typedef TknU32 NhuUE_Positioning_GPS_ReferenceTime_r10gps_Week;


typedef TknU32 NhuUE_Positioning_GPS_ReferenceTime_r10gps_Week_Cycle_Number;

typedef struct NhuUE_Positioning_GPS_ReferenceTime_r10
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTime_r10gps_Week gps_Week;
 NhuUE_Positioning_GPS_ReferenceTime_r10gps_Week_Cycle_Number gps_Week_Cycle_Number;
 NhuGPS_TOW_1msec gps_tow_1msec;
 NhuUTRAN_GPSReferenceTime utran_GPSReferenceTime;
 NhuUE_Positioning_GPS_ReferenceTimeUncertainty ue_Positioning_GPS_ReferenceTimeUncertainty;
 NhuSFN_TOW_Uncertainty sfn_tow_Uncertainty;
 NhuUTRAN_GPS_DriftRate utran_GPS_DriftRate;
 NhuGPS_TOW_AssistLst gps_TOW_AssistLst;
} NhuUE_Positioning_GPS_ReferenceTime_r10;


typedef TknStrBSXL NhuUE_Positioning_GPS_Almanac_r10wn_a;

typedef TknU8 NhuUE_Positioning_GPS_Almanac_r10complete_Almanac_Provided;


typedef TknStrBSXL NhuUE_Positioning_GPS_Almanac_r10sv_GlobalHealth;
typedef struct NhuUE_Positioning_GPS_Almanac_r10
{
 TknPres pres;
 NhuUE_Positioning_GPS_Almanac_r10wn_a wn_a;
 NhuUE_Positioning_GPS_Almanac_r10complete_Almanac_Provided complete_Almanac_Provided;
 NhuAlmanacSatInfoLst almanacSatInfoLst;
 NhuUE_Positioning_GPS_Almanac_r10sv_GlobalHealth sv_GlobalHealth;
} NhuUE_Positioning_GPS_Almanac_r10;

typedef struct NhuUE_Positioning_GPS_AcquisitionAssistance_r10
{
 TknPres pres;
 NhuGPS_TOW_1msec gps_ReferenceTime;
 NhuUTRAN_GPSReferenceTime utran_GPSReferenceTime;
 NhuUE_Positioning_GPS_ReferenceTimeUncertainty ue_Positioning_GPS_ReferenceTimeUncertainty;
 NhuAcquisitionSatInfoLst_r10 satelliteInfoLst;
} NhuUE_Positioning_GPS_AcquisitionAssistance_r10;

typedef struct NhuUE_Positioning_GPS_AssistanceData_r10
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTime_r10 ue_positioning_GPS_ReferenceTime;
 NhuReferenceLoc ue_positioning_GPS_ReferenceLoc;
 NhuUE_Positioning_GPS_DGPS_Corrections_r9 ue_positioning_GPS_DGPS_Corrections;
 NhuUE_Positioning_GPS_NavigationModel ue_positioning_GPS_NavigationModel;
 NhuUE_Positioning_GPS_IonosphericModel ue_positioning_GPS_IonosphericModel;
 NhuUE_Positioning_GPS_UTC_Model ue_positioning_GPS_UTC_Model;
 NhuUE_Positioning_GPS_Almanac_r10 ue_positioning_GPS_Almanac;
 NhuUE_Positioning_GPS_AcquisitionAssistance_r10 ue_positioning_GPS_AcquisitionAssistance;
 NhuBadSatLst ue_positioning_GPS_Real_timeIntegrity;
} NhuUE_Positioning_GPS_AssistanceData_r10;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTime_r10ganssDay;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTime_r10ganss_Day_Cycle_Number;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTime_r10ganssTod;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTime_r10ganssTodUncertainty;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTime_r10ganssTimeId;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimetimingOfCellFrames;

typedef struct NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimemodefdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primary_CPICH_Info;
} NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimemodefdd;

typedef struct NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimemodetdd
{
 TknPres pres;
 NhuCellParamsID cellParams;
} NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimemodetdd;

typedef struct NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimemode
{
 TknU8 choice;
 union {
  NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimemodefdd fdd;
  NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimemodetdd tdd;
 } val;
} NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimemode;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimereferenceSfn;

typedef struct NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTime
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimetimingOfCellFrames timingOfCellFrames;
 NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimemode mode;
 NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimereferenceSfn referenceSfn;
} NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTime;

typedef struct NhuUE_Positioning_GANSS_ReferenceTime_r10
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTime_r10ganssDay ganssDay;
 NhuUE_Positioning_GANSS_ReferenceTime_r10ganss_Day_Cycle_Number ganss_Day_Cycle_Number;
 NhuUE_Positioning_GANSS_ReferenceTime_r10ganssTod ganssTod;
 NhuUE_Positioning_GANSS_ReferenceTime_r10ganssTodUncertainty ganssTodUncertainty;
 NhuUE_Positioning_GANSS_ReferenceTime_r10ganssTimeId ganssTimeId;
 NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTime utran_ganssreferenceTime;
 NhuTutran_Ganss_DriftRate tutran_ganss_driftRate;
} NhuUE_Positioning_GANSS_ReferenceTime_r10;

typedef struct NhuUE_Positioning_GANSS_AssistanceData_r10
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTime_r10 ue_positioning_GANSS_ReferenceTime;
 NhuReferenceLocGANSS uePositioningGanssReferencePosition;
 NhuUE_Positioning_GANSS_IonosphericModel uePositioningGanssIonosphericModel;
 NhuUE_Positioning_GANSS_AddIonoModel uePositioningGanssAddIonoModel;
 NhuUE_Positioning_GANSS_EarthOrientPara uePositioningGanssEarthOrientationPara;
 NhuGANSSGenericDataLst_r10 ganssGenericDataLst;
} NhuUE_Positioning_GANSS_AssistanceData_r10;

typedef struct NhuUE_Positioning_Measurement_r10
{
 TknPres pres;
 NhuUE_Positioning_RprtngQuantity_r8 ue_positioning_RprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_Positioning_ReportCriteria_r7 reportCriteria;
 NhuUE_Positioning_OTDOA_AssistanceData_r7 ue_positioning_OTDOA_AssistanceData;
 NhuUE_Positioning_GPS_AssistanceData_r10 ue_positioning_GPS_AssistanceData;
 NhuUE_Positioning_GANSS_AssistanceData_r10 ue_positioning_GANSS_AssistanceData;
} NhuUE_Positioning_Measurement_r10;

typedef struct NhuMeasurementTyp_r10
{
 TknU8 choice;
 union {
  NhuIntraFrequencyMeasurement_r10 intraFrequencyMeasurement;
  NhuInterFrequencyMeasurement_r10 interFrequencyMeasurement;
  NhuInterRATMeasurement_r9 interRATMeasurement;
  NhuUE_Positioning_Measurement_r10 up_Measurement;
  NhuTrafficVolumeMeasurement trafficVolumeMeasurement;
  NhuQualityMeasurement qualityMeasurement;
  NhuUE_InternalMeasurement_r4 ue_InternalMeasurement;
  NhuCSGProximityDetection csgProximityDetection;
 } val;
} NhuMeasurementTyp_r10;

typedef struct NhuMeasurementCmd_r10modify
{
 TknPres pres;
 NhuMeasurementTyp_r10 measurementTyp;
} NhuMeasurementCmd_r10modify;

typedef struct NhuMeasurementCmd_r10
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r10 setup;
  NhuMeasurementCmd_r10modify modify;
 } val;
} NhuMeasurementCmd_r10;

typedef struct NhuTrafficVolumeReportCriteriaSysInfo
{
 TknU8 choice;
 union {
  NhuTrafficVolumeRprtngCriteria trafficVolumeRprtngCriteria;
  NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 } val;
} NhuTrafficVolumeReportCriteriaSysInfo;

typedef struct NhuTrafficVolumeMeasSysInfo
{
 TknPres pres;
 NhuMeasurementIdentity trafficVolumeMeasurementID;
 NhuTrafficVolumeMeasurementObjectLst trafficVolumeMeasurementObjectLst;
 NhuTrafficVolumeMeasQuantity trafficVolumeMeasQuantity;
 NhuTrafficVolumeRprtngQuantity trafficVolumeRprtngQuantity;
 NhuTrafficVolumeRprtngCriteria dummy;
 NhuMeasurementValidity measurementValidity;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuTrafficVolumeReportCriteriaSysInfo reportCriteriaSysInf;
} NhuTrafficVolumeMeasSysInfo;

typedef struct NhuUE_InternalMeasurementSysInfo
{
 TknPres pres;
 NhuMeasurementIdentity ue_InternalMeasurementID;
 NhuUE_InternalMeasQuantity ue_InternalMeasQuantity;
} NhuUE_InternalMeasurementSysInfo;

typedef struct NhuMeasurementCntrlSysInfouse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP
{
 TknPres pres;
 NhuIntraFreqMeasurementSysInfo_RSCP intraFreqMeasurementSysInfo;
 NhuInterFreqMeasurementSysInfo_RSCP interFreqMeasurementSysInfo;
} NhuMeasurementCntrlSysInfouse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP;

typedef struct NhuMeasurementCntrlSysInfouse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0
{
 TknPres pres;
 NhuIntraFreqMeasurementSysInfo_ECN0 intraFreqMeasurementSysInfo;
 NhuInterFreqMeasurementSysInfo_ECN0 interFreqMeasurementSysInfo;
} NhuMeasurementCntrlSysInfouse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0;

typedef struct NhuMeasurementCntrlSysInfouse_of_HCShcs_not_usedcellSelectQualityMeasure
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfouse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP cpich_RSCP;
  NhuMeasurementCntrlSysInfouse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0 cpich_Ec_N0;
 } val;
} NhuMeasurementCntrlSysInfouse_of_HCShcs_not_usedcellSelectQualityMeasure;

typedef struct NhuMeasurementCntrlSysInfouse_of_HCShcs_not_used
{
 TknPres pres;
 NhuMeasurementCntrlSysInfouse_of_HCShcs_not_usedcellSelectQualityMeasure cellSelectQualityMeasure;
 NhuInterRATMeasurementSysInfo_B interRATMeasurementSysInfo;
} NhuMeasurementCntrlSysInfouse_of_HCShcs_not_used;

typedef struct NhuMeasurementCntrlSysInfouse_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP
{
 TknPres pres;
 NhuIntraFreqMeasurementSysInfo_HCS_RSCP intraFreqMeasurementSysInfo;
 NhuInterFreqMeasurementSysInfo_HCS_RSCP interFreqMeasurementSysInfo;
} NhuMeasurementCntrlSysInfouse_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP;

typedef struct NhuMeasurementCntrlSysInfouse_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0
{
 TknPres pres;
 NhuIntraFreqMeasurementSysInfo_HCS_ECN0 intraFreqMeasurementSysInfo;
 NhuInterFreqMeasurementSysInfo_HCS_ECN0 interFreqMeasurementSysInfo;
} NhuMeasurementCntrlSysInfouse_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0;

typedef struct NhuMeasurementCntrlSysInfouse_of_HCShcs_usedcellSelectQualityMeasure
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfouse_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP cpich_RSCP;
  NhuMeasurementCntrlSysInfouse_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0 cpich_Ec_N0;
 } val;
} NhuMeasurementCntrlSysInfouse_of_HCShcs_usedcellSelectQualityMeasure;

typedef struct NhuMeasurementCntrlSysInfouse_of_HCShcs_used
{
 TknPres pres;
 NhuMeasurementCntrlSysInfouse_of_HCShcs_usedcellSelectQualityMeasure cellSelectQualityMeasure;
 NhuInterRATMeasurementSysInfo interRATMeasurementSysInfo;
} NhuMeasurementCntrlSysInfouse_of_HCShcs_used;

typedef struct NhuMeasurementCntrlSysInfouse_of_HCS
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfouse_of_HCShcs_not_used hcs_not_used;
  NhuMeasurementCntrlSysInfouse_of_HCShcs_used hcs_used;
 } val;
} NhuMeasurementCntrlSysInfouse_of_HCS;

typedef struct NhuMeasurementCntrlSysInfo
{
 TknPres pres;
 NhuMeasurementCntrlSysInfouse_of_HCS use_of_HCS;
 NhuTrafficVolumeMeasSysInfo trafficVolumeMeasSysInfo;
 NhuUE_InternalMeasurementSysInfo dummy;
} NhuMeasurementCntrlSysInfo;

typedef struct NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP
{
 TknPres pres;
 NhuNewIntraFreqCellSI_Lst_RSCP newIntraFreqCellLst;
 NhuNewInterFreqCellSI_Lst_RSCP newInterFreqCellLst;
} NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP;

typedef struct NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0
{
 TknPres pres;
 NhuNewIntraFreqCellSI_Lst_ECN0 newIntraFreqCellLst;
 NhuNewInterFreqCellSI_Lst_ECN0 newInterFreqCellLst;
} NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0;

typedef struct NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_usedcellSelectQualityMeasure
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP cpich_RSCP;
  NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0 cpich_Ec_N0;
 } val;
} NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_usedcellSelectQualityMeasure;

typedef struct NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_used
{
 TknPres pres;
 NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_usedcellSelectQualityMeasure cellSelectQualityMeasure;
 NhuNewInterRATCellLst newInterRATCellLst;
} NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_used;

typedef struct NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP
{
 TknPres pres;
 NhuNewIntraFreqCellSI_Lst_HCS_RSCP newIntraFreqCellLst;
 NhuNewInterFreqCellSI_Lst_HCS_RSCP newInterFreqCellLst;
} NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP;

typedef struct NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0
{
 TknPres pres;
 NhuNewIntraFreqCellSI_Lst_HCS_ECN0 newIntraFreqCellLst;
 NhuNewInterFreqCellSI_Lst_HCS_ECN0 newInterFreqCellLst;
} NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0;

typedef struct NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_usedcellSelectQualityMeasure
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP cpich_RSCP;
  NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0 cpich_Ec_N0;
 } val;
} NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_usedcellSelectQualityMeasure;

typedef struct NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_used
{
 TknPres pres;
 NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_usedcellSelectQualityMeasure cellSelectQualityMeasure;
 NhuNewInterRATCellLst newInterRATCellLst;
} NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_used;

typedef struct NhuMeasurementCntrlSysInfoExtnuse_of_HCS
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_used hcs_not_used;
  NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_used hcs_used;
 } val;
} NhuMeasurementCntrlSysInfoExtnuse_of_HCS;

typedef struct NhuMeasurementCntrlSysInfoExtn
{
 TknPres pres;
 NhuMeasurementCntrlSysInfoExtnuse_of_HCS use_of_HCS;
} NhuMeasurementCntrlSysInfoExtn;

typedef struct NhuMeasurementCntrlSysInfoExtnAddon_r5newIntraFrequencyCellInfoLstAddon_r5
{
 TknU16 noComp;
 NhuCellSelectReselectInfo_v590ext *member;
}NhuMeasurementCntrlSysInfoExtnAddon_r5newIntraFrequencyCellInfoLstAddon_r5;

typedef struct NhuMeasurementCntrlSysInfoExtnAddon_r5newInterFrequencyCellInfoLstAddon_r5
{
 TknU16 noComp;
 NhuCellSelectReselectInfo_v590ext *member;
}NhuMeasurementCntrlSysInfoExtnAddon_r5newInterFrequencyCellInfoLstAddon_r5;

typedef struct NhuMeasurementCntrlSysInfoExtnAddon_r5newInterRATCellInfoLstAddon_r5
{
 TknU16 noComp;
 NhuCellSelectReselectInfo_v590ext *member;
}NhuMeasurementCntrlSysInfoExtnAddon_r5newInterRATCellInfoLstAddon_r5;

typedef struct NhuMeasurementCntrlSysInfoExtnAddon_r5
{
 TknPres pres;
 NhuMeasurementCntrlSysInfoExtnAddon_r5newIntraFrequencyCellInfoLstAddon_r5 newIntraFrequencyCellInfoLstAddon_r5;
 NhuMeasurementCntrlSysInfoExtnAddon_r5newInterFrequencyCellInfoLstAddon_r5 newInterFrequencyCellInfoLstAddon_r5;
 NhuMeasurementCntrlSysInfoExtnAddon_r5newInterRATCellInfoLstAddon_r5 newInterRATCellInfoLstAddon_r5;
} NhuMeasurementCntrlSysInfoExtnAddon_r5;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP
{
 TknPres pres;
 NhuNewIntraFreqCellSI_Lst_RSCP_LCR_r4 newIntraFreqCellLst;
 NhuNewInterFreqCellSI_Lst_RSCP_LCR_r4 newInterFreqCellLst;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0
{
 TknPres pres;
 NhuNewIntraFreqCellSI_Lst_ECN0_LCR_r4 newIntraFreqCellLst;
 NhuNewInterFreqCellSI_Lst_ECN0_LCR_r4 newInterFreqCellLst;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_usedcellSelectQualityMeasure
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP cpich_RSCP;
  NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0 cpich_Ec_N0;
 } val;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_usedcellSelectQualityMeasure;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_used
{
 TknPres pres;
 NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_usedcellSelectQualityMeasure cellSelectQualityMeasure;
 NhuNewInterRATCellLst newInterRATCellLst;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_used;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP
{
 TknPres pres;
 NhuNewIntraFreqCellSI_Lst_HCS_RSCP_LCR_r4 newIntraFreqCellLst;
 NhuNewInterFreqCellSI_Lst_HCS_RSCP_LCR_r4 newInterFreqCellLst;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0
{
 TknPres pres;
 NhuNewIntraFreqCellSI_Lst_HCS_ECN0_LCR_r4 newIntraFreqCellLst;
 NhuNewInterFreqCellSI_Lst_HCS_ECN0_LCR_r4 newInterFreqCellLst;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_usedcellSelectQualityMeasure
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP cpich_RSCP;
  NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0 cpich_Ec_N0;
 } val;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_usedcellSelectQualityMeasure;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_used
{
 TknPres pres;
 NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_usedcellSelectQualityMeasure cellSelectQualityMeasure;
 NhuNewInterRATCellLst newInterRATCellLst;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_used;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCS
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_used hcs_not_used;
  NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_used hcs_used;
 } val;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCS;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4
{
 TknPres pres;
 NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCS use_of_HCS;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP
{
 TknPres pres;
 NhuIntraFreqMeasurementSysInfo_RSCP_LCR_r4 intraFreqMeasurementSysInfo;
 NhuInterFreqMeasurementSysInfo_RSCP_LCR_r4 interFreqMeasurementSysInfo;
} NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0
{
 TknPres pres;
 NhuIntraFreqMeasurementSysInfo_ECN0_LCR_r4 intraFreqMeasurementSysInfo;
 NhuInterFreqMeasurementSysInfo_ECN0_LCR_r4 interFreqMeasurementSysInfo;
} NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_usedcellSelectQualityMeasure
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP cpich_RSCP;
  NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0 cpich_Ec_N0;
 } val;
} NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_usedcellSelectQualityMeasure;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_used
{
 TknPres pres;
 NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_usedcellSelectQualityMeasure cellSelectQualityMeasure;
} NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_used;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP
{
 TknPres pres;
 NhuIntraFreqMeasurementSysInfo_HCS_RSCP_LCR_r4 intraFreqMeasurementSysInfo;
 NhuInterFreqMeasurementSysInfo_HCS_RSCP_LCR_r4 interFreqMeasurementSysInfo;
} NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0
{
 TknPres pres;
 NhuIntraFreqMeasurementSysInfo_HCS_ECN0_LCR_r4 intraFreqMeasurementSysInfo;
 NhuInterFreqMeasurementSysInfo_HCS_ECN0_LCR_r4 interFreqMeasurementSysInfo;
} NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_usedcellSelectQualityMeasure
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP cpich_RSCP;
  NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0 cpich_Ec_N0;
 } val;
} NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_usedcellSelectQualityMeasure;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_used
{
 TknPres pres;
 NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_usedcellSelectQualityMeasure cellSelectQualityMeasure;
} NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_used;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCS
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_used hcs_not_used;
  NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_used hcs_used;
 } val;
} NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCS;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_ext
{
 TknPres pres;
 NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCS use_of_HCS;
} NhuMeasurementCntrlSysInfo_LCR_r4_ext;


typedef TknU32 NhuMeasurementIdentityExt;

typedef struct NhuNeighbour_TDD_r7
{
 TknPres pres;
 NhuUARFCN uarfcn;
} NhuNeighbour_TDD_r7;

typedef struct NhuNeighbourLst_TDD_r7
{
 TknU16 noComp;
 NhuNeighbour_TDD_r7 *member;
}NhuNeighbourLst_TDD_r7;


typedef TknU8 NhuNewInterFreqCell_v7b0extintraSecondaryFreqIndicator;

typedef struct NhuNewInterFreqCell_v7b0ext
{
 TknPres pres;
 NhuNewInterFreqCell_v7b0extintraSecondaryFreqIndicator intraSecondaryFreqIndicator;
} NhuNewInterFreqCell_v7b0ext;

typedef struct NhuNewInterFreqCell_LCR_v8a0ext
{
 TknPres pres;
 NhuCellInfo_LCR_r8_ext cellInfo_LCR_r8;
} NhuNewInterFreqCell_LCR_v8a0ext;

typedef struct NhuNewInterFreqCellLst_v7b0ext
{
 TknU16 noComp;
 NhuNewInterFreqCell_v7b0ext *member;
}NhuNewInterFreqCellLst_v7b0ext;

typedef struct NhuNewInterFreqCellLst_LCR_v8a0ext
{
 TknU16 noComp;
 NhuNewInterFreqCell_LCR_v8a0ext *member;
}NhuNewInterFreqCellLst_LCR_v8a0ext;

typedef struct NhuNewIntraFreqCell_LCR_v8a0ext
{
 TknPres pres;
 NhuCellInfo_LCR_r8_ext cellInfo_LCR_r8;
} NhuNewIntraFreqCell_LCR_v8a0ext;

typedef struct NhuNewIntraFreqCellLst_LCR_v8a0ext
{
 TknU16 noComp;
 NhuNewIntraFreqCell_LCR_v8a0ext *member;
}NhuNewIntraFreqCellLst_LCR_v8a0ext;

typedef struct NhuPLMNsOfIntraFreqCellsLstMember
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
} NhuPLMNsOfIntraFreqCellsLstMember;

typedef struct NhuPLMNsOfIntraFreqCellsLst
{
 TknU16 noComp;
 NhuPLMNsOfIntraFreqCellsLstMember *member;
}NhuPLMNsOfIntraFreqCellsLst;

typedef struct NhuPLMNsOfInterFreqCellsLstMember
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
} NhuPLMNsOfInterFreqCellsLstMember;

typedef struct NhuPLMNsOfInterFreqCellsLst
{
 TknU16 noComp;
 NhuPLMNsOfInterFreqCellsLstMember *member;
}NhuPLMNsOfInterFreqCellsLst;

typedef struct NhuPLMNsOfInterRATCellsLstMember
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
} NhuPLMNsOfInterRATCellsLstMember;

typedef struct NhuPLMNsOfInterRATCellsLst
{
 TknU16 noComp;
 NhuPLMNsOfInterRATCellsLstMember *member;
}NhuPLMNsOfInterRATCellsLst;

typedef struct NhuPLMNIdentitiesOfNeighbourCells
{
 TknPres pres;
 NhuPLMNsOfIntraFreqCellsLst plmnsOfIntraFreqCellsLst;
 NhuPLMNsOfInterFreqCellsLst plmnsOfInterFreqCellsLst;
 NhuPLMNsOfInterRATCellsLst plmnsOfInterRATCellsLst;
} NhuPLMNIdentitiesOfNeighbourCells;

typedef struct NhuMultiplePLMNsOfIntraFreqCellsLstMembermultiplePLMN_list
{
 TknU16 noComp;
 NhuPLMN_IdentityWithOptionalMCC_r6 *member;
}NhuMultiplePLMNsOfIntraFreqCellsLstMembermultiplePLMN_list;

typedef struct NhuMultiplePLMNsOfIntraFreqCellsLstMember
{
 TknPres pres;
 NhuMultiplePLMNsOfIntraFreqCellsLstMembermultiplePLMN_list multiplePLMN_list;
} NhuMultiplePLMNsOfIntraFreqCellsLstMember;

typedef struct NhuMultiplePLMNsOfIntraFreqCellsLst
{
 TknU16 noComp;
 NhuMultiplePLMNsOfIntraFreqCellsLstMember *member;
}NhuMultiplePLMNsOfIntraFreqCellsLst;

typedef struct NhuMultiplePLMNsOfInterFreqCellsLstMembermultiplePLMN_list
{
 TknU16 noComp;
 NhuPLMN_IdentityWithOptionalMCC_r6 *member;
}NhuMultiplePLMNsOfInterFreqCellsLstMembermultiplePLMN_list;

typedef struct NhuMultiplePLMNsOfInterFreqCellsLstMember
{
 TknPres pres;
 NhuMultiplePLMNsOfInterFreqCellsLstMembermultiplePLMN_list multiplePLMN_list;
} NhuMultiplePLMNsOfInterFreqCellsLstMember;

typedef struct NhuMultiplePLMNsOfInterFreqCellsLst
{
 TknU16 noComp;
 NhuMultiplePLMNsOfInterFreqCellsLstMember *member;
}NhuMultiplePLMNsOfInterFreqCellsLst;

typedef struct NhuPLMNIdentitiesOfNeighbourCells_v860ext
{
 TknPres pres;
 NhuMultiplePLMNsOfIntraFreqCellsLst multipleplmnsOfIntraFreqCellsLst;
 NhuMultiplePLMNsOfInterFreqCellsLst multipleplmnsOfInterFreqCellsLst;
} NhuPLMNIdentitiesOfNeighbourCells_v860ext;


typedef TknU32 NhuQ_QualMin_Offset;


typedef TknU32 NhuQ_RxlevMin_Offset;

typedef struct NhuTimeslotWithISCP
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
 NhuTimeslotISCP timeslotISCP;
} NhuTimeslotWithISCP;

typedef struct NhuTimeslotLstWithISCP
{
 TknU16 noComp;
 NhuTimeslotWithISCP *member;
}NhuTimeslotLstWithISCP;


typedef TknStrBSXL NhuUE_Positioning_CipherParamscipheringKeyFlag;

typedef TknU32 NhuUE_Positioning_CipherParamscipheringSerialNumber;

typedef struct NhuUE_Positioning_CipherParams
{
 TknPres pres;
 NhuUE_Positioning_CipherParamscipheringKeyFlag cipheringKeyFlag;
 NhuUE_Positioning_CipherParamscipheringSerialNumber cipheringSerialNumber;
} NhuUE_Positioning_CipherParams;

typedef struct NhuUE_Positioning_GANSS_AssistanceData_v860ext
{
 TknPres pres;
 NhuUE_Positioning_GANSS_AddIonoModel uePositioningGanssAddIonoModel;
 NhuUE_Positioning_GANSS_EarthOrientPara uePositioningGanssEarthOrientationPara;
 NhuGANSSGenericDataLst_v860ext ganssGenericDataLst;
} NhuUE_Positioning_GANSS_AssistanceData_v860ext;

typedef struct NhuUE_Positioning_GANSS_AssistanceData_v920ext
{
 TknPres pres;
 NhuGANSSGenericDataLst_v920ext ganssGenericDataLst;
} NhuUE_Positioning_GANSS_AssistanceData_v920ext;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTime_va40extganss_Day_Cycle_Number;

typedef struct NhuUE_Positioning_GANSS_ReferenceTime_va40ext
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTime_va40extganss_Day_Cycle_Number ganss_Day_Cycle_Number;
} NhuUE_Positioning_GANSS_ReferenceTime_va40ext;

typedef struct NhuUE_Positioning_GANSS_AssistanceData_va40ext
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTime_va40ext ue_positioning_GANSS_ReferenceTime;
 NhuGANSSGenericDataLst_va40ext ganssGenericDataLst;
} NhuUE_Positioning_GANSS_AssistanceData_va40ext;

typedef struct NhuUE_Positioning_GANSS_Data
{
 TknPres pres;
 NhuUE_Positioning_CipherParams ganssDataCipheringInfo;
 NhuGANSSDecipheringKeys ganssDecipheringKeys;
 NhuUE_Positioning_GANSS_ReferenceTime uePositioningGanssReferenceTime;
 NhuReferenceLocGANSS uePositioningGanssReferencePosition;
 NhuUE_Positioning_GANSS_IonosphericModel uePositioningGanssIonosphericModel;
 NhuGANSSGenericDataLst ganssGenericDataLst;
} NhuUE_Positioning_GANSS_Data;

typedef struct NhuUE_Positioning_GANSS_TimeModels
{
 TknU16 noComp;
 NhuUE_Positioning_GANSS_TimeModel *member;
}NhuUE_Positioning_GANSS_TimeModels;

typedef struct NhuUE_Positioning_GANSS_TimeModels_va40ext
{
 TknU16 noComp;
 NhuUE_Positioning_GANSS_TimeModel_va40ext *member;
}NhuUE_Positioning_GANSS_TimeModels_va40ext;

typedef struct NhuUE_Positioning_GPS_AcquisitionAssistance_v770ext
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTimeUncertainty ue_Positioning_GPS_ReferenceTimeUncertainty;
} NhuUE_Positioning_GPS_AcquisitionAssistance_v770ext;

typedef struct NhuUE_Positioning_GPS_AcquisitionAssistance_va40ext
{
 TknPres pres;
 NhuAcquisitionSatInfoLst_va40ext satelliteInfoLst;
} NhuUE_Positioning_GPS_AcquisitionAssistance_va40ext;


typedef TknU8 NhuUE_Positioning_GPS_Almanac_va40extcomplete_Almanac_Provided;

typedef struct NhuUE_Positioning_GPS_Almanac_va40ext
{
 TknPres pres;
 NhuUE_Positioning_GPS_Almanac_va40extcomplete_Almanac_Provided complete_Almanac_Provided;
} NhuUE_Positioning_GPS_Almanac_va40ext;

typedef struct NhuUE_Positioning_GPS_ReferenceTime_v770ext
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTimeUncertainty ue_Positioning_GPS_ReferenceTimeUncertainty;
} NhuUE_Positioning_GPS_ReferenceTime_v770ext;

typedef struct NhuUE_Positioning_GPS_AssistanceData_v770ext
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTime_v770ext ue_positioning_GPS_ReferenceTime;
 NhuUE_Positioning_GPS_AcquisitionAssistance_v770ext ue_positioning_GPS_AcquisitionAssistance;
} NhuUE_Positioning_GPS_AssistanceData_v770ext;

typedef struct NhuUE_Positioning_GPS_DGPS_Corrections_v920ext
{
 TknPres pres;
 NhuDGPS_CorrectionSatInfoLst_v920ext dgps_CorrectionSatInfoLst;
} NhuUE_Positioning_GPS_DGPS_Corrections_v920ext;

typedef struct NhuUE_Positioning_GPS_AssistanceData_v920ext
{
 TknPres pres;
 NhuUE_Positioning_GPS_DGPS_Corrections_v920ext ue_positioning_GPS_DGPS_Corrections;
} NhuUE_Positioning_GPS_AssistanceData_v920ext;


typedef TknU32 NhuUE_Positioning_GPS_ReferenceTime_va40extgps_Week_Cycle_Number;

typedef struct NhuUE_Positioning_GPS_ReferenceTime_va40ext
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTime_va40extgps_Week_Cycle_Number gps_Week_Cycle_Number;
} NhuUE_Positioning_GPS_ReferenceTime_va40ext;

typedef struct NhuUE_Positioning_GPS_AssistanceData_va40ext
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTime_va40ext ue_positioning_GPS_ReferenceTime;
 NhuUE_Positioning_GPS_Almanac_va40ext ue_positioning_GPS_Almanac;
 NhuUE_Positioning_GPS_AcquisitionAssistance_va40ext ue_positioning_GPS_AcquisitionAssistance;
} NhuUE_Positioning_GPS_AssistanceData_va40ext;


typedef TknU32 NhuUE_Positioning_IPDL_Params_TDD_r4_extip_slot;


typedef TknU32 NhuUE_Positioning_IPDL_Params_TDD_r4_extip_Start;

typedef struct NhuUE_Positioning_IPDL_Params_TDD_r4_ext
{
 TknPres pres;
 NhuIP_Spacing_TDD ip_Spacing;
 NhuUE_Positioning_IPDL_Params_TDD_r4_extip_slot ip_slot;
 NhuUE_Positioning_IPDL_Params_TDD_r4_extip_Start ip_Start;
 NhuIP_PCCPCH_r4 ip_PCCPCG;
 NhuBurstModeParams burstModeParams;
} NhuUE_Positioning_IPDL_Params_TDD_r4_ext;

typedef struct NhuUE_Positioning_RprtngQuantity_v390ext
{
 TknPres pres;
 NhuUE_Positioning_Accuracy vertical_Accuracy;
} NhuUE_Positioning_RprtngQuantity_v390ext;


typedef TknU32 NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBsfn;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBmodeSpecificInfofdd;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBmodeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity cellAndChannelIdentity;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBmodeSpecificInfotdd;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBmodeSpecificInfofdd fdd;
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBmodeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBmodeSpecificInfo;


typedef TknU32 NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBroundTripTime;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEB
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBsfn sfn;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBmodeSpecificInfo modeSpecificInfo;
 NhuFrequencyInfo frequencyInfo;
 NhuReferenceCellPosition cellPosition;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBroundTripTime roundTripTime;
 NhuUE_Positioning_IPDL_Params ue_positioning_IPDL_Paremeters;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEB;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBmodeSpecificInfofdd;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBmodeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity cellAndChannelIdentity;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBmodeSpecificInfotdd;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBmodeSpecificInfofdd fdd;
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBmodeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBmodeSpecificInfo;


typedef TknS32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBrelativeNorth;


typedef TknS32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBrelativeEast;


typedef TknS32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBrelativeAltitude;


typedef TknU32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBroundTripTime;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEB
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBmodeSpecificInfo modeSpecificInfo;
 NhuFrequencyInfo frequencyInfo;
 NhuUE_Positioning_IPDL_Params ue_positioning_IPDL_Paremeters;
 NhuSFN_SFN_RelTimeDifference1 sfn_SFN_RelTimeDifference;
 NhuSFN_SFN_Drift sfn_SFN_Drift;
 NhuOTDOA_SearchWindowSize searchWindowSize;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBrelativeNorth relativeNorth;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBrelativeEast relativeEast;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBrelativeAltitude relativeAltitude;
 NhuFineSFN_SFN fineSFN_SFN;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBroundTripTime roundTripTime;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEB;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellLst_UEB
{
 TknU16 noComp;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEB *member;
}NhuUE_Positioning_OTDOA_NeighbourCellLst_UEB;

typedef struct NhuUE_Positioning_OTDOA_AssistanceData_UEB
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEB ue_positioning_OTDOA_ReferenceCellInfo_UEB;
 NhuUE_Positioning_OTDOA_NeighbourCellLst_UEB ue_positioning_OTDOA_NeighbourCellLst_UEB;
} NhuUE_Positioning_OTDOA_AssistanceData_UEB;

typedef struct NhuUE_Positioning_Measurement_v390ext
{
 TknPres pres;
 NhuUE_Positioning_RprtngQuantity_v390ext ue_positioning_RprtngQuantity_v390ext;
 NhuMeasurementValidity measurementValidity;
 NhuUE_Positioning_OTDOA_AssistanceData_UEB ue_positioning_OTDOA_AssistanceData_UEB;
} NhuUE_Positioning_Measurement_v390ext;

typedef struct NhuUE_Positioning_IPDL_Params_TDDLst_r4_ext
{
 TknU16 noComp;
 NhuUE_Positioning_IPDL_Params_TDD_r4_ext *member;
}NhuUE_Positioning_IPDL_Params_TDDLst_r4_ext;

typedef struct NhuUE_Positioning_OTDOA_AssistanceData_r4ext
{
 TknPres pres;
 NhuUE_Positioning_IPDL_Params_TDD_r4_ext ue_Positioning_IPDL_Params_TDD_r4_ext;
 NhuUE_Positioning_IPDL_Params_TDDLst_r4_ext ue_Positioning_IPDL_Params_TDDLst_r4_ext;
} NhuUE_Positioning_OTDOA_AssistanceData_r4ext;


typedef TknU32 NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEB_extroundTripTimeExtn;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEB_ext
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEB_extroundTripTimeExtn roundTripTimeExtn;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEB_ext;


typedef TknU32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEB_extroundTripTimeExtn;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEB_ext
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEB_extroundTripTimeExtn roundTripTimeExtn;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEB_ext;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellLst_UEB_ext
{
 TknU16 noComp;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEB_ext *member;
}NhuUE_Positioning_OTDOA_NeighbourCellLst_UEB_ext;

typedef struct NhuUE_Positioning_OTDOA_AssistanceData_UEB_ext
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEB_ext ue_positioning_OTDOA_ReferenceCellInfo_UEB_ext;
 NhuUE_Positioning_OTDOA_NeighbourCellLst_UEB_ext ue_positioning_OTDOA_NeighbourCellLst_UEB_ext;
} NhuUE_Positioning_OTDOA_AssistanceData_UEB_ext;

typedef struct NhuUE_Positioning_OTDOA_MeasuredResultsTDD_ext
{
 TknPres pres;
 NhuNeighbourLst_TDD_r7 neighbourLst;
} NhuUE_Positioning_OTDOA_MeasuredResultsTDD_ext;


typedef TknU32 NhuUTRAN_FDD_Frequencypriority;


typedef TknU32 NhuUTRAN_FDD_FrequencythreshXhigh;


typedef TknU32 NhuUTRAN_FDD_FrequencythreshXlow;


typedef TknS32 NhuUTRAN_FDD_FrequencyqQualMinFDD;


typedef TknS32 NhuUTRAN_FDD_FrequencyqRxLevMinFDD;

typedef struct NhuUTRAN_FDD_Frequency
{
 TknPres pres;
 NhuUARFCN uarfcn;
 NhuUTRAN_FDD_Frequencypriority priority;
 NhuUTRAN_FDD_FrequencythreshXhigh threshXhigh;
 NhuUTRAN_FDD_FrequencythreshXlow threshXlow;
 NhuUTRAN_FDD_FrequencyqQualMinFDD qQualMinFDD;
 NhuUTRAN_FDD_FrequencyqRxLevMinFDD qRxLevMinFDD;
} NhuUTRAN_FDD_Frequency;

typedef struct NhuUTRAN_FDD_FrequencyLst
{
 TknU16 noComp;
 NhuUTRAN_FDD_Frequency *member;
}NhuUTRAN_FDD_FrequencyLst;


typedef TknU32 NhuUTRAN_TDD_Frequencypriority;


typedef TknU32 NhuUTRAN_TDD_FrequencythreshXhigh;


typedef TknU32 NhuUTRAN_TDD_FrequencythreshXlow;


typedef TknS32 NhuUTRAN_TDD_FrequencyqRxLevMinTDD;

typedef struct NhuUTRAN_TDD_Frequency
{
 TknPres pres;
 NhuUARFCN uarfcn;
 NhuUTRAN_TDD_Frequencypriority priority;
 NhuUTRAN_TDD_FrequencythreshXhigh threshXhigh;
 NhuUTRAN_TDD_FrequencythreshXlow threshXlow;
 NhuUTRAN_TDD_FrequencyqRxLevMinTDD qRxLevMinTDD;
} NhuUTRAN_TDD_Frequency;

typedef struct NhuUTRAN_TDD_FrequencyLst
{
 TknU16 noComp;
 NhuUTRAN_TDD_Frequency *member;
}NhuUTRAN_TDD_FrequencyLst;


typedef TknU32 NhuUTRA_PriorityInfoLstutra_ServingCellpriority;


typedef TknU32 NhuUTRA_PriorityInfoLstutra_ServingCells_PrioritySearch1;


typedef TknU32 NhuUTRA_PriorityInfoLstutra_ServingCells_PrioritySearch2;


typedef TknU32 NhuUTRA_PriorityInfoLstutra_ServingCellthreshServingLow;

typedef struct NhuUTRA_PriorityInfoLstutra_ServingCell
{
 TknPres pres;
 NhuUTRA_PriorityInfoLstutra_ServingCellpriority priority;
 NhuUTRA_PriorityInfoLstutra_ServingCells_PrioritySearch1 s_PrioritySearch1;
 NhuUTRA_PriorityInfoLstutra_ServingCells_PrioritySearch2 s_PrioritySearch2;
 NhuUTRA_PriorityInfoLstutra_ServingCellthreshServingLow threshServingLow;
} NhuUTRA_PriorityInfoLstutra_ServingCell;

typedef struct NhuUTRA_PriorityInfoLst
{
 TknPres pres;
 NhuUTRA_PriorityInfoLstutra_ServingCell utra_ServingCell;
 NhuUTRAN_FDD_FrequencyLst utran_FDD_FrequencyLst;
 NhuUTRAN_TDD_FrequencyLst utran_TDD_FrequencyLst;
} NhuUTRA_PriorityInfoLst;


typedef TknU32 NhuUTRA_PriorityInfoLst_v920extthreshServingLow2;

typedef struct NhuUTRA_PriorityInfoLst_v920ext
{
 TknPres pres;
 NhuUTRA_PriorityInfoLst_v920extthreshServingLow2 threshServingLow2;
} NhuUTRA_PriorityInfoLst_v920ext;


typedef TknU32 NhuMIB_ValueTag;


typedef TknU32 NhuBCCH_ModfnTime;

typedef struct NhuBCCH_ModfnInfo
{
 TknPres pres;
 NhuMIB_ValueTag mib_ValueTag;
 NhuBCCH_ModfnTime bcch_ModfnTime;
} NhuBCCH_ModfnInfo;


typedef TknU32 NhuCBS_DRX_Lvl1Infoctch_AllocnPeriod;


typedef TknU32 NhuCBS_DRX_Lvl1Infocbs_FrameOffset;

typedef struct NhuCBS_DRX_Lvl1Info
{
 TknPres pres;
 NhuCBS_DRX_Lvl1Infoctch_AllocnPeriod ctch_AllocnPeriod;
 NhuCBS_DRX_Lvl1Infocbs_FrameOffset cbs_FrameOffset;
} NhuCBS_DRX_Lvl1Info;


typedef enum enumNhuCBS_DRX_Lvl1Info_extension_r6
{
 NhuCBS_DRX_Lvl1Info_extension_r6p8Enum,
 NhuCBS_DRX_Lvl1Info_extension_r6p16Enum,
 NhuCBS_DRX_Lvl1Info_extension_r6p32Enum,
 NhuCBS_DRX_Lvl1Info_extension_r6p64Enum,
 NhuCBS_DRX_Lvl1Info_extension_r6p128Enum,
 NhuCBS_DRX_Lvl1Info_extension_r6p256Enum
} EnumNhuCBS_DRX_Lvl1Info_extension_r6;
typedef TknU32 NhuCBS_DRX_Lvl1Info_extension_r6;


typedef TknStrBSXL NhuCDMA2000_Msgmsg_Typ;

typedef TknStrBSXL NhuCDMA2000_Msgpayload;
typedef struct NhuCDMA2000_Msg
{
 TknPres pres;
 NhuCDMA2000_Msgmsg_Typ msg_Typ;
 NhuCDMA2000_Msgpayload payload;
} NhuCDMA2000_Msg;

typedef struct NhuCDMA2000_MsgLst
{
 TknU16 noComp;
 NhuCDMA2000_Msg *member;
}NhuCDMA2000_MsgLst;


typedef TknStrBSXL NhuFrequencyInfoCDMA2000band_Class;

typedef TknStrBSXL NhuFrequencyInfoCDMA2000cdma_Freq;
typedef struct NhuFrequencyInfoCDMA2000
{
 TknPres pres;
 NhuFrequencyInfoCDMA2000band_Class band_Class;
 NhuFrequencyInfoCDMA2000cdma_Freq cdma_Freq;
} NhuFrequencyInfoCDMA2000;

typedef struct NhuCDMA2000_UMTS_Frequency_Lst
{
 TknU16 noComp;
 NhuFrequencyInfoCDMA2000 *member;
}NhuCDMA2000_UMTS_Frequency_Lst;


typedef TknU32 NhuCellValueTag;


typedef enum enumNhuDataTransmFrequencydataTransmFreqGranularity
{
 NhuDataTransmFrequencydataTransmFreqGranularityms100Enum,
 NhuDataTransmFrequencydataTransmFreqGranularityms250Enum,
 NhuDataTransmFrequencydataTransmFreqGranularityms500Enum,
 NhuDataTransmFrequencydataTransmFreqGranularityms1000Enum,
 NhuDataTransmFrequencydataTransmFreqGranularityms2000Enum,
 NhuDataTransmFrequencydataTransmFreqGranularityms5000Enum,
 NhuDataTransmFrequencydataTransmFreqGranularityms10000Enum,
 NhuDataTransmFrequencydataTransmFreqGranularityms60000Enum
} EnumNhuDataTransmFrequencydataTransmFreqGranularity;
typedef TknU32 NhuDataTransmFrequencydataTransmFreqGranularity;


typedef TknU32 NhuDataTransmFrequencynumberOfDataTransmOcc;

typedef struct NhuDataTransmFrequency
{
 TknPres pres;
 NhuDataTransmFrequencydataTransmFreqGranularity dataTransmFreqGranularity;
 NhuDataTransmFrequencynumberOfDataTransmOcc numberOfDataTransmOcc;
} NhuDataTransmFrequency;


typedef TknU32 NhuDataVolumePerRBdataVolume;

typedef struct NhuDataVolumePerRB
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuDataVolumePerRBdataVolume dataVolume;
} NhuDataVolumePerRB;

typedef struct NhuDataVolumePerRB_Lst
{
 TknU16 noComp;
 NhuDataVolumePerRB *member;
}NhuDataVolumePerRB_Lst;


typedef TknU32 NhuDataVolumeHistorydataVolumeMontoringWindow;

typedef struct NhuDataVolumeHistory
{
 TknPres pres;
 NhuDataVolumeHistorydataVolumeMontoringWindow dataVolumeMontoringWindow;
 NhuDataTransmFrequency dataTransmFrequency;
 NhuDataVolumePerRB_Lst dataVolumePerRB;
} NhuDataVolumeHistory;

typedef struct NhuDeferredMeasurementCntrlReadingSupportmodeSpecificInfofdd
{
 TknPres pres;
 NhuIntraFreqMeasQuantity_FDD_sib3 intraFreqMeasQuantity_FDD;
} NhuDeferredMeasurementCntrlReadingSupportmodeSpecificInfofdd;

typedef struct NhuDeferredMeasurementCntrlReadingSupportmodeSpecificInfotdd
{
 TknPres pres;
 NhuIntraFreqMeasQuantity_TDD_sib3Lst intraFreqMeasQuantity_TDDLst;
} NhuDeferredMeasurementCntrlReadingSupportmodeSpecificInfotdd;

typedef struct NhuDeferredMeasurementCntrlReadingSupportmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDeferredMeasurementCntrlReadingSupportmodeSpecificInfofdd fdd;
  NhuDeferredMeasurementCntrlReadingSupportmodeSpecificInfotdd tdd;
 } val;
} NhuDeferredMeasurementCntrlReadingSupportmodeSpecificInfo;

typedef struct NhuDeferredMeasurementCntrlReadingSupport
{
 TknPres pres;
 NhuDeferredMeasurementCntrlReadingSupportmodeSpecificInfo modeSpecificInfo;
} NhuDeferredMeasurementCntrlReadingSupport;


typedef TknStrOSXL NhuETWS_InfowarningTyp;

typedef TknStrOSXL NhuETWS_InfomessageId;

typedef TknStrOSXL NhuETWS_InfoserialNumber;
typedef struct NhuETWS_Info
{
 TknPres pres;
 NhuETWS_InfowarningTyp warningTyp;
 NhuETWS_InfomessageId messageId;
 NhuETWS_InfoserialNumber serialNumber;
} NhuETWS_Info;


typedef TknStrOSXL NhuETWS_WarningSecInfo;

typedef TknU32 NhuExpirationTimeFactor;

typedef struct NhuFDD_UMTS_Frequency_Lst
{
 TknU16 noComp;
 NhuFrequencyInfoFDD *member;
}NhuFDD_UMTS_Frequency_Lst;


typedef TknStrOSXL NhuGERAN_SysInfoBlock;
typedef struct NhuGERAN_SysInfo
{
 TknU16 noComp;
 NhuGERAN_SysInfoBlock *member;
}NhuGERAN_SysInfo;

typedef struct NhuGSM_BA_Range
{
 TknPres pres;
 NhuUARFCN gsmLowRangeUARFCN;
 NhuUARFCN gsmUpRangeUARFCN;
} NhuGSM_BA_Range;

typedef struct NhuGSM_BA_Range_Lst
{
 TknU16 noComp;
 NhuGSM_BA_Range *member;
}NhuGSM_BA_Range_Lst;


typedef TknStrOSXL NhuGSM_Classmark2;

typedef TknStrOSXL NhuGSM_Classmark3;

typedef TknStrBSXL NhuGSM_MsgLstMember;
typedef struct NhuGSM_MsgLst
{
 TknU16 noComp;
 NhuGSM_MsgLstMember *member;
}NhuGSM_MsgLst;


typedef TknStrBSXL NhuGsmSecCap;

typedef TknStrOSXL NhuHNBName;
typedef struct NhuInterRAT_ChangeFailCause
{
 TknU8 choice;
 union {
  NhuProtErrInfo protocolErr;
 } val;
} NhuInterRAT_ChangeFailCause;


typedef TknStrBSXL NhuGERANIu_MsgLstMember;
typedef struct NhuGERANIu_MsgLst
{
 TknU16 noComp;
 NhuGERANIu_MsgLstMember *member;
}NhuGERANIu_MsgLst;


typedef TknStrBSXL NhuGERANIu_RadioAccessCap;
typedef struct NhuInterRAT_UE_RadioAccessCapgsm
{
 TknPres pres;
 NhuGSM_Classmark2 gsm_Classmark2;
 NhuGSM_Classmark3 gsm_Classmark3;
} NhuInterRAT_UE_RadioAccessCapgsm;

typedef struct NhuInterRAT_UE_RadioAccessCapcdma2000
{
 TknPres pres;
 NhuCDMA2000_MsgLst cdma2000_MsgLst;
} NhuInterRAT_UE_RadioAccessCapcdma2000;

typedef struct NhuInterRAT_UE_RadioAccessCap
{
 TknU8 choice;
 union {
  NhuInterRAT_UE_RadioAccessCapgsm gsm;
  NhuInterRAT_UE_RadioAccessCapcdma2000 cdma2000;
 } val;
} NhuInterRAT_UE_RadioAccessCap;

typedef struct NhuInterRAT_UE_RadioAccessCapLst
{
 TknU16 noComp;
 NhuInterRAT_UE_RadioAccessCap *member;
}NhuInterRAT_UE_RadioAccessCapLst;

typedef struct NhuInterRAT_UE_RadioAccessCap_v590ext
{
 TknPres pres;
 NhuGERANIu_RadioAccessCap geranIu_RadioAccessCap;
} NhuInterRAT_UE_RadioAccessCap_v590ext;

typedef struct NhuInterRAT_UE_SecCapgsm
{
 TknPres pres;
 NhuGsmSecCap gsmSecCap;
} NhuInterRAT_UE_SecCapgsm;

typedef struct NhuInterRAT_UE_SecCap
{
 TknU8 choice;
 union {
  NhuInterRAT_UE_SecCapgsm gsm;
 } val;
} NhuInterRAT_UE_SecCap;

typedef struct NhuInterRAT_UE_SecCapLst
{
 TknU16 noComp;
 NhuInterRAT_UE_SecCap *member;
}NhuInterRAT_UE_SecCapLst;

typedef struct NhuInterRAT_HO_FailCause
{
 TknU8 choice;
 union {
  NhuProtErrInfo protocolErr;
 } val;
} NhuInterRAT_HO_FailCause;


typedef TknU32 NhuPLMN_ValueTag;

typedef struct NhuPredefinedConfigIdentityAndValueTag
{
 TknPres pres;
 NhuPredefinedConfigIdentity predefinedConfigIdentity;
 NhuPredefinedConfigValueTag predefinedConfigValueTag;
} NhuPredefinedConfigIdentityAndValueTag;

typedef struct NhuTDD_UMTS_Frequency_Lst
{
 TknU16 noComp;
 NhuFrequencyInfoTDD *member;
}NhuTDD_UMTS_Frequency_Lst;

typedef struct NhuRplmn_Info
{
 TknPres pres;
 NhuGSM_BA_Range_Lst gsm_BA_Range_Lst;
 NhuFDD_UMTS_Frequency_Lst fdd_UMTS_Frequency_Lst;
 NhuTDD_UMTS_Frequency_Lst tdd_UMTS_Frequency_Lst;
 NhuCDMA2000_UMTS_Frequency_Lst cdma2000_UMTS_Frequency_Lst;
} NhuRplmn_Info;

typedef struct NhuRplmn_Info_r4
{
 TknPres pres;
 NhuGSM_BA_Range_Lst gsm_BA_Range_Lst;
 NhuFDD_UMTS_Frequency_Lst fdd_UMTS_Frequency_Lst;
 NhuTDD_UMTS_Frequency_Lst tdd384_UMTS_Frequency_Lst;
 NhuTDD_UMTS_Frequency_Lst tdd128_UMTS_Frequency_Lst;
 NhuCDMA2000_UMTS_Frequency_Lst cdma2000_UMTS_Frequency_Lst;
} NhuRplmn_Info_r4;


typedef TknU32 NhuSegCount;


typedef TknU32 NhuSegmentIdx;


typedef TknU32 NhuUE_HistoryInfoue_InactivityPeriod;

typedef struct NhuUE_HistoryInfo
{
 TknPres pres;
 NhuUE_HistoryInfoue_InactivityPeriod ue_InactivityPeriod;
 NhuHigh_MobilityDetected ueMobilityStateIndicator;
 NhuDataVolumeHistory ul_dataVolumeHistory;
 NhuDataVolumeHistory dl_dataVolumeHistory;
} NhuUE_HistoryInfo;


typedef NhuANSI_41_NAS_Parameter NhuANSI_41_GlobalServiceRedirectInfo;

typedef NhuANSI_41_NAS_Parameter NhuANSI_41_PrivNeighbourLstInfo;

typedef NhuANSI_41_NAS_Parameter NhuANSI_41_RAND_Info;

typedef NhuANSI_41_NAS_Parameter NhuANSI_41_UserZoneID_Info;

typedef enum enumNhuMBMS_AccessProbabilityFactor
{
 NhuMBMS_AccessProbabilityFactorapf0Enum,
 NhuMBMS_AccessProbabilityFactorapf32Enum,
 NhuMBMS_AccessProbabilityFactorapf64Enum,
 NhuMBMS_AccessProbabilityFactorapf96Enum,
 NhuMBMS_AccessProbabilityFactorapf128Enum,
 NhuMBMS_AccessProbabilityFactorapf160Enum,
 NhuMBMS_AccessProbabilityFactorapf192Enum,
 NhuMBMS_AccessProbabilityFactorapf224Enum,
 NhuMBMS_AccessProbabilityFactorapf256Enum,
 NhuMBMS_AccessProbabilityFactorapf288Enum,
 NhuMBMS_AccessProbabilityFactorapf320Enum,
 NhuMBMS_AccessProbabilityFactorapf352Enum,
 NhuMBMS_AccessProbabilityFactorapf384Enum,
 NhuMBMS_AccessProbabilityFactorapf416Enum,
 NhuMBMS_AccessProbabilityFactorapf448Enum,
 NhuMBMS_AccessProbabilityFactorapf480Enum,
 NhuMBMS_AccessProbabilityFactorapf512Enum,
 NhuMBMS_AccessProbabilityFactorapf544Enum,
 NhuMBMS_AccessProbabilityFactorapf576Enum,
 NhuMBMS_AccessProbabilityFactorapf608Enum,
 NhuMBMS_AccessProbabilityFactorapf640Enum,
 NhuMBMS_AccessProbabilityFactorapf672Enum,
 NhuMBMS_AccessProbabilityFactorapf704Enum,
 NhuMBMS_AccessProbabilityFactorapf736Enum,
 NhuMBMS_AccessProbabilityFactorapf768Enum,
 NhuMBMS_AccessProbabilityFactorapf800Enum,
 NhuMBMS_AccessProbabilityFactorapf832Enum,
 NhuMBMS_AccessProbabilityFactorapf864Enum,
 NhuMBMS_AccessProbabilityFactorapf896Enum,
 NhuMBMS_AccessProbabilityFactorapf928Enum,
 NhuMBMS_AccessProbabilityFactorapf960Enum,
 NhuMBMS_AccessProbabilityFactorapf1000Enum
} EnumNhuMBMS_AccessProbabilityFactor;
typedef TknU32 NhuMBMS_AccessProbabilityFactor;


typedef TknStrBSXL NhuMBMS_CellGroupIdentity_r6;

typedef TknU32 NhuMBMS_CmnCCTrChIdentity;


typedef TknU32 NhuMBMS_CmnPhyChIdentity;


typedef TknU32 NhuMBMS_CmnRBIdentity;

typedef struct NhuMBMS_CmnRBInfo_r6
{
 TknPres pres;
 NhuMBMS_CmnRBIdentity commonRBIdentity;
 NhuPDCP_Info_r4 pdcp_Info;
 NhuRLC_Info_MTCH_r6 rlc_Info;
} NhuMBMS_CmnRBInfo_r6;

typedef struct NhuMBMS_CmnRBInfoLst_r6
{
 TknU16 noComp;
 NhuMBMS_CmnRBInfo_r6 *member;
}NhuMBMS_CmnRBInfoLst_r6;


typedef TknU32 NhuMBMS_CmnTrChIdentity;


typedef TknU8 NhuMBMS_ConnectedModeCountingScopecountingForUraPCH;


typedef TknU8 NhuMBMS_ConnectedModeCountingScopecountingForCellPCH;


typedef TknU8 NhuMBMS_ConnectedModeCountingScopecountingForCellFACH;

typedef struct NhuMBMS_ConnectedModeCountingScope
{
 TknPres pres;
 NhuMBMS_ConnectedModeCountingScopecountingForUraPCH countingForUraPCH;
 NhuMBMS_ConnectedModeCountingScopecountingForCellPCH countingForCellPCH;
 NhuMBMS_ConnectedModeCountingScopecountingForCellFACH countingForCellFACH;
} NhuMBMS_ConnectedModeCountingScope;


typedef TknU32 NhuMBMS_SCCPCHIdentity;


typedef enum enumNhuMBMS_SoftComb_TimingOffset
{
 NhuMBMS_SoftComb_TimingOffsetms0Enum,
 NhuMBMS_SoftComb_TimingOffsetms10Enum,
 NhuMBMS_SoftComb_TimingOffsetms20Enum,
 NhuMBMS_SoftComb_TimingOffsetms40Enum
} EnumNhuMBMS_SoftComb_TimingOffset;
typedef TknU32 NhuMBMS_SoftComb_TimingOffset;


typedef TknU32 NhuMBMS_ShortTransmissionID;


typedef TknU32 NhuMBMS_LogChIdentity;

typedef struct NhuMBMS_PTM_RBInfo_C
{
 TknPres pres;
 NhuMBMS_CmnRBIdentity rbInfo;
 NhuMBMS_ShortTransmissionID shortTransmissionID;
 NhuMBMS_LogChIdentity logicalChIdentity;
} NhuMBMS_PTM_RBInfo_C;

typedef struct NhuMBMS_PTM_RBInfo_CLst
{
 TknU16 noComp;
 NhuMBMS_PTM_RBInfo_C *member;
}NhuMBMS_PTM_RBInfo_CLst;

typedef struct NhuMBMS_TrCHInfo_Curr
{
 TknPres pres;
 NhuMBMS_CmnTrChIdentity transpCh_Info;
 NhuMBMS_PTM_RBInfo_CLst rbInfo;
 NhuMBMS_MSCH_CfgInfo_r6 msch_CfgInfo;
} NhuMBMS_TrCHInfo_Curr;

typedef struct NhuMBMS_TrCHInfo_CurrLst
{
 TknU16 noComp;
 NhuMBMS_TrCHInfo_Curr *member;
}NhuMBMS_TrCHInfo_CurrLst;

typedef struct NhuMBMS_CurrentCell_SCCPCH_r6
{
 TknPres pres;
 NhuMBMS_SCCPCHIdentity sccpchIdentity;
 NhuMBMS_CmnPhyChIdentity secondaryCCPCH_Info;
 NhuMBMS_SoftComb_TimingOffset softComb_TimingOffset;
 NhuMBMS_CmnCCTrChIdentity transpCh_InfoCmnForAllTrCh;
 NhuMBMS_TrCHInfo_CurrLst transpCHInfo;
} NhuMBMS_CurrentCell_SCCPCH_r6;

typedef struct NhuMBMS_CurrentCell_SCCPCHLst_r6
{
 TknU16 noComp;
 NhuMBMS_CurrentCell_SCCPCH_r6 *member;
}NhuMBMS_CurrentCell_SCCPCHLst_r6;

typedef struct NhuMBMS_JoinedInfo_r6
{
 TknPres pres;
 NhuP_TMSI_GSM_MAP p_TMSI;
} NhuMBMS_JoinedInfo_r6;


typedef TknU32 NhuMBMS_L1CombiningSchedule_32cycleOffset;


typedef TknU32 NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLstMemberperiodStart;


typedef TknU32 NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLstMemberperiodDuration;

typedef struct NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLstMember
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLstMemberperiodStart periodStart;
 NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLstMemberperiodDuration periodDuration;
} NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLstMember;

typedef struct NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLst
{
 TknU16 noComp;
 NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLstMember *member;
}NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLst;

typedef struct NhuMBMS_L1CombiningSchedule_32
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_32cycleOffset cycleOffset;
 NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLst mtch_L1CombiningPeriodLst;
} NhuMBMS_L1CombiningSchedule_32;


typedef TknU32 NhuMBMS_L1CombiningSchedule_64cycleOffset;


typedef TknU32 NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLstMemberperiodStart;


typedef TknU32 NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLstMemberperiodDuration;

typedef struct NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLstMember
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLstMemberperiodStart periodStart;
 NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLstMemberperiodDuration periodDuration;
} NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLstMember;

typedef struct NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLst
{
 TknU16 noComp;
 NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLstMember *member;
}NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLst;

typedef struct NhuMBMS_L1CombiningSchedule_64
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_64cycleOffset cycleOffset;
 NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLst mtch_L1CombiningPeriodLst;
} NhuMBMS_L1CombiningSchedule_64;


typedef TknU32 NhuMBMS_L1CombiningSchedule_128cycleOffset;


typedef TknU32 NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLstMemberperiodStart;


typedef TknU32 NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLstMemberperiodDuration;

typedef struct NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLstMember
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLstMemberperiodStart periodStart;
 NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLstMemberperiodDuration periodDuration;
} NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLstMember;

typedef struct NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLst
{
 TknU16 noComp;
 NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLstMember *member;
}NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLst;

typedef struct NhuMBMS_L1CombiningSchedule_128
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_128cycleOffset cycleOffset;
 NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLst mtch_L1CombiningPeriodLst;
} NhuMBMS_L1CombiningSchedule_128;


typedef TknU32 NhuMBMS_L1CombiningSchedule_256cycleOffset;


typedef TknU32 NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLstMemberperiodStart;


typedef TknU32 NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLstMemberperiodDuration;

typedef struct NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLstMember
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLstMemberperiodStart periodStart;
 NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLstMemberperiodDuration periodDuration;
} NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLstMember;

typedef struct NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLst
{
 TknU16 noComp;
 NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLstMember *member;
}NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLst;

typedef struct NhuMBMS_L1CombiningSchedule_256
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_256cycleOffset cycleOffset;
 NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLst mtch_L1CombiningPeriodLst;
} NhuMBMS_L1CombiningSchedule_256;


typedef TknU32 NhuMBMS_L1CombiningSchedule_512cycleOffset;


typedef TknU32 NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLstMemberperiodStart;


typedef TknU32 NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLstMemberperiodDuration;

typedef struct NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLstMember
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLstMemberperiodStart periodStart;
 NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLstMemberperiodDuration periodDuration;
} NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLstMember;

typedef struct NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLst
{
 TknU16 noComp;
 NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLstMember *member;
}NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLst;

typedef struct NhuMBMS_L1CombiningSchedule_512
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_512cycleOffset cycleOffset;
 NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLst mtch_L1CombiningPeriodLst;
} NhuMBMS_L1CombiningSchedule_512;


typedef TknU32 NhuMBMS_L1CombiningSchedule_1024cycleOffset;


typedef TknU32 NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLstMemberperiodStart;


typedef TknU32 NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLstMemberperiodDuration;

typedef struct NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLstMember
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLstMemberperiodStart periodStart;
 NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLstMemberperiodDuration periodDuration;
} NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLstMember;

typedef struct NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLst
{
 TknU16 noComp;
 NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLstMember *member;
}NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLst;

typedef struct NhuMBMS_L1CombiningSchedule_1024
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_1024cycleOffset cycleOffset;
 NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLst mtch_L1CombiningPeriodLst;
} NhuMBMS_L1CombiningSchedule_1024;

typedef struct NhuMBMS_L1CombiningSchedule
{
 TknU8 choice;
 union {
  NhuMBMS_L1CombiningSchedule_32 cycleLength_32;
  NhuMBMS_L1CombiningSchedule_64 cycleLength_64;
  NhuMBMS_L1CombiningSchedule_128 cycleLength_128;
  NhuMBMS_L1CombiningSchedule_256 cycleLength_256;
  NhuMBMS_L1CombiningSchedule_512 cycleLength_512;
  NhuMBMS_L1CombiningSchedule_1024 cycleLength_1024;
 } val;
} NhuMBMS_L1CombiningSchedule;


typedef TknU32 NhuMBMS_L1CombiningTransmTimeDiff;


typedef TknU8 NhuMBMS_PTM_RBInfo_Nlayer1_CombiningStatus;

typedef struct NhuMBMS_PTM_RBInfo_N
{
 TknPres pres;
 NhuMBMS_ShortTransmissionID shortTransmissionID;
 NhuMBMS_LogChIdentity logicalChIdentity;
 NhuMBMS_PTM_RBInfo_Nlayer1_CombiningStatus layer1_CombiningStatus;
} NhuMBMS_PTM_RBInfo_N;

typedef struct NhuMBMS_PTM_RBInfo_NLst
{
 TknU16 noComp;
 NhuMBMS_PTM_RBInfo_N *member;
}NhuMBMS_PTM_RBInfo_NLst;


typedef TknU8 NhuMBMS_TrCHInfo_NeighbtranspCh_CombiningStatus;

typedef struct NhuMBMS_TrCHInfo_Neighb
{
 TknPres pres;
 NhuMBMS_CmnTrChIdentity transpCh_Info;
 NhuMBMS_TrCHInfo_NeighbtranspCh_CombiningStatus transpCh_CombiningStatus;
 NhuMBMS_PTM_RBInfo_NLst rbInfo;
 NhuMBMS_MSCH_CfgInfo_r6 msch_CfgInfo;
} NhuMBMS_TrCHInfo_Neighb;

typedef struct NhuMBMS_TrCHInfo_NeighbLst
{
 TknU16 noComp;
 NhuMBMS_TrCHInfo_Neighb *member;
}NhuMBMS_TrCHInfo_NeighbLst;

typedef struct NhuMBMS_L23CfgsameAsCurrent
{
 TknPres pres;
 NhuMBMS_SCCPCHIdentity currentCell_SCCPCH;
 NhuMBMS_MSCH_CfgInfo_r6 msch_CfgInfo;
} NhuMBMS_L23CfgsameAsCurrent;

typedef struct NhuMBMS_L23Cfgdifferent
{
 TknPres pres;
 NhuMBMS_CmnCCTrChIdentity transpCh_InfoCmnForAllTrCh;
 NhuMBMS_TrCHInfo_NeighbLst transpCHInfo;
} NhuMBMS_L23Cfgdifferent;

typedef struct NhuMBMS_L23Cfg
{
 TknU8 choice;
 union {
  NhuMBMS_L23CfgsameAsCurrent sameAsCurrent;
  NhuMBMS_L23Cfgdifferent different;
 } val;
} NhuMBMS_L23Cfg;


typedef TknS32 NhuMBMS_MICHPowerOffset;


typedef enum enumNhuMBMS_NI_CountPerFrame
{
 NhuMBMS_NI_CountPerFrameni18Enum,
 NhuMBMS_NI_CountPerFrameni36Enum,
 NhuMBMS_NI_CountPerFrameni72Enum,
 NhuMBMS_NI_CountPerFrameni144Enum
} EnumNhuMBMS_NI_CountPerFrame;
typedef TknU32 NhuMBMS_NI_CountPerFrame;


typedef enum enumNhuMBMS_MICHNotificationIndLength
{
 NhuMBMS_MICHNotificationIndLengthmn4Enum,
 NhuMBMS_MICHNotificationIndLengthmn8Enum,
 NhuMBMS_MICHNotificationIndLengthmn16Enum
} EnumNhuMBMS_MICHNotificationIndLength;
typedef TknU32 NhuMBMS_MICHNotificationIndLength;


typedef TknU8 NhuMBMS_MICHCfgInfo_r6modefddsttd_Indicator;

typedef struct NhuMBMS_MICHCfgInfo_r6modefdd
{
 TknPres pres;
 NhuChannelisationCode256 channelisationCode256;
 NhuMBMS_NI_CountPerFrame ni_CountPerFrame;
 NhuMBMS_MICHCfgInfo_r6modefddsttd_Indicator sttd_Indicator;
} NhuMBMS_MICHCfgInfo_r6modefdd;

typedef struct NhuMBMS_MICHCfgInfo_r6modetdd384
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
 NhuMidambleShiftAndBurstTyp midambleShiftAndBurstTyp;
 NhuDL_TS_ChannelisationCode channelisationCode;
 NhuRepPerLengthOffset_MICH repetitionPeriodLengthOffset;
 NhuMBMS_MICHNotificationIndLength mbmsNotificationIndLength;
} NhuMBMS_MICHCfgInfo_r6modetdd384;

typedef struct NhuMBMS_MICHCfgInfo_r6modetdd128channelisationCodeLst
{
 TknU16 noComp;
 NhuDL_TS_ChannelisationCode *member;
}NhuMBMS_MICHCfgInfo_r6modetdd128channelisationCodeLst;

typedef struct NhuMBMS_MICHCfgInfo_r6modetdd128
{
 TknPres pres;
 NhuTimeslotNumber_LCR_r4 timeslot;
 NhuMidambleShiftAndBurstTyp_LCR_r4 midambleShiftAndBurstTyp;
 NhuMBMS_MICHCfgInfo_r6modetdd128channelisationCodeLst channelisationCodeLst;
 NhuRepPerLengthOffset_MICH repetitionPeriodLengthOffset;
 NhuMBMS_MICHNotificationIndLength mbmsNotificationIndLength;
} NhuMBMS_MICHCfgInfo_r6modetdd128;

typedef struct NhuMBMS_MICHCfgInfo_r6mode
{
 TknU8 choice;
 union {
  NhuMBMS_MICHCfgInfo_r6modefdd fdd;
  NhuMBMS_MICHCfgInfo_r6modetdd384 tdd384;
  NhuMBMS_MICHCfgInfo_r6modetdd128 tdd128;
 } val;
} NhuMBMS_MICHCfgInfo_r6mode;

typedef struct NhuMBMS_MICHCfgInfo_r6
{
 TknPres pres;
 NhuMBMS_MICHPowerOffset michPowerOffset;
 NhuMBMS_MICHCfgInfo_r6mode mode;
} NhuMBMS_MICHCfgInfo_r6;

typedef struct NhuMBMS_MICHCfgInfo_v770extmodetdd384
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_r7 midambleShiftAndBurstTyp;
} NhuMBMS_MICHCfgInfo_v770extmodetdd384;

typedef struct NhuMBMS_MICHCfgInfo_v770extmodetdd768
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_VHCR midambleShiftAndBurstTyp;
} NhuMBMS_MICHCfgInfo_v770extmodetdd768;

typedef struct NhuMBMS_MICHCfgInfo_v770extmodetdd128
{
 TknPres pres;
 NhuTimeSlotLCR_ext mbsfnSpecialTimeSlot;
} NhuMBMS_MICHCfgInfo_v770extmodetdd128;

typedef struct NhuMBMS_MICHCfgInfo_v770extmode
{
 TknU8 choice;
 union {
  NhuMBMS_MICHCfgInfo_v770extmodetdd384 tdd384;
  NhuMBMS_MICHCfgInfo_v770extmodetdd768 tdd768;
  NhuMBMS_MICHCfgInfo_v770extmodetdd128 tdd128;
 } val;
} NhuMBMS_MICHCfgInfo_v770extmode;

typedef struct NhuMBMS_MICHCfgInfo_v770ext
{
 TknPres pres;
 NhuMBMS_MICHCfgInfo_v770extmode mode;
} NhuMBMS_MICHCfgInfo_v770ext;


typedef enum enumNhuMBMS_NI_CountPerFrame_IMB384
{
 NhuMBMS_NI_CountPerFrame_IMB384ni16Enum,
 NhuMBMS_NI_CountPerFrame_IMB384ni32Enum,
 NhuMBMS_NI_CountPerFrame_IMB384ni64Enum,
 NhuMBMS_NI_CountPerFrame_IMB384ni128Enum
} EnumNhuMBMS_NI_CountPerFrame_IMB384;
typedef TknU32 NhuMBMS_NI_CountPerFrame_IMB384;

typedef struct NhuMBMS_MICHCfgInfo_v890extmodeimb384
{
 TknPres pres;
 NhuChannelisationCode256 channelisationCode256;
 NhuMBMS_NI_CountPerFrame_IMB384 ni_CountPerFrame;
} NhuMBMS_MICHCfgInfo_v890extmodeimb384;

typedef struct NhuMBMS_MICHCfgInfo_v890extmode
{
 TknU8 choice;
 union {
  NhuMBMS_MICHCfgInfo_v890extmodeimb384 imb384;
 } val;
} NhuMBMS_MICHCfgInfo_v890extmode;

typedef struct NhuMBMS_MICHCfgInfo_v890ext
{
 TknPres pres;
 NhuMBMS_MICHCfgInfo_v890extmode mode;
} NhuMBMS_MICHCfgInfo_v890ext;


typedef TknStrOSXL NhuMBMS_ServiceIdentity_r6serviceIdentity;

typedef TknU32 NhuMBMS_ServiceIdentity_r6plmn_IdentityothersameAsMIB_MultiPLMN_Id;

typedef struct NhuMBMS_ServiceIdentity_r6plmn_Identityother
{
 TknU8 choice;
 union {
  NhuMBMS_ServiceIdentity_r6plmn_IdentityothersameAsMIB_MultiPLMN_Id sameAsMIB_MultiPLMN_Id;
  NhuPLMN_Identity explicitPLMN_Id;
 } val;
} NhuMBMS_ServiceIdentity_r6plmn_Identityother;

typedef struct NhuMBMS_ServiceIdentity_r6plmn_Identity
{
 TknU8 choice;
 union {
  NhuMBMS_ServiceIdentity_r6plmn_Identityother other;
 } val;
} NhuMBMS_ServiceIdentity_r6plmn_Identity;

typedef struct NhuMBMS_ServiceIdentity_r6
{
 TknPres pres;
 NhuMBMS_ServiceIdentity_r6serviceIdentity serviceIdentity;
 NhuMBMS_ServiceIdentity_r6plmn_Identity plmn_Identity;
} NhuMBMS_ServiceIdentity_r6;

typedef struct NhuMBMS_TransmissionIdentity
{
 TknPres pres;
 NhuMBMS_ServiceIdentity_r6 mbms_ServiceIdentity;
 NhuMBMS_SessionIdentity mbms_SessionIdentity;
} NhuMBMS_TransmissionIdentity;


typedef enum enumNhuMBMS_ReqdUEAction_Mod
{
 NhuMBMS_ReqdUEAction_ModnoneEnum,
 NhuMBMS_ReqdUEAction_ModacquireCountingInfoEnum,
 NhuMBMS_ReqdUEAction_ModacquireCountingInfoPTM_RBsUnmodifiedEnum,
 NhuMBMS_ReqdUEAction_ModacquirePTM_RBInfoEnum,
 NhuMBMS_ReqdUEAction_ModrequestPTPRBEnum,
 NhuMBMS_ReqdUEAction_ModreleasePTM_RBEnum
} EnumNhuMBMS_ReqdUEAction_Mod;
typedef TknU32 NhuMBMS_ReqdUEAction_Mod;


typedef TknU32 NhuMBMS_PFLIdx;


typedef NhuFrequencyInfo NhuMBMS_PFLInfo;
typedef struct NhuMBMS_ModifedService_r6mbms_PreferredFrequency
{
 TknU8 choice;
 union {
  NhuMBMS_PFLIdx mcch;
  NhuMBMS_PFLInfo dcch;
 } val;
} NhuMBMS_ModifedService_r6mbms_PreferredFrequency;


typedef enum enumNhuMBMS_ModifedService_r6dummy
{
 NhuMBMS_ModifedService_r6dummytrueEnum
} EnumNhuMBMS_ModifedService_r6dummy;
typedef TknU32 NhuMBMS_ModifedService_r6dummy;


typedef TknU8 NhuMBMS_ModifedService_r6continueMCCHReading;

typedef struct NhuMBMS_ModifedService_r6
{
 TknPres pres;
 NhuMBMS_TransmissionIdentity mbms_TransmissionIdentity;
 NhuMBMS_ReqdUEAction_Mod mbms_ReqdUEAction;
 NhuMBMS_ModifedService_r6mbms_PreferredFrequency mbms_PreferredFrequency;
 NhuMBMS_ModifedService_r6dummy dummy;
 NhuMBMS_ModifedService_r6continueMCCHReading continueMCCHReading;
} NhuMBMS_ModifedService_r6;

typedef struct NhuMBMS_ModifedServiceLst_r6
{
 TknU16 noComp;
 NhuMBMS_ModifedService_r6 *member;
}NhuMBMS_ModifedServiceLst_r6;


typedef TknU32 NhuMBSFN_ClusterFrequency_r7;

typedef struct NhuMBMS_MdfdService_v770ext
{
 TknPres pres;
 NhuMBSFN_ClusterFrequency_r7 mbsfnClusterFrequency;
} NhuMBMS_MdfdService_v770ext;


typedef enum enumNhuMBMS_PTM_RBRlsCause_LCR_r7
{
 NhuMBMS_PTM_RBRlsCause_LCR_r7normalRlsEnum,
 NhuMBMS_PTM_RBRlsCause_LCR_r7outOfMBMSServiceCoverageInRANEnum,
 NhuMBMS_PTM_RBRlsCause_LCR_r7networkAbnormalRlsEnum,
 NhuMBMS_PTM_RBRlsCause_LCR_r7spare5Enum,
 NhuMBMS_PTM_RBRlsCause_LCR_r7spare4Enum,
 NhuMBMS_PTM_RBRlsCause_LCR_r7spare3Enum,
 NhuMBMS_PTM_RBRlsCause_LCR_r7spare2Enum,
 NhuMBMS_PTM_RBRlsCause_LCR_r7spare1Enum
} EnumNhuMBMS_PTM_RBRlsCause_LCR_r7;
typedef TknU32 NhuMBMS_PTM_RBRlsCause_LCR_r7;

typedef struct NhuMBMS_MdfdService_LCR_v7c0ext
{
 TknPres pres;
 NhuMBMS_PTM_RBRlsCause_LCR_r7 rbRlsCause;
} NhuMBMS_MdfdService_LCR_v7c0ext;

typedef struct NhuMBMS_MdfdServiceLst_v770ext
{
 TknU16 noComp;
 NhuMBMS_MdfdService_v770ext *member;
}NhuMBMS_MdfdServiceLst_v770ext;

typedef struct NhuMBMS_MdfdServiceLst_LCR_v7c0ext
{
 TknU16 noComp;
 NhuMBMS_MdfdService_LCR_v7c0ext *member;
}NhuMBMS_MdfdServiceLst_LCR_v7c0ext;


typedef enum enumNhuMBMS_SCCPCHPwrOffsetDiff
{
 NhuMBMS_SCCPCHPwrOffsetDiffmcpo_minus6Enum,
 NhuMBMS_SCCPCHPwrOffsetDiffmcpo_minus3Enum,
 NhuMBMS_SCCPCHPwrOffsetDiffmcpo_plus3Enum,
 NhuMBMS_SCCPCHPwrOffsetDiffmcpo_plus6Enum
} EnumNhuMBMS_SCCPCHPwrOffsetDiff;
typedef TknU32 NhuMBMS_SCCPCHPwrOffsetDiff;

typedef struct NhuMBMS_NeighbouringCellSCCPCH_r6layer1Combiningfdd
{
 TknPres pres;
 NhuMBMS_SoftComb_TimingOffset softComb_TimingOffset;
 NhuMBMS_L1CombiningTransmTimeDiff mbms_L1CombiningTransmTimeDiff;
 NhuMBMS_L1CombiningSchedule mbms_L1CombiningSchedule;
} NhuMBMS_NeighbouringCellSCCPCH_r6layer1Combiningfdd;

typedef struct NhuMBMS_NeighbouringCellSCCPCH_r6layer1Combining
{
 TknU8 choice;
 union {
  NhuMBMS_NeighbouringCellSCCPCH_r6layer1Combiningfdd fdd;
 } val;
} NhuMBMS_NeighbouringCellSCCPCH_r6layer1Combining;

typedef struct NhuMBMS_NeighbouringCellSCCPCH_r6
{
 TknPres pres;
 NhuMBMS_CmnPhyChIdentity secondaryCCPCH_Info;
 NhuMBMS_SCCPCHPwrOffsetDiff secondaryCCPCHPwrOffsetDiff;
 NhuMBMS_NeighbouringCellSCCPCH_r6layer1Combining layer1Combining;
 NhuMBMS_L23Cfg mbms_L23Cfg;
} NhuMBMS_NeighbouringCellSCCPCH_r6;

typedef struct NhuMBMS_NeighbouringCellSCCPCH_v770extlayer1Combiningfdd
{
 TknPres pres;
 NhuMBMS_SoftComb_TimingOffset softComb_TimingOffset;
 NhuMBMS_L1CombiningTransmTimeDiff mbms_L1CombiningTransmTimeDiff;
 NhuMBMS_L1CombiningSchedule mbms_L1CombiningSchedule;
} NhuMBMS_NeighbouringCellSCCPCH_v770extlayer1Combiningfdd;

typedef struct NhuMBMS_NeighbouringCellSCCPCH_v770extlayer1Combining
{
 TknU8 choice;
 union {
  NhuMBMS_NeighbouringCellSCCPCH_v770extlayer1Combiningfdd fdd;
 } val;
} NhuMBMS_NeighbouringCellSCCPCH_v770extlayer1Combining;

typedef struct NhuMBMS_NeighbouringCellSCCPCH_v770ext
{
 TknPres pres;
 NhuMBMS_CmnPhyChIdentity secondaryCCPCH_Info;
 NhuSecondaryCCPCHInfoDiff_MBMS secondaryCCPCH_InfoDiff;
 NhuMBMS_SCCPCHPwrOffsetDiff secondaryCCPCHPwrOffsetDiff;
 NhuMBMS_NeighbouringCellSCCPCH_v770extlayer1Combining layer1Combining;
 NhuMBMS_L23Cfg mbms_L23Cfg;
} NhuMBMS_NeighbouringCellSCCPCH_v770ext;

typedef struct NhuMBMS_NeighbouringCellSCCPCHLst_r6
{
 TknU16 noComp;
 NhuMBMS_NeighbouringCellSCCPCH_r6 *member;
}NhuMBMS_NeighbouringCellSCCPCHLst_r6;

typedef struct NhuMBMS_NeighbouringCellSCCPCHLst_v770ext
{
 TknU16 noComp;
 NhuMBMS_NeighbouringCellSCCPCH_v770ext *member;
}NhuMBMS_NeighbouringCellSCCPCHLst_v770ext;


typedef TknStrBSXL NhuMBMS_NwStandardTimeInfo_LCR_v890extnetworkStandardTime;

typedef TknU32 NhuMBMS_NwStandardTimeInfo_LCR_v890extcorrelativeSFN;

typedef struct NhuMBMS_NwStandardTimeInfo_LCR_v890ext
{
 TknPres pres;
 NhuMBMS_NwStandardTimeInfo_LCR_v890extnetworkStandardTime networkStandardTime;
 NhuMBMS_NwStandardTimeInfo_LCR_v890extcorrelativeSFN correlativeSFN;
} NhuMBMS_NwStandardTimeInfo_LCR_v890ext;


typedef TknU32 NhuMBMS_NumberOfNeighbourCells_r6;

typedef struct NhuMBMS_PhyChInfo_IMB384
{
 TknPres pres;
 NhuMBMS_CmnPhyChIdentity mbms_CmnPhyChIdentity;
 NhuSecondaryCCPCHFrameTyp2Info secondaryCCPCHInfo_MBMS;
} NhuMBMS_PhyChInfo_IMB384;

typedef struct NhuMBMS_PhyChInfoLst_IMB384
{
 TknU16 noComp;
 NhuMBMS_PhyChInfo_IMB384 *member;
}NhuMBMS_PhyChInfoLst_IMB384;

typedef struct NhuMBMS_PhyChInfo_r6
{
 TknPres pres;
 NhuMBMS_CmnPhyChIdentity mbms_CmnPhyChIdentity;
 NhuSecondaryCCPCHInfo_MBMS_r6 secondaryCCPCHInfo_MBMS;
} NhuMBMS_PhyChInfo_r6;

typedef struct NhuMBMS_PhyChInfo_r7
{
 TknPres pres;
 NhuMBMS_CmnPhyChIdentity mbms_CmnPhyChIdentity;
 NhuSecondaryCCPCHInfo_MBMS_r7 secondaryCCPCHInfo_MBMS;
} NhuMBMS_PhyChInfo_r7;

typedef struct NhuMBMS_PhyChInfoLst_r6
{
 TknU16 noComp;
 NhuMBMS_PhyChInfo_r6 *member;
}NhuMBMS_PhyChInfoLst_r6;

typedef struct NhuMBMS_PhyChInfoLst_r7
{
 TknU16 noComp;
 NhuMBMS_PhyChInfo_r7 *member;
}NhuMBMS_PhyChInfoLst_r7;


typedef enum enumNhuMBMS_PL_ServiceRestrictInfo_r6
{
 NhuMBMS_PL_ServiceRestrictInfo_r6trueEnum
} EnumNhuMBMS_PL_ServiceRestrictInfo_r6;
typedef TknU32 NhuMBMS_PL_ServiceRestrictInfo_r6;


typedef enum enumNhuMBMS_Qoffset
{
 NhuMBMS_Qoffsetq4Enum,
 NhuMBMS_Qoffsetq8Enum,
 NhuMBMS_Qoffsetq12Enum,
 NhuMBMS_Qoffsetq16Enum,
 NhuMBMS_Qoffsetq20Enum,
 NhuMBMS_Qoffsetq30Enum,
 NhuMBMS_Qoffsetq40Enum,
 NhuMBMS_QoffsetqInfinityEnum
} EnumNhuMBMS_Qoffset;
typedef TknU32 NhuMBMS_Qoffset;


typedef TknU32 NhuMBMS_PreferredFrequencyInfo_r6mbmsPreferredFrequency;


typedef TknU32 NhuMBMS_PreferredFrequencyInfo_r6layerConvergenceInfombms_HCSoffset;

typedef struct NhuMBMS_PreferredFrequencyInfo_r6layerConvergenceInfo
{
 TknU8 choice;
 union {
  NhuMBMS_Qoffset mbms_Qoffset;
  NhuMBMS_PreferredFrequencyInfo_r6layerConvergenceInfombms_HCSoffset mbms_HCSoffset;
 } val;
} NhuMBMS_PreferredFrequencyInfo_r6layerConvergenceInfo;

typedef struct NhuMBMS_PreferredFrequencyInfo_r6
{
 TknPres pres;
 NhuMBMS_PreferredFrequencyInfo_r6mbmsPreferredFrequency mbmsPreferredFrequency;
 NhuMBMS_PreferredFrequencyInfo_r6layerConvergenceInfo layerConvergenceInfo;
 NhuMBMS_PL_ServiceRestrictInfo_r6 mbms_PL_ServiceRestrictInfo;
} NhuMBMS_PreferredFrequencyInfo_r6;

typedef struct NhuMBMS_PreferredFrequencyLst_r6
{
 TknU16 noComp;
 NhuMBMS_PreferredFrequencyInfo_r6 *member;
}NhuMBMS_PreferredFrequencyLst_r6;


typedef TknU32 NhuMBMS_PTMActvnTime_r6;


typedef enum enumNhuMBMS_ReqdUEAction_UMod
{
 NhuMBMS_ReqdUEAction_UModnoneEnum,
 NhuMBMS_ReqdUEAction_UModacquirePTM_RBInfoEnum,
 NhuMBMS_ReqdUEAction_UModrequestPTPRBEnum
} EnumNhuMBMS_ReqdUEAction_UMod;
typedef TknU32 NhuMBMS_ReqdUEAction_UMod;

typedef struct NhuMBMS_SelectedServicesLstFull
{
 TknU16 noComp;
 NhuMBMS_ServiceIdentity_r6 *member;
}NhuMBMS_SelectedServicesLstFull;

typedef struct NhuMBMS_SelectedServiceInfostatus
{
 TknU8 choice;
 union {
  NhuMBMS_SelectedServicesLstFull some;
 } val;
} NhuMBMS_SelectedServiceInfostatus;

typedef struct NhuMBMS_SelectedServiceInfo
{
 TknPres pres;
 NhuMBMS_SelectedServiceInfostatus status;
} NhuMBMS_SelectedServiceInfo;

typedef struct NhuMBMS_SelectedServicesLstShort
{
 TknU16 noComp;
 NhuMBMS_ShortTransmissionID *member;
}NhuMBMS_SelectedServicesLstShort;


typedef TknU32 NhuMBMS_SelectedServicesShortmodificationPeriodIdentity;

typedef struct NhuMBMS_SelectedServicesShort
{
 TknPres pres;
 NhuMBMS_SelectedServicesLstShort mbms_SelectedServicesLst;
 NhuMBMS_SelectedServicesShortmodificationPeriodIdentity modificationPeriodIdentity;
} NhuMBMS_SelectedServicesShort;

typedef struct NhuMBMS_ServiceAccessInfo_r6
{
 TknPres pres;
 NhuMBMS_ShortTransmissionID shortTransmissionID;
 NhuMBMS_AccessProbabilityFactor accessprobabilityFactor_Idle;
 NhuMBMS_AccessProbabilityFactor accessprobabilityFactor_Connected;
 NhuMBMS_ConnectedModeCountingScope mbms_ConnectedModeCountingScope;
} NhuMBMS_ServiceAccessInfo_r6;

typedef struct NhuMBMS_ServiceAccessInfoLst_r6
{
 TknU16 noComp;
 NhuMBMS_ServiceAccessInfo_r6 *member;
}NhuMBMS_ServiceAccessInfoLst_r6;


typedef TknU32 NhuMBMS_ServiceTransmInfostart;


typedef TknU32 NhuMBMS_ServiceTransmInfoduration;

typedef struct NhuMBMS_ServiceTransmInfo
{
 TknPres pres;
 NhuMBMS_ServiceTransmInfostart start;
 NhuMBMS_ServiceTransmInfoduration duration;
} NhuMBMS_ServiceTransmInfo;

typedef struct NhuMBMS_ServiceTransmInfoLst
{
 TknU16 noComp;
 NhuMBMS_ServiceTransmInfo *member;
}NhuMBMS_ServiceTransmInfoLst;


typedef TknU32 NhuMBMS_ServiceSchedulingInfo_r6nextSchedulingperiod;

typedef struct NhuMBMS_ServiceSchedulingInfo_r6
{
 TknPres pres;
 NhuMBMS_TransmissionIdentity mbms_TransmissionIdentity;
 NhuMBMS_ServiceTransmInfoLst mbms_ServiceTransmInfoLst;
 NhuMBMS_ServiceSchedulingInfo_r6nextSchedulingperiod nextSchedulingperiod;
} NhuMBMS_ServiceSchedulingInfo_r6;

typedef struct NhuMBMS_ServiceSchedulingInfoLst_r6
{
 TknU16 noComp;
 NhuMBMS_ServiceSchedulingInfo_r6 *member;
}NhuMBMS_ServiceSchedulingInfoLst_r6;


typedef TknU32 NhuMBMS_TrCHInfo_SIB5transpCh_Identity;

typedef struct NhuMBMS_TrCHInfo_SIB5
{
 TknPres pres;
 NhuMBMS_TrCHInfo_SIB5transpCh_Identity transpCh_Identity;
 NhuMBMS_PTM_RBInfo_CLst rbInfo;
 NhuMBMS_MSCH_CfgInfo_r6 msch_CfgInfo;
} NhuMBMS_TrCHInfo_SIB5;

typedef struct NhuMBMS_TrCHInfo_SIB5Lst
{
 TknU16 noComp;
 NhuMBMS_TrCHInfo_SIB5 *member;
}NhuMBMS_TrCHInfo_SIB5Lst;

typedef struct NhuMBMS_SIBTyp5_SCCPCH_r6
{
 TknPres pres;
 NhuMBMS_SCCPCHIdentity sccpchIdentity;
 NhuMBMS_TrCHInfo_SIB5Lst transpCHInfo;
} NhuMBMS_SIBTyp5_SCCPCH_r6;

typedef struct NhuMBMS_SIBTyp5_SCCPCHLst_r6
{
 TknU16 noComp;
 NhuMBMS_SIBTyp5_SCCPCH_r6 *member;
}NhuMBMS_SIBTyp5_SCCPCHLst_r6;

typedef struct NhuMBMS_TmrsAndCounters_r6
{
 TknPres pres;
 NhuT_318 t_318;
} NhuMBMS_TmrsAndCounters_r6;

typedef struct NhuMBMS_TranspChInfoForCCTrCh_r6
{
 TknPres pres;
 NhuMBMS_CmnCCTrChIdentity commonCCTrChIdentity;
 NhuTFCS transportFormatCombinationSet;
} NhuMBMS_TranspChInfoForCCTrCh_r6;

typedef struct NhuMBMS_TranspChInfoForEachCCTrCh_r6
{
 TknU16 noComp;
 NhuMBMS_TranspChInfoForCCTrCh_r6 *member;
}NhuMBMS_TranspChInfoForEachCCTrCh_r6;

typedef struct NhuMBMS_TranspChInfoForTrCh_r6
{
 TknPres pres;
 NhuMBMS_CmnTrChIdentity commonTrChIdentity;
 NhuTportFormatSet transportFormatSet;
} NhuMBMS_TranspChInfoForTrCh_r6;

typedef struct NhuMBMS_TranspChInfoForEachTrCh_r6
{
 TknU16 noComp;
 NhuMBMS_TranspChInfoForTrCh_r6 *member;
}NhuMBMS_TranspChInfoForEachTrCh_r6;

typedef struct NhuMBMS_UnmodifiedService_r6
{
 TknPres pres;
 NhuMBMS_TransmissionIdentity mbms_TransmissionIdentity;
 NhuMBMS_ReqdUEAction_UMod mbms_ReqdUEAction;
 NhuMBMS_PFLIdx mbms_PreferredFrequency;
} NhuMBMS_UnmodifiedService_r6;

typedef struct NhuMBMS_UnmodifiedServiceLst_r6
{
 TknU16 noComp;
 NhuMBMS_UnmodifiedService_r6 *member;
}NhuMBMS_UnmodifiedServiceLst_r6;

typedef struct NhuMBMS_UnmodifiedService_v770ext
{
 TknPres pres;
 NhuMBSFN_ClusterFrequency_r7 mbsfnClusterFrequency;
} NhuMBMS_UnmodifiedService_v770ext;

typedef struct NhuMBMS_UnmodifiedServiceLst_v770ext
{
 TknU16 noComp;
 NhuMBMS_UnmodifiedService_v770ext *member;
}NhuMBMS_UnmodifiedServiceLst_v770ext;

typedef struct NhuMBSFNFrequency
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuCellParamsID cellParamsID;
} NhuMBSFNFrequency;


typedef enum enumNhuMBSFNFrequency_v860extimb_Ind
{
 NhuMBSFNFrequency_v860extimb_IndtrueEnum
} EnumNhuMBSFNFrequency_v860extimb_Ind;
typedef TknU32 NhuMBSFNFrequency_v860extimb_Ind;

typedef struct NhuMBSFNFrequency_v860ext
{
 TknPres pres;
 NhuMBSFNFrequency_v860extimb_Ind imb_Ind;
} NhuMBSFNFrequency_v860ext;

typedef struct NhuMBSFNFrequencyLst
{
 TknU16 noComp;
 NhuMBSFNFrequency *member;
}NhuMBSFNFrequencyLst;

typedef struct NhuMBSFNFrequencyLst_v860ext
{
 TknU16 noComp;
 NhuMBSFNFrequency_v860ext *member;
}NhuMBSFNFrequencyLst_v860ext;


typedef enum enumNhuMBSFNOnlyService
{
 NhuMBSFNOnlyServicetrueEnum
} EnumNhuMBSFNOnlyService;
typedef TknU32 NhuMBSFNOnlyService;


typedef enum enumNhuMBSFNservicesNotNotified_r7notificationOfAllMBSFNServicesInTheBand
{
 NhuMBSFNservicesNotNotified_r7notificationOfAllMBSFNServicesInTheBandtrueEnum
} EnumNhuMBSFNservicesNotNotified_r7notificationOfAllMBSFNServicesInTheBand;
typedef TknU32 NhuMBSFNservicesNotNotified_r7notificationOfAllMBSFNServicesInTheBand;

typedef struct NhuMBSFNservicesNotNotified_r7
{
 TknPres pres;
 NhuMBSFNservicesNotNotified_r7notificationOfAllMBSFNServicesInTheBand notificationOfAllMBSFNServicesInTheBand;
} NhuMBSFNservicesNotNotified_r7;

typedef struct NhuMBSFNInterFrequencyNeighbour_r7mbsfnServicesNotification
{
 TknU8 choice;
 union {
  NhuMBSFNservicesNotNotified_r7 mbsfnServicesNotNotified;
 } val;
} NhuMBSFNInterFrequencyNeighbour_r7mbsfnServicesNotification;

typedef struct NhuMBSFNInterFrequencyNeighbour_r7
{
 TknPres pres;
 NhuFrequencyInfo mbsfnFrequency;
 NhuMBSFNInterFrequencyNeighbour_r7mbsfnServicesNotification mbsfnServicesNotification;
} NhuMBSFNInterFrequencyNeighbour_r7;


typedef enum enumNhuMBSFNInterFrequencyNeighbour_v860extimb_Ind
{
 NhuMBSFNInterFrequencyNeighbour_v860extimb_IndtrueEnum
} EnumNhuMBSFNInterFrequencyNeighbour_v860extimb_Ind;
typedef TknU32 NhuMBSFNInterFrequencyNeighbour_v860extimb_Ind;

typedef struct NhuMBSFNInterFrequencyNeighbour_v860ext
{
 TknPres pres;
 NhuMBSFNInterFrequencyNeighbour_v860extimb_Ind imb_Ind;
} NhuMBSFNInterFrequencyNeighbour_v860ext;

typedef struct NhuMBSFN_InterFrequencyNeighbourLst_r7
{
 TknU16 noComp;
 NhuMBSFNInterFrequencyNeighbour_r7 *member;
}NhuMBSFN_InterFrequencyNeighbourLst_r7;

typedef struct NhuMBSFN_InterFrequencyNeighbourLst_v860ext
{
 TknU16 noComp;
 NhuMBSFNInterFrequencyNeighbour_v860ext *member;
}NhuMBSFN_InterFrequencyNeighbourLst_v860ext;

typedef struct NhuMBSFN_TDDTimeSlotInfo
{
 TknPres pres;
 NhuTimeslotNumber_LCR_r4 timeSlotNumber;
 NhuCellParamsID cellParamsID;
} NhuMBSFN_TDDTimeSlotInfo;

typedef struct NhuMBSFN_TDDInfo
{
 TknU16 noComp;
 NhuMBSFN_TDDTimeSlotInfo *member;
}NhuMBSFN_TDDInfo;


typedef TknU32 NhuMBSFN_TDDTimeSlotInfo_LCRfrequencyIdx;

typedef struct NhuMBSFN_TDDTimeSlotInfo_LCR
{
 TknPres pres;
 NhuMBSFN_TDDTimeSlotInfo_LCRfrequencyIdx frequencyIdx;
 NhuMBSFN_TDDInfo timeSlotLst;
} NhuMBSFN_TDDTimeSlotInfo_LCR;

typedef struct NhuMBSFN_TDDInfo_LCR
{
 TknU16 noComp;
 NhuMBSFN_TDDTimeSlotInfo_LCR *member;
}NhuMBSFN_TDDInfo_LCR;


typedef TknU32 NhuMBSFN_TDM_InfotDMPeriod;


typedef TknU32 NhuMBSFN_TDM_InfotDMOffset;


typedef TknU32 NhuMBSFN_TDM_InfotDMLength;

typedef struct NhuMBSFN_TDM_Info
{
 TknPres pres;
 NhuMBMS_ShortTransmissionID shortTransmissionID;
 NhuMBSFN_TDM_InfotDMPeriod tDMPeriod;
 NhuMBSFN_TDM_InfotDMOffset tDMOffset;
 NhuMBSFN_TDM_InfotDMLength tDMLength;
} NhuMBSFN_TDM_Info;

typedef struct NhuMBSFN_TDM_Info_Lst
{
 TknU16 noComp;
 NhuMBSFN_TDM_Info *member;
}NhuMBSFN_TDM_Info_Lst;

typedef struct NhuInterRATHovrInfo_v390ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v380ext ue_RadioAccessCap_v380ext;
 NhuDL_PhysChCapFDD_v380ext dl_PhysChCapFDD_v380ext;
} NhuInterRATHovrInfo_v390ext_IEs;

typedef struct NhuInterRATHovrInfo_v3a0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v3a0ext ue_RadioAccessCap_v3a0ext;
} NhuInterRATHovrInfo_v3a0ext_IEs;

typedef struct NhuInterRATHovrInfo_v3d0ext_IEs
{
 TknPres pres;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
} NhuInterRATHovrInfo_v3d0ext_IEs;

typedef struct NhuInterRATHovrInfo_v3g0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v3g0ext ue_RadioAccessCap_v3g0ext;
} NhuInterRATHovrInfo_v3g0ext_IEs;

typedef struct NhuInterRATHovrInfo_v4b0ext_IEs
{
 TknPres pres;
 NhuAccessStratumRlsIndicator accessStratumRlsIndicator;
} NhuInterRATHovrInfo_v4b0ext_IEs;

typedef struct NhuInterRATHovrInfo_v4d0ext_IEs
{
 TknPres pres;
 NhuRadioFrequencyBandTDDLst tdd128_RF_Cap;
} NhuInterRATHovrInfo_v4d0ext_IEs;

typedef struct NhuInterRATHovrInfo_v590ext_IEs
{
 TknPres pres;
 NhuPredefinedConfigStatusLstComp predefinedConfigStatusLstComp;
 NhuUE_RadioAccessCapComp ue_RadioAccessCapComp;
} NhuInterRATHovrInfo_v590ext_IEs;

typedef struct NhuInterRATHovrInfo_v690ext_IEs
{
 TknPres pres;
 NhuUE_SecInfo2 ue_SecInfo2;
 NhuUE_RadioAccessCapComp_ext ue_RadioAccessCapComp;
 NhuUE_RadioAccessCapComp2 ue_RadioAccessCapComp2;
} NhuInterRATHovrInfo_v690ext_IEs;


typedef enum enumNhuInterRATHovrInfo_v6b0ext_IEssupportForSIB11bis
{
 NhuInterRATHovrInfo_v6b0ext_IEssupportForSIB11bistrueEnum
} EnumNhuInterRATHovrInfo_v6b0ext_IEssupportForSIB11bis;
typedef TknU32 NhuInterRATHovrInfo_v6b0ext_IEssupportForSIB11bis;

typedef struct NhuInterRATHovrInfo_v6b0ext_IEs
{
 TknPres pres;
 NhuInterRATHovrInfo_v6b0ext_IEssupportForSIB11bis supportForSIB11bis;
} NhuInterRATHovrInfo_v6b0ext_IEs;


typedef enum enumNhuInterRATHovrInfo_v6e0ext_IEssupportForFDPCH
{
 NhuInterRATHovrInfo_v6e0ext_IEssupportForFDPCHtrueEnum
} EnumNhuInterRATHovrInfo_v6e0ext_IEssupportForFDPCH;
typedef TknU32 NhuInterRATHovrInfo_v6e0ext_IEssupportForFDPCH;

typedef struct NhuInterRATHovrInfo_v6e0ext_IEs
{
 TknPres pres;
 NhuInterRATHovrInfo_v6e0ext_IEssupportForFDPCH supportForFDPCH;
} NhuInterRATHovrInfo_v6e0ext_IEs;

typedef struct NhuInterRATHovrInfo_v770ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCapInfo_v770ext ue_RadioAccessCapInfo;
 NhuUE_RadioAccessCapComp_v770ext ue_RadioAccessCapComp;
 NhuUE_RadioAccessCapComp2_v770ext ue_RadioAccessCapComp2;
} NhuInterRATHovrInfo_v770ext_IEs;


typedef enum enumNhuInterRATHovrInfo_v790ext_IEssupportForEDPCCHPowerBoosting
{
 NhuInterRATHovrInfo_v790ext_IEssupportForEDPCCHPowerBoostingtrueEnum
} EnumNhuInterRATHovrInfo_v790ext_IEssupportForEDPCCHPowerBoosting;
typedef TknU32 NhuInterRATHovrInfo_v790ext_IEssupportForEDPCCHPowerBoosting;

typedef struct NhuInterRATHovrInfo_v790ext_IEs
{
 TknPres pres;
 NhuInterRATHovrInfo_v790ext_IEssupportForEDPCCHPowerBoosting supportForEDPCCHPowerBoosting;
} NhuInterRATHovrInfo_v790ext_IEs;

typedef struct NhuInterRATHovrInfo_v860ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v860ext ue_RadioAccessCapInfo;
 NhuUE_RadioAccessCapComp2_v860ext ue_RadioAccessCapComp2;
} NhuInterRATHovrInfo_v860ext_IEs;

typedef struct NhuInterRATHovrInfo_v880ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v880ext ue_RadioAccessCapInfo;
 NhuUE_RadioAccessCapComp_TDD128 ue_RadioAccessCapInfo_TDD128;
} NhuInterRATHovrInfo_v880ext_IEs;

typedef struct NhuInterRATHovrInfo_v920ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v920ext ue_RadioAccessCapInfo;
 NhuUE_RadioAccessCapComp2_v920ext ue_RadioAccessCapComp2;
} NhuInterRATHovrInfo_v920ext_IEs;

typedef struct NhuInterRATHovrInfo_v8b0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCapInfo_TDD128_v8b0ext ue_RadioAccessCapInfo;
} NhuInterRATHovrInfo_v8b0ext_IEs;

typedef struct NhuInterRATHovrInfo_v950ext_IEs
{
 TknPres pres;
 NhuPDCP_Cap_r4_ext pdcp_Cap;
} NhuInterRATHovrInfo_v950ext_IEs;

typedef struct NhuInterRATHovrInfo_va40ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_va40ext ue_RadioAccessCapInfo;
 NhuUE_RadioAccessCapComp2_va40ext ue_RadioAccessCapComp2;
} NhuInterRATHovrInfo_va40ext_IEs;

typedef struct NhuInterRATHovrInfo_vbxyext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_vbxyext ue_RadioAccessCapInfo_vbxyext;
 NhuUE_RadioAccessCap_va60ext ue_RadioAccessCapInfo_va60ext;
 NhuUE_RadioAccessCapComp2_vbxyext ue_RadioAccessCapComp2;
} NhuInterRATHovrInfo_vbxyext_IEs;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtnsva40NonCriticalExtnsvbxyNonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtnsva40NonCriticalExtnsvbxyNonCriticalExtnsnonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtnsva40NonCriticalExtnsvbxyNonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_vbxyext_IEs interRATHovrInfo_vbxyext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtnsva40NonCriticalExtnsvbxyNonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtnsva40NonCriticalExtnsvbxyNonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtnsva40NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_va40ext_IEs interRATHovrInfo_va40ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtnsva40NonCriticalExtnsvbxyNonCriticalExtns vbxyNonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtnsva40NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v950ext_IEs interRATHovrInfo_v950ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtnsva40NonCriticalExtns va40NonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v8b0ext_IEs interRATHovrInfo_v8b0ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtns v950NonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v920ext_IEs interRATHovrInfo_v920ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtns v8b0NonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v880ext_IEs interRATHovrInfo_v880ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtns v920NonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v860ext_IEs interRATHovrInfo_v860ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtns v880NonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v790ext_IEs interRATHovrInfo_v790ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtns v860NonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v770ext_IEs interRATHovrInfo_v770ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtns v790nonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v6e0ext_IEs interRATHovrInfo_v6e0ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtns v770NonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEs
{
 TknPres pres;
 NhuInterRATHovrInfo_v6b0ext_IEs interRATHovrInfo_v6b0ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtns v6e0NonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEs;

typedef struct NhuInterRATHovrInfopredefinedConfigStatusLst
{
 TknU8 choice;
 union {
  NhuPredefinedConfigStatusLst present;
 } val;
} NhuInterRATHovrInfopredefinedConfigStatusLst;

typedef struct NhuInterRATHovrInfouE_SecInfo
{
 TknU8 choice;
 union {
  NhuUE_SecInfo present;
 } val;
} NhuInterRATHovrInfouE_SecInfo;


typedef TknStrOSXL NhuInterRATHovrInfoue_CapContpresent;
typedef struct NhuInterRATHovrInfoue_CapCont
{
 TknU8 choice;
 union {
  NhuInterRATHovrInfoue_CapContpresent present;
 } val;
} NhuInterRATHovrInfoue_CapCont;


typedef TknStrBSXL NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsinterRATHovrInfo_r3_add_ext;
typedef struct NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtnsv690NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v690ext_IEs interRATHovrInfo_v690ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEs v6b0NonCriticalExtns;
} NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtnsv690NonCriticalExtns;

typedef struct NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v590ext_IEs interRATHovrInfo_v590ext;
 NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtnsv690NonCriticalExtns v690NonCriticalExtns;
} NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtns;

typedef struct NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v4d0ext_IEs interRATHovrInfo_v4d0ext;
 NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtns v590NonCriticalExtns;
} NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtns;

typedef struct NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v4b0ext_IEs interRATHovrInfo_v4b0ext;
 NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtns v4d0NonCriticalExtns;
} NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtns;

typedef struct NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v3g0ext_IEs interRATHovrInfo_v3g0ext;
 NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtns v4b0NonCriticalExtns;
} NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtns;

typedef struct NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v3d0ext_IEs interRATHovrInfo_v3d0ext;
 NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsinterRATHovrInfo_r3_add_ext interRATHovrInfo_r3_add_ext;
 NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtns v3g0NonCriticalExtns;
} NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtns;

typedef struct NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v3a0ext_IEs interRATHovrInfo_v3a0ext;
 NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtns laterNonCriticalExtns;
} NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtns;

typedef struct NhuInterRATHovrInfov390NonCriticalExtnspresent
{
 TknPres pres;
 NhuInterRATHovrInfo_v390ext_IEs interRATHovrInfo_v390ext;
 NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtns v3a0NonCriticalExtns;
} NhuInterRATHovrInfov390NonCriticalExtnspresent;

typedef struct NhuInterRATHovrInfov390NonCriticalExtns
{
 TknU8 choice;
 union {
  NhuInterRATHovrInfov390NonCriticalExtnspresent present;
 } val;
} NhuInterRATHovrInfov390NonCriticalExtns;

typedef struct NhuInterRATHovrInfo
{
 TknPres pres;
 NhuInterRATHovrInfopredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuInterRATHovrInfouE_SecInfo uE_SecInfo;
 NhuInterRATHovrInfoue_CapCont ue_CapCont;
 NhuInterRATHovrInfov390NonCriticalExtns v390NonCriticalExtns;
} NhuInterRATHovrInfo;

typedef struct NhuInterRATHovrInfo_v690ext1_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v650ext ue_RadioAccessCap_v650ext;
} NhuInterRATHovrInfo_v690ext1_IEs;

typedef struct NhuInterRATHovrInfo_v7e0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v7e0ext ue_RadioAccessCap;
} NhuInterRATHovrInfo_v7e0ext_IEs;

typedef struct NhuInterRATHovrInfo_v7f0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v7f0ext ue_RadioAccessCap;
 NhuUE_RadioAccessCapComp2_v7f0ext ue_RadioAccessCapComp2;
} NhuInterRATHovrInfo_v7f0ext_IEs;

typedef struct NhuInterRATHovrInfoBand_va40ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCapabBand_va40ext ue_RadioAccessCapabBand;
 NhuRF_CapabBandLstFDDComp_ext2 rf_CapFDDComp;
} NhuInterRATHovrInfoBand_va40ext_IEs;

typedef struct NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtnsnonCriticalExtns;

typedef struct NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfoBand_va40ext_IEs interRATHovrInfo_va40ext;
 NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtnsv7f0NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v7f0ext_IEs interRATHovrInfo_v7f0ext;
 NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtns va40NonCriticalExtns;
} NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtnsv7f0NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v7e0ext_IEs interRATHovrInfo_v7e0ext;
 NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtnsv7f0NonCriticalExtns v7f0NonCriticalExtns;
} NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_r3_add_ext_IEs
{
 TknPres pres;
 NhuInterRATHovrInfo_v690ext1_IEs interRATHovrInfo_v690ext1;
 NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtns v7e0NonCriticalExtns;
} NhuInterRATHovrInfo_r3_add_ext_IEs;

typedef struct Nhu3gMeasurementReport_v390ext
{
 TknPres pres;
 NhuMeasuredResults_v390ext measuredResults_v390ext;
} Nhu3gMeasurementReport_v390ext;

typedef struct Nhu3gMeasurementReport_v4b0ext_IEs
{
 TknPres pres;
 NhuInterFreqEventResults_LCR_r4_ext interFreqEventResults_LCR;
 NhuMeasuredResultsLst_LCR_r4_ext additionalMeasuredResults_LCR;
 NhuPrimaryCPICH_Info dummy;
} Nhu3gMeasurementReport_v4b0ext_IEs;

typedef struct Nhu3gMeasurementReport_v590ext_IEs
{
 TknPres pres;
 NhuMeasuredResults_v590ext measuredResults_v590ext;
} Nhu3gMeasurementReport_v590ext_IEs;

typedef struct Nhu3gMeasurementReport_v5b0ext_IEs
{
 TknPres pres;
 NhuInterRATCellInfoInd interRATCellInfoInd;
} Nhu3gMeasurementReport_v5b0ext_IEs;

typedef struct Nhu3gMeasurementReport_v690ext_IEs
{
 TknPres pres;
 NhuMeasuredResultsOnRACHinterFreq measuredResultsOnRACHinterFreq;
} Nhu3gMeasurementReport_v690ext_IEs;

typedef struct Nhu3gMeasurementReport_v770ext_IEs
{
 TknPres pres;
 NhuMeasuredResults_v770ext measuredResults;
 NhuMeasuredResultsLst_v770xet additionalMeasuredResults;
 NhuEventResults_v770ext eventResults;
 NhuUE_Positioning_OTDOA_MeasuredResultsTDD_ext ue_Positioning_OTDOA_MeasuredResults;
} Nhu3gMeasurementReport_v770ext_IEs;

typedef struct Nhu3gMeasurementReport_v860ext_IEs
{
 TknPres pres;
 NhuActvnTime activationTime;
 NhuMeasuredResults_v860ext measuredResults;
 NhuMeasuredResultsLst_v860ext additionalMeasuredResults;
 NhuEventResults_v860ext eventResults;
 NhuEUTRA_MeasuredResults eutra_MeasuredResults;
 NhuEUTRA_EventResults eutra_EventResults;
} Nhu3gMeasurementReport_v860ext_IEs;

typedef struct Nhu3gMeasurementReport_v920ext_IEs
{
 TknPres pres;
 NhuCSGProximityInd cSGProximityInd;
 NhuMeasuredResults_v920ext measuredResults;
 NhuMeasuredResultsOnSecUlFreq measuredResultsOnSecUlFreq;
 NhuMeasuredResultsLst_v920ext additionalMeasuredResults;
 NhuMeasuredResultsLstOnSecUlFreq additionalMeasuredResultsOnSecUlFreq;
 NhuEventResultsOnSecUlFreq eventResultsOnSecUlFreq;
 NhuEUTRA_MeasuredResults_v920ext eutra_MeasuredResults;
} Nhu3gMeasurementReport_v920ext_IEs;

typedef struct Nhu3gMeasurementReport_v970ext_IEs
{
 TknPres pres;
 NhuMeasurementIdentityExt measurementIdentity;
} Nhu3gMeasurementReport_v970ext_IEs;


typedef enum enumNhu3gMeasurementReport_va40ext_IEsloggedMeasAvailable
{
 Nhu3gMeasurementReport_va40ext_IEsloggedMeasAvailabletrueEnum
} EnumNhu3gMeasurementReport_va40ext_IEsloggedMeasAvailable;
typedef TknU32 Nhu3gMeasurementReport_va40ext_IEsloggedMeasAvailable;


typedef enum enumNhu3gMeasurementReport_va40ext_IEsloggedANRResultsAvailable
{
 Nhu3gMeasurementReport_va40ext_IEsloggedANRResultsAvailabletrueEnum
} EnumNhu3gMeasurementReport_va40ext_IEsloggedANRResultsAvailable;
typedef TknU32 Nhu3gMeasurementReport_va40ext_IEsloggedANRResultsAvailable;

typedef struct Nhu3gMeasurementReport_va40ext_IEs
{
 TknPres pres;
 NhuEventResults_va40ext eventResults;
 Nhu3gMeasurementReport_va40ext_IEsloggedMeasAvailable loggedMeasAvailable;
 Nhu3gMeasurementReport_va40ext_IEsloggedANRResultsAvailable loggedANRResultsAvailable;
} Nhu3gMeasurementReport_va40ext_IEs;


typedef TknStrBSXL Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsmeasurementReport_r3_add_ext;
typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsnonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_va40ext_IEs measurementReport_va40ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_v970ext_IEs measurementReport_v970ext_IE;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtns va40NonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_v920ext_IEs measurementReport_v920ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtns v970NonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_v860ext_IEs measurementReport_v860ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtns v920NonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_v770ext_IEs measurementReport_v770ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtns v860NonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_v690ext_IEs measurementReport_v690ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtns v770NonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_v5b0ext_IEs measurementReport_v5b0ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtns v690NonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_v590ext_IEs measurementReport_v590ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtns v5b0NonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_v4b0ext_IEs measurementReport_v4b0ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtns v590NonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsmeasurementReport_r3_add_ext measurementReport_r3_add_ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtns v4b0NonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_v390ext measurementReport_v390ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtns laterNonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtns;

typedef struct Nhu3gMeasurementReport
{
 TknPres pres;
 NhuMeasurementIdentity measurementIdentity;
 NhuMeasuredResults measuredResults;
 NhuMeasuredResultsOnRACH measuredResultsOnRACH;
 NhuMeasuredResultsLst additionalMeasuredResults;
 NhuEventResults eventResults;
 Nhu3gMeasurementReportv390nonCriticalExtns v390nonCriticalExtns;
} Nhu3gMeasurementReport;

typedef struct NhuRRCConSetupCompl_v370ext
{
 TknPres pres;
 NhuUE_RadioAccessCap_v370ext ue_RadioAccessCap_v370ext;
} NhuRRCConSetupCompl_v370ext;

typedef struct NhuRRCConSetupCompl_v380ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v380ext ue_RadioAccessCap_v380ext;
 NhuDL_PhysChCapFDD_v380ext dl_PhysChCapFDD_v380ext;
} NhuRRCConSetupCompl_v380ext_IEs;

typedef struct NhuRRCConSetupCompl_v3a0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v3a0ext ue_RadioAccessCap_v3a0ext;
} NhuRRCConSetupCompl_v3a0ext_IEs;

typedef struct NhuRRCConSetupCompl_v3g0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v3g0ext ue_RadioAccessCap_v3g0ext;
} NhuRRCConSetupCompl_v3g0ext_IEs;

typedef struct NhuRRCConSetupCompl_v650ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v650ext ue_RadioAccessCap_v650ext;
} NhuRRCConSetupCompl_v650ext_IEs;

typedef struct NhuRRCConSetupCompl_v680ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v680ext ue_RadioAccessCap_v680ext;
} NhuRRCConSetupCompl_v680ext_IEs;

typedef struct NhuRRCConSetupCompl_v7e0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v7e0ext ue_RadioAccessCap;
} NhuRRCConSetupCompl_v7e0ext_IEs;

typedef struct NhuRRCConSetupCompl_v7f0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v7f0ext ue_RadioAccessCap;
} NhuRRCConSetupCompl_v7f0ext_IEs;

typedef struct NhuRRCConSetupComplBand_va40ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCapabBand_va40ext ue_RadioAccessCapabBand;
} NhuRRCConSetupComplBand_va40ext_IEs;

typedef struct NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtnsnonCriticalExtns;

typedef struct NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtns
{
 TknPres pres;
 NhuRRCConSetupComplBand_va40ext_IEs rrcConSetupComplBand_va40ext;
 NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtns;

typedef struct NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns
{
 TknPres pres;
 NhuRRCConSetupCompl_v7f0ext_IEs rrcConSetupCompl_v7f0ext;
 NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtns va40NonCriticalExtns;
} NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns;

typedef struct NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtns
{
 TknPres pres;
 NhuRRCConSetupCompl_v7e0ext_IEs rrcConSetupCompl_v7e0ext;
 NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns v7f0NonCriticalExtns;
} NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtns;

typedef struct NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtns
{
 TknPres pres;
 NhuRRCConSetupCompl_v680ext_IEs rrcConSetupCompl_v680ext;
 NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtns v7e0NonCriticalExtns;
} NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtns;

typedef struct NhuRRCConSetupCompl_r3_add_ext_IEs
{
 TknPres pres;
 NhuRRCConSetupCompl_v650ext_IEs rrcConSetupCompl_v650ext;
 NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtns v680NonCriticalExtns;
} NhuRRCConSetupCompl_r3_add_ext_IEs;

typedef struct NhuRRCConSetupCompl_v4b0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v4b0ext ue_RadioAccessCap_v4b0ext;
} NhuRRCConSetupCompl_v4b0ext_IEs;

typedef struct NhuRRCConSetupCompl_v590ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v590ext ue_RadioAccessCap_v590ext;
 NhuInterRAT_UE_RadioAccessCap_v590ext ue_RATSpecificCap_v590ext;
} NhuRRCConSetupCompl_v590ext_IEs;

typedef struct NhuRRCConSetupCompl_v5c0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v5c0ext ue_RadioAccessCap_v5c0ext;
} NhuRRCConSetupCompl_v5c0ext_IEs;


typedef TknStrBSXL NhuRRCConSetupCompl_v690ext_IEsueCapCont;
typedef struct NhuRRCConSetupCompl_v690ext_IEs
{
 TknPres pres;
 NhuRRCConSetupCompl_v690ext_IEsueCapCont ueCapCont;
} NhuRRCConSetupCompl_v690ext_IEs;


typedef enum enumNhuRRCConSetupCompl_v770ext_IEsdeferredMeasurementCntrlReading
{
 NhuRRCConSetupCompl_v770ext_IEsdeferredMeasurementCntrlReadingtrueEnum
} EnumNhuRRCConSetupCompl_v770ext_IEsdeferredMeasurementCntrlReading;
typedef TknU32 NhuRRCConSetupCompl_v770ext_IEsdeferredMeasurementCntrlReading;

typedef struct NhuRRCConSetupCompl_v770ext_IEs
{
 TknPres pres;
 NhuRRCConSetupCompl_v770ext_IEsdeferredMeasurementCntrlReading deferredMeasurementCntrlReading;
} NhuRRCConSetupCompl_v770ext_IEs;


typedef enum enumNhuRRCConSetupCompl_va40ext_IEsloggedMeasAvailable
{
 NhuRRCConSetupCompl_va40ext_IEsloggedMeasAvailabletrueEnum
} EnumNhuRRCConSetupCompl_va40ext_IEsloggedMeasAvailable;
typedef TknU32 NhuRRCConSetupCompl_va40ext_IEsloggedMeasAvailable;


typedef enum enumNhuRRCConSetupCompl_va40ext_IEsloggedANRResultsAvailable
{
 NhuRRCConSetupCompl_va40ext_IEsloggedANRResultsAvailabletrueEnum
} EnumNhuRRCConSetupCompl_va40ext_IEsloggedANRResultsAvailable;
typedef TknU32 NhuRRCConSetupCompl_va40ext_IEsloggedANRResultsAvailable;

typedef struct NhuRRCConSetupCompl_va40ext_IEs
{
 TknPres pres;
 NhuRRCConSetupCompl_va40ext_IEsloggedMeasAvailable loggedMeasAvailable;
 NhuRRCConSetupCompl_va40ext_IEsloggedANRResultsAvailable loggedANRResultsAvailable;
} NhuRRCConSetupCompl_va40ext_IEs;


typedef TknStrOSXL NhuSys_Info_ContsysInfoTyp12;
typedef struct NhuSys_Info_ContnonCriticalExtns
{
 TknPres pres;
} NhuSys_Info_ContnonCriticalExtns;

typedef struct NhuSys_Info_Cont
{
 TknPres pres;
 NhuSys_Info_ContsysInfoTyp12 sysInfoTyp12;
 NhuSys_Info_ContnonCriticalExtns nonCriticalExtns;
} NhuSys_Info_Cont;

typedef struct NhuMSCH_Msg
{
 TknPres pres;
} NhuMSCH_Msg;


typedef TknStrOSXL NhuInterRATHovrInfoWithInterRATCapabilities_r3_IEsinterRATHovrInfo;
typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_r3_IEs
{
 TknPres pres;
 NhuInterRAT_UE_RadioAccessCapLst ue_RATSpecificCap;
 NhuInterRATHovrInfoWithInterRATCapabilities_r3_IEsinterRATHovrInfo interRATHovrInfo;
} NhuInterRATHovrInfoWithInterRATCapabilities_r3_IEs;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_v390ext_IEs
{
 TknPres pres;
 NhuFailCauseWithProtErr failureCauseWithProtErr;
} NhuInterRATHovrInfoWithInterRATCapabilities_v390ext_IEs;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_v690ext_IEs
{
 TknPres pres;
 NhuInterRAT_UE_RadioAccessCap_v690ext ue_RATSpecificCap_v690ext;
} NhuInterRATHovrInfoWithInterRATCapabilities_v690ext_IEs;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_v860ext_IEs
{
 TknPres pres;
 NhuInterRAT_UE_RadioAccessCap_v860ext ue_RATSpecificCap;
} NhuInterRATHovrInfoWithInterRATCapabilities_v860ext_IEs;


typedef TknU32 NhuInterRATHovrInfoWithInterRATCapabilities_v920ext_IEsue_Inactivity_Period;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_v920ext_IEs
{
 TknPres pres;
 NhuInterRATHovrInfoWithInterRATCapabilities_v920ext_IEsue_Inactivity_Period ue_Inactivity_Period;
} NhuInterRATHovrInfoWithInterRATCapabilities_v920ext_IEs;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsnonCriticalExtns;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfoWithInterRATCapabilities_v920ext_IEs interRATHovrInfoWithInterRATCapabilities_v920ext;
 NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtns;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtnsv860NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfoWithInterRATCapabilities_v860ext_IEs interRATHovrInfoWithInterRATCapabilities_v860ext;
 NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtns v920NonCriticalExtns;
} NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtnsv860NonCriticalExtns;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfoWithInterRATCapabilities_v690ext_IEs interRATHovrInfoWithInterRATCapabilities_v690ext;
 NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtnsv860NonCriticalExtns v860NonCriticalExtns;
} NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtns;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfoWithInterRATCapabilities_v390ext_IEs interRATHovrInfoWithInterRATCapabilities_v390ext;
 NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtns v690NonCriticalExtns;
} NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtns;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_r3r3
{
 TknPres pres;
 NhuInterRATHovrInfoWithInterRATCapabilities_r3_IEs interRATHovrInfo_r3;
 NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtns v390NonCriticalExtns;
} NhuInterRATHovrInfoWithInterRATCapabilities_r3r3;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_r3criticalExtns
{
 TknPres pres;
} NhuInterRATHovrInfoWithInterRATCapabilities_r3criticalExtns;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_r3
{
 TknU8 choice;
 union {
  NhuInterRATHovrInfoWithInterRATCapabilities_r3r3 r3;
  NhuInterRATHovrInfoWithInterRATCapabilities_r3criticalExtns criticalExtns;
 } val;
} NhuInterRATHovrInfoWithInterRATCapabilities_r3;


typedef enum enumNhuStateOfRRC
{
 NhuStateOfRRCcell_DCHEnum,
 NhuStateOfRRCcell_FACHEnum,
 NhuStateOfRRCcell_PCHEnum,
 NhuStateOfRRCura_PCHEnum
} EnumNhuStateOfRRC;
typedef TknU32 NhuStateOfRRC;


typedef enum enumNhuStateOfRRC_Procedure
{
 NhuStateOfRRC_ProcedureawaitNoRRC_MsgEnum,
 NhuStateOfRRC_ProcedureawaitRB_RlsComplEnum,
 NhuStateOfRRC_ProcedureawaitRB_SetupComplEnum,
 NhuStateOfRRC_ProcedureawaitRB_RecfgnComplEnum,
 NhuStateOfRRC_ProcedureawaitTportCH_RecfgnComplEnum,
 NhuStateOfRRC_ProcedureawaitPhysicalCH_RecfgnComplEnum,
 NhuStateOfRRC_ProcedureawaitActiveSetUpdComplEnum,
 NhuStateOfRRC_ProcedureawaitHovrComplEnum,
 NhuStateOfRRC_ProceduresendCellUpdConfirmEnum,
 NhuStateOfRRC_ProceduresendUraUpdConfirmEnum,
 NhuStateOfRRC_ProceduredummyEnum,
 NhuStateOfRRC_ProcedureotherStatesEnum
} EnumNhuStateOfRRC_Procedure;
typedef TknU32 NhuStateOfRRC_Procedure;


typedef enum enumNhuCipheringStatus
{
 NhuCipheringStatusstartedEnum,
 NhuCipheringStatusnotStartedEnum
} EnumNhuCipheringStatus;
typedef TknU32 NhuCipheringStatus;


typedef TknU32 NhuCalculationTimeForCipheringsfn;

typedef struct NhuCalculationTimeForCiphering
{
 TknPres pres;
 NhuCellIdentity cell_Id;
 NhuCalculationTimeForCipheringsfn sfn;
} NhuCalculationTimeForCiphering;


typedef TknStrBSXL NhuCipheringInfoPerRBdl_HFN;

typedef TknStrBSXL NhuCipheringInfoPerRBul_HFN;
typedef struct NhuCipheringInfoPerRB
{
 TknPres pres;
 NhuCipheringInfoPerRBdl_HFN dl_HFN;
 NhuCipheringInfoPerRBul_HFN ul_HFN;
} NhuCipheringInfoPerRB;

typedef struct NhuCipheringInfoPerRB_Lst
{
 TknU16 noComp;
 NhuCipheringInfoPerRB *member;
}NhuCipheringInfoPerRB_Lst;


typedef TknStrBSXL NhuCOUNT_CSinglecount_C;
typedef struct NhuCOUNT_CSingle
{
 TknPres pres;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuCOUNT_CSinglecount_C count_C;
} NhuCOUNT_CSingle;

typedef struct NhuCOUNT_C_Lst
{
 TknU16 noComp;
 NhuCOUNT_CSingle *member;
}NhuCOUNT_C_Lst;


typedef enum enumNhuIntegrityProtectionStatus
{
 NhuIntegrityProtectionStatusstartedEnum,
 NhuIntegrityProtectionStatusnotStartedEnum
} EnumNhuIntegrityProtectionStatus;
typedef TknU32 NhuIntegrityProtectionStatus;


typedef TknStrBSXL NhuSRB_SpecificIntegrityProtInfoul_RRC_HFN;

typedef TknStrBSXL NhuSRB_SpecificIntegrityProtInfodl_RRC_HFN;
typedef struct NhuSRB_SpecificIntegrityProtInfo
{
 TknPres pres;
 NhuSRB_SpecificIntegrityProtInfoul_RRC_HFN ul_RRC_HFN;
 NhuSRB_SpecificIntegrityProtInfodl_RRC_HFN dl_RRC_HFN;
 NhuRRC_MsgSequenceNumber ul_RRC_SequenceNumber;
 NhuRRC_MsgSequenceNumber dl_RRC_SequenceNumber;
} NhuSRB_SpecificIntegrityProtInfo;

typedef struct NhuSRB_SpecificIntegrityProtInfoLst
{
 TknU16 noComp;
 NhuSRB_SpecificIntegrityProtInfo *member;
}NhuSRB_SpecificIntegrityProtInfoLst;


typedef TknStrBSXL NhuImplementationSpecificParams;

typedef TknU32 NhuUE_Positioning_LastKnownPossfn;

typedef struct NhuUE_Positioning_LastKnownPos
{
 TknPres pres;
 NhuUE_Positioning_LastKnownPossfn sfn;
 NhuCellIdentity cell_id;
 NhuPositionEstimate positionEstimate;
} NhuUE_Positioning_LastKnownPos;

typedef struct NhuMeasurementCmdWithTyp
{
 TknU8 choice;
 union {
  NhuMeasurementTyp setup;
 } val;
} NhuMeasurementCmdWithTyp;

typedef struct NhuOngoingMeasRep
{
 TknPres pres;
 NhuMeasurementIdentity measurementIdentity;
 NhuMeasurementCmdWithTyp measurementCmdWithTyp;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuAdditionalMeasurementID_Lst additionalMeasurementID_Lst;
} NhuOngoingMeasRep;

typedef struct NhuOngoingMeasRepLst
{
 TknU16 noComp;
 NhuOngoingMeasRep *member;
}NhuOngoingMeasRepLst;

typedef struct NhuSRNC_RelocationInfo_r3_IEsmodeSpecificInfofdd
{
 TknPres pres;
 NhuCPCH_SetID dummy;
 NhuDRAC_StaticInfoLst dummy2;
} NhuSRNC_RelocationInfo_r3_IEsmodeSpecificInfofdd;

typedef struct NhuSRNC_RelocationInfo_r3_IEsmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3_IEsmodeSpecificInfofdd fdd;
 } val;
} NhuSRNC_RelocationInfo_r3_IEsmodeSpecificInfo;

typedef struct NhuSRNC_RelocationInfo_r3_IEs
{
 TknPres pres;
 NhuStateOfRRC stateOfRRC;
 NhuStateOfRRC_Procedure stateOfRRC_Procedure;
 NhuCipheringStatus cipheringStatus;
 NhuCalculationTimeForCiphering calculationTimeForCiphering;
 NhuCipheringInfoPerRB_Lst cipheringInfoPerRB_Lst;
 NhuCOUNT_C_Lst count_C_Lst;
 NhuIntegrityProtectionStatus integrityProtectionStatus;
 NhuSRB_SpecificIntegrityProtInfoLst srb_SpecificIntegrityProtInfo;
 NhuImplementationSpecificParams implementationSpecificParams;
 NhuU_RNTI u_RNTI;
 NhuC_RNTI c_RNTI;
 NhuUE_RadioAccessCap ue_RadioAccessCap;
 NhuUE_Positioning_LastKnownPos ue_Positioning_LastKnownPos;
 NhuInterRAT_UE_RadioAccessCapLst ue_RATSpecificCap;
 NhuURA_Identity ura_Identity;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLst cn_DomainInfoLst;
 NhuOngoingMeasRepLst ongoingMeasRepLst;
 NhuPredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuSRB_InfoSetupLst srb_InfoLst;
 NhuRAB_InfoSetupLst rab_InfoLst;
 NhuUL_CmnTransChInfo ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst ul_TransChInfoLst;
 NhuSRNC_RelocationInfo_r3_IEsmodeSpecificInfo modeSpecificInfo;
 NhuDL_CmnTransChInfo dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst dl_TransChInfoLst;
 Nhu3gMeasurementReport measurementReport;
} NhuSRNC_RelocationInfo_r3_IEs;

typedef struct NhuCipheringStatusCNdomain
{
 TknPres pres;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuCipheringStatus cipheringStatus;
} NhuCipheringStatusCNdomain;

typedef struct NhuCipheringStatusLst
{
 TknU16 noComp;
 NhuCipheringStatusCNdomain *member;
}NhuCipheringStatusLst;

typedef struct NhuSRNC_RelocationInfo_v380ext_IEs
{
 TknPres pres;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuCipheringStatusLst cipheringStatusLst;
} NhuSRNC_RelocationInfo_v380ext_IEs;

typedef struct NhuCN_DomainInfo_v390ext
{
 TknPres pres;
 NhuCN_DRX_CycleLengthCoefficient cn_DRX_CycleLengthCoeff;
} NhuCN_DomainInfo_v390ext;

typedef struct NhuCN_DomainInfoLst_v390ext
{
 TknU16 noComp;
 NhuCN_DomainInfo_v390ext *member;
}NhuCN_DomainInfoLst_v390ext;

typedef struct NhuSRNC_RelocationInfo_v390ext_IEs
{
 TknPres pres;
 NhuCN_DomainInfoLst_v390ext cn_DomainInfoLst_v390ext;
 NhuUE_RadioAccessCap_v370ext ue_RadioAccessCap_v370ext;
 NhuUE_RadioAccessCap_v380ext ue_RadioAccessCap_v380ext;
 NhuDL_PhysChCapFDD_v380ext dl_PhysChCapFDD_v380ext;
 NhuFailCauseWithProtErr failureCauseWithProtErr;
} NhuSRNC_RelocationInfo_v390ext_IEs;


typedef TknStrBSXL NhuCipheringInfoPerRB_Lst_v3a0extdl_UM_SN;
typedef struct NhuCipheringInfoPerRB_Lst_v3a0ext
{
 TknPres pres;
 NhuCipheringInfoPerRB_Lst_v3a0extdl_UM_SN dl_UM_SN;
} NhuCipheringInfoPerRB_Lst_v3a0ext;

typedef struct NhuSRNC_RelocationInfo_v3a0ext_IEs
{
 TknPres pres;
 NhuCipheringInfoPerRB_Lst_v3a0ext cipheringInfoForSRB1_v3a0ext;
 NhuUE_RadioAccessCap_v3a0ext ue_RadioAccessCap_v3a0ext;
 NhuSTART_Value startValueForCiphering_v3a0ext;
} NhuSRNC_RelocationInfo_v3a0ext_IEs;

typedef struct NhuSTARTLst2
{
 TknU16 noComp;
 NhuSTARTSingle *member;
}NhuSTARTLst2;

typedef struct NhuSRNC_RelocationInfo_v3b0ext_IEs
{
 TknPres pres;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuSTARTLst2 startValueForCiphering_v3b0ext;
} NhuSRNC_RelocationInfo_v3b0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v3c0ext_IEs
{
 TknPres pres;
 NhuRB_Identity rb_IdentityForHOMsg;
} NhuSRNC_RelocationInfo_v3c0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v3d0ext_IEs
{
 TknPres pres;
 NhuUESpecificBehaviourInfo1idle uESpecificBehaviourInfo1idle;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
} NhuSRNC_RelocationInfo_v3d0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v3g0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v3g0ext ue_RadioAccessCap_v3g0ext;
} NhuSRNC_RelocationInfo_v3g0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v4b0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v4b0ext ue_RadioAccessCap_v4b0ext;
} NhuSRNC_RelocationInfo_v4b0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v590ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v590ext ue_RadioAccessCap_v590ext;
 NhuInterRAT_UE_RadioAccessCap_v590ext ue_RATSpecificCap_v590ext;
} NhuSRNC_RelocationInfo_v590ext_IEs;

typedef struct NhuStoredTGP_Sequencecurrent_tgps_Statusactive
{
 TknPres pres;
 NhuTGCFN tgcfn;
} NhuStoredTGP_Sequencecurrent_tgps_Statusactive;

typedef struct NhuStoredTGP_Sequencecurrent_tgps_Status
{
 TknU8 choice;
 union {
  NhuStoredTGP_Sequencecurrent_tgps_Statusactive active;
 } val;
} NhuStoredTGP_Sequencecurrent_tgps_Status;

typedef struct NhuStoredTGP_Sequence
{
 TknPres pres;
 NhuTGPSI tgpsi;
 NhuStoredTGP_Sequencecurrent_tgps_Status current_tgps_Status;
 NhuTGPS_CfgParams tgps_CfgParams;
} NhuStoredTGP_Sequence;

typedef struct NhuStoredTGP_SequenceLst
{
 TknU16 noComp;
 NhuStoredTGP_Sequence *member;
}NhuStoredTGP_SequenceLst;

typedef struct NhuCodeChangeStatus
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuScramblingCodeChange scramblingCodeChange;
} NhuCodeChangeStatus;

typedef struct NhuCodeChangeStatusLst
{
 TknU16 noComp;
 NhuCodeChangeStatus *member;
}NhuCodeChangeStatusLst;

typedef struct NhuStoredCompressedModeInfo
{
 TknPres pres;
 NhuStoredTGP_SequenceLst storedTGP_SequenceLst;
 NhuCodeChangeStatusLst codeChangeStatusLst;
} NhuStoredCompressedModeInfo;

typedef struct NhuSRNC_RelocationInfo_v5a0ext_IEs
{
 TknPres pres;
 NhuStoredCompressedModeInfo storedCompressedModeInfo;
} NhuSRNC_RelocationInfo_v5a0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v5b0ext_IEs
{
 TknPres pres;
 NhuInterRATCellInfoInd interRATCellInfoInd;
} NhuSRNC_RelocationInfo_v5b0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v5c0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v5c0ext ue_RadioAccessCap_v5c0ext;
} NhuSRNC_RelocationInfo_v5c0ext_IEs;

typedef struct NhuIntraFreqRprtngCriteria_r6_ext
{
 TknPres pres;
 NhuEvent1j_r6 event;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuIntraFreqRprtngCriteria_r6_ext;


typedef TknStrBSXL NhuSRNC_RelocationInfo_v690ext_IEsueCapCont;

typedef TknStrBSXL NhuSRNC_RelocationInfo_v690ext_IEsueCapCont_RSC;

typedef TknStrBSXL NhuSRNC_RelocationInfo_v690ext_IEsueCapCont_UCI;
typedef struct NhuSRNC_RelocationInfo_v690ext_IEs
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v690ext_IEsueCapCont ueCapCont;
 NhuSRNC_RelocationInfo_v690ext_IEsueCapCont_RSC ueCapCont_RSC;
 NhuSRNC_RelocationInfo_v690ext_IEsueCapCont_UCI ueCapCont_UCI;
 NhuRAB_InfoSetupLst_r6_ext rab_InfoSetupLst;
 NhuMeasuredResultsOnRACHinterFreq measuredResultsOnRACHinterFreq;
 NhuMBMS_JoinedInfo_r6 mbms_JoinedInfo;
 NhuIntraFreqRprtngCriteria_r6_ext intraFreqRprtngCriteria;
} NhuSRNC_RelocationInfo_v690ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v6b0ext_IEs
{
 TknPres pres;
 NhuRAB_InfoSetupLst_v6b0ext rab_InfoSetupLstExt;
 NhuMBMS_SelectedServiceInfo mbmsSelectedServiceInfo;
} NhuSRNC_RelocationInfo_v6b0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v770ext_IEs
{
 TknPres pres;
 NhuThresholdSFN_GPS_TOW_us thresholdSFN_GPS_TOW_us;
 NhuT_305 srns_t_305;
} NhuSRNC_RelocationInfo_v770ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v7e0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v7e0ext ue_RadioAccessCap;
} NhuSRNC_RelocationInfo_v7e0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v7f0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v7f0ext ue_RadioAccessCap;
} NhuSRNC_RelocationInfo_v7f0ext_IEs;

typedef struct NhuCipheringStatusCNdomain_r4
{
 TknPres pres;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuCipheringStatus cipheringStatus;
 NhuSTART_Value start_Value;
} NhuCipheringStatusCNdomain_r4;

typedef struct NhuCipheringStatusLst_r4
{
 TknU16 noComp;
 NhuCipheringStatusCNdomain_r4 *member;
}NhuCipheringStatusLst_r4;


typedef TknStrBSXL NhuCipheringInfoPerRB_r4dl_HFN;

typedef TknStrBSXL NhuCipheringInfoPerRB_r4dl_UM_SN;

typedef TknStrBSXL NhuCipheringInfoPerRB_r4ul_HFN;
typedef struct NhuCipheringInfoPerRB_r4
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuCipheringInfoPerRB_r4dl_HFN dl_HFN;
 NhuCipheringInfoPerRB_r4dl_UM_SN dl_UM_SN;
 NhuCipheringInfoPerRB_r4ul_HFN ul_HFN;
} NhuCipheringInfoPerRB_r4;

typedef struct NhuCipheringInfoPerRB_Lst_r4
{
 TknU16 noComp;
 NhuCipheringInfoPerRB_r4 *member;
}NhuCipheringInfoPerRB_Lst_r4;


typedef TknU8 NhuPDCP_Cap_r4losslessSRNS_RelocationSupport;

typedef struct NhuPDCP_Cap_r4supportForRfc2507
{
 TknU8 choice;
 union {
  NhuMaxHcCtxtSpace supported;
 } val;
} NhuPDCP_Cap_r4supportForRfc2507;


typedef TknU32 NhuPDCP_Cap_r4supportForRfc3095supportedreverseCompressionDepth;

typedef struct NhuPDCP_Cap_r4supportForRfc3095supported
{
 TknPres pres;
 NhuMaxROHC_CtxtSessions_r4 maxROHC_CtxtSessions;
 NhuPDCP_Cap_r4supportForRfc3095supportedreverseCompressionDepth reverseCompressionDepth;
} NhuPDCP_Cap_r4supportForRfc3095supported;

typedef struct NhuPDCP_Cap_r4supportForRfc3095
{
 TknU8 choice;
 union {
  NhuPDCP_Cap_r4supportForRfc3095supported supported;
 } val;
} NhuPDCP_Cap_r4supportForRfc3095;

typedef struct NhuPDCP_Cap_r4
{
 TknPres pres;
 NhuPDCP_Cap_r4losslessSRNS_RelocationSupport losslessSRNS_RelocationSupport;
 NhuPDCP_Cap_r4supportForRfc2507 supportForRfc2507;
 NhuPDCP_Cap_r4supportForRfc3095 supportForRfc3095;
} NhuPDCP_Cap_r4;

typedef struct NhuRF_Cap_r4fddRF_Cap
{
 TknPres pres;
 NhuUE_PowerClassExt ue_PowerClass;
 NhuTxRxFrequencySeparation txRxFrequencySeparation;
} NhuRF_Cap_r4fddRF_Cap;

typedef struct NhuRF_Cap_r4tdd384_RF_Cap
{
 TknPres pres;
 NhuUE_PowerClassExt ue_PowerClass;
 NhuRadioFrequencyBandTDDLst radioFrequencyBandTDDLst;
 NhuChipRateCap chipRateCap;
} NhuRF_Cap_r4tdd384_RF_Cap;

typedef struct NhuRF_Cap_r4tdd128_RF_Cap
{
 TknPres pres;
 NhuUE_PowerClassExt ue_PowerClass;
 NhuRadioFrequencyBandTDDLst radioFrequencyBandTDDLst;
 NhuChipRateCap chipRateCap;
} NhuRF_Cap_r4tdd128_RF_Cap;

typedef struct NhuRF_Cap_r4
{
 TknPres pres;
 NhuRF_Cap_r4fddRF_Cap fddRF_Cap;
 NhuRF_Cap_r4tdd384_RF_Cap tdd384_RF_Cap;
 NhuRF_Cap_r4tdd128_RF_Cap tdd128_RF_Cap;
} NhuRF_Cap_r4;


typedef TknU32 NhuDL_PhysChCapFDD_r4maxNoDPCH_PDSCH_Codes;


typedef TknU8 NhuDL_PhysChCapFDD_r4supportForSF_512;


typedef TknU8 NhuDL_PhysChCapFDD_r4dummy;

typedef struct NhuDL_PhysChCapFDD_r4
{
 TknPres pres;
 NhuDL_PhysChCapFDD_r4maxNoDPCH_PDSCH_Codes maxNoDPCH_PDSCH_Codes;
 NhuMaxNoPhysChBitsReceived maxNoPhysChBitsReceived;
 NhuDL_PhysChCapFDD_r4supportForSF_512 supportForSF_512;
 NhuDL_PhysChCapFDD_r4dummy dummy;
 NhuSimultaneousSCCPCH_DPCH_Reception dummy2;
 NhuSupportOfDedicatedPilotsForChEstimation dummy3;
} NhuDL_PhysChCapFDD_r4;

typedef struct NhuPhysicalChannelCap_r4fddPhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapFDD_r4 downlinkPhysChCap;
 NhuUL_PhysChCapFDD uplinkPhysChCap;
} NhuPhysicalChannelCap_r4fddPhysChCap;

typedef struct NhuPhysicalChannelCap_r4tdd384_PhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapTDD downlinkPhysChCap;
 NhuUL_PhysChCapTDD uplinkPhysChCap;
} NhuPhysicalChannelCap_r4tdd384_PhysChCap;

typedef struct NhuPhysicalChannelCap_r4tdd128_PhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapTDD_LCR_r4 downlinkPhysChCap;
 NhuUL_PhysChCapTDD_LCR_r4 uplinkPhysChCap;
} NhuPhysicalChannelCap_r4tdd128_PhysChCap;

typedef struct NhuPhysicalChannelCap_r4
{
 TknPres pres;
 NhuPhysicalChannelCap_r4fddPhysChCap fddPhysChCap;
 NhuPhysicalChannelCap_r4tdd384_PhysChCap tdd384_PhysChCap;
 NhuPhysicalChannelCap_r4tdd128_PhysChCap tdd128_PhysChCap;
} NhuPhysicalChannelCap_r4;


typedef TknU8 NhuUE_Positioning_Cap_r4standaloneLocMethodsSupp;


typedef TknU8 NhuUE_Positioning_Cap_r4ue_BasedOTDOA_Supp;


typedef TknU8 NhuUE_Positioning_Cap_r4supportForUE_GPS_TimingOfCellFrames;


typedef TknU8 NhuUE_Positioning_Cap_r4supportForIPDL;


typedef TknU8 NhuUE_Positioning_Cap_r4rx_tx_TimeDifferenceTyp2Capable;


typedef enum enumNhuUE_Positioning_Cap_r4validity_CellPCH_UraPCH
{
 NhuUE_Positioning_Cap_r4validity_CellPCH_UraPCHtrueEnum
} EnumNhuUE_Positioning_Cap_r4validity_CellPCH_UraPCH;
typedef TknU32 NhuUE_Positioning_Cap_r4validity_CellPCH_UraPCH;


typedef enum enumNhuUE_Positioning_Cap_r4sfn_sfnTyp2Cap
{
 NhuUE_Positioning_Cap_r4sfn_sfnTyp2CaptrueEnum
} EnumNhuUE_Positioning_Cap_r4sfn_sfnTyp2Cap;
typedef TknU32 NhuUE_Positioning_Cap_r4sfn_sfnTyp2Cap;

typedef struct NhuUE_Positioning_Cap_r4
{
 TknPres pres;
 NhuUE_Positioning_Cap_r4standaloneLocMethodsSupp standaloneLocMethodsSupp;
 NhuUE_Positioning_Cap_r4ue_BasedOTDOA_Supp ue_BasedOTDOA_Supp;
 NhuNwAssistedGPS_Supp networkAssistedGPS_Supp;
 NhuUE_Positioning_Cap_r4supportForUE_GPS_TimingOfCellFrames supportForUE_GPS_TimingOfCellFrames;
 NhuUE_Positioning_Cap_r4supportForIPDL supportForIPDL;
 NhuUE_Positioning_Cap_r4rx_tx_TimeDifferenceTyp2Capable rx_tx_TimeDifferenceTyp2Capable;
 NhuUE_Positioning_Cap_r4validity_CellPCH_UraPCH validity_CellPCH_UraPCH;
 NhuUE_Positioning_Cap_r4sfn_sfnTyp2Cap sfn_sfnTyp2Cap;
} NhuUE_Positioning_Cap_r4;


typedef TknU8 NhuCompressedModeMeasCap_r4fdd_Measurements;


typedef TknU8 NhuCompressedModeMeasCap_r4tdd384_Measurements;


typedef TknU8 NhuCompressedModeMeasCap_r4tdd128_Measurements;


typedef TknU8 NhuCompressedModeMeasCap_r4multiCarrierMeasurements;

typedef struct NhuCompressedModeMeasCap_r4
{
 TknPres pres;
 NhuCompressedModeMeasCap_r4fdd_Measurements fdd_Measurements;
 NhuCompressedModeMeasCap_r4tdd384_Measurements tdd384_Measurements;
 NhuCompressedModeMeasCap_r4tdd128_Measurements tdd128_Measurements;
 NhuGSM_Measurements gsm_Measurements;
 NhuCompressedModeMeasCap_r4multiCarrierMeasurements multiCarrierMeasurements;
} NhuCompressedModeMeasCap_r4;

typedef struct NhuMeasurementCap_r4
{
 TknPres pres;
 NhuCompressedModeMeasCap_r4 downlinkCompressedMode;
 NhuCompressedModeMeasCap_r4 uplinkCompressedMode;
} NhuMeasurementCap_r4;

typedef struct NhuUE_RadioAccessCap_r4
{
 TknPres pres;
 NhuAccessStratumRlsIndicator accessStratumRlsIndicator;
 NhuPDCP_Cap_r4 pdcp_Cap;
 NhuRLC_Cap rlc_Cap;
 NhuTportChannelCap transportChannelCap;
 NhuRF_Cap_r4 rf_Cap;
 NhuPhysicalChannelCap_r4 physicalChannelCap;
 NhuUE_MultiModeRAT_Cap ue_MultiModeRAT_Cap;
 NhuSecCap securityCap;
 NhuUE_Positioning_Cap_r4 ue_positioning_Cap;
 NhuMeasurementCap_r4 measurementCap;
} NhuUE_RadioAccessCap_r4;

typedef struct NhuMeasurementCmdWithTyp_r4
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r4 setup;
 } val;
} NhuMeasurementCmdWithTyp_r4;

typedef struct NhuOngoingMeasRep_r4
{
 TknPres pres;
 NhuMeasurementIdentity measurementIdentity;
 NhuMeasurementCmdWithTyp_r4 measurementCmdWithTyp;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuAdditionalMeasurementID_Lst additionalMeasurementID_Lst;
} NhuOngoingMeasRep_r4;

typedef struct NhuOngoingMeasRepLst_r4
{
 TknU16 noComp;
 NhuOngoingMeasRep_r4 *member;
}NhuOngoingMeasRepLst_r4;

typedef struct NhuSRNC_RelocationInfo_r4_IEsdummyfdd
{
 TknPres pres;
 NhuCPCH_SetID dummy1;
 NhuDRAC_StaticInfoLst dummy2;
} NhuSRNC_RelocationInfo_r4_IEsdummyfdd;

typedef struct NhuSRNC_RelocationInfo_r4_IEsdummy
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r4_IEsdummyfdd fdd;
 } val;
} NhuSRNC_RelocationInfo_r4_IEsdummy;

typedef struct NhuSRNC_RelocationInfo_r4_IEs
{
 TknPres pres;
 NhuRB_Identity rb_IdentityForHOMsg;
 NhuStateOfRRC stateOfRRC;
 NhuStateOfRRC_Procedure stateOfRRC_Procedure;
 NhuCipheringStatusLst_r4 cipheringStatusLst;
 NhuCN_DomainIdentity latestConfiguredCN_Domain;
 NhuCalculationTimeForCiphering calculationTimeForCiphering;
 NhuCOUNT_C_Lst count_C_Lst;
 NhuCipheringInfoPerRB_Lst_r4 cipheringInfoPerRB_Lst;
 NhuIntegrityProtectionStatus integrityProtectionStatus;
 NhuSRB_SpecificIntegrityProtInfoLst srb_SpecificIntegrityProtInfo;
 NhuImplementationSpecificParams implementationSpecificParams;
 NhuU_RNTI u_RNTI;
 NhuC_RNTI c_RNTI;
 NhuUE_RadioAccessCap_r4 ue_RadioAccessCap;
 NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCap_ext;
 NhuUE_Positioning_LastKnownPos ue_Positioning_LastKnownPos;
 NhuUESpecificBehaviourInfo1idle uESpecificBehaviourInfo1idle;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
 NhuInterRAT_UE_RadioAccessCapLst ue_RATSpecificCap;
 NhuURA_Identity ura_Identity;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLstFull cn_DomainInfoLst;
 NhuOngoingMeasRepLst_r4 ongoingMeasRepLst;
 NhuPredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuSRB_InfoSetupLst srb_InfoLst;
 NhuRAB_InfoSetupLst_r4 rab_InfoLst;
 NhuUL_CmnTransChInfo_r4 ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst ul_TransChInfoLst;
 NhuSRNC_RelocationInfo_r4_IEsdummy dummy;
 NhuDL_CmnTransChInfo_r4 dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst_r4 dl_TransChInfoLst;
 Nhu3gMeasurementReport measurementReport;
 NhuFailCauseWithProtErr failureCause;
} NhuSRNC_RelocationInfo_r4_IEs;

typedef struct NhuTPC_Combination_Info
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
} NhuTPC_Combination_Info;

typedef struct NhuTPC_CombinationInfoLst
{
 TknU16 noComp;
 NhuTPC_Combination_Info *member;
}NhuTPC_CombinationInfoLst;

typedef struct NhuSRNC_RelocationInfo_v4d0ext_IEs
{
 TknPres pres;
 NhuTPC_CombinationInfoLst tpc_CombinationInfoLst;
} NhuSRNC_RelocationInfo_v4d0ext_IEs;


typedef enum enumNhuMaxHcCtxtSpace_r5
{
 NhuMaxHcCtxtSpace_r5dummyEnum,
 NhuMaxHcCtxtSpace_r5by1024Enum,
 NhuMaxHcCtxtSpace_r5by2048Enum,
 NhuMaxHcCtxtSpace_r5by4096Enum,
 NhuMaxHcCtxtSpace_r5by8192Enum,
 NhuMaxHcCtxtSpace_r5by16384Enum,
 NhuMaxHcCtxtSpace_r5by32768Enum,
 NhuMaxHcCtxtSpace_r5by65536Enum,
 NhuMaxHcCtxtSpace_r5by131072Enum
} EnumNhuMaxHcCtxtSpace_r5;
typedef TknU32 NhuMaxHcCtxtSpace_r5;


typedef TknU8 NhuPDCP_Cap_r5losslessSRNS_RelocationSupport;

typedef struct NhuPDCP_Cap_r5supportForRfc2507
{
 TknU8 choice;
 union {
  NhuMaxHcCtxtSpace_r5 supported;
 } val;
} NhuPDCP_Cap_r5supportForRfc2507;


typedef TknU32 NhuPDCP_Cap_r5supportForRfc3095supportedreverseCompressionDepth;


typedef TknU8 NhuPDCP_Cap_r5supportForRfc3095supportedsupportForRfc3095CtxtRelocation;

typedef struct NhuPDCP_Cap_r5supportForRfc3095supported
{
 TknPres pres;
 NhuMaxROHC_CtxtSessions_r4 maxROHC_CtxtSessions;
 NhuPDCP_Cap_r5supportForRfc3095supportedreverseCompressionDepth reverseCompressionDepth;
 NhuPDCP_Cap_r5supportForRfc3095supportedsupportForRfc3095CtxtRelocation supportForRfc3095CtxtRelocation;
} NhuPDCP_Cap_r5supportForRfc3095supported;

typedef struct NhuPDCP_Cap_r5supportForRfc3095
{
 TknU8 choice;
 union {
  NhuPDCP_Cap_r5supportForRfc3095supported supported;
 } val;
} NhuPDCP_Cap_r5supportForRfc3095;

typedef struct NhuPDCP_Cap_r5
{
 TknPres pres;
 NhuPDCP_Cap_r5losslessSRNS_RelocationSupport losslessSRNS_RelocationSupport;
 NhuPDCP_Cap_r5supportForRfc2507 supportForRfc2507;
 NhuPDCP_Cap_r5supportForRfc3095 supportForRfc3095;
} NhuPDCP_Cap_r5;


typedef enum enumNhuTotalRLC_AM_BufferSize_r5
{
 NhuTotalRLC_AM_BufferSize_r5kb10Enum,
 NhuTotalRLC_AM_BufferSize_r5kb50Enum,
 NhuTotalRLC_AM_BufferSize_r5kb100Enum,
 NhuTotalRLC_AM_BufferSize_r5kb150Enum,
 NhuTotalRLC_AM_BufferSize_r5kb200Enum,
 NhuTotalRLC_AM_BufferSize_r5kb300Enum,
 NhuTotalRLC_AM_BufferSize_r5kb400Enum,
 NhuTotalRLC_AM_BufferSize_r5kb500Enum,
 NhuTotalRLC_AM_BufferSize_r5kb750Enum,
 NhuTotalRLC_AM_BufferSize_r5kb1000Enum
} EnumNhuTotalRLC_AM_BufferSize_r5;
typedef TknU32 NhuTotalRLC_AM_BufferSize_r5;

typedef struct NhuRLC_Cap_r5
{
 TknPres pres;
 NhuTotalRLC_AM_BufferSize_r5 totalRLC_AM_BufferSize;
 NhuMaxRLC_WindowSize maximumRLC_WindowSize;
 NhuMaxAM_EntityNumberRLC_Cap maximumAM_EntityNumber;
} NhuRLC_Cap_r5;


typedef TknU32 NhuDL_PhysChCapFDD_r5maxNoDPCH_PDSCH_Codes;


typedef TknU8 NhuDL_PhysChCapFDD_r5supportForSF_512;


typedef TknU8 NhuDL_PhysChCapFDD_r5dummy;


typedef TknU8 NhuDL_PhysChCapFDD_r5fdd_hspdschsupporteddummy;


typedef TknU8 NhuDL_PhysChCapFDD_r5fdd_hspdschsupporteddummy2;

typedef struct NhuDL_PhysChCapFDD_r5fdd_hspdschsupported
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category hsdsch_physical_layer_category;
 NhuDL_PhysChCapFDD_r5fdd_hspdschsupporteddummy dummy;
 NhuDL_PhysChCapFDD_r5fdd_hspdschsupporteddummy2 dummy2;
} NhuDL_PhysChCapFDD_r5fdd_hspdschsupported;

typedef struct NhuDL_PhysChCapFDD_r5fdd_hspdsch
{
 TknU8 choice;
 union {
  NhuDL_PhysChCapFDD_r5fdd_hspdschsupported supported;
 } val;
} NhuDL_PhysChCapFDD_r5fdd_hspdsch;

typedef struct NhuDL_PhysChCapFDD_r5
{
 TknPres pres;
 NhuDL_PhysChCapFDD_r5maxNoDPCH_PDSCH_Codes maxNoDPCH_PDSCH_Codes;
 NhuMaxNoPhysChBitsReceived maxNoPhysChBitsReceived;
 NhuDL_PhysChCapFDD_r5supportForSF_512 supportForSF_512;
 NhuDL_PhysChCapFDD_r5dummy dummy;
 NhuSimultaneousSCCPCH_DPCH_Reception dummy2;
 NhuSupportOfDedicatedPilotsForChEstimation dummy3;
 NhuDL_PhysChCapFDD_r5fdd_hspdsch fdd_hspdsch;
} NhuDL_PhysChCapFDD_r5;


typedef TknU8 NhuDL_PhysChCapTDD_r5supportOfPDSCH;

typedef struct NhuDL_PhysChCapTDD_r5tdd384_hspdsch
{
 TknU8 choice;
 union {
  NhuHSDSCH_physical_layer_category supported;
 } val;
} NhuDL_PhysChCapTDD_r5tdd384_hspdsch;

typedef struct NhuDL_PhysChCapTDD_r5
{
 TknPres pres;
 NhuMaxTS_PerFrame maxTS_PerFrame;
 NhuMaxPhysChPerFrame maxPhysChPerFrame;
 NhuMinimumSF_DL minimumSF;
 NhuDL_PhysChCapTDD_r5supportOfPDSCH supportOfPDSCH;
 NhuMaxPhysChPerTS maxPhysChPerTS;
 NhuDL_PhysChCapTDD_r5tdd384_hspdsch tdd384_hspdsch;
} NhuDL_PhysChCapTDD_r5;


typedef TknU8 NhuDL_PhysChCapTDD_LCR_r5supportOfPDSCH;


typedef TknU8 NhuDL_PhysChCapTDD_LCR_r5supportOf8PSK;

typedef struct NhuDL_PhysChCapTDD_LCR_r5tdd128_hspdsch
{
 TknU8 choice;
 union {
  NhuHSDSCH_physical_layer_category supported;
 } val;
} NhuDL_PhysChCapTDD_LCR_r5tdd128_hspdsch;

typedef struct NhuDL_PhysChCapTDD_LCR_r5
{
 TknPres pres;
 NhuMaxTS_PerSubFrame_r4 maxTS_PerSubFrame;
 NhuMaxPhysChPerSubFrame_r4 maxPhysChPerFrame;
 NhuMinimumSF_DL minimumSF;
 NhuDL_PhysChCapTDD_LCR_r5supportOfPDSCH supportOfPDSCH;
 NhuMaxPhysChPerTS maxPhysChPerTS;
 NhuDL_PhysChCapTDD_LCR_r5supportOf8PSK supportOf8PSK;
 NhuDL_PhysChCapTDD_LCR_r5tdd128_hspdsch tdd128_hspdsch;
} NhuDL_PhysChCapTDD_LCR_r5;

typedef struct NhuPhysicalChannelCap_r5fddPhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapFDD_r5 downlinkPhysChCap;
 NhuUL_PhysChCapFDD uplinkPhysChCap;
} NhuPhysicalChannelCap_r5fddPhysChCap;

typedef struct NhuPhysicalChannelCap_r5tdd384_PhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapTDD_r5 downlinkPhysChCap;
 NhuUL_PhysChCapTDD uplinkPhysChCap;
} NhuPhysicalChannelCap_r5tdd384_PhysChCap;

typedef struct NhuPhysicalChannelCap_r5tdd128_PhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapTDD_LCR_r5 downlinkPhysChCap;
 NhuUL_PhysChCapTDD_LCR_r4 uplinkPhysChCap;
} NhuPhysicalChannelCap_r5tdd128_PhysChCap;

typedef struct NhuPhysicalChannelCap_r5
{
 TknPres pres;
 NhuPhysicalChannelCap_r5fddPhysChCap fddPhysChCap;
 NhuPhysicalChannelCap_r5tdd384_PhysChCap tdd384_PhysChCap;
 NhuPhysicalChannelCap_r5tdd128_PhysChCap tdd128_PhysChCap;
} NhuPhysicalChannelCap_r5;


typedef TknU8 NhuUE_MultiModeRAT_Cap_r5supportOfUTRAN_ToGERAN_NACC;

typedef struct NhuUE_MultiModeRAT_Cap_r5
{
 TknPres pres;
 NhuMultiRAT_Cap multiRAT_CapLst;
 NhuMultiModeCap multiModeCap;
 NhuUE_MultiModeRAT_Cap_r5supportOfUTRAN_ToGERAN_NACC supportOfUTRAN_ToGERAN_NACC;
} NhuUE_MultiModeRAT_Cap_r5;

typedef struct NhuUE_RadioAccessCap_r5
{
 TknPres pres;
 NhuAccessStratumRlsIndicator accessStratumRlsIndicator;
 NhuDL_CapWithSimultaneousHS_DSCHConfig dl_CapWithSimultaneousHS_DSCHConfig;
 NhuPDCP_Cap_r5 pdcp_Cap;
 NhuRLC_Cap_r5 rlc_Cap;
 NhuTportChannelCap transportChannelCap;
 NhuRF_Cap_r4 rf_Cap;
 NhuPhysicalChannelCap_r5 physicalChannelCap;
 NhuUE_MultiModeRAT_Cap_r5 ue_MultiModeRAT_Cap;
 NhuSecCap securityCap;
 NhuUE_Positioning_Cap_r4 ue_positioning_Cap;
 NhuMeasurementCap_r4 measurementCap;
} NhuUE_RadioAccessCap_r5;

typedef struct NhuInterRAT_UE_RadioAccessCapLst_r5
{
 TknPres pres;
 NhuInterRAT_UE_RadioAccessCapLst interRAT_UE_RadioAccessCap;
 NhuGERANIu_RadioAccessCap geranIu_RadioAccessCap;
} NhuInterRAT_UE_RadioAccessCapLst_r5;

typedef struct NhuOngoingMeasRep_r5measurementCmd_v590ext
{
 TknU8 choice;
 union {
  NhuIntra_FreqEventCriteriaLst_v590ext intra_frequency;
  NhuInter_FreqEventCriteriaLst_v590ext inter_frequency;
 } val;
} NhuOngoingMeasRep_r5measurementCmd_v590ext;

typedef struct NhuOngoingMeasRep_r5
{
 TknPres pres;
 NhuMeasurementIdentity measurementIdentity;
 NhuMeasurementCmdWithTyp_r4 measurementCmdWithTyp;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuAdditionalMeasurementID_Lst additionalMeasurementID_Lst;
 NhuOngoingMeasRep_r5measurementCmd_v590ext measurementCmd_v590ext;
 NhuIntraFreqRprtngCriteria_1b_r5 intraFreqRprtngCriteria_1b_r5;
 NhuIntraFreqEvent_1d_r5 intraFreqEvent_1d_r5;
} NhuOngoingMeasRep_r5;

typedef struct NhuOngoingMeasRepLst_r5
{
 TknU16 noComp;
 NhuOngoingMeasRep_r5 *member;
}NhuOngoingMeasRepLst_r5;

typedef struct NhuSRNC_RelocationInfo_r5_IEsdummyfdd
{
 TknPres pres;
 NhuCPCH_SetID dummy1;
 NhuDRAC_StaticInfoLst dummy2;
} NhuSRNC_RelocationInfo_r5_IEsdummyfdd;

typedef struct NhuSRNC_RelocationInfo_r5_IEsdummy
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r5_IEsdummyfdd fdd;
 } val;
} NhuSRNC_RelocationInfo_r5_IEsdummy;

typedef struct NhuSRNC_RelocationInfo_r5_IEs
{
 TknPres pres;
 NhuRB_Identity rb_IdentityForHOMsg;
 NhuStateOfRRC stateOfRRC;
 NhuStateOfRRC_Procedure stateOfRRC_Procedure;
 NhuCipheringStatusLst_r4 cipheringStatusLst;
 NhuCN_DomainIdentity latestConfiguredCN_Domain;
 NhuCalculationTimeForCiphering calculationTimeForCiphering;
 NhuCOUNT_C_Lst count_C_Lst;
 NhuCipheringInfoPerRB_Lst_r4 cipheringInfoPerRB_Lst;
 NhuIntegrityProtectionStatus integrityProtectionStatus;
 NhuSRB_SpecificIntegrityProtInfoLst srb_SpecificIntegrityProtInfo;
 NhuImplementationSpecificParams implementationSpecificParams;
 NhuU_RNTI u_RNTI;
 NhuC_RNTI c_RNTI;
 NhuUE_RadioAccessCap_r5 ue_RadioAccessCap;
 NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCap_ext;
 NhuUE_Positioning_LastKnownPos ue_Positioning_LastKnownPos;
 NhuUESpecificBehaviourInfo1idle uESpecificBehaviourInfo1idle;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
 NhuInterRAT_UE_RadioAccessCapLst_r5 ue_RATSpecificCap;
 NhuURA_Identity ura_Identity;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLstFull cn_DomainInfoLst;
 NhuOngoingMeasRepLst_r5 ongoingMeasRepLst;
 NhuPredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuSRB_InfoSetupLst_r5 srb_InfoLst;
 NhuRAB_InfoSetupLst_r5 rab_InfoLst;
 NhuUL_CmnTransChInfo_r4 ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst ul_TransChInfoLst;
 NhuSRNC_RelocationInfo_r5_IEsdummy dummy;
 NhuDL_CmnTransChInfo_r4 dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst_r5 dl_TransChInfoLst;
 NhuTPC_CombinationInfoLst tpc_CombinationInfoLst;
 Nhu3gMeasurementReport measurementReport;
 NhuFailCauseWithProtErr failureCause;
} NhuSRNC_RelocationInfo_r5_IEs;


typedef TknU8 NhuPDCP_Cap_r6losslessSRNS_RelocationSupport;


typedef enum enumNhuPDCP_Cap_r6losslessDLRLC_PDUSizeChange
{
 NhuPDCP_Cap_r6losslessDLRLC_PDUSizeChangetrueEnum
} EnumNhuPDCP_Cap_r6losslessDLRLC_PDUSizeChange;
typedef TknU32 NhuPDCP_Cap_r6losslessDLRLC_PDUSizeChange;

typedef struct NhuPDCP_Cap_r6supportForRfc2507
{
 TknU8 choice;
 union {
  NhuMaxHcCtxtSpace_r5 supported;
 } val;
} NhuPDCP_Cap_r6supportForRfc2507;


typedef TknU32 NhuPDCP_Cap_r6supportForRfc3095supportedreverseCompressionDepth;


typedef TknU8 NhuPDCP_Cap_r6supportForRfc3095supportedsupportForRfc3095CtxtRelocation;

typedef struct NhuPDCP_Cap_r6supportForRfc3095supported
{
 TknPres pres;
 NhuMaxROHC_CtxtSessions_r4 maxROHC_CtxtSessions;
 NhuPDCP_Cap_r6supportForRfc3095supportedreverseCompressionDepth reverseCompressionDepth;
 NhuPDCP_Cap_r6supportForRfc3095supportedsupportForRfc3095CtxtRelocation supportForRfc3095CtxtRelocation;
} NhuPDCP_Cap_r6supportForRfc3095supported;

typedef struct NhuPDCP_Cap_r6supportForRfc3095
{
 TknU8 choice;
 union {
  NhuPDCP_Cap_r6supportForRfc3095supported supported;
 } val;
} NhuPDCP_Cap_r6supportForRfc3095;

typedef struct NhuPDCP_Cap_r6
{
 TknPres pres;
 NhuPDCP_Cap_r6losslessSRNS_RelocationSupport losslessSRNS_RelocationSupport;
 NhuPDCP_Cap_r6losslessDLRLC_PDUSizeChange losslessDLRLC_PDUSizeChange;
 NhuPDCP_Cap_r6supportForRfc2507 supportForRfc2507;
 NhuPDCP_Cap_r6supportForRfc3095 supportForRfc3095;
} NhuPDCP_Cap_r6;

typedef struct NhuUE_RadioAccessCap_r6
{
 TknPres pres;
 NhuAccessStratumRlsIndicator accessStratumRlsIndicator;
 NhuDL_CapWithSimultaneousHS_DSCHConfig dl_CapWithSimultaneousHS_DSCHConfig;
 NhuPDCP_Cap_r6 pdcp_Cap;
 NhuRLC_Cap_r5 rlc_Cap;
 NhuTportChannelCap transportChannelCap;
 NhuRF_Cap_r4 rf_Cap;
 NhuPhysicalChannelCap_r5 physicalChannelCap;
 NhuUE_MultiModeRAT_Cap_r5 ue_MultiModeRAT_Cap;
 NhuSecCap securityCap;
 NhuUE_Positioning_Cap_r4 ue_positioning_Cap;
 NhuMeasurementCap_r4 measurementCap;
} NhuUE_RadioAccessCap_r6;

typedef struct NhuMeasurementCmdWithTyp_r6
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r6 setup;
 } val;
} NhuMeasurementCmdWithTyp_r6;

typedef struct NhuOngoingMeasRep_r6
{
 TknPres pres;
 NhuMeasurementIdentity measurementIdentity;
 NhuMeasurementCmdWithTyp_r6 measurementCmdWithTyp;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuAdditionalMeasurementID_Lst additionalMeasurementID_Lst;
} NhuOngoingMeasRep_r6;

typedef struct NhuOngoingMeasRepLst_r6
{
 TknU16 noComp;
 NhuOngoingMeasRep_r6 *member;
}NhuOngoingMeasRepLst_r6;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r6_IEsueCapCont;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r6_IEsueCapCont_RSC;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r6_IEsueCapCont_UCI;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r6_IEsmeasurementReport;
typedef struct NhuSRNC_RelocationInfo_r6_IEs
{
 TknPres pres;
 NhuRB_Identity rb_IdentityForHOMsg;
 NhuStateOfRRC stateOfRRC;
 NhuStateOfRRC_Procedure stateOfRRC_Procedure;
 NhuCipheringStatusLst_r4 cipheringStatusLst;
 NhuCN_DomainIdentity latestConfiguredCN_Domain;
 NhuCalculationTimeForCiphering calculationTimeForCiphering;
 NhuCOUNT_C_Lst count_C_Lst;
 NhuCipheringInfoPerRB_Lst_r4 cipheringInfoPerRB_Lst;
 NhuIntegrityProtectionStatus integrityProtectionStatus;
 NhuSRB_SpecificIntegrityProtInfoLst srb_SpecificIntegrityProtInfo;
 NhuImplementationSpecificParams implementationSpecificParams;
 NhuU_RNTI u_RNTI;
 NhuC_RNTI c_RNTI;
 NhuUE_RadioAccessCap_r6 ue_RadioAccessCap;
 NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCap_ext;
 NhuUE_Positioning_LastKnownPos ue_Positioning_LastKnownPos;
 NhuUESpecificBehaviourInfo1idle uESpecificBehaviourInfo1idle;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
 NhuSRNC_RelocationInfo_r6_IEsueCapCont ueCapCont;
 NhuSRNC_RelocationInfo_r6_IEsueCapCont_RSC ueCapCont_RSC;
 NhuSRNC_RelocationInfo_r6_IEsueCapCont_UCI ueCapCont_UCI;
 NhuInterRAT_UE_RadioAccessCapLst_r5 ue_RATSpecificCap;
 NhuURA_Identity ura_Identity;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLstFull cn_DomainInfoLst;
 NhuOngoingMeasRepLst_r6 ongoingMeasRepLst;
 NhuInterRATCellInfoInd interRATCellInfoInd;
 NhuPredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuSRB_InfoSetupLst_r6 srb_InfoLst;
 NhuRAB_InfoSetupLst_r6 rab_InfoLst;
 NhuUL_CmnTransChInfo_r4 ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst_r6 ul_TransChInfoLst;
 NhuDL_CmnTransChInfo_r4 dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst_r5 dl_TransChInfoLst;
 NhuTPC_CombinationInfoLst tpc_CombinationInfoLst;
 NhuStoredCompressedModeInfo storedCompressedModeInfo;
 NhuSRNC_RelocationInfo_r6_IEsmeasurementReport measurementReport;
 NhuFailCauseWithProtErr failureCause;
 NhuMBMS_JoinedInfo_r6 mbms_JoinedInfo;
} NhuSRNC_RelocationInfo_r6_IEs;

typedef struct NhuSRNC_RelocationInfo_v820ext_IEs
{
 TknPres pres;
 NhuRAB_InfoSetupLst_v820ext rab_InfoLst;
} NhuSRNC_RelocationInfo_v820ext_IEs;


typedef TknU32 NhuE_RGCH_Combination_Inforg_CombinationIdx;

typedef struct NhuE_RGCH_Combination_Info
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuE_RGCH_Combination_Inforg_CombinationIdx rg_CombinationIdx;
} NhuE_RGCH_Combination_Info;

typedef struct NhuE_RGCH_CombinationInfoLst
{
 TknU16 noComp;
 NhuE_RGCH_Combination_Info *member;
}NhuE_RGCH_CombinationInfoLst;

typedef struct NhuSRNC_RelocationInfo_v860ext_IEs
{
 TknPres pres;
 NhuE_RGCH_CombinationInfoLst e_RGCH_CombinationInfoLst;
} NhuSRNC_RelocationInfo_v860ext_IEs;

typedef struct NhuMeasurementCmdWithTyp_r7
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r7 setup;
 } val;
} NhuMeasurementCmdWithTyp_r7;

typedef struct NhuOngoingMeasRep_r7
{
 TknPres pres;
 NhuMeasurementIdentity measurementIdentity;
 NhuMeasurementCmdWithTyp_r7 measurementCmdWithTyp;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuAdditionalMeasurementID_Lst additionalMeasurementID_Lst;
} NhuOngoingMeasRep_r7;

typedef struct NhuOngoingMeasRepLst_r7
{
 TknU16 noComp;
 NhuOngoingMeasRep_r7 *member;
}NhuOngoingMeasRepLst_r7;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r7_IEsueCapCont;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r7_IEsueCapCont_RSC;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r7_IEsueCapCont_UCI;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r7_IEsmeasurementReport;
typedef struct NhuSRNC_RelocationInfo_r7_IEs
{
 TknPres pres;
 NhuRB_Identity rb_IdentityForHOMsg;
 NhuStateOfRRC stateOfRRC;
 NhuStateOfRRC_Procedure stateOfRRC_Procedure;
 NhuCipheringStatusLst_r4 cipheringStatusLst;
 NhuCN_DomainIdentity latestConfiguredCN_Domain;
 NhuCalculationTimeForCiphering calculationTimeForCiphering;
 NhuCOUNT_C_Lst count_C_Lst;
 NhuCipheringInfoPerRB_Lst_r4 cipheringInfoPerRB_Lst;
 NhuIntegrityProtectionStatus integrityProtectionStatus;
 NhuSRB_SpecificIntegrityProtInfoLst srb_SpecificIntegrityProtInfo;
 NhuImplementationSpecificParams implementationSpecificParams;
 NhuU_RNTI u_RNTI;
 NhuC_RNTI c_RNTI;
 NhuUE_RadioAccessCap_r6 ue_RadioAccessCap;
 NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCap_ext;
 NhuUE_Positioning_LastKnownPos ue_Positioning_LastKnownPos;
 NhuUESpecificBehaviourInfo1idle uESpecificBehaviourInfo1idle;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
 NhuSRNC_RelocationInfo_r7_IEsueCapCont ueCapCont;
 NhuSRNC_RelocationInfo_r7_IEsueCapCont_RSC ueCapCont_RSC;
 NhuSRNC_RelocationInfo_r7_IEsueCapCont_UCI ueCapCont_UCI;
 NhuInterRAT_UE_RadioAccessCapLst_r5 ue_RATSpecificCap;
 NhuURA_Identity ura_Identity;
 NhuT_305 srns_t_305;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLstFull cn_DomainInfoLst;
 NhuOngoingMeasRepLst_r7 ongoingMeasRepLst;
 NhuInterRATCellInfoInd interRATCellInfoInd;
 NhuPredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuSRB_InfoSetupLst_r7 srb_InfoLst;
 NhuRAB_InfoSetupLst_r7 rab_InfoLst;
 NhuUL_CmnTransChInfo_r4 ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst_r7 ul_TransChInfoLst;
 NhuDL_CmnTransChInfo_r4 dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst_r7 dl_TransChInfoLst;
 NhuTPC_CombinationInfoLst tpc_CombinationInfoLst;
 NhuStoredCompressedModeInfo storedCompressedModeInfo;
 NhuSRNC_RelocationInfo_r7_IEsmeasurementReport measurementReport;
 NhuFailCauseWithProtErr failureCause;
 NhuMBMS_JoinedInfo_r6 mbms_JoinedInfo;
 NhuMBMS_SelectedServiceInfo mbmsSelectedServiceInfo;
} NhuSRNC_RelocationInfo_r7_IEs;

typedef struct NhuMeasurementCmdWithTyp_r8
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r8 setup;
 } val;
} NhuMeasurementCmdWithTyp_r8;

typedef struct NhuOngoingMeasRep_r8
{
 TknPres pres;
 NhuMeasurementIdentity measurementIdentity;
 NhuMeasurementCmdWithTyp_r8 measurementCmdWithTyp;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuAdditionalMeasurementID_Lst additionalMeasurementID_Lst;
} NhuOngoingMeasRep_r8;

typedef struct NhuOngoingMeasRepLst_r8
{
 TknU16 noComp;
 NhuOngoingMeasRep_r8 *member;
}NhuOngoingMeasRepLst_r8;

typedef struct NhuStoredTGP_Sequence_r8current_tgps_Statusactive
{
 TknPres pres;
 NhuTGCFN tgcfn;
} NhuStoredTGP_Sequence_r8current_tgps_Statusactive;

typedef struct NhuStoredTGP_Sequence_r8current_tgps_Status
{
 TknU8 choice;
 union {
  NhuStoredTGP_Sequence_r8current_tgps_Statusactive active;
 } val;
} NhuStoredTGP_Sequence_r8current_tgps_Status;

typedef struct NhuStoredTGP_Sequence_r8
{
 TknPres pres;
 NhuTGPSI tgpsi;
 NhuStoredTGP_Sequence_r8current_tgps_Status current_tgps_Status;
 NhuTGPS_CfgParams_r8 tgps_CfgParams;
} NhuStoredTGP_Sequence_r8;

typedef struct NhuStoredTGP_SequenceLst_r8
{
 TknU16 noComp;
 NhuStoredTGP_Sequence_r8 *member;
}NhuStoredTGP_SequenceLst_r8;

typedef struct NhuStoredCompressedModeInfo_r8
{
 TknPres pres;
 NhuStoredTGP_SequenceLst_r8 storedTGP_SequenceLst;
 NhuCodeChangeStatusLst codeChangeStatusLst;
} NhuStoredCompressedModeInfo_r8;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r8_IEsueCapCont;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r8_IEsueCapCont_RSC;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r8_IEsueCapCont_UCI;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r8_IEsmeasurementReport;
typedef struct NhuSRNC_RelocationInfo_r8_IEs
{
 TknPres pres;
 NhuRB_Identity rb_IdentityForHOMsg;
 NhuStateOfRRC stateOfRRC;
 NhuStateOfRRC_Procedure stateOfRRC_Procedure;
 NhuCipheringStatusLst_r4 cipheringStatusLst;
 NhuCN_DomainIdentity latestConfiguredCN_Domain;
 NhuCalculationTimeForCiphering calculationTimeForCiphering;
 NhuCOUNT_C_Lst count_C_Lst;
 NhuCipheringInfoPerRB_Lst_r4 cipheringInfoPerRB_Lst;
 NhuIntegrityProtectionStatus integrityProtectionStatus;
 NhuSRB_SpecificIntegrityProtInfoLst srb_SpecificIntegrityProtInfo;
 NhuImplementationSpecificParams implementationSpecificParams;
 NhuU_RNTI u_RNTI;
 NhuC_RNTI c_RNTI;
 NhuUE_RadioAccessCap_r6 ue_RadioAccessCap;
 NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCap_ext;
 NhuUE_Positioning_LastKnownPos ue_Positioning_LastKnownPos;
 NhuUESpecificBehaviourInfo1idle uESpecificBehaviourInfo1idle;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
 NhuSRNC_RelocationInfo_r8_IEsueCapCont ueCapCont;
 NhuSRNC_RelocationInfo_r8_IEsueCapCont_RSC ueCapCont_RSC;
 NhuSRNC_RelocationInfo_r8_IEsueCapCont_UCI ueCapCont_UCI;
 NhuInterRAT_UE_RadioAccessCapLst_r5 ue_RATSpecificCap;
 NhuURA_Identity ura_Identity;
 NhuT_305 srns_t_305;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLstFull cn_DomainInfoLst;
 NhuOngoingMeasRepLst_r8 ongoingMeasRepLst;
 NhuInterRATCellInfoInd interRATCellInfoInd;
 NhuPredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuSRB_InfoSetupLst_r8 srb_InfoLst;
 NhuRAB_InfoSetupLst_r8 rab_InfoLst;
 NhuUL_CmnTransChInfo_r4 ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst_r8 ul_TransChInfoLst;
 NhuDL_CmnTransChInfo_r4 dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst_r7 dl_TransChInfoLst;
 NhuTPC_CombinationInfoLst tpc_CombinationInfoLst;
 NhuE_RGCH_CombinationInfoLst e_RGCH_CombinationInfoLst;
 NhuStoredCompressedModeInfo_r8 storedCompressedModeInfo;
 NhuSRNC_RelocationInfo_r8_IEsmeasurementReport measurementReport;
 NhuFailCauseWithProtErr failureCause;
 NhuUE_HistoryInfo ue_HistoryInfo;
 NhuMBMS_JoinedInfo_r6 mbms_JoinedInfo;
 NhuMBMS_SelectedServiceInfo mbmsSelectedServiceInfo;
} NhuSRNC_RelocationInfo_r8_IEs;

typedef struct NhuSRNC_RelocationInfo_v8d0ext_IEs
{
 TknPres pres;
 NhuPDCP_ROHC_TgtMode pdcp_ROHC_TgtMode;
} NhuSRNC_RelocationInfo_v8d0ext_IEs;

typedef struct NhuMeasurementCmdWithTyp_r9
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r9 setup;
 } val;
} NhuMeasurementCmdWithTyp_r9;

typedef struct NhuOngoingMeasRep_r9
{
 TknPres pres;
 NhuMeasurementIdentity measurementIdentity;
 NhuMeasurementCmdWithTyp_r9 measurementCmdWithTyp;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuAdditionalMeasurementID_Lst additionalMeasurementID_Lst;
} NhuOngoingMeasRep_r9;

typedef struct NhuOngoingMeasRepLst_r9
{
 TknU16 noComp;
 NhuOngoingMeasRep_r9 *member;
}NhuOngoingMeasRepLst_r9;

typedef struct NhuTPC_Combination_Info_r9
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
} NhuTPC_Combination_Info_r9;

typedef struct NhuTPC_CombinationInfoLst_r9
{
 TknU16 noComp;
 NhuTPC_Combination_Info_r9 *member;
}NhuTPC_CombinationInfoLst_r9;


typedef TknU32 NhuE_RGCH_Combination_Info_r9rg_CombinationIdx;

typedef struct NhuE_RGCH_Combination_Info_r9
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuE_RGCH_Combination_Info_r9rg_CombinationIdx rg_CombinationIdx;
} NhuE_RGCH_Combination_Info_r9;

typedef struct NhuE_RGCH_CombinationInfoLst_r9
{
 TknU16 noComp;
 NhuE_RGCH_Combination_Info_r9 *member;
}NhuE_RGCH_CombinationInfoLst_r9;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r9_IEsueCapCont;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r9_IEsueCapCont_RSC;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r9_IEsueCapCont_UCI;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r9_IEsmeasurementReport;
typedef struct NhuSRNC_RelocationInfo_r9_IEs
{
 TknPres pres;
 NhuRB_Identity rb_IdentityForHOMsg;
 NhuStateOfRRC stateOfRRC;
 NhuStateOfRRC_Procedure stateOfRRC_Procedure;
 NhuCipheringStatusLst_r4 cipheringStatusLst;
 NhuCN_DomainIdentity latestConfiguredCN_Domain;
 NhuCalculationTimeForCiphering calculationTimeForCiphering;
 NhuCOUNT_C_Lst count_C_Lst;
 NhuCipheringInfoPerRB_Lst_r4 cipheringInfoPerRB_Lst;
 NhuIntegrityProtectionStatus integrityProtectionStatus;
 NhuSRB_SpecificIntegrityProtInfoLst srb_SpecificIntegrityProtInfo;
 NhuImplementationSpecificParams implementationSpecificParams;
 NhuU_RNTI u_RNTI;
 NhuC_RNTI c_RNTI;
 NhuUE_RadioAccessCap_r6 ue_RadioAccessCap;
 NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCap_ext;
 NhuUE_Positioning_LastKnownPos ue_Positioning_LastKnownPos;
 NhuUESpecificBehaviourInfo1idle uESpecificBehaviourInfo1idle;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
 NhuSRNC_RelocationInfo_r9_IEsueCapCont ueCapCont;
 NhuSRNC_RelocationInfo_r9_IEsueCapCont_RSC ueCapCont_RSC;
 NhuSRNC_RelocationInfo_r9_IEsueCapCont_UCI ueCapCont_UCI;
 NhuInterRAT_UE_RadioAccessCapLst_r5 ue_RATSpecificCap;
 NhuURA_Identity ura_Identity;
 NhuT_305 srns_t_305;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLstFull cn_DomainInfoLst;
 NhuOngoingMeasRepLst_r9 ongoingMeasRepLst;
 NhuInterRATCellInfoInd interRATCellInfoInd;
 NhuPredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuSRB_InfoSetupLst_r8 srb_InfoLst;
 NhuRAB_InfoSetupLst_r8 rab_InfoLst;
 NhuUL_CmnTransChInfo_r4 ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst_r8 ul_TransChInfoLst;
 NhuDL_CmnTransChInfo_r4 dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst_r9 dl_TransChInfoLst;
 NhuTPC_CombinationInfoLst tpc_CombinationInfoLst;
 NhuE_RGCH_CombinationInfoLst e_RGCH_CombinationInfoLst;
 NhuStoredCompressedModeInfo_r8 storedCompressedModeInfo;
 NhuTPC_CombinationInfoLst_r9 secondary_tpc_CombinationInfoLst;
 NhuE_RGCH_CombinationInfoLst_r9 secondary_e_RGCH_CombinationInfoLst;
 NhuSRNC_RelocationInfo_r9_IEsmeasurementReport measurementReport;
 NhuFailCauseWithProtErr failureCause;
 NhuUE_HistoryInfo ue_HistoryInfo;
 NhuMBMS_JoinedInfo_r6 mbms_JoinedInfo;
 NhuMBMS_SelectedServiceInfo mbmsSelectedServiceInfo;
} NhuSRNC_RelocationInfo_r9_IEs;

typedef struct NhuOngoingMeasRep_v970ext_IEs
{
 TknPres pres;
 NhuMeasurementIdentity_r9 measurementIdentity;
 NhuAdditionalMeasurementID_Lst_r9 additionalMeasurementID_Lst;
} NhuOngoingMeasRep_v970ext_IEs;

typedef struct NhuOngoingMeasRepLst_v970ext_IE
{
 TknU16 noComp;
 NhuOngoingMeasRep_v970ext_IEs *member;
}NhuOngoingMeasRepLst_v970ext_IE;

typedef struct NhuSRNC_RelocationInfo_v970ext_IEs
{
 TknPres pres;
 NhuOngoingMeasRepLst_v970ext_IE ongoingMeasRepLst;
} NhuSRNC_RelocationInfo_v970ext_IEs;

typedef struct NhuMeasurementCmdWithTyp_r10
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r10 setup;
 } val;
} NhuMeasurementCmdWithTyp_r10;

typedef struct NhuOngoingMeasRep_r10
{
 TknPres pres;
 NhuMeasurementIdentity measurementIdentity;
 NhuMeasurementCmdWithTyp_r10 measurementCmdWithTyp;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuAdditionalMeasurementID_Lst additionalMeasurementID_Lst;
} NhuOngoingMeasRep_r10;

typedef struct NhuOngoingMeasRepLst_r10
{
 TknU16 noComp;
 NhuOngoingMeasRep_r10 *member;
}NhuOngoingMeasRepLst_r10;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r10_IEsueCapCont;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r10_IEsueCapCont_RSC;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r10_IEsueCapCont_UCI;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r10_IEsmeasurementReport;
typedef struct NhuSRNC_RelocationInfo_r10_IEs
{
 TknPres pres;
 NhuRB_Identity rb_IdentityForHOMsg;
 NhuStateOfRRC stateOfRRC;
 NhuStateOfRRC_Procedure stateOfRRC_Procedure;
 NhuCipheringStatusLst_r4 cipheringStatusLst;
 NhuCN_DomainIdentity latestConfiguredCN_Domain;
 NhuCalculationTimeForCiphering calculationTimeForCiphering;
 NhuCOUNT_C_Lst count_C_Lst;
 NhuCipheringInfoPerRB_Lst_r4 cipheringInfoPerRB_Lst;
 NhuIntegrityProtectionStatus integrityProtectionStatus;
 NhuSRB_SpecificIntegrityProtInfoLst srb_SpecificIntegrityProtInfo;
 NhuImplementationSpecificParams implementationSpecificParams;
 NhuU_RNTI u_RNTI;
 NhuC_RNTI c_RNTI;
 NhuUE_RadioAccessCap_r6 ue_RadioAccessCap;
 NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCap_ext;
 NhuUE_Positioning_LastKnownPos ue_Positioning_LastKnownPos;
 NhuUESpecificBehaviourInfo1idle uESpecificBehaviourInfo1idle;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
 NhuSRNC_RelocationInfo_r10_IEsueCapCont ueCapCont;
 NhuSRNC_RelocationInfo_r10_IEsueCapCont_RSC ueCapCont_RSC;
 NhuSRNC_RelocationInfo_r10_IEsueCapCont_UCI ueCapCont_UCI;
 NhuInterRAT_UE_RadioAccessCapLst_r5 ue_RATSpecificCap;
 NhuURA_Identity ura_Identity;
 NhuT_305 srns_t_305;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLstFull cn_DomainInfoLst;
 NhuOngoingMeasRepLst_r10 ongoingMeasRepLst;
 NhuInterRATCellInfoInd interRATCellInfoInd;
 NhuPredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuSRB_InfoSetupLst_r8 srb_InfoLst;
 NhuRAB_InfoSetupLst_r8 rab_InfoLst;
 NhuPDCP_ROHC_TgtMode pdcp_ROHC_TgtMode;
 NhuUL_CmnTransChInfo_r4 ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst_r8 ul_TransChInfoLst;
 NhuDL_CmnTransChInfo_r4 dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst_r9 dl_TransChInfoLst;
 NhuTPC_CombinationInfoLst tpc_CombinationInfoLst;
 NhuE_RGCH_CombinationInfoLst e_RGCH_CombinationInfoLst;
 NhuStoredCompressedModeInfo_r8 storedCompressedModeInfo;
 NhuTPC_CombinationInfoLst_r9 secondary_tpc_CombinationInfoLst;
 NhuE_RGCH_CombinationInfoLst_r9 secondary_e_RGCH_CombinationInfoLst;
 NhuSRNC_RelocationInfo_r10_IEsmeasurementReport measurementReport;
 NhuFailCauseWithProtErr failureCause;
 NhuUE_HistoryInfo ue_HistoryInfo;
 NhuMBMS_JoinedInfo_r6 mbms_JoinedInfo;
 NhuMBMS_SelectedServiceInfo mbmsSelectedServiceInfo;
} NhuSRNC_RelocationInfo_r10_IEs;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r11_IEsueCapCont;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r11_IEsueCapCont_RSC;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r11_IEsueCapCont_UCI;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r11_IEsmeasurementReport;
typedef struct NhuSRNC_RelocationInfo_r11_IEs
{
 TknPres pres;
 NhuRB_Identity rb_IdentityForHOMsg;
 NhuStateOfRRC stateOfRRC;
 NhuStateOfRRC_Procedure stateOfRRC_Procedure;
 NhuCipheringStatusLst_r4 cipheringStatusLst;
 NhuCN_DomainIdentity latestConfiguredCN_Domain;
 NhuCalculationTimeForCiphering calculationTimeForCiphering;
 NhuCOUNT_C_Lst count_C_Lst;
 NhuCipheringInfoPerRB_Lst_r4 cipheringInfoPerRB_Lst;
 NhuIntegrityProtectionStatus integrityProtectionStatus;
 NhuSRB_SpecificIntegrityProtInfoLst srb_SpecificIntegrityProtInfo;
 NhuImplementationSpecificParams implementationSpecificParams;
 NhuU_RNTI u_RNTI;
 NhuC_RNTI c_RNTI;
 NhuUE_RadioAccessCap_r6 ue_RadioAccessCap;
 NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCap_ext;
 NhuUE_Positioning_LastKnownPos ue_Positioning_LastKnownPos;
 NhuUESpecificBehaviourInfo1idle uESpecificBehaviourInfo1idle;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
 NhuSRNC_RelocationInfo_r11_IEsueCapCont ueCapCont;
 NhuSRNC_RelocationInfo_r11_IEsueCapCont_RSC ueCapCont_RSC;
 NhuSRNC_RelocationInfo_r11_IEsueCapCont_UCI ueCapCont_UCI;
 NhuInterRAT_UE_RadioAccessCapLst_r5 ue_RATSpecificCap;
 NhuURA_Identity ura_Identity;
 NhuT_305 srns_t_305;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLstFull cn_DomainInfoLst;
 NhuOngoingMeasRepLst_r10 ongoingMeasRepLst;
 NhuInterRATCellInfoInd interRATCellInfoInd;
 NhuPredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuSRB_InfoSetupLst_r8 srb_InfoLst;
 NhuRAB_InfoSetupLst_r8 rab_InfoLst;
 NhuPDCP_ROHC_TgtMode pdcp_ROHC_TgtMode;
 NhuUL_CmnTransChInfo_r4 ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst_r8 ul_TransChInfoLst;
 NhuDL_CmnTransChInfo_r4 dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst_r11 dl_TransChInfoLst;
 NhuTPC_CombinationInfoLst tpc_CombinationInfoLst;
 NhuE_RGCH_CombinationInfoLst e_RGCH_CombinationInfoLst;
 NhuStoredCompressedModeInfo_r8 storedCompressedModeInfo;
 NhuTPC_CombinationInfoLst_r9 secondary_tpc_CombinationInfoLst;
 NhuE_RGCH_CombinationInfoLst_r9 secondary_e_RGCH_CombinationInfoLst;
 NhuSRNC_RelocationInfo_r11_IEsmeasurementReport measurementReport;
 NhuFailCauseWithProtErr failureCause;
 NhuUE_HistoryInfo ue_HistoryInfo;
 NhuMBMS_JoinedInfo_r6 mbms_JoinedInfo;
 NhuMBMS_SelectedServiceInfo mbmsSelectedServiceInfo;
} NhuSRNC_RelocationInfo_r11_IEs;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnssRNC_RelocationInfo_r3_add_ext;
typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsnonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7f0ext_IEs sRNC_RelocationInfo_v7f0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7e0ext_IEs sRNC_RelocationInfo_v7e0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns v7f0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v770ext_IEs sRNC_RelocationInfo_v770ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtns v7e0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v6b0ext_IEs sRNC_RelocationInfo_v6b0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtns v770NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v690ext_IEs sRNC_RelocationInfo_v690ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns v6b0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v5c0ext_IEs sRNC_RelocationInfo_v5c0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtns v690NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v5b0ext_IEs sRNC_RelocationInfo_v5b0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtns v5c0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v5a0ext_IEs sRNC_RelocationInfo_v5a0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtns v5b0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v590ext_IEs sRNC_RelocationInfo_v590ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtns v5a0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v4b0ext_IEs sRNC_RelocationInfo_v4b0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtns v590NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v3g0ext_IEs sRNC_RelocationInfo_v3g0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtns v4b0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v3d0ext_IEs sRNC_RelocationInfo_v3d0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnssRNC_RelocationInfo_r3_add_ext sRNC_RelocationInfo_r3_add_ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtns v3g0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v3c0ext_IEs sRNC_RelocationInfo_v3c0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtns laterNonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v3b0ext_IEs sRNC_RelocationInfo_v3b0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtns v3c0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v3a0ext_IEs sRNC_RelocationInfo_v3a0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtns v3b0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v390ext_IEs sRNC_RelocationInfo_v390ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtns v3a0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v380ext_IEs sRNC_RelocationInfo_v380ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtns v390NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3
{
 TknPres pres;
 NhuSRNC_RelocationInfo_r3_IEs sRNC_RelocationInfo_r3;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtns v380NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnssRNC_RelocationInfo_r4_add_ext;
typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsnonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7f0ext_IEs sRNC_RelocationInfo_v7f0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7e0ext_IEs sRNC_RelocationInfo_v7e0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns v7f0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v770ext_IEs sRNC_RelocationInfo_v770ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtns v7e0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v6b0ext_IEs sRNC_RelocationInfo_v6b0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtns v770NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v690ext_IEs sRNC_RelocationInfo_v690ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns v6b0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v5c0ext_IEs sRNC_RelocationInfo_v5c0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtns v690NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v5b0ext_IEs sRNC_RelocationInfo_v5b0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtns v5c0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v5a0ext_IEs sRNC_RelocationInfo_v5a0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtns v5b0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v590ext_IEs sRNC_RelocationInfo_v590ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtns v5a0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v4d0ext_IEs sRNC_RelocationInfo_v4d0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnssRNC_RelocationInfo_r4_add_ext sRNC_RelocationInfo_r4_add_ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtns v590NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4
{
 TknPres pres;
 NhuSRNC_RelocationInfo_r4_IEs sRNC_RelocationInfo_r4;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtns v4d0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5sRNC_RelocationInfo_r5_add_ext;
typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsnonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7f0ext_IEs sRNC_RelocationInfo_v7f0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7e0ext_IEs sRNC_RelocationInfo_v7e0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns v7f0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v770ext_IEs sRNC_RelocationInfo_v770ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtns v7e0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v6b0ext_IEs sRNC_RelocationInfo_v6b0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtns v770NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v690ext_IEs sRNC_RelocationInfo_v690ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns v6b0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v5c0ext_IEs sRNC_RelocationInfo_v5c0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtns v690NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v5b0ext_IEs sRNC_RelocationInfo_v5b0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtns v5c0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v5a0ext_IEs sRNC_RelocationInfo_v5a0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtns v5b0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5
{
 TknPres pres;
 NhuSRNC_RelocationInfo_r5_IEs sRNC_RelocationInfo_r5;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5sRNC_RelocationInfo_r5_add_ext sRNC_RelocationInfo_r5_add_ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtns v5a0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6sRNC_RelocationInfo_r6_add_ext;
typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtnsv820NonCriticalExtnsv860NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtnsv820NonCriticalExtnsv860NonCriticalExtnsnonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtnsv820NonCriticalExtnsv860NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v860ext_IEs sRNC_RelocationInfo_v860ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtnsv820NonCriticalExtnsv860NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtnsv820NonCriticalExtnsv860NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtnsv820NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v820ext_IEs srnc_RelocationInfo_v820ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtnsv820NonCriticalExtnsv860NonCriticalExtns v860NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtnsv820NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v770ext_IEs sRNC_RelocationInfo_v770ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtnsv820NonCriticalExtns v820NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v6b0ext_IEs sRNC_RelocationInfo_v6b0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtns v770NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6
{
 TknPres pres;
 NhuSRNC_RelocationInfo_r6_IEs sRNC_RelocationInfo_r6;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6sRNC_RelocationInfo_r6_add_ext sRNC_RelocationInfo_r6_add_ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtns v6b0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7sRNC_RelocationInfo_r7_add_ext;
typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7v820NonCriticalExtnsv860NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7v820NonCriticalExtnsv860NonCriticalExtnsnonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7v820NonCriticalExtnsv860NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v860ext_IEs sRNC_RelocationInfo_v860ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7v820NonCriticalExtnsv860NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7v820NonCriticalExtnsv860NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7v820NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v820ext_IEs srnc_RelocationInfo_v820ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7v820NonCriticalExtnsv860NonCriticalExtns v860NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7v820NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7
{
 TknPres pres;
 NhuSRNC_RelocationInfo_r7_IEs sRNC_RelocationInfo_r7;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7sRNC_RelocationInfo_r7_add_ext sRNC_RelocationInfo_r7_add_ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7v820NonCriticalExtns v820NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8sRNC_RelocationInfo_r8_add_ext;
typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtnsv7f0NonCriticalExtnsv8d0NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtnsv7f0NonCriticalExtnsv8d0NonCriticalExtnsnonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtnsv7f0NonCriticalExtnsv8d0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v8d0ext_IEs sRNC_RelocationInfo_v8d0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtnsv7f0NonCriticalExtnsv8d0NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtnsv7f0NonCriticalExtnsv8d0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtnsv7f0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7f0ext_IEs sRNC_RelocationInfo_v7f0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtnsv7f0NonCriticalExtnsv8d0NonCriticalExtns v8d0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtnsv7f0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7e0ext_IEs sRNC_RelocationInfo_v7e0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtnsv7f0NonCriticalExtns v7f0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8
{
 TknPres pres;
 NhuSRNC_RelocationInfo_r8_IEs sRNC_RelocationInfo_r8;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8sRNC_RelocationInfo_r8_add_ext sRNC_RelocationInfo_r8_add_ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtns v7e0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9sRNC_RelocationInfo_r9_add_ext;
typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9v8d0NonCriticalExtnsv970NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9v8d0NonCriticalExtnsv970NonCriticalExtnsnonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9v8d0NonCriticalExtnsv970NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v970ext_IEs sRNC_RelocationInfo_v970ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9v8d0NonCriticalExtnsv970NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9v8d0NonCriticalExtnsv970NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9v8d0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v8d0ext_IEs sRNC_RelocationInfo_v8d0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9v8d0NonCriticalExtnsv970NonCriticalExtns v970NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9v8d0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9
{
 TknPres pres;
 NhuSRNC_RelocationInfo_r9_IEs sRNC_RelocationInfo_r9;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9sRNC_RelocationInfo_r9_add_ext sRNC_RelocationInfo_r9_add_ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9v8d0NonCriticalExtns v8d0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr10sRNC_RelocationInfo_r10_add_ext;
typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr10nonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr10nonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr10
{
 TknPres pres;
 NhuSRNC_RelocationInfo_r10_IEs sRNC_RelocationInfo_r10;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr10sRNC_RelocationInfo_r10_add_ext sRNC_RelocationInfo_r10_add_ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr10nonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr10;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr11sRNC_RelocationInfo_r11_add_ext;
typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr11nonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr11nonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr11
{
 TknPres pres;
 NhuSRNC_RelocationInfo_r11_IEs sRNC_RelocationInfo_r11;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr11sRNC_RelocationInfo_r11_add_ext sRNC_RelocationInfo_r11_add_ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr11nonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr11;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr11 r11;
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns criticalExtns;
 } val;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr10 r10;
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns criticalExtns;
 } val;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9 r9;
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns criticalExtns;
 } val;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtns
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8 r8;
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns criticalExtns;
 } val;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtns
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7 r7;
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtns criticalExtns;
 } val;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtns
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6 r6;
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtns criticalExtns;
 } val;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtns
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5 r5;
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtns criticalExtns;
 } val;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3later_than_r3r4 r4;
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtns criticalExtns;
 } val;
} NhuSRNC_RelocationInfo_r3later_than_r3;

typedef struct NhuSRNC_RelocationInfo_r3
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3r3 r3;
  NhuSRNC_RelocationInfo_r3later_than_r3 later_than_r3;
 } val;
} NhuSRNC_RelocationInfo_r3;


typedef TknU32 NhuDL_RFC3095_Ctxtrfc3095_Ctxt_Identity;


typedef enum enumNhuDL_RFC3095_Ctxtdl_mode
{
 NhuDL_RFC3095_Ctxtdl_modeuEnum,
 NhuDL_RFC3095_Ctxtdl_modeoEnum,
 NhuDL_RFC3095_Ctxtdl_moderEnum
} EnumNhuDL_RFC3095_Ctxtdl_mode;
typedef TknU32 NhuDL_RFC3095_Ctxtdl_mode;


typedef TknStrOSXL NhuDL_RFC3095_Ctxtdl_ref_ir;

typedef TknU32 NhuDL_RFC3095_Ctxtdl_ref_time;


typedef TknU32 NhuDL_RFC3095_Ctxtdl_curr_time;


typedef TknU32 NhuDL_RFC3095_Ctxtdl_syn_offset_id;


typedef TknU32 NhuDL_RFC3095_Ctxtdl_syn_slope_ts;


typedef TknU8 NhuDL_RFC3095_Ctxtdl_dyn_changed;

typedef struct NhuDL_RFC3095_Ctxt
{
 TknPres pres;
 NhuDL_RFC3095_Ctxtrfc3095_Ctxt_Identity rfc3095_Ctxt_Identity;
 NhuDL_RFC3095_Ctxtdl_mode dl_mode;
 NhuDL_RFC3095_Ctxtdl_ref_ir dl_ref_ir;
 NhuDL_RFC3095_Ctxtdl_ref_time dl_ref_time;
 NhuDL_RFC3095_Ctxtdl_curr_time dl_curr_time;
 NhuDL_RFC3095_Ctxtdl_syn_offset_id dl_syn_offset_id;
 NhuDL_RFC3095_Ctxtdl_syn_slope_ts dl_syn_slope_ts;
 NhuDL_RFC3095_Ctxtdl_dyn_changed dl_dyn_changed;
} NhuDL_RFC3095_Ctxt;


typedef TknU32 NhuUL_RFC3095_Ctxtrfc3095_Ctxt_Identity;


typedef enum enumNhuUL_RFC3095_Ctxtul_mode
{
 NhuUL_RFC3095_Ctxtul_modeuEnum,
 NhuUL_RFC3095_Ctxtul_modeoEnum,
 NhuUL_RFC3095_Ctxtul_moderEnum
} EnumNhuUL_RFC3095_Ctxtul_mode;
typedef TknU32 NhuUL_RFC3095_Ctxtul_mode;


typedef TknStrOSXL NhuUL_RFC3095_Ctxtul_ref_ir;

typedef TknU32 NhuUL_RFC3095_Ctxtul_ref_time;


typedef TknU32 NhuUL_RFC3095_Ctxtul_curr_time;


typedef TknU32 NhuUL_RFC3095_Ctxtul_syn_offset_id;


typedef TknU32 NhuUL_RFC3095_Ctxtul_syn_slope_ts;


typedef TknU32 NhuUL_RFC3095_Ctxtul_ref_sn_1;

typedef struct NhuUL_RFC3095_Ctxt
{
 TknPres pres;
 NhuUL_RFC3095_Ctxtrfc3095_Ctxt_Identity rfc3095_Ctxt_Identity;
 NhuUL_RFC3095_Ctxtul_mode ul_mode;
 NhuUL_RFC3095_Ctxtul_ref_ir ul_ref_ir;
 NhuUL_RFC3095_Ctxtul_ref_time ul_ref_time;
 NhuUL_RFC3095_Ctxtul_curr_time ul_curr_time;
 NhuUL_RFC3095_Ctxtul_syn_offset_id ul_syn_offset_id;
 NhuUL_RFC3095_Ctxtul_syn_slope_ts ul_syn_slope_ts;
 NhuUL_RFC3095_Ctxtul_ref_sn_1 ul_ref_sn_1;
} NhuUL_RFC3095_Ctxt;

typedef struct NhuRFC3095_Ctxt_LstMember
{
 TknPres pres;
 NhuDL_RFC3095_Ctxt dl_RFC3095_Ctxt;
 NhuUL_RFC3095_Ctxt ul_RFC3095_Ctxt;
} NhuRFC3095_Ctxt_LstMember;

typedef struct NhuRFC3095_Ctxt_Lst
{
 TknU16 noComp;
 NhuRFC3095_Ctxt_LstMember *member;
}NhuRFC3095_Ctxt_Lst;

typedef struct NhuRFC3095_CtxtInfo
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRFC3095_Ctxt_Lst rfc3095_Ctxt_Lst;
} NhuRFC3095_CtxtInfo;

typedef struct NhuRFC3095_CtxtInfoLst_r5
{
 TknU16 noComp;
 NhuRFC3095_CtxtInfo *member;
}NhuRFC3095_CtxtInfoLst_r5;

typedef struct NhuRFC3095_CtxtInfo_r5r5nonCriticalExtns
{
 TknPres pres;
} NhuRFC3095_CtxtInfo_r5r5nonCriticalExtns;

typedef struct NhuRFC3095_CtxtInfo_r5r5
{
 TknPres pres;
 NhuRFC3095_CtxtInfoLst_r5 rFC3095_CtxtInfoLst_r5;
 NhuRFC3095_CtxtInfo_r5r5nonCriticalExtns nonCriticalExtns;
} NhuRFC3095_CtxtInfo_r5r5;

typedef struct NhuRFC3095_CtxtInfo_r5criticalExtns
{
 TknPres pres;
} NhuRFC3095_CtxtInfo_r5criticalExtns;

typedef struct NhuRFC3095_CtxtInfo_r5
{
 TknU8 choice;
 union {
  NhuRFC3095_CtxtInfo_r5r5 r5;
  NhuRFC3095_CtxtInfo_r5criticalExtns criticalExtns;
 } val;
} NhuRFC3095_CtxtInfo_r5;

typedef struct NhuToTgtRNC_Cont
{
 TknU8 choice;
 union {
  NhuInterRATHovrInfoWithInterRATCapabilities_r3 interRATHovrInfo;



  NhuRFC3095_CtxtInfo_r5 rfc3095_CtxtInfo;
 } val;
} NhuToTgtRNC_Cont;

typedef struct NhuSRNC_RelocationInfo_v3h0ext_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSRNC_RelocationInfo_v3h0ext_IEsnonCriticalExtn;

typedef struct NhuSRNC_RelocationInfo_v3h0ext_IEs
{
 TknPres pres;
 NhuTPC_CombinationInfoLst tpc_CombinationInfoLst;
 NhuSRNC_RelocationInfo_v3h0ext_IEsnonCriticalExtn nonCriticalExtn;
} NhuSRNC_RelocationInfo_v3h0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_r6_add_ext_IEsv7f0NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r6_add_ext_IEsv7f0NonCriticalExtnsnonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r6_add_ext_IEsv7f0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7f0ext_IEs sRNC_RelocationInfo_v7f0ext;
 NhuSRNC_RelocationInfo_r6_add_ext_IEsv7f0NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r6_add_ext_IEsv7f0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r6_add_ext_IEs
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7e0ext_IEs sRNC_RelocationInfo_v7e0ext;
 NhuSRNC_RelocationInfo_r6_add_ext_IEsv7f0NonCriticalExtns v7f0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r6_add_ext_IEs;

typedef struct NhuSRNC_RelocationInfo_r7_add_ext_IEsv7f0NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r7_add_ext_IEsv7f0NonCriticalExtnsnonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r7_add_ext_IEsv7f0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7f0ext_IEs sRNC_RelocationInfo_v7f0ext;
 NhuSRNC_RelocationInfo_r7_add_ext_IEsv7f0NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r7_add_ext_IEsv7f0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r7_add_ext_IEs
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7e0ext_IEs sRNC_RelocationInfo_v7e0ext;
 NhuSRNC_RelocationInfo_r7_add_ext_IEsv7f0NonCriticalExtns v7f0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r7_add_ext_IEs;





typedef struct nhuRbId
{
   U8 rbId;
   U8 rbTyp;
}NhuRbId;





typedef U8 NhuPdcpId;





typedef U16 NhuCrnti;






typedef U16 NhuCellId;





typedef enum nhuRbType
{
   NHU_RB_COMMON,
   NHU_RB_DEDICATED
} NhuRbType;





typedef enum nhuTargetRatTyp
{
   NHU_RAT_TGT_UTRA,
   NHU_RAT_TGT_GERAN,
   NHU_RAT_TGT_CDMA2K_1XRTT,
   NHU_RAT_TGT_CDMA2K_HRPD
} NhuTargetRatTyp;






typedef enum nhuSIWindowLen
{
   NHU_SI_WINDOW_LEN_MS1,
   NHU_SI_WINDOW_LEN_MS2,
   NHU_SI_WINDOW_LEN_MS5,
   NHU_SI_WINDOW_LEN_MS10,
   NHU_SI_WINDOW_LEN_MS15,
   NHU_SI_WINDOW_LEN_MS20,
   NHU_SI_WINDOW_LEN_MS40
} NhuSIWindowLen;





typedef enum nhuSIPeriodicity
{
   NHU_SI_PERIOD_RF8,
   NHU_SI_PERIOD_RF16,
   NHU_SI_PERIOD_RF32,
   NHU_SI_PERIOD_RF64,
   NHU_SI_PERIOD_RF128,
   NHU_SI_PERIOD_RF256,
   NHU_SI_PERIOD_RF512
} NhuSIPeriodicity;





typedef enum nhuAntPortCnt
{
   NHU_ANT_PORT_CNT1 = 1,
   NHU_ANT_PORT_CNT2 = 2,
   NHU_ANT_PORT_CNT4 = 4
} NhuAntPortCnt;





typedef enum nhuAntTxMode
{
   NHU_ANT_TM1 = 1,
   NHU_ANT_TM2,
   NHU_ANT_TM3,
   NHU_ANT_TM4,
   NHU_ANT_TM5,
   NHU_ANT_TM6,
   NHU_ANT_TM7
} NhuAntTxMode;





typedef enum nhuAprdCqiRptMode
{
   NHU_CQI_RPT_MODE_APERD_12,
   NHU_CQI_RPT_MODE_APERD_20,
   NHU_CQI_RPT_MODE_APERD_22,
   NHU_CQI_RPT_MODE_APERD_30,
   NHU_CQI_RPT_MODE_APERD_31
} NhuAprdCqiRptMode;





typedef enum nhuPrdCqiRptMode
{
   NHU_CQI_RPT_MODE_PERD_10,
   NHU_CQI_RPT_MODE_PERD_11,
   NHU_CQI_RPT_MODE_PERD_20,
   NHU_CQI_RPT_MODE_PERD_21
} NhuPrdCqiRptMode;






typedef enum nhuCqiRptPeriodicity
{
   NHU_CQI_PERIODICITY_MS2 = 2,
   NHU_CQI_PERIODICITY_MS5 = 5,
   NHU_CQI_PERIODICITY_MS10 = 10,
   NHU_CQI_PERIODICITY_MS20 = 20,
   NHU_CQI_PERIODICITY_MS32 = 32,
   NHU_CQI_PERIODICITY_MS40 = 40,
   NHU_CQI_PERIODICITY_MS64 = 64,
   NHU_CQI_PERIODICITY_MS80 = 80,
   NHU_CQI_PERIODICITY_MS128 = 128,
   NHU_CQI_PERIODICITY_MS160 = 160,
   NHU_CQI_PERIODICITY_MS256 = 256,
   NHU_CQI_PERIODICITY_MSOFF
} NhuCqiRptPeriodicity;





typedef enum nhuLogChPbr
{
   NHU_LOGCH_PBR_KB0 = 0,
   NHU_LOGCH_PBR_KB8 = 8,
   NHU_LOGCH_PBR_KB16 = 16 ,
   NHU_LOGCH_PBR_KB32 = 32,
   NHU_LOGCH_PBR_KB64 = 64,
   NHU_LOGCH_PBR_KB128 = 128,
   NHU_LOGCH_PBR_KB256 = 256,
   NHU_LOGCH_PBR_INF
} NhuLogChPbr;





typedef enum nhuDlSemiPerSchedIntvl
{
   NHU_DL_SEMIP_SCHED_INT_SF10,
   NHU_DL_SEMIP_SCHED_INT_SF20,
   NHU_DL_SEMIP_SCHED_INT_SF32,
   NHU_DL_SEMIP_SCHED_INT_SF40,
   NHU_DL_SEMIP_SCHED_INT_SF64,
   NHU_DL_SEMIP_SCHED_INT_SF80,
   NHU_DL_SEMIP_SCHED_INT_SF128,
   NHU_DL_SEMIP_SCHED_INT_SF160,
   NHU_DL_SEMIP_SCHED_INT_SF320,
   NHU_DL_SEMIP_SCHED_INT_SF640
} NhuDlSemiPerSchedIntvl;





typedef enum nhuUlSemiPerSchedIntvl
{
   NHU_UL_SEMIP_SCHED_INT_SF10,
   NHU_UL_SEMIP_SCHED_INT_SF20,
   NHU_UL_SEMIP_SCHED_INT_SF32,
   NHU_UL_SEMIP_SCHED_INT_SF40,
   NHU_UL_SEMIP_SCHED_INT_SF64,
   NHU_UL_SEMIP_SCHED_INT_SF80,
   NHU_UL_SEMIP_SCHED_INT_SF128,
   NHU_UL_SEMIP_SCHED_INT_SF160,
   NHU_UL_SEMIP_SCHED_INT_SF320,
   NHU_UL_SEMIP_SCHED_INT_SF640
} NhuUlSemiPerSchedIntvl;





typedef enum nhuMaxHarqTx
{
   NHU_MAX_HARQ_TX_N1 = 1,
   NHU_MAX_HARQ_TX_N2 = 2,
   NHU_MAX_HARQ_TX_N3 = 3,
   NHU_MAX_HARQ_TX_N4 = 4,
   NHU_MAX_HARQ_TX_N5 = 5,
   NHU_MAX_HARQ_TX_N6 = 6,
   NHU_MAX_HARQ_TX_N7 = 7,
   NHU_MAX_HARQ_TX_N8 = 8,
   NHU_MAX_HARQ_TX_N10 = 10,
   NHU_MAX_HARQ_TX_N12 = 12,
   NHU_MAX_HARQ_TX_N16 = 16,
   NHU_MAX_HARQ_TX_N20 = 20,
   NHU_MAX_HARQ_TX_N24 = 24,
   NHU_MAX_HARQ_TX_N28 = 28
} NhuMaxHarqTx;





typedef enum nhuPrdPHRTmr
{
   NHU_PRD_PHR_TMR_SF10,
   NHU_PRD_PHR_TMR_SF20,
   NHU_PRD_PHR_TMR_SF50,
   NHU_PRD_PHR_TMR_SF100,
   NHU_PRD_PHR_TMR_SF200,
   NHU_PRD_PHR_TMR_SF1000,
   NHU_PRD_PHR_TMR_INF
} NhuPrdPHRTmr;





typedef enum nhuProhPHRTmr
{
   NHU_PROH_PHR_TMR_SF10,
   NHU_PROH_PHR_TMR_SF100,
   NHU_PROH_PHR_TMR_SF200,
   NHU_PROH_PHR_TMR_SF1000
} NhuProhPHRTmr;





typedef enum nhuPdcpDiscardTmr
{
   NHU_PDCP_DISCARD_TMR_MS50 = 50,
   NHU_PDCP_DISCARD_TMR_MS100 = 100,
   NHU_PDCP_DISCARD_TMR_MS150 = 150,
   NHU_PDCP_DISCARD_TMR_MS300 = 300,
   NHU_PDCP_DISCARD_TMR_MS500 = 500,
   NHU_PDCP_DISCARD_TMR_MS750 = 750,
   NHU_PDCP_DISCARD_TMR_MS1500 = 1500,
   NHU_PDCP_DISCARD_TMR_MSINF = -1
} NhuPdcpDiscardTmr;





typedef enum nhuPdcpFlushTmr
{
   NHU_PDCP_FLUSH_TMR_MS10,
   NHU_PDCP_FLUSH_TMR_MS50,
   NHU_PDCP_FLUSH_TMR_MS100,
   NHU_PDCP_FLUSH_TMR_MS150,
   NHU_PDCP_FLUSH_TMR_MS200,
   NHU_PDCP_FLUSH_TMR_MS250,
   NHU_PDCP_FLUSH_TMR_MS500
} NhuPdcpFlushTmr;





typedef enum nhuPdcpSnSize
{
   NHU_PDCP_SN_SIZE_7BITS = 7,
   NHU_PDCP_SN_SIZE_12BITS = 12,
   NHU_PDCP_SN_SIZE_15BITS = 15
} NhuPdcpSnSize;





typedef enum nhuPucchDeltaShift
{
   NHU_PUCCH_DS1 = 1,
   NHU_PUCCH_DS2,
   NHU_PUCCH_DS3
} NhuPucchDeltaShift;







typedef enum nhuMaxRetxThres
{
   NHU_MAX_RETX_THRES_T1 = 1,
   NHU_MAX_RETX_THRES_T2 = 2,
   NHU_MAX_RETX_THRES_T3 = 3,
   NHU_MAX_RETX_THRES_T4 = 4,
   NHU_MAX_RETX_THRES_T6 = 6,
   NHU_MAX_RETX_THRES_T8 = 8,
   NHU_MAX_RETX_THRES_T16 = 16,
   NHU_MAX_RETX_THRES_T32 = 32
} NhuMaxRetxThres;
typedef enum nhuTPollReTx
{
   NHU_TPOLL_RETX_MS5 = 5,
   NHU_TPOLL_RETX_MS10 = 10,
   NHU_TPOLL_RETX_MS15 = 15,
   NHU_TPOLL_RETX_MS20 = 20,
   NHU_TPOLL_RETX_MS25 = 25,
   NHU_TPOLL_RETX_MS30 = 30,
   NHU_TPOLL_RETX_MS35 = 35,
   NHU_TPOLL_RETX_MS40 = 40,
   NHU_TPOLL_RETX_MS45 = 45,
   NHU_TPOLL_RETX_MS50 = 50,
   NHU_TPOLL_RETX_MS55 = 55,
   NHU_TPOLL_RETX_MS60 = 60,
   NHU_TPOLL_RETX_MS65 = 65,
   NHU_TPOLL_RETX_MS70 = 70,
   NHU_TPOLL_RETX_MS75 = 75,
   NHU_TPOLL_RETX_MS80 = 80,
   NHU_TPOLL_RETX_MS85 = 85,
   NHU_TPOLL_RETX_MS90 = 90,
   NHU_TPOLL_RETX_MS95 = 95,
   NHU_TPOLL_RETX_MS100 = 100,
   NHU_TPOLL_RETX_MS105 = 105,
   NHU_TPOLL_RETX_MS110 = 110,
   NHU_TPOLL_RETX_MS115 = 115,
   NHU_TPOLL_RETX_MS120 = 120,
   NHU_TPOLL_RETX_MS125 = 125,
   NHU_TPOLL_RETX_MS130 = 130,
   NHU_TPOLL_RETX_MS135 = 135,
   NHU_TPOLL_RETX_MS140 = 140,
   NHU_TPOLL_RETX_MS145 = 145,
   NHU_TPOLL_RETX_MS150 = 150,
   NHU_TPOLL_RETX_MS155 = 155,
   NHU_TPOLL_RETX_MS160 = 160,
   NHU_TPOLL_RETX_MS165 = 165,
   NHU_TPOLL_RETX_MS170 = 170,
   NHU_TPOLL_RETX_MS175 = 175,
   NHU_TPOLL_RETX_MS180 = 180,
   NHU_TPOLL_RETX_MS185 = 185,
   NHU_TPOLL_RETX_MS190 = 190,
   NHU_TPOLL_RETX_MS195 = 195,
   NHU_TPOLL_RETX_MS200 = 200,
   NHU_TPOLL_RETX_MS205 = 205,
   NHU_TPOLL_RETX_MS210 = 210,
   NHU_TPOLL_RETX_MS215 = 215,
   NHU_TPOLL_RETX_MS220 = 220,
   NHU_TPOLL_RETX_MS225 = 225,
   NHU_TPOLL_RETX_MS230 = 230,
   NHU_TPOLL_RETX_MS235 = 235,
   NHU_TPOLL_RETX_MS240 = 240,
   NHU_TPOLL_RETX_MS245 = 245,
   NHU_TPOLL_RETX_MS250 = 250,
   NHU_TPOLL_RETX_MS300 = 300,
   NHU_TPOLL_RETX_MS350 = 350,
   NHU_TPOLL_RETX_MS400 = 400,
   NHU_TPOLL_RETX_MS450 = 450,
   NHU_TPOLL_RETX_MS500 = 500
} NhuTPollReTx;







typedef enum nhuPollPdu
{
   NHU_POLL_PDU_P4 = 4,
   NHU_POLL_PDU_P8 = 8,
   NHU_POLL_PDU_P16 = 16,
   NHU_POLL_PDU_P32 = 32,
   NHU_POLL_PDU_P64 = 64,
   NHU_POLL_PDU_P128 = 128,
   NHU_POLL_PDU_P256 = 256,
   NHU_POLL_PDU_P384 = 384,
   NHU_POLL_PDU_INF
} NhuPollPdu;
typedef enum nhuRlcPollByte
{
   NHU_POLL_BYTE_KB25 = 25,
   NHU_POLL_BYTE_KB50 = 50,
   NHU_POLL_BYTE_KB75 = 75,
   NHU_POLL_BYTE_KB100 = 100,
   NHU_POLL_BYTE_KB125 = 125,
   NHU_POLL_BYTE_KB250 = 250,
   NHU_POLL_BYTE_KB375 = 375,
   NHU_POLL_BYTE_KB500 = 500,
   NHU_POLL_BYTE_KB750 = 750,
   NHU_POLL_BYTE_KB1000 = 1000,
   NHU_POLL_BYTE_KB1250 =1250,
   NHU_POLL_BYTE_KB1500 = 1500,
   NHU_POLL_BYTE_KB2000 = 2000,
   NHU_POLL_BYTE_KB3000 = 3000,
   NHU_POLL_BYTE_INF
} NhuRlcPollByte;
typedef enum nhuTReOrdering
{
   NHU_TREORD_MS0 = 0,
   NHU_TREORD_MS5 = 5,
   NHU_TREORD_MS10 = 10,
   NHU_TREORD_MS15 = 15,
   NHU_TREORD_MS20 = 20,
   NHU_TREORD_MS25 = 25,
   NHU_TREORD_MS30 = 30,
   NHU_TREORD_MS35 = 35,
   NHU_TREORD_MS40 = 40,
   NHU_TREORD_MS45 = 45,
   NHU_TREORD_MS50 = 50,
   NHU_TREORD_MS55 = 55,
   NHU_TREORD_MS60 = 60,
   NHU_TREORD_MS65 = 65,
   NHU_TREORD_MS70 = 70,
   NHU_TREORD_MS75 = 75,
   NHU_TREORD_MS80 = 80,
   NHU_TREORD_MS85 = 85,
   NHU_TREORD_MS90 = 90,
   NHU_TREORD_MS95 = 95,
   NHU_TREORD_MS100 = 100,
   NHU_TREORD_MS110 = 110,
   NHU_TREORD_MS120 = 120,
   NHU_TREORD_MS130 = 130,
   NHU_TREORD_MS140 = 140,
   NHU_TREORD_MS150 = 150,
   NHU_TREORD_MS160 = 160,
   NHU_TREORD_MS170 = 170,
   NHU_TREORD_MS180 = 180,
   NHU_TREORD_MS190 = 190,
   NHU_TREORD_MS200 = 200
} NhuTReOrdering;
typedef enum nhuTStatusProh
{
   NHU_STATUS_PROH_MS0 = 0,
   NHU_STATUS_PROH_MS5 = 5,
   NHU_STATUS_PROH_MS10 = 10,
   NHU_STATUS_PROH_MS15 = 15,
   NHU_STATUS_PROH_MS20 = 20,
   NHU_STATUS_PROH_MS25 = 25,
   NHU_STATUS_PROH_MS30 = 30,
   NHU_STATUS_PROH_MS35 = 35,
   NHU_STATUS_PROH_MS40 = 40,
   NHU_STATUS_PROH_MS45 = 45,
   NHU_STATUS_PROH_MS50 = 50,
   NHU_STATUS_PROH_MS55 = 55,
   NHU_STATUS_PROH_MS60 = 60,
   NHU_STATUS_PROH_MS65 = 65,
   NHU_STATUS_PROH_MS70 = 70,
   NHU_STATUS_PROH_MS75 = 75,
   NHU_STATUS_PROH_MS80 = 80,
   NHU_STATUS_PROH_MS85 = 85,
   NHU_STATUS_PROH_MS90 = 90,
   NHU_STATUS_PROH_MS95 = 95,
   NHU_STATUS_PROH_MS100 = 100,
   NHU_STATUS_PROH_MS105 = 105,
   NHU_STATUS_PROH_MS110 = 110,
   NHU_STATUS_PROH_MS115 = 115,
   NHU_STATUS_PROH_MS120 = 120,
   NHU_STATUS_PROH_MS125 = 125,
   NHU_STATUS_PROH_MS130 = 130,
   NHU_STATUS_PROH_MS135 = 135,
   NHU_STATUS_PROH_MS140 = 140,
   NHU_STATUS_PROH_MS145 = 145,
   NHU_STATUS_PROH_MS150 = 150,
   NHU_STATUS_PROH_MS155 = 155,
   NHU_STATUS_PROH_MS160 = 160,
   NHU_STATUS_PROH_MS165 = 165,
   NHU_STATUS_PROH_MS170 = 170,
   NHU_STATUS_PROH_MS175 = 175,
   NHU_STATUS_PROH_MS180 = 180,
   NHU_STATUS_PROH_MS185 = 185,
   NHU_STATUS_PROH_MS190 = 190,
   NHU_STATUS_PROH_MS195 = 195,
   NHU_STATUS_PROH_MS200 = 200,
   NHU_STATUS_PROH_MS205 = 205,
   NHU_STATUS_PROH_MS210 = 210,
   NHU_STATUS_PROH_MS215 = 215,
   NHU_STATUS_PROH_MS220 = 220,
   NHU_STATUS_PROH_MS225 = 225,
   NHU_STATUS_PROH_MS230 = 230,
   NHU_STATUS_PROH_MS235 = 235,
   NHU_STATUS_PROH_MS240 = 240,
   NHU_STATUS_PROH_MS245 = 245,
   NHU_STATUS_PROH_MS250 = 250,
   NHU_STATUS_PROH_MS300 = 300,
   NHU_STATUS_PROH_MS350 = 350,
   NHU_STATUS_PROH_MS400 = 400,
   NHU_STATUS_PROH_MS450 = 450,
   NHU_STATUS_PROH_MS500 = 500
} NhuTStatusProh;





typedef enum nhuSrsBwCfgCmn
{
   NHU_SRS_BW0,
   NHU_SRS_BW1,
   NHU_SRS_BW2,
   NHU_SRS_BW3,
   NHU_SRS_BW4,
   NHU_SRS_BW5,
   NHU_SRS_BW6,
   NHU_SRS_BW7
} NhuSrsBwCfgCmn;





typedef enum nhuSrsBwCfgDed
{
   NHU_SRSDED_BW0,
   NHU_SRSDED_BW1,
   NHU_SRSDED_BW2,
   NHU_SRSDED_BW3
} NhuSrsBwCfgDed;






typedef enum nhuSrsSubFrmCfg
{
   NHU_SRS_SC0,
   NHU_SRS_SC1,
   NHU_SRS_SC2,
   NHU_SRS_SC3,
   NHU_SRS_SC4,
   NHU_SRS_SC5,
   NHU_SRS_SC6,
   NHU_SRS_SC7,
   NHU_SRS_SC8,
   NHU_SRS_SC9,
   NHU_SRS_SC10,
   NHU_SRS_SC11,
   NHU_SRS_SC12,
   NHU_SRS_SC13,
   NHU_SRS_SC14,
   NHU_SRS_SC15
} NhuSrsSubFrmCfg;





typedef enum nhuSrsPeriodicity
{
   NHU_SRS_PRD_MS2,
   NHU_SRS_PRD_MS5,
   NHU_SRS_PRD_MS10,
   NHU_SRS_PRD_MS20,
   NHU_SRS_PRD_MS40,
   NHU_SRS_PRD_MS80,
   NHU_SRS_PRD_MS160,
   NHU_SRS_PRD_MS320
} NhuSrsPeriodicity;





typedef enum nhuSrsCShift
{
   NHU_SRS_CS0,
   NHU_SRS_CS1,
   NHU_SRS_CS2,
   NHU_SRS_CS3,
   NHU_SRS_CS4,
   NHU_SRS_CS5,
   NHU_SRS_CS6,
   NHU_SRS_CS7
} NhuSrsCShift;





typedef enum nhuSrsCfgPrd
{
   SRS_CFG_PRD_1 = 1,
   SRS_CFG_PRD_2 = 2,
   SRS_CFG_PRD_5 = 5,
   SRS_CFG_PRD_10 = 10,
   SRS_CFG_PRD_INF
} NhuSrsCfgPrd;





typedef enum nhuCipherAlgo
{
   NHU_CIPHER_ALGO_EEA0,
   NHU_CIPHER_ALGO_EEA1,
   NHU_CIPHER_ALGO_EEA2,
   NHU_CIPHER_ALGO_EEA3
} NhuCipherAlgo;





typedef enum nhuIntgAlgo
{


   NHU_INTG_ALGO_EIA0,

   NHU_INTG_ALGO_EIA1,
   NHU_INTG_ALGO_EIA2,
   NHU_INTG_ALGO_EIA3
} NhuIntgAlgo;





typedef enum nhuReEstCause
{
   NHU_REST_CAUSE_RECONFIG_FAIL,
   NHU_REST_CAUSE_HO_FAIL,
   NHU_REST_CAUSE_OTHER_FAIL
} NhuReEstCause;






typedef enum nhuPdschPaParam
{
   NHU_PDSCH_PA_MINUS_6,
   NHU_PDSCH_PA_MINUS_4DOT77,
   NHU_PDSCH_PA_MINUS_3,
   NHU_PDSCH_PA_MINUS_1DOT77,
   NHU_PDSCH_PA_ZERO,
   NHU_PDSCH_PA_ONE,
   NHU_PDSCH_PA_TWO,
   NHU_PDSCH_PA_THREE
} NhuPdschPaParam;
typedef struct nhuHdr
{
   NhuCellId cellId;
   NhuCrnti ueId;
   U32 transId;

   Bool isUlDatFwdReq;

} NhuHdr;





typedef U8 NhuErrType;




typedef U8 NhuErrCause;






typedef struct nhuErrorInfo
{
   Bool errPres;
   NhuErrType errType;
   NhuErrCause errCause;
} NhuErrorInfo;







typedef struct nhuNewUeInfo
{
   NhuCrnti newCrnti;
}NhuNewUeInfo;







typedef struct nhuPdcpRohcInfo
{
   U16 maxCid;
   U8 rohcProfileList[9];

}NhuPdcpRohcInfo;







typedef struct nhuPdcpHdrComprInfo
{
   NhuPdcpRohcInfo rohcInfo;
} NhuPdcpHdrComprInfo;






typedef struct nhuHoPdcpSduInfo
{
   U8 isHoPres;






   U8 snLen;
   U32 ulCountVal;
   U32 dlCountVal;

   U16 numBits;
   U8 *ulBitMap;
}NhuHoPdcpSduInfo;







typedef struct nhuPdcpCfg
{
   Bool intgReqd;
   U8 pdcpCfgType;
   U8 pdcpCfgBitMsk;
   NhuPdcpDiscardTmr discardTmr;
   NhuPdcpFlushTmr flushTmr;
   NhuPdcpSnSize snSize;
   Bool statusRptReq;
   NhuPdcpHdrComprInfo hdrComprInfo;
   NhuHoPdcpSduInfo hoPdcpSduStaInfo;


   Bool cfmReqd;

}NhuPdcpCfg;







typedef struct nhuLogChId
{
   CmLteLcType logChType;
   U8 lcId;
} NhuLogChId;
typedef struct nhuLogChCfg
{
   U8 logChCfgpres;
   U8 logChGrp;
}NhuLogChCfg;
typedef struct nhuUlLogChMap
{
   CmLteTrchType trChType;
   U8 lcCfgType;
   NhuLogChCfg lcCfg;
}NhuUlLogChMap;







typedef struct nhuDlUmRlcModeInfo
{
   U8 snFieldLen;
}NhuDlUmRlcModeInfo;






typedef struct nhuDlAmRlcModeInfo
{
   NhuMaxRetxThres maxRetxThresh;
   NhuRlcPollByte pollByte;
   NhuPollPdu pollPdu;
   NhuTPollReTx tPollRetx;
}NhuDlAmRlcModeInfo;







typedef struct nhuDlTmRlcModeInfo
{
   U32 bufferSize;
}NhuDlTmRlcModeInfo;







typedef struct nhuUlUmRlcModeInfo
{
   U8 snFieldLen;
   NhuTReOrdering tReordring;
}NhuUlUmRlcModeInfo;






typedef struct nhuUlAmRlcModeInfo
{
   NhuTStatusProh tStatusProh;
   NhuTReOrdering tReordring;
}NhuUlAmRlcModeInfo;







typedef struct nhuUlRlcMode
{
   U8 rlcCfgType;
   U8 mode;
   union
   {
      NhuUlUmRlcModeInfo umRlc;
      NhuUlAmRlcModeInfo amRlc;
   }m;
} NhuUlRlcMode;
typedef struct nhuUlRbCfg
{
   U8 ulRbBitMsk;
   NhuUlLogChMap ulLogChMap;
   NhuUlRlcMode ulRlcMode;
}NhuUlRbCfg;
typedef struct nhuDlLogChMap
{
   CmLteTrchType trChType;
}NhuDlLogChMap;







typedef struct nhuDlRlcMode
{
   U8 rlcCfgType;
   U8 mode;
   union
   {
      NhuDlUmRlcModeInfo umRlc;
      NhuDlAmRlcModeInfo amRlc;
      NhuDlTmRlcModeInfo tmRlc;
   }m;
} NhuDlRlcMode;
typedef struct nhuDlRbCfg
{
   U8 dlRbBitMsk;
   NhuDlLogChMap dlLogChMap;
   NhuDlRlcMode dlRlcMode;
}NhuDlRbCfg;
typedef struct nhuRbCfgInfo
{
   NhuRbId rbId;
   NhuLogChId lcId;
   U8 rbCfgBitMsk;

   NhuUlRbCfg ulRbCfg;
   NhuDlRbCfg dlRbCfg;
   NhuPdcpCfg pdcpCfg;


   U8 qci;


}NhuRbCfgInfo;






typedef struct nhuRbCfgList
{
   U8 numOfRbCfgInfo;
   NhuRbCfgInfo *rbCfgInfoList;
   U8 isHO;
}NhuRbCfgList;
typedef struct nhuRbRlsCfgList
{
   U8 numOfRbCfgInfo;
   NhuRbId *rbsToRel;
}NhuRbRlsCfgList;
typedef struct nhuRbCfgAllList
{
   U8 rbCfgTypBitMsk;
   NhuRbCfgList rbToAddCfgList;
   NhuRbCfgList rbToModCfgList;
   NhuRbRlsCfgList rbToRlsCfgList;
}NhuRbCfgAllList;






typedef struct nhuUlHarqCfg
{
   NhuMaxHarqTx ulMaxHarqTx;
   U8 deltaHarqOffset;
}NhuUlHarqCfg;
typedef struct nhuTrChCfg
{
   U8 trChCfgType;
   U8 trChBitMsk;
   NhuUlHarqCfg ulHarqCfg;
}NhuTrChCfg;







typedef struct nhuIntgKeyAlgoInfo
{
   U8 action;
   NhuIntgAlgo intgAlgo;
   U8 intgKey[16];
} NhuIntgKeyAlgoInfo;







typedef struct nhuCiphKeyAlgoInfo
{
   NhuCipherAlgo ciphAlgo;
   U8 cipherCpKey[16];
   U8 cipherUpKey[16];
} NhuCiphKeyAlgoInfo;
typedef struct nhuSecurityCfg
{
   U8 secCfgBitMsk;

   NhuIntgKeyAlgoInfo intgCfgInfo;
   NhuCiphKeyAlgoInfo cipherCfgInfo;
} NhuSecurityCfg;
typedef struct nhuUeLLyrSapIdInfo
{

   SuId kwuSapId;
   SuId ckwSapId;
   SuId crgSapId;
   SuId cpjSapId;
   SuId pjuSapId;
   SpId macRguUlSapId;
   SpId macRguDlSapId;
   SpId rlcRguSapId;
   SpId rlcKwuUlSapId;
   SpId rlcKwuDlSapId;
} NhuUeLLyrSapIdInfo;







typedef struct nhuLLyrSapIdInfo
{
   SuId kwuSapId;
   SuId ckwSapId;
   SuId crgSapId;
   SuId cpjSapId;
   SuId pjuSapId;

   SpId rguUlSapId;
   SpId rguDlSapId;

   SpId rguSapId;



} NhuLLyrSapIdInfo;
typedef struct nhuUeCfgInfo
{
   U8 conReCfgCause;
   U8 ueCfgBitMsk;

   NhuRbCfgAllList rbCfgAllList;
   NhuTrChCfg trChCfg;

   NhuSecurityCfg secCfg;
   NhuNewUeInfo ueInfo;







   NhuUeLLyrSapIdInfo uellyrSapIdInfo;





} NhuUeCfgInfo;






typedef struct nhuUlDcchMsg
{
   U8 pdcpId;
   NhuUL_DCCH_Msg dcchMsg;
}NhuUlDcchMsg;






typedef struct nhuDlDcchMsg
{
   U8 pdcpId;
   Bool isMsgEncoded;
   union
   {
      NhuDL_DCCH_Msg dcchMsg;
      Buffer *mBuf;

   } m;
}NhuDlDcchMsg;
typedef struct nhuDedMsg
{
   NhuDlDcchMsg dlDcchMsg;
} NhuDedMsg;






typedef struct nhuTimingInfo
{
   U16 sfn;
   U8 subframe;
} NhuTimingInfo;







typedef struct nhuCmnMsgInfo
{
   U8 rbId;
   NhuTimingInfo timingInfo;

   U32 tbsSize;

} NhuCmnMsgInfo;
typedef struct nhuCmnMsg
{
   NhuCmnMsgInfo cmnMsgInfo;
   U8 cmnMsgCategory;
   union
   {
      NhuPCCH_Msg pcchMsg;
      NhuBCCH_BCH_Msg bcchBchMsg;
      NhuBCCH_DL_SCH_Msg bcchDlSchMsg;
   } cmn;
} NhuCmnMsg;
typedef struct nhuDatReqUeMsg
{
   Bool isMsgDed;
   union
   {
      NhuDedMsg dedMsg;
      NhuCmnMsg cmnMsg;
   } msg;
} NhuDatReqUeMsg;
typedef struct nhuDatReqSdus
{
   CmMemListCp memCp;
   NhuHdr hdr;
   struct
   {
      NhuDatReqUeMsg ueMsg;
      Bool isUeCfgPres;

      NhuUeCfgInfo ueCfg;

   } sdu;
} NhuDatReqSdus;







typedef struct nhuUlCcchMsg
{
   U8 rbId;
   NhuCrnti tmpCrnti;
   NhuUL_CCCH_Msg ccchMsg;
}NhuUlCcchMsg;







typedef struct nhuDlCcchMsg
{
   NhuCrnti tmpCrnti;
   U8 rbId;
   NhuDL_CCCH_Msg ccchMsg;
}NhuDlCcchMsg;
typedef struct nhuDatRspSdus
{
   CmMemListCp memCp;
   NhuHdr hdr;
   struct
   {
      U8 msgCategory;
      union
      {
         NhuDlCcchMsg dlCcchMsg;
         NhuDlDcchMsg dlDcchMsg;
      } m;
      U8 isUeCfgPres;

      NhuUeCfgInfo ueCfg;

   }sdu;
} NhuDatRspSdus;
typedef struct nhuDatIndSdus
{
   CmMemListCp memCp;
   NhuHdr hdr;
   NhuErrorInfo err;
   struct
   {
      U8 msgCategory;
      union
      {
         NhuUlCcchMsg ulCcchMsg;
         NhuUlDcchMsg ulDcchMsg;
      } m;
   }sdu;
} NhuDatIndSdus;





typedef enum nhuSysBw
{
   NHU_SYS_BW_N6 = 6,
   NHU_SYS_BW_N15 = 15,
   NHU_SYS_BW_N25 = 25,
   NHU_SYS_BW_N50 = 50,
   NHU_SYS_BW_N75 = 75,
   NHU_SYS_BW_N100 = 100
} NhuSysBw;







typedef enum nhuPhichDur
{
   NHU_PHICH_DUR_NORMAL,
   NHU_PHICH_DUR_EXTEND
} NhuPhichDur;





typedef enum nhuPhichResrc
{
   NHU_NG_ONESIXTH,
   NHU_NG_HALF,
   NHU_NG_ONE,
   NHU_NG_TWO
} NhuPhichResrc;






typedef struct nhuPhichCfg
{
   NhuPhichResrc resrc;
   NhuPhichDur duration;
} NhuPhichCfg;







typedef struct nhuPucchCfg
{
   U8 pucchFixBw;
   U16 n1PucchAn;
   NhuPucchDeltaShift deltaShift;
   U8 cyclShift;

}NhuPucchCfg;






typedef enum nhuNumRaPreamble
{
   NHU_RA_PREAMBLE_N4 = 4,
   NHU_RA_PREAMBLE_N8 = 8,
   NHU_RA_PREAMBLE_N12 = 12,
   NHU_RA_PREAMBLE_N16 = 16,
   NHU_RA_PREAMBLE_N20 = 20,
   NHU_RA_PREAMBLE_N24 = 24,
   NHU_RA_PREAMBLE_N28 = 28,
   NHU_RA_PREAMBLE_N32 = 32,
   NHU_RA_PREAMBLE_N36 = 36,
   NHU_RA_PREAMBLE_N40 = 40,
   NHU_RA_PREAMBLE_N44 = 44,
   NHU_RA_PREAMBLE_N48 = 48,
   NHU_RA_PREAMBLE_N52 = 52,
   NHU_RA_PREAMBLE_N56 = 56,
   NHU_RA_PREAMBLE_N60 = 60,
   NHU_RA_PREAMBLE_N64 = 64
} NhuNumRaPreamble;





typedef enum nhuSizeRaPreambleGrpA
{
   NHU_SIZE_RA_PREAMBLE_GRPA_N4 = 4,
   NHU_SIZE_RA_PREAMBLE_GRPA_N8 = 8,
   NHU_SIZE_RA_PREAMBLE_GRPA_N12 = 12,
   NHU_SIZE_RA_PREAMBLE_GRPA_N16 = 16,
   NHU_SIZE_RA_PREAMBLE_GRPA_N20 = 20,
   NHU_SIZE_RA_PREAMBLE_GRPA_N24 = 24,
   NHU_SIZE_RA_PREAMBLE_GRPA_N28 = 28,
   NHU_SIZE_RA_PREAMBLE_GRPA_N32 = 32,
   NHU_SIZE_RA_PREAMBLE_GRPA_N36 = 36,
   NHU_SIZE_RA_PREAMBLE_GRPA_N40 = 40,
   NHU_SIZE_RA_PREAMBLE_GRPA_N44 = 44,
   NHU_SIZE_RA_PREAMBLE_GRPA_N48 = 48,
   NHU_SIZE_RA_PREAMBLE_GRPA_N52 = 52,
   NHU_SIZE_RA_PREAMBLE_GRPA_N56 = 56,
   NHU_SIZE_RA_PREAMBLE_GRPA_N60 = 60,
   NHU_SIZE_RA_PREAMBLE_GRPA_N64 = 64
} NhuSizeRaPreambleGrpA;





typedef enum nhuPrmblRspWinSize
{
   NHU_PRMBL_RSP_WIN_SIZE_SF2 = 2,
   NHU_PRMBL_RSP_WIN_SIZE_SF3 = 3,
   NHU_PRMBL_RSP_WIN_SIZE_SF4 = 4,
   NHU_PRMBL_RSP_WIN_SIZE_SF5 = 5,
   NHU_PRMBL_RSP_WIN_SIZE_SF6 = 6,
   NHU_PRMBL_RSP_WIN_SIZE_SF7 = 7,
   NHU_PRMBL_RSP_WIN_SIZE_SF8 = 8,
   NHU_PRMBL_RSP_WIN_SIZE_SF10 = 10
} NhuPrmblRspWinSize;




typedef enum nhuRaSfn
{
   NHU_SFN_EVEN,
   NHU_SFN_ANY,
   NHU_SFN_NA
} NhuRaSFN;





typedef enum nhuDuplexMode
{
   NHU_MODE_FDD=1,
   NHU_MODE_TDD
} NhuDuplexMode;






typedef struct nhuRaOccasion
{
   U8 size;
   NhuRaSFN sfnEnum;
   U8 subFrameNum[10];
}NhuRaOccasion;







typedef struct nhuRachCfg
{
   U8 maxMsg3Tx;
}NhuRachCfg;







typedef struct nhuCmnMacCfg
{
   NhuRachCfg rachCfg;
} NhuCmnMacCfg;
typedef struct nhuBwCfg
{
   NhuSysBw ulSysBw;
   NhuSysBw dlSysBw;


}NhuSysBwCfg;
typedef struct nhuCellCfgInfo
{
   NhuDuplexMode duplexMode;


   NhuSysBwCfg sysBwCfg;
   U8 cellCfgBitMsk;

   NhuRbCfgList rbToAddCfgList;
   NhuCmnMacCfg macCmnCfg;




   NhuLLyrSapIdInfo llyrSapIdInfo;

} NhuCellCfgInfo;
typedef struct nhuCellReCfgInfo
{
   CmLteTimingInfo actvnTime;
   U8 cellCfgBitMsk;

   NhuCmnMacCfg macCmnCfg;



} NhuCellReCfgInfo;






typedef struct nhuCellRlsInfo
{
   NhuCellId cellId;
} NhuCellRlsInfo;
typedef struct nhuCellCfgReqSdus
{
   CmMemListCp memCp;
   NhuHdr hdr;
   struct
   {
      U8 cfgType;
      union
      {
         NhuCellCfgInfo cfgInfo;
         NhuCellReCfgInfo reCfgInfo;
         NhuCellRlsInfo rlsInfo;
      } u;
   } sdu;
} NhuCellCfgReqSdus;
typedef struct nhuCellCfgCfmSdus
{
   NhuHdr hdr;
   struct
   {
      Bool isCfgSuccess;
      NhuErrorInfo cfgError;
   } sdu;
} NhuCellCfgCfmSdus;
typedef struct nhuStaIndSdus
{
   NhuHdr hdr;
   U8 pdcpId;
   U8 cause;
} NhuStaIndSdus;
typedef struct nhuDatCfmSdus
{
   NhuHdr hdr;
   U8 pdcpId;
   U8 datCfmStatus;
} NhuDatCfmSdus;
typedef struct nhuErrIndSdus
{
   NhuHdr hdr;
   NhuErrorInfo sdu;
} NhuErrIndSdus;
typedef struct nhuCfgReqSdus
{
   CmMemListCp memCp;
   NhuHdr hdr;
   NhuUeCfgInfo cfgInfo;
} NhuCfgReqSdus;







typedef struct nhuCfgCfmSdus
{
   NhuHdr hdr;
   struct
   {
      Bool isCfgSuccess;
      NhuErrorInfo cfgError;
   } sdu;
} NhuCfgCfmSdus;
typedef struct nhuEncSdusReq
{
   CmMemListCp memCp;
   NhuHdr hdr;
   struct
   {
      U8 msgCategory;
      union
      {
         NhuDL_DCCH_Msg dcchMsg;
         NhuHovrCmd hovrCmd;
         NhuUERadioAccessCapInfo ueRadioCapInfo;

         NhuUECapInfo ueCapInfo;




         NhuHovrPrepInfo hovrPrepInfo;

         NhuToTgtRNC_Cont nhuIntRatHoInfoWithUeCap;




      } u;
   }sdu;
}NhuEncReqSdus;






typedef struct nhuEncSdusCfm
{
   NhuHdr hdr;
   struct
   {
      U8 msgCategory;
      U32 msgLen;
      Status status;
      Buffer *mBuf;
   } sdu;
} NhuEncCfmSdus;







typedef struct nhuRcvStaOfUlPdcpSdus
{
   U16 numBits;
   U8 *ulBitMap;
} NhuRcvStaOfUlPdcpSdus;






typedef struct nhuPdcpSduStaInfo
{
   U8 drbId;
   U8 dir;
   U8 snLen;
   U32 ulCountVal;
   U32 dlCountVal;

   NhuRcvStaOfUlPdcpSdus rcvStaOfUlPdcpSdus;


} NhuPdcpSduStaInfo;






typedef struct nhuPdcpSduStaCfm
{
   CmMemListCp memCp;
   NhuHdr hdr;
   U16 numRbId;
   NhuPdcpSduStaInfo *pdcpSduStaInfo;

   Status status;
   Reason reason;
} NhuPdcpSduStaCfm;







typedef struct nhuPdcpDatResumeCfm
{
   CmMemListCp memCp;
   NhuHdr hdr;
   Status status;
   Reason reason;
} NhuPdcpDatResumeCfm;






typedef struct nhuDecodeSduReq
{
   NhuHdr hdr;
   U16 sduType;
   Buffer *mbuf;
} NhuDecodeSduReq;
typedef struct nhuDecodeSduCfm
{
   CmMemListCp memCp;
   NhuHdr hdr;
   U16 sduType;
   Bool status;
   union
   {
         NhuUE_EUTRA_Cap nhuUE_EUTRA_Cap;
         NhuHovrCmd hovrCmd;
         NhuUECapInfo ueCapInfo;
         NhuHovrPrepInfo nhuHovrPrepInfo;
         NhuUERadioAccessCapInfo ueRadioCapInfo;

         NhuUE_EUTRA_Cap_v9a0_IEs eUTRA_Cap_v9a0;


         NhuToTgtRNC_Cont nhuIntRatHoInfoWithUeCap;
   }ie;
} NhuDecodeSduCfm;







typedef struct nhuDRBCountInfo
{
   U8 drbId;
   U8 drbDirection;
   U32 ulCount;
   U32 dlCount;
} NhuDrbCountInfo;







typedef struct nhuDRBCountInfoLst
{
   CmMemListCp memCp;
   NhuHdr countHdr;
   U8 numDrbs;
   U8 status;
   NhuDrbCountInfo *member;
} NhuDRBCountInfoLst;


typedef S16 (*NhuBndReq) ( Pst *pst, SuId suId, SpId spId)


                                  ;

typedef S16 (*NhuBndCfm) ( Pst *pst, SuId suId, U8 status)


                                    ;

typedef S16 (*NhuUbndReq) ( Pst *pst, SpId spId, Reason reason)


                                    ;

typedef S16 (*NhuDatReq) ( Pst *pst, SpId spId, NhuDatReqSdus *nhuDatReqSdus )



                 ;

typedef S16 (*NhuDatRsp) ( Pst *pst, SpId spId, NhuDatRspSdus *nhuDatRspSdus )



                 ;


typedef S16 (*NhuDatInd) ( Pst *pst, SuId suId, NhuDatIndSdus *nhuDatIndSdus )



                 ;

typedef S16 (*NhuDatCfm) ( Pst *pst, SuId suId, NhuDatCfmSdus *nhuDatCfmSdus )



                 ;
typedef S16 (*NhuStaInd) ( Pst *pst, SuId suId, NhuStaIndSdus *nhuStaIndSdus )



                 ;

typedef S16 (*NhuErrInd) ( Pst *pst, SuId suId, NhuErrIndSdus *nhuErrIndSdus )



                 ;

typedef S16 (*NhuCfgReq) ( Pst *pst, SpId spId, NhuCfgReqSdus *nhuCfgReqSdus )



                 ;

typedef S16 (*NhuCfgCfm) ( Pst *pst, SuId suId, NhuCfgCfmSdus *nhuCfgCfmSdus )



                 ;

typedef S16 (*NhuCnclUeReq) ( Pst *pst, SpId spId, NhuCellId cellId, NhuCrnti crnti )




                 ;

typedef S16 (*NhuCellCfgReq) ( Pst *pst, SpId spId, NhuCellCfgReqSdus *nhuCellCfgReqSdus )



                 ;

typedef S16 (*NhuCellCfgCfm) ( Pst *pst, SuId suId, NhuCellCfgCfmSdus *nhuCellCfgCfmSdus )



                 ;

typedef S16 (*NhuDeleteTransReq) ( Pst *pst, SpId spId, NhuCellId cellid, NhuCrnti ueId, U32 transId )





                 ;

typedef S16 (*NhuEncReq) ( Pst *pst, SpId spId, NhuEncReqSdus *nhuEncReqSdus )



                 ;

typedef S16 (*NhuEncCfm) ( Pst *pst, SuId suId, NhuEncCfmSdus *nhuEncCfmSdus )



                 ;

typedef S16 (*NhuSduStaReq) ( Pst *pst, SpId spId, NhuHdr hdr )



                 ;

typedef S16 (*NhuSduStaCfm) ( Pst *pst, SuId suId, NhuPdcpSduStaCfm *pdcpSduStaCfm )



                 ;

typedef S16 (*NhuDecodeReq) ( Pst *pst, SpId spId, NhuDecodeSduReq *nhuDecodeSduReq )



                 ;

typedef S16 (*NhuDecodeCfm) ( Pst *pst, SuId suId, NhuDecodeSduCfm *nhuDecodeSduCfm )



                 ;

typedef S16 (*NhuCountReq) ( Pst *pst, SpId spId, NhuHdr *countHdr )



                 ;

typedef S16 (*NhuCountCfm) ( Pst *pst, SuId suId, NhuDRBCountInfoLst *nhuDRBCountInfoLst )



                 ;

typedef S16 (*NhuDataFwdReq) ( Pst *pst, SpId spId, NhuHdr dataFwdHdr )



                 ;

typedef S16 (*NhuDatResumeReq) ( Pst *pst, SpId spId, NhuHdr dataFwdHdr )



                 ;

typedef S16 (*NhuDatResumeCfm) ( Pst *pst, SuId suId, NhuPdcpDatResumeCfm *pdcpDatResumeCfm )



                 ;


   extern S16 NxLiNhuBndCfm (Pst *pst, SuId suId, U8 status);
   extern S16 NxLiNhuDatCfm (Pst *pst, SuId suId, NhuDatCfmSdus *nhuDatCfmSdus)
                                                                ;
   extern S16 NxLiNhuStaInd (Pst *pst, SuId suId, NhuStaIndSdus *nhuStaIndSdus)
                                                                ;
   extern S16 NxLiNhuDatInd (Pst *pst, SuId suId, NhuDatIndSdus *nhuDatIndSdus);
   extern S16 NxLiNhuErrInd (Pst *pst, SuId suId, NhuErrIndSdus *nhuErrIndSdus);
   extern S16 NxLiNhuCfgCfm (Pst *pst, SuId suId, NhuCfgCfmSdus *nhuCfgCfmSdus);
   extern S16 NxLiNhuCellCfgCfm (Pst *pst, SuId suId, NhuCellCfgCfmSdus *nhuCellCfgCfmSdus);
   extern S16 NxLiNhuEncodeCfm (Pst *pst, SuId suId, NhuEncCfmSdus *nhuEncCfmSdus);
   extern S16 NxLiNhuPdcpSduStaCfm (Pst *pst, SuId suId, NhuPdcpSduStaCfm *nhuPdcpSduStaCfm)
                                                                             ;
   extern S16 NxLiNhuDecodeCfm (Pst *pst, SuId suId, NhuDecodeSduCfm *nhuDecodeSduCfm);
   extern S16 NxLiNhuCountCfm (Pst *pst, SuId suId, NhuDRBCountInfoLst *nhuDRBCountInfoLst);
   extern S16 NxLiNhuPdcpDatResumeCfm (Pst *pst, SuId suId, NhuPdcpDatResumeCfm *nhuPdcpDatResumeCfm)
                                                                                   ;
   extern S16 NhUiNhuDatInd (Pst *pst, SuId suId, NhuDatIndSdus *nhuDatIndSdus);
   extern S16 NhUiNhuErrInd (Pst *pst, SuId suId, NhuErrIndSdus *nhuErrIndSdus);
   extern S16 NhUiNhuCfgCfm (Pst *pst, SuId suId, NhuCfgCfmSdus *nhuCfgCfmSdus);
   extern S16 NhUiNhuCellCfgCfm (Pst *pst, SuId suId, NhuCellCfgCfmSdus *nhuCfgCellCfmSdus);
   extern S16 NhUiNhuBndReq (Pst *pst, SuId suId, SpId spId);
   extern S16 NhUiNhuUbndReq (Pst *pst, SpId spId, Reason reason);
   extern S16 NhUiNhuBndCfm (Pst *pst, SuId suId, U8 status);
   extern S16 NhUiNhuDatReq (Pst *pst, SpId spId, NhuDatReqSdus *nhuDatReqSdus);
   extern S16 NhUiNhuDatRsp (Pst *pst, SpId spId, NhuDatRspSdus *nhuDatRspSdus);
   extern S16 NhUiNhuCfgReq (Pst *pst, SpId spId, NhuCfgReqSdus *nhuCfgReqSdu);
   extern S16 NhUiNhuCnclUeReq (Pst *pst, SpId spId, NhuCellId cellId, NhuCrnti crnti);
   extern S16 NhUiNhuCellCfgReq (Pst *pst, SpId spId, NhuCellCfgReqSdus *nhuCellCfgReqSdu);
   extern S16 NhUiNhuDeleteTransReq (Pst *pst, SpId spId, NhuCellId cellId, NhuCrnti crnti, U32 transId)
                                                                           ;
   extern S16 NhUiNhuDatCfm (Pst *pst, SuId suId, NhuDatCfmSdus *nhuDatCfmSdus)
                                                                  ;
extern S16 NhUiNhuStaInd (Pst *pst, SuId suId, NhuStaIndSdus *nhStaInd)
                                                             ;
extern S16 NhUiNhuEncodeReq (Pst *pst, SpId spId, NhuEncReqSdus *nhuEncReqSdus)
                                                             ;
extern S16 NhUiNhuEncodeCfm (Pst *pst, SuId suId, NhuEncCfmSdus *nhuEncCfmSdus)
                                                             ;
extern S16 NhUiNhuPdcpSduStaReq (Pst *pst, SpId spId, NhuHdr nhuHdr);
extern S16 NhUiNhuStartPdcpDataFwdReq (Pst *pst, SpId spId, NhuHdr nhuHdr);
extern S16 NhUiNhuPdcpDatResumeReq (Pst *pst, SpId spId, NhuHdr nhuHdr);
extern S16 NhUiNhuPdcpSduStaCfm (Pst *pst, SuId suId, NhuPdcpSduStaCfm *nhuPdcpSduStaCfm)
                                                                   ;

extern S16 NhUiNhuPdcpDatResumeCfm
( Pst *pst, SuId suId, NhuPdcpDatResumeCfm *nhuPdcpDatResumeCfm )



  ;
extern S16 NhUiNhuDecodeReq (Pst *pst, SpId spId, NhuDecodeSduReq *nhuDecodeSduReq);
extern S16 NhUiNhuDecodeCfm (Pst *pst, SuId suId, NhuDecodeSduCfm *nhuDecodeSduCfm);
extern S16 NhUiNhuCountReq (Pst *pst, SpId spId, NhuHdr *countHdr);
extern S16 NhUiNhuCountCfm (Pst *pst, SuId suId, NhuDRBCountInfoLst *nhuDRBCountInfoLst);
extern S16 cmPkNhuLLyrSapIdInfo ( NhuLLyrSapIdInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUeLLyrSapIdInfo ( NhuUeLLyrSapIdInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuBndCfm ( Pst *pst, SuId suId, U8 status )



  ;
extern S16 cmPkNhuDatInd ( Pst *pst, SuId suId, NhuDatIndSdus *nhuDatIndSdus )



  ;
extern S16 cmPkNhuErrInd ( Pst *pst, SuId suId, NhuErrIndSdus *nhuErrIndSdus )



  ;
extern S16 cmPkNhuDatCfm ( Pst *pst, SuId suId, NhuDatCfmSdus *nhuDatCfmSdus )



  ;
extern S16 cmPkNhuCfgCfm ( Pst *pst, SuId suId, NhuCfgCfmSdus *nhuCfgCfmSdus )



  ;
extern S16 cmPkNhuCellCfgCfm ( Pst *pst, SuId suId, NhuCellCfgCfmSdus *nhuCellCfgCfmSdus )



  ;
extern S16 cmPkNhuDecodeCfm ( Pst *pst, SuId suId, NhuDecodeSduCfm *nhuDecodeSduCfm )



  ;
extern S16 cmPkNhuCountCfm ( Pst *pst, SuId suId, NhuDRBCountInfoLst *nhuDRBCountInfoLst )



  ;
extern S16 cmPkNhuHdr ( NhuHdr *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuErrorInfo ( NhuErrorInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuNewUeInfo ( NhuNewUeInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuPdcpRohcInfo ( NhuPdcpRohcInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuPdcpHdrComprInfo ( NhuPdcpHdrComprInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuPdcpCfg ( NhuPdcpCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuLogChId ( NhuLogChId *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuLogChCfg ( NhuLogChCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUlLogChMap ( NhuUlLogChMap *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDlUmRlcModeInfo ( NhuDlUmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDlAmRlcModeInfo ( NhuDlAmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDlTmRlcModeInfo ( NhuDlTmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUlUmRlcModeInfo ( NhuUlUmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUlAmRlcModeInfo ( NhuUlAmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUlRlcMode ( NhuUlRlcMode *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUlRbCfg ( NhuUlRbCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDlLogChMap ( NhuDlLogChMap *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDlRlcMode ( NhuDlRlcMode *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDlRbCfg ( NhuDlRbCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuRbCfgInfo ( NhuRbCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuRbCfgList ( NhuRbCfgList *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuRbRlsCfgList ( NhuRbRlsCfgList *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuRbCfgAllList ( NhuRbCfgAllList *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUlHarqCfg ( NhuUlHarqCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuTrChCfg ( NhuTrChCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuIntgKeyAlgoInfo
( NhuIntgKeyAlgoInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCiphKeyAlgoInfo
( NhuCiphKeyAlgoInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuSecurityCfg
( NhuSecurityCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUeCfgInfo
( NhuUeCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUlDcchMsg
( NhuUlDcchMsg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDlDcchMsg
( NhuDlDcchMsg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDedMsg
( NhuDedMsg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCmnMsgInfo
( NhuCmnMsgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCmnMsg
( NhuCmnMsg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDatReqUeMsg
( NhuDatReqUeMsg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDatReqSdus
( NhuDatReqSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUlCcchMsg
( NhuUlCcchMsg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDlCcchMsg
( NhuDlCcchMsg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDatRspSdus
( NhuDatRspSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDatIndSdus
( NhuDatIndSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuRaOccasion
( NhuRaOccasion *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuRachCfg
( NhuRachCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCmnMacCfg
( NhuCmnMacCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCellCfgInfo
( NhuCellCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCellCfgReqSdus
( NhuCellCfgReqSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCellCfgCfmSdus
( NhuCellCfgCfmSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuStaIndSdus
( NhuStaIndSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDatCfmSdus
( NhuDatCfmSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuErrIndSdus
( NhuErrIndSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCfgReqSdus
( NhuCfgReqSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCfgCfmSdus
( NhuCfgCfmSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuBndReq
( Pst *pst, SuId suId, SpId spId )



  ;
extern S16 cmPkNhuUbndReq
( Pst *pst, SpId spId, Reason reason )



  ;
extern S16 cmPkNhuDatReq
( Pst *pst, SpId spId, NhuDatReqSdus *nhuDatReqSdus )



  ;
extern S16 cmPkNhuCfgReq
( Pst *pst, SpId spId, NhuCfgReqSdus *nhuCfgReqSdus )



  ;
extern S16 cmPkNhuCnclUeReq
( Pst *pst, SpId spId, NhuCellId cellId, NhuCrnti crnti )




  ;
extern S16 cmPkNhuCellCfgReq
( Pst *pst, SpId spId, NhuCellCfgReqSdus *nhuCellCfgReqSdus )



  ;
extern S16 cmPkNhuDeleteTransReq
( Pst *pst, SpId spId, NhuCellId cellId, NhuCrnti ueId, U32 transId )





  ;
extern S16 cmPkNhuDatRsp
( Pst *pst, SpId spId, NhuDatRspSdus *nhuDatRspSdus )



  ;
extern S16 cmPkNhuStaInd
( Pst *pst, SuId suId, NhuStaIndSdus *nhuStaIndSdus )



  ;
extern S16 cmPkNhuDecodeReq
( Pst *pst, SpId spId, NhuDecodeSduReq *nhuDecodeSduReq )



  ;
extern S16 cmPkNhuCountReq
( Pst *pst, SpId spId, NhuHdr *nhuHdr )



  ;
extern S16 cmPkNhuEncodeReq
( Pst *pst, SpId spId, NhuEncReqSdus *nhuEncReqSdus )



  ;
extern S16 cmPkNhuEncReqSdus
( NhuEncReqSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuEncodeCfm
( Pst *pst, SuId suId, NhuEncCfmSdus *nhuEncSdusCfm )



  ;
extern S16 cmPkNhuEncCfmSdus
( NhuEncCfmSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuPdcpSduStaReq
( Pst *pst, SpId spId, NhuHdr hdr )



  ;

extern S16 cmPkNhuStartPdcpDataFwdReq
( Pst *pst, SpId spId, NhuHdr hdr )



  ;

extern S16 cmPkNhuPdcpDatResumeReq
( Pst *pst, SpId spId, NhuHdr hdr )



  ;

extern S16 cmPkNhuPdcpSduStaCfm
( Pst *pst, SuId suId, NhuPdcpSduStaCfm *nhuPdcpSduStaCfm )



  ;
extern S16 cmPkNhuPdcpSduStaCfmSdus
( NhuPdcpSduStaCfm *param, Buffer *mBuf )


  ;

extern S16 cmPkNhuPdcpDatResumeCfm
( Pst *pst, SuId suId, NhuPdcpDatResumeCfm *nhuPdcpDatResumeCfm )



  ;
extern S16 cmPkNhuPdcpSduStaInfo
( NhuPdcpSduStaInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuPdcpCfgSduStaInfo
( NhuHoPdcpSduInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDecodeSduReq
( NhuDecodeSduReq *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDecodeSduCfm
( NhuDecodeSduCfm *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDRBCountInfoLst
( NhuDRBCountInfoLst *param, Buffer *mBuf )


  ;


extern S16 cmPkNhuUL_DCCH_Msg (NhuUL_DCCH_Msg *param, Buffer *mBuf);
extern S16 cmPkNhuDL_DCCH_Msg (NhuDL_DCCH_Msg *param, Buffer *mBuf);
extern S16 cmPkNhuBCCH_BCH_Msg (NhuBCCH_BCH_Msg *param, Buffer *mBuf);
extern S16 cmPkNhuBCCH_DL_SCH_Msg (NhuBCCH_DL_SCH_Msg *param, Buffer *mBuf)
       ;
extern S16 cmPkNhuPCCH_Msg (NhuPCCH_Msg *param, Buffer *mBuf);
extern S16 cmPkNhuUL_CCCH_Msg (NhuUL_CCCH_Msg *param, Buffer *mBuf);
extern S16 cmPkNhuDL_CCCH_Msg (NhuDL_CCCH_Msg *param, Buffer *mBuf);


extern S16 cmUnpkNhuLLyrSapIdInfo ( NhuLLyrSapIdInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuUeLLyrSapIdInfo ( NhuUeLLyrSapIdInfo *param, Buffer *mBuf )


  ;



extern S16 cmUnpkNhuHdr
( NhuHdr *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuErrorInfo
( NhuErrorInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuNewUeInfo
( NhuNewUeInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuPdcpRohcInfo
( NhuPdcpRohcInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuPdcpHdrComprInfo
( NhuPdcpHdrComprInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuPdcpCfg
( NhuPdcpCfg *param, Buffer *mBuf, Ptr ptr )



  ;
extern S16 cmUnpkNhuLogChId
( NhuLogChId *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuLogChCfg
( NhuLogChCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuUlLogChMap
( NhuUlLogChMap *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDlUmRlcModeInfo
( NhuDlUmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDlAmRlcModeInfo
( NhuDlAmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDlTmRlcModeInfo
( NhuDlTmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuUlUmRlcModeInfo
( NhuUlUmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuUlAmRlcModeInfo
( NhuUlAmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuUlRlcMode
( NhuUlRlcMode *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuUlRbCfg
( NhuUlRbCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDlLogChMap
( NhuDlLogChMap *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDlRlcMode
( NhuDlRlcMode *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDlRbCfg
( NhuDlRbCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuRbCfgInfo
( NhuRbCfgInfo *param, Buffer *mBuf, Ptr ptr )



  ;
extern S16 cmUnpkNhuRbCfgList
( NhuRbCfgList *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuRbRlsCfgList
( NhuRbRlsCfgList *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuRbCfgAllList
( NhuRbCfgAllList *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuUlHarqCfg
( NhuUlHarqCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuTrChCfg
( NhuTrChCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuIntgKeyAlgoInfo
( NhuIntgKeyAlgoInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuCiphKeyAlgoInfo
( NhuCiphKeyAlgoInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuSecurityCfg
( NhuSecurityCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuUeCfgInfo
( NhuUeCfgInfo *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuUlDcchMsg
( NhuUlDcchMsg *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuDlDcchMsg
( NhuDlDcchMsg *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuDedMsg
( NhuDedMsg *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuCmnMsgInfo
( NhuCmnMsgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuCmnMsg
( NhuCmnMsg *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuDatReqUeMsg
( NhuDatReqUeMsg *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuDatReqSdus
( NhuDatReqSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuUlCcchMsg
( NhuUlCcchMsg *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuDlCcchMsg
( NhuDlCcchMsg *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuDatRspSdus
( NhuDatRspSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDatIndSdus
( NhuDatIndSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuRaOccasion
( NhuRaOccasion *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuRachCfg
( NhuRachCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuCmnMacCfg
( NhuCmnMacCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuCellCfgInfo
( NhuCellCfgInfo *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuCellCfgReqSdus
( NhuCellCfgReqSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuCellCfgCfmSdus
( NhuCellCfgCfmSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDatCfmSdus
( NhuDatCfmSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuStaIndSdus
( NhuStaIndSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuErrIndSdus
( NhuErrIndSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuCfgReqSdus
( NhuCfgReqSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuCfgCfmSdus
( NhuCfgCfmSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuBndReq
( NhuBndReq func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuBndCfm
( NhuBndCfm func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuUbndReq
( NhuUbndReq func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuDatReq
( NhuDatReq func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuDatRsp
( NhuDatRsp func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuDatInd
( NhuDatInd func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuDatCfm
( NhuDatCfm func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuErrInd
( NhuErrInd func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuCfgReq
( NhuCfgReq func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuCfgCfm
( NhuCfgCfm func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuCnclUeReq
( NhuCnclUeReq func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuCellCfgReq
( NhuCellCfgReq func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuCellCfgCfm
( NhuCellCfgCfm func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuDeleteTransReq
( NhuDeleteTransReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkNhuStartPdcpDataFwdReq
( NhuSduStaReq func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuPdcpDatResumeReq
( NhuDatResumeReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkNhuStaInd
( NhuStaInd func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuDecodeReq
( NhuDecodeReq func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuCountReq
( NhuCountReq func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuDecodeCfm
( NhuDecodeCfm func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuCountCfm
( NhuCountCfm func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuEncodeReq
( NhuEncReq func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuEncReqSdus
( NhuEncReqSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuEncodeCfm
( NhuEncCfm func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuEncCfmSdus
( NhuEncCfmSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuPdcpSduStaReq
( NhuSduStaReq func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuPdcpSduStaCfm
( NhuSduStaCfm func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuPdcpSduStaCfmSdus
( NhuPdcpSduStaCfm *param, Buffer *mBuf, Pst *pst )



  ;
extern S16 cmUnpkNhuRbId
( NhuRbId *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuRbId
( NhuRbId *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCellReCfgInfo
( NhuCellReCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuCellReCfgInfo
( NhuCellReCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCellRlsInfo
( NhuCellRlsInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuCellRlsInfo
( NhuCellRlsInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkBuf
( Pst *pst, Buffer *buf, Buffer **mBuf )



  ;
extern S16 cmUnpkBuf
( Buffer **buf, Buffer *mBuf )


  ;

extern S16 cmPkNhuSysBwCfg
( NhuSysBwCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuSysBwCfg
( NhuSysBwCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuPdcpCfgSduStaInfo
( NhuHoPdcpSduInfo *param, Buffer *mBuf, Ptr ptr )



  ;

extern S16 cmUnpkNhuPdcpSduStaInfo
( NhuPdcpSduStaInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDecodeSduReq
( NhuDecodeSduReq *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDecodeSduCfm
( NhuDecodeSduCfm *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDRBCountInfoLst
( NhuDRBCountInfoLst *param, Buffer *mBuf )


  ;


extern S16 cmPkNhuPdcpDatResumeCfmSdus
( NhuPdcpDatResumeCfm *param, Buffer *mBuf )


  ;

extern S16 cmUnpkNhuStartPdcpDataFwdReq
( NhuSduStaReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkNhuPdcpDatResumeReq
( NhuDatResumeReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkNhuUL_DCCH_Msg (NhuUL_DCCH_Msg *param, Ptr ptr, Buffer *mBuf)
       ;
extern S16 cmUnpkNhuDL_DCCH_Msg (NhuDL_DCCH_Msg *param, Ptr ptr, Buffer *mBuf)
       ;
extern S16 cmUnpkNhuBCCH_BCH_Msg (NhuBCCH_BCH_Msg *param, Ptr ptr, Buffer *mBuf)
       ;
extern S16 cmUnpkNhuBCCH_DL_SCH_Msg (NhuBCCH_DL_SCH_Msg *param, Ptr ptr, Buffer *mBuf)
              ;
extern S16 cmUnpkNhuPCCH_Msg (NhuPCCH_Msg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkNhuUL_CCCH_Msg (NhuUL_CCCH_Msg *param, Ptr ptr, Buffer *mBuf)
       ;
extern S16 cmUnpkNhuDL_CCCH_Msg (NhuDL_CCCH_Msg *param, Ptr ptr, Buffer *mBuf)
       ;
typedef U32 PjuSduId;
typedef U32 PjuSduLen;





typedef struct pjuDatCfmSta
{
   PjuSduId sduId;
   U8 status;




}PjuDatCfmSta;





typedef struct pjuDatCfmInfo
{
   U16 numSdus;
   PjuDatCfmSta cfmSta[1024];
}PjuDatCfmInfo;




typedef struct pjuStaIndInfo
{
   U8 cause;
}PjuStaIndInfo;




typedef struct pjuDatFwdInfo
{
   PjuSduId sduId;
   U16 sn;
   Buffer *sdu;

}PjuDatFwdInfo;






typedef struct pjuDatFwdReqInfo
{
   U8 dir;

   U16 numSdus;
   PjuDatFwdInfo *datFwdInfo;
   Bool isLastDatFwdInd;
}PjuDatFwdReqInfo;





typedef PjuDatFwdReqInfo PjuDatFwdIndInfo;
typedef struct pjuDatReqInfo
{
  SpId spId;
  CmLtePdcpId pdcpId;
  PjuSduId sduId;
}PjuDatReqInfo;
typedef struct pjuDatIndInfo
{
  SuId suId;
  CmLtePdcpId pdcpId;
}PjuDatIndInfo;
typedef S16 (*PjuBndReq) ( Pst *, SuId, SpId )



          ;

typedef S16 (*PjuBndCfm) ( Pst *, SuId, U8 )



          ;

typedef S16 (*PjuUbndReq) ( Pst *, SpId, Reason )



          ;

typedef S16 (*PjuDatReq) ( Pst *, SpId, CmLtePdcpId *, PjuSduId, Buffer * )





          ;
typedef S16 (*PjuDatCfm) ( Pst *, SuId, CmLtePdcpId *, PjuDatCfmInfo * )




          ;

typedef S16 (*PjuDatInd) ( Pst *, SuId, CmLtePdcpId *, Buffer * )




          ;

typedef S16 (*PjuStaInd) ( Pst *, SuId, CmLtePdcpId *, PjuStaIndInfo *, Buffer * )





          ;

typedef S16 (*PjuDatFwdReq) ( Pst *, SpId, CmLtePdcpId *, PjuDatFwdReqInfo * )




          ;

typedef S16 (*PjuDatFwdInd) ( Pst *, SuId, CmLtePdcpId *, PjuDatFwdIndInfo * )




          ;
extern S16 PjUiPjuBndReq ( Pst* , SuId , SpId);
extern S16 PjUiPjuBndCfm ( Pst*, SuId, U8);
extern S16 PjUiPjuUbndReq ( Pst*, SpId, Reason);
extern S16 PjUiPjuDatReq ( Pst*, SpId, CmLtePdcpId *, PjuSduId, Buffer*);
extern S16 PjUiPjuDatCfm (Pst*, SuId, CmLtePdcpId *, PjuDatCfmInfo *);
extern S16 PjUiPjuDatInd (Pst*, SuId, CmLtePdcpId *, Buffer*);
extern S16 PjUiPjuStaInd (Pst*, SuId, CmLtePdcpId *, PjuStaIndInfo *, Buffer *);
extern S16 PjUiPjuDatFwdReq (Pst*, SpId, CmLtePdcpId *, PjuDatFwdReqInfo *);
extern S16 PjUiPjuDatFwdInd (Pst*, SuId, CmLtePdcpId *, PjuDatFwdIndInfo *);
extern S16 PxLiPjuBndReq ( Pst *, SuId, SpId )



         ;

extern S16 PxLiPjuUbndReq ( Pst *, SuId, Reason )



         ;

extern S16 PxLiPjuDatReq ( Pst *, SpId, CmLtePdcpId *, PjuSduId, Buffer * )





         ;

extern S16 PxLiPjuBndCfm ( Pst *, SuId, U8 )



         ;

extern S16 PxLiPjuDatInd ( Pst *, SuId, CmLtePdcpId *, Buffer * )




         ;

extern S16 PxLiPjuDatCfm ( Pst *, SuId , CmLtePdcpId *, PjuDatCfmInfo * )




         ;

extern S16 PxLiPjuStaInd ( Pst*, SuId, CmLtePdcpId *, PjuStaIndInfo * , Buffer * )





         ;

extern S16 PxLiPjuDatFwdReq ( Pst *, SpId, CmLtePdcpId *, PjuDatFwdReqInfo * )




         ;


extern S16 PxLiPjuDatFwdInd ( Pst *, SuId, CmLtePdcpId *, PjuDatFwdIndInfo * )




         ;





extern S16 NhLiPjuBndReq ( Pst *, SuId, SpId )



         ;

extern S16 NhLiPjuUbndReq ( Pst *, SuId, Reason )



         ;

extern S16 NhLiPjuDatReq ( Pst *, SpId, CmLtePdcpId *, PjuSduId, Buffer * )





         ;

extern S16 NhLiPjuBndCfm ( Pst *, SuId, U8 )



         ;

extern S16 NhLiPjuDatInd ( Pst *, SuId, CmLtePdcpId *, Buffer * )




         ;

extern S16 NhLiPjuDatCfm ( Pst *, SuId , CmLtePdcpId *, PjuDatCfmInfo * )




         ;

extern S16 NhLiPjuStaInd ( Pst*, SuId, CmLtePdcpId *, PjuStaIndInfo * , Buffer * )





         ;

extern S16 NhLiPjuDatFwdReq ( Pst *, SpId, CmLtePdcpId *, PjuDatFwdReqInfo * )




         ;


extern S16 NhLiPjuDatFwdInd ( Pst *, SuId, CmLtePdcpId *, PjuDatFwdIndInfo * )




         ;
extern S16 cmPkPjuBndReq ( Pst* pst, SpId suId, SuId spId )



  ;
extern S16 cmUnpkPjuBndReq ( PjuBndReq func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmPkPjuBndCfm ( Pst* pst, SuId suId, U8 status )



  ;
extern S16 cmUnpkPjuBndCfm ( PjuBndCfm func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmPkPjuUbndReq ( Pst* pst, SpId spId, Reason reason )



  ;
extern S16 cmUnpkPjuUbndReq ( PjuUbndReq func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmPkPjuDatReq ( Pst* pst, SpId spId, CmLtePdcpId * pdcpId, PjuSduId sduId, Buffer * mBuf )





  ;
extern S16 cmUnpkPjuDatReq ( PjuDatReq func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmPkPjuDatCfm ( Pst* pst, SuId suId, CmLtePdcpId * pdcpId, PjuDatCfmInfo * datCfm )




  ;
extern S16 cmUnpkPjuDatCfm ( PjuDatCfm func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmPkPjuDatInd ( Pst* pst, SuId suId, CmLtePdcpId * pdcpId, Buffer * mBuf )




  ;
extern S16 cmUnpkPjuDatInd ( PjuDatInd func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmPkPjuStaInd ( Pst* pst, SuId suId, CmLtePdcpId * pdcpId, PjuStaIndInfo * staInd, Buffer *buff )





  ;
extern S16 cmUnpkPjuStaInd ( PjuStaInd func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmPkPjuDatFwdReq ( Pst* pst, SpId spId, CmLtePdcpId * pdcpId, PjuDatFwdReqInfo * datFwdReq )




  ;
extern S16 cmUnpkPjuDatFwdReq ( PjuDatFwdReq func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmPkPjuDatFwdInd ( Pst* pst, SuId suId, CmLtePdcpId * pdcpId, PjuDatFwdIndInfo * datFwdInd )




  ;
extern S16 cmUnpkPjuDatFwdInd ( PjuDatFwdInd func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmPkPjuDatCfmInfoSta ( PjuDatCfmSta *param, Buffer *mBuf )


  ;
extern S16 cmUnpkPjuDatCfmInfoSta ( PjuDatCfmSta *param, Buffer *mBuf )


  ;
extern S16 cmPkPjuDatCfmInfo ( PjuDatCfmInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkPjuDatCfmInfo ( PjuDatCfmInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkPjuStaIndInfo ( PjuStaIndInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkPjuStaIndInfo ( PjuStaIndInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkPjuDatFwdReqInfo ( PjuDatFwdReqInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkPjuDatFwdReqInfo ( Pst *pst, PjuDatFwdReqInfo *param, Buffer *mBuf )



  ;
extern S16 cmPkPjuDatFwdInfo ( PjuDatFwdInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkPjuDatFwdInfo ( PjuDatFwdInfo *param, Buffer *mBuf )


  ;

typedef enum cmRrmDsrTransMax
{
   DSR_TRANS_N4,
   DSR_TRANS_N8,
   DSR_TRANS_N16,
   DSR_TRANS_N32,
   DSR_TRANS_N64,
   DSR_TRANS_MAX
}CmRrmDsrTransMax;







typedef struct cmRrmDrxLongCycleOffst
{
   U16 usLongDrxCycle;
   U16 usDrxStartOffst;
} CmRrmDrxLongCycleOffst;
typedef struct cmRrmDrxShortDrx
{
   Bool bPres;
   U16 usShortDrxCycle;
   U8 bDrxShortCycleTmr;
} CmRrmDrxShortDrx;
typedef struct cmRrmDrxCfg
{
   Bool bIsDrxEnabled;
   TknS32 stCqiMask;
   U8 bDrxOnDurTmr;
   U16 usDrxInactvTmr;
   U8 bDrxRetxTmr;
   CmRrmDrxLongCycleOffst stDrxLongCycleOffst;
   CmRrmDrxShortDrx stDrxShortDrx;
} CmRrmDrxCfg;

typedef struct cmRrmCellDrxCfg
{
   Bool bIsGbrDrxDis;
   Bool bIsDrxEnabled;
   U8 bDrxRetxTmr;
   U16 usDrxInactvTmr;
   U16 usLongDrxCycleGbr;
   U16 usLongDrxCycleNonGbr;
} CmRrmCellDrxCfg;
typedef enum cmRrmAcBarringTime
{
 RM_ACB_TIME_S4,
 RM_ACB_TIME_S8,
 RM_ACB_TIME_S16,
 RM_ACB_TIME_S32,
 RM_ACB_TIME_S64,
 RM_ACB_TIME_S128,
 RM_ACB_TIME_S256,
 RM_ACB_TIME_S512
} CmRrmAcBarringTime;
typedef enum cmRrmAcBarringFactor
{
 RM_ACB_FACTOR_P00,
 RM_ACB_FACTOR_P05,
 RM_ACB_FACTOR_P10,
 RM_ACB_FACTOR_P15,
 RM_ACB_FACTOR_P20,
 RM_ACB_FACTOR_P25,
 RM_ACB_FACTOR_P30,
 RM_ACB_FACTOR_P40,
 RM_ACB_FACTOR_P50,
 RM_ACB_FACTOR_P60,
 RM_ACB_FACTOR_P70,
 RM_ACB_FACTOR_P75,
 RM_ACB_FACTOR_P80,
 RM_ACB_FACTOR_P85,
 RM_ACB_FACTOR_P90,
 RM_ACB_FACTOR_P95,
 RM_ACB_FACTOR_NA
} CmRrmAcBarringFactor;
typedef struct cmRrmAcb
{
 CmRrmAcBarringTime enAcbTime;
   CmRrmAcBarringFactor enAcbFactor;
   U8 bAcbForSpac;
} CmRrmAcb;

typedef struct cmRrmAcbInfo
{
   CmRrmAcb stAcBarringMoData;
   CmRrmAcb stAcBarringMoSig;
   U8 bAcBarringEmergency;


   U8 bIsacBarringMoSig;

   U8 bIsacBarringMoData;

} CmRrmAcbInfo;






typedef enum rmuS1apCause
{
   RMU_CAUSE_UNSPECIFIED,
   RMU_CAUSE_TX2_RELOC_OVERALL_EXP,
   RMU_CAUSE_SUCC_HANDOVER,
   RMU_CAUSE_REL_EUTRAN_REASON,
   RMU_CAUSE_HANDOVER_CANCELLED,
   RMU_CAUSE_PARTIAL_HANDOVER,
   RMU_CAUSE_HANDOVER_FAILURE_TRGT_SYS,
   RMU_CAUSE_HANDOVER_TRGT_NOT_ALLOWED,
   RMU_CAUSE_TS1_RELOCOVERALL_EXP,
   RMU_CAUSE_TS1_RELOCPREP_EXP,
   RMU_CAUSE_CELL_NOTAVAILABLE,
   RMU_CAUSE_UNKNOWN_TRGT_ID,
   RMU_CAUSE_NO_RESOURCES_IN_TRGT_CELL,
   RMU_CAUSE_UNKNOWN_ALLOC_MME_UE_S1AP_ID,
   RMU_CAUSE_UNKNOWN_ALLOC_ENB_UE_S1AP_ID,
   RMU_CAUSE_UNKNOWN_INCONSIST_PAIR_UE_S1AP_ID,
   RMU_CAUSE_HANDOVER_DESIRABLE_RADIO_REASON,
   RMU_CAUSE_TIME_CRITICAL_HANDOVER,
   RMU_CAUSE_RESOURCE_OPTIMIZE_HANDOVER,
   RMU_CAUSE_REDUCE_LOAD_IN_SERV_CELL,
   RMU_CAUSE_USR_INACTIVITY,
   RMU_CAUSE_RADIO_CON_UE_LOST,
   RMU_CAUSE_LOAD_BLNC_TAU_REQD,
   RMU_CAUSE_CS_FALLBACK_TRIGGERED,
   RMU_CAUSE_UE_NOTAVAILABLE_PS_SER,
   RMU_CAUSE_RADIO_RESOURCE_NOT_AVAIL,
   RMU_CAUSE_FAIL_RADIO_INTF_PROC,
   RMU_CAUSE_INVALID_QOS_COMB,
   RMU_CAUSE_INTER_RAT_REDIRECT,
   RMU_CAUSE_INTERACT_ITHER_PROC,
   RMU_CAUSE_UNKNOWN_ERAB_ID,
   RMU_CAUSE_MULT_ERAB_ID_INSTANCES,
   RMU_CAUSE_ENCRYPT_INTEGRITY_NOT_SUPPORT,
   RMU_CAUSE_S1_INTRA_SYS_HANDOVER_TRIGGERED,
   RMU_CAUSE_S1_INTER_SYS_HANDOVER_TRIGGERED,
   RMU_CAUSE_X2_HANDOVER_TRIGGERED,
   RMU_CAUSE_REDIRECT_1XRTT,
   RMU_CAUSE_NOT_SUPPORT_QCI,
   RMU_CAUSE_INVALID_CSG_ID,
   RMU_CAUSE_BH_BW_NOT_AVAILABLE,
   RMU_CAUSE_MAX_QCI_REACHED,
   RMU_CAUSE_CHECK_PRB_REQ
}RmuS1apCause;




typedef enum rmuAccessStratumRls
{
   RMU_ACCESS_STRATUM_REL8,
   RMU_ACCESS_STRATUM_REL9,
   RMU_ACCESS_STRATUM_REL9HIGHER
} RmuAccessStratumRls;


typedef struct rmuAcbParamInd
{
  CmRrmAcbInfo stAcbInfo;
} RmuAcbParamInd;

typedef enum rmuCellRecfgType
{
   RMU_CELL_RECFG_ACB_IND
}RmuCellRecfgType;

typedef struct rmuCellRecfgInd
{
   RmuAcbParamInd stAcbParamInd;
   RmuCellRecfgType enCellRecfgType;
   U8 bCellId;
} RmuCellRecfgInd;



typedef enum rmuEnbStatus
{
   RMU_ENB_STATUS_UP,
   RMU_ENB_STATUS_DOWN
}RmuEnbStatus;

typedef enum rmuMmeStatus
{
   RMU_MME_STATUS_UP = 0,
   RMU_MME_STATUS_DOWN
}RmuMmeStatus;

typedef struct rmuMmeStatusInd
{
  RmuMmeStatus enMmeStatus;
  U16 usMmeId;
} RmuMmeStatusInd;

typedef struct rmuEnbStatusInd
{
  U8 bCellId;
  RmuEnbStatus enEnbStatus;
} RmuEnbStatusInd;



typedef enum rmuFsmStatusType
{
   RMU_FSM_STATUS_MME,
   RMU_FSM_STATUS_ENB
}RmuFsmStatusType;

typedef struct rmuFsmStatusInd
{
  RmuFsmStatusType enStatusType;
  union {
      RmuMmeStatusInd stMmeStatusInd;
      RmuEnbStatusInd stEnbStatusInd;
  }u;
} RmuFsmStatusInd;



typedef enum rmuMmeOvldStatus
{
   RMU_MME_REJECT_MODATA,
   RMU_MME_REJECT_MOSIG_MODATA,
   RMU_MME_PERMITONLY_EMG_MTACCESS,
   RMU_MME_PERMITONLY_HIGHPRI_MTACCESS,
   RMU_MME_REJECT_DELAY_TOLERNT_ACCESS,
   RMU_MME_OVLD_STATUS_NORMAL
}RmuMmeOvldStatus;

typedef struct rmuMmeOvldStartInd
{
   RmuMmeOvldStatus enMmeOvldStatus;
   U16 usMmeId;
} RmuMmeOvldStartInd;


typedef struct rmuMmeOvldStopInd
{
   U16 usMmeId;
} RmuMmeOvldStopInd;


typedef enum rmuConEstCause
{
   RMU_EST_CAUSE_EMERGENCY,
   RMU_EST_CAUSE_HIGH_PRIORTY_ACCESS,
   RMU_EST_CAUSE_MT_ACCESS,
   RMU_EST_CAUSE_MO_SIGNALLING,
   RMU_EST_CAUSE_MO_DATA,
   RMU_EST_CAUSE_DELAY_TOLERANT,
   RMU_EST_CAUSE_HO_REQ,
   RMU_MAX_EST_CAUSE
} RmuConEstCause;

typedef struct rmuUeAdmitReq
{
   RmuConEstCause enConEstabCause;
   U32 uiTransId;
   U16 usCrnti;
   U8 bCellId;
} RmuUeAdmitReq;


typedef enum rmuRrcCause
{
   RMU_CAUSE_CELLID_UNKNOWN,
   RMU_CAUSE_MMEID_UNKNOWN,
   RMU_CAUSE_UEID_UNKNOWN,
   RMU_CAUSE_OUT_OF_RESOURCE,
   RMU_CAUSE_MAX_UE_REACHED,
   RMU_CAUSE_CELL_ALREADY_EXISTS,
   RMU_CAUSE_MME_ALREADY_EXISTS,
   RMU_CAUSE_UEID_ALREADY_EXISTS,
   RMU_CAUSE_ENB_ALREADY_UP,
   RMU_CAUSE_NOT_APP,
   RMU_CAUSE_MAX_CSG_UE_REACHED,
   RMU_CAUSE_MAX_NON_CSG_UE_REACHED,
   RMU_CAUSE_MAX_EXTRA_UE_REACHED,
   RMU_CAUSE_OTHER
} RmuRrcCause;

typedef enum rmuStatus
{
   RMU_FAILURE,
   RMU_SUCCESS,
   RMU_REDIRECT
} RmuStatus;

typedef struct rmuStatusInfo
{
   RmuRrcCause enCause;
   RmuStatus enStatus;
} RmuStatusInfo;



typedef enum rmuHandOverType
{
   RMU_HO_TYPE_IntraLTE,
   RMU_HO_TYPE_LTEtoUTRAN,
   RMU_HO_TYPE_LTEtoGERAN,
   RMU_HO_TYPE_UTRANtoLTE,
   RMU_HO_TYPE_GERANtoLTE,
   RMU_HO_TYPE_S1,
   RMU_HO_TYPE_X2
} RmuHandOverType;

typedef enum rmuErabAction
{
   RMU_ADD_ERAB,
   RMU_MOD_ERAB,
   RMU_DEL_ERAB
} RmuErabAction;


typedef struct rmuPst
{
  U16 usDstProcId;
  U16 usSrcProcId;
  U8 bDstEnt;
  U8 bSstInst;
  U8 bSrcEnt;
  U8 bSrcInst;
  U8 bPrior;
  U8 bRoute;
  U8 bEvent;
} RmuPst;

typedef struct rmuUEAggreMaxBitRateIe
{
   U32 uiAggUEMaxBitRateUL;
   U32 uiAggUEMaxBitRateDL;
} RmuUEAggreMaxBitRateIe;

typedef struct rmuErabGbrInfoIe
{
   U32 uiErabDlMbr;
   U32 uiErabUlMbr;
   U32 uiErabDlGbr;
   U32 uiErabUlGbr;
} RmuErabGbrInfoIe;

typedef struct rmuErabArpInfoIe
{
   U8 bErabPrioLvl;
   Bool bErabPreemptCap;
   Bool bErabPreemptVul;
} RmuErabArpInfoIe;

typedef struct rmuErabQosInfoIe
{
   RmuErabArpInfoIe stErabArpInfo;
   RmuErabGbrInfoIe stErabGbrInfo;
   U8 bErabQCI;

} RmuUErabQosInfoIe;

typedef struct rmuErabAddModIe
{
   RmuUErabQosInfoIe stErabQosInfo;

   U8 bErabId;

} RmuUErabAddModIe;

typedef struct rmuErabRelIe
{
   RmuS1apCause enErabRelCause;
   U8 bErabId;

} RmuErabRelIe;

typedef struct rmuErabConfigIe
{
   RmuUErabAddModIe stErabAddModLst[8];
   RmuErabRelIe stErabRelLst[8];
   RmuUEAggreMaxBitRateIe stUeAmbrInfo;
   RmuErabAction enErabAction;
   U16 usNoErabsToAddMod;
   U8 bNoErabsToRel;
   U8 bIsUeAmbrPres;

} RmuErabConfigIe;
typedef struct rmuErabRelLst
{
   RmuErabRelIe stErabRelLst[8];
   U8 bNoErabsToRel;
} RmuErabRelLst;
typedef enum rmuPcqiFormatInd
{
   RMU_PCQI_FMT_WIDEBAND,
   RMU_PCQI_FMT_SUBBAND
} RmuPcqiFormatInd;

typedef enum rmuPucchReportMode
{
   RMU_CQI_MODE10,
   RMU_CQI_MODE11,
   RMU_CQI_MODE20,
   RMU_CQI_MODE21
} RmuPucchReportMode;

typedef enum rmuPuschReportMode
{
   RMU_APRD_CQI_MODE12,
   RMU_APRD_CQI_MODE20,
   RMU_APRD_CQI_MODE22,
   RMU_APRD_CQI_MODE30,
   RMU_APRD_CQI_MODE31
} RmuPuschReportMode;

typedef struct rmuRiConfigIndex
{
   Bool bPres;
   U16 usRiConfigIndex;
} RmuRiConfigIndex;

typedef enum rmuSubbandCqiPeriodicityFactor
{
 RMU_PERIODICITY_FACTOR_N2,
 RMU_PERIODICITY_FACTOR_N4
}RmuSubbandCqiPeriodicityFactor;

typedef struct rmuPCqiReportCfg
{
   U8 type;
   RmuPcqiFormatInd enCqiFormatInd;
   RmuPucchReportMode enPucchReportMode;
   U16 usCqiResourceIndex;
   U16 usCqiConfigIndex;

   RmuRiConfigIndex riConfigIndex;
   U8 bFactorK;


 RmuSubbandCqiPeriodicityFactor sBCqiPeriodicityFactor;
   U8 bSimulAckNackCqi;

   U16 srCfgIdx;
} RmuPCqiReportCfg;

typedef struct rmuApCqiReportCfg
{
   Bool enbld;
   RmuPuschReportMode enPuschReportMode;
} RmuApCqiReportCfg;

typedef struct rmuUeCqiReportCfg
{
   RmuPCqiReportCfg stPrdCqiRepCfg;
   RmuApCqiReportCfg stAPrdCqiRepCfg;
} RmuUeCqiReportCfg;

typedef struct rmuUeSrCfg
{
   U16 usSrIdx;
   U16 usSrResIdx;
   CmRrmDsrTransMax enDsrTransMax;
} RmuUeSrCfg;

typedef enum
{
   RMU_TXN_MODE1,
   RMU_TXN_MODE2,
   RMU_TXN_MODE3,
   RMU_TXN_MODE4,
   RMU_TXN_MODE5,
   RMU_TXN_MODE6,
   RMU_TXN_MODE7
} RmuTxnMode;

typedef struct rmuAntInfo
{
   RmuTxnMode eTxnMode;
   U16 stcodebookSubset;
   U8 ueTxnAntSel;
} RmuAntInfo;
typedef struct rmuUeDedPhyCfg
{
   U8 bPhyCfgDedResBitMap;
   RmuUeCqiReportCfg stCqiRepCfg;
   RmuAntInfo stAntInfo;
 RmuUeSrCfg stSrCfg;





} RmuUeDedPhyCfg;


typedef struct rmuUeMacMainCfg
{
   U8 bMacMainCfgBitMap;
   CmRrmDrxCfg stRmDrxCfg;
} RmuUeMacMainCfg;


typedef struct rmuSpsP0Persistent
{
      S8 sP0NominalPUSCHPersistent;
      S8 sP0UEPuschPersistent;
} RmuSpsP0Persistent;

typedef enum
{
   RMU_SPS_E2,
   RMU_SPS_E3,
   RMU_SPS_E4,
   RMU_SPS_E8
} RmuSpsImplctRelAftr;

typedef enum
{
   RMU_SPS_UL_INTERVAL_E10,
   RMU_SPS_UL_INTERVAL_E20,
   RMU_SPS_UL_INTERVAL_E32,
   RMU_SPS_UL_INTERVAL_E40,
   RMU_SPS_UL_INTERVAL_E64,
   RMU_SPS_UL_INTERVAL_E80,
   RMU_SPS_UL_INTERVAL_E128,
   RMU_SPS_UL_INTERVAL_E160,
   RMU_SPS_UL_INTERVAL_E320,
   RMU_SPS_UL_INTERVAL_E640,
   RMU_SPS_UL_INTERVAL_SPARE6,
   RMU_SPS_UL_INTERVAL_SPARE5,
   RMU_SPS_UL_INTERVAL_SPARE4,
   RMU_SPS_UL_INTERVAL_SPARE3,
   RMU_SPS_UL_INTERVAL_SPARE2,
   RMU_SPS_UL_INTERVAL_SPARE1
}RmuSpsIntervalUl;

typedef enum
{
   RMU_SPS_DL_INTERVAL_E10,
   RMU_SPS_DL_INTERVAL_E20,
   RMU_SPS_DL_INTERVAL_E32,
   RMU_SPS_DL_INTERVAL_E40,
   RMU_SPS_DL_INTERVAL_E64,
   RMU_SPS_DL_INTERVAL_E80,
   RMU_SPS_DL_INTERVAL_E128,
   RMU_SPS_DL_INTERVAL_E160,
   RMU_SPS_DL_INTERVAL_E320,
   RMU_SPS_DL_INTERVAL_E640,
   RMU_SPS_DL_INTERVAL_SPARE6,
   RMU_SPS_DL_INTERVAL_SPARE5,
   RMU_SPS_DL_INTERVAL_SPARE4,
   RMU_SPS_DL_INTERVAL_SPARE3,
   RMU_SPS_DL_INTERVAL_SPARE2,
   RMU_SPS_DL_INTERVAL_SPARE1
}RmuSpsIntervalDl;

typedef struct rmuSpsConfigUl
{
    Bool bIsSpsEnabled;
    RmuSpsIntervalUl eSpsIntervalUl;
    RmuSpsImplctRelAftr eImplctRelAftr;
    Bool bTwoIntervalCfg;
    Bool bP0PersistentPres;
    RmuSpsP0Persistent stP0Persistent;
} RmuSpsConfigUl;

typedef struct rmuSpsConfigDl
{
    Bool bIsSpsEnabled;
    RmuSpsIntervalDl eSpsIntervalDl;
    U16 usExplctRelAftr;
    U8 usNumOfConfSpsProc;
    U8 usNumN1Pucch;
    U16 usN1Pucch[4];
} RmuSpsConfigDl;

typedef struct rmuUeSpsCfg
{
    RmuSpsConfigDl stSpsConfigDl;
    RmuSpsConfigUl stSpsConfigUl;
} RmuUeSpsCfg;


typedef struct rmuUeRadioResCfg
{
   U8 bRadioResDedBitMap;
   RmuUeDedPhyCfg stPhyCfgDed;
   RmuUeMacMainCfg stMacMainCfg;

   RmuUeSpsCfg stSpsCfg;

} RmuUeRadioResCfg;

typedef struct rmuUeAdmitRsp
{
   RmuStatusInfo stStatusInfo;
   RmuUeRadioResCfg stUeRadioResCfg;
   U32 uiTransId;
   U16 usCrnti;
   U8 bCellId;
   U8 bWaitTime;

} RmuUeAdmitRsp;



typedef enum rmuScellAction
{
   RMU_SCELL_ADD,
   RMU_SCELL_MOD_COMMON,
   RMU_SCELL_MOD_DEDICATED,
   RMU_SCELL_RELEASE
} RmuScellAction;

typedef struct rmuSCellInfo
{

   RmuScellAction action;
   CmLteCellId sCellId;
   U8 sCellIdx;

}RmuSCellInfo;
typedef struct rmuUeScellInfoReq
{
   U32 uiTransId;
   U8 pCellId;
   U8 numOfScell;
   RmuSCellInfo sCellIInfo[7];
} RmuUeScellInfoReq;

typedef struct rmuUeSCellDedInfo
{
   RmuStatusInfo stStatusInfo;
   U8 sCellIdx;
   RmuUeCqiReportCfg stCqiRepCfg;
} RmuUeSCellDedInfo;

typedef struct rmuUeSCellInfoRsp
{
   U8 numSCells;
   RmuUeSCellDedInfo sCellDedInfo[7];
} RmuUeSCellInfoRsp;

typedef struct rmuEutraCapInfo
{
   U32 uiFeatureGrpIndicator;

   U32 uiUeCategory;

   RmuAccessStratumRls uiUeAccessStratumRls;

} RmuEutraCapInfo;

typedef struct rmuUeCapInfoIe
{
   RmuEutraCapInfo stEutraCapInfo;
} RmuUeCapInfoIe;

typedef struct rmuUeHoReq
{
   RmuErabConfigIe stErabConfInfo;
   RmuUeCapInfoIe stUeCapInfo;
   RmuUeRadioResCfg stUeRadioResCfg;
   RmuHandOverType enHoType;
   RmuS1apCause enHoS1apCause;
   U32 uiTransId;
   U16 usCrnti;
   U8 bCellId;
   Bool isEmrgncyBrersPsnt;
   U8 isMember;
} RmuUeHoReq;


typedef struct rmuErabAdmitted
{
   U8 bErabId;

   Bool bIsDlSpsEnabled;
   Bool bIsUlSpsEnabled;

} RmuErabAdmitted;

typedef struct rmuErabRejected
{
   RmuS1apCause enCause;
   U8 bErabId;
} RmuErabRejected;

typedef struct rmuUeHoRsp
{
   RmuErabAdmitted stErabAdmitLst[8];
   RmuErabRejected stErabRejectLst[8];
   RmuUeRadioResCfg stUeRadioResCfg;
   RmuStatusInfo stStatusInfo;
   U32 uiTransId;
   U16 usCrnti;
   U8 bCellId;
   U8 bNoErabsAdmitted;
   U8 bNoErabsRejected;
   Bool isGBRBearerExists;
} RmuUeHoRsp;


typedef struct rmuUeRelReq
{
   U32 uiTransId;
   U16 usCrnti;
   U8 bCellId;
} RmuUeRelReq;


typedef struct rmuUeRelRsp
{
   RmuStatusInfo stStatusInfo;
   U32 uiTransId;
   U16 usCrnti;
   U8 bCellId;
} RmuUeRelRsp;


typedef struct rmuUeRelInd
{
   RmuRrcCause enRelCause;
   U16 usCrnti;
   U8 bCellId;
} RmuUeRelInd;
typedef struct rmuUeERabRelInd
{
   RmuErabRelLst stErabRelInfo;
   U16 usCrnti;
   U8 bCellId;
} RmuUeERabRelInd;


typedef struct rmuUeRecfgReq
{
   RmuErabConfigIe stErabConfInfo;
   RmuUeCapInfoIe stUeCapInfo;
   RmuUeScellInfoReq stSCellInfoReq;
   U32 uiTransId;
   U16 usCrnti;
   U16 usUeNewCrnti;
   U8 bCellId;
   U8 bRecfgBitMap;

   U8 isMember;





} RmuUeRecfgReq;


typedef struct rmuUeInactInd
{
   CmLteRnti uiCrnti;
   CmLteCellId uiCellId;
   U8 uiInactEvt;
} RmuUeInactInd;


typedef struct rmuUeRecfgRsp
{
   RmuErabAdmitted stErabAcceptLst[8];
   RmuErabRejected stErabRejectLst[8];
   RmuUeRadioResCfg stUeRadioResCfg;
   RmuUeSCellInfoRsp stUeSCellResCfg;
   RmuStatusInfo stStatusInfo;
   U32 uiTransId;
   U16 usCrnti;
   U8 bCellId;
   U8 bRecfgBitMap;

   U8 bNoErabsAccepted;
   U8 bNoErabsRejected;
   Bool isGBRBearerExists;
} RmuUeRecfgRsp;

typedef RmuUeRecfgRsp RmuUeRecfgInd;


typedef struct rmuUeSpsDisInd
{
   U8 cellId;
   U16 usCrnti;
} RmuUeSpsDisInd;


typedef union
{
 RmuUeAdmitReq stRmuUeAdmitReq;
 RmuUeAdmitRsp stRmuUeAdmitRsp;
 RmuUeRecfgReq stRmuUeRecfgReq;
 RmuUeRecfgRsp stRmuUeRecfgRsp;
 RmuUeRelReq stRmuUeRelReq;
 RmuUeRelRsp stRmuUeRelRsp;
 RmuUeHoReq stRmuUeHoReq;
 RmuUeHoRsp stRmuUeHoRsp;
 RmuCellRecfgInd stRmuCellRecfgInd;
 RmuFsmStatusInd stRmuFsmStatusInd;
 RmuUeRelInd stRmuUeRelInd;
   RmuUeERabRelInd stRmuUeERabRelInd;
   RmuMmeOvldStartInd stRmuOverLoadStartInd;
   RmuMmeOvldStopInd stRmuOverLoadStopInd;

   RmuUeSpsDisInd stRmuSpsDisInd;


   RmuUeInactInd stRmuUeInactInd;
   RmuUeRecfgInd stRmuUeReCfgInd;
} RmuCommonMsg;



typedef S16 (*RmuFsmStatusIndFPtr) ( Pst *pst, SuId suId, RmuFsmStatusInd *statusInd )



          ;

typedef S16 (*RmuMmeOvldStartIndFPtr) ( Pst *pst, SuId suId, RmuMmeOvldStartInd *startInfo )



          ;

typedef S16 (*RmuMmeOvldStopIndFPtr) ( Pst *pst, SuId suId, RmuMmeOvldStopInd *stopInfo )



          ;
typedef S16 (*RmuUeAdmitReqFPtr) ( Pst *pst, SuId suId, RmuUeAdmitReq *admitInfo )



          ;
typedef S16 (*RmuUeHoReqFPtr) ( Pst *pst, SuId suId, RmuUeHoReq *hoInfo )



          ;
typedef S16 (*RmuUeRelReqFPtr) ( Pst *pst, SuId suId, RmuUeRelReq *relInfo )



          ;
typedef S16 (*RmuUeRecfgReqFPtr) ( Pst *pst, SuId suId, RmuUeRecfgReq *reconfiginfo )



          ;

typedef S16 (*RmuUeInactIndFPtr) ( Pst *pst, SuId suId, RmuUeInactInd *rrmUeInactInd )



          ;

typedef S16 (*RmuUeSpsDisIndFPtr) ( Pst *pst, SuId suId, RmuUeSpsDisInd *ueSpsDisInd )



          ;


typedef S16 (*RmuBndReqFPtr) ( Pst *pst, SuId suId, SpId spId )



          ;

typedef S16 (*RmuCellRecfgIndFPtr) ( Pst *pst, SuId suId, RmuCellRecfgInd *cellRecfgInfo )



          ;

typedef S16 (*RmuUeRecfgIndFPtr) ( Pst *pst, SuId suId, RmuUeRecfgInd *ueRecfgInfo )



          ;
typedef S16 (*RmuUeAdmitRspFPtr) ( Pst *pst, SuId suId, RmuUeAdmitRsp *admitRspinfo )



          ;
typedef S16 (*RmuUeHoRspFPtr) ( Pst *pst, SuId suId, RmuUeHoRsp *hoRspinfo )



          ;
typedef S16 (*RmuUeRelRspFPtr) ( Pst *pst, SuId suId, RmuUeRelRsp *relrspinfo )



          ;
typedef S16 (*RmuUeRelIndFPtr) ( Pst *pst, SuId suId, RmuUeRelInd *relIndinfo )



          ;


typedef S16 (*RmuUeERabRelIndFPtr) ( Pst *pst, SuId suId, RmuUeERabRelInd *relIndinfo )



          ;
typedef S16 (*RmuUeRecfgRspFPtr) ( Pst *pst, SuId suId, RmuUeRecfgRsp *recfgRspinfo )



          ;
typedef S16 (*RmuBndCfmFPtr) ( Pst *pst, SuId suId, U8 status )



          ;


extern S16 cmPkRmuFsmStatusInd (Pst *pst, SuId suId, RmuFsmStatusInd *statusInd);
extern S16 cmPkRmuMmeOverloadStartInd (Pst *pst, SuId suId, RmuMmeOvldStartInd *startInfo);
extern S16 cmPkRmuMmeOverloadStopInd (Pst *pst, SuId suId, RmuMmeOvldStopInd *stopinfo);
extern S16 cmPkRmuUeAdmitReq (Pst *pst, SuId suId, RmuUeAdmitReq *admitinfo);
extern S16 cmPkRmuUeHoReq (Pst *pst, SuId suId, RmuUeHoReq *hoinfo);
extern S16 cmPkRmuUeRelReq (Pst *pst, SuId suId, RmuUeRelReq *relinfo);
extern S16 cmPkRmuUeRecfgReq (Pst *pst, SuId suId, RmuUeRecfgReq *reconfiginfo);

extern S16 cmPkRmuUeSpsDisInd (Pst *pst, SuId suId, RmuUeSpsDisInd *ueSpsDisInd);



extern S16 cmPkRmuUeInactInd (Pst *pst, SuId suId, RmuUeInactInd *rrmUeInactInd)
                                                   ;

extern S16 cmPkRmuBndReq (Pst *pst, SuId suId, SpId spId);

extern S16 cmUnpkRmuCellRecfgInd (RmuCellRecfgIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkRmuUeRecfgInd (RmuUeRecfgIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkRmuUeAdmitRsp (RmuUeAdmitRspFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkRmuUeHoRsp (RmuUeHoRspFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkRmuUeRelRsp (RmuUeRelRspFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkRmuUeRelInd (RmuUeRelIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkRmuUeERabRelInd (RmuUeERabRelIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkRmuUeRecfgRsp (RmuUeRecfgRspFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkRmuBndCfm (RmuBndCfmFPtr func, Pst* pst, Buffer* mBuf);


extern S16 cmPkLwLcRmuFsmStatusInd (Pst *pst, SuId suId, RmuFsmStatusInd *statusInd);
extern S16 cmPkLwLcRmuMmeOverloadStartInd (Pst *pst, SuId suId, RmuMmeOvldStartInd *startInfo);
extern S16 cmPkLwLcRmuMmeOverloadStopInd (Pst *pst, SuId suId, RmuMmeOvldStopInd *stopinfo);
extern S16 cmPkLwLcRmuUeAdmitReq (Pst *pst, SuId suId, RmuUeAdmitReq *admitinfo);
extern S16 cmPkLwLcRmuUeHoReq (Pst *pst, SuId suId, RmuUeHoReq *hoinfo);
extern S16 cmPkLwLcRmuUeRelReq (Pst *pst, SuId suId, RmuUeRelReq *relinfo);
extern S16 cmPkLwLcRmuUeRecfgReq (Pst *pst, SuId suId, RmuUeRecfgReq *reconfiginfo);

extern S16 cmPkLwLcRmuUeSpsDisInd (Pst *pst, SuId suId, RmuUeSpsDisInd *ueSpsDisInd);



extern S16 cmPkLwLcRmuUeInactInd (Pst *pst, SuId suId, RmuUeInactInd *rrmUeInactInd)
                                                       ;

extern S16 cmPkLwLcRmuBndReq (Pst *pst, SuId suId, SpId spId);

extern S16 cmUnpkLwLcRmuCellReCfgInd (RmuCellRecfgIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeReCfgInd (RmuUeRecfgIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeAdmitRsp (RmuUeAdmitRspFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeHoRsp (RmuUeHoRspFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeRelRsp (RmuUeRelRspFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeRelInd (RmuUeRelIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeERabRelInd (RmuUeERabRelIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeRecfgRsp (RmuUeRecfgRspFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuBndCfm (RmuBndCfmFPtr func, Pst* pst, Buffer* mBuf);

extern S16 cmPkLwLcRmuUeAdmitRsp (Pst *pst, SuId suId, RmuUeAdmitRsp *admitRspInfo);
extern S16 cmPkLwLcRmuUeHoRsp (Pst *pst, SuId suId, RmuUeHoRsp *hoRspInfo);
extern S16 cmPkLwLcRmuUeRelRsp (Pst *pst, SuId suId, RmuUeRelRsp *ueRelRspInfo);
extern S16 cmPkLwLcRmuUeRelInd (Pst *pst, SuId suId, RmuUeRelInd *ueRelIndInfo);
extern S16 cmPkLwLcRmuUeERabRelInd (Pst *pst, SuId suId, RmuUeERabRelInd *rabRelIndInfo);
extern S16 cmPkLwLcRmuUeRecfgRsp (Pst *pst, SuId suId, RmuUeRecfgRsp *ueRecfgRspInfo);
extern S16 cmPkLwLcRmuCellRecfgInd (Pst *pst, SuId suId, RmuCellRecfgInd *cellRecfgInd);
extern S16 cmPkLwLcRmuUeRecfgInd (Pst *pst, SuId suId, RmuUeRecfgInd *ueRecfgInd);
extern S16 cmPkLwLcRmuBndCfm (Pst *pst, SuId suId, U8 status);

extern S16 cmUnpkLwLcRmuBndReq (RmuBndReqFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeAdmitReq (RmuUeAdmitReqFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeHoReq (RmuUeHoReqFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeRelReq (RmuUeRelReqFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeRelReq (RmuUeRelReqFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeRecfgReq (RmuUeRecfgReqFPtr func, Pst* pst, Buffer* mBuf);

extern S16 cmUnpkLwLcRmuUeSpsDisInd (RmuUeSpsDisIndFPtr func, Pst* pst, Buffer* mBuf);


extern S16 cmUnpkLwLcRmuUeInactInd (RmuUeInactIndFPtr func,Pst* pst,Buffer* mBuf);
extern S16 cmUnpkLwLcRmuMmeOvldStartInd (RmuMmeOvldStartIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuMmeOvldStopInd (RmuMmeOvldStopIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuFsmStatusInd (RmuFsmStatusIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 WrLiRmuFsmStatusInd (Pst *pst, SuId suId, RmuFsmStatusInd *statusInd);
extern S16 WrLiRmuMmeOverloadStartInd (Pst *pst, SuId suId, RmuMmeOvldStartInd *startInfo);
extern S16 WrLiRmuMmeOverloadStopInd (Pst *pst, SuId suId, RmuMmeOvldStopInd *stopinfo);
extern S16 WrLiRmuUeAdmitReq (Pst *pst, SuId suId, RmuUeAdmitReq *admitinfo);
extern S16 WrLiRmuUeHoReq (Pst *pst, SuId suId, RmuUeHoReq *hoinfo);
extern S16 WrLiRmuUeRelReq (Pst *pst, SuId suId, RmuUeRelReq *relinfo);
extern S16 WrLiRmuUeRecfgReq (Pst *pst, SuId suId, RmuUeRecfgReq *reconfiginfo);

extern S16 WrLiRmuUeSpsDisInd (Pst *pst, SuId suId, RmuUeSpsDisInd *ueSpsDisInd);


extern S16 WrLiRmuUeInactInd (Pst *pst, SuId suId,RmuUeInactInd *rrmUeInactInd);

extern S16 WrLiRmuBndReq (Pst *pst, SuId suId, SpId spId);

extern S16 WrLiRmuCellRecfgInd (Pst *pst, SuId suId, RmuCellRecfgInd *cellRecfgInfo);
extern S16 WrLiRmuUeRecfgInd (Pst *pst, SuId suId, RmuUeRecfgInd *ueRecfgInfo);
extern S16 WrLiRmuUeAdmitRsp (Pst *pst, SuId suId, RmuUeAdmitRsp *admitRspinfo);
extern S16 WrLiRmuUeHoRsp (Pst *pst, SuId suId, RmuUeHoRsp *hoRspinfo);
extern S16 WrLiRmuUeRelRsp (Pst *pst, SuId suId, RmuUeRelRsp *relrspinfo);
extern S16 WrLiRmuUeRelInd (Pst *pst, SuId suId, RmuUeRelInd *relIndinfo);
extern S16 WrLiRmuUeERabRelInd (Pst *pst, SuId suId, RmuUeERabRelInd *relIndinfo);
extern S16 WrLiRmuUeRecfgRsp (Pst *pst, SuId suId, RmuUeRecfgRsp *recfgRspinfo);
extern S16 WrLiRmuBndCfm (Pst *pst, SuId suId, U8 status);


extern S16 RmUiRmuBndReq (Pst *pst, SuId suId, SpId spId);
extern S16 RmUiRmuFsmStatusInd (Pst *pst, SuId suId, RmuFsmStatusInd *statusInd);
extern S16 RmUiRmuUeAdmitReq (Pst *pst, SuId suId, RmuUeAdmitReq *admitinfo);
extern S16 RmUiRmuUeHoReq (Pst *pst, SuId suId, RmuUeHoReq *hoinfo);
extern S16 RmUiRmuUeRelReq (Pst *pst, SuId suId, RmuUeRelReq *relinfo);
extern S16 RmUiRmuUeRecfgReq (Pst *pst, SuId suId, RmuUeRecfgReq *reconfiginfo);

extern S16 RmUiRmuUeSpsDisInd (Pst *pst, SuId suId, RmuUeSpsDisInd *ueSpsDisInd);


extern S16 RmUiRmuUeInactInd (Pst *pst, SuId suId, RmuUeInactInd *rrmUeInactInd)
                                                   ;

extern S16 RmUiRmuMmeOvldStartInd (Pst *pst, SuId suId, RmuMmeOvldStartInd *startInfo);
extern S16 RmUiRmuMmeOvldStopInd (Pst *pst, SuId suId,RmuMmeOvldStopInd *stopinfo);

extern S16 RmUiRmuCellRecfgInd (Pst *pst, SuId suId, RmuCellRecfgInd *cellRecfgInfo);
extern S16 RmUiRmuUeRecfgInd (Pst *pst, SuId suId, RmuUeRecfgInd *pstUeRecfgInd);
extern S16 RmUiRmuUeAdmitRsp (Pst *pst, SuId suId, RmuUeAdmitRsp *admitRspinfo);
extern S16 RmUiRmuUeHoRsp (Pst *pst, SuId suId, RmuUeHoRsp *hoRspinfo);
extern S16 RmUiRmuUeRelRsp (Pst *pst, SuId suId, RmuUeRelRsp *relrspinfo);
extern S16 RmUiRmuUeRelInd (Pst *pst, SuId suId, RmuUeRelInd *relIndinfo);
extern S16 RmUiRmuUeERabRelInd (Pst *pst, SuId suId, RmuUeERabRelInd *relIndinfo);
extern S16 RmUiRmuUeRecfgRsp (Pst *pst, SuId suId, RmuUeRecfgRsp *recfgRspinfo);
extern S16 RmUiRmuBndCfm (Pst *pst, SuId suId, U8 status);
extern S16 PtPkRmuUeAdmitRsp (Pst *pst, SuId suId, RmuUeAdmitRsp *admitRspInfo);
extern S16 PtPkRmuUeHoRsp (Pst *pst, SuId suId, RmuUeHoRsp *hoRspInfo);
extern S16 PtPkRmuUeRelRsp (Pst *pst, SuId suId, RmuUeRelRsp *ueRelRspInfo);
extern S16 PtPkRmuUeRelInd (Pst *pst, SuId suId, RmuUeRelInd *ueRelIndInfo);
extern S16 PtPkRmuUeERabRelInd (Pst *pst, SuId suId, RmuUeERabRelInd *rabRelIndInfo);
extern S16 PtPkRmuUeRecfgRsp (Pst *pst, SuId suId, RmuUeRecfgRsp *ueRecfgRspInfo);
extern S16 PtPkRmuCellRecfgInd (Pst *pst, SuId suId, RmuCellRecfgInd *cellRecfgInd);
extern S16 PtPkRmuUeRecfgInd (Pst *pst, SuId suId, RmuUeRecfgInd *ueRecfgInd);
extern S16 PtPkRmuBndCfm (Pst *pst, SuId suId, U8 status);
typedef struct nluPlmnId
{
   U8 numMncDigits;
   U8 mcc[3];
   U8 mnc[3];
}NluPlmnId;



typedef struct nluEcgi
{
   NluPlmnId plmn;
   U32 cellId;
}NluEcgi;





typedef struct nluPciModIndCfm
{
   NluEcgi ecgi;
   U16 pci;
}NluPciModIndCfm;



typedef struct nluNghCellInfo
{
   NluEcgi ecgi;
   U16 pci;
   U16 dlEarfcn;
   U16 ulEarfcn;
}NluNghCellInfo;

typedef struct nluNghCellModInfo
{
   NluEcgi oldEcgi;
   NluNghCellInfo nghCellInfo;
   U8 numNghNgh;
   NluNghCellInfo nghNghCellInfo[16];

}NluNghCellModInfo;

typedef struct nluNghCellMod
{
   U8 numNgh;
   NluNghCellModInfo nghCellModInfo[16];

}NluNghCellMod;

typedef struct nluNghCellDel
{
   U8 numNgh;
   NluEcgi ecgi[16];
}NluNghCellDel;

typedef struct nluNghCellAddInfo
{
   NluNghCellInfo nghCellInfo;
   U8 numNghNgh;
   NluNghCellInfo nghNghCellInfo[16];
}NluNghCellAddInfo;

typedef struct nluNghCellAdd
{
   U8 numNgh;
   NluNghCellAddInfo nghCellAddInfo[16];

}NluNghCellAdd;

typedef enum nluNghCfgType
{
   NLU_NGH_ADD,
   NLU_NGH_DEL,
   NLU_NGH_MOD
}NluNghCfgType;

typedef struct nluNghCellCfgParam
{
   NluNghCfgType cfgType;
   union
   {
      NluNghCellAdd nghCellAdd;
      NluNghCellDel nghCellDel;
      NluNghCellMod nghCellMod;
   }u;

}NluNghCellCfgParam;

typedef struct nluNghEnbCellCfg
{
   U32 nghEnbId;
   NluNghCellCfgParam nghCellParam;
}NluNghEnbCellCfg;

typedef enum nluNghMsgType
{
   NLU_X2SETUP_REQ_NGH_RPT,
   NLU_X2SETUP_RSP_NGH_RPT,
   NLU_ENB_CFG_UPD_NGH_RPT,
   NLU_ENB_ANR_NGH_RPT,
   NLU_ENB_DEL_NGH_RPT
}NluNghMsgType;



typedef struct nluNeighborReport
{
   NluNghMsgType msgType;
   U32 servCellId;
   U8 numNghEnb;
   NluNghEnbCellCfg nghEnbCellCfg[16];
}NluNeighborReport;


typedef struct nluPeriodicRemCellInfo {
   U16 pci;
   U8 rsrp;
   U8 dlBw;
   U8 numTx;
}NluPeriodicRemCellInfo;

typedef struct nluPeriodicRemCellSearchRsp {
   U8 numCells;
   NluPeriodicRemCellInfo cellInfo[16];
}NluPeriodicRemCellSearchRsp;







typedef enum nluUeEvent
{
   NLU_UE_ADDED,
   NLU_UE_DELETED,
   NLU_UE_CRNTI_CHANGED

}NluUeEvent;



typedef struct nluUeInfo
{
   NluUeEvent event;

   NluEcgi ecgi;
   U16 crnti;
   U16 oldCrnti;
}NluUeInfo;

extern S16 NlUiNluUeInd ( Pst *pst, SuId suId, NluUeInfo *ueInfo )



  ;
typedef struct nluNghCellMeasRpt
{
   NluEcgi ecgi;
   S16 nghCellRsrp;
   S16 nghCellRsrq;
   U16 pci;
   U32 dlEarfcn;
}NluNghCellMeasRpt;




typedef struct nluUeMeasRpt
{
   NluEcgi ecgi;
   U16 crnti;





   U32 noNghCell;
   NluNghCellMeasRpt nghCellMeasRpt[16];
   U32 servCellRsrp;
   U32 servCellRsrq;

}NluUeMeasRpt;

extern S16 NlUiNluUeMeasReportInd ( Pst *pst, SuId suId, NluUeMeasRpt *measRpt )



  ;





typedef struct rgrStaIndInfo NluUeCqiRpt;


extern S16 NlUiNluUeCqiReportInd ( Pst *pst, SuId suId, NluUeCqiRpt *cqiRpt )



  ;




typedef S16 (*NluBndReq) ( Pst *pst, SuId suId, SpId spId )



  ;




typedef S16 (*NluBndCfm) ( Pst *pst, SuId suId, SpId spId, U8 status )




  ;




typedef S16 (*NluNeighborReq) ( Pst *pst, SuId suId, NluNeighborReport *nhbr )



  ;




typedef S16 (*NluPciModCfm) ( Pst *pst, SuId suId, NluPciModIndCfm *pciMod )



  ;





typedef S16 (*NluUeMeasRptInd) ( Pst *pst, SuId suId, NluUeMeasRpt *measRpt )



  ;





typedef S16 (*NluUeInd) ( Pst *pst, SuId suId, NluUeInfo *ueInfo )



  ;




typedef S16 (*NluUeCqiRptInd) ( Pst *pst, SuId suId, NluUeCqiRpt *cqiRpt )



  ;
extern S16 WrLiNluBndReq ( Pst *pst, SuId suId, SpId spId )



  ;




extern S16 WrLiNluPciModIndCfm ( Pst *pst, SuId suId, NluPciModIndCfm *pciMod )



  ;

extern S16 WrLiNluUeCqiRptInd ( Pst *pst, SuId suId, NluUeCqiRpt *cqiRpt )



  ;

extern S16 WrLiNluUeMeasRptInd ( Pst *pst, SuId suId, NluUeMeasRpt *measRpt )



  ;






extern S16 WrLiNluNeighborReq ( Pst *pst, SuId suId, NluNeighborReport *ueRep )



  ;

extern S16 WrLiNluUeInd ( Pst *pst, SuId suId, NluUeInfo *ueInfo )



  ;







extern S16 cmPkNluBndReq ( Pst *pst, SuId suId, SpId spId )



  ;






extern S16 cmUnpkNluBndReq ( NluBndReq func, Pst *pst, Buffer *mBuf )



  ;






extern S16 ptUiNluBndReq ( Pst *pst, SuId suId, SpId spId )



  ;

extern S16 cmPkNluBndCfm ( Pst *pst, SuId suId, SpId spId, U8 status )




  ;







extern S16 cmUnpkNluBndCfm ( NluBndCfm func, Pst *pst, Buffer *mBuf )



  ;





extern S16 cmPkNluNeighborReq ( Pst *pst, SuId suId, NluNeighborReport *nhbr )



  ;





extern S16 ptUiNluNeighborReq ( Pst *pst, SuId suId, NluNeighborReport *nhbr )



  ;





extern S16 cmUnpkNluNeighborReq ( NluNeighborReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmPkNluPciModIndCfm ( Pst *pst, SuId suId, NluPciModIndCfm *pciMod )



  ;


extern S16 ptUiNluPciModIndCfm ( Pst *pst, SuId suId, NluPciModIndCfm *pciMod )



  ;







extern S16 WrLiNluBndCfm ( Pst *pst, SuId suId, SpId spId, U8 status )




  ;






extern S16 NlUiNluBndReq ( Pst *pst, SuId suId, SpId spId )



  ;






extern S16 NlUiNluBndCfm ( Pst *pst, SuId suId, SpId spId, U8 status )




  ;






extern S16 PtLiNluBndCfm ( Pst *pst, SuId suId, SpId spId, U8 status )




  ;







extern S16 NlUiNluNeighborReq ( Pst *pst, SuId suId, NluNeighborReport *newNhbr )



  ;





extern S16 cmUnpkNluPciModIndCfm ( NluPciModCfm func, Pst *pst, Buffer *mBuf )



  ;




extern S16 NlUiNluPciModIndCfm ( Pst *pst, SuId suId, NluPciModIndCfm *pciMod )



  ;

extern S16 cmPkNluUeMeasReportInd ( Pst *pst, SuId suId, NluUeMeasRpt *measRpt )



  ;

extern S16 cmUnpkNluUeMeasReportInd ( NluUeMeasRptInd func, Pst *pst, Buffer *mBuf )



  ;


extern S16 ptUiNluUeMeasReportInd ( Pst *pst, SuId suId, NluUeMeasRpt *measRpt )



  ;

extern S16 cmPkNluUeInd ( Pst *pst, SuId suId, NluUeInfo *ueInfo )



  ;

extern S16 cmUnpkNluUeInd ( NluUeInd func, Pst *pst, Buffer *mBuf )



  ;


extern S16 ptUiNluUeInd ( Pst *pst, SuId suId, NluUeInfo *ueInfo )



  ;

extern S16 cmPkNluUeCqiReportInd ( Pst *pst, SuId suId, NluUeCqiRpt *cqiRpt )



  ;

extern S16 cmUnpkNluUeCqiReportInd ( NluUeCqiRptInd func, Pst *pst, Buffer *mBuf )



  ;


extern S16 ptUiNluUeCqiReportInd ( Pst *pst, SuId suId, NluUeCqiRpt *cqiRpt )



  ;
typedef S16 (*NluPerCellSrchRsp) ( Pst *pst, SuId suId, NluPeriodicRemCellSearchRsp *cellSrchRsp )



  ;

extern S16 cmUnpkNluPerCellSrchRsp ( NluPerCellSrchRsp func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmPkNluPerCellSrchRsp ( Pst *pst, SuId suId, NluPeriodicRemCellSearchRsp *cellInfo )



  ;

extern S16 WrLiNluPerCellSrchRsp ( Pst *pst, SuId suId, NluPeriodicRemCellSearchRsp *cellSrchRsp )



  ;

extern S16 ptUiNluPerCellSrchRsp ( Pst *pst, SuId suId, NluPeriodicRemCellSearchRsp *cellInfo )



  ;

extern S16 NlUiNluPerdCellSrchRsp ( Pst *pst, SuId suId, NluPeriodicRemCellSearchRsp *cellSrchRsp )



  ;
typedef U8 CpjCipherKey;





typedef U8 CpjIntegrityKey;





typedef struct cpjRlcAm
{
   Bool statusRepReqd;
   U8 pdcpSNSize;
}CpjRlcAm;





typedef struct cpjRlcUm
{
   U8 pdcpSNSize;
}CpjRlcUm;





typedef struct cpjRlcInfo
{
   U8 dir;
   U8 mode;
   union
   {
      CpjRlcAm rlcAm;
      CpjRlcUm rlcUm;
   }m;
}CpjRlcInfo;






typedef struct cpjCipherInfo
{
   CpjCipherKey ctrlplnKey[16];

   CpjCipherKey usrplnKey[16];

   U8 algoType;





}CpjCipherInfo;





typedef struct cpjIntegInfo
{
   U8 algoType;




   CpjIntegrityKey intKey[16];
} CpjIntegInfo;





typedef struct cpjSecCfg
{
   Bool selSecAct;







   U8 isHo;
   CpjIntegInfo integInfo;
   CpjCipherInfo cipherInfo;
} CpjSecCfg;





typedef struct cpjRohcInfo
{
   U16 maxCid;
   Bool profLst[9];

}CpjRohcInfo;





typedef struct cpjHdrCompCfg
{
   Bool hdrCompUsed;
   CpjRohcInfo rohcInfo;
}CpjHdrCompCfg;





typedef struct cpjHoInfo
{
   U8 isHoPres;





   U8 snLen;
   U32 dlCount;
   U32 ulCount;
   U16 numBits;
   U8 *ulBitMap;

} CpjHoInfo;





typedef struct cpjAddCfgEnt
{
   Bool discReqd;

   Bool cfmReqd;






   CpjRlcInfo rlcInfo;
   S16 discardTmr;



   CpjHdrCompCfg hdrCompCfg;
}CpjAddCfgEnt;





typedef struct cpjModCfgEnt
{

   U8 bitFlag;


   Bool discReqd;


   Bool cfmReqd;


   CpjHdrCompCfg hdrCompCfg;
   CpjHoInfo hoInfo;
}CpjModCfgEnt;






typedef struct cpjCfgEnt
{
   U8 rbId;
   U8 cfgType;





   U8 rbType;



   union{
        CpjAddCfgEnt addCfg;

        CpjModCfgEnt modCfg;

   }m;
}CpjCfgEnt;
typedef struct cpjCfgReqInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   U8 numEnt;

   U8 isHo;

   SpId rlcUlSapId;
   SpId rlcDlSapId;

   CpjCfgEnt cfgEnt[10];

}CpjCfgReqInfo;





typedef struct cpjCfmEnt
{
   U8 rbId;
   U8 rbType;
   Status status;
   Reason reason;
}CpjCfmEnt;





typedef struct cpjCfgCfmInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   U8 numEnt;
   CpjCfmEnt cfmEnt[10];

}CpjCfgCfmInfo;





typedef struct cpjReEstReqInfo
{
   CmLtePdcpId pdcpId;
   U32 transId;
   U8 intKey[16];
   CpjCipherKey ctrlplnKey[16];

   CpjCipherKey usrplnKey[16];

}CpjReEstReqInfo;





typedef struct cpjDataFwdReqInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   Bool isUlDatFwdReq;
}CpjDataFwdReqInfo;






typedef struct cpjDatResumeReqInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
}CpjDatResumeReqInfo;




typedef struct cpjReEstCfmInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   Status status;




}CpjReEstCfmInfo;






typedef struct cpjSecCfgReqInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   CpjSecCfg secCfg;
}CpjSecCfgReqInfo;





typedef struct cpjSecCfgCfmInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   Status status;
   Reason reason;
}CpjSecCfgCfmInfo;





typedef struct cpjUeInfo
{
   CmLteCellId cellId;
   CmLteRnti ueId;
}CpjUeInfo;





typedef struct cpjCountReqInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
} CpjCountReqInfo;





typedef struct cpjCountInfo
{
   U8 rbId;
   U8 dir;
   U32 ulCount;
   U32 dlCount;
} CpjCountInfo;




typedef struct cpjCountCfmInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   U8 numRb;
   CpjCountInfo countInfo[12];
   Status status;
   Reason reason;
} CpjCountCfmInfo;






typedef struct cpjSduStaReqInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
} CpjSduStaReqInfo;





typedef struct cpjUlSduStaInfo
{
   U16 numBits;
   U8 *ulBitMap;
   U32 count;

} CpjUlSduStaInfo;





typedef struct cpjDlSduStaInfo
{
   U32 count;

} CpjDlSduStaInfo;





typedef struct cpjSduStaInfo
{
   U8 rbId;
   U8 dir;
   U8 snLen;
   CpjUlSduStaInfo ulSduStaInfo;
   CpjDlSduStaInfo dlSduStaInfo;
} CpjSduStaInfo;





typedef struct cpjSduStaCfmInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   U8 numRb;
   CpjSduStaInfo sduStaInfo[12];

   Status status;
   Reason reason;
} CpjSduStaCfmInfo;





typedef struct cpjDatResumeCfmInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   Status status;
   Reason reason;
} CpjDatResumeCfmInfo;





typedef struct cpjAsKeyInfo{
           U8 intgAlgoType;

           U8 ciphAlgoType;

           U8 secKey[32];

}CpjAsKeyInfo;


typedef struct cpjKenbStarInfo{
           U16 dlCarrFreq;
           U16 physCellId;
           U8 secKey[32];

}CpjKenbStarInfo;


typedef struct cpjNhKeyInfo{
           U16 dlCarrFreq;
           U16 physCellId;
           U8 secKey[32];

}CpjNhKeyInfo;

typedef struct cpjKdfReqInfo {
   U8 keyDerType;


   union
   {
      CpjAsKeyInfo kEnbInf;

      CpjKenbStarInfo kEnbStarInf;


      CpjNhKeyInfo nhKeyInf;


   } u;
} CpjKdfReqInfo;



typedef struct cpjCfgTransId {
   U8 trans[9];
} CpjCfgTransId;
typedef struct cpjAskeyCfmInfo{
          U8 intKey[32];

          U8 upCiphKey[32];

          U8 cpCiphKey[32];

}CpjAskeyCfmInfo;


typedef struct cpjKenbStarCfmInfo{
           U8 secKey[32];

}CpjKenbStarCfmInfo;


typedef struct cpjNhKeyCfmInfo{
           U8 secKey[32];

}CpjNhKeyCfmInfo;

typedef struct cpjKdfCfmInfo {
   U8 keyDerType;


   union
   {
      CpjAskeyCfmInfo kEnbInf;
      CpjKenbStarCfmInfo kEnbStarInf;

      CpjNhKeyCfmInfo nhKeyInf;

   } u;
} CpjKdfCfmInfo;
typedef S16 (*CpjBndReq) (Pst *pst, SuId suId, SpId spId);
typedef S16 (*CpjBndCfm) (Pst *pst, SuId suId, U8 status);
typedef S16 (*CpjUbndReq) (Pst *pst, SpId spId, Reason reason);
typedef S16 (*CpjCfgReq) (Pst *pst, SpId spId, CpjCfgReqInfo *cfgReq);
typedef S16 (*CpjCfgCfm) (Pst *pst, SuId suId, CpjCfgCfmInfo *cfgCfm);
typedef S16 (*CpjReEstReq) (Pst *pst, SpId spId, CpjReEstReqInfo *reEstReq);
typedef S16 (*CpjReEstCfm) (Pst *pst, SuId suId, CpjReEstCfmInfo *reEstCfm);
typedef S16 (*CpjSecCfgReq) (Pst *pst, SpId spId, CpjSecCfgReqInfo *secCfgReq);
typedef S16 (*CpjSecCfgCfm) (Pst *pst, SuId suId, CpjSecCfgCfmInfo *secCfgCfm);
typedef S16 (*CpjUeIdChgReq) (Pst *pst, SpId spId, U32 transId, CpjUeInfo *oldUeInfo, CpjUeInfo *newUeInfo)

                                                          ;
typedef S16 (*CpjUeIdChgCfm) (Pst *pst, SuId suId, U32 transId, CpjUeInfo *ueInfo, CmStatus status)
                                                                         ;
typedef S16 (*CpjCountReq) (Pst *pst, SpId spId, CpjCountReqInfo *countReq);
typedef S16 (*CpjCountCfm) (Pst *pst, SuId suId, CpjCountCfmInfo *countCfm);
typedef S16 (*CpjSduStaReq) (Pst *pst, SpId spId, CpjSduStaReqInfo *staReq);
typedef S16 (*CpjSduStaCfm) (Pst *pst, SuId suId, CpjSduStaCfmInfo *staCfm);
typedef S16 (*CpjDataFwdReq) (Pst *pst, SpId spId, CpjDataFwdReqInfo *dataFwdReq);
typedef S16 (*CpjDatResumeReq) (Pst *pst, SpId spId, CpjDatResumeReqInfo *DatResumeReq)
                        ;
typedef S16 (*CpjDatResumeCfm) (Pst *pst, SuId suId, CpjDatResumeCfmInfo *dataResCfm);
typedef S16 (*CpjKdfReq) ( Pst* pst, SpId spId, CpjCfgTransId transId, CpjKdfReqInfo* cfgReqInfo)



                                    ;


typedef S16 (*CpjKdfCfm) ( Pst* pst, SuId suId, CpjCfgTransId transId, CpjKdfCfmInfo* kdfCfmInfo, U8 status)




                                ;
extern S16 PjUiCpjBndReq (Pst *pst, SuId suId, SpId spId);
extern S16 PjUiCpjBndCfm (Pst *pst, SuId suId, U8 status);
extern S16 PjUiCpjUbndReq (Pst *pst, SpId spId, Reason reason);
extern S16 PjUiCpjCfgReq (Pst *pst, SpId spId, CpjCfgReqInfo *cfgReq);
extern S16 PjUiCpjCfgCfm (Pst *pst, SuId suId, CpjCfgCfmInfo *cfgCfm);
extern S16 PjUiCpjReEstReq (Pst *pst, SpId spId, CpjReEstReqInfo *reEstReq);
extern S16 PjUiCpjReEstCfm (Pst *pst, SuId suId, CpjReEstCfmInfo *reEstCfm);
extern S16 PjUiCpjSecCfgReq (Pst *pst, SpId spId, CpjSecCfgReqInfo *secCfgReq)
                                      ;
extern S16 PjUiCpjSecCfgCfm (Pst *pst, SuId suId, CpjSecCfgCfmInfo *secCfgCfm)
                                      ;
extern S16 PjUiCpjUeIdChgReq (Pst *pst, SpId spId, U32 transId, CpjUeInfo *oldUeInfo, CpjUeInfo *newUeInfo)
                                                                               ;
extern S16 PjUiCpjUeIdChgCfm (Pst *pst, SuId suId, U32 transId, CpjUeInfo *ueInfo, CmStatus status)
                                                                      ;
extern S16 PjUiCpjCountReq (Pst *pst, SpId spId, CpjCountReqInfo *countReq);
extern S16 PjUiCpjCountCfm (Pst *pst, SuId suId, CpjCountCfmInfo *countCfm);
extern S16 PjUiCpjSduStaReq (Pst *pst, SpId spId, CpjSduStaReqInfo *staReq);
extern S16 PjUiCpjSduStaCfm (Pst *pst, SuId suId, CpjSduStaCfmInfo *staCfm);
extern S16 PjUiCpjDatResumeReq (Pst *pst, SpId spId, CpjDatResumeReqInfo *dataResReq)
                      ;

extern S16 PjUiCpjDatForwardReq ( Pst *pst, SpId spId, CpjDataFwdReqInfo *dataFwdReq)
                                        ;

extern S16 PjUiCpjDatResumeCfm ( Pst *pst, SuId suId, CpjDatResumeCfmInfo *datResCfm)
                     ;
extern S16 PjUiCpjKdfCfm ( Pst* pst, SuId suId, CpjCfgTransId transId, CpjKdfCfmInfo *kdfCfmInf, U8 status )





  ;

extern S16 PjUiCpjKdfReq ( Pst* pst, SpId spId, CpjCfgTransId transId, CpjKdfReqInfo *kdfReqInfo )




  ;

extern S16 cmPkCpjKdfReq ( Pst* pst, SpId spId, CpjCfgTransId transId, CpjKdfReqInfo *kdfReqInfo )




  ;



extern S16 cmUnpkCpjKdfReq ( CpjKdfReq func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmPkCpjKdfCfm ( Pst* pst, SuId suId, CpjCfgTransId transId, CpjKdfCfmInfo *kdfCfmInfo, U8 status )





  ;

extern S16 cmUnpkCpjKdfCfm ( CpjKdfCfm func, Pst* pst, Buffer *mBuf )



  ;
extern S16 NhLiCpjBndReq (Pst *, SuId, SpId);

extern S16 NhLiCpjUbndReq (Pst *, SpId, Reason);

extern S16 NhLiCpjBndCfm (Pst *, SuId, U8);

extern S16 NhLiCpjCfgReq (Pst *, SpId , CpjCfgReqInfo *);

extern S16 NhLiCpjCfgCfm (Pst *, SuId , CpjCfgCfmInfo *);

extern S16 NhLiCpjSecCfgReq (Pst *, SpId , CpjSecCfgReqInfo *);

extern S16 NhLiCpjSecCfgCfm (Pst *, SuId , CpjSecCfgCfmInfo *);

extern S16 NhLiCpjUeIdChgReq (Pst *, SpId , U32 , CpjUeInfo *, CpjUeInfo *);

extern S16 NhLiCpjUeIdChgCfm (Pst *, SuId , U32, CpjUeInfo *, CmStatus);

extern S16 NhLiCpjReEstReq (Pst *pst, SpId spId, CpjReEstReqInfo *reEstReq);

extern S16 NhLiCpjReEstCfm ( Pst *pst, SuId suId, CpjReEstCfmInfo *cfmInfo);

extern S16 NhLiCpjCountReq (Pst *, SpId , CpjCountReqInfo *);

extern S16 NhLiCpjCountCfm (Pst *, SuId , CpjCountCfmInfo *);

extern S16 NhLiCpjSduStaReq (Pst *, SpId , CpjSduStaReqInfo *);

extern S16 NhLiCpjSduStaCfm (Pst *, SuId , CpjSduStaCfmInfo *);

extern S16 NhLiCpjDatResumeCfm (Pst *, SuId , CpjDatResumeCfmInfo *);

extern S16 NhLiCpjStartDataFwdReq (Pst *post, SpId spId, CpjDataFwdReqInfo *pdcpDataFwdReq )
                           ;
extern S16 NhLiCpjDatResumeReq (Pst *post, SpId spId, CpjDatResumeReqInfo *pdcpDatResumeReq )
                             ;
 S16 cmPkCpjBndReq ( Pst * pst, SuId suId, SpId spId )



  ;
 S16 cmUnpkCpjBndReq ( CpjBndReq func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjBndCfm ( Pst * pst, SuId suId, U8 status )



  ;
 S16 cmUnpkCpjBndCfm ( CpjBndCfm func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjUbndReq ( Pst * pst, SpId spId, Reason reason )



  ;
 S16 cmUnpkCpjUbndReq ( CpjUbndReq func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjCfgReq ( Pst * pst, SpId spId, CpjCfgReqInfo * cfgReq )



  ;
 S16 cmUnpkCpjCfgReq ( CpjCfgReq func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjCfgCfm ( Pst * pst, SuId suId, CpjCfgCfmInfo * cfgCfm )



  ;
 S16 cmUnpkCpjCfgCfm ( CpjCfgCfm func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjReEstReq ( Pst * pst, SpId spId, CpjReEstReqInfo * reEstReq )



  ;
 S16 cmUnpkCpjReEstReq ( CpjReEstReq func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjReEstCfm ( Pst * pst, SuId suId, CpjReEstCfmInfo * reEstCfm )



  ;
 S16 cmUnpkCpjReEstCfm ( CpjReEstCfm func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjSecCfgReq ( Pst * pst, SpId spId, CpjSecCfgReqInfo * secCfgReq )



  ;
 S16 cmUnpkCpjSecCfgReq ( CpjSecCfgReq func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjSecCfgCfm ( Pst * pst, SuId suId, CpjSecCfgCfmInfo * secCfgCfm )



  ;
 S16 cmUnpkCpjSecCfgCfm ( CpjSecCfgCfm func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjUeIdChgReq ( Pst * pst, SpId spId, U32 transId, CpjUeInfo * oldUeInfo, CpjUeInfo * newUeInfo )





  ;
 S16 cmUnpkCpjUeIdChgReq ( CpjUeIdChgReq func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjUeIdChgCfm ( Pst * pst, SuId suId, U32 transId, CpjUeInfo * ueInfo, CmStatus status )





  ;
 S16 cmUnpkCpjUeIdChgCfm ( CpjUeIdChgCfm func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjCountReq ( Pst * pst, SpId spId, CpjCountReqInfo * countReq )



  ;
 S16 cmUnpkCpjCountReq ( CpjCountReq func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjCountCfm ( Pst * pst, SuId suId, CpjCountCfmInfo * countCfm )



  ;
 S16 cmUnpkCpjCountCfm ( CpjCountCfm func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjSduStaReq ( Pst * pst, SpId spId, CpjSduStaReqInfo * staReq )



  ;
 S16 cmUnpkCpjSduStaReq ( CpjSduStaReq func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjStartDataFwdReq ( Pst * pst, SpId spId, CpjDataFwdReqInfo * dataFwdReq )



  ;
 S16 cmUnpkCpjStartDataFwdReq ( CpjDataFwdReq func, Pst *pst, Buffer *mBuf )



  ;

 S16 cmPkCpjDatResumeReq ( Pst * pst, SpId spId, CpjDatResumeReqInfo * dataFwdReq )



  ;

 S16 cmUnpkCpjDatResumeReq ( CpjDatResumeReq func, Pst *pst, Buffer *mBuf )



  ;

 S16 cmPkCpjSduStaCfm ( Pst * pst, SuId suId, CpjSduStaCfmInfo * staCfm )



  ;
 S16 cmUnpkCpjSduStaCfm ( CpjSduStaCfm func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjRlcAm ( CpjRlcAm *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjRlcAm ( CpjRlcAm *param, Buffer *mBuf )


  ;
 S16 cmPkCpjRlcUm ( CpjRlcUm *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjRlcUm ( CpjRlcUm *param, Buffer *mBuf )


  ;
 S16 cmPkCpjRlcInfo ( CpjRlcInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjRlcInfo ( CpjRlcInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjCipherInfo ( CpjCipherInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjCipherInfo ( CpjCipherInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjIntegInfo ( CpjIntegInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjIntegInfo ( CpjIntegInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjSecCfg ( CpjSecCfg *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjSecCfg ( CpjSecCfg *param, Buffer *mBuf )


  ;
 S16 cmPkCpjRohcInfo ( CpjRohcInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjRohcInfo ( CpjRohcInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjHdrCompCfg ( CpjHdrCompCfg *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjHdrCompCfg ( CpjHdrCompCfg *param, Buffer *mBuf )


  ;
 S16 cmPkCpjHoInfo ( Pst *pst, CpjHoInfo *param, Buffer *mBuf )



  ;
 S16 cmUnpkCpjHoInfo ( Pst *pst, CpjHoInfo *param, Buffer *mBuf )



  ;
 S16 cmPkCpjCfgEnt ( Pst *pst, CpjCfgEnt *param, Buffer *mBuf )



  ;
 S16 cmUnpkCpjCfgEnt ( Pst *pst, CpjCfgEnt *param, Buffer *mBuf )



  ;
 S16 cmPkCpjAddCfgEnt ( CpjAddCfgEnt *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjAddCfgEnt ( CpjAddCfgEnt *param, Buffer *mBuf )


  ;
 S16 cmPkCpjModCfgEnt ( Pst *pst, CpjModCfgEnt *param, Buffer *mBuf )



  ;
 S16 cmUnpkCpjModCfgEnt ( Pst *pst, CpjModCfgEnt *param, Buffer *mBuf )



  ;
 S16 cmPkCpjCfgReqInfo ( Pst *pst, CpjCfgReqInfo *param, Buffer *mBuf )



  ;
 S16 cmUnpkCpjCfgReqInfo ( Pst *pst, CpjCfgReqInfo *param, Buffer *mBuf )



  ;
 S16 cmPkCpjCfmEnt ( CpjCfmEnt *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjCfmEnt ( CpjCfmEnt *param, Buffer *mBuf )


  ;
 S16 cmPkCpjCfgCfmInfo ( CpjCfgCfmInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjCfgCfmInfo ( CpjCfgCfmInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjReEstReqInfo ( CpjReEstReqInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjReEstReqInfo ( CpjReEstReqInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjReEstCfmInfo ( CpjReEstCfmInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjReEstCfmInfo ( CpjReEstCfmInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjSecCfgReqInfo ( CpjSecCfgReqInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjSecCfgReqInfo ( CpjSecCfgReqInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjSecCfgCfmInfo ( CpjSecCfgCfmInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjSecCfgCfmInfo ( CpjSecCfgCfmInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjUeInfo ( CpjUeInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjUeInfo ( CpjUeInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjCountReqInfo ( CpjCountReqInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjCountReqInfo ( CpjCountReqInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjCountInfo ( CpjCountInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjCountInfo ( CpjCountInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjCountCfmInfo ( CpjCountCfmInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjCountCfmInfo ( CpjCountCfmInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjSduStaReqInfo ( CpjSduStaReqInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjSduStaReqInfo ( CpjSduStaReqInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjStartDataFwdReqInfo ( CpjDataFwdReqInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjStartDataFwdReqInfo ( CpjDataFwdReqInfo *param, Buffer *mBuf )


  ;

 S16 cmPkCpjDatResumeReqInfo ( CpjDatResumeReqInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjDatResumeReqInfo ( CpjDatResumeReqInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjUlSduStaInfo ( Pst *pst, CpjUlSduStaInfo *param, Buffer *mBuf )



  ;
 S16 cmUnpkCpjUlSduStaInfo ( Pst *pst, CpjUlSduStaInfo *param, Buffer *mBuf )



  ;
 S16 cmPkCpjDlSduStaInfo ( CpjDlSduStaInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjDlSduStaInfo ( CpjDlSduStaInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjSduStaInfo ( Pst *pst, CpjSduStaInfo *param, Buffer *mBuf )



  ;
 S16 cmUnpkCpjSduStaInfo ( Pst *pst, CpjSduStaInfo *param, Buffer *mBuf )



  ;
 S16 cmPkCpjSduStaCfmInfo ( Pst *pst, CpjSduStaCfmInfo *param, Buffer *mBuf )



  ;
 S16 cmUnpkCpjSduStaCfmInfo ( Pst *pst, CpjSduStaCfmInfo *param, Buffer *mBuf )



  ;
 S16 cmUnpkCpjDatResumeCfmInfo ( Pst *pst, CpjDatResumeCfmInfo *param, Buffer *mBuf )



  ;

 S16 cmPkCpjDataResCfmInfo ( Pst *pst, CpjDatResumeCfmInfo *param, Buffer *mBuf )



  ;

 S16 cmUnpkCpjDatResumeCfm ( CpjDatResumeCfm func, Pst *pst, Buffer *mBuf )



  ;

 S16 cmPkCpjDatResumeCfm ( Pst * pst, SuId suId, CpjDatResumeCfmInfo * dataResCfm )



  ;

 S16 cmUnpkCpjDatResumeCfm ( CpjDatResumeCfm func, Pst *pst, Buffer *mBuf )



  ;

 S16 cmUnpkCpjNhKeyCfmInfo ( CpjNhKeyCfmInfo *param, Buffer *mBuf )


  ;

 S16 cmUnpkCpjKenbStarCfmInfo ( CpjKenbStarCfmInfo *param, Buffer *mBuf )


  ;

 S16 cmUnpkCpjAskeyCfmInfo ( CpjAskeyCfmInfo *param, Buffer *mBuf )


  ;

 S16 cmUnpkCpjKdfCfmInfo ( CpjKdfCfmInfo *param, Buffer *mBuf )


  ;

 S16 cmUnpkCpjCfgTransId ( CpjCfgTransId *param, Buffer *mBuf )


  ;

 S16 cmPkCpjNhKeyInfo ( CpjNhKeyInfo *param, Buffer *mBuf )


  ;

 S16 cmPkCpjKenbStarInfo ( CpjKenbStarInfo *param, Buffer *mBuf )


  ;

 S16 cmPkCpjAskeyInfo ( CpjAsKeyInfo *param, Buffer *mBuf )


  ;

 S16 cmPkCpjKdfReqInfo ( CpjKdfReqInfo *param, Buffer *mBuf )


  ;

 S16 cmPkCpjCfgTransId ( CpjCfgTransId *param, Buffer *mBuf )


  ;

 S16 cmUnpkCpjNhKeyInfo ( CpjNhKeyInfo *param, Buffer *mBuf )


  ;

 S16 cmUnpkCpjKenbStarInfo ( CpjKenbStarInfo *param, Buffer *mBuf )


  ;

 S16 cmUnpkCpjAskeyInfo ( CpjAsKeyInfo *param, Buffer *mBuf )


  ;

 S16 cmUnpkCpjKdfReqInfo ( CpjKdfReqInfo *param, Buffer *mBuf )


  ;

 S16 cmPkCpjNhKeyCfmInfo ( CpjNhKeyCfmInfo *param, Buffer *mBuf )


  ;

 S16 cmPkCpjKenbStarCfmInfo ( CpjKenbStarCfmInfo *param, Buffer *mBuf )


  ;

 S16 cmPkCpjAskeyCfmInfo ( CpjAskeyCfmInfo *param, Buffer *mBuf )


  ;

 S16 cmPkCpjKdfCfmInfo ( CpjKdfCfmInfo *param, Buffer *mBuf )


  ;
typedef enum rgrGrpPwrFormat
{
   RGR_PWR_FORMAT_3,
   RGR_PWR_FORMAT_3A
} RgrGrpPwrFormat;
typedef enum rgrCqiPrdicity
{
   RGR_CQI_PRD_MS2 = 2,
   RGR_CQI_PRD_MS5 = 5,
   RGR_CQI_PRD_MS10 = 10,
   RGR_CQI_PRD_MS20 = 20,
   RGR_CQI_PRD_MS32 = 32,
   RGR_CQI_PRD_MS40 = 40,
   RGR_CQI_PRD_MS64 = 64,
   RGR_CQI_PRD_MS80 = 80,
   RGR_CQI_PRD_MS128 = 128,
   RGR_CQI_PRD_MS160 = 160,
   RGR_CQI_PRD_MS256 = 256,
   RGR_CQI_PRD_MSOff
} RgrCqiPrdicity;



typedef enum rgrPrdCqiMode
{
   RGR_PRD_CQI_MOD10,
   RGR_PRD_CQI_MOD11,
   RGR_PRD_CQI_MOD20,
   RGR_PRD_CQI_MOD21
} RgrPrdCqiMode;



typedef enum rgrPwrAlpha
{
   RGR_PWR_ALPHA0 = 0,
   RGR_PWR_ALPHA4 = 4,
   RGR_PWR_ALPHA5 = 5,
   RGR_PWR_ALPHA6 = 6,
   RGR_PWR_ALPHA7 = 7,
   RGR_PWR_ALPHA8 = 8,
   RGR_PWR_ALPHA9 = 9,
   RGR_PWR_ALPHAALL = 10
} RgrPwrAlpha;


typedef enum rgrAckNackRepFactor
{
   RGR_ACKNACK_REPFACT_N2 = 2,
   RGR_ACKNACK_REPFACT_N4 = 4,
   RGR_ACKNACK_REPFACT_N6 = 6
} RgrAckNackRepFactor;





typedef enum rgrTxModeTrnstn
{
   RGR_TXMODE_RECFG_CMPLT = 0,
   RGR_TXMODE_RECFG_START
}RgrTxModeTrnstn;




typedef enum rgrTxMode
{
   RGR_UE_TM_1 = 1,
   RGR_UE_TM_2,
   RGR_UE_TM_3,
   RGR_UE_TM_4,
   RGR_UE_TM_5,
   RGR_UE_TM_6,
   RGR_UE_TM_7,
   RGR_UE_TM_8




} RgrTxMode;


typedef enum rgrRaSfn
{
   RGR_SFN_EVEN,
   RGR_SFN_ANY,






   RGR_SFN_NA
} RgrRaSfn;


typedef enum rgrSrsCfgPrd
{
   RGR_SRS_CFG_PRD_1 = 1,
   RGR_SRS_CFG_PRD_2 = 2,
   RGR_SRS_CFG_PRD_5 = 5,
   RGR_SRS_CFG_PRD_10 = 10,
   RGR_SRS_CFG_PRD_INF
} RgrSrsCfgPrd;



typedef enum rgrSrsBwCfg
{
   RGR_SRS_BWCFG_0 = 0,
   RGR_SRS_BWCFG_1 = 1,
   RGR_SRS_BWCFG_2 = 2,
   RGR_SRS_BWCFG_3 = 3,
   RGR_SRS_BWCFG_4 = 4,
   RGR_SRS_BWCFG_5 = 5,
   RGR_SRS_BWCFG_6 = 6,
   RGR_SRS_BWCFG_7 = 7
} RgrSrsBwCfg;




typedef enum rgrPhichNg
{
   RGR_NG_ONESIXTH,
   RGR_NG_HALF,
   RGR_NG_ONE,
   RGR_NG_TWO
} RgrPhichNg;


typedef enum rgrAprdCqiMode
{
   RGR_APRD_CQI_MOD12,
   RGR_APRD_CQI_MOD20,
   RGR_APRD_CQI_MOD22,
   RGR_APRD_CQI_MOD30,
   RGR_APRD_CQI_MOD31
} RgrAprdCqiMode;




typedef enum rgrSpsImplRelCnt
{
   RGR_SPS_E2 = 2,
   RGR_SPS_E3 = 3,
   RGR_SPS_E4 = 4,
   RGR_SPS_E8 = 8
} RgrSpsImplRelCnt;





typedef enum rgrSpsPrd
{
   RGR_SPS_PRD_10SF = 10,
   RGR_SPS_PRD_20SF = 20,
   RGR_SPS_PRD_32SF = 32,
   RGR_SPS_PRD_40SF = 40,
   RGR_SPS_PRD_64SF = 64,
   RGR_SPS_PRD_80SF = 80,
   RGR_SPS_PRD_128SF = 128,
   RGR_SPS_PRD_160SF = 160,
   RGR_SPS_PRD_320SF = 320,
   RGR_SPS_PRD_640SF = 640,
   RGR_SPS_PRD_INVALID
} RgrSpsPrd;
typedef enum _rgrSiPerd
{
   RGR_SI_PERD_8 = 8,
   RGR_SI_PERD_16 = 16,
   RGR_SI_PERD_32 = 32,
   RGR_SI_PERD_64 = 64,
   RGR_SI_PERD_128 = 128,
   RGR_SI_PERD_256 = 256,
   RGR_SI_PERD_512 = 512
} RgrSiPeriodicity;






typedef enum _rgrModPerd
{
   RGR_MOD_PERD_64 = 64,
   RGR_MOD_PERD_128 = 128,
   RGR_MOD_PERD_256 = 256,
   RGR_MOD_PERD_512 = 512,
   RGR_MOD_PERD_1024 = 1024
} RgrModPeriodicity;


typedef enum rgrSiCfgType
{
   RGR_SI_CFG_TYPE_MIB = 0,
   RGR_SI_CFG_TYPE_SIB1,
   RGR_SI_CFG_TYPE_SI,
   RGR_SI_CFG_TYPE_SIB1_PWS,
   RGR_SI_CFG_TYPE_SIB8_CDMA,
   RGR_SI_STOP
} RgrSiCfgType;






typedef enum _rgrDrxTmrPerd
{
   RGR_DRX_PRD_1PSF = 1,
   RGR_DRX_PRD_2PSF = 2,
   RGR_DRX_PRD_3PSF = 3,
   RGR_DRX_PRD_4PSF = 4,
   RGR_DRX_PRD_5PSF = 5,
   RGR_DRX_PRD_6PSF = 6,
   RGR_DRX_PRD_8PSF = 8,
   RGR_DRX_PRD_10PSF = 10,
   RGR_DRX_PRD_16PSF = 16,
   RGR_DRX_PRD_20PSF = 20,
   RGR_DRX_PRD_24PSF = 24,
   RGR_DRX_PRD_30PSF = 30,
   RGR_DRX_PRD_33PSF = 33,
   RGR_DRX_PRD_40PSF = 40,
   RGR_DRX_PRD_50PSF = 50,
   RGR_DRX_PRD_60PSF = 60,
   RGR_DRX_PRD_80PSF = 80,
   RGR_DRX_PRD_100PSF = 100,
   RGR_DRX_PRD_200PSF = 200,
   RGR_DRX_PRD_300PSF = 300,
   RGR_DRX_PRD_500PSF = 500,
   RGR_DRX_PRD_750PSF = 750,
   RGR_DRX_PRD_1280PSF = 1280,
   RGR_DRX_PRD_1920PSF = 1920,
   RGR_DRX_PRD_2560PSF = 2560
}RgrDrxTmrPrd;





typedef enum _rgrDrxCyclePerd
{
   RGR_DRX_PRD_2SF = 2,
   RGR_DRX_PRD_5SF = 5,
   RGR_DRX_PRD_8SF = 8,
   RGR_DRX_PRD_10SF = 10,
   RGR_DRX_PRD_16SF = 16,
   RGR_DRX_PRD_20SF = 20,
   RGR_DRX_PRD_32SF = 32,
   RGR_DRX_PRD_40SF = 40,
   RGR_DRX_PRD_64SF = 64,
   RGR_DRX_PRD_80SF = 80,
   RGR_DRX_PRD_128SF = 128,
   RGR_DRX_PRD_160SF = 160,
   RGR_DRX_PRD_256SF = 256,
   RGR_DRX_PRD_320SF = 320,
   RGR_DRX_PRD_512SF = 512,
   RGR_DRX_PRD_640SF = 640,
   RGR_DRX_PRD_1024SF = 1024,
   RGR_DRX_PRD_1280SF = 1280,
   RGR_DRX_PRD_2048SF = 2048,
   RGR_DRX_PRD_2560SF = 2560
}RgrDrxCyclePrd;




typedef enum _rgrDrxShortCycleTmr
{
   RGR_DRX_SHRTCYCLE_MIN = 1,
   RGR_DRX_SHRTCYCLE_MAX = 16
}RgrDrxShrtCycleTmr;
typedef enum
{
   RGRUE_DLPWRCNTRL_PA_DB_6 = 0,
   RGRUE_DLPWRCNTRL_PA_DB_4DOT77,
   RGRUE_DLPWRCNTRL_PA_DB_3,
   RGRUE_DLPWRCNTRL_PA_DB_1DOT77,
   RGRUE_DLPWRCNTRL_PA_DB0,
   RGRUE_DLPWRCNTRL_PA_DB1,
   RGRUE_DLPWRCNTRL_PA_DB2,
   RGRUE_DLPWRCNTRL_PA_DB3
} RgrUeDlPwrCntrlPaCfg;


typedef enum rgrSchFrmt1b3TypEnum
{
   RG_SCH_UCI_FORMAT1A_1B,
   RG_SCH_UCI_FORMAT1B_CS,
   RG_SCH_UCI_FORMAT3,
   RG_SCH_UCI_FORMAT_NON_CA
}RgrSchFrmt1b3TypEnum;



typedef struct rgrCfgTransId
{
   U8 trans[12];
} RgrCfgTransId;


typedef struct rgrDlHqCfg
{
   U8 maxDlHqTx;


   U8 maxMsg4HqTx;


} RgrDlHqCfg;


typedef struct rgrRntiCfg
{
   CmLteRnti startRnti;
   U16 size;

} RgrRntiCfg;


typedef struct rgrDlCmnCodeRateCfg
{
   U16 bcchPchRaCodeRate;


   U16 pdcchCodeRate;



   U8 ccchCqi;


} RgrDlCmnCodeRateCfg;


typedef struct rgrCfiCfg
{
   U8 cfi;
} RgrCfiCfg;


typedef struct rgrPuschSubBandCfg
{
  U8 subbandStart;
  U8 numSubbands;
  U8 size;
  U8 dmrs[110];
} RgrPuschSubBandCfg;


typedef struct rgrUlCmnCodeRateCfg
{
   U8 ccchCqi;

} RgrUlCmnCodeRateCfg;




typedef struct rgrUlTrgCqiCfg
{
   U8 trgCqi;

} RgrUlTrgCqiCfg;


typedef struct rgrBwCfg
{
   U8 dlTotalBw;
   U8 ulTotalBw;
} RgrBwCfg;



typedef struct rgrPhichCfg
{
   RgrPhichNg ngEnum;
   Bool isDurExtend;
} RgrPhichCfg;



typedef struct rgrPucchCfg
{
   U8 resourceSize;
   U16 n1PucchAn;
   U8 deltaShift;
   U8 cyclicShift;

   U8 maxPucchRb;




} RgrPucchCfg;


typedef struct rgrSrsCfg
{

   Bool isSrsCfgSetup;
   RgrSrsCfgPrd srsCfgPrdEnum;
   RgrSrsBwCfg srsBwEnum;

   U8 srsSubFrameCfg;

} RgrSrsCfg;


typedef struct rgrRachCfg
{
   U8 preambleFormat;
   U8 raWinSize;

   struct raOccasionS
   {
      U8 size;
      RgrRaSfn sfnEnum;
      U8 subFrameNum[10];
   } raOccasion;
   U8 maxMsg3Tx;
   U8 numRaPreamble;
   U8 sizeRaPreambleGrpA;
   U16 msgSizeGrpA;
   U8 prachResource;




   U8 contResTmr;


} RgrRachCfg;




typedef struct rgrSiCfg
{
   U8 siWinSize;
   U8 retxCnt;





   RgrModPeriodicity modPrd;
   U8 numSi;
   RgrSiPeriodicity siPeriodicity[16];
   U16 minPeriodicity;


} RgrSiCfg;



typedef struct rgrTpcRntiCfg
{
   CmLteRnti startTpcRnti;
   U16 size;
} RgrTpcRntiCfg;




typedef struct rgrUlPwrCfg
{
   S8 p0NominalPusch;

   RgrPwrAlpha alpha;

   S8 p0NominalPucch;

   S8 deltaPreambleMsg3;

   RgrTpcRntiCfg pucchPwrFmt3;
   RgrTpcRntiCfg pucchPwrFmt3a;
   RgrTpcRntiCfg puschPwrFmt3;
   RgrTpcRntiCfg puschPwrFmt3a;
} RgrUlPwrCfg;



typedef struct rgrPuschCfg
{
   U8 numSubBands;

   Bool isIntraHop;

   U8 hopOffst;

} RgrPuschCfg;



typedef struct rgrCodeBookRstCfg
{
   Bool pres;
   U32 pmiBitMap[2];
} RgrCodeBookRstCfg;


typedef struct rgrPreambleSetCfg
{
   Bool pres;
   U8 start;
   U8 size;

} RgrPreambleSetCfg;



typedef struct rgrCmnLchCfg
{
   CmLteLcId lcId;
   CmLteLcType lcType;






   U8 dir;




   CmLteTrchType dlTrchType;





   CmLteTrchType ulTrchType;




} RgrCmnLchCfg;



typedef struct rgrDlfsCfg
{
  U8 isDlFreqSel;

  U8 thresholdCqi;






} RgrDlfsCfg;





typedef enum _rgrFeature
{
   RGR_ABS = 1 << 0,
   RGR_SFR = 1 << 1,
   RGR_DSFR = 1 << 2,
   RGR_RE = 1 << 3







} RgrFeature;



typedef enum _rgrFeaturestatus
{
   RGR_DISABLE = 0,
   RGR_ENABLE = 1
} RgrFeatureStatus;



typedef enum _rgrAbsPatternType
{
   RGR_ABS_MUTE = 1 << 0,
   RGR_ABS_TRANSMIT = 1 << 1
} RgrAbsPatternType;



typedef struct rgrSfrRbRange
{
   U8 startRb;
   U8 endRb;
} RgrSfrRbRange;




typedef struct rgrPwrThreshold
{
   RgrUeDlPwrCntrlPaCfg pLow;
   RgrUeDlPwrCntrlPaCfg pHigh;
} RgrPwrThreshold;




typedef struct rgrSfrConfig
{
   RgrFeatureStatus status;
   RgrSfrRbRange cellEdgeRbRange;

   RgrPwrThreshold pwrThreshold;

} RgrSfrConfig;


typedef struct rgrDsfrConfig
{
   RgrFeatureStatus status;
} RgrDsfrConfig;



typedef struct rgrAbsConfig
{
   RgrFeatureStatus status;
   U32 absPatternType;
   U8 absPattern[40];
   U32 absLoadPeriodicity;
} RgrAbsConfig;



typedef struct rgrLteAdvancedCellConfig
{
   U32 pres;
   RgrAbsConfig absCfg;
   RgrSfrConfig sfrCfg;
   RgrDsfrConfig dsfrCfg;
} RgrLteAdvancedCellConfig;
typedef struct rgrEnbPfs
{
   U8 tptCoeffi;

   U8 fairCoeffi;

   U32 qciWgt[9];
} RgrEnbPfs;




typedef enum rgrCellAccsMode
{
   RGR_CELL_ACCS_OPEN = 1,
   RGR_CELL_ACCS_CLOSED,
   RGR_CELL_ACCS_HYBRID
} RgrCellAccsMode;




typedef enum rgrCellCntrlCmdType
{
   RGR_CNTRL_CMD_RACH_OVRLD=1,
   RGR_CNTRL_CMD_CPU_OVRLD
}RgrCellCntrlCmdType;




typedef struct rgrCellCntrlCmdCfg
{
   RgrCellCntrlCmdType cmdType;

   union rgrCellCmdDesc
   {

      struct rachOvrLd
      {
         Bool backOffEnb;
         U8 backOffVal;
      }rachOvrLd;


      struct cpuOvrLd
      {
         U8 instruction;
      }cpuOvrLd;
   }cmdDesc;
} RgrCellCntrlCmdCfg;







typedef struct rgrSchedEnbCfg
{
   U8 numTxAntPorts;
   U8 dlSchdType;

   union rgrDlSchInfoS
   {
      RgrEnbPfs dlPfs;

   } dlSchInfo;
   U8 ulSchdType;

   union rgrUlSchInfoS
   {
      RgrEnbPfs ulPfs;







   } ulSchInfo;
   RgrCellAccsMode accsMode;
} RgrSchedEnbCfg;
typedef struct rgrSpsCellCfg
{
   U8 maxSpsDlBw;

   U16 maxSpsUePerDlSf;

   U16 maxSpsUePerUlSf;

} RgrSpsCellCfg;




typedef struct rgrCellCsgParamCfg
{
   U8 minDlResNonCsg;
   U8 minUlResNonCsg;
} RgrCellCsgParamCfg;


typedef struct rgrLteUCfg
{
   Bool isLaaCell;
}RgrLteUCfg;




typedef struct rgrCellCfg
{
   CmLteCellId cellId;
   Inst macInst;





   U8 maxMsg3PerUlSf;



   U8 maxUePerUlSf;


   U8 maxUePerDlSf;



   U8 maxCcchPerDlSf;




   U8 maxUlBwPerUe;





   U8 maxDlBwPerUe;





   U8 maxDlRetxBw;





   U8 maxDlUeNewTxPerTti;




   U8 maxUlUeNewTxPerTti;




   Bool isCpUlExtend;

   Bool isCpDlExtend;

   Bool cellModSchm;



   S8 pMax;


   U8 dlfsSchdType;

   RgrDlHqCfg dlHqCfg;
   RgrRntiCfg macRnti;
   RgrCfiCfg cfiCfg;
   RgrUlTrgCqiCfg trgUlCqi;
   RgrDlCmnCodeRateCfg dlCmnCodeRate;

   RgrPuschSubBandCfg puschSubBand;
   RgrUlCmnCodeRateCfg ulCmnCodeRate;

   RgrDlfsCfg dlfsCfg;
   RgrBwCfg bwCfg;
   RgrPhichCfg phichCfg;
   RgrPucchCfg pucchCfg;
   RgrSrsCfg srsCfg;

   RgrRachCfg rachCfg;
   RgrSiCfg siCfg;
   RgrUlPwrCfg pwrCfg;
   RgrPuschCfg puschCfg;
   RgrPreambleSetCfg macPreambleSet;

   U8 numCmnLcs;
   RgrCmnLchCfg cmnLcCfg[6];

   RgrCellCsgParamCfg csgParamCfg;
   U8 rrmTtiIndPrd;
   RgrSpsCellCfg spsCfg;

   RgrLteAdvancedCellConfig rgrLteAdvCfg;
   U16 t300TmrVal;


   U16 bcchTxPwrOffset;




   U16 pcchTxPwrOffset;




   U16 rarTxPwrOffset;





   U16 phichTxPwrOffset;




   Bool isDynCfiEnb;

   Bool isAutoCfgModeEnb;

   RgrUeDlPwrCntrlPaCfg msg4pAVal;

   RgrLteUCfg lteUCfg;
} RgrCellCfg;


typedef struct rgrUeAprdDlCqiCfg
{
   Bool pres;

   RgrAprdCqiMode aprdModeEnum;





} RgrUeAprdDlCqiCfg;
typedef struct rgrUeDlPCqiSetup
{
      U16 cqiPResIdx;
      U16 cqiPCfgIdx;
      U8 cqiRepType;
      U8 k;

      U8 riEna;
      U16 riCfgIdx;
      Bool sANCQI;
      RgrPrdCqiMode prdModeEnum;
}RgrUeDlPCqiSetup;





typedef struct rgrUeDlPCqiCfg
{
   U8 type;
   RgrUeDlPCqiSetup cqiSetup;
} RgrUePrdDlCqiCfg;







typedef enum rgrUlSrsBwInfo
{
   RGR_ULSRS_BW_0 = 0,
   RGR_ULSRS_BW_1 = 1,
   RGR_ULSRS_BW_2 = 2,
   RGR_ULSRS_BW_3 = 3
} RgrUlSrsBwInfo;






typedef enum rgrUlSrsHoBwInfo
{
   RGR_ULSRS_HOP_BW_0 = 0,
   RGR_ULSRS_HOP_BW_1 = 1,
   RGR_ULSRS_HOP_BW_2 = 2,
   RGR_ULSRS_HOP_BW_3 = 3
} RgrUlSrsHoBwInfo;





typedef enum rgrUlSrsCycShiftInfo
{
   RGR_ULSRS_CYSHIFT_0 = 0,
   RGR_ULSRS_CYSHIFT_1 = 1,
   RGR_ULSRS_CYSHIFT_2 = 2,
   RGR_ULSRS_CYSHIFT_3 = 3,
   RGR_ULSRS_CYSHIFT_4 = 4,
   RGR_ULSRS_CYSHIFT_5 = 5,
   RGR_ULSRS_CYSHIFT_6 = 6,
   RGR_ULSRS_CYSHIFT_7 = 7
} RgrUlSrsCycShiftInfo;







typedef struct rgrUeUlSrsSetupCfg
{
   U16 srsCfgIdx;

   RgrUlSrsBwInfo srsBw;
   RgrUlSrsHoBwInfo srsHopBw;
   RgrUlSrsCycShiftInfo cycShift;
   Bool duration;

   Bool sANSrs;







   U8 txComb;
   U8 fDomPosi;
}RgrUeUlSrsSetupCfg;






typedef enum rgrUeDsrTransMax
{
   RGR_DSR_TXMAX_4=4,
   RGR_DSR_TXMAX_16=16,
   RGR_DSR_TXMAX_32=32,
   RGR_DSR_TXMAX_64=64
}RgrUeDsrTransMax;





typedef struct rgrUeSrSetupCfg
{
   U16 srResIdx;
   U8 srCfgIdx;

}RgrUeSrSetupCfg;




typedef struct rgrUeSrCfg
{
   Bool type;
   RgrUeSrSetupCfg srSetup;
}RgrUeSrCfg;




typedef struct rgrUeUlSrsCfg
{
   U8 type;
   RgrUeUlSrsSetupCfg srsSetup;

}RgrUeUlSrsCfg;
typedef struct rgrUePuschDedCfg
{
   Bool pres;
   U8 bACKIdx;
   U8 bRIIdx;
   U8 bCQIIdx;
}RgrUePuschDedCfg;



typedef struct rgrUeDlCqiCfg
{
   RgrUeAprdDlCqiCfg aprdCqiCfg;
   RgrUePrdDlCqiCfg prdCqiCfg;
} RgrUeDlCqiCfg;



typedef struct rgrUeMeasGapCfg
{
   Bool isMesGapEnabled;
   U8 gapPrd;
   U8 gapOffst;
} RgrUeMeasGapCfg;


typedef struct rgrDrxLongCycleOffst
{
   U16 longDrxCycle;
   U16 drxStartOffst;
} RgrDrxLongCycleOffst;



typedef struct rgrDrxShortDrx
{
   Bool pres;
   U16 shortDrxCycle;
   U8 drxShortCycleTmr;
} RgrDrxShortDrx;



typedef struct rgrUeDrxCfg
{
   Bool isDrxEnabled;
   U8 drxOnDurTmr;

   U16 drxInactvTmr;

   U8 drxRetxTmr;

   RgrDrxLongCycleOffst drxLongCycleOffst;
   RgrDrxShortDrx drxShortDrx;
} RgrUeDrxCfg;



typedef struct rgrUeCapCfg
{
   U8 pwrClass;
   Bool intraSfFeqHop;
   Bool resAloocType1;
   Bool simCqiAckNack;
   Bool txAntSel;

} RgrUeCapCfg;



typedef struct rgrUeAckNackRepCfg
{
   Bool isAckNackEnabled;



   U16 pucchAckNackRep;
   RgrAckNackRepFactor ackNackRepFactor;
} RgrUeAckNackRepCfg;



typedef struct rgrUeTxModeCfg
{
   Bool pres;
   RgrTxModeTrnstn tmTrnstnState;

   RgrTxMode txModeEnum;
} RgrUeTxModeCfg;


typedef struct rgrUeUlHqCfg
{
   U8 maxUlHqTx;
   U8 deltaHqOffst;

} RgrUeUlHqCfg;


typedef struct rgrUeGrpPwrCfg
{
   Bool pres;
   CmLteRnti tpcRnti;
   U8 idx;
} RgrUeGrpPwrCfg;


typedef struct rgrUeUlPwrCfg
{
   RgrUeGrpPwrCfg uePuschPwr;
   RgrUeGrpPwrCfg uePucchPwr;
   Bool isAccumulated;
   Bool isDeltaMCSEnabled;
   S8 p0UePusch;
   S8 p0UePucch;
   U8 pSRSOffset;

   U8 trgCqi;


} RgrUeUlPwrCfg;


typedef struct rgrUeQosCfg
{
   Bool ambrPres;
   U32 dlAmbr;
   U32 ueBr;
} RgrUeQosCfg;


typedef struct rgrUeTaTmrCfg
{
   Bool pres;
   U16 taTmr;
} RgrUeTaTmrCfg;







typedef struct rgrUeBsrTmrCfg
{
   Bool isPrdBsrTmrPres;

   U16 prdBsrTmr;


   U16 retxBsrTmr;

} RgrUeBsrTmrCfg;






typedef struct rgrUeSpsDlCfg
{
   Bool isDlSpsEnabled;
   U8 numSpsHqProc;

   U8 numPucchVal;
   U32 n1PucchVal[4];
   RgrSpsPrd dlSpsPrdctyEnum;
   U16 explicitRelCnt;

} RgrUeSpsDlCfg;

typedef struct rgrUlSpsLcInfo
{
   Bool isSpsEnabled;
   U8 lcId;
}RgrUlSpsLcInfo;



typedef struct rgrUeSpsUlCfg
{
   Bool isUlSpsEnabled;

   RgrSpsImplRelCnt implicitRelCnt;





   Bool pwrCfgPres;

   struct
   {
      S8 p0NominalPuschVal;
      S8 p0UePuschVal;
   } pwrCfg;
   RgrSpsPrd ulSpsPrdctyEnum;
   U8 lcCnt;
   RgrUlSpsLcInfo spsLcInfo[10];



   Bool isLcSRMaskEnab ;


} RgrUeSpsUlCfg;



typedef struct rgrUeSpsCfg
{
   CmLteRnti spsRnti;
   RgrUeSpsDlCfg dlSpsCfg;
   RgrUeSpsUlCfg ulSpsCfg;

} RgrUeSpsCfg;


typedef enum rgrUeTxAntSelType
{
   RGR_UE_TX_ANT_OPENLOOP,
   RGR_UE_TX_ANT_CLOSEDLOOP
} RgrUeTxAntSelType;


typedef struct rgrUeTxAntSelCfg
{
   Bool pres;
   RgrUeTxAntSelType selType;
} RgrUeTxAntSelCfg;
typedef struct rgrUeCqiReptCfg
{
   U8 numColltdCqiRept;

}RgrUeCqiReptCfg;



typedef struct rgrSubBandCqiInfo
{
   U8 cqi[2];
   U8 subBandIdx;

} RgrSubBandCqiInfo;




typedef struct rgrUeCqiRept
{
   U8 cqi[2];
   U8 cqiMode;
   RgrSubBandCqiInfo sbCqiInfo[13];
   U8 numSubBand;

} RgrUeCqiRept;




typedef struct RgrUeCqiInfo
{
   RgrUeCqiRept cqiRept[16];
   U8 numCqiRept;
} RgrUeCqiInfo;




typedef struct rgrStaIndInfo
{
   CmLteCellId cellId;
   CmLteRnti crnti;
   RgrUeCqiInfo ueCqiInfo;
}RgrStaIndInfo;





typedef struct rgrLoadInfIndInfo
{
   CmLteCellId cellId;
   U16 bw;
   U32 type;
   union
   {
      TknStrOSXL rntpInfo;
      U32 absLoadInfo[40];
   } u;
}RgrLoadInfIndInfo;






typedef struct rgrUepACfg
{

   RgrUeDlPwrCntrlPaCfg pA;


   Bool pAPrsnt;
}RgrUepACfg;


typedef struct rgrUePdschDedCfg
{
   RgrUepACfg uepACfg;

}RgrUePdschDedCfg;





typedef struct rgrLteAdvancedUeConfig
{
   U32 pres;
   Bool isUeCellEdge;
   Bool isAbsUe;
} RgrLteAdvancedUeConfig;


typedef enum RgrAccessStratumRls
{
 RGR_REL_8,
 RGR_REL_9,
 RGR_REL_10,
 RGR_REL_11,
 RGR_REL_SPARE_4,
 RGR_REL_SPARE_3,
 RGR_REL_SPARE_2,
 RGR_REL_SPARE_1,
} RgrAccessStratumRls;



typedef struct rgrUeCfg
{
   CmLteCellId cellId;
   CmLteRnti crnti;
   RgrUeTxModeCfg txMode;
   RgrUeDlCqiCfg ueDlCqiCfg;
   RgrUeUlHqCfg ueUlHqCfg;
   RgrUeUlPwrCfg ueUlPwrCfg;
   RgrUeQosCfg ueQosCfg;
   RgrUeTaTmrCfg ueTaTmrCfg;





   RgrUeBsrTmrCfg ueBsrTmrCfg;



   CmLteUeCategory ueCatEnum;


   RgrUeDrxCfg ueDrxCfg;

   Bool isTtiBundlEnabled;
   RgrUeAckNackRepCfg ueAckNackCfg;
   RgrUeMeasGapCfg ueMesGapCfg;
   RgrUeCapCfg ueCapCfg;
   RgrCodeBookRstCfg ueCodeBookRstCfg;

   TknU8 dedPreambleId;
   RgrUeSpsCfg ueSpsCfg;







   RgrUeUlSrsCfg srsCfg;
   RgrUeSrCfg srCfg;
   RgrUePuschDedCfg puschDedCfg;

   RgrUeTxAntSelCfg ulTxAntSel;






   RgrUeCqiReptCfg ueCqiReptCfg;




   RgrUePdschDedCfg uePdschDedCfg;


   RgrLteAdvancedUeConfig ueLteAdvCfg;

   RgrAccessStratumRls accessStratumRls;
   U8 csgMmbrSta;
} RgrUeCfg;


typedef struct rgrLchQosCfg
{
   U8 qci;

   U32 gbr;
   U32 mbr;
} RgrLchQosCfg;



typedef struct rgrLchSpsCfg
{
   Bool isSpsEnabled;

} RgrLchSpsCfg;


typedef struct rgrDlLchCfg
{
   CmLteTrchType dlTrchType;





   RgrLchQosCfg dlQos;

   RgrLchSpsCfg dlSpsCfg;
} RgrDlLchCfg;



typedef struct rgrUlLchCfg
{
  CmLteLcId lcId;
  U8 qci;
} RgrUlLchCfg;


typedef struct rgrUlLcgCfg
{
   U8 lcgId;






   U32 gbr;
   U32 mbr;
} RgrUlLcgCfg;



typedef struct rgrUlLchQciCfg
{
   CmLteLcId lcId;
   U8 qci;
   U8 lcgId;
}RgrUlLchQciCfg;



typedef struct rgrLchCfg
{
   CmLteCellId cellId;
   CmLteRnti crnti;
   CmLteLcId lcId;
   CmLteLcType lcType;






   RgrDlLchCfg dlInfo;
   RgrUlLchQciCfg ulLchQciInfo;
   U8 lcgId;
} RgrLchCfg;


typedef struct rgrLcgCfg
{
   CmLteCellId cellId;
   CmLteRnti crnti;
   RgrUlLcgCfg ulInfo;
} RgrLcgCfg;



typedef struct rgrCfg
{
   U8 cfgType;
   union
   {
      RgrCellCfg cellCfg;
      RgrUeCfg ueCfg;
      RgrLchCfg lchCfg;
      RgrLcgCfg lcgCfg;
      RgrSchedEnbCfg schedEnbCfg;
   } u;
} RgrCfg;



typedef struct rgrActvTime
{
   Bool pres;
   CmLteTimingInfo actvTime;
} RgrActvTime;



typedef struct rgrCellRecfg
{
   CmLteCellId cellId;
   U32 recfgTypes;
   RgrActvTime recfgActvTime;
   RgrDlHqCfg dlHqRecfg;
   RgrCfiCfg cfiRecfg;

   RgrUlTrgCqiCfg trgUlCqi;
   RgrDlCmnCodeRateCfg dlCmnCodeRate;

   RgrPuschSubBandCfg puschSubBand;
   RgrUlCmnCodeRateCfg ulCmnCodeRate;

   RgrPucchCfg pucchRecfg;
   RgrSrsCfg srsRecfg;
   RgrRachCfg rachRecfg;
   RgrDlfsCfg dlfsRecfg;




   RgrSiCfg siReCfg;

   U16 t300TmrVal;

   RgrLteAdvancedCellConfig rgrLteAdvCfg;

   Bool isDynCfiEnb;

   Bool isAutoCfgModeEnb;

   RgrCellCsgParamCfg csgParamCfg;
   RgrCellCntrlCmdCfg cntrlCmdCfg;

} RgrCellRecfg;
typedef struct rgrUeRecfg
{
   CmLteCellId cellId;
   CmLteRnti oldCrnti;
   CmLteRnti newCrnti;





   U32 ueRecfgTypes;

   RgrUeTxModeCfg txMode;
   RgrUeAprdDlCqiCfg aprdDlCqiRecfg;



   RgrUeUlHqCfg ueUlHqRecfg;
   RgrUeQosCfg ueQosRecfg;
   RgrUeTaTmrCfg ueTaTmrRecfg;





   RgrUeBsrTmrCfg ueBsrTmrRecfg;


   RgrUeUlPwrCfg ueUlPwrRecfg;


   RgrUeDrxCfg ueDrxRecfg;



   Bool isTtiBundlEnabled;

   RgrUeAckNackRepCfg ueAckNackRecfg;
   RgrUeCapCfg ueCapRecfg;
   RgrUeMeasGapCfg ueMeasGapRecfg;
   RgrCodeBookRstCfg ueCodeBookRstRecfg;


   CmLteUeCategory ueCatEnum;
   RgrUeTxAntSelCfg ulTxAntSel;




   RgrUeSpsCfg ueSpsRecfg;
   RgrUePrdDlCqiCfg cqiCfg;
   RgrUeUlSrsCfg srsCfg;
   RgrUeSrCfg srCfg;
   RgrUePuschDedCfg puschDedCfg;






   RgrUeCqiReptCfg ueCqiReptCfg;



   RgrUePdschDedCfg uePdschDedCfg;


   RgrLteAdvancedUeConfig ueLteAdvCfg;







   RgrAccessStratumRls accessStratumRls;
   U8 csgMmbrSta;
} RgrUeRecfg;


typedef struct rgrLchRecfg
{
   CmLteCellId cellId;
   CmLteRnti crnti;
   CmLteLcId lcId;

   U8 recfgTypes;


struct dlRecfgS
   {
      RgrLchQosCfg dlQos;

      RgrLchSpsCfg dlSpsRecfg;
   } dlRecfg;

   RgrUlLchQciCfg ulLchQciInfo;
   U8 lcgId;
} RgrLchRecfg;


typedef struct rgrLcgRecfg
{
   CmLteCellId cellId;
   CmLteRnti crnti;

   struct ullcgRecfgS
   {
      U8 lcgId;





      U32 gbr;
      U32 mbr;
   } ulRecfg;
}RgrLcgRecfg;


typedef struct rgrRecfg
{
   U8 recfgType;
   union
   {
      RgrCellRecfg cellRecfg;
      RgrUeRecfg ueRecfg;
      RgrLchRecfg lchRecfg;
      RgrLcgRecfg lcgRecfg;
   } u;
} RgrRecfg;


typedef struct rgrDel
{
   U8 delType;

   union rgrDelU
   {

      struct rgrCellDelS
      {
         CmLteCellId cellId;
      } cellDel;


      struct rgrUeDelS
      {
         CmLteCellId cellId;
         CmLteRnti crnti;
      } ueDel;


      struct rgrLchDelS
      {
         CmLteCellId cellId;
         CmLteRnti crnti;
         CmLteLcId lcId;
         U8 lcgId;
      } lchDel;


      struct rgrLcgDelS
      {
         CmLteCellId cellId;
         CmLteRnti crnti;
         U8 lcgId;
      } lcgDel;
   } u;
} RgrDel;


typedef struct rgrRst
{
   CmLteCellId cellId;
   CmLteRnti crnti;
} RgrRst;

typedef enum rgrSonCfgType
{
   RGR_SON_PRB_CFG
}RgrSonCfgType;


typedef enum rgrPaVal
{
   RGR_PA_DB_NEG_6,
   RGR_PA_DB_NEG_4_77,
   RGR_PA_DB_NEG_3,
   RGR_PA_DB_NEG_1_77,
   RGR_PA_DB_0,
   RGR_PA_DB_1,
   RGR_PA_DB_2,
   RGR_PA_DB_3,
   RGR_PA_NEGTIVE_INF
}RgrPaVal;


typedef enum rgrPaLevel
{
   RGR_PA_LVL_NORMAL,
   RGR_PA_LVL_LOW,
   RGR_PA_LVL_HIGH
}RgrPaLevel;





typedef struct rgrPrbCfg
{
   U8 isSonIcicEnable;
   U8 numCellEdgeUEs;
   U8 numCellCentreUEs;
   CmLteRnti cellEdgeUe[16];
   CmLteRnti cellCentreUe[16];
   RgrPaLevel paLevelPerPrb[110];
}RgrPrbCfg;



typedef struct rgrSonCfg
{
   RgrSonCfgType cfgType;
   union
   {
      RgrPrbCfg prbCfg;
   }u;
}RgrSonCfg;


typedef struct rgrCfgReqInfo
{

   U8 action;
   union
   {
      RgrCfg cfgInfo;
      RgrRecfg recfgInfo;
      RgrDel delInfo;
      RgrRst rstInfo;
      RgrSonCfg sonCfg;



   } u;
} RgrCfgReqInfo;







typedef struct rgrTtiIndInfo
{
   CmLteCellId cellId;
   U16 sfn;
} RgrTtiIndInfo;
typedef struct rgrSiCfgReqInfo
{
   CmLteCellId cellId;
   RgrSiCfgType cfgType;
   U8 siId;

   Buffer *pdu;
}RgrSiCfgReqInfo;





typedef struct rgrWarningSiCfgReqInfo
{
   CmLteCellId cellId;
   U8 siId;
   CmLListCp siPduLst;
}RgrWarningSiCfgReqInfo;

typedef struct rgrSegmentInfo
{
   CmLList cmasSegPduLstLnk;
   Buffer* pdu;
}RgrSegmentInfo;
typedef struct rgrUeStaIndInfo
{
   CmLteCellId cellId;
   CmLteRnti crnti;
   U8 status;
}RgrUeStaIndInfo;
typedef struct rgrLoadInfReqInfo
{
   CmLteCellId cellId;
   U8 rgrCcPHighStartRb;
   U8 rgrCcPHighEndRb;
}RgrLoadInfReqInfo;
typedef S16 (*RgrBndReq) ( Pst* pst, SuId suId, SpId spId)


                              ;
typedef S16 (*RgrTtiInd) ( Pst* pst, SuId suId, RgrTtiIndInfo *ttiInd)


                                 ;
typedef S16 (*RgrBndCfm) ( Pst* pst, SuId suId, U8 status)


                                ;
typedef S16 (*RgrUbndReq) ( Pst* pst, SpId spId, Reason reason)


                                ;
typedef S16 (*RgrCfgReq) ( Pst* pst, SpId spId, RgrCfgTransId transId, RgrCfgReqInfo * cfgReqInfo)



                                    ;
typedef S16 (*RgrCfgCfm) ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 status)



                                ;
typedef S16 (*RgrSiCfgReq) ( Pst *pst, SpId spId, RgrCfgTransId transId, RgrSiCfgReqInfo *siCfgReq)



                                ;
typedef S16 (*RgrSiCfgCfm) ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 status)



                                ;
typedef S16 (*RgrWarningSiCfgReq) ( Pst *pst, SpId spId, RgrCfgTransId transId, RgrWarningSiCfgReqInfo *warningSiCfgReq)



                                             ;
typedef S16 (*RgrWarningSiCfgCfm) ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 siId, U8 status)




                                ;
typedef S16 (*RgrWarningSiStopReq) ( Pst *pst, SpId spId, RgrCfgTransId transId, U8 siId )



                            ;
typedef S16 (*RgrLoadInfReq) ( Pst *pst, SpId spId, RgrCfgTransId transId, RgrLoadInfReqInfo *loadInfReq)



                                          ;






typedef S16 (*RgrStaInd) ( Pst* pst, SuId suId, RgrStaIndInfo *staInd)


                                 ;



typedef S16 (*RgrLoadInfInd) ( Pst* pst, SuId suId, RgrLoadInfIndInfo *loadInfInd)


                                     ;


typedef S16 (*RgrUeStaInd) ( Pst* pst, SuId suId, RgrUeStaIndInfo *staInd)


                                   ;
extern S16 cmPkRgrSpsCellCfg ( RgrSpsCellCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrSpsDlCellCfg ( RgrSpsCellCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUeSpsDlCfg ( RgrUeSpsDlCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeSpsDlCfg ( RgrUeSpsDlCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUeSpsUlCfg ( RgrUeSpsUlCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeSpsUlCfg ( RgrUeSpsUlCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUeSpsCfg ( RgrUeSpsCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeSpsCfg ( RgrUeSpsCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrLchSpsCfg ( RgrLchSpsCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrLchSpsCfg ( RgrLchSpsCfg *param, Buffer *mBuf )


  ;


extern S16 cmPkRgrUlLchCfg ( RgrUlLchCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUlLchCfg ( RgrUlLchCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUlLchQciCfg ( RgrUlLchQciCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUlLchQciCfg ( RgrUlLchQciCfg *param, Buffer *mBuf )


  ;





extern S16 cmPkRgrUeCqiReptCfg ( RgrUeCqiReptCfg *param, Buffer *mBuf )


  ;

extern S16 cmUnpkRgrUeCqiReptCfg ( RgrUeCqiReptCfg *param, Buffer *mBuf )


  ;

extern S16 cmUnpkRgrSubBandCqiInfo ( RgrSubBandCqiInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkRgrStaInd ( Pst* pst, SuId suId, RgrStaIndInfo* staInd )



  ;

extern S16 cmUnpkRgrStaInd ( RgrStaInd func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmPkRgrStaIndInfo ( RgrStaIndInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkRgrStaIndInfo ( RgrStaIndInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkRgrUeCqiInfo ( RgrUeCqiInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkRgrUeCqiInfo ( RgrUeCqiInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkRgrUeCqiRept ( RgrUeCqiRept *param, Buffer *mBuf )


  ;

extern S16 cmPkRgrSubBandCqiInfo ( RgrSubBandCqiInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkRgrUeCqiRept ( RgrUeCqiRept *param, Buffer *mBuf )


  ;



extern S16 cmPkRgrLoadInfInd ( Pst* pst, SuId suId, RgrLoadInfIndInfo* loadInfInd )



  ;

extern S16 cmUnpkRgrLoadInfInd ( RgrLoadInfInd func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmPkRgrLoadInfIndInfo ( RgrLoadInfIndInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkRgrLoadInfIndInfo ( RgrLoadInfIndInfo *param, Pst *pst, Buffer *mBuf )



  ;



extern S16 cmPkRgrUePdschDedCfg ( RgrUePdschDedCfg *param, Buffer *mBuf )


  ;

extern S16 cmUnpkRgrUePdschDedCfg ( RgrUePdschDedCfg *param, Buffer *mBuf )


  ;

extern S16 cmPkRgrUepACfg ( RgrUepACfg *param, Buffer *mBuf )


  ;

extern S16 cmUnpkRgrUepACfg ( RgrUepACfg *param, Buffer *mBuf )


  ;
extern S16 NxLiRgrBndReq ( Pst* pst, SuId suId, SpId spId )



  ;
extern S16 NxLiRgrTtiInd ( Pst* pst, SuId suId, RgrTtiIndInfo *ttiInd )



  ;
extern S16 NxLiRgrBndCfm ( Pst* pst, SuId suId, U8 status )



  ;
extern S16 NxLiRgrUbndReq ( Pst* pst, SpId spId, Reason reason )



  ;
extern S16 NxLiRgrCfgReq ( Pst* pst, SpId spId, RgrCfgTransId transId, RgrCfgReqInfo * cfgReqInfo )




  ;
extern S16 NxLiRgrCfgCfm ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 status )




  ;
extern S16 NxLiRgrSiCfgCfm ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 status )




  ;



extern S16 NxLiRgrWrngSiCfgCfm ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 siId, U8 status )





  ;



extern S16 NxLiRgrStopWrngSiCfgCfm ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 status )




  ;
extern S16 NxLiRgrWarningSiCfgCfm ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 siId, U8 status )





  ;
extern S16 NxLiRgrSiCfgReq ( Pst* pst, SpId spId, RgrCfgTransId transId, RgrSiCfgReqInfo * cfgReqInfo )




  ;
extern S16 NxLiRgrWarningSiCfgReq ( Pst* pst, SpId spId, RgrCfgTransId transId, RgrWarningSiCfgReqInfo *warningSiCfgReq )




  ;
extern S16 NxLiRgrWarningSiStopReq ( Pst* pst, SpId spId, RgrCfgTransId transId, U8 siId )




  ;
extern S16 NxLiRgrLoadInfReq ( Pst* pst, SpId spId, RgrCfgTransId transId, RgrLoadInfReqInfo* loadInfReq )




  ;
extern S16 NxLiRgrStaInd ( Pst* pst, SuId suId, RgrStaIndInfo *staInd )



  ;
extern S16 NxLiRgrLoadInfInd ( Pst* pst, SuId suId, RgrLoadInfIndInfo *loadInfInd )



  ;






extern S16 cmPkRgrBndReq ( Pst* pst, SuId suId, SpId spId )



  ;

extern S16 cmUnpkRgrBndReq ( RgrBndReq func, Pst* pst, Buffer *mBuf )



  ;




extern S16 cmPkRgrTtiInd ( Pst* pst, SuId suId, RgrTtiIndInfo *ttiInd )



           ;
extern S16 cmPkRgrTtiIndInfo ( RgrTtiIndInfo *ttiInd, Buffer *mBuf)

                               ;

extern S16 cmUnpkRgrTtiInd ( RgrTtiInd func, Pst* pst, Buffer *mBuf )



           ;
extern S16 cmUnpkRgrTtiIndInfo ( RgrTtiIndInfo *param, Buffer *mBuf )


           ;

extern S16 cmPkRgrBndCfm ( Pst* pst, SuId suId, U8 status )



  ;

extern S16 cmUnpkRgrBndCfm ( RgrBndCfm func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmPkRgrUbndReq ( Pst* pst, SpId spId, Reason reason )



  ;

extern S16 cmUnpkRgrUbndReq ( RgrUbndReq func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmPkRgrCfgReq ( Pst* pst, SpId spId, RgrCfgTransId transId, RgrCfgReqInfo * cfgReqInfo )




  ;

extern S16 cmUnpkRgrCfgReq ( RgrCfgReq func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmPkRgrCfgCfm ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 status )




  ;

extern S16 cmUnpkRgrCfgCfm ( RgrCfgCfm func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmPkRgrCfgTransId ( RgrCfgTransId *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrCfgTransId ( RgrCfgTransId *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrDlHqCfg ( RgrDlHqCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrDlHqCfg ( RgrDlHqCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrRntiCfg ( RgrRntiCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrRntiCfg ( RgrRntiCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrDlCmnCodeRateCfg ( RgrDlCmnCodeRateCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrDlCmnCodeRateCfg ( RgrDlCmnCodeRateCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrCfiCfg ( RgrCfiCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrCfiCfg ( RgrCfiCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrPuschSubBandCfg ( RgrPuschSubBandCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrPuschSubBandCfg ( RgrPuschSubBandCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUlCmnCodeRateCfg ( RgrUlCmnCodeRateCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUlCmnCodeRateCfg ( RgrUlCmnCodeRateCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUlTrgCqiCfg ( RgrUlTrgCqiCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUlTrgCqiCfg ( RgrUlTrgCqiCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrBwCfg ( RgrBwCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrBwCfg ( RgrBwCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrPhichCfg ( RgrPhichCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrPhichCfg ( RgrPhichCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrPucchCfg ( RgrPucchCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrPucchCfg ( RgrPucchCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrSrsCfg ( RgrSrsCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrSrsCfg ( RgrSrsCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrRachCfg ( RgrRachCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrRachCfg ( RgrRachCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrSiCfg ( RgrSiCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrSiCfg ( RgrSiCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrTpcRntiCfg ( RgrTpcRntiCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrTpcRntiCfg ( RgrTpcRntiCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUlPwrCfg ( RgrUlPwrCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUlPwrCfg ( RgrUlPwrCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrPuschCfg ( RgrPuschCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrPuschCfg ( RgrPuschCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrCodeBookRstCfg ( RgrCodeBookRstCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrCodeBookRstCfg ( RgrCodeBookRstCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrPreambleSetCfg ( RgrPreambleSetCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrPreambleSetCfg ( RgrPreambleSetCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrCmnLchCfg ( RgrCmnLchCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrCmnLchCfg ( RgrCmnLchCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrDlfsCfg ( RgrDlfsCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrDlfsCfg ( RgrDlfsCfg *param, Buffer *mBuf )


  ;





extern S16 cmPkRgrWarningSiCfgReq ( Pst* pst, SpId spId, RgrCfgTransId transId, RgrWarningSiCfgReqInfo *warningSiCfgReqInfo )




  ;

extern S16 cmUnpkRgrWarningSiCfgReq ( RgrWarningSiCfgReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmPkRgrWarningSiCfgReqInfo ( Pst *pst, RgrWarningSiCfgReqInfo *param, Buffer *mBuf )



  ;

extern S16 cmUnpkRgrWarningSiCfgReqInfo ( Pst *pst, RgrWarningSiCfgReqInfo *param, Buffer *mBuf )



  ;

extern S16 cmPkRgrWarningSiStopReq ( Pst *pst, SpId spId, RgrCfgTransId transId, U8 siId )




  ;

extern S16 cmUnpkRgrWarningSiStopReq ( RgrWarningSiStopReq func, Pst *pst, Buffer *mBuf )



  ;


extern S16 cmPkRgrWarningSiCfgCfm ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 siId, U8 status )





  ;

extern S16 cmUnpkRgrWarningSiCfgCfm ( RgrWarningSiCfgCfm func, Pst* pst, Buffer *mBuf )



  ;


extern S16 cmPkRgrSiCfgReq ( Pst* pst, SpId spId, RgrCfgTransId transId, RgrSiCfgReqInfo * cfgReqInfo )




  ;

extern S16 cmUnpkRgrSiCfgReq ( RgrSiCfgReq func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmPkRgrSiCfgReqInfo ( RgrSiCfgReqInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkRgrSiCfgReqInfo ( RgrSiCfgReqInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkRgrSiCfgCfm ( Pst* pst, SuId suId, RgrCfgTransId transId, U8 status )




  ;

extern S16 cmUnpkRgrSiCfgCfm ( RgrSiCfgCfm func, Pst* pst, Buffer *mBuf )



  ;





extern S16 cmPkRgrLoadInfReq ( Pst* pst, SpId spId, RgrCfgTransId transId, RgrLoadInfReqInfo * loadInfReq )




  ;

extern S16 cmUnpkRgrLoadInfReq ( RgrLoadInfReq func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmPkRgrLoadInfReqInfo ( RgrLoadInfReqInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkRgrLoadInfReqInfo ( RgrLoadInfReqInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrEnbPfs ( RgrEnbPfs *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrEnbPfs ( RgrEnbPfs *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrCellCfg ( RgrCellCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrCellCfg ( RgrCellCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUeAprdDlCqiCfg ( RgrUeAprdDlCqiCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeAprdDlCqiCfg ( RgrUeAprdDlCqiCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrSchedEnbCfg ( RgrSchedEnbCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrSchedEnbCfg ( RgrSchedEnbCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUePrdDlCqiCfg ( RgrUePrdDlCqiCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUePrdDlCqiCfg ( RgrUePrdDlCqiCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUeDlCqiCfg ( RgrUeDlCqiCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeDlCqiCfg ( RgrUeDlCqiCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUeMeasGapCfg ( RgrUeMeasGapCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeMeasGapCfg ( RgrUeMeasGapCfg *param, Buffer *mBuf )


  ;

extern S16 cmPkRgrDrxLongCycleOffst ( RgrDrxLongCycleOffst *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrDrxLongCycleOffst ( RgrDrxLongCycleOffst *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrDrxShortDrx ( RgrDrxShortDrx *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrDrxShortDrx ( RgrDrxShortDrx *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUeDrxCfg ( RgrUeDrxCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeDrxCfg ( RgrUeDrxCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUeCapCfg ( RgrUeCapCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeCapCfg ( RgrUeCapCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUeAckNackRepCfg ( RgrUeAckNackRepCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeAckNackRepCfg ( RgrUeAckNackRepCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUeTxModeCfg ( RgrUeTxModeCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeTxModeCfg ( RgrUeTxModeCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUeUlHqCfg ( RgrUeUlHqCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeUlHqCfg ( RgrUeUlHqCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUeGrpPwrCfg ( RgrUeGrpPwrCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeGrpPwrCfg ( RgrUeGrpPwrCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUeUlPwrCfg ( RgrUeUlPwrCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeUlPwrCfg ( RgrUeUlPwrCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUeQosCfg ( RgrUeQosCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeQosCfg ( RgrUeQosCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUeTaTmrCfg ( RgrUeTaTmrCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeTaTmrCfg ( RgrUeTaTmrCfg *param, Buffer *mBuf )


  ;





extern S16 cmPkRgrUeBsrTmrCfg ( RgrUeBsrTmrCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeBsrTmrCfg ( RgrUeBsrTmrCfg *param, Buffer *mBuf )


  ;


extern S16 cmPkRgrUeCfg ( RgrUeCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeCfg ( RgrUeCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrLchQosCfg ( RgrLchQosCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrLchQosCfg ( RgrLchQosCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrDlLchCfg ( RgrDlLchCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrDlLchCfg ( RgrDlLchCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUlLcgCfg ( RgrUlLcgCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUlLcgCfg ( RgrUlLcgCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrLchCfg ( RgrLchCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrLchCfg ( RgrLchCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrLcgCfg ( RgrLcgCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrLcgCfg ( RgrLcgCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrCfg ( RgrCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrCfg ( RgrCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrActvTime ( RgrActvTime *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrActvTime ( RgrActvTime *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrCellRecfg ( RgrCellRecfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrCellRecfg ( RgrCellRecfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUeRecfg ( RgrUeRecfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeRecfg ( RgrUeRecfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrLchRecfg ( RgrLchRecfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrLchRecfg ( RgrLchRecfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrLcgRecfg ( RgrLcgRecfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrLcgRecfg ( RgrLcgRecfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrRecfg ( RgrRecfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrRecfg ( RgrRecfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrDel ( RgrDel *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrDel ( RgrDel *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrRst ( RgrRst *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrRst ( RgrRst *param, Buffer *mBuf )


  ;

extern S16 cmPkRgrSonCfg ( RgrSonCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrSonCfg ( RgrSonCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrSonPrbCfg ( RgrPrbCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrSonPrbCfg ( RgrPrbCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrCfgReqInfo ( RgrCfgReqInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrCfgReqInfo ( RgrCfgReqInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUeTxAntSelCfg ( RgrUeTxAntSelCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUeTxAntSelCfg ( RgrUeTxAntSelCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrUePuschDedCfg ( RgrUePuschDedCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrUePuschDedCfg ( RgrUePuschDedCfg *param, Buffer *mBuf )


  ;


extern S16 cmPkRgrUeDlPCqiSetup ( RgrUeDlPCqiSetup *param, Buffer *mBuf )



  ;

extern S16 cmUnpkRgrUeDlPCqiSetup ( RgrUeDlPCqiSetup *param, Buffer *mBuf )



  ;

extern S16 cmPkRgrUeUlSrsSetupCfg ( RgrUeUlSrsSetupCfg *param, Buffer *mBuf )



  ;

extern S16 cmUnpkRgrUeUlSrsSetupCfg ( RgrUeUlSrsSetupCfg *param, Buffer *mBuf )



  ;

extern S16 cmPkRgrUeSrSetupCfg ( RgrUeSrSetupCfg *param, Buffer *mBuf )



  ;

extern S16 cmUnpkRgrUeSrSetupCfg ( RgrUeSrSetupCfg *param, Buffer *mBuf )



  ;

extern S16 cmPkRgrUeSrCfg ( RgrUeSrCfg *param, Buffer *mBuf )



  ;

extern S16 cmUnpkRgrUeSrCfg ( RgrUeSrCfg *param, Buffer *mBuf )



  ;

extern S16 cmPkRgrUeUlSrsCfg ( RgrUeUlSrsCfg *param, Buffer *mBuf )



  ;

extern S16 cmUnpkRgrUeUlSrsCfg ( RgrUeUlSrsCfg *param, Buffer *mBuf )



  ;
extern S16 NxLiRgrUeStaInd ( Pst* pst, SuId suId, RgrUeStaIndInfo *ueStaInd )



  ;

extern S16 cmPkRgrUeStaInd ( Pst* pst, SuId suId, RgrUeStaIndInfo* ueStaInd )




  ;

extern S16 cmUnpkRgrUeStaInd ( RgrUeStaInd func, Pst *pst, Buffer *mBuf )




  ;

extern S16 cmPkRgrUeStaIndInfo ( RgrUeStaIndInfo *param, Buffer *mBuf )



  ;


extern S16 cmUnpkRgrUeStaIndInfo ( RgrUeStaIndInfo *param, Buffer *mBuf )



  ;



extern S16 cmPkRgrLteAdvancedUeConfig ( RgrLteAdvancedUeConfig *param, Buffer *mBuf )


              ;

extern S16 cmUnpkRgrLteAdvancedUeConfig ( RgrLteAdvancedUeConfig *param, Buffer *mBuf )


              ;

extern S16 cmPkRgrAbsConfig ( RgrAbsConfig *param, Buffer *mBuf )


              ;

extern S16 cmUnpkRgrAbsConfig ( RgrAbsConfig *param, Buffer *mBuf )


              ;

extern S16 cmPkRgrSfrConfig ( RgrSfrConfig *param, Buffer *mBuf )


              ;

extern S16 cmUnpkRgrSfrConfig ( RgrSfrConfig *param, Buffer *mBuf )


              ;

extern S16 cmPkRgrCellLteAdvancedFeatureCfg ( RgrLteAdvancedCellConfig *param, Buffer *mBuf )


              ;

extern S16 cmUnpkRgrCellLteAdvancedFeatureCfg ( RgrLteAdvancedCellConfig *param, Buffer *mBuf )


              ;

extern S16 cmPkRgrDsfrConfig ( RgrDsfrConfig *param, Buffer *mBuf )


           ;

extern S16 cmUnpkRgrDsfrConfig ( RgrDsfrConfig *param, Buffer *mBuf )


           ;


extern S16 cmPkRgrCellCsgParamCfg ( RgrCellCsgParamCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrCellCsgParamCfg ( RgrCellCsgParamCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgrCellCntrlCmdCfg ( RgrCellCntrlCmdCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgrCellCntrlCmdCfg ( RgrCellCntrlCmdCfg *param, Buffer *mBuf )


  ;
typedef struct ctfCfgTransId {
   U8 trans[9];
} CtfCfgTransId;






typedef enum {
   CTF_BW_RB_6,
   CTF_BW_RB_15,
   CTF_BW_RB_25,
   CTF_BW_RB_50,
   CTF_BW_RB_75,
   CTF_BW_RB_100
} CtfBandwidth;





typedef enum {
   CTF_DUPMODE_FDD=1,
   CTF_DUPMODE_TDD
} CtfDuplexMode;





typedef enum {
   CTF_SC_SPACING_15KHZ,
   CTF_SC_SPACING_7DOT5KHZ
} CtfSCSpacing;





typedef enum {
   CTF_CP_NORMAL,
   CTF_CP_EXTENDED
} CtfCPCfg;





typedef enum {
   CTF_AP_CNT_1 = 1,
   CTF_AP_CNT_2 = 2,
   CTF_AP_CNT_4 = 4
} CtfAntennaPortsCount;





typedef enum {
   CTF_PHICH_DUR_NORMAL,
   CTF_PHICH_DUR_EXTENDED
} CtfPhichDuration;





typedef enum {
   CTF_PHICH_RSRC_ONESIXTH,
   CTF_PHICH_RSRC_HALF,
   CTF_PHICH_RSRC_ONE,
   CTF_PHICH_RSRC_TWO
} CtfPhichResource;





typedef enum {
   CTF_PUSCH_HOPMODE_INTER_SUBFRM,
   CTF_PUSCH_HOPMODE_INTRAANDINTERSUBFRM
} CtfPuschHoppingMode;





typedef enum {
   CTF_PUCCH_DELTASHIFT1,
   CTF_PUCCH_DELTASHIFT2,
   CTF_PUCCH_DELTASHIFT3
} CtfPucchDeltaShift;






typedef enum {
   CTF_PDSCH_PA_MINUS_6,
   CTF_PDSCH_PA_MINUS_4DOT77,
   CTF_PDSCH_PA_MINUS_3,
   CTF_PDSCH_PA_MINUS_1DOT77,
   CTF_PDSCH_PA_ZERO,
   CTF_PDSCH_PA_ONE,
   CTF_PDSCH_PA_TWO,
   CTF_PDSCH_PA_THREE
} CtfPdschPaParam;





typedef enum {
   CTF_CQI_RPT_MODE_APERIODIC_RM12,
   CTF_CQI_RPT_MODE_APERIODIC_RM20,
   CTF_CQI_RPT_MODE_APERIODIC_RM22,
   CTF_CQI_RPT_MODE_APERIODIC_RM30,
   CTF_CQI_RPT_MODE_APERIODIC_RM31
} CtfCqiRptModeAperiodic;





typedef enum {
   CTF_UE_TX_ANT_SELECT_CLOSEDLOOP,
   CTF_UE_TX_ANT_SELECT_OPENLOOP
} CtfUeTxAntSelectType;





typedef enum {
   CTF_PUCCH_REP_FACTOR_N2,
   CTF_PUCCH_REP_FACTOR_N4,
   CTF_PUCCH_REP_FACTOR_N6
} CtfPucchRepFactor;
 typedef enum {
    CTF_PUCCH_TDD_ACKNACK_FB_MODE_BUNDLING,
    CTF_PUCCH_TDD_ACKNACK_FB_MODE_MUXING
 } CtfTddAckNackFBMode;






typedef enum {
   CTF_UE_TX_ANT_MODE_TM1,
   CTF_UE_TX_ANT_MODE_TM2,
   CTF_UE_TX_ANT_MODE_TM3,
   CTF_UE_TX_ANT_MODE_TM4,
   CTF_UE_TX_ANT_MODE_TM5,
   CTF_UE_TX_ANT_MODE_TM6,
   CTF_UE_TX_ANT_MODE_TM7




} CtfUeTxAntMode;





typedef enum {
   CTF_MAJOR_RECFG,
   CTF_MINOR_RECFG
} CtfReCfgType;





typedef struct ctfUeInfo {
   CmLteCellId cellId;
   CmLteRnti ueId;
}CtfUeInfo;







typedef struct ctfBwCfgInfo {
   Bool pres;
   CtfBandwidth dlBw;
   CtfBandwidth ulBw;
   U8 eUtraBand;

} CtfBwCfgInfo;





typedef struct ctfTxSchemeCfg {
   Bool pres;
   CtfDuplexMode duplexMode;
   CtfSCSpacing scSpacing;
   CtfCPCfg cycPfx;
} CtfTxSchemeCfg;






typedef struct ctfAntennaCfgInfo {
   CtfAntennaPortsCount antPortsCnt;
} CtfAntennaCfgInfo;
typedef struct ctfPrachCfgInfo {
   Bool pres;
   U16 rootSequenceIndex;
   U8 prachCfgIndex;
   U8 zeroCorrelationZoneCfg;

   Bool highSpeedFlag;

   U8 prachFreqOffset;
} CtfPrachCfgInfo;






typedef struct ctfPdschCfgInfo {
   Bool pres;
   S16 refSigPwr;

   U8 p_b;
} CtfPdschCfgInfo;






typedef struct ctfPuschCfgBasic {
   U8 noOfsubBands;
   CtfPuschHoppingMode hoppingMode;
   U8 hoppingOffset;
   Bool enable64QAM;

} CtfPuschCfgBasic;






typedef struct ctfPuschUlRS {
   Bool grpHopEnabled;
   Bool seqHopEnabled;
   U8 grpNum;
   U8 cycShift;
} CtfPuschUlRS;






typedef struct ctfPuschCfgInfo {
   Bool pres;
   CtfPuschCfgBasic puschBasicCfg;
   CtfPuschUlRS puschUlRS;
} CtfPuschCfgInfo;






typedef struct ctfPhichCfgInfo {
   Bool pres;

   CtfPhichDuration duration;

   CtfPhichResource resource;
} CtfPhichCfgInfo;






typedef struct ctfPucchCfgInfo {
   Bool pres;
   U8 nRB;

   U8 nCS;
   U16 n1PUCCH;
   CtfPucchDeltaShift deltaShift;
} CtfPucchCfgInfo;






typedef struct ctfSrsUlCfgInfo {
   Bool pres;
   U8 srsCfgType;

   struct srsSetupS
   {
      U8 srsBw;
      U8 sfCfg;
      Bool srsANSimultTx;

      Bool srsMaxUpPts;

   } srsSetup;
} CtfSrsUlCfgInfo;






typedef struct ctfTddSfCfgInfo {
   Bool pres;
   U8 sfAssignment;

   U8 spclSfPatterns;

} CtfTddSfCfgInfo;
typedef struct ctfVendorSpecific{
  U16 buffLen ;
  U8 *paramBuffer ;
} CtfVendorSpecific;
typedef struct ctfCellCfgInfo {
   CmLteCellId cellId;
   U8 cellIdGrpId;
   SpId macSapId;
   SpId schSapId;

   Bool physCellIdPres ;
   U8 physCellId;
   CtfBwCfgInfo bwCfg;
   CtfTxSchemeCfg txCfg;

   CtfAntennaCfgInfo antennaCfg;
   CtfPrachCfgInfo prachCfg;
   CtfPdschCfgInfo pdschCfg;
   CtfPuschCfgInfo puschCfg;
   CtfPhichCfgInfo phichCfg;
   CtfPucchCfgInfo pucchCfg;
   CtfSrsUlCfgInfo srsUlCfg;
   CtfTddSfCfgInfo tddSfCfg;


   U16 syncSigPowOs;
   Bool syncSigPowOsPres;
   U16 cfiPowOs;
   Bool cfiPowOsPres;
   U16 dciPowOs;
   Bool dciPowOsPres;
   U16 extWinMargin;
   Bool extWinMarginPres;
   U16 pucchNoiseGamma;
   Bool pucchNoiseGammaPres;
   U16 prachPkRatio4;
   Bool prachPkRatio4Pres;
   U16 prachPkRatio0;
   Bool prachPkRatio0Pres;
   U16 srsDopEstFactor;
   Bool srsDopEstFactorPres;
   U16 puschProbDtxAck;
   Bool puschProbDtxAckPres;
   U16 pucchProbDtxAck;
   Bool pucchProbDtxAckPres;

   U16 txAntennaPorts ;
   Bool txAntennaPortsPres;
   U16 rxAntennaPorts ;
   Bool rxAntennaPortsPres ;

   U16 phySyncMode;
   Bool phySyncModePres;
   U16 dataRepMode;
   Bool dataRepModePres ;
   U16 rachSrRepMode;
   Bool rachSrRepModePres;

   U16 opMode;
   U32 counter;
   U32 period;
   S16 priSigPwr;
   S16 secSigPwr;
   U16 dlEarfcn;
   U16 ulEarfcn;

   S16 pilotSigPwr;


   U8 numDlUePerTti;




} CtfCellCfgInfo;





typedef enum {
   CTF_CELL_DOWN,
   CTF_CELL_UP
} CtfCellStatus;






typedef struct ctfCellRecfgInfo {
   CtfReCfgType ctfReCfgType ;
   CmLteCellId cellId;

   U8 cellIdGrpId;
   Bool physCellIdPres ;
   U8 physCellId;
   CtfBwCfgInfo bwCfg;
   CtfTxSchemeCfg txCfg;

   CtfAntennaCfgInfo antennaCfg;
   CmLteTimingInfo actvnTime;
   CtfPrachCfgInfo prachCfg;
   CtfPdschCfgInfo pdschCfg;
   CtfPuschCfgInfo puschCfg;
   CtfPhichCfgInfo phichCfg;
   CtfPucchCfgInfo pucchCfg;
   CtfSrsUlCfgInfo srsUlCfg;
   CtfTddSfCfgInfo tddSfCfg;

   U16 syncSigPowOs;
   Bool syncSigPowOsPres;
   U16 cfiPowOs;
   Bool cfiPowOsPres;
   U16 dciPowOs;
   Bool dciPowOsPres;
   U16 extWinMargin;
   Bool extWinMarginPres;
   U16 pucchNoiseGamma;
   Bool pucchNoiseGammaPres;
   U16 prachPkRatio4;
   Bool prachPkRatio4Pres;
   U16 prachPkRatio0;
   Bool prachPkRatio0Pres;
   U16 srsDopEstFactor;
   Bool srsDopEstFactorPres;
   U16 puschProbDtxAck;
   Bool puschProbDtxAckPres;
   U16 pucchProbDtxAck;
   Bool pucchProbDtxAckPres;

   U16 txAntennaPorts ;
   Bool txAntennaPortsPres;
   U16 rxAntennaPorts ;
   Bool rxAntennaPortsPres ;

   U16 phySyncMode;
   Bool phySyncModePres;
   U16 dataRepMode;
   Bool dataRepModePres ;
   U16 rachSrRepMode;
   Bool rachSrRepModePres;

   S16 pilotSigPwr;
   S16 priSigPwr;
   S16 secSigPwr;

   CtfCellStatus ctfCellStatus;
} CtfCellRecfgInfo;
typedef struct ctfDedPdschCfgInfo {
   Bool pres;
   CtfPdschPaParam pA;
} CtfDedPdschCfgInfo;






typedef struct ctfDedPucchCfgInfo {
   Bool pres;
   U8 dedPucchCfgType;
   struct pucchSetupS
   {


      Bool repFactPres;


      CtfPucchRepFactor repFact;
      U16 n1PUCCHRep;


   } pucchSetup;


    Bool tddAckNackCfgPres;

    CtfTddAckNackFBMode tddAckNackFBMode;


} CtfDedPucchCfgInfo;






typedef struct ctfDedPuschCfgInfo {
   Bool pres;
   U8 betaOffsetAckIdx;

   U8 betaOffsetRiIdx;

   U8 betaOffsetCqiIdx;

} CtfDedPuschCfgInfo;
typedef struct ctfDedAntCfgInfo {
   Bool pres;
   CtfUeTxAntMode txMode;
   struct ueTxAntSelectionS
   {
      U8 cfgType;
      CtfUeTxAntSelectType txAntSelect;

   } ueTxAntSelection;




} CtfDedAntCfgInfo;






typedef struct ctfUeCatCfgInfo {
   Bool pres;
   CmLteUeCategory ueCategory;
} CtfUeCatCfgInfo;


typedef struct ctfHdr{
   CmLteCellId cellId;
   CmLteRnti ueId;
}CtfHdr;






typedef struct ctfKenbCfgInfo{
           U8 pres;
           U8 algoType;
           U8 secKey[32];
}CtfKenbCfgInfo;
typedef struct ctfDedCfgInfo {
   CmLteCellId cellId;
   CmLteRnti ueId;
   CtfUeCatCfgInfo ueCatCfg;
   CtfDedPdschCfgInfo pdschCfg;
   CtfDedPucchCfgInfo pucchCfg;
   CtfDedPuschCfgInfo puschCfg;





   CtfDedAntCfgInfo antInfo;
} CtfDedCfgInfo;


typedef struct ctfUeSecCellCfgInfo
{
  U8 sCellIdx;
  U16 sCellId;
}CtfUeSecCellCfgInfo;


typedef enum ctfScellAction
{
   CTF_SCELL_ADD,
   CTF_SCELL_MOD_COMMON,
   CTF_SCELL_MOD_DEDICATED,
   CTF_SCELL_RELEASE
}CtfScellAction;


typedef struct ctfSecCellCfgInfo
{
  U8 numSCells;
  CtfScellAction sCellAction;
  CtfUeSecCellCfgInfo ueSCellDedCfg[7];
}CtfSecCellCfgInfo;






typedef struct ctfDedRecfgInfo {
   CmLteCellId cellId;
   CmLteRnti ueId;


   CmLteRnti newUeId;
   CtfUeCatCfgInfo ueCatCfg;
   CtfDedPdschCfgInfo pdschCfg;
   CtfDedPucchCfgInfo pucchCfg;
   CtfDedPuschCfgInfo puschCfg;






   CtfDedAntCfgInfo antInfo;

   CtfSecCellCfgInfo sCellInfo;
} CtfDedRecfgInfo;






typedef struct ctfCellReleaseInfo {
   CmLteCellId cellId;
} CtfCellReleaseInfo;






typedef struct ctfDedReleaseInfo {
   CmLteCellId cellId;
   CmLteRnti ueId;
   CtfSecCellCfgInfo sCellInfo;
} CtfDedReleaseInfo;






typedef struct ctfCfgInfo {
   U8 cfgElem;
   union
   {
      CtfCellCfgInfo cellCfg;
      CtfDedCfgInfo dedCfg;
   } u;
} CtfCfgInfo;






typedef struct ctfReCfgInfo {
   U8 cfgElem;
   union
   {
      CtfCellRecfgInfo cellRecfg;
      CtfDedRecfgInfo dedRecfg;
   } u;
} CtfReCfgInfo;






typedef struct ctfReleaseInfo {
   U8 cfgElem;
   union
   {
      CtfCellReleaseInfo cellRel;
      CtfDedReleaseInfo dedRel;
   } u;
} CtfReleaseInfo;
typedef struct ctfCfgReqInfo {
   U8 cfgType;
   union
   {
      CtfCfgInfo cfg;
      CtfReCfgInfo reCfg;
      CtfReleaseInfo release;
   } u;


   CtfVendorSpecific vendorParams ;

} CtfCfgReqInfo;







typedef struct ctfAsKeyInfo{
           U8 intgAlgoType;
           U8 ciphAlgoType;
           U8 secKey[32];
}CtfAsKeyInfo;


typedef struct ctfKenbStarInfo{
           U16 dlCarrFreq;
           U16 physCellId;
           U8 secKey[32];
}CtfKenbStarInfo;


typedef struct ctfNhKeyInfo{
           U16 dlCarrFreq;
           U16 physCellId;
           U8 secKey[32];
}CtfNhKeyInfo;

typedef struct ctfKdfReqInfo {
   U8 keyDerType;
   union
   {
      CtfAsKeyInfo kEnbInf;
      CtfKenbStarInfo kEnbStarInf;
      CtfNhKeyInfo nhKeyInf;
   } u;
} CtfKdfReqInfo;
typedef struct ctfAskeyCfmInfo{
          U8 intKey[32];
          U8 upCiphKey[32];
          U8 cpCiphKey[32];
}CtfAskeyCfmInfo;


typedef struct ctfKenbStarCfmInfo{
           U8 secKey[32];
}CtfKenbStarCfmInfo;


typedef struct ctfNhKeyCfmInfo{
           U8 secKey[32];
}CtfNhKeyCfmInfo;

typedef struct ctfKdfCfmInfo {
   U8 keyDerType;
   union
   {
      CtfAskeyCfmInfo kEnbInf;
      CtfKenbStarCfmInfo kEnbStarInf;
      CtfNhKeyCfmInfo nhKeyInf;
   } u;
} CtfKdfCfmInfo;






typedef struct ctfCnmVendorSpecificInfo{
 U16 numOfVendorSpecifcParam;
 U32 vendorSpecifcParam[8];
}CtfCnmVendorSpecificInfo;



typedef struct ctfCnmCellSyncReq {
 U16 nbrEarfcn;
 U16 nbrPCellId;
 U8 nbrTxAntCount;

    U8 nbrCellCp;

    U8 nbrCellNRb;

    U8 nbrSpecSfCfg;
    CtfCnmVendorSpecificInfo ctfCnmVendorSpecificInfo;
}CtfCnmCellSyncReq;


typedef struct ctfCnmInitSyncReq {
 U8 searchType;


 U8 mibRequest;


 U16 earfcn;
 U8 measBandWidth;
 U16 numOfPciList;
 CtfCnmCellSyncReq pciList[16];
}CtfCnmInitSyncReq;







typedef struct ctfCnmMibInfo {
 U16 sfn;
 U8 numTxAntennas;
 U8 phichDuration;
 U8 phichResource;
 U8 dlSystemBandWidht;

}CtfCnmMibInfo;


typedef struct ctfCnmInitSyncInfo {
 U16 pci;
 U8 rsrp;
 U8 mibValidFlag;
 U16 localSfn;
 CtfCnmMibInfo ctfCnmMibInfo;
    CtfCnmVendorSpecificInfo ctfCnmVendorSpecificInfo;
}CtfCnmInitSyncInfo;


typedef struct ctfCnmInitSyncRsp {
 U8 status;
 U16 earfcn;
 U8 numOfNeighbourInfo;
 CtfCnmInitSyncInfo ctfCnmInitSyncInfo[16];
}CtfCnmInitSyncRsp;

typedef struct ctfCnmCellSyncRsp {
 U8 status;
}CtfCnmCellSyncRsp;

typedef struct ctfCnmCellSyncInd {
 U8 status;
    CtfCnmVendorSpecificInfo ctfCnmVendorSpecificInfo;
}CtfCnmCellSyncInd;


typedef struct ctfPeriodicRemCellInfo {
   U16 pci;
   U8 rsrp;
   U8 dlBw;
   U8 numTx;
}CtfPeriodicRemCellInfo;

typedef struct ctfPeriodicRemCellSearchRsp {
   U8 numCells;
   CtfPeriodicRemCellInfo cellInfo[16];
}CtfPeriodicRemCellSearchRsp;
typedef S16 (*CtfBndReq) ( Pst* pst, SuId suId, SpId spId)


                              ;



typedef S16 (*CtfBndCfm) ( Pst* pst, SuId suId, U8 status)


                                ;


typedef S16 (*CtfUbndReq) ( Pst* pst, SpId spId, Reason reason)


                                ;



typedef S16 (*CtfCfgReq) ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfCfgReqInfo* cfgReqInfo)



                                    ;


typedef S16 (*CtfCfgCfm) ( Pst* pst, SuId suId, CtfCfgTransId transId, U8 status)



                                ;


typedef S16 (*CtfEnbStopInd) ( Pst* pst, SuId suId, CtfCfgTransId transId)


                                 ;


typedef S16 (*CtfKdfReq) ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfKdfReqInfo* cfgReqInfo)



                                    ;


typedef S16 (*CtfKdfCfm) ( Pst* pst, SuId suId, CtfCfgTransId transId, CtfKdfCfmInfo* kdfCfmInfo, U8 status)




                                ;


typedef S16 (*CtfCnmInitSyncReqMsg) ( Pst* pst, SpId spId, CtfCfgTransId* transId, CtfCnmInitSyncReq* cnmInitSyncReq)



                                         ;

typedef S16 (*CtfCnmInitSyncRspMsg) ( Pst* pst, SpId spId, CtfCfgTransId* transId, CtfCnmInitSyncRsp* cnmInitSyncRsp)



                                        ;

typedef S16 (*CtfCnmCellSyncReqMsg) ( Pst* pst, SpId spId, CtfCfgTransId* transId, CtfCnmCellSyncReq* cnmCellSyncReq)



                                        ;

typedef S16 (*CtfCnmCellSyncRspMsg) ( Pst* pst, SpId spId, CtfCfgTransId* transId, CtfCnmCellSyncRsp* cnmCellSyncRsp)



                                        ;

typedef S16 (*CtfCnmCellSyncIndMsg) ( Pst* pst, SpId spId, CtfCfgTransId* transId, CtfCnmCellSyncInd* cnmCellSyncInd)



                                        ;




typedef S16 (*CtfUeIdChgReq) ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfUeInfo * ueInfo, CtfUeInfo * newUeInfo)




                                   ;


typedef S16 (*CtfUeIdChgCfm) ( Pst* pst, SuId suId, CtfCfgTransId transId, CtfUeInfo * ueInfo, CmStatus status)




                                ;
extern S16 TfUiCtfBndReq ( Pst* pst, SuId suId, SpId spId )



  ;
extern S16 TfUiCtfBndCfm ( Pst* pst, SuId suId, U8 status )



  ;
extern S16 TfUiCtfUbndReq ( Pst* pst, SpId spId, Reason reason )



  ;
extern S16 TfUiCtfCfgReq ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfCfgReqInfo* cfgReqInfo )




  ;
extern S16 TfUiCtfCfgCfm ( Pst* pst, SuId suId, CtfCfgTransId transId, U8 status )




  ;
extern S16 TfUiCtfCnmCellSyncReq ( Pst* pst, SpId spId, CtfCfgTransId * transId, CtfCnmCellSyncReq* cfgReq )




  ;
extern S16 TfUiCtfCnmCellSyncRsp ( Pst* pst, SuId suId, CtfCfgTransId * transId, CtfCnmCellSyncRsp * cnmCellSyncRsp )




  ;
extern S16 TfUiCtfCnmInitSyncReq ( Pst* pst, SpId spId, CtfCfgTransId * transId, CtfCnmInitSyncReq* cfgReq )




  ;
extern S16 TfUiCtfCnmInitSyncRsp ( Pst* pst, SuId suId, CtfCfgTransId * transId, CtfCnmInitSyncRsp * cnmInitSyncRsp )




  ;
extern S16 TfUiCtfCnmCellSyncInd ( Pst* pst, SuId suId, CtfCfgTransId * transId, CtfCnmCellSyncInd * cnmCellSyncInd )




  ;
extern S16 TfUiCtfUeIdChgReq ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfUeInfo * ueInfo, CtfUeInfo * newUeInfo )





  ;
extern S16 TfUiCtfUeIdChgCfm ( Pst* pst, SuId suId, CtfCfgTransId transId, CtfUeInfo * ueInfo, CmStatus status )





  ;




extern S16 NhLiCtfBndReq ( Pst* pst, SuId suId, SpId spId )



  ;


extern S16 NhLiCtfBndCfm ( Pst* pst, SuId suId, U8 status )



  ;

extern S16 NhLiCtfUbndReq ( Pst* pst, SpId spId, Reason reason )



  ;


extern S16 NhLiCtfCfgReq ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfCfgReqInfo* cfgReqInfo )




  ;

extern S16 NhLiCtfCfgCfm ( Pst* pst, SuId suId, CtfCfgTransId transId, U8 status )




  ;

extern S16 NhLiCtfUeIdChgReq ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfUeInfo * ueInfo, CtfUeInfo * newUeInfo )





  ;

extern S16 NhLiCtfUeIdChgCfm ( Pst* pst, SuId suId, CtfCfgTransId transId, CtfUeInfo * ueInfo, CmStatus status )





  ;




extern S16 cmPkCtfBndReq ( Pst* pst, SuId suId, SpId spId )



  ;

extern S16 cmUnpkCtfBndReq ( CtfBndReq func, Pst* pst, Buffer *mBuf )



  ;



extern S16 cmPkCtfBndCfm ( Pst* pst, SuId suId, U8 status )



  ;



extern S16 cmUnpkCtfBndCfm ( CtfBndCfm func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmPkCtfUbndReq ( Pst* pst, SpId spId, Reason reason )



  ;

extern S16 cmUnpkCtfUbndReq ( CtfUbndReq func, Pst* pst, Buffer *mBuf )



  ;




extern S16 cmPkCtfCnmCellSyncReq ( Pst* pst, SpId spId, CtfCfgTransId * transId, CtfCnmCellSyncReq * ctfCnmCellSyncreq )




  ;

extern S16 cmUnpkCnmCellSyncReq ( CtfCnmCellSyncReqMsg func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmPkCtfCnmCellSyncRsp ( Pst* pst, SpId spId, CtfCfgTransId * transId, CtfCnmCellSyncRsp * ctfCnmCellSyncrsp )




  ;

extern S16 cmUnpkCnmCellSyncRsp ( CtfCnmCellSyncRspMsg func, Pst* pst, Buffer *mBuf )



  ;


extern S16 cmPkCtfCnmCellSyncInd ( Pst* pst, SpId spId, CtfCfgTransId * transId, CtfCnmCellSyncInd * ctfCnmCellSyncind )




  ;

extern S16 cmUnpkCnmCellSyncInd ( CtfCnmCellSyncIndMsg func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmPkCtfCnmInitSyncReq ( Pst* pst, SpId spId, CtfCfgTransId * transId, CtfCnmInitSyncReq * ctfCnmInitSyncreq )




  ;
extern S16 cmUnpkCnmInitSyncReq ( CtfCnmInitSyncReqMsg func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmPkCtfCnmInitSyncRsp ( Pst* pst, SpId spId, CtfCfgTransId * transId, CtfCnmInitSyncRsp * ctfCnmInitSyncrsp )




  ;

extern S16 cmUnpkCnmInitSyncRsp ( CtfCnmInitSyncRspMsg func, Pst* pst, Buffer *mBuf )



  ;




extern S16 cmPkCtfKdfReq ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfKdfReqInfo * kdfReqInfo )




  ;



extern S16 cmUnpkCtfKdfReq ( CtfKdfReq func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmPkCtfkdfCfm ( Pst* pst, SuId suId, CtfCfgTransId transId, CtfKdfCfmInfo *kdfCfmInfo, U8 status )





  ;

extern S16 cmUnpkCtfKdfCfm ( CtfKdfCfm func, Pst* pst, Buffer *mBuf )



  ;


extern S16 cmPkCtfCfgReq ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfCfgReqInfo * cfgReqInfo )




  ;



extern S16 cmUnpkCtfCfgReq ( CtfCfgReq func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmPkCtfCfgCfm ( Pst* pst, SuId suId, CtfCfgTransId transId, U8 status )




  ;

extern S16 cmPkCtfEnbStopInd ( Pst* pst, SuId suId, CtfCfgTransId transId )



  ;

extern S16 cmUnpkCtfCfgCfm ( CtfCfgCfm func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmUnpkCtfEnbStopInd ( CtfEnbStopInd func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmPkCtfUeIdChgReq ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfUeInfo * ueInfo, CtfUeInfo * newUeInfo )





  ;

extern S16 cmUnpkCtfUeIdChgReq ( CtfUeIdChgReq func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmPkCtfUeIdChgCfm ( Pst* pst, SuId suId, CtfCfgTransId transId, CtfUeInfo * ueInfo, CmStatus status )





  ;

extern S16 cmUnpkCtfUeIdChgCfm ( CtfUeIdChgCfm func, Pst* pst, Buffer *mBuf )



  ;



typedef S16 (*CtfPerRemCellSrchRsp) ( Pst* pst, SpId spId, CtfCfgTransId* transId, CtfPeriodicRemCellSearchRsp* sniffCellRsp)



                                               ;

extern S16 cmUnpkPerRemCellSrchRsp ( CtfPerRemCellSrchRsp func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmUnpkCtfPerRemCellSrch ( CtfPeriodicRemCellSearchRsp *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCtfPerRemScanCellInfo ( CtfPeriodicRemCellInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkCtfPeriodicCellSearchRsp ( CtfPeriodicRemCellSearchRsp *param, Buffer *mBuf )


  ;

extern S16 cmPkCtfPeriodicRemCellSearchRsp ( Pst* pst, SpId spId, CtfCfgTransId *transId, CtfPeriodicRemCellSearchRsp *CellCfgRsp )




  ;

extern S16 cmPkPerRemScanCellInfo ( CtfPeriodicRemCellInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfCfgTransId ( CtfCfgTransId *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfCfgTransId ( CtfCfgTransId *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfUeInfo ( CtfUeInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfUeInfo ( CtfUeInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfBwCfgInfo ( CtfBwCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfBwCfgInfo ( CtfBwCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfTxSchemeCfg ( CtfTxSchemeCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfTxSchemeCfg ( CtfTxSchemeCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfAntennaCfgInfo ( CtfAntennaCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfAntennaCfgInfo ( CtfAntennaCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfPrachCfgInfo ( CtfPrachCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfPrachCfgInfo ( CtfPrachCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfPdschCfgInfo ( CtfPdschCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfPdschCfgInfo ( CtfPdschCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfPuschCfgBasic ( CtfPuschCfgBasic *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfPuschCfgBasic ( CtfPuschCfgBasic *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfPuschUlRS ( CtfPuschUlRS *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfPuschUlRS ( CtfPuschUlRS *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfPuschCfgInfo ( CtfPuschCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfPuschCfgInfo ( CtfPuschCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfPhichCfgInfo ( CtfPhichCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfPhichCfgInfo ( CtfPhichCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfPucchCfgInfo ( CtfPucchCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfPucchCfgInfo ( CtfPucchCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfSrsUlCfgInfo ( CtfSrsUlCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfSrsUlCfgInfo ( CtfSrsUlCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfTddSfCfgInfo ( CtfTddSfCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfTddSfCfgInfo ( CtfTddSfCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfCellCfgInfo ( CtfCellCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfCellCfgInfo ( CtfCellCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfCellRecfgInfo ( CtfCellRecfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfCellRecfgInfo ( CtfCellRecfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfDedPdschCfgInfo ( CtfDedPdschCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfDedPdschCfgInfo ( CtfDedPdschCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfDedPucchCfgInfo ( CtfDedPucchCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfDedPucchCfgInfo ( CtfDedPucchCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfDedPuschCfgInfo ( CtfDedPuschCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfDedPuschCfgInfo ( CtfDedPuschCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfDedAntCfgInfo ( CtfDedAntCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfDedAntCfgInfo ( CtfDedAntCfgInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkCtfUeSecCellCfgInfo ( CtfUeSecCellCfgInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkCtfSecCellCfgInfo ( CtfSecCellCfgInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCtfUeSecCellCfgInfo ( CtfUeSecCellCfgInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCtfSecCellCfgInfo ( CtfSecCellCfgInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkCtfUeCatCfgInfo ( CtfUeCatCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfUeCatCfgInfo ( CtfUeCatCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfDedCfgInfo ( CtfDedCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfDedCfgInfo ( CtfDedCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfDedRecfgInfo ( CtfDedRecfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfDedRecfgInfo ( CtfDedRecfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfCellReleaseInfo ( CtfCellReleaseInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfCellReleaseInfo ( CtfCellReleaseInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfDedReleaseInfo ( CtfDedReleaseInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfDedReleaseInfo ( CtfDedReleaseInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfCfgInfo ( CtfCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfCfgInfo ( CtfCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfReCfgInfo ( CtfReCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfReCfgInfo ( CtfReCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfReleaseInfo ( CtfReleaseInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfReleaseInfo ( CtfReleaseInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCtfCfgReqInfo ( CtfCfgReqInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCtfCfgReqInfo ( Pst *pst, CtfCfgReqInfo *param, Buffer *mBuf )



  ;


extern S16 cmPkCtfVendorSpecParams ( CtfVendorSpecific *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCtfVendorSpecParams ( Pst* pst, CtfVendorSpecific *param, Buffer *mBuf )



  ;



extern S16 cmPkCtfCellPwrcfgInfo ( CtfCellRecfgInfo *param, Buffer *mBuf )



  ;

extern S16 cmPkCtfCellStop ( CtfCellRecfgInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCtfCellPwrcfgInfo ( CtfCellRecfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCtfCellStop ( CtfCellRecfgInfo *param, Buffer *mBuf )


  ;


extern S16 cmPkCtfNhKeyInfo ( CtfNhKeyInfo *param, Buffer *mBuf )



  ;
extern S16 cmPkCtfKenbStarInfo ( CtfKenbStarInfo *param, Buffer *mBuf )



  ;
extern S16 cmPkCtfAskeyInfo ( CtfAsKeyInfo *param, Buffer *mBuf )



  ;
extern S16 cmPkCtfKdfReqInfo ( CtfKdfReqInfo *param, Buffer *mBuf )



   ;
extern S16 cmPkCtfKdfReq ( Pst* pst, SpId spId, CtfCfgTransId transId, CtfKdfReqInfo* kdfReqInfo )





  ;
extern S16 cmUnpkCtfNhKeyInfo ( CtfNhKeyInfo *param, Buffer *mBuf )



  ;
extern S16 cmUnpkCtfKenbStarInfo ( CtfKenbStarInfo *param, Buffer *mBuf )



  ;
extern S16 cmUnpkCtfAskeyInfo ( CtfAsKeyInfo *param, Buffer *mBuf )



  ;
extern S16 cmUnpkCtfKdfReqInfo ( CtfKdfReqInfo *param, Buffer *mBuf )



   ;
extern S16 cmUnpkCtfKdfReq ( CtfKdfReq func, Pst *pst, Buffer *mBuf )




  ;
extern S16 cmPkCtfNhKeyCfmInfo ( CtfNhKeyCfmInfo *param, Buffer *mBuf )



  ;
extern S16 cmPkCtfKenbStarCfmInfo ( CtfKenbStarCfmInfo *param, Buffer *mBuf )



  ;
extern S16 cmPkCtfAskeyCfmInfo ( CtfAskeyCfmInfo *param, Buffer *mBuf )



  ;
extern S16 cmPkCtfKdfCfmInfo ( CtfKdfCfmInfo *param, Buffer *mBuf )



   ;
extern S16 cmPkCtfKdfCfm ( Pst* pst, SuId suId, CtfCfgTransId transId, CtfKdfCfmInfo *kdfCfmInfo, U8 status )






  ;
extern S16 cmUnpkCtfNhKeyCfmInfo ( CtfNhKeyCfmInfo *param, Buffer *mBuf )



  ;
extern S16 cmUnpkCtfKenbStarCfmInfo ( CtfKenbStarCfmInfo *param, Buffer *mBuf )



  ;
extern S16 cmUnpkCtfAskeyCfmInfo ( CtfAskeyCfmInfo *param, Buffer *mBuf )



  ;
extern S16 cmUnpkCtfKdfCfmInfo ( CtfKdfCfmInfo *param, Buffer *mBuf )



  ;
extern S16 cmUnpkCtfKdfCfm ( CtfKdfCfm func, Pst *pst, Buffer *mBuf )




  ;



extern S16 UrUiCtfHandleSnfMsgs ( Pst* pst, Buffer* mBuf )


  ;

extern S16 cmPkCtfCnmVendorSpecificInfo ( CtfCnmVendorSpecificInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkCtfCtfCnmCellSyncReq ( CtfCnmCellSyncReq *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCtfCnmVendorSpecificInfo ( CtfCnmVendorSpecificInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCtfCtfCnmCellSyncReq ( CtfCnmCellSyncReq *param, Buffer *mBuf )


  ;

extern S16 cmPkCtfCnmCellSyncReq ( Pst* pst, SpId spId, CtfCfgTransId *transId, CtfCnmCellSyncReq * cfgReqInfo )




  ;

extern S16 cmUnpkCtfCnmCellSyncReq ( CtfCnmCellSyncReqMsg func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmPkCtfCnmInitSyncReq ( Pst* pst, SpId spId, CtfCfgTransId *transId, CtfCnmInitSyncReq * cfgReqInfo )




  ;

extern S16 cmUnpkCtfCnmInitSyncReq ( CtfCnmInitSyncReqMsg func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmPkCtfctfCnmMibInfo ( CtfCnmMibInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkCtfctfCnmInitSyncInfo ( CtfCnmInitSyncInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkCtfCnmInitSyncRsp ( Pst* pst, SpId spId, CtfCfgTransId *transId, CtfCnmInitSyncRsp * cfgRspInfo )




  ;

extern S16 cmUnpkCtfctfCnmMibInfo ( CtfCnmMibInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkctfCnmInitSyncInfo ( CtfCnmInitSyncInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCtfCnmInitSyncRspMsg ( CtfCnmInitSyncRsp *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCtfCnmInitSyncRsp ( CtfCnmInitSyncRspMsg func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmPkCtfCnmCellSyncRsp ( Pst* pst, SpId spId, CtfCfgTransId *transId, CtfCnmCellSyncRsp * cfgRspInfo )




  ;

extern S16 cmUnpkCtfCnmSyncRspMsg ( CtfCnmCellSyncRsp *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCtfCnmCellSyncRsp ( CtfCnmCellSyncRspMsg func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmPkCtfCnmCellSyncInd ( Pst* pst, SpId spId, CtfCfgTransId *transId, CtfCnmCellSyncInd * cfgIndInfo )




  ;

extern S16 cmUnpkCtfCnmSyncIndMsg ( CtfCnmCellSyncInd *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCtfCnmCellSyncInd ( CtfCnmCellSyncIndMsg func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmPkCtfcfgReqInfo ( CtfCnmInitSyncReq *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCtfsyncReqInfo ( CtfCnmInitSyncReq *param, Buffer *mBuf )


  ;

extern S16 cmPkCtfcfgRspInfo ( CtfCnmInitSyncRsp *param, Buffer *mBuf )


  ;

extern S16 cmPkCtfCellSyncRsp ( CtfCnmCellSyncRsp *param, Buffer *mBuf )


  ;

extern S16 cmPkCtfcfgIndInfo ( CtfCnmCellSyncInd *param, Buffer *mBuf )


  ;

extern S16 cmRelCtfCfgReq ( Pst *pst, CtfCfgReqInfo *cfgReqInfo )


  ;
typedef enum enumSztCriticality
{
 SztCriticalityrejectEnum,
 SztCriticalityignoreEnum,
 SztCriticalitynotifyEnum
} EnumSztCriticality;
typedef TknU32 SztCriticality;


typedef enum enumSztPresence
{
 SztPresenceoptionalEnum,
 SztPresenceconditionalEnum,
 SztPresencemandatoryEnum
} EnumSztPresence;
typedef TknU32 SztPresence;


typedef TknU32 SztPrivIE_IDlocal;

typedef struct s1apPrivIE_ID
{
 TknU8 choice;
 union {
  SztPrivIE_IDlocal local;
 } val;
} SztPrivIE_ID;


typedef TknU32 SztProcedureCode;


typedef TknU32 SztProtExtnID;


typedef TknU32 SztProtIE_ID;


typedef enum enumSztTrgMsg
{
 SztTrgMsginitiating_messageEnum,
 SztTrgMsgsuccessful_outcomeEnum,
 SztTrgMsgunsuccessfull_outcomeEnum
} EnumSztTrgMsg;
typedef TknU32 SztTrgMsg;


typedef TknStrOSXL SztTBCD_STRING;

typedef SztTBCD_STRING SztPLMNidentity;

typedef TknBStr32 SztCellIdentity;
typedef struct s1ap_ExtnEUTRAN_CGI_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnEUTRAN_CGI_ExtIEsCls;
typedef struct s1apProtExtnField_EUTRAN_CGI_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnEUTRAN_CGI_ExtIEsCls extensionValue;
} SztProtExtnField_EUTRAN_CGI_ExtIEs;

typedef struct s1apProtExtnCont_EUTRAN_CGI_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_EUTRAN_CGI_ExtIEs *member;
}SztProtExtnCont_EUTRAN_CGI_ExtIEs;

typedef struct s1apEUTRAN_CGI
{
 TknPres pres;
 SztPLMNidentity pLMNidentity;
 SztCellIdentity cell_ID;
 SztProtExtnCont_EUTRAN_CGI_ExtIEs iE_Extns;
} SztEUTRAN_CGI;

typedef struct s1apCellIdLstforMDT
{
 TknU16 noComp;
 SztEUTRAN_CGI *member;
}SztCellIdLstforMDT;

typedef struct s1ap_ExtnCellBasedMDT_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnCellBasedMDT_ExtIEsCls;
typedef struct s1apProtExtnField_CellBasedMDT_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnCellBasedMDT_ExtIEsCls extensionValue;
} SztProtExtnField_CellBasedMDT_ExtIEs;

typedef struct s1apProtExtnCont_CellBasedMDT_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_CellBasedMDT_ExtIEs *member;
}SztProtExtnCont_CellBasedMDT_ExtIEs;

typedef struct s1apCellBasedMDT
{
 TknPres pres;
 SztCellIdLstforMDT cellIdLstforMDT;
 SztProtExtnCont_CellBasedMDT_ExtIEs iE_Extns;
} SztCellBasedMDT;


typedef TknStr4 SztTAC;
typedef struct s1apTALstforMDT
{
 TknU16 noComp;
 SztTAC *member;
}SztTALstforMDT;

typedef struct s1ap_ExtnTABasedMDT_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnTABasedMDT_ExtIEsCls;
typedef struct s1apProtExtnField_TABasedMDT_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnTABasedMDT_ExtIEsCls extensionValue;
} SztProtExtnField_TABasedMDT_ExtIEs;

typedef struct s1apProtExtnCont_TABasedMDT_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_TABasedMDT_ExtIEs *member;
}SztProtExtnCont_TABasedMDT_ExtIEs;

typedef struct s1apTABasedMDT
{
 TknPres pres;
 SztTALstforMDT tALstforMDT;
 SztProtExtnCont_TABasedMDT_ExtIEs iE_Extns;
} SztTABasedMDT;

typedef struct s1ap_ExtnTAI_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnTAI_ExtIEsCls;
typedef struct s1apProtExtnField_TAI_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnTAI_ExtIEsCls extensionValue;
} SztProtExtnField_TAI_ExtIEs;

typedef struct s1apProtExtnCont_TAI_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_TAI_ExtIEs *member;
}SztProtExtnCont_TAI_ExtIEs;

typedef struct s1apTAI
{
 TknPres pres;
 SztPLMNidentity pLMNidentity;
 SztTAC tAC;
 SztProtExtnCont_TAI_ExtIEs iE_Extns;
} SztTAI;

typedef struct s1apTAILstforMDT
{
 TknU16 noComp;
 SztTAI *member;
}SztTAILstforMDT;

typedef struct s1ap_ExtnTAIBasedMDT_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnTAIBasedMDT_ExtIEsCls;
typedef struct s1apProtExtnField_TAIBasedMDT_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnTAIBasedMDT_ExtIEsCls extensionValue;
} SztProtExtnField_TAIBasedMDT_ExtIEs;

typedef struct s1apProtExtnCont_TAIBasedMDT_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_TAIBasedMDT_ExtIEs *member;
}SztProtExtnCont_TAIBasedMDT_ExtIEs;

typedef struct s1apTAIBasedMDT
{
 TknPres pres;
 SztTAILstforMDT tAILstforMDT;
 SztProtExtnCont_TAIBasedMDT_ExtIEs iE_Extns;
} SztTAIBasedMDT;

typedef struct s1apAreaScopeOfMDT
{
 TknU8 choice;
 union {
  SztCellBasedMDT cellBased;
  SztTABasedMDT tABased;
  SztTAIBasedMDT tAIBased;
 } val;
} SztAreaScopeOfMDT;


typedef TknU32 SztPriorityLvl;


typedef enum enumSztPre_emptionCapblty
{
 SztPre_emptionCapbltyshall_not_trigger_pre_emptionEnum,
 SztPre_emptionCapbltymay_trigger_pre_emptionEnum
} EnumSztPre_emptionCapblty;
typedef TknU32 SztPre_emptionCapblty;


typedef enum enumSztPre_emptionVulnerability
{
 SztPre_emptionVulnerabilitynot_pre_emptableEnum,
 SztPre_emptionVulnerabilitypre_emptableEnum
} EnumSztPre_emptionVulnerability;
typedef TknU32 SztPre_emptionVulnerability;

typedef struct s1ap_ExtnAllocnAndRetentionPriority_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnAllocnAndRetentionPriority_ExtIEsCls;
typedef struct s1apProtExtnField_AllocnAndRetentionPriority_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnAllocnAndRetentionPriority_ExtIEsCls extensionValue;
} SztProtExtnField_AllocnAndRetentionPriority_ExtIEs;

typedef struct s1apProtExtnCont_AllocnAndRetentionPriority_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_AllocnAndRetentionPriority_ExtIEs *member;
}SztProtExtnCont_AllocnAndRetentionPriority_ExtIEs;

typedef struct s1apAllocnAndRetentionPriority
{
 TknPres pres;
 SztPriorityLvl priorityLvl;
 SztPre_emptionCapblty pre_emptionCapblty;
 SztPre_emptionVulnerability pre_emptionVulnerability;
 SztProtExtnCont_AllocnAndRetentionPriority_ExtIEs iE_Extns;
} SztAllocnAndRetentionPriority;


typedef TknU32 SztE_RAB_ID;


typedef TknU32 SztPDCP_SN;


typedef TknU32 SztHFN;

typedef struct s1ap_ExtnCOUNTvalue_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnCOUNTvalue_ExtIEsCls;
typedef struct s1apProtExtnField_COUNTvalue_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnCOUNTvalue_ExtIEsCls extensionValue;
} SztProtExtnField_COUNTvalue_ExtIEs;

typedef struct s1apProtExtnCont_COUNTvalue_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_COUNTvalue_ExtIEs *member;
}SztProtExtnCont_COUNTvalue_ExtIEs;

typedef struct s1apCOUNTvalue
{
 TknPres pres;
 SztPDCP_SN pDCP_SN;
 SztHFN hFN;
 SztProtExtnCont_COUNTvalue_ExtIEs iE_Extns;
} SztCOUNTvalue;


typedef TknStrBSXL SztReceiveStatusofULPDCPSDUs;

typedef TknU32 SztPDCP_SNExtended;


typedef TknU32 SztHFNMdfd;

typedef struct s1ap_ExtnCOUNTValueExtended_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnCOUNTValueExtended_ExtIEsCls;
typedef struct s1apProtExtnField_COUNTValueExtended_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnCOUNTValueExtended_ExtIEsCls extensionValue;
} SztProtExtnField_COUNTValueExtended_ExtIEs;

typedef struct s1apProtExtnCont_COUNTValueExtended_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_COUNTValueExtended_ExtIEs *member;
}SztProtExtnCont_COUNTValueExtended_ExtIEs;

typedef struct s1apCOUNTValueExtended
{
 TknPres pres;
 SztPDCP_SNExtended pDCP_SNExtended;
 SztHFNMdfd hFNMdfd;
 SztProtExtnCont_COUNTValueExtended_ExtIEs iE_Extns;
} SztCOUNTValueExtended;


typedef TknStrBSXL SztReceiveStatusOfULPDCPSDUsExtended;
typedef struct s1ap_ExtnBrs_SubjToStatusTfr_ItemExtIEsCls{
 union {
  SztCOUNTValueExtended sztid_ULCOUNTValueExtended;
  SztCOUNTValueExtended sztid_DLCOUNTValueExtended;
  SztReceiveStatusOfULPDCPSDUsExtended sztReceiveStatusOfULPDCPSDUsExtended;
 } u;
} Szt_ExtnBrs_SubjToStatusTfr_ItemExtIEsCls;
typedef struct s1apProtExtnField_Brs_SubjToStatusTfr_ItemExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnBrs_SubjToStatusTfr_ItemExtIEsCls extensionValue;
} SztProtExtnField_Brs_SubjToStatusTfr_ItemExtIEs;

typedef struct s1apProtExtnCont_Brs_SubjToStatusTfr_ItemExtIEs
{
 TknU16 noComp;
 SztProtExtnField_Brs_SubjToStatusTfr_ItemExtIEs *member;
}SztProtExtnCont_Brs_SubjToStatusTfr_ItemExtIEs;

typedef struct s1apBrs_SubjToStatusTfr_Item
{
 TknPres pres;
 SztE_RAB_ID e_RAB_ID;
 SztCOUNTvalue uL_COUNTvalue;
 SztCOUNTvalue dL_COUNTvalue;
 SztReceiveStatusofULPDCPSDUs receiveStatusofULPDCPSDUs;
 SztProtExtnCont_Brs_SubjToStatusTfr_ItemExtIEs iE_Extns;
} SztBrs_SubjToStatusTfr_Item;

typedef struct s1ap_ValueBrs_SubjToStatusTfr_ItemIEsCls{
 union {
  SztBrs_SubjToStatusTfr_Item sztBrs_SubjToStatusTfr_Item;
 } u;
} Szt_ValueBrs_SubjToStatusTfr_ItemIEsCls;
typedef struct s1apProtIE_Field_Brs_SubjToStatusTfr_ItemIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueBrs_SubjToStatusTfr_ItemIEsCls value;
} SztProtIE_Field_Brs_SubjToStatusTfr_ItemIEs;


typedef SztProtIE_Field_Brs_SubjToStatusTfr_ItemIEs SztProtIE_SingleCont_Brs_SubjToStatusTfr_ItemIEs;
typedef struct s1apBrs_SubjToStatusTfrLst
{
 TknU16 noComp;
 SztProtIE_SingleCont_Brs_SubjToStatusTfr_ItemIEs *member;
}SztBrs_SubjToStatusTfrLst;


typedef TknStrOSXL SztBitRate;

typedef struct s1apBPLMNs
{
 TknU16 noComp;
 SztPLMNidentity *member;
}SztBPLMNs;


typedef TknU32 SztNumberOfBroadcasts;

typedef struct s1ap_ExtnCellID_Cancelled_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnCellID_Cancelled_Item_ExtIEsCls;
typedef struct s1apProtExtnField_CellID_Cancelled_Item_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnCellID_Cancelled_Item_ExtIEsCls extensionValue;
} SztProtExtnField_CellID_Cancelled_Item_ExtIEs;

typedef struct s1apProtExtnCont_CellID_Cancelled_Item_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_CellID_Cancelled_Item_ExtIEs *member;
}SztProtExtnCont_CellID_Cancelled_Item_ExtIEs;

typedef struct s1apCellID_Cancelled_Item
{
 TknPres pres;
 SztEUTRAN_CGI eCGI;
 SztNumberOfBroadcasts numberOfBroadcasts;
 SztProtExtnCont_CellID_Cancelled_Item_ExtIEs iE_Extns;
} SztCellID_Cancelled_Item;

typedef struct s1apCellID_Cancelled
{
 TknU16 noComp;
 SztCellID_Cancelled_Item *member;
}SztCellID_Cancelled;

typedef struct s1ap_ExtnCancelledCellinTAI_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnCancelledCellinTAI_Item_ExtIEsCls;
typedef struct s1apProtExtnField_CancelledCellinTAI_Item_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnCancelledCellinTAI_Item_ExtIEsCls extensionValue;
} SztProtExtnField_CancelledCellinTAI_Item_ExtIEs;

typedef struct s1apProtExtnCont_CancelledCellinTAI_Item_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_CancelledCellinTAI_Item_ExtIEs *member;
}SztProtExtnCont_CancelledCellinTAI_Item_ExtIEs;

typedef struct s1apCancelledCellinTAI_Item
{
 TknPres pres;
 SztEUTRAN_CGI eCGI;
 SztNumberOfBroadcasts numberOfBroadcasts;
 SztProtExtnCont_CancelledCellinTAI_Item_ExtIEs iE_Extns;
} SztCancelledCellinTAI_Item;

typedef struct s1apCancelledCellinTAI
{
 TknU16 noComp;
 SztCancelledCellinTAI_Item *member;
}SztCancelledCellinTAI;

typedef struct s1ap_ExtnTAI_Cancelled_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnTAI_Cancelled_Item_ExtIEsCls;
typedef struct s1apProtExtnField_TAI_Cancelled_Item_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnTAI_Cancelled_Item_ExtIEsCls extensionValue;
} SztProtExtnField_TAI_Cancelled_Item_ExtIEs;

typedef struct s1apProtExtnCont_TAI_Cancelled_Item_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_TAI_Cancelled_Item_ExtIEs *member;
}SztProtExtnCont_TAI_Cancelled_Item_ExtIEs;

typedef struct s1apTAI_Cancelled_Item
{
 TknPres pres;
 SztTAI tAI;
 SztCancelledCellinTAI cancelledCellinTAI;
 SztProtExtnCont_TAI_Cancelled_Item_ExtIEs iE_Extns;
} SztTAI_Cancelled_Item;

typedef struct s1apTAI_Cancelled
{
 TknU16 noComp;
 SztTAI_Cancelled_Item *member;
}SztTAI_Cancelled;


typedef TknStrOSXL SztEmergencyAreaID;
typedef struct s1ap_ExtnCancelledCellinEAI_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnCancelledCellinEAI_Item_ExtIEsCls;
typedef struct s1apProtExtnField_CancelledCellinEAI_Item_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnCancelledCellinEAI_Item_ExtIEsCls extensionValue;
} SztProtExtnField_CancelledCellinEAI_Item_ExtIEs;

typedef struct s1apProtExtnCont_CancelledCellinEAI_Item_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_CancelledCellinEAI_Item_ExtIEs *member;
}SztProtExtnCont_CancelledCellinEAI_Item_ExtIEs;

typedef struct s1apCancelledCellinEAI_Item
{
 TknPres pres;
 SztEUTRAN_CGI eCGI;
 SztNumberOfBroadcasts numberOfBroadcasts;
 SztProtExtnCont_CancelledCellinEAI_Item_ExtIEs iE_Extns;
} SztCancelledCellinEAI_Item;

typedef struct s1apCancelledCellinEAI
{
 TknU16 noComp;
 SztCancelledCellinEAI_Item *member;
}SztCancelledCellinEAI;

typedef struct s1ap_ExtnEmergencyAreaID_Cancelled_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnEmergencyAreaID_Cancelled_Item_ExtIEsCls;
typedef struct s1apProtExtnField_EmergencyAreaID_Cancelled_Item_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnEmergencyAreaID_Cancelled_Item_ExtIEsCls extensionValue;
} SztProtExtnField_EmergencyAreaID_Cancelled_Item_ExtIEs;

typedef struct s1apProtExtnCont_EmergencyAreaID_Cancelled_Item_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_EmergencyAreaID_Cancelled_Item_ExtIEs *member;
}SztProtExtnCont_EmergencyAreaID_Cancelled_Item_ExtIEs;

typedef struct s1apEmergencyAreaID_Cancelled_Item
{
 TknPres pres;
 SztEmergencyAreaID emergencyAreaID;
 SztCancelledCellinEAI cancelledCellinEAI;
 SztProtExtnCont_EmergencyAreaID_Cancelled_Item_ExtIEs iE_Extns;
} SztEmergencyAreaID_Cancelled_Item;

typedef struct s1apEmergencyAreaID_Cancelled
{
 TknU16 noComp;
 SztEmergencyAreaID_Cancelled_Item *member;
}SztEmergencyAreaID_Cancelled;

typedef struct s1apBroadcastCancelledAreaLst
{
 TknU8 choice;
 union {
  SztCellID_Cancelled cellID_Cancelled;
  SztTAI_Cancelled tAI_Cancelled;
  SztEmergencyAreaID_Cancelled emergencyAreaID_Cancelled;
 } val;
} SztBroadcastCancelledAreaLst;

typedef struct s1ap_ExtnCellID_Broadcast_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnCellID_Broadcast_Item_ExtIEsCls;
typedef struct s1apProtExtnField_CellID_Broadcast_Item_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnCellID_Broadcast_Item_ExtIEsCls extensionValue;
} SztProtExtnField_CellID_Broadcast_Item_ExtIEs;

typedef struct s1apProtExtnCont_CellID_Broadcast_Item_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_CellID_Broadcast_Item_ExtIEs *member;
}SztProtExtnCont_CellID_Broadcast_Item_ExtIEs;

typedef struct s1apCellID_Broadcast_Item
{
 TknPres pres;
 SztEUTRAN_CGI eCGI;
 SztProtExtnCont_CellID_Broadcast_Item_ExtIEs iE_Extns;
} SztCellID_Broadcast_Item;

typedef struct s1apCellID_Broadcast
{
 TknU16 noComp;
 SztCellID_Broadcast_Item *member;
}SztCellID_Broadcast;

typedef struct s1ap_ExtnCompletedCellinTAI_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnCompletedCellinTAI_Item_ExtIEsCls;
typedef struct s1apProtExtnField_CompletedCellinTAI_Item_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnCompletedCellinTAI_Item_ExtIEsCls extensionValue;
} SztProtExtnField_CompletedCellinTAI_Item_ExtIEs;

typedef struct s1apProtExtnCont_CompletedCellinTAI_Item_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_CompletedCellinTAI_Item_ExtIEs *member;
}SztProtExtnCont_CompletedCellinTAI_Item_ExtIEs;

typedef struct s1apCompletedCellinTAI_Item
{
 TknPres pres;
 SztEUTRAN_CGI eCGI;
 SztProtExtnCont_CompletedCellinTAI_Item_ExtIEs iE_Extns;
} SztCompletedCellinTAI_Item;

typedef struct s1apCompletedCellinTAI
{
 TknU16 noComp;
 SztCompletedCellinTAI_Item *member;
}SztCompletedCellinTAI;

typedef struct s1ap_ExtnTAI_Broadcast_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnTAI_Broadcast_Item_ExtIEsCls;
typedef struct s1apProtExtnField_TAI_Broadcast_Item_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnTAI_Broadcast_Item_ExtIEsCls extensionValue;
} SztProtExtnField_TAI_Broadcast_Item_ExtIEs;

typedef struct s1apProtExtnCont_TAI_Broadcast_Item_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_TAI_Broadcast_Item_ExtIEs *member;
}SztProtExtnCont_TAI_Broadcast_Item_ExtIEs;

typedef struct s1apTAI_Broadcast_Item
{
 TknPres pres;
 SztTAI tAI;
 SztCompletedCellinTAI completedCellinTAI;
 SztProtExtnCont_TAI_Broadcast_Item_ExtIEs iE_Extns;
} SztTAI_Broadcast_Item;

typedef struct s1apTAI_Broadcast
{
 TknU16 noComp;
 SztTAI_Broadcast_Item *member;
}SztTAI_Broadcast;

typedef struct s1ap_ExtnCompletedCellinEAI_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnCompletedCellinEAI_Item_ExtIEsCls;
typedef struct s1apProtExtnField_CompletedCellinEAI_Item_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnCompletedCellinEAI_Item_ExtIEsCls extensionValue;
} SztProtExtnField_CompletedCellinEAI_Item_ExtIEs;

typedef struct s1apProtExtnCont_CompletedCellinEAI_Item_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_CompletedCellinEAI_Item_ExtIEs *member;
}SztProtExtnCont_CompletedCellinEAI_Item_ExtIEs;

typedef struct s1apCompletedCellinEAI_Item
{
 TknPres pres;
 SztEUTRAN_CGI eCGI;
 SztProtExtnCont_CompletedCellinEAI_Item_ExtIEs iE_Extns;
} SztCompletedCellinEAI_Item;

typedef struct s1apCompletedCellinEAI
{
 TknU16 noComp;
 SztCompletedCellinEAI_Item *member;
}SztCompletedCellinEAI;

typedef struct s1ap_ExtnEmergencyAreaID_Broadcast_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnEmergencyAreaID_Broadcast_Item_ExtIEsCls;
typedef struct s1apProtExtnField_EmergencyAreaID_Broadcast_Item_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnEmergencyAreaID_Broadcast_Item_ExtIEsCls extensionValue;
} SztProtExtnField_EmergencyAreaID_Broadcast_Item_ExtIEs;

typedef struct s1apProtExtnCont_EmergencyAreaID_Broadcast_Item_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_EmergencyAreaID_Broadcast_Item_ExtIEs *member;
}SztProtExtnCont_EmergencyAreaID_Broadcast_Item_ExtIEs;

typedef struct s1apEmergencyAreaID_Broadcast_Item
{
 TknPres pres;
 SztEmergencyAreaID emergencyAreaID;
 SztCompletedCellinEAI completedCellinEAI;
 SztProtExtnCont_EmergencyAreaID_Broadcast_Item_ExtIEs iE_Extns;
} SztEmergencyAreaID_Broadcast_Item;

typedef struct s1apEmergencyAreaID_Broadcast
{
 TknU16 noComp;
 SztEmergencyAreaID_Broadcast_Item *member;
}SztEmergencyAreaID_Broadcast;

typedef struct s1apBroadcastCompletedAreaLst
{
 TknU8 choice;
 union {
  SztCellID_Broadcast cellID_Broadcast;
  SztTAI_Broadcast tAI_Broadcast;
  SztEmergencyAreaID_Broadcast emergencyAreaID_Broadcast;
 } val;
} SztBroadcastCompletedAreaLst;


typedef enum enumSztCauseRadioNw
{
 SztCauseRadioNwunspecifiedEnum,
 SztCauseRadioNwtx2relocoverall_expiryEnum,
 SztCauseRadioNwsuccessful_handoverEnum,
 SztCauseRadioNwrelease_due_to_eutran_generated_reasonEnum,
 SztCauseRadioNwhandover_cancelledEnum,
 SztCauseRadioNwpartial_handoverEnum,
 SztCauseRadioNwho_failure_in_target_EPC_eNB_or_target_systemEnum,
 SztCauseRadioNwho_target_not_allowedEnum,
 SztCauseRadioNwtS1relocoverall_expiryEnum,
 SztCauseRadioNwtS1relocprep_expiryEnum,
 SztCauseRadioNwcell_not_availableEnum,
 SztCauseRadioNwunknown_targetIDEnum,
 SztCauseRadioNwno_radio_resources_available_in_target_cellEnum,
 SztCauseRadioNwunknown_mme_ue_s1ap_idEnum,
 SztCauseRadioNwunknown_enb_ue_s1ap_idEnum,
 SztCauseRadioNwunknown_pair_ue_s1ap_idEnum,
 SztCauseRadioNwhandover_desirable_for_radio_reasonEnum,
 SztCauseRadioNwtime_critical_handoverEnum,
 SztCauseRadioNwresource_optimisation_handoverEnum,
 SztCauseRadioNwreduce_load_in_serving_cellEnum,
 SztCauseRadioNwuser_inactivityEnum,
 SztCauseRadioNwradio_connection_with_ue_lostEnum,
 SztCauseRadioNwload_balancing_tau_requiredEnum,
 SztCauseRadioNwcs_fallback_triggeredEnum,
 SztCauseRadioNwue_not_available_for_ps_serviceEnum,
 SztCauseRadioNwradio_resources_not_availableEnum,
 SztCauseRadioNwfailure_in_radio_interface_procedureEnum,
 SztCauseRadioNwinvalid_qos_combinationEnum,
 SztCauseRadioNwinterrat_redirectionEnum,
 SztCauseRadioNwinteraction_with_other_procedureEnum,
 SztCauseRadioNwunknown_E_RAB_IDEnum,
 SztCauseRadioNwmultiple_E_RAB_ID_instancesEnum,
 SztCauseRadioNwencryption_and_or_integrity_protection_algorithms_not_supportedEnum,
 SztCauseRadioNws1_intra_system_handover_triggeredEnum,
 SztCauseRadioNws1_inter_system_handover_triggeredEnum,
 SztCauseRadioNwx2_handover_triggeredEnum,
 SztCauseRadioNwredirection_towards_1xRTTEnum,
 SztCauseRadioNwnot_supported_QCI_valueEnum,
 SztCauseRadioNwinvalid_CSG_IdEnum
} EnumSztCauseRadioNw;
typedef TknU32 SztCauseRadioNw;


typedef enum enumSztCauseTport
{
 SztCauseTporttransport_resource_unavailableEnum,
 SztCauseTportunspecifiedEnum
} EnumSztCauseTport;
typedef TknU32 SztCauseTport;


typedef enum enumSztCauseNas
{
 SztCauseNasnormal_releaseEnum,
 SztCauseNasauthentication_failureEnum,
 SztCauseNasdetachEnum,
 SztCauseNasunspecifiedEnum,
 SztCauseNascsg_subscription_expiryEnum
} EnumSztCauseNas;
typedef TknU32 SztCauseNas;


typedef enum enumSztCauseProt
{
 SztCauseProttransfer_syntax_errorEnum,
 SztCauseProtabstract_syntax_error_rejectEnum,
 SztCauseProtabstract_syntax_error_ignore_and_notifyEnum,
 SztCauseProtmessage_not_compatible_with_receiver_stateEnum,
 SztCauseProtsemantic_errorEnum,
 SztCauseProtabstract_syntax_error_falsely_constructed_messageEnum,
 SztCauseProtunspecifiedEnum
} EnumSztCauseProt;
typedef TknU32 SztCauseProt;


typedef enum enumSztCauseMisc
{
 SztCauseMisccontrol_processing_overloadEnum,
 SztCauseMiscnot_enough_user_plane_processing_resourcesEnum,
 SztCauseMischardware_failureEnum,
 SztCauseMiscom_interventionEnum,
 SztCauseMiscunspecifiedEnum,
 SztCauseMiscunknown_PLMNEnum
} EnumSztCauseMisc;
typedef TknU32 SztCauseMisc;

typedef struct s1apCause
{
 TknU8 choice;
 union {
  SztCauseRadioNw radioNw;
  SztCauseTport transport;
  SztCauseNas nas;
  SztCauseProt protocol;
  SztCauseMisc misc;
 } val;
} SztCause;


typedef enum enumSztCellAccessMode
{
 SztCellAccessModehybridEnum
} EnumSztCellAccessMode;
typedef TknU32 SztCellAccessMode;


typedef TknStrOSXL SztCdma2000PDU;

typedef enum enumSztCdma2000RATTyp
{
 SztCdma2000RATTyphRPDEnum,
 SztCdma2000RATTyponexRTTEnum
} EnumSztCdma2000RATTyp;
typedef TknU32 SztCdma2000RATTyp;


typedef TknStrOSXL SztCdma2000SectorID;

typedef enum enumSztCdma2000HOStatus
{
 SztCdma2000HOStatushOSuccessEnum,
 SztCdma2000HOStatushOFailEnum
} EnumSztCdma2000HOStatus;
typedef TknU32 SztCdma2000HOStatus;


typedef enum enumSztCdma2000HOReqdInd
{
 SztCdma2000HOReqdIndtrueEnum
} EnumSztCdma2000HOReqdInd;
typedef TknU32 SztCdma2000HOReqdInd;


typedef TknStrOSXL SztCdma2000OneXMEID;

typedef TknStrOSXL SztCdma2000OneXMSI;

typedef TknStrOSXL SztCdma2000OneXPilot;
typedef struct s1ap_ExtnCdma2000OneXSRVCCInfo_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnCdma2000OneXSRVCCInfo_ExtIEsCls;
typedef struct s1apProtExtnField_Cdma2000OneXSRVCCInfo_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnCdma2000OneXSRVCCInfo_ExtIEsCls extensionValue;
} SztProtExtnField_Cdma2000OneXSRVCCInfo_ExtIEs;

typedef struct s1apProtExtnCont_Cdma2000OneXSRVCCInfo_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_Cdma2000OneXSRVCCInfo_ExtIEs *member;
}SztProtExtnCont_Cdma2000OneXSRVCCInfo_ExtIEs;

typedef struct s1apCdma2000OneXSRVCCInfo
{
 TknPres pres;
 SztCdma2000OneXMEID cdma2000OneXMEID;
 SztCdma2000OneXMSI cdma2000OneXMSI;
 SztCdma2000OneXPilot cdma2000OneXPilot;
 SztProtExtnCont_Cdma2000OneXSRVCCInfo_ExtIEs iE_Extns;
} SztCdma2000OneXSRVCCInfo;


typedef TknStrOSXL SztCdma2000OneXRAND;

typedef enum enumSztCell_Size
{
 SztCell_SizeverysmallEnum,
 SztCell_SizesmallEnum,
 SztCell_SizemediumEnum,
 SztCell_SizelargeEnum
} EnumSztCell_Size;
typedef TknU32 SztCell_Size;

typedef struct s1ap_ExtnCellTyp_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnCellTyp_ExtIEsCls;
typedef struct s1apProtExtnField_CellTyp_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnCellTyp_ExtIEsCls extensionValue;
} SztProtExtnField_CellTyp_ExtIEs;

typedef struct s1apProtExtnCont_CellTyp_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_CellTyp_ExtIEs *member;
}SztProtExtnCont_CellTyp_ExtIEs;

typedef struct s1apCellTyp
{
 TknPres pres;
 SztCell_Size cell_Size;
 SztProtExtnCont_CellTyp_ExtIEs iE_Extns;
} SztCellTyp;


typedef TknStr4 SztLAC;

typedef TknStr4 SztCI;

typedef TknStr4 SztRAC;
typedef struct s1ap_ExtnCGI_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnCGI_ExtIEsCls;
typedef struct s1apProtExtnField_CGI_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnCGI_ExtIEsCls extensionValue;
} SztProtExtnField_CGI_ExtIEs;

typedef struct s1apProtExtnCont_CGI_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_CGI_ExtIEs *member;
}SztProtExtnCont_CGI_ExtIEs;

typedef struct s1apCGI
{
 TknPres pres;
 SztPLMNidentity pLMNidentity;
 SztLAC lAC;
 SztCI cI;
 SztRAC rAC;
 SztProtExtnCont_CGI_ExtIEs iE_Extns;
} SztCGI;


typedef enum enumSztCNDomain
{
 SztCNDomainpsEnum,
 SztCNDomaincsEnum
} EnumSztCNDomain;
typedef TknU32 SztCNDomain;


typedef enum enumSztConcurrentWarningMsgIndicator
{
 SztConcurrentWarningMsgIndicatortrueEnum
} EnumSztConcurrentWarningMsgIndicator;
typedef TknU32 SztConcurrentWarningMsgIndicator;


typedef TknStrOSXL SztCorrelation_ID;

typedef enum enumSztCSFallbackIndicator
{
 SztCSFallbackIndicatorcs_fallback_requiredEnum,
 SztCSFallbackIndicatorcs_fallback_high_priorityEnum
} EnumSztCSFallbackIndicator;
typedef TknU32 SztCSFallbackIndicator;


typedef TknBStr32 SztCSG_Id;
typedef struct s1ap_ExtnCSG_IdLst_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnCSG_IdLst_Item_ExtIEsCls;
typedef struct s1apProtExtnField_CSG_IdLst_Item_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnCSG_IdLst_Item_ExtIEsCls extensionValue;
} SztProtExtnField_CSG_IdLst_Item_ExtIEs;

typedef struct s1apProtExtnCont_CSG_IdLst_Item_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_CSG_IdLst_Item_ExtIEs *member;
}SztProtExtnCont_CSG_IdLst_Item_ExtIEs;

typedef struct s1apCSG_IdLst_Item
{
 TknPres pres;
 SztCSG_Id cSG_Id;
 SztProtExtnCont_CSG_IdLst_Item_ExtIEs iE_Extns;
} SztCSG_IdLst_Item;

typedef struct s1apCSG_IdLst
{
 TknU16 noComp;
 SztCSG_IdLst_Item *member;
}SztCSG_IdLst;


typedef enum enumSztCSGMembershipStatus
{
 SztCSGMembershipStatusmemberEnum,
 SztCSGMembershipStatusnot_memberEnum
} EnumSztCSGMembershipStatus;
typedef TknU32 SztCSGMembershipStatus;


typedef enum enumSztTypOfErr
{
 SztTypOfErrnot_understoodEnum,
 SztTypOfErrmissingEnum
} EnumSztTypOfErr;
typedef TknU32 SztTypOfErr;

typedef struct s1ap_ExtnCriticalityDiag_IE_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnCriticalityDiag_IE_Item_ExtIEsCls;
typedef struct s1apProtExtnField_CriticalityDiag_IE_Item_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnCriticalityDiag_IE_Item_ExtIEsCls extensionValue;
} SztProtExtnField_CriticalityDiag_IE_Item_ExtIEs;

typedef struct s1apProtExtnCont_CriticalityDiag_IE_Item_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_CriticalityDiag_IE_Item_ExtIEs *member;
}SztProtExtnCont_CriticalityDiag_IE_Item_ExtIEs;

typedef struct s1apCriticalityDiag_IE_Item
{
 TknPres pres;
 SztCriticality iECriticality;
 SztProtIE_ID iE_ID;
 SztTypOfErr typeOfErr;
 SztProtExtnCont_CriticalityDiag_IE_Item_ExtIEs iE_Extns;
} SztCriticalityDiag_IE_Item;

typedef struct s1apCriticalityDiag_IE_Lst
{
 TknU16 noComp;
 SztCriticalityDiag_IE_Item *member;
}SztCriticalityDiag_IE_Lst;

typedef struct s1ap_ExtnCriticalityDiag_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnCriticalityDiag_ExtIEsCls;
typedef struct s1apProtExtnField_CriticalityDiag_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnCriticalityDiag_ExtIEsCls extensionValue;
} SztProtExtnField_CriticalityDiag_ExtIEs;

typedef struct s1apProtExtnCont_CriticalityDiag_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_CriticalityDiag_ExtIEs *member;
}SztProtExtnCont_CriticalityDiag_ExtIEs;

typedef struct s1apCriticalityDiag
{
 TknPres pres;
 SztProcedureCode procedureCode;
 SztTrgMsg triggeringMsg;
 SztCriticality procedureCriticality;
 SztCriticalityDiag_IE_Lst iEsCriticalityDiag;
 SztProtExtnCont_CriticalityDiag_ExtIEs iE_Extns;
} SztCriticalityDiag;


typedef TknBStr32 SztDataCodingScheme;

typedef enum enumSztDL_Fwding
{
 SztDL_FwdingdL_Fwding_proposedEnum
} EnumSztDL_Fwding;
typedef TknU32 SztDL_Fwding;


typedef enum enumSztDirect_Fwding_Path_Avlblty
{
 SztDirect_Fwding_Path_AvlbltydirectPathAvailableEnum
} EnumSztDirect_Fwding_Path_Avlblty;
typedef TknU32 SztDirect_Fwding_Path_Avlblty;


typedef enum enumSztData_Fwding_Not_Possible
{
 SztData_Fwding_Not_Possibledata_Fwding_not_PossibleEnum
} EnumSztData_Fwding_Not_Possible;
typedef TknU32 SztData_Fwding_Not_Possible;

typedef struct s1apECGILst
{
 TknU16 noComp;
 SztEUTRAN_CGI *member;
}SztECGILst;

typedef struct s1apEmergencyAreaIDLst
{
 TknU16 noComp;
 SztEmergencyAreaID *member;
}SztEmergencyAreaIDLst;


typedef TknBStr32 SztENB_IDmacroENB_ID;

typedef TknBStr32 SztENB_IDhomeENB_ID;
typedef struct s1apENB_ID
{
 TknU8 choice;
 union {
  SztENB_IDmacroENB_ID macroENB_ID;
  SztENB_IDhomeENB_ID homeENB_ID;
 } val;
} SztENB_ID;

typedef struct s1ap_ExtnLAI_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnLAI_ExtIEsCls;
typedef struct s1apProtExtnField_LAI_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnLAI_ExtIEsCls extensionValue;
} SztProtExtnField_LAI_ExtIEs;

typedef struct s1apProtExtnCont_LAI_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_LAI_ExtIEs *member;
}SztProtExtnCont_LAI_ExtIEs;

typedef struct s1apLAI
{
 TknPres pres;
 SztPLMNidentity pLMNidentity;
 SztLAC lAC;
 SztProtExtnCont_LAI_ExtIEs iE_Extns;
} SztLAI;

typedef struct s1ap_ExtnGERAN_Cell_ID_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnGERAN_Cell_ID_ExtIEsCls;
typedef struct s1apProtExtnField_GERAN_Cell_ID_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnGERAN_Cell_ID_ExtIEsCls extensionValue;
} SztProtExtnField_GERAN_Cell_ID_ExtIEs;

typedef struct s1apProtExtnCont_GERAN_Cell_ID_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_GERAN_Cell_ID_ExtIEs *member;
}SztProtExtnCont_GERAN_Cell_ID_ExtIEs;

typedef struct s1apGERAN_Cell_ID
{
 TknPres pres;
 SztLAI lAI;
 SztRAC rAC;
 SztCI cI;
 SztProtExtnCont_GERAN_Cell_ID_ExtIEs iE_Extns;
} SztGERAN_Cell_ID;

typedef struct s1ap_ExtnGlobalENB_ID_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnGlobalENB_ID_ExtIEsCls;
typedef struct s1apProtExtnField_GlobalENB_ID_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnGlobalENB_ID_ExtIEsCls extensionValue;
} SztProtExtnField_GlobalENB_ID_ExtIEs;

typedef struct s1apProtExtnCont_GlobalENB_ID_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_GlobalENB_ID_ExtIEs *member;
}SztProtExtnCont_GlobalENB_ID_ExtIEs;

typedef struct s1apGlobal_ENB_ID
{
 TknPres pres;
 SztPLMNidentity pLMNidentity;
 SztENB_ID eNB_ID;
 SztProtExtnCont_GlobalENB_ID_ExtIEs iE_Extns;
} SztGlobal_ENB_ID;


typedef TknStr4 SztMME_Group_ID;

typedef TknStr4 SztMME_Code;
typedef struct s1ap_ExtnGUMMEI_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnGUMMEI_ExtIEsCls;
typedef struct s1apProtExtnField_GUMMEI_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnGUMMEI_ExtIEsCls extensionValue;
} SztProtExtnField_GUMMEI_ExtIEs;

typedef struct s1apProtExtnCont_GUMMEI_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_GUMMEI_ExtIEs *member;
}SztProtExtnCont_GUMMEI_ExtIEs;

typedef struct s1apGUMMEI
{
 TknPres pres;
 SztPLMNidentity pLMN_Identity;
 SztMME_Group_ID mME_Group_ID;
 SztMME_Code mME_Code;
 SztProtExtnCont_GUMMEI_ExtIEs iE_Extns;
} SztGUMMEI;

typedef struct s1apGUMMEILst
{
 TknU16 noComp;
 SztGUMMEI *member;
}SztGUMMEILst;

typedef struct s1ap_ExtnENB_StatusTfr_TprntCont_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnENB_StatusTfr_TprntCont_ExtIEsCls;
typedef struct s1apProtExtnField_ENB_StatusTfr_TprntCont_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnENB_StatusTfr_TprntCont_ExtIEsCls extensionValue;
} SztProtExtnField_ENB_StatusTfr_TprntCont_ExtIEs;

typedef struct s1apProtExtnCont_ENB_StatusTfr_TprntCont_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_ENB_StatusTfr_TprntCont_ExtIEs *member;
}SztProtExtnCont_ENB_StatusTfr_TprntCont_ExtIEs;

typedef struct s1apENB_StatusTfr_TprntCont
{
 TknPres pres;
 SztBrs_SubjToStatusTfrLst bearers_SubjToStatusTfrLst;
 SztProtExtnCont_ENB_StatusTfr_TprntCont_ExtIEs iE_Extns;
} SztENB_StatusTfr_TprntCont;


typedef TknU32 SztENB_UE_S1AP_ID;


typedef TknStrOSXL SztENBname;

typedef TknStrBSXL SztTportLyrAddr;
typedef struct s1apENBX2TLAs
{
 TknU16 noComp;
 SztTportLyrAddr *member;
}SztENBX2TLAs;


typedef TknBStr32 SztEncryptionAlgorithms;
typedef struct s1apEPLMNs
{
 TknU16 noComp;
 SztPLMNidentity *member;
}SztEPLMNs;


typedef enum enumSztEventTyp
{
 SztEventTypdirectEnum,
 SztEventTypchange_of_serve_cellEnum,
 SztEventTypstop_change_of_serve_cellEnum
} EnumSztEventTyp;
typedef TknU32 SztEventTyp;

typedef struct s1ap_ExtnE_RABInformLstItem_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnE_RABInformLstItem_ExtIEsCls;
typedef struct s1apProtExtnField_E_RABInformLstItem_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnE_RABInformLstItem_ExtIEsCls extensionValue;
} SztProtExtnField_E_RABInformLstItem_ExtIEs;

typedef struct s1apProtExtnCont_E_RABInformLstItem_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_E_RABInformLstItem_ExtIEs *member;
}SztProtExtnCont_E_RABInformLstItem_ExtIEs;

typedef struct s1apE_RABInformLstItem
{
 TknPres pres;
 SztE_RAB_ID e_RAB_ID;
 SztDL_Fwding dL_Fwding;
 SztProtExtnCont_E_RABInformLstItem_ExtIEs iE_Extns;
} SztE_RABInformLstItem;

typedef struct s1ap_ValueE_RABInformLstIEsCls{
 union {
  SztE_RABInformLstItem sztE_RABInformLstItem;
 } u;
} Szt_ValueE_RABInformLstIEsCls;
typedef struct s1apProtIE_Field_E_RABInformLstIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABInformLstIEsCls value;
} SztProtIE_Field_E_RABInformLstIEs;


typedef SztProtIE_Field_E_RABInformLstIEs SztProtIE_SingleCont_E_RABInformLstIEs;
typedef struct s1apE_RABInformLst
{
 TknU16 noComp;
 SztProtIE_SingleCont_E_RABInformLstIEs *member;
}SztE_RABInformLst;

typedef struct s1ap_ExtnE_RABItem_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnE_RABItem_ExtIEsCls;
typedef struct s1apProtExtnField_E_RABItem_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnE_RABItem_ExtIEsCls extensionValue;
} SztProtExtnField_E_RABItem_ExtIEs;

typedef struct s1apProtExtnCont_E_RABItem_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_E_RABItem_ExtIEs *member;
}SztProtExtnCont_E_RABItem_ExtIEs;

typedef struct s1apE_RABItem
{
 TknPres pres;
 SztE_RAB_ID e_RAB_ID;
 SztCause cause;
 SztProtExtnCont_E_RABItem_ExtIEs iE_Extns;
} SztE_RABItem;

typedef struct s1ap_ValueE_RABItemIEsCls{
 union {
  SztE_RABItem sztE_RABItem;
 } u;
} Szt_ValueE_RABItemIEsCls;
typedef struct s1apProtIE_Field_E_RABItemIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABItemIEsCls value;
} SztProtIE_Field_E_RABItemIEs;


typedef SztProtIE_Field_E_RABItemIEs SztProtIE_SingleCont_E_RABItemIEs;
typedef struct s1apE_RABLst
{
 TknU16 noComp;
 SztProtIE_SingleCont_E_RABItemIEs *member;
}SztE_RABLst;


typedef TknU32 SztQCI;

typedef struct s1ap_ExtnGBR_QosInform_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnGBR_QosInform_ExtIEsCls;
typedef struct s1apProtExtnField_GBR_QosInform_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnGBR_QosInform_ExtIEsCls extensionValue;
} SztProtExtnField_GBR_QosInform_ExtIEs;

typedef struct s1apProtExtnCont_GBR_QosInform_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_GBR_QosInform_ExtIEs *member;
}SztProtExtnCont_GBR_QosInform_ExtIEs;

typedef struct s1apGBR_QosInform
{
 TknPres pres;
 SztBitRate e_RAB_MaxBitrateDL;
 SztBitRate e_RAB_MaxBitrateUL;
 SztBitRate e_RAB_GuaranteedBitrateDL;
 SztBitRate e_RAB_GuaranteedBitrateUL;
 SztProtExtnCont_GBR_QosInform_ExtIEs iE_Extns;
} SztGBR_QosInform;

typedef struct s1ap_ExtnE_RABQoSParams_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnE_RABQoSParams_ExtIEsCls;
typedef struct s1apProtExtnField_E_RABQoSParams_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnE_RABQoSParams_ExtIEsCls extensionValue;
} SztProtExtnField_E_RABQoSParams_ExtIEs;

typedef struct s1apProtExtnCont_E_RABQoSParams_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_E_RABQoSParams_ExtIEs *member;
}SztProtExtnCont_E_RABQoSParams_ExtIEs;

typedef struct s1apE_RABLvlQoSParams
{
 TknPres pres;
 SztQCI qCI;
 SztAllocnAndRetentionPriority allocationRetentionPriority;
 SztGBR_QosInform gbrQosInform;
 SztProtExtnCont_E_RABQoSParams_ExtIEs iE_Extns;
} SztE_RABLvlQoSParams;


typedef TknU32 SztEUTRANRoundTripDelayEstimationInfo;


typedef TknU32 SztExtendedRNC_ID;


typedef TknU32 SztExtendedRepetitionPeriod;


typedef enum enumSztForbiddenInterRATs
{
 SztForbiddenInterRATsallEnum,
 SztForbiddenInterRATsgeranEnum,
 SztForbiddenInterRATsutranEnum,
 SztForbiddenInterRATscdma2000Enum,
 SztForbiddenInterRATsgeranandutranEnum,
 SztForbiddenInterRATscdma2000andutranEnum
} EnumSztForbiddenInterRATs;
typedef TknU32 SztForbiddenInterRATs;

typedef struct s1apForbiddenTACs
{
 TknU16 noComp;
 SztTAC *member;
}SztForbiddenTACs;

typedef struct s1ap_ExtnForbiddenTAs_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnForbiddenTAs_Item_ExtIEsCls;
typedef struct s1apProtExtnField_ForbiddenTAs_Item_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnForbiddenTAs_Item_ExtIEsCls extensionValue;
} SztProtExtnField_ForbiddenTAs_Item_ExtIEs;

typedef struct s1apProtExtnCont_ForbiddenTAs_Item_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_ForbiddenTAs_Item_ExtIEs *member;
}SztProtExtnCont_ForbiddenTAs_Item_ExtIEs;

typedef struct s1apForbiddenTAs_Item
{
 TknPres pres;
 SztPLMNidentity pLMN_Identity;
 SztForbiddenTACs forbiddenTACs;
 SztProtExtnCont_ForbiddenTAs_Item_ExtIEs iE_Extns;
} SztForbiddenTAs_Item;

typedef struct s1apForbiddenTAs
{
 TknU16 noComp;
 SztForbiddenTAs_Item *member;
}SztForbiddenTAs;

typedef struct s1apForbiddenLACs
{
 TknU16 noComp;
 SztLAC *member;
}SztForbiddenLACs;

typedef struct s1ap_ExtnForbiddenLAs_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnForbiddenLAs_Item_ExtIEsCls;
typedef struct s1apProtExtnField_ForbiddenLAs_Item_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnForbiddenLAs_Item_ExtIEsCls extensionValue;
} SztProtExtnField_ForbiddenLAs_Item_ExtIEs;

typedef struct s1apProtExtnCont_ForbiddenLAs_Item_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_ForbiddenLAs_Item_ExtIEs *member;
}SztProtExtnCont_ForbiddenLAs_Item_ExtIEs;

typedef struct s1apForbiddenLAs_Item
{
 TknPres pres;
 SztPLMNidentity pLMN_Identity;
 SztForbiddenLACs forbiddenLACs;
 SztProtExtnCont_ForbiddenLAs_Item_ExtIEs iE_Extns;
} SztForbiddenLAs_Item;

typedef struct s1apForbiddenLAs
{
 TknU16 noComp;
 SztForbiddenLAs_Item *member;
}SztForbiddenLAs;


typedef TknStrOSXL SztGTP_TEID;

typedef enum enumSztGUMMEITyp
{
 SztGUMMEITypnativeEnum,
 SztGUMMEITypmappedEnum
} EnumSztGUMMEITyp;
typedef TknU32 SztGUMMEITyp;


typedef enum enumSztGWCntxtRlsInd
{
 SztGWCntxtRlsIndtrueEnum
} EnumSztGWCntxtRlsInd;
typedef TknU32 SztGWCntxtRlsInd;

typedef struct s1ap_ExtnHovrRestrnLst_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnHovrRestrnLst_ExtIEsCls;
typedef struct s1apProtExtnField_HovrRestrnLst_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnHovrRestrnLst_ExtIEsCls extensionValue;
} SztProtExtnField_HovrRestrnLst_ExtIEs;

typedef struct s1apProtExtnCont_HovrRestrnLst_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_HovrRestrnLst_ExtIEs *member;
}SztProtExtnCont_HovrRestrnLst_ExtIEs;

typedef struct s1apHovrRestrnLst
{
 TknPres pres;
 SztPLMNidentity servingPLMN;
 SztEPLMNs equivalentPLMNs;
 SztForbiddenTAs forbiddenTAs;
 SztForbiddenLAs forbiddenLAs;
 SztForbiddenInterRATs forbiddenInterRATs;
 SztProtExtnCont_HovrRestrnLst_ExtIEs iE_Extns;
} SztHovrRestrnLst;


typedef enum enumSztHovrTyp
{
 SztHovrTypintralteEnum,
 SztHovrTypltetoutranEnum,
 SztHovrTypltetogeranEnum,
 SztHovrTyputrantolteEnum,
 SztHovrTypgerantolteEnum
} EnumSztHovrTyp;
typedef TknU32 SztHovrTyp;


typedef TknBStr32 SztMeasurementsToActivate;

typedef enum enumSztM1RprtngTrigger
{
 SztM1RprtngTriggerperiodicEnum,
 SztM1RprtngTriggera2eventtriggeredEnum,
 SztM1RprtngTriggera2eventtriggered_periodicEnum
} EnumSztM1RprtngTrigger;
typedef TknU32 SztM1RprtngTrigger;


typedef TknU32 SztThreshold_RSRP;


typedef TknU32 SztThreshold_RSRQ;

typedef struct s1apMeasurementThresholdA2
{
 TknU8 choice;
 union {
  SztThreshold_RSRP threshold_RSRP;
  SztThreshold_RSRQ threshold_RSRQ;
 } val;
} SztMeasurementThresholdA2;

typedef struct s1ap_ExtnM1ThresholdEventA2_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnM1ThresholdEventA2_ExtIEsCls;
typedef struct s1apProtExtnField_M1ThresholdEventA2_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnM1ThresholdEventA2_ExtIEsCls extensionValue;
} SztProtExtnField_M1ThresholdEventA2_ExtIEs;

typedef struct s1apProtExtnCont_M1ThresholdEventA2_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_M1ThresholdEventA2_ExtIEs *member;
}SztProtExtnCont_M1ThresholdEventA2_ExtIEs;

typedef struct s1apM1ThresholdEventA2
{
 TknPres pres;
 SztMeasurementThresholdA2 measurementThreshold;
 SztProtExtnCont_M1ThresholdEventA2_ExtIEs iE_Extns;
} SztM1ThresholdEventA2;


typedef enum enumSztReportIntervalMDT
{
 SztReportIntervalMDTms120Enum,
 SztReportIntervalMDTms240Enum,
 SztReportIntervalMDTms480Enum,
 SztReportIntervalMDTms640Enum,
 SztReportIntervalMDTms1024Enum,
 SztReportIntervalMDTms2048Enum,
 SztReportIntervalMDTms5120Enum,
 SztReportIntervalMDTms10240Enum,
 SztReportIntervalMDTmin1Enum,
 SztReportIntervalMDTmin6Enum,
 SztReportIntervalMDTmin12Enum,
 SztReportIntervalMDTmin30Enum,
 SztReportIntervalMDTmin60Enum
} EnumSztReportIntervalMDT;
typedef TknU32 SztReportIntervalMDT;


typedef enum enumSztReportAmountMDT
{
 SztReportAmountMDTr1Enum,
 SztReportAmountMDTr2Enum,
 SztReportAmountMDTr4Enum,
 SztReportAmountMDTr8Enum,
 SztReportAmountMDTr16Enum,
 SztReportAmountMDTr32Enum,
 SztReportAmountMDTr64Enum,
 SztReportAmountMDTrinfinityEnum
} EnumSztReportAmountMDT;
typedef TknU32 SztReportAmountMDT;

typedef struct s1ap_ExtnM1PeriodicRprtng_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnM1PeriodicRprtng_ExtIEsCls;
typedef struct s1apProtExtnField_M1PeriodicRprtng_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnM1PeriodicRprtng_ExtIEsCls extensionValue;
} SztProtExtnField_M1PeriodicRprtng_ExtIEs;

typedef struct s1apProtExtnCont_M1PeriodicRprtng_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_M1PeriodicRprtng_ExtIEs *member;
}SztProtExtnCont_M1PeriodicRprtng_ExtIEs;

typedef struct s1apM1PeriodicRprtng
{
 TknPres pres;
 SztReportIntervalMDT reportInterval;
 SztReportAmountMDT reportAmount;
 SztProtExtnCont_M1PeriodicRprtng_ExtIEs iE_Extns;
} SztM1PeriodicRprtng;


typedef enum enumSztM3period
{
 SztM3periodms100Enum,
 SztM3periodms1000Enum,
 SztM3periodms10000Enum
} EnumSztM3period;
typedef TknU32 SztM3period;

typedef struct s1ap_ExtnM3Config_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnM3Config_ExtIEsCls;
typedef struct s1apProtExtnField_M3Config_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnM3Config_ExtIEsCls extensionValue;
} SztProtExtnField_M3Config_ExtIEs;

typedef struct s1apProtExtnCont_M3Config_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_M3Config_ExtIEs *member;
}SztProtExtnCont_M3Config_ExtIEs;

typedef struct s1apM3Config
{
 TknPres pres;
 SztM3period m3period;
 SztProtExtnCont_M3Config_ExtIEs iE_Extns;
} SztM3Config;


typedef enum enumSztM4period
{
 SztM4periodms1024Enum,
 SztM4periodms2048Enum,
 SztM4periodms5120Enum,
 SztM4periodms10240Enum,
 SztM4periodmin1Enum
} EnumSztM4period;
typedef TknU32 SztM4period;


typedef enum enumSztLinks_to_log
{
 SztLinks_to_loguplinkEnum,
 SztLinks_to_logdownlinkEnum,
 SztLinks_to_logboth_uplink_and_downlinkEnum
} EnumSztLinks_to_log;
typedef TknU32 SztLinks_to_log;

typedef struct s1ap_ExtnM4Config_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnM4Config_ExtIEsCls;
typedef struct s1apProtExtnField_M4Config_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnM4Config_ExtIEsCls extensionValue;
} SztProtExtnField_M4Config_ExtIEs;

typedef struct s1apProtExtnCont_M4Config_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_M4Config_ExtIEs *member;
}SztProtExtnCont_M4Config_ExtIEs;

typedef struct s1apM4Config
{
 TknPres pres;
 SztM4period m4period;
 SztLinks_to_log m4_links_to_log;
 SztProtExtnCont_M4Config_ExtIEs iE_Extns;
} SztM4Config;


typedef enum enumSztM5period
{
 SztM5periodms1024Enum,
 SztM5periodms2048Enum,
 SztM5periodms5120Enum,
 SztM5periodms10240Enum,
 SztM5periodmin1Enum
} EnumSztM5period;
typedef TknU32 SztM5period;

typedef struct s1ap_ExtnM5Config_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnM5Config_ExtIEsCls;
typedef struct s1apProtExtnField_M5Config_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnM5Config_ExtIEsCls extensionValue;
} SztProtExtnField_M5Config_ExtIEs;

typedef struct s1apProtExtnCont_M5Config_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_M5Config_ExtIEs *member;
}SztProtExtnCont_M5Config_ExtIEs;

typedef struct s1apM5Config
{
 TknPres pres;
 SztM5period m5period;
 SztLinks_to_log m5_links_to_log;
 SztProtExtnCont_M5Config_ExtIEs iE_Extns;
} SztM5Config;


typedef TknBStr32 SztMDT_Loc_Info;
typedef struct s1ap_ExtnImmediateMDT_ExtIEsCls{
 union {
  SztM3Config sztM3Config;
  SztM4Config sztM4Config;
  SztM5Config sztM5Config;
  SztMDT_Loc_Info sztMDT_Loc_Info;
 } u;
} Szt_ExtnImmediateMDT_ExtIEsCls;
typedef struct s1apProtExtnField_ImmediateMDT_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnImmediateMDT_ExtIEsCls extensionValue;
} SztProtExtnField_ImmediateMDT_ExtIEs;

typedef struct s1apProtExtnCont_ImmediateMDT_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_ImmediateMDT_ExtIEs *member;
}SztProtExtnCont_ImmediateMDT_ExtIEs;

typedef struct s1apImmediateMDT
{
 TknPres pres;
 SztMeasurementsToActivate measurementsToActivate;
 SztM1RprtngTrigger m1reportingTrigger;
 SztM1ThresholdEventA2 m1thresholdeventA2;
 SztM1PeriodicRprtng m1periodicRprtng;
 SztProtExtnCont_ImmediateMDT_ExtIEs iE_Extns;
} SztImmediateMDT;


typedef TknStrOSXL SztIMSI;

typedef TknBStr32 SztIntegrityProtectionAlgorithms;

typedef TknBStr32 SztIntfsToTrace;

typedef TknU32 SztTime_UE_StayedInCell;


typedef TknU32 SztTime_UE_StayedInCell_EnhancedGranularity;

typedef struct s1ap_ExtnLastVisitedEUTRANCellInform_ExtIEsCls{
 union {
  SztTime_UE_StayedInCell_EnhancedGranularity sztTime_UE_StayedInCell_EnhancedGranularity;
  SztCause sztCause;
 } u;
} Szt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls;
typedef struct s1apProtExtnField_LastVisitedEUTRANCellInform_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls extensionValue;
} SztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs;

typedef struct s1apProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs *member;
}SztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs;

typedef struct s1apLastVisitedEUTRANCellInform
{
 TknPres pres;
 SztEUTRAN_CGI global_Cell_ID;
 SztCellTyp cellTyp;
 SztTime_UE_StayedInCell time_UE_StayedInCell;
 SztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs iE_Extns;
} SztLastVisitedEUTRANCellInform;


typedef TknStrOSXL SztLastVisitedUTRANCellInform;
typedef struct s1apLastVisitedGERANCellInform
{
 TknU8 choice;
 union {
  TknU8 unused;
 } val;
} SztLastVisitedGERANCellInform;

typedef struct s1apLastVisitedCell_Item
{
 TknU8 choice;
 union {
  SztLastVisitedEUTRANCellInform e_UTRAN_Cell;
  SztLastVisitedUTRANCellInform uTRAN_Cell;
  SztLastVisitedGERANCellInform gERAN_Cell;
 } val;
} SztLastVisitedCell_Item;


typedef TknStrOSXL SztL3_Inform;

typedef TknStrOSXL SztLPPa_PDU;

typedef enum enumSztLoggingInterval
{
 SztLoggingIntervalms128Enum,
 SztLoggingIntervalms256Enum,
 SztLoggingIntervalms512Enum,
 SztLoggingIntervalms1024Enum,
 SztLoggingIntervalms2048Enum,
 SztLoggingIntervalms3072Enum,
 SztLoggingIntervalms4096Enum,
 SztLoggingIntervalms6144Enum
} EnumSztLoggingInterval;
typedef TknU32 SztLoggingInterval;


typedef enum enumSztLoggingDuration
{
 SztLoggingDurationm10Enum,
 SztLoggingDurationm20Enum,
 SztLoggingDurationm40Enum,
 SztLoggingDurationm60Enum,
 SztLoggingDurationm90Enum,
 SztLoggingDurationm120Enum
} EnumSztLoggingDuration;
typedef TknU32 SztLoggingDuration;

typedef struct s1ap_ExtnLoggedMDT_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnLoggedMDT_ExtIEsCls;
typedef struct s1apProtExtnField_LoggedMDT_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnLoggedMDT_ExtIEsCls extensionValue;
} SztProtExtnField_LoggedMDT_ExtIEs;

typedef struct s1apProtExtnCont_LoggedMDT_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_LoggedMDT_ExtIEs *member;
}SztProtExtnCont_LoggedMDT_ExtIEs;

typedef struct s1apLoggedMDT
{
 TknPres pres;
 SztLoggingInterval loggingInterval;
 SztLoggingDuration loggingDuration;
 SztProtExtnCont_LoggedMDT_ExtIEs iE_Extns;
} SztLoggedMDT;


typedef enum enumSztMDT_Actvn
{
 SztMDT_Actvnimmediate_MDT_onlyEnum,
 SztMDT_Actvnimmediate_MDT_and_TraceEnum,
 SztMDT_Actvnlogged_MDT_onlyEnum
} EnumSztMDT_Actvn;
typedef TknU32 SztMDT_Actvn;

typedef struct s1apMDTMode
{
 TknU8 choice;
 union {
  SztImmediateMDT immediateMDT;
  SztLoggedMDT loggedMDT;
 } val;
} SztMDTMode;

typedef struct s1apMDTPLMNLst
{
 TknU16 noComp;
 SztPLMNidentity *member;
}SztMDTPLMNLst;

typedef struct s1ap_ExtnMDT_Config_ExtIEsCls{
 union {
  SztMDTPLMNLst sztMDTPLMNLst;
 } u;
} Szt_ExtnMDT_Config_ExtIEsCls;
typedef struct s1apProtExtnField_MDT_Config_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnMDT_Config_ExtIEsCls extensionValue;
} SztProtExtnField_MDT_Config_ExtIEs;

typedef struct s1apProtExtnCont_MDT_Config_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_MDT_Config_ExtIEs *member;
}SztProtExtnCont_MDT_Config_ExtIEs;

typedef struct s1apMDT_Config
{
 TknPres pres;
 SztMDT_Actvn mdt_Actvn;
 SztAreaScopeOfMDT areaScopeOfMDT;
 SztMDTMode mDTMode;
 SztProtExtnCont_MDT_Config_ExtIEs iE_Extns;
} SztMDT_Config;


typedef enum enumSztManagementBasedMDTAllowed
{
 SztManagementBasedMDTAllowedallowedEnum
} EnumSztManagementBasedMDTAllowed;
typedef TknU32 SztManagementBasedMDTAllowed;


typedef enum enumSztPrivacyIndicator
{
 SztPrivacyIndicatorimmediate_MDTEnum,
 SztPrivacyIndicatorlogged_MDTEnum
} EnumSztPrivacyIndicator;
typedef TknU32 SztPrivacyIndicator;


typedef TknBStr32 SztMsgIdentifier;

typedef TknBStr32 SztMobilityInform;

typedef TknStrOSXL SztMMEname;

typedef enum enumSztMMERelaySupportIndicator
{
 SztMMERelaySupportIndicatortrueEnum
} EnumSztMMERelaySupportIndicator;
typedef TknU32 SztMMERelaySupportIndicator;


typedef TknU32 SztMME_UE_S1AP_ID;


typedef TknStrOSXL SztM_TMSI;

typedef TknStrOSXL SztMSClassmark2;

typedef TknStrOSXL SztMSClassmark3;

typedef TknStrOSXL SztNAS_PDU;

typedef TknStrOSXL SztNASSecurParamsfromE_UTRAN;

typedef TknStrOSXL SztNASSecurParamstoE_UTRAN;

typedef TknU32 SztNumberofBroadcastRqst;


typedef TknStrOSXL SztOldBSS_ToNewBSS_Inform;

typedef enum enumSztOverloadAction
{
 SztOverloadActionreject_non_emergency_mo_dtEnum,
 SztOverloadActionreject_rrc_cr_signallingEnum,
 SztOverloadActionpermit_emergency_sessions_and_mobile_terminated_services_onlyEnum,
 SztOverloadActionpermit_high_priority_sessions_and_mobile_terminated_services_onlyEnum,
 SztOverloadActionreject_delay_tolerant_accessEnum
} EnumSztOverloadAction;
typedef TknU32 SztOverloadAction;

typedef struct s1apOverloadResp
{
 TknU8 choice;
 union {
  SztOverloadAction overloadAction;
 } val;
} SztOverloadResp;


typedef enum enumSztPagDRX
{
 SztPagDRXv32Enum,
 SztPagDRXv64Enum,
 SztPagDRXv128Enum,
 SztPagDRXv256Enum
} EnumSztPagDRX;
typedef TknU32 SztPagDRX;


typedef enum enumSztPagPriority
{
 SztPagPrioritypriolevel1Enum,
 SztPagPrioritypriolevel2Enum,
 SztPagPrioritypriolevel3Enum,
 SztPagPrioritypriolevel4Enum,
 SztPagPrioritypriolevel5Enum,
 SztPagPrioritypriolevel6Enum,
 SztPagPrioritypriolevel7Enum,
 SztPagPrioritypriolevel8Enum
} EnumSztPagPriority;
typedef TknU32 SztPagPriority;


typedef TknStr4 SztPort_Number;

typedef enum enumSztPS_ServiceNotAvailable
{
 SztPS_ServiceNotAvailableps_service_not_availableEnum
} EnumSztPS_ServiceNotAvailable;
typedef TknU32 SztPS_ServiceNotAvailable;


typedef TknU32 SztRelativeMMECapacity;


typedef enum enumSztRelayNode_Indicator
{
 SztRelayNode_IndicatortrueEnum
} EnumSztRelayNode_Indicator;
typedef TknU32 SztRelayNode_Indicator;


typedef enum enumSztReportArea
{
 SztReportAreaecgiEnum
} EnumSztReportArea;
typedef TknU32 SztReportArea;

typedef struct s1ap_ExtnRqstTyp_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnRqstTyp_ExtIEsCls;
typedef struct s1apProtExtnField_RqstTyp_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnRqstTyp_ExtIEsCls extensionValue;
} SztProtExtnField_RqstTyp_ExtIEs;

typedef struct s1apProtExtnCont_RqstTyp_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_RqstTyp_ExtIEs *member;
}SztProtExtnCont_RqstTyp_ExtIEs;

typedef struct s1apRqstTyp
{
 TknPres pres;
 SztEventTyp eventTyp;
 SztReportArea reportArea;
 SztProtExtnCont_RqstTyp_ExtIEs iE_Extns;
} SztRqstTyp;


typedef TknStrOSXL SztRIMInform;

typedef TknU32 SztRNC_ID;

typedef struct s1ap_ExtnTgetRNC_ID_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnTgetRNC_ID_ExtIEsCls;
typedef struct s1apProtExtnField_TgetRNC_ID_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnTgetRNC_ID_ExtIEsCls extensionValue;
} SztProtExtnField_TgetRNC_ID_ExtIEs;

typedef struct s1apProtExtnCont_TgetRNC_ID_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_TgetRNC_ID_ExtIEs *member;
}SztProtExtnCont_TgetRNC_ID_ExtIEs;

typedef struct s1apTgetRNC_ID
{
 TknPres pres;
 SztLAI lAI;
 SztRAC rAC;
 SztRNC_ID rNC_ID;
 SztExtendedRNC_ID extendedRNC_ID;
 SztProtExtnCont_TgetRNC_ID_ExtIEs iE_Extns;
} SztTgetRNC_ID;

typedef struct s1apRIMRoutingAddr
{
 TknU8 choice;
 union {
  SztGERAN_Cell_ID gERAN_Cell_ID;
  SztTgetRNC_ID targetRNC_ID;
 } val;
} SztRIMRoutingAddr;

typedef struct s1ap_ExtnRIMTfr_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnRIMTfr_ExtIEsCls;
typedef struct s1apProtExtnField_RIMTfr_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnRIMTfr_ExtIEsCls extensionValue;
} SztProtExtnField_RIMTfr_ExtIEs;

typedef struct s1apProtExtnCont_RIMTfr_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_RIMTfr_ExtIEs *member;
}SztProtExtnCont_RIMTfr_ExtIEs;

typedef struct s1apRIMTfr
{
 TknPres pres;
 SztRIMInform rIMInform;
 SztRIMRoutingAddr rIMRoutingAddr;
 SztProtExtnCont_RIMTfr_ExtIEs iE_Extns;
} SztRIMTfr;


typedef TknU32 SztRepetitionPeriod;


typedef TknStrOSXL SztRRC_Cont;

typedef enum enumSztRRC_Establishment_Cause
{
 SztRRC_Establishment_CauseemergencyEnum,
 SztRRC_Establishment_CausehighPriorityAccessEnum,
 SztRRC_Establishment_Causemt_AccessEnum,
 SztRRC_Establishment_Causemo_SignallingEnum,
 SztRRC_Establishment_Causemo_DataEnum,
 SztRRC_Establishment_Causedelay_TolerantAccessEnum
} EnumSztRRC_Establishment_Cause;
typedef TknU32 SztRRC_Establishment_Cause;


typedef TknU32 SztRouting_ID;


typedef TknStrBSXL SztSecurKey;

typedef TknU32 SztSecurCntxtnextHopChainingCount;

typedef struct s1ap_ExtnSecurCntxt_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnSecurCntxt_ExtIEsCls;
typedef struct s1apProtExtnField_SecurCntxt_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnSecurCntxt_ExtIEsCls extensionValue;
} SztProtExtnField_SecurCntxt_ExtIEs;

typedef struct s1apProtExtnCont_SecurCntxt_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_SecurCntxt_ExtIEs *member;
}SztProtExtnCont_SecurCntxt_ExtIEs;

typedef struct s1apSecurCntxt
{
 TknPres pres;
 SztSecurCntxtnextHopChainingCount nextHopChainingCount;
 SztSecurKey nextHopParameter;
 SztProtExtnCont_SecurCntxt_ExtIEs iE_Extns;
} SztSecurCntxt;


typedef TknBStr32 SztSerialNumber;

typedef enum enumSztSONInformRqst
{
 SztSONInformRqstx2TNL_Config_InfoEnum,
 SztSONInformRqsttime_Synchronization_InfoEnum
} EnumSztSONInformRqst;
typedef TknU32 SztSONInformRqst;

typedef struct s1apENBX2GTPTLAs
{
 TknU16 noComp;
 SztTportLyrAddr *member;
}SztENBX2GTPTLAs;

typedef struct s1ap_ExtnENBX2ExtTLA_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnENBX2ExtTLA_ExtIEsCls;
typedef struct s1apProtExtnField_ENBX2ExtTLA_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnENBX2ExtTLA_ExtIEsCls extensionValue;
} SztProtExtnField_ENBX2ExtTLA_ExtIEs;

typedef struct s1apProtExtnCont_ENBX2ExtTLA_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_ENBX2ExtTLA_ExtIEs *member;
}SztProtExtnCont_ENBX2ExtTLA_ExtIEs;

typedef struct s1apENBX2ExtTLA
{
 TknPres pres;
 SztTportLyrAddr iPsecTLA;
 SztENBX2GTPTLAs gTPTLAa;
 SztProtExtnCont_ENBX2ExtTLA_ExtIEs iE_Extns;
} SztENBX2ExtTLA;

typedef struct s1apENBX2ExtTLAs
{
 TknU16 noComp;
 SztENBX2ExtTLA *member;
}SztENBX2ExtTLAs;

typedef struct s1ap_ExtnX2TNLConfigInfo_ExtIEsCls{
 union {
  SztENBX2ExtTLAs sztENBX2ExtTLAs;
 } u;
} Szt_ExtnX2TNLConfigInfo_ExtIEsCls;
typedef struct s1apProtExtnField_X2TNLConfigInfo_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnX2TNLConfigInfo_ExtIEsCls extensionValue;
} SztProtExtnField_X2TNLConfigInfo_ExtIEs;

typedef struct s1apProtExtnCont_X2TNLConfigInfo_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_X2TNLConfigInfo_ExtIEs *member;
}SztProtExtnCont_X2TNLConfigInfo_ExtIEs;

typedef struct s1apX2TNLConfigInfo
{
 TknPres pres;
 SztENBX2TLAs eNBX2TportLyrAddres;
 SztProtExtnCont_X2TNLConfigInfo_ExtIEs iE_Extns;
} SztX2TNLConfigInfo;


typedef TknU32 SztStratumLvl;


typedef enum enumSztSynchronizationStatus
{
 SztSynchronizationStatussynchronousEnum,
 SztSynchronizationStatusasynchronousEnum
} EnumSztSynchronizationStatus;
typedef TknU32 SztSynchronizationStatus;

typedef struct s1ap_ExtnTimeSynchronizationInfo_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnTimeSynchronizationInfo_ExtIEsCls;
typedef struct s1apProtExtnField_TimeSynchronizationInfo_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnTimeSynchronizationInfo_ExtIEsCls extensionValue;
} SztProtExtnField_TimeSynchronizationInfo_ExtIEs;

typedef struct s1apProtExtnCont_TimeSynchronizationInfo_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_TimeSynchronizationInfo_ExtIEs *member;
}SztProtExtnCont_TimeSynchronizationInfo_ExtIEs;

typedef struct s1apTimeSynchronizationInfo
{
 TknPres pres;
 SztStratumLvl stratumLvl;
 SztSynchronizationStatus synchronizationStatus;
 SztProtExtnCont_TimeSynchronizationInfo_ExtIEs iE_Extns;
} SztTimeSynchronizationInfo;

typedef struct s1ap_ExtnSONInformReply_ExtIEsCls{
 union {
  SztTimeSynchronizationInfo sztTimeSynchronizationInfo;
 } u;
} Szt_ExtnSONInformReply_ExtIEsCls;
typedef struct s1apProtExtnField_SONInformReply_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnSONInformReply_ExtIEsCls extensionValue;
} SztProtExtnField_SONInformReply_ExtIEs;

typedef struct s1apProtExtnCont_SONInformReply_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_SONInformReply_ExtIEs *member;
}SztProtExtnCont_SONInformReply_ExtIEs;

typedef struct s1apSONInformReply
{
 TknPres pres;
 SztX2TNLConfigInfo x2TNLConfigInfo;
 SztProtExtnCont_SONInformReply_ExtIEs iE_Extns;
} SztSONInformReply;

typedef struct s1apSONInform
{
 TknU8 choice;
 union {
  SztSONInformRqst sONInformRqst;
  SztSONInformReply sONInformReply;
 } val;
} SztSONInform;

typedef struct s1ap_ExtnTgeteNB_ID_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnTgeteNB_ID_ExtIEsCls;
typedef struct s1apProtExtnField_TgeteNB_ID_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnTgeteNB_ID_ExtIEsCls extensionValue;
} SztProtExtnField_TgeteNB_ID_ExtIEs;

typedef struct s1apProtExtnCont_TgeteNB_ID_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_TgeteNB_ID_ExtIEs *member;
}SztProtExtnCont_TgeteNB_ID_ExtIEs;

typedef struct s1apTgeteNB_ID
{
 TknPres pres;
 SztGlobal_ENB_ID global_ENB_ID;
 SztTAI selected_TAI;
 SztProtExtnCont_TgeteNB_ID_ExtIEs iE_Extns;
} SztTgeteNB_ID;

typedef struct s1ap_ExtnSrceNB_ID_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnSrceNB_ID_ExtIEsCls;
typedef struct s1apProtExtnField_SrceNB_ID_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnSrceNB_ID_ExtIEsCls extensionValue;
} SztProtExtnField_SrceNB_ID_ExtIEs;

typedef struct s1apProtExtnCont_SrceNB_ID_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_SrceNB_ID_ExtIEs *member;
}SztProtExtnCont_SrceNB_ID_ExtIEs;

typedef struct s1apSrceNB_ID
{
 TknPres pres;
 SztGlobal_ENB_ID global_ENB_ID;
 SztTAI selected_TAI;
 SztProtExtnCont_SrceNB_ID_ExtIEs iE_Extns;
} SztSrceNB_ID;

typedef struct s1ap_ExtnSONConfigTfr_ExtIEsCls{
 union {
  SztX2TNLConfigInfo sztX2TNLConfigInfo;
 } u;
} Szt_ExtnSONConfigTfr_ExtIEsCls;
typedef struct s1apProtExtnField_SONConfigTfr_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnSONConfigTfr_ExtIEsCls extensionValue;
} SztProtExtnField_SONConfigTfr_ExtIEs;

typedef struct s1apProtExtnCont_SONConfigTfr_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_SONConfigTfr_ExtIEs *member;
}SztProtExtnCont_SONConfigTfr_ExtIEs;

typedef struct s1apSONConfigTfr
{
 TknPres pres;
 SztTgeteNB_ID targeteNB_ID;
 SztSrceNB_ID sourceeNB_ID;
 SztSONInform sONInform;
 SztProtExtnCont_SONConfigTfr_ExtIEs iE_Extns;
} SztSONConfigTfr;


typedef TknStrOSXL SztSrc_ToTget_TprntCont;

typedef TknStrOSXL SztSrcBSS_ToTgetBSS_TprntCont;

typedef enum enumSztSRVCCOperationPossible
{
 SztSRVCCOperationPossiblepossibleEnum
} EnumSztSRVCCOperationPossible;
typedef TknU32 SztSRVCCOperationPossible;


typedef enum enumSztSRVCCHOInd
{
 SztSRVCCHOIndpSandCSEnum,
 SztSRVCCHOIndcSonlyEnum
} EnumSztSRVCCHOInd;
typedef TknU32 SztSRVCCHOInd;


typedef TknU32 SztSubscriberProfileIDforRFP;

typedef struct s1apUE_HistoryInform
{
 TknU16 noComp;
 SztLastVisitedCell_Item *member;
}SztUE_HistoryInform;

typedef struct s1ap_ExtnSrceNB_ToTgeteNB_TprntCont_ExtIEsCls{
 union {
  SztMobilityInform sztMobilityInform;
 } u;
} Szt_ExtnSrceNB_ToTgeteNB_TprntCont_ExtIEsCls;
typedef struct s1apProtExtnField_SrceNB_ToTgeteNB_TprntCont_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnSrceNB_ToTgeteNB_TprntCont_ExtIEsCls extensionValue;
} SztProtExtnField_SrceNB_ToTgeteNB_TprntCont_ExtIEs;

typedef struct s1apProtExtnCont_SrceNB_ToTgeteNB_TprntCont_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_SrceNB_ToTgeteNB_TprntCont_ExtIEs *member;
}SztProtExtnCont_SrceNB_ToTgeteNB_TprntCont_ExtIEs;

typedef struct s1apSrceNB_ToTgeteNB_TprntCont
{
 TknPres pres;
 SztRRC_Cont rRC_Cont;
 SztE_RABInformLst e_RABInformLst;
 SztEUTRAN_CGI targetCell_ID;
 SztSubscriberProfileIDforRFP subscriberProfileIDforRFP;
 SztUE_HistoryInform uE_HistoryInform;
 SztProtExtnCont_SrceNB_ToTgeteNB_TprntCont_ExtIEs iE_Extns;
} SztSrceNB_ToTgeteNB_TprntCont;


typedef TknStrOSXL SztSrcRNC_ToTgetRNC_TprntCont;
typedef struct s1apSrvdPLMNs
{
 TknU16 noComp;
 SztPLMNidentity *member;
}SztSrvdPLMNs;

typedef struct s1apSrvdGroupIDs
{
 TknU16 noComp;
 SztMME_Group_ID *member;
}SztSrvdGroupIDs;

typedef struct s1apSrvdMMECs
{
 TknU16 noComp;
 SztMME_Code *member;
}SztSrvdMMECs;

typedef struct s1ap_ExtnSrvdGUMMEIsItem_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnSrvdGUMMEIsItem_ExtIEsCls;
typedef struct s1apProtExtnField_SrvdGUMMEIsItem_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnSrvdGUMMEIsItem_ExtIEsCls extensionValue;
} SztProtExtnField_SrvdGUMMEIsItem_ExtIEs;

typedef struct s1apProtExtnCont_SrvdGUMMEIsItem_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_SrvdGUMMEIsItem_ExtIEs *member;
}SztProtExtnCont_SrvdGUMMEIsItem_ExtIEs;

typedef struct s1apSrvdGUMMEIsItem
{
 TknPres pres;
 SztSrvdPLMNs servedPLMNs;
 SztSrvdGroupIDs servedGroupIDs;
 SztSrvdMMECs servedMMECs;
 SztProtExtnCont_SrvdGUMMEIsItem_ExtIEs iE_Extns;
} SztSrvdGUMMEIsItem;

typedef struct s1apSrvdGUMMEIs
{
 TknU16 noComp;
 SztSrvdGUMMEIsItem *member;
}SztSrvdGUMMEIs;

typedef struct s1ap_ExtnSuppTAs_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnSuppTAs_Item_ExtIEsCls;
typedef struct s1apProtExtnField_SuppTAs_Item_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnSuppTAs_Item_ExtIEsCls extensionValue;
} SztProtExtnField_SuppTAs_Item_ExtIEs;

typedef struct s1apProtExtnCont_SuppTAs_Item_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_SuppTAs_Item_ExtIEs *member;
}SztProtExtnCont_SuppTAs_Item_ExtIEs;

typedef struct s1apSuppTAs_Item
{
 TknPres pres;
 SztTAC tAC;
 SztBPLMNs broadcastPLMNs;
 SztProtExtnCont_SuppTAs_Item_ExtIEs iE_Extns;
} SztSuppTAs_Item;

typedef struct s1apSuppTAs
{
 TknU16 noComp;
 SztSuppTAs_Item *member;
}SztSuppTAs;

typedef struct s1ap_ExtnS_TMSI_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnS_TMSI_ExtIEsCls;
typedef struct s1apProtExtnField_S_TMSI_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnS_TMSI_ExtIEsCls extensionValue;
} SztProtExtnField_S_TMSI_ExtIEs;

typedef struct s1apProtExtnCont_S_TMSI_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_S_TMSI_ExtIEs *member;
}SztProtExtnCont_S_TMSI_ExtIEs;

typedef struct s1apS_TMSI
{
 TknPres pres;
 SztMME_Code mMEC;
 SztM_TMSI m_TMSI;
 SztProtExtnCont_S_TMSI_ExtIEs iE_Extns;
} SztS_TMSI;

typedef struct s1apTAILstforWarning
{
 TknU16 noComp;
 SztTAI *member;
}SztTAILstforWarning;

typedef struct s1apTgetID
{
 TknU8 choice;
 union {
  SztTgeteNB_ID targeteNB_ID;
  SztTgetRNC_ID targetRNC_ID;
  SztCGI cGI;
 } val;
} SztTgetID;

typedef struct s1ap_ExtnTgeteNB_ToSrceNB_TprntCont_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnTgeteNB_ToSrceNB_TprntCont_ExtIEsCls;
typedef struct s1apProtExtnField_TgeteNB_ToSrceNB_TprntCont_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnTgeteNB_ToSrceNB_TprntCont_ExtIEsCls extensionValue;
} SztProtExtnField_TgeteNB_ToSrceNB_TprntCont_ExtIEs;

typedef struct s1apProtExtnCont_TgeteNB_ToSrceNB_TprntCont_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_TgeteNB_ToSrceNB_TprntCont_ExtIEs *member;
}SztProtExtnCont_TgeteNB_ToSrceNB_TprntCont_ExtIEs;

typedef struct s1apTgeteNB_ToSrceNB_TprntCont
{
 TknPres pres;
 SztRRC_Cont rRC_Cont;
 SztProtExtnCont_TgeteNB_ToSrceNB_TprntCont_ExtIEs iE_Extns;
} SztTgeteNB_ToSrceNB_TprntCont;


typedef TknStrOSXL SztTget_ToSrc_TprntCont;

typedef TknStrOSXL SztTgetRNC_ToSrcRNC_TprntCont;

typedef TknStrOSXL SztTgetBSS_ToSrcBSS_TprntCont;

typedef enum enumSztTimeToWait
{
 SztTimeToWaitv1sEnum,
 SztTimeToWaitv2sEnum,
 SztTimeToWaitv5sEnum,
 SztTimeToWaitv10sEnum,
 SztTimeToWaitv20sEnum,
 SztTimeToWaitv60sEnum
} EnumSztTimeToWait;
typedef TknU32 SztTimeToWait;


typedef TknStrOSXL SztE_UTRAN_Trace_ID;

typedef enum enumSztTraceDepth
{
 SztTraceDepthminimumEnum,
 SztTraceDepthmediumEnum,
 SztTraceDepthmaximumEnum,
 SztTraceDepthminimumWithoutVendorSpecificExtnEnum,
 SztTraceDepthmediumWithoutVendorSpecificExtnEnum,
 SztTraceDepthmaximumWithoutVendorSpecificExtnEnum
} EnumSztTraceDepth;
typedef TknU32 SztTraceDepth;

typedef struct s1ap_ExtnTraceActvn_ExtIEsCls{
 union {
  SztMDT_Config sztMDT_Config;
 } u;
} Szt_ExtnTraceActvn_ExtIEsCls;
typedef struct s1apProtExtnField_TraceActvn_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnTraceActvn_ExtIEsCls extensionValue;
} SztProtExtnField_TraceActvn_ExtIEs;

typedef struct s1apProtExtnCont_TraceActvn_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_TraceActvn_ExtIEs *member;
}SztProtExtnCont_TraceActvn_ExtIEs;

typedef struct s1apTraceActvn
{
 TknPres pres;
 SztE_UTRAN_Trace_ID e_UTRAN_Trace_ID;
 SztIntfsToTrace interfacesToTrace;
 SztTraceDepth traceDepth;
 SztTportLyrAddr traceCollectionEntityIPAddr;
 SztProtExtnCont_TraceActvn_ExtIEs iE_Extns;
} SztTraceActvn;


typedef TknU32 SztTrafficLoadReductionInd;

typedef struct s1ap_ExtnTunnel_Inform_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnTunnel_Inform_ExtIEsCls;
typedef struct s1apProtExtnField_Tunnel_Inform_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnTunnel_Inform_ExtIEsCls extensionValue;
} SztProtExtnField_Tunnel_Inform_ExtIEs;

typedef struct s1apProtExtnCont_Tunnel_Inform_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_Tunnel_Inform_ExtIEs *member;
}SztProtExtnCont_Tunnel_Inform_ExtIEs;

typedef struct s1apTunnelInform
{
 TknPres pres;
 SztTportLyrAddr transportLyrAddr;
 SztPort_Number uDP_Port_Number;
 SztProtExtnCont_Tunnel_Inform_ExtIEs iE_Extns;
} SztTunnelInform;

typedef struct s1ap_ExtnUEAgg_MaxBitrates_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnUEAgg_MaxBitrates_ExtIEsCls;
typedef struct s1apProtExtnField_UEAgg_MaxBitrates_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnUEAgg_MaxBitrates_ExtIEsCls extensionValue;
} SztProtExtnField_UEAgg_MaxBitrates_ExtIEs;

typedef struct s1apProtExtnCont_UEAgg_MaxBitrates_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_UEAgg_MaxBitrates_ExtIEs *member;
}SztProtExtnCont_UEAgg_MaxBitrates_ExtIEs;

typedef struct s1apUEAggMaxBitrate
{
 TknPres pres;
 SztBitRate uEaggregateMaxBitRateDL;
 SztBitRate uEaggregateMaxBitRateUL;
 SztProtExtnCont_UEAgg_MaxBitrates_ExtIEs iE_Extns;
} SztUEAggMaxBitrate;

typedef struct s1ap_ExtnUE_S1AP_ID_pair_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnUE_S1AP_ID_pair_ExtIEsCls;
typedef struct s1apProtExtnField_UE_S1AP_ID_pair_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnUE_S1AP_ID_pair_ExtIEsCls extensionValue;
} SztProtExtnField_UE_S1AP_ID_pair_ExtIEs;

typedef struct s1apProtExtnCont_UE_S1AP_ID_pair_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_UE_S1AP_ID_pair_ExtIEs *member;
}SztProtExtnCont_UE_S1AP_ID_pair_ExtIEs;

typedef struct s1apUE_S1AP_ID_pair
{
 TknPres pres;
 SztMME_UE_S1AP_ID mME_UE_S1AP_ID;
 SztENB_UE_S1AP_ID eNB_UE_S1AP_ID;
 SztProtExtnCont_UE_S1AP_ID_pair_ExtIEs iE_Extns;
} SztUE_S1AP_ID_pair;

typedef struct s1apUE_S1AP_IDs
{
 TknU8 choice;
 union {
  SztUE_S1AP_ID_pair uE_S1AP_ID_pair;
  SztMME_UE_S1AP_ID mME_UE_S1AP_ID;
 } val;
} SztUE_S1AP_IDs;

typedef struct s1ap_ExtnUE_assocLogS1_ConItemExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnUE_assocLogS1_ConItemExtIEsCls;
typedef struct s1apProtExtnField_UE_assocLogS1_ConItemExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnUE_assocLogS1_ConItemExtIEsCls extensionValue;
} SztProtExtnField_UE_assocLogS1_ConItemExtIEs;

typedef struct s1apProtExtnCont_UE_assocLogS1_ConItemExtIEs
{
 TknU16 noComp;
 SztProtExtnField_UE_assocLogS1_ConItemExtIEs *member;
}SztProtExtnCont_UE_assocLogS1_ConItemExtIEs;

typedef struct s1apUE_assocLogS1_ConItem
{
 TknPres pres;
 SztMME_UE_S1AP_ID mME_UE_S1AP_ID;
 SztENB_UE_S1AP_ID eNB_UE_S1AP_ID;
 SztProtExtnCont_UE_assocLogS1_ConItemExtIEs iE_Extns;
} SztUE_assocLogS1_ConItem;


typedef TknBStr32 SztUEIdentityIdxValue;
typedef struct s1apUEPagID
{
 TknU8 choice;
 union {
  SztS_TMSI s_TMSI;
  SztIMSI iMSI;
 } val;
} SztUEPagID;


typedef TknStrOSXL SztUERadioCapblty;
typedef struct s1ap_ExtnUESecurCapabilities_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnUESecurCapabilities_ExtIEsCls;
typedef struct s1apProtExtnField_UESecurCapabilities_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnUESecurCapabilities_ExtIEsCls extensionValue;
} SztProtExtnField_UESecurCapabilities_ExtIEs;

typedef struct s1apProtExtnCont_UESecurCapabilities_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_UESecurCapabilities_ExtIEs *member;
}SztProtExtnCont_UESecurCapabilities_ExtIEs;

typedef struct s1apUESecurCapabilities
{
 TknPres pres;
 SztEncryptionAlgorithms encryptionAlgorithms;
 SztIntegrityProtectionAlgorithms integrityProtectionAlgorithms;
 SztProtExtnCont_UESecurCapabilities_ExtIEs iE_Extns;
} SztUESecurCapabilities;


typedef enum enumSztVoiceSupportMatchIndicator
{
 SztVoiceSupportMatchIndicatorsupportedEnum,
 SztVoiceSupportMatchIndicatornot_supportedEnum
} EnumSztVoiceSupportMatchIndicator;
typedef TknU32 SztVoiceSupportMatchIndicator;

typedef struct s1apWarningAreaLst
{
 TknU8 choice;
 union {
  SztECGILst cellIDLst;
  SztTAILstforWarning trackingAreaLstforWarning;
  SztEmergencyAreaIDLst emergencyAreaIDLst;
 } val;
} SztWarningAreaLst;


typedef TknStr4 SztWarningTyp;

typedef TknStrOSXL SztWarningSecurInfo;

typedef TknStrOSXL SztWarningMsgContents;
typedef struct s1ap_ValueHovrReqdIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztHovrTyp sztHovrTyp;
  SztCause sztCause;
  SztTgetID sztTgetID;
  SztDirect_Fwding_Path_Avlblty sztDirect_Fwding_Path_Avlblty;
  SztSRVCCHOInd sztSRVCCHOInd;
  SztSrc_ToTget_TprntCont sztid_Src_ToTget_TprntCont;
  SztSrc_ToTget_TprntCont sztid_Src_ToTget_TprntCont_Secondary;
  SztMSClassmark2 sztMSClassmark2;
  SztMSClassmark3 sztMSClassmark3;
  SztCSG_Id sztCSG_Id;
  SztCellAccessMode sztCellAccessMode;
  SztPS_ServiceNotAvailable sztPS_ServiceNotAvailable;
 } u;
} Szt_ValueHovrReqdIEsCls;
typedef struct s1apProtIE_Field_HovrReqdIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueHovrReqdIEsCls value;
} SztProtIE_Field_HovrReqdIEs;

typedef struct s1apProtIE_Cont_HovrReqdIEs
{
 TknU16 noComp;
 SztProtIE_Field_HovrReqdIEs *member;
}SztProtIE_Cont_HovrReqdIEs;

typedef struct s1apHovrReqd
{
 TknPres pres;
 SztProtIE_Cont_HovrReqdIEs protocolIEs;
} SztHovrReqd;

typedef struct s1ap_ExtnE_RABDataFwdingItem_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnE_RABDataFwdingItem_ExtIEsCls;
typedef struct s1apProtExtnField_E_RABDataFwdingItem_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnE_RABDataFwdingItem_ExtIEsCls extensionValue;
} SztProtExtnField_E_RABDataFwdingItem_ExtIEs;

typedef struct s1apProtExtnCont_E_RABDataFwdingItem_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_E_RABDataFwdingItem_ExtIEs *member;
}SztProtExtnCont_E_RABDataFwdingItem_ExtIEs;

typedef struct s1apE_RABDataFwdingItem
{
 TknPres pres;
 SztE_RAB_ID e_RAB_ID;
 SztTportLyrAddr dL_transportLyrAddr;
 SztGTP_TEID dL_gTP_TEID;
 SztTportLyrAddr uL_TportLyrAddr;
 SztGTP_TEID uL_GTP_TEID;
 SztProtExtnCont_E_RABDataFwdingItem_ExtIEs iE_Extns;
} SztE_RABDataFwdingItem;

typedef struct s1ap_ValueE_RABDataFwdingItemIEsCls{
 union {
  SztE_RABDataFwdingItem sztE_RABDataFwdingItem;
 } u;
} Szt_ValueE_RABDataFwdingItemIEsCls;
typedef struct s1apProtIE_Field_E_RABDataFwdingItemIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABDataFwdingItemIEsCls value;
} SztProtIE_Field_E_RABDataFwdingItemIEs;


typedef SztProtIE_Field_E_RABDataFwdingItemIEs SztProtIE_SingleCont_E_RABDataFwdingItemIEs;
typedef struct s1apProtIE_ContLst_E_RABDataFwdingItemIEs
{
 TknU16 noComp;
 SztProtIE_SingleCont_E_RABDataFwdingItemIEs *member;
}SztProtIE_ContLst_E_RABDataFwdingItemIEs;


typedef SztProtIE_ContLst_E_RABDataFwdingItemIEs SztE_RAB_IE_ContLst_E_RABDataFwdingItemIEs;

typedef SztE_RAB_IE_ContLst_E_RABDataFwdingItemIEs SztE_RABSubjtoDataFwdingLst;
typedef struct s1ap_ValueHovrCmmdIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztHovrTyp sztHovrTyp;
  SztNASSecurParamsfromE_UTRAN sztNASSecurParamsfromE_UTRAN;
  SztE_RABSubjtoDataFwdingLst sztE_RABSubjtoDataFwdingLst;
  SztE_RABLst sztE_RABLst;
  SztTget_ToSrc_TprntCont sztid_Tget_ToSrc_TprntCont;
  SztTget_ToSrc_TprntCont sztid_Tget_ToSrc_TprntCont_Secondary;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueHovrCmmdIEsCls;
typedef struct s1apProtIE_Field_HovrCmmdIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueHovrCmmdIEsCls value;
} SztProtIE_Field_HovrCmmdIEs;

typedef struct s1apProtIE_Cont_HovrCmmdIEs
{
 TknU16 noComp;
 SztProtIE_Field_HovrCmmdIEs *member;
}SztProtIE_Cont_HovrCmmdIEs;

typedef struct s1apHovrCmmd
{
 TknPres pres;
 SztProtIE_Cont_HovrCmmdIEs protocolIEs;
} SztHovrCmmd;

typedef struct s1ap_ValueHovrPrepFailIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztCause sztCause;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueHovrPrepFailIEsCls;
typedef struct s1apProtIE_Field_HovrPrepFailIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueHovrPrepFailIEsCls value;
} SztProtIE_Field_HovrPrepFailIEs;

typedef struct s1apProtIE_Cont_HovrPrepFailIEs
{
 TknU16 noComp;
 SztProtIE_Field_HovrPrepFailIEs *member;
}SztProtIE_Cont_HovrPrepFailIEs;

typedef struct s1apHovrPrepFail
{
 TknPres pres;
 SztProtIE_Cont_HovrPrepFailIEs protocolIEs;
} SztHovrPrepFail;

typedef struct s1ap_ExtnE_RABToBeSetupItemHOReq_ExtIEsCls{
 union {
  SztData_Fwding_Not_Possible sztData_Fwding_Not_Possible;
 } u;
} Szt_ExtnE_RABToBeSetupItemHOReq_ExtIEsCls;
typedef struct s1apProtExtnField_E_RABToBeSetupItemHOReq_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnE_RABToBeSetupItemHOReq_ExtIEsCls extensionValue;
} SztProtExtnField_E_RABToBeSetupItemHOReq_ExtIEs;

typedef struct s1apProtExtnCont_E_RABToBeSetupItemHOReq_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_E_RABToBeSetupItemHOReq_ExtIEs *member;
}SztProtExtnCont_E_RABToBeSetupItemHOReq_ExtIEs;

typedef struct s1apE_RABToBeSetupItemHOReq
{
 TknPres pres;
 SztE_RAB_ID e_RAB_ID;
 SztTportLyrAddr transportLyrAddr;
 SztGTP_TEID gTP_TEID;
 SztE_RABLvlQoSParams e_RABlevelQosParams;
 SztProtExtnCont_E_RABToBeSetupItemHOReq_ExtIEs iE_Extns;
} SztE_RABToBeSetupItemHOReq;

typedef struct s1ap_ValueE_RABToBeSetupItemHOReqIEsCls{
 union {
  SztE_RABToBeSetupItemHOReq sztE_RABToBeSetupItemHOReq;
 } u;
} Szt_ValueE_RABToBeSetupItemHOReqIEsCls;
typedef struct s1apProtIE_Field_E_RABToBeSetupItemHOReqIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABToBeSetupItemHOReqIEsCls value;
} SztProtIE_Field_E_RABToBeSetupItemHOReqIEs;


typedef SztProtIE_Field_E_RABToBeSetupItemHOReqIEs SztProtIE_SingleCont_E_RABToBeSetupItemHOReqIEs;
typedef struct s1apProtIE_ContLst_E_RABToBeSetupItemHOReqIEs
{
 TknU16 noComp;
 SztProtIE_SingleCont_E_RABToBeSetupItemHOReqIEs *member;
}SztProtIE_ContLst_E_RABToBeSetupItemHOReqIEs;


typedef SztProtIE_ContLst_E_RABToBeSetupItemHOReqIEs SztE_RAB_IE_ContLst_E_RABToBeSetupItemHOReqIEs;

typedef SztE_RAB_IE_ContLst_E_RABToBeSetupItemHOReqIEs SztE_RABToBeSetupLstHOReq;
typedef struct s1ap_ValueHovrRqstIEsCls{
 union {
  SztMME_UE_S1AP_ID sztid_MME_UE_S1AP_ID;
  SztHovrTyp sztHovrTyp;
  SztCause sztCause;
  SztUEAggMaxBitrate sztUEAggMaxBitrate;
  SztE_RABToBeSetupLstHOReq sztE_RABToBeSetupLstHOReq;
  SztSrc_ToTget_TprntCont sztSrc_ToTget_TprntCont;
  SztUESecurCapabilities sztUESecurCapabilities;
  SztHovrRestrnLst sztHovrRestrnLst;
  SztTraceActvn sztTraceActvn;
  SztRqstTyp sztRqstTyp;
  SztSRVCCOperationPossible sztSRVCCOperationPossible;
  SztSecurCntxt sztSecurCntxt;
  SztNASSecurParamstoE_UTRAN sztNASSecurParamstoE_UTRAN;
  SztCSG_Id sztCSG_Id;
  SztCSGMembershipStatus sztCSGMembershipStatus;
  SztGUMMEI sztGUMMEI;
  SztMME_UE_S1AP_ID sztid_MME_UE_S1AP_ID_2;
  SztManagementBasedMDTAllowed sztManagementBasedMDTAllowed;
  SztMDTPLMNLst sztMDTPLMNLst;
 } u;
} Szt_ValueHovrRqstIEsCls;
typedef struct s1apProtIE_Field_HovrRqstIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueHovrRqstIEsCls value;
} SztProtIE_Field_HovrRqstIEs;

typedef struct s1apProtIE_Cont_HovrRqstIEs
{
 TknU16 noComp;
 SztProtIE_Field_HovrRqstIEs *member;
}SztProtIE_Cont_HovrRqstIEs;

typedef struct s1apHovrRqst
{
 TknPres pres;
 SztProtIE_Cont_HovrRqstIEs protocolIEs;
} SztHovrRqst;

typedef struct s1ap_ExtnE_RABAdmtdItem_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnE_RABAdmtdItem_ExtIEsCls;
typedef struct s1apProtExtnField_E_RABAdmtdItem_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnE_RABAdmtdItem_ExtIEsCls extensionValue;
} SztProtExtnField_E_RABAdmtdItem_ExtIEs;

typedef struct s1apProtExtnCont_E_RABAdmtdItem_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_E_RABAdmtdItem_ExtIEs *member;
}SztProtExtnCont_E_RABAdmtdItem_ExtIEs;

typedef struct s1apE_RABAdmtdItem
{
 TknPres pres;
 SztE_RAB_ID e_RAB_ID;
 SztTportLyrAddr transportLyrAddr;
 SztGTP_TEID gTP_TEID;
 SztTportLyrAddr dL_transportLyrAddr;
 SztGTP_TEID dL_gTP_TEID;
 SztTportLyrAddr uL_TportLyrAddr;
 SztGTP_TEID uL_GTP_TEID;
 SztProtExtnCont_E_RABAdmtdItem_ExtIEs iE_Extns;
} SztE_RABAdmtdItem;

typedef struct s1ap_ValueE_RABAdmtdItemIEsCls{
 union {
  SztE_RABAdmtdItem sztE_RABAdmtdItem;
 } u;
} Szt_ValueE_RABAdmtdItemIEsCls;
typedef struct s1apProtIE_Field_E_RABAdmtdItemIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABAdmtdItemIEsCls value;
} SztProtIE_Field_E_RABAdmtdItemIEs;


typedef SztProtIE_Field_E_RABAdmtdItemIEs SztProtIE_SingleCont_E_RABAdmtdItemIEs;
typedef struct s1apProtIE_ContLst_E_RABAdmtdItemIEs
{
 TknU16 noComp;
 SztProtIE_SingleCont_E_RABAdmtdItemIEs *member;
}SztProtIE_ContLst_E_RABAdmtdItemIEs;


typedef SztProtIE_ContLst_E_RABAdmtdItemIEs SztE_RAB_IE_ContLst_E_RABAdmtdItemIEs;

typedef SztE_RAB_IE_ContLst_E_RABAdmtdItemIEs SztE_RABAdmtdLst;
typedef struct s1ap_ExtnE_RABFailedToSetupItemHOReqAckExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnE_RABFailedToSetupItemHOReqAckExtIEsCls;
typedef struct s1apProtExtnField_E_RABFailedToSetupItemHOReqAckExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnE_RABFailedToSetupItemHOReqAckExtIEsCls extensionValue;
} SztProtExtnField_E_RABFailedToSetupItemHOReqAckExtIEs;

typedef struct s1apProtExtnCont_E_RABFailedToSetupItemHOReqAckExtIEs
{
 TknU16 noComp;
 SztProtExtnField_E_RABFailedToSetupItemHOReqAckExtIEs *member;
}SztProtExtnCont_E_RABFailedToSetupItemHOReqAckExtIEs;

typedef struct s1apE_RABFailedToSetupItemHOReqAck
{
 TknPres pres;
 SztE_RAB_ID e_RAB_ID;
 SztCause cause;
 SztProtExtnCont_E_RABFailedToSetupItemHOReqAckExtIEs iE_Extns;
} SztE_RABFailedToSetupItemHOReqAck;

typedef struct s1ap_ValueE_RABFailedtoSetupItemHOReqAckIEsCls{
 union {
  SztE_RABFailedToSetupItemHOReqAck sztE_RABFailedToSetupItemHOReqAck;
 } u;
} Szt_ValueE_RABFailedtoSetupItemHOReqAckIEsCls;
typedef struct s1apProtIE_Field_E_RABFailedtoSetupItemHOReqAckIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABFailedtoSetupItemHOReqAckIEsCls value;
} SztProtIE_Field_E_RABFailedtoSetupItemHOReqAckIEs;


typedef SztProtIE_Field_E_RABFailedtoSetupItemHOReqAckIEs SztProtIE_SingleCont_E_RABFailedtoSetupItemHOReqAckIEs;
typedef struct s1apProtIE_ContLst_E_RABFailedtoSetupItemHOReqAckIEs
{
 TknU16 noComp;
 SztProtIE_SingleCont_E_RABFailedtoSetupItemHOReqAckIEs *member;
}SztProtIE_ContLst_E_RABFailedtoSetupItemHOReqAckIEs;


typedef SztProtIE_ContLst_E_RABFailedtoSetupItemHOReqAckIEs SztE_RAB_IE_ContLst_E_RABFailedtoSetupItemHOReqAckIEs;

typedef SztE_RAB_IE_ContLst_E_RABFailedtoSetupItemHOReqAckIEs SztE_RABFailedtoSetupLstHOReqAck;
typedef struct s1ap_ValueHovrRqstAckgIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztE_RABAdmtdLst sztE_RABAdmtdLst;
  SztE_RABFailedtoSetupLstHOReqAck sztE_RABFailedtoSetupLstHOReqAck;
  SztTget_ToSrc_TprntCont sztTget_ToSrc_TprntCont;
  SztCSG_Id sztCSG_Id;
  SztCriticalityDiag sztCriticalityDiag;
  SztCellAccessMode sztCellAccessMode;
 } u;
} Szt_ValueHovrRqstAckgIEsCls;
typedef struct s1apProtIE_Field_HovrRqstAckgIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueHovrRqstAckgIEsCls value;
} SztProtIE_Field_HovrRqstAckgIEs;

typedef struct s1apProtIE_Cont_HovrRqstAckgIEs
{
 TknU16 noComp;
 SztProtIE_Field_HovrRqstAckgIEs *member;
}SztProtIE_Cont_HovrRqstAckgIEs;

typedef struct s1apHovrRqstAckg
{
 TknPres pres;
 SztProtIE_Cont_HovrRqstAckgIEs protocolIEs;
} SztHovrRqstAckg;

typedef struct s1ap_ValueHovrFailIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztCause sztCause;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueHovrFailIEsCls;
typedef struct s1apProtIE_Field_HovrFailIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueHovrFailIEsCls value;
} SztProtIE_Field_HovrFailIEs;

typedef struct s1apProtIE_Cont_HovrFailIEs
{
 TknU16 noComp;
 SztProtIE_Field_HovrFailIEs *member;
}SztProtIE_Cont_HovrFailIEs;

typedef struct s1apHovrFail
{
 TknPres pres;
 SztProtIE_Cont_HovrFailIEs protocolIEs;
} SztHovrFail;

typedef struct s1ap_ValueHovrNtfyIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztEUTRAN_CGI sztEUTRAN_CGI;
  SztTAI sztTAI;
  SztTunnelInform sztTunnelInform;
 } u;
} Szt_ValueHovrNtfyIEsCls;
typedef struct s1apProtIE_Field_HovrNtfyIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueHovrNtfyIEsCls value;
} SztProtIE_Field_HovrNtfyIEs;

typedef struct s1apProtIE_Cont_HovrNtfyIEs
{
 TknU16 noComp;
 SztProtIE_Field_HovrNtfyIEs *member;
}SztProtIE_Cont_HovrNtfyIEs;

typedef struct s1apHovrNtfy
{
 TknPres pres;
 SztProtIE_Cont_HovrNtfyIEs protocolIEs;
} SztHovrNtfy;

typedef struct s1ap_ExtnE_RABToBeSwedDLItem_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnE_RABToBeSwedDLItem_ExtIEsCls;
typedef struct s1apProtExtnField_E_RABToBeSwedDLItem_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnE_RABToBeSwedDLItem_ExtIEsCls extensionValue;
} SztProtExtnField_E_RABToBeSwedDLItem_ExtIEs;

typedef struct s1apProtExtnCont_E_RABToBeSwedDLItem_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_E_RABToBeSwedDLItem_ExtIEs *member;
}SztProtExtnCont_E_RABToBeSwedDLItem_ExtIEs;

typedef struct s1apE_RABToBeSwedDLItem
{
 TknPres pres;
 SztE_RAB_ID e_RAB_ID;
 SztTportLyrAddr transportLyrAddr;
 SztGTP_TEID gTP_TEID;
 SztProtExtnCont_E_RABToBeSwedDLItem_ExtIEs iE_Extns;
} SztE_RABToBeSwedDLItem;

typedef struct s1ap_ValueE_RABToBeSwedDLItemIEsCls{
 union {
  SztE_RABToBeSwedDLItem sztE_RABToBeSwedDLItem;
 } u;
} Szt_ValueE_RABToBeSwedDLItemIEsCls;
typedef struct s1apProtIE_Field_E_RABToBeSwedDLItemIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABToBeSwedDLItemIEsCls value;
} SztProtIE_Field_E_RABToBeSwedDLItemIEs;


typedef SztProtIE_Field_E_RABToBeSwedDLItemIEs SztProtIE_SingleCont_E_RABToBeSwedDLItemIEs;
typedef struct s1apProtIE_ContLst_E_RABToBeSwedDLItemIEs
{
 TknU16 noComp;
 SztProtIE_SingleCont_E_RABToBeSwedDLItemIEs *member;
}SztProtIE_ContLst_E_RABToBeSwedDLItemIEs;


typedef SztProtIE_ContLst_E_RABToBeSwedDLItemIEs SztE_RAB_IE_ContLst_E_RABToBeSwedDLItemIEs;

typedef SztE_RAB_IE_ContLst_E_RABToBeSwedDLItemIEs SztE_RABToBeSwedDLLst;
typedef struct s1ap_ValuePathSwRqstIEsCls{
 union {
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztE_RABToBeSwedDLLst sztE_RABToBeSwedDLLst;
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztEUTRAN_CGI sztEUTRAN_CGI;
  SztTAI sztTAI;
  SztUESecurCapabilities sztUESecurCapabilities;
  SztCSG_Id sztCSG_Id;
  SztCellAccessMode sztCellAccessMode;
  SztGUMMEI sztGUMMEI;
  SztCSGMembershipStatus sztCSGMembershipStatus;
  SztTunnelInform sztTunnelInform;
 } u;
} Szt_ValuePathSwRqstIEsCls;
typedef struct s1apProtIE_Field_PathSwRqstIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValuePathSwRqstIEsCls value;
} SztProtIE_Field_PathSwRqstIEs;

typedef struct s1apProtIE_Cont_PathSwRqstIEs
{
 TknU16 noComp;
 SztProtIE_Field_PathSwRqstIEs *member;
}SztProtIE_Cont_PathSwRqstIEs;

typedef struct s1apPathSwRqst
{
 TknPres pres;
 SztProtIE_Cont_PathSwRqstIEs protocolIEs;
} SztPathSwRqst;

typedef struct s1ap_ExtnE_RABToBeSwedULItem_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnE_RABToBeSwedULItem_ExtIEsCls;
typedef struct s1apProtExtnField_E_RABToBeSwedULItem_ExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnE_RABToBeSwedULItem_ExtIEsCls extensionValue;
} SztProtExtnField_E_RABToBeSwedULItem_ExtIEs;

typedef struct s1apProtExtnCont_E_RABToBeSwedULItem_ExtIEs
{
 TknU16 noComp;
 SztProtExtnField_E_RABToBeSwedULItem_ExtIEs *member;
}SztProtExtnCont_E_RABToBeSwedULItem_ExtIEs;

typedef struct s1apE_RABToBeSwedULItem
{
 TknPres pres;
 SztE_RAB_ID e_RAB_ID;
 SztTportLyrAddr transportLyrAddr;
 SztGTP_TEID gTP_TEID;
 SztProtExtnCont_E_RABToBeSwedULItem_ExtIEs iE_Extns;
} SztE_RABToBeSwedULItem;

typedef struct s1ap_ValueE_RABToBeSwedULItemIEsCls{
 union {
  SztE_RABToBeSwedULItem sztE_RABToBeSwedULItem;
 } u;
} Szt_ValueE_RABToBeSwedULItemIEsCls;
typedef struct s1apProtIE_Field_E_RABToBeSwedULItemIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABToBeSwedULItemIEsCls value;
} SztProtIE_Field_E_RABToBeSwedULItemIEs;


typedef SztProtIE_Field_E_RABToBeSwedULItemIEs SztProtIE_SingleCont_E_RABToBeSwedULItemIEs;
typedef struct s1apProtIE_ContLst_E_RABToBeSwedULItemIEs
{
 TknU16 noComp;
 SztProtIE_SingleCont_E_RABToBeSwedULItemIEs *member;
}SztProtIE_ContLst_E_RABToBeSwedULItemIEs;


typedef SztProtIE_ContLst_E_RABToBeSwedULItemIEs SztE_RAB_IE_ContLst_E_RABToBeSwedULItemIEs;

typedef SztE_RAB_IE_ContLst_E_RABToBeSwedULItemIEs SztE_RABToBeSwedULLst;
typedef struct s1ap_ValuePathSwRqstAckgIEsCls{
 union {
  SztMME_UE_S1AP_ID sztid_MME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztUEAggMaxBitrate sztUEAggMaxBitrate;
  SztE_RABToBeSwedULLst sztE_RABToBeSwedULLst;
  SztE_RABLst sztE_RABLst;
  SztSecurCntxt sztSecurCntxt;
  SztCriticalityDiag sztCriticalityDiag;
  SztMME_UE_S1AP_ID sztid_MME_UE_S1AP_ID_2;
  SztCSGMembershipStatus sztCSGMembershipStatus;
 } u;
} Szt_ValuePathSwRqstAckgIEsCls;
typedef struct s1apProtIE_Field_PathSwRqstAckgIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValuePathSwRqstAckgIEsCls value;
} SztProtIE_Field_PathSwRqstAckgIEs;

typedef struct s1apProtIE_Cont_PathSwRqstAckgIEs
{
 TknU16 noComp;
 SztProtIE_Field_PathSwRqstAckgIEs *member;
}SztProtIE_Cont_PathSwRqstAckgIEs;

typedef struct s1apPathSwRqstAckg
{
 TknPres pres;
 SztProtIE_Cont_PathSwRqstAckgIEs protocolIEs;
} SztPathSwRqstAckg;

typedef struct s1ap_ValuePathSwRqstFailIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztCause sztCause;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValuePathSwRqstFailIEsCls;
typedef struct s1apProtIE_Field_PathSwRqstFailIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValuePathSwRqstFailIEsCls value;
} SztProtIE_Field_PathSwRqstFailIEs;

typedef struct s1apProtIE_Cont_PathSwRqstFailIEs
{
 TknU16 noComp;
 SztProtIE_Field_PathSwRqstFailIEs *member;
}SztProtIE_Cont_PathSwRqstFailIEs;

typedef struct s1apPathSwRqstFail
{
 TknPres pres;
 SztProtIE_Cont_PathSwRqstFailIEs protocolIEs;
} SztPathSwRqstFail;

typedef struct s1ap_ValueHovrCancelIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztCause sztCause;
 } u;
} Szt_ValueHovrCancelIEsCls;
typedef struct s1apProtIE_Field_HovrCancelIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueHovrCancelIEsCls value;
} SztProtIE_Field_HovrCancelIEs;

typedef struct s1apProtIE_Cont_HovrCancelIEs
{
 TknU16 noComp;
 SztProtIE_Field_HovrCancelIEs *member;
}SztProtIE_Cont_HovrCancelIEs;

typedef struct s1apHovrCancel
{
 TknPres pres;
 SztProtIE_Cont_HovrCancelIEs protocolIEs;
} SztHovrCancel;

typedef struct s1ap_ValueHovrCancelAckgIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueHovrCancelAckgIEsCls;
typedef struct s1apProtIE_Field_HovrCancelAckgIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueHovrCancelAckgIEsCls value;
} SztProtIE_Field_HovrCancelAckgIEs;

typedef struct s1apProtIE_Cont_HovrCancelAckgIEs
{
 TknU16 noComp;
 SztProtIE_Field_HovrCancelAckgIEs *member;
}SztProtIE_Cont_HovrCancelAckgIEs;

typedef struct s1apHovrCancelAckg
{
 TknPres pres;
 SztProtIE_Cont_HovrCancelAckgIEs protocolIEs;
} SztHovrCancelAckg;

typedef struct s1ap_ExtnE_RABToBeSetupItemBrSUReqExtIEsCls{
 union {
  SztCorrelation_ID sztCorrelation_ID;
 } u;
} Szt_ExtnE_RABToBeSetupItemBrSUReqExtIEsCls;
typedef struct s1apProtExtnField_E_RABToBeSetupItemBrSUReqExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnE_RABToBeSetupItemBrSUReqExtIEsCls extensionValue;
} SztProtExtnField_E_RABToBeSetupItemBrSUReqExtIEs;

typedef struct s1apProtExtnCont_E_RABToBeSetupItemBrSUReqExtIEs
{
 TknU16 noComp;
 SztProtExtnField_E_RABToBeSetupItemBrSUReqExtIEs *member;
}SztProtExtnCont_E_RABToBeSetupItemBrSUReqExtIEs;

typedef struct s1apE_RABToBeSetupItemBrSUReq
{
 TknPres pres;
 SztE_RAB_ID e_RAB_ID;
 SztE_RABLvlQoSParams e_RABlevelQoSParams;
 SztTportLyrAddr transportLyrAddr;
 SztGTP_TEID gTP_TEID;
 SztNAS_PDU nAS_PDU;
 SztProtExtnCont_E_RABToBeSetupItemBrSUReqExtIEs iE_Extns;
} SztE_RABToBeSetupItemBrSUReq;

typedef struct s1ap_ValueE_RABToBeSetupItemBrSUReqIEsCls{
 union {
  SztE_RABToBeSetupItemBrSUReq sztE_RABToBeSetupItemBrSUReq;
 } u;
} Szt_ValueE_RABToBeSetupItemBrSUReqIEsCls;
typedef struct s1apProtIE_Field_E_RABToBeSetupItemBrSUReqIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABToBeSetupItemBrSUReqIEsCls value;
} SztProtIE_Field_E_RABToBeSetupItemBrSUReqIEs;


typedef SztProtIE_Field_E_RABToBeSetupItemBrSUReqIEs SztProtIE_SingleCont_E_RABToBeSetupItemBrSUReqIEs;
typedef struct s1apE_RABToBeSetupLstBrSUReq
{
 TknU16 noComp;
 SztProtIE_SingleCont_E_RABToBeSetupItemBrSUReqIEs *member;
}SztE_RABToBeSetupLstBrSUReq;

typedef struct s1ap_ValueE_RABSetupRqstIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztUEAggMaxBitrate sztUEAggMaxBitrate;
  SztE_RABToBeSetupLstBrSUReq sztE_RABToBeSetupLstBrSUReq;
 } u;
} Szt_ValueE_RABSetupRqstIEsCls;
typedef struct s1apProtIE_Field_E_RABSetupRqstIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABSetupRqstIEsCls value;
} SztProtIE_Field_E_RABSetupRqstIEs;

typedef struct s1apProtIE_Cont_E_RABSetupRqstIEs
{
 TknU16 noComp;
 SztProtIE_Field_E_RABSetupRqstIEs *member;
}SztProtIE_Cont_E_RABSetupRqstIEs;

typedef struct s1apE_RABSetupRqst
{
 TknPres pres;
 SztProtIE_Cont_E_RABSetupRqstIEs protocolIEs;
} SztE_RABSetupRqst;

typedef struct s1ap_ExtnE_RABSetupItemBrSUResExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnE_RABSetupItemBrSUResExtIEsCls;
typedef struct s1apProtExtnField_E_RABSetupItemBrSUResExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnE_RABSetupItemBrSUResExtIEsCls extensionValue;
} SztProtExtnField_E_RABSetupItemBrSUResExtIEs;

typedef struct s1apProtExtnCont_E_RABSetupItemBrSUResExtIEs
{
 TknU16 noComp;
 SztProtExtnField_E_RABSetupItemBrSUResExtIEs *member;
}SztProtExtnCont_E_RABSetupItemBrSUResExtIEs;

typedef struct s1apE_RABSetupItemBrSURes
{
 TknPres pres;
 SztE_RAB_ID e_RAB_ID;
 SztTportLyrAddr transportLyrAddr;
 SztGTP_TEID gTP_TEID;
 SztProtExtnCont_E_RABSetupItemBrSUResExtIEs iE_Extns;
} SztE_RABSetupItemBrSURes;

typedef struct s1ap_ValueE_RABSetupItemBrSUResIEsCls{
 union {
  SztE_RABSetupItemBrSURes sztE_RABSetupItemBrSURes;
 } u;
} Szt_ValueE_RABSetupItemBrSUResIEsCls;
typedef struct s1apProtIE_Field_E_RABSetupItemBrSUResIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABSetupItemBrSUResIEsCls value;
} SztProtIE_Field_E_RABSetupItemBrSUResIEs;


typedef SztProtIE_Field_E_RABSetupItemBrSUResIEs SztProtIE_SingleCont_E_RABSetupItemBrSUResIEs;
typedef struct s1apE_RABSetupLstBrSURes
{
 TknU16 noComp;
 SztProtIE_SingleCont_E_RABSetupItemBrSUResIEs *member;
}SztE_RABSetupLstBrSURes;

typedef struct s1ap_ValueE_RABSetupRespIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztE_RABSetupLstBrSURes sztE_RABSetupLstBrSURes;
  SztE_RABLst sztE_RABLst;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueE_RABSetupRespIEsCls;
typedef struct s1apProtIE_Field_E_RABSetupRespIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABSetupRespIEsCls value;
} SztProtIE_Field_E_RABSetupRespIEs;

typedef struct s1apProtIE_Cont_E_RABSetupRespIEs
{
 TknU16 noComp;
 SztProtIE_Field_E_RABSetupRespIEs *member;
}SztProtIE_Cont_E_RABSetupRespIEs;

typedef struct s1apE_RABSetupResp
{
 TknPres pres;
 SztProtIE_Cont_E_RABSetupRespIEs protocolIEs;
} SztE_RABSetupResp;

typedef struct s1ap_ExtnE_RABToBeMdfyItemBrModReqExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnE_RABToBeMdfyItemBrModReqExtIEsCls;
typedef struct s1apProtExtnField_E_RABToBeMdfyItemBrModReqExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnE_RABToBeMdfyItemBrModReqExtIEsCls extensionValue;
} SztProtExtnField_E_RABToBeMdfyItemBrModReqExtIEs;

typedef struct s1apProtExtnCont_E_RABToBeMdfyItemBrModReqExtIEs
{
 TknU16 noComp;
 SztProtExtnField_E_RABToBeMdfyItemBrModReqExtIEs *member;
}SztProtExtnCont_E_RABToBeMdfyItemBrModReqExtIEs;

typedef struct s1apE_RABToBeMdfdItemBrModReq
{
 TknPres pres;
 SztE_RAB_ID e_RAB_ID;
 SztE_RABLvlQoSParams e_RABLvlQoSParams;
 SztNAS_PDU nAS_PDU;
 SztProtExtnCont_E_RABToBeMdfyItemBrModReqExtIEs iE_Extns;
} SztE_RABToBeMdfdItemBrModReq;

typedef struct s1ap_ValueE_RABToBeMdfdItemBrModReqIEsCls{
 union {
  SztE_RABToBeMdfdItemBrModReq sztE_RABToBeMdfdItemBrModReq;
 } u;
} Szt_ValueE_RABToBeMdfdItemBrModReqIEsCls;
typedef struct s1apProtIE_Field_E_RABToBeMdfdItemBrModReqIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABToBeMdfdItemBrModReqIEsCls value;
} SztProtIE_Field_E_RABToBeMdfdItemBrModReqIEs;


typedef SztProtIE_Field_E_RABToBeMdfdItemBrModReqIEs SztProtIE_SingleCont_E_RABToBeMdfdItemBrModReqIEs;
typedef struct s1apE_RABToBeMdfdLstBrModReq
{
 TknU16 noComp;
 SztProtIE_SingleCont_E_RABToBeMdfdItemBrModReqIEs *member;
}SztE_RABToBeMdfdLstBrModReq;

typedef struct s1ap_ValueE_RABMdfyRqstIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztUEAggMaxBitrate sztUEAggMaxBitrate;
  SztE_RABToBeMdfdLstBrModReq sztE_RABToBeMdfdLstBrModReq;
 } u;
} Szt_ValueE_RABMdfyRqstIEsCls;
typedef struct s1apProtIE_Field_E_RABMdfyRqstIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABMdfyRqstIEsCls value;
} SztProtIE_Field_E_RABMdfyRqstIEs;

typedef struct s1apProtIE_Cont_E_RABMdfyRqstIEs
{
 TknU16 noComp;
 SztProtIE_Field_E_RABMdfyRqstIEs *member;
}SztProtIE_Cont_E_RABMdfyRqstIEs;

typedef struct s1apE_RABMdfyRqst
{
 TknPres pres;
 SztProtIE_Cont_E_RABMdfyRqstIEs protocolIEs;
} SztE_RABMdfyRqst;

typedef struct s1ap_ExtnE_RABMdfyItemBrModResExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnE_RABMdfyItemBrModResExtIEsCls;
typedef struct s1apProtExtnField_E_RABMdfyItemBrModResExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnE_RABMdfyItemBrModResExtIEsCls extensionValue;
} SztProtExtnField_E_RABMdfyItemBrModResExtIEs;

typedef struct s1apProtExtnCont_E_RABMdfyItemBrModResExtIEs
{
 TknU16 noComp;
 SztProtExtnField_E_RABMdfyItemBrModResExtIEs *member;
}SztProtExtnCont_E_RABMdfyItemBrModResExtIEs;

typedef struct s1apE_RABMdfyItemBrModRes
{
 TknPres pres;
 SztE_RAB_ID e_RAB_ID;
 SztProtExtnCont_E_RABMdfyItemBrModResExtIEs iE_Extns;
} SztE_RABMdfyItemBrModRes;

typedef struct s1ap_ValueE_RABMdfyItemBrModResIEsCls{
 union {
  SztE_RABMdfyItemBrModRes sztE_RABMdfyItemBrModRes;
 } u;
} Szt_ValueE_RABMdfyItemBrModResIEsCls;
typedef struct s1apProtIE_Field_E_RABMdfyItemBrModResIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABMdfyItemBrModResIEsCls value;
} SztProtIE_Field_E_RABMdfyItemBrModResIEs;


typedef SztProtIE_Field_E_RABMdfyItemBrModResIEs SztProtIE_SingleCont_E_RABMdfyItemBrModResIEs;
typedef struct s1apE_RABMdfyLstBrModRes
{
 TknU16 noComp;
 SztProtIE_SingleCont_E_RABMdfyItemBrModResIEs *member;
}SztE_RABMdfyLstBrModRes;

typedef struct s1ap_ValueE_RABMdfyRespIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztE_RABMdfyLstBrModRes sztE_RABMdfyLstBrModRes;
  SztE_RABLst sztE_RABLst;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueE_RABMdfyRespIEsCls;
typedef struct s1apProtIE_Field_E_RABMdfyRespIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABMdfyRespIEsCls value;
} SztProtIE_Field_E_RABMdfyRespIEs;

typedef struct s1apProtIE_Cont_E_RABMdfyRespIEs
{
 TknU16 noComp;
 SztProtIE_Field_E_RABMdfyRespIEs *member;
}SztProtIE_Cont_E_RABMdfyRespIEs;

typedef struct s1apE_RABMdfyResp
{
 TknPres pres;
 SztProtIE_Cont_E_RABMdfyRespIEs protocolIEs;
} SztE_RABMdfyResp;

typedef struct s1ap_ValueE_RABRlsCmmdIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztUEAggMaxBitrate sztUEAggMaxBitrate;
  SztE_RABLst sztE_RABLst;
  SztNAS_PDU sztNAS_PDU;
 } u;
} Szt_ValueE_RABRlsCmmdIEsCls;
typedef struct s1apProtIE_Field_E_RABRlsCmmdIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABRlsCmmdIEsCls value;
} SztProtIE_Field_E_RABRlsCmmdIEs;

typedef struct s1apProtIE_Cont_E_RABRlsCmmdIEs
{
 TknU16 noComp;
 SztProtIE_Field_E_RABRlsCmmdIEs *member;
}SztProtIE_Cont_E_RABRlsCmmdIEs;

typedef struct s1apE_RABRlsCmmd
{
 TknPres pres;
 SztProtIE_Cont_E_RABRlsCmmdIEs protocolIEs;
} SztE_RABRlsCmmd;

typedef struct s1ap_ExtnE_RABRlsItemBrRelCompExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnE_RABRlsItemBrRelCompExtIEsCls;
typedef struct s1apProtExtnField_E_RABRlsItemBrRelCompExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnE_RABRlsItemBrRelCompExtIEsCls extensionValue;
} SztProtExtnField_E_RABRlsItemBrRelCompExtIEs;

typedef struct s1apProtExtnCont_E_RABRlsItemBrRelCompExtIEs
{
 TknU16 noComp;
 SztProtExtnField_E_RABRlsItemBrRelCompExtIEs *member;
}SztProtExtnCont_E_RABRlsItemBrRelCompExtIEs;

typedef struct s1apE_RABRlsItemBrRelComp
{
 TknPres pres;
 SztE_RAB_ID e_RAB_ID;
 SztProtExtnCont_E_RABRlsItemBrRelCompExtIEs iE_Extns;
} SztE_RABRlsItemBrRelComp;

typedef struct s1ap_ValueE_RABRlsItemBrRelCompIEsCls{
 union {
  SztE_RABRlsItemBrRelComp sztE_RABRlsItemBrRelComp;
 } u;
} Szt_ValueE_RABRlsItemBrRelCompIEsCls;
typedef struct s1apProtIE_Field_E_RABRlsItemBrRelCompIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABRlsItemBrRelCompIEsCls value;
} SztProtIE_Field_E_RABRlsItemBrRelCompIEs;


typedef SztProtIE_Field_E_RABRlsItemBrRelCompIEs SztProtIE_SingleCont_E_RABRlsItemBrRelCompIEs;
typedef struct s1apE_RABRlsLstBrRelComp
{
 TknU16 noComp;
 SztProtIE_SingleCont_E_RABRlsItemBrRelCompIEs *member;
}SztE_RABRlsLstBrRelComp;

typedef struct s1ap_ValueE_RABRlsRespIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztE_RABRlsLstBrRelComp sztE_RABRlsLstBrRelComp;
  SztE_RABLst sztE_RABLst;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueE_RABRlsRespIEsCls;
typedef struct s1apProtIE_Field_E_RABRlsRespIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABRlsRespIEsCls value;
} SztProtIE_Field_E_RABRlsRespIEs;

typedef struct s1apProtIE_Cont_E_RABRlsRespIEs
{
 TknU16 noComp;
 SztProtIE_Field_E_RABRlsRespIEs *member;
}SztProtIE_Cont_E_RABRlsRespIEs;

typedef struct s1apE_RABRlsResp
{
 TknPres pres;
 SztProtIE_Cont_E_RABRlsRespIEs protocolIEs;
} SztE_RABRlsResp;

typedef struct s1ap_ValueE_RABRlsIndIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztE_RABLst sztE_RABLst;
 } u;
} Szt_ValueE_RABRlsIndIEsCls;
typedef struct s1apProtIE_Field_E_RABRlsIndIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABRlsIndIEsCls value;
} SztProtIE_Field_E_RABRlsIndIEs;

typedef struct s1apProtIE_Cont_E_RABRlsIndIEs
{
 TknU16 noComp;
 SztProtIE_Field_E_RABRlsIndIEs *member;
}SztProtIE_Cont_E_RABRlsIndIEs;

typedef struct s1apE_RABRlsInd
{
 TknPres pres;
 SztProtIE_Cont_E_RABRlsIndIEs protocolIEs;
} SztE_RABRlsInd;

typedef struct s1ap_ExtnE_RABToBeSetupItemCtxtSUReqExtIEsCls{
 union {
  SztCorrelation_ID sztCorrelation_ID;
 } u;
} Szt_ExtnE_RABToBeSetupItemCtxtSUReqExtIEsCls;
typedef struct s1apProtExtnField_E_RABToBeSetupItemCtxtSUReqExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnE_RABToBeSetupItemCtxtSUReqExtIEsCls extensionValue;
} SztProtExtnField_E_RABToBeSetupItemCtxtSUReqExtIEs;

typedef struct s1apProtExtnCont_E_RABToBeSetupItemCtxtSUReqExtIEs
{
 TknU16 noComp;
 SztProtExtnField_E_RABToBeSetupItemCtxtSUReqExtIEs *member;
}SztProtExtnCont_E_RABToBeSetupItemCtxtSUReqExtIEs;

typedef struct s1apE_RABToBeSetupItemCtxtSUReq
{
 TknPres pres;
 SztE_RAB_ID e_RAB_ID;
 SztE_RABLvlQoSParams e_RABlevelQoSParams;
 SztTportLyrAddr transportLyrAddr;
 SztGTP_TEID gTP_TEID;
 SztNAS_PDU nAS_PDU;
 SztProtExtnCont_E_RABToBeSetupItemCtxtSUReqExtIEs iE_Extns;
} SztE_RABToBeSetupItemCtxtSUReq;

typedef struct s1ap_ValueE_RABToBeSetupItemCtxtSUReqIEsCls{
 union {
  SztE_RABToBeSetupItemCtxtSUReq sztE_RABToBeSetupItemCtxtSUReq;
 } u;
} Szt_ValueE_RABToBeSetupItemCtxtSUReqIEsCls;
typedef struct s1apProtIE_Field_E_RABToBeSetupItemCtxtSUReqIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABToBeSetupItemCtxtSUReqIEsCls value;
} SztProtIE_Field_E_RABToBeSetupItemCtxtSUReqIEs;


typedef SztProtIE_Field_E_RABToBeSetupItemCtxtSUReqIEs SztProtIE_SingleCont_E_RABToBeSetupItemCtxtSUReqIEs;
typedef struct s1apE_RABToBeSetupLstCtxtSUReq
{
 TknU16 noComp;
 SztProtIE_SingleCont_E_RABToBeSetupItemCtxtSUReqIEs *member;
}SztE_RABToBeSetupLstCtxtSUReq;

typedef struct s1ap_ValueInitCntxtSetupRqstIEsCls{
 union {
  SztMME_UE_S1AP_ID sztid_MME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztUEAggMaxBitrate sztUEAggMaxBitrate;
  SztE_RABToBeSetupLstCtxtSUReq sztE_RABToBeSetupLstCtxtSUReq;
  SztUESecurCapabilities sztUESecurCapabilities;
  SztSecurKey sztSecurKey;
  SztTraceActvn sztTraceActvn;
  SztHovrRestrnLst sztHovrRestrnLst;
  SztUERadioCapblty sztUERadioCapblty;
  SztSubscriberProfileIDforRFP sztSubscriberProfileIDforRFP;
  SztCSFallbackIndicator sztCSFallbackIndicator;
  SztSRVCCOperationPossible sztSRVCCOperationPossible;
  SztCSGMembershipStatus sztCSGMembershipStatus;
  SztLAI sztLAI;
  SztGUMMEI sztGUMMEI;
  SztMME_UE_S1AP_ID sztid_MME_UE_S1AP_ID_2;
  SztManagementBasedMDTAllowed sztManagementBasedMDTAllowed;
  SztMDTPLMNLst sztMDTPLMNLst;
 } u;
} Szt_ValueInitCntxtSetupRqstIEsCls;
typedef struct s1apProtIE_Field_InitCntxtSetupRqstIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueInitCntxtSetupRqstIEsCls value;
} SztProtIE_Field_InitCntxtSetupRqstIEs;

typedef struct s1apProtIE_Cont_InitCntxtSetupRqstIEs
{
 TknU16 noComp;
 SztProtIE_Field_InitCntxtSetupRqstIEs *member;
}SztProtIE_Cont_InitCntxtSetupRqstIEs;

typedef struct s1apInitCntxtSetupRqst
{
 TknPres pres;
 SztProtIE_Cont_InitCntxtSetupRqstIEs protocolIEs;
} SztInitCntxtSetupRqst;

typedef struct s1ap_ExtnE_RABSetupItemCtxtSUResExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnE_RABSetupItemCtxtSUResExtIEsCls;
typedef struct s1apProtExtnField_E_RABSetupItemCtxtSUResExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnE_RABSetupItemCtxtSUResExtIEsCls extensionValue;
} SztProtExtnField_E_RABSetupItemCtxtSUResExtIEs;

typedef struct s1apProtExtnCont_E_RABSetupItemCtxtSUResExtIEs
{
 TknU16 noComp;
 SztProtExtnField_E_RABSetupItemCtxtSUResExtIEs *member;
}SztProtExtnCont_E_RABSetupItemCtxtSUResExtIEs;

typedef struct s1apE_RABSetupItemCtxtSURes
{
 TknPres pres;
 SztE_RAB_ID e_RAB_ID;
 SztTportLyrAddr transportLyrAddr;
 SztGTP_TEID gTP_TEID;
 SztProtExtnCont_E_RABSetupItemCtxtSUResExtIEs iE_Extns;
} SztE_RABSetupItemCtxtSURes;

typedef struct s1ap_ValueE_RABSetupItemCtxtSUResIEsCls{
 union {
  SztE_RABSetupItemCtxtSURes sztE_RABSetupItemCtxtSURes;
 } u;
} Szt_ValueE_RABSetupItemCtxtSUResIEsCls;
typedef struct s1apProtIE_Field_E_RABSetupItemCtxtSUResIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueE_RABSetupItemCtxtSUResIEsCls value;
} SztProtIE_Field_E_RABSetupItemCtxtSUResIEs;


typedef SztProtIE_Field_E_RABSetupItemCtxtSUResIEs SztProtIE_SingleCont_E_RABSetupItemCtxtSUResIEs;
typedef struct s1apE_RABSetupLstCtxtSURes
{
 TknU16 noComp;
 SztProtIE_SingleCont_E_RABSetupItemCtxtSUResIEs *member;
}SztE_RABSetupLstCtxtSURes;

typedef struct s1ap_ValueInitCntxtSetupRespIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztE_RABSetupLstCtxtSURes sztE_RABSetupLstCtxtSURes;
  SztE_RABLst sztE_RABLst;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueInitCntxtSetupRespIEsCls;
typedef struct s1apProtIE_Field_InitCntxtSetupRespIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueInitCntxtSetupRespIEsCls value;
} SztProtIE_Field_InitCntxtSetupRespIEs;

typedef struct s1apProtIE_Cont_InitCntxtSetupRespIEs
{
 TknU16 noComp;
 SztProtIE_Field_InitCntxtSetupRespIEs *member;
}SztProtIE_Cont_InitCntxtSetupRespIEs;

typedef struct s1apInitCntxtSetupResp
{
 TknPres pres;
 SztProtIE_Cont_InitCntxtSetupRespIEs protocolIEs;
} SztInitCntxtSetupResp;

typedef struct s1ap_ValueInitCntxtSetupFailIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztCause sztCause;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueInitCntxtSetupFailIEsCls;
typedef struct s1apProtIE_Field_InitCntxtSetupFailIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueInitCntxtSetupFailIEsCls value;
} SztProtIE_Field_InitCntxtSetupFailIEs;

typedef struct s1apProtIE_Cont_InitCntxtSetupFailIEs
{
 TknU16 noComp;
 SztProtIE_Field_InitCntxtSetupFailIEs *member;
}SztProtIE_Cont_InitCntxtSetupFailIEs;

typedef struct s1apInitCntxtSetupFail
{
 TknPres pres;
 SztProtIE_Cont_InitCntxtSetupFailIEs protocolIEs;
} SztInitCntxtSetupFail;

typedef struct s1ap_ExtnTAIItemExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ExtnTAIItemExtIEsCls;
typedef struct s1apProtExtnField_TAIItemExtIEs
{
 TknPres pres;
 SztProtExtnID id;
 SztCriticality criticality;
 Szt_ExtnTAIItemExtIEsCls extensionValue;
} SztProtExtnField_TAIItemExtIEs;

typedef struct s1apProtExtnCont_TAIItemExtIEs
{
 TknU16 noComp;
 SztProtExtnField_TAIItemExtIEs *member;
}SztProtExtnCont_TAIItemExtIEs;

typedef struct s1apTAIItem
{
 TknPres pres;
 SztTAI tAI;
 SztProtExtnCont_TAIItemExtIEs iE_Extns;
} SztTAIItem;

typedef struct s1ap_ValueTAIItemIEsCls{
 union {
  SztTAIItem sztTAIItem;
 } u;
} Szt_ValueTAIItemIEsCls;
typedef struct s1apProtIE_Field_TAIItemIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueTAIItemIEsCls value;
} SztProtIE_Field_TAIItemIEs;


typedef SztProtIE_Field_TAIItemIEs SztProtIE_SingleCont_TAIItemIEs;
typedef struct s1apTAILst
{
 TknU16 noComp;
 SztProtIE_SingleCont_TAIItemIEs *member;
}SztTAILst;

typedef struct s1ap_ValuePagIEsCls{
 union {
  SztUEIdentityIdxValue sztUEIdentityIdxValue;
  SztUEPagID sztUEPagID;
  SztPagDRX sztPagDRX;
  SztCNDomain sztCNDomain;
  SztTAILst sztTAILst;
  SztCSG_IdLst sztCSG_IdLst;
  SztPagPriority sztPagPriority;
 } u;
} Szt_ValuePagIEsCls;
typedef struct s1apProtIE_Field_PagIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValuePagIEsCls value;
} SztProtIE_Field_PagIEs;

typedef struct s1apProtIE_Cont_PagIEs
{
 TknU16 noComp;
 SztProtIE_Field_PagIEs *member;
}SztProtIE_Cont_PagIEs;

typedef struct s1apPag
{
 TknPres pres;
 SztProtIE_Cont_PagIEs protocolIEs;
} SztPag;

typedef struct s1ap_ValueUECntxtRlsRqst_IEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztCause sztCause;
  SztGWCntxtRlsInd sztGWCntxtRlsInd;
 } u;
} Szt_ValueUECntxtRlsRqst_IEsCls;
typedef struct s1apProtIE_Field_UECntxtRlsRqst_IEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueUECntxtRlsRqst_IEsCls value;
} SztProtIE_Field_UECntxtRlsRqst_IEs;

typedef struct s1apProtIE_Cont_UECntxtRlsRqst_IEs
{
 TknU16 noComp;
 SztProtIE_Field_UECntxtRlsRqst_IEs *member;
}SztProtIE_Cont_UECntxtRlsRqst_IEs;

typedef struct s1apUECntxtRlsRqst
{
 TknPres pres;
 SztProtIE_Cont_UECntxtRlsRqst_IEs protocolIEs;
} SztUECntxtRlsRqst;

typedef struct s1ap_ValueUECntxtRlsCmmd_IEsCls{
 union {
  SztUE_S1AP_IDs sztUE_S1AP_IDs;
  SztCause sztCause;
 } u;
} Szt_ValueUECntxtRlsCmmd_IEsCls;
typedef struct s1apProtIE_Field_UECntxtRlsCmmd_IEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueUECntxtRlsCmmd_IEsCls value;
} SztProtIE_Field_UECntxtRlsCmmd_IEs;

typedef struct s1apProtIE_Cont_UECntxtRlsCmmd_IEs
{
 TknU16 noComp;
 SztProtIE_Field_UECntxtRlsCmmd_IEs *member;
}SztProtIE_Cont_UECntxtRlsCmmd_IEs;

typedef struct s1apUECntxtRlsCmmd
{
 TknPres pres;
 SztProtIE_Cont_UECntxtRlsCmmd_IEs protocolIEs;
} SztUECntxtRlsCmmd;

typedef struct s1ap_ValueUECntxtRlsComplete_IEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueUECntxtRlsComplete_IEsCls;
typedef struct s1apProtIE_Field_UECntxtRlsComplete_IEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueUECntxtRlsComplete_IEsCls value;
} SztProtIE_Field_UECntxtRlsComplete_IEs;

typedef struct s1apProtIE_Cont_UECntxtRlsComplete_IEs
{
 TknU16 noComp;
 SztProtIE_Field_UECntxtRlsComplete_IEs *member;
}SztProtIE_Cont_UECntxtRlsComplete_IEs;

typedef struct s1apUECntxtRlsComplete
{
 TknPres pres;
 SztProtIE_Cont_UECntxtRlsComplete_IEs protocolIEs;
} SztUECntxtRlsComplete;

typedef struct s1ap_ValueUECntxtModificationRqstIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztSecurKey sztSecurKey;
  SztSubscriberProfileIDforRFP sztSubscriberProfileIDforRFP;
  SztUEAggMaxBitrate sztUEAggMaxBitrate;
  SztCSFallbackIndicator sztCSFallbackIndicator;
  SztUESecurCapabilities sztUESecurCapabilities;
  SztCSGMembershipStatus sztCSGMembershipStatus;
  SztLAI sztLAI;
 } u;
} Szt_ValueUECntxtModificationRqstIEsCls;
typedef struct s1apProtIE_Field_UECntxtModificationRqstIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueUECntxtModificationRqstIEsCls value;
} SztProtIE_Field_UECntxtModificationRqstIEs;

typedef struct s1apProtIE_Cont_UECntxtModificationRqstIEs
{
 TknU16 noComp;
 SztProtIE_Field_UECntxtModificationRqstIEs *member;
}SztProtIE_Cont_UECntxtModificationRqstIEs;

typedef struct s1apUECntxtModificationRqst
{
 TknPres pres;
 SztProtIE_Cont_UECntxtModificationRqstIEs protocolIEs;
} SztUECntxtModificationRqst;

typedef struct s1ap_ValueUECntxtModificationRespIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueUECntxtModificationRespIEsCls;
typedef struct s1apProtIE_Field_UECntxtModificationRespIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueUECntxtModificationRespIEsCls value;
} SztProtIE_Field_UECntxtModificationRespIEs;

typedef struct s1apProtIE_Cont_UECntxtModificationRespIEs
{
 TknU16 noComp;
 SztProtIE_Field_UECntxtModificationRespIEs *member;
}SztProtIE_Cont_UECntxtModificationRespIEs;

typedef struct s1apUECntxtModificationResp
{
 TknPres pres;
 SztProtIE_Cont_UECntxtModificationRespIEs protocolIEs;
} SztUECntxtModificationResp;

typedef struct s1ap_ValueUECntxtModificationFailIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztCause sztCause;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueUECntxtModificationFailIEsCls;
typedef struct s1apProtIE_Field_UECntxtModificationFailIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueUECntxtModificationFailIEsCls value;
} SztProtIE_Field_UECntxtModificationFailIEs;

typedef struct s1apProtIE_Cont_UECntxtModificationFailIEs
{
 TknU16 noComp;
 SztProtIE_Field_UECntxtModificationFailIEs *member;
}SztProtIE_Cont_UECntxtModificationFailIEs;

typedef struct s1apUECntxtModificationFail
{
 TknPres pres;
 SztProtIE_Cont_UECntxtModificationFailIEs protocolIEs;
} SztUECntxtModificationFail;

typedef struct s1ap_ValueUERadioCapbltyMatchRqstIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztUERadioCapblty sztUERadioCapblty;
 } u;
} Szt_ValueUERadioCapbltyMatchRqstIEsCls;
typedef struct s1apProtIE_Field_UERadioCapbltyMatchRqstIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueUERadioCapbltyMatchRqstIEsCls value;
} SztProtIE_Field_UERadioCapbltyMatchRqstIEs;

typedef struct s1apProtIE_Cont_UERadioCapbltyMatchRqstIEs
{
 TknU16 noComp;
 SztProtIE_Field_UERadioCapbltyMatchRqstIEs *member;
}SztProtIE_Cont_UERadioCapbltyMatchRqstIEs;

typedef struct s1apUERadioCapbltyMatchRqst
{
 TknPres pres;
 SztProtIE_Cont_UERadioCapbltyMatchRqstIEs protocolIEs;
} SztUERadioCapbltyMatchRqst;

typedef struct s1ap_ValueUERadioCapbltyMatchRespIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztVoiceSupportMatchIndicator sztVoiceSupportMatchIndicator;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueUERadioCapbltyMatchRespIEsCls;
typedef struct s1apProtIE_Field_UERadioCapbltyMatchRespIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueUERadioCapbltyMatchRespIEsCls value;
} SztProtIE_Field_UERadioCapbltyMatchRespIEs;

typedef struct s1apProtIE_Cont_UERadioCapbltyMatchRespIEs
{
 TknU16 noComp;
 SztProtIE_Field_UERadioCapbltyMatchRespIEs *member;
}SztProtIE_Cont_UERadioCapbltyMatchRespIEs;

typedef struct s1apUERadioCapbltyMatchResp
{
 TknPres pres;
 SztProtIE_Cont_UERadioCapbltyMatchRespIEs protocolIEs;
} SztUERadioCapbltyMatchResp;

typedef struct s1ap_ValueDlnkNASTport_IEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztNAS_PDU sztNAS_PDU;
  SztHovrRestrnLst sztHovrRestrnLst;
  SztSubscriberProfileIDforRFP sztSubscriberProfileIDforRFP;
 } u;
} Szt_ValueDlnkNASTport_IEsCls;
typedef struct s1apProtIE_Field_DlnkNASTport_IEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueDlnkNASTport_IEsCls value;
} SztProtIE_Field_DlnkNASTport_IEs;

typedef struct s1apProtIE_Cont_DlnkNASTport_IEs
{
 TknU16 noComp;
 SztProtIE_Field_DlnkNASTport_IEs *member;
}SztProtIE_Cont_DlnkNASTport_IEs;

typedef struct s1apDlnkNASTport
{
 TknPres pres;
 SztProtIE_Cont_DlnkNASTport_IEs protocolIEs;
} SztDlnkNASTport;

typedef struct s1ap_ValueInitUEMsg_IEsCls{
 union {
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztNAS_PDU sztNAS_PDU;
  SztTAI sztTAI;
  SztEUTRAN_CGI sztEUTRAN_CGI;
  SztRRC_Establishment_Cause sztRRC_Establishment_Cause;
  SztS_TMSI sztS_TMSI;
  SztCSG_Id sztCSG_Id;
  SztGUMMEI sztGUMMEI;
  SztCellAccessMode sztCellAccessMode;
  SztTportLyrAddr sztTportLyrAddr;
  SztRelayNode_Indicator sztRelayNode_Indicator;
  SztGUMMEITyp sztGUMMEITyp;
  SztTunnelInform sztTunnelInform;
 } u;
} Szt_ValueInitUEMsg_IEsCls;
typedef struct s1apProtIE_Field_InitUEMsg_IEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueInitUEMsg_IEsCls value;
} SztProtIE_Field_InitUEMsg_IEs;

typedef struct s1apProtIE_Cont_InitUEMsg_IEs
{
 TknU16 noComp;
 SztProtIE_Field_InitUEMsg_IEs *member;
}SztProtIE_Cont_InitUEMsg_IEs;

typedef struct s1apInitUEMsg
{
 TknPres pres;
 SztProtIE_Cont_InitUEMsg_IEs protocolIEs;
} SztInitUEMsg;

typedef struct s1ap_ValueUlnkNASTport_IEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztNAS_PDU sztNAS_PDU;
  SztEUTRAN_CGI sztEUTRAN_CGI;
  SztTAI sztTAI;
  SztTportLyrAddr sztTportLyrAddr;
 } u;
} Szt_ValueUlnkNASTport_IEsCls;
typedef struct s1apProtIE_Field_UlnkNASTport_IEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueUlnkNASTport_IEsCls value;
} SztProtIE_Field_UlnkNASTport_IEs;

typedef struct s1apProtIE_Cont_UlnkNASTport_IEs
{
 TknU16 noComp;
 SztProtIE_Field_UlnkNASTport_IEs *member;
}SztProtIE_Cont_UlnkNASTport_IEs;

typedef struct s1apUlnkNASTport
{
 TknPres pres;
 SztProtIE_Cont_UlnkNASTport_IEs protocolIEs;
} SztUlnkNASTport;

typedef struct s1ap_ValueNASNonDlvryInd_IEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztNAS_PDU sztNAS_PDU;
  SztCause sztCause;
 } u;
} Szt_ValueNASNonDlvryInd_IEsCls;
typedef struct s1apProtIE_Field_NASNonDlvryInd_IEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueNASNonDlvryInd_IEsCls value;
} SztProtIE_Field_NASNonDlvryInd_IEs;

typedef struct s1apProtIE_Cont_NASNonDlvryInd_IEs
{
 TknU16 noComp;
 SztProtIE_Field_NASNonDlvryInd_IEs *member;
}SztProtIE_Cont_NASNonDlvryInd_IEs;

typedef struct s1apNASNonDlvryInd
{
 TknPres pres;
 SztProtIE_Cont_NASNonDlvryInd_IEs protocolIEs;
} SztNASNonDlvryInd;


typedef enum enumSztResetAll
{
 SztResetAllreset_allEnum
} EnumSztResetAll;
typedef TknU32 SztResetAll;

typedef struct s1ap_ValueUE_assocLogS1_ConItemResCls{
 union {
  SztUE_assocLogS1_ConItem sztUE_assocLogS1_ConItem;
 } u;
} Szt_ValueUE_assocLogS1_ConItemResCls;
typedef struct s1apProtIE_Field_UE_assocLogS1_ConItemRes
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueUE_assocLogS1_ConItemResCls value;
} SztProtIE_Field_UE_assocLogS1_ConItemRes;


typedef SztProtIE_Field_UE_assocLogS1_ConItemRes SztProtIE_SingleCont_UE_assocLogS1_ConItemRes;
typedef struct s1apUE_assocLogS1_ConLstRes
{
 TknU16 noComp;
 SztProtIE_SingleCont_UE_assocLogS1_ConItemRes *member;
}SztUE_assocLogS1_ConLstRes;

typedef struct s1apResetTyp
{
 TknU8 choice;
 union {
  SztResetAll s1_Intf;
  SztUE_assocLogS1_ConLstRes partOfS1_Intf;
 } val;
} SztResetTyp;

typedef struct s1ap_ValueResetIEsCls{
 union {
  SztCause sztCause;
  SztResetTyp sztResetTyp;
 } u;
} Szt_ValueResetIEsCls;
typedef struct s1apProtIE_Field_ResetIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueResetIEsCls value;
} SztProtIE_Field_ResetIEs;

typedef struct s1apProtIE_Cont_ResetIEs
{
 TknU16 noComp;
 SztProtIE_Field_ResetIEs *member;
}SztProtIE_Cont_ResetIEs;

typedef struct s1apReset
{
 TknPres pres;
 SztProtIE_Cont_ResetIEs protocolIEs;
} SztReset;

typedef struct s1ap_ValueUE_assocLogS1_ConItemResAckCls{
 union {
  SztUE_assocLogS1_ConItem sztUE_assocLogS1_ConItem;
 } u;
} Szt_ValueUE_assocLogS1_ConItemResAckCls;
typedef struct s1apProtIE_Field_UE_assocLogS1_ConItemResAck
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueUE_assocLogS1_ConItemResAckCls value;
} SztProtIE_Field_UE_assocLogS1_ConItemResAck;


typedef SztProtIE_Field_UE_assocLogS1_ConItemResAck SztProtIE_SingleCont_UE_assocLogS1_ConItemResAck;
typedef struct s1apUE_assocLogS1_ConLstResAck
{
 TknU16 noComp;
 SztProtIE_SingleCont_UE_assocLogS1_ConItemResAck *member;
}SztUE_assocLogS1_ConLstResAck;

typedef struct s1ap_ValueResetAckgIEsCls{
 union {
  SztUE_assocLogS1_ConLstResAck sztUE_assocLogS1_ConLstResAck;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueResetAckgIEsCls;
typedef struct s1apProtIE_Field_ResetAckgIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueResetAckgIEsCls value;
} SztProtIE_Field_ResetAckgIEs;

typedef struct s1apProtIE_Cont_ResetAckgIEs
{
 TknU16 noComp;
 SztProtIE_Field_ResetAckgIEs *member;
}SztProtIE_Cont_ResetAckgIEs;

typedef struct s1apResetAckg
{
 TknPres pres;
 SztProtIE_Cont_ResetAckgIEs protocolIEs;
} SztResetAckg;

typedef struct s1ap_ValueErrIndIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztCause sztCause;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueErrIndIEsCls;
typedef struct s1apProtIE_Field_ErrIndIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueErrIndIEsCls value;
} SztProtIE_Field_ErrIndIEs;

typedef struct s1apProtIE_Cont_ErrIndIEs
{
 TknU16 noComp;
 SztProtIE_Field_ErrIndIEs *member;
}SztProtIE_Cont_ErrIndIEs;

typedef struct s1apErrInd
{
 TknPres pres;
 SztProtIE_Cont_ErrIndIEs protocolIEs;
} SztErrInd;

typedef struct s1ap_ValueS1SetupRqstIEsCls{
 union {
  SztGlobal_ENB_ID sztGlobal_ENB_ID;
  SztENBname sztENBname;
  SztSuppTAs sztSuppTAs;
  SztPagDRX sztPagDRX;
  SztCSG_IdLst sztCSG_IdLst;
 } u;
} Szt_ValueS1SetupRqstIEsCls;
typedef struct s1apProtIE_Field_S1SetupRqstIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueS1SetupRqstIEsCls value;
} SztProtIE_Field_S1SetupRqstIEs;

typedef struct s1apProtIE_Cont_S1SetupRqstIEs
{
 TknU16 noComp;
 SztProtIE_Field_S1SetupRqstIEs *member;
}SztProtIE_Cont_S1SetupRqstIEs;

typedef struct s1apS1SetupRqst
{
 TknPres pres;
 SztProtIE_Cont_S1SetupRqstIEs protocolIEs;
} SztS1SetupRqst;

typedef struct s1ap_ValueS1SetupRespIEsCls{
 union {
  SztMMEname sztMMEname;
  SztSrvdGUMMEIs sztSrvdGUMMEIs;
  SztRelativeMMECapacity sztRelativeMMECapacity;
  SztMMERelaySupportIndicator sztMMERelaySupportIndicator;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueS1SetupRespIEsCls;
typedef struct s1apProtIE_Field_S1SetupRespIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueS1SetupRespIEsCls value;
} SztProtIE_Field_S1SetupRespIEs;

typedef struct s1apProtIE_Cont_S1SetupRespIEs
{
 TknU16 noComp;
 SztProtIE_Field_S1SetupRespIEs *member;
}SztProtIE_Cont_S1SetupRespIEs;

typedef struct s1apS1SetupResp
{
 TknPres pres;
 SztProtIE_Cont_S1SetupRespIEs protocolIEs;
} SztS1SetupResp;

typedef struct s1ap_ValueS1SetupFailIEsCls{
 union {
  SztCause sztCause;
  SztTimeToWait sztTimeToWait;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueS1SetupFailIEsCls;
typedef struct s1apProtIE_Field_S1SetupFailIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueS1SetupFailIEsCls value;
} SztProtIE_Field_S1SetupFailIEs;

typedef struct s1apProtIE_Cont_S1SetupFailIEs
{
 TknU16 noComp;
 SztProtIE_Field_S1SetupFailIEs *member;
}SztProtIE_Cont_S1SetupFailIEs;

typedef struct s1apS1SetupFail
{
 TknPres pres;
 SztProtIE_Cont_S1SetupFailIEs protocolIEs;
} SztS1SetupFail;

typedef struct s1ap_ValueENBConfigUpdIEsCls{
 union {
  SztENBname sztENBname;
  SztSuppTAs sztSuppTAs;
  SztCSG_IdLst sztCSG_IdLst;
  SztPagDRX sztPagDRX;
 } u;
} Szt_ValueENBConfigUpdIEsCls;
typedef struct s1apProtIE_Field_ENBConfigUpdIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueENBConfigUpdIEsCls value;
} SztProtIE_Field_ENBConfigUpdIEs;

typedef struct s1apProtIE_Cont_ENBConfigUpdIEs
{
 TknU16 noComp;
 SztProtIE_Field_ENBConfigUpdIEs *member;
}SztProtIE_Cont_ENBConfigUpdIEs;

typedef struct s1apENBConfigUpd
{
 TknPres pres;
 SztProtIE_Cont_ENBConfigUpdIEs protocolIEs;
} SztENBConfigUpd;

typedef struct s1ap_ValueENBConfigUpdAckgIEsCls{
 union {
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueENBConfigUpdAckgIEsCls;
typedef struct s1apProtIE_Field_ENBConfigUpdAckgIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueENBConfigUpdAckgIEsCls value;
} SztProtIE_Field_ENBConfigUpdAckgIEs;

typedef struct s1apProtIE_Cont_ENBConfigUpdAckgIEs
{
 TknU16 noComp;
 SztProtIE_Field_ENBConfigUpdAckgIEs *member;
}SztProtIE_Cont_ENBConfigUpdAckgIEs;

typedef struct s1apENBConfigUpdAckg
{
 TknPres pres;
 SztProtIE_Cont_ENBConfigUpdAckgIEs protocolIEs;
} SztENBConfigUpdAckg;

typedef struct s1ap_ValueENBConfigUpdFailIEsCls{
 union {
  SztCause sztCause;
  SztTimeToWait sztTimeToWait;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueENBConfigUpdFailIEsCls;
typedef struct s1apProtIE_Field_ENBConfigUpdFailIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueENBConfigUpdFailIEsCls value;
} SztProtIE_Field_ENBConfigUpdFailIEs;

typedef struct s1apProtIE_Cont_ENBConfigUpdFailIEs
{
 TknU16 noComp;
 SztProtIE_Field_ENBConfigUpdFailIEs *member;
}SztProtIE_Cont_ENBConfigUpdFailIEs;

typedef struct s1apENBConfigUpdFail
{
 TknPres pres;
 SztProtIE_Cont_ENBConfigUpdFailIEs protocolIEs;
} SztENBConfigUpdFail;

typedef struct s1ap_ValueMMEConfigUpdIEsCls{
 union {
  SztMMEname sztMMEname;
  SztSrvdGUMMEIs sztSrvdGUMMEIs;
  SztRelativeMMECapacity sztRelativeMMECapacity;
 } u;
} Szt_ValueMMEConfigUpdIEsCls;
typedef struct s1apProtIE_Field_MMEConfigUpdIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueMMEConfigUpdIEsCls value;
} SztProtIE_Field_MMEConfigUpdIEs;

typedef struct s1apProtIE_Cont_MMEConfigUpdIEs
{
 TknU16 noComp;
 SztProtIE_Field_MMEConfigUpdIEs *member;
}SztProtIE_Cont_MMEConfigUpdIEs;

typedef struct s1apMMEConfigUpd
{
 TknPres pres;
 SztProtIE_Cont_MMEConfigUpdIEs protocolIEs;
} SztMMEConfigUpd;

typedef struct s1ap_ValueMMEConfigUpdAckgIEsCls{
 union {
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueMMEConfigUpdAckgIEsCls;
typedef struct s1apProtIE_Field_MMEConfigUpdAckgIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueMMEConfigUpdAckgIEsCls value;
} SztProtIE_Field_MMEConfigUpdAckgIEs;

typedef struct s1apProtIE_Cont_MMEConfigUpdAckgIEs
{
 TknU16 noComp;
 SztProtIE_Field_MMEConfigUpdAckgIEs *member;
}SztProtIE_Cont_MMEConfigUpdAckgIEs;

typedef struct s1apMMEConfigUpdAckg
{
 TknPres pres;
 SztProtIE_Cont_MMEConfigUpdAckgIEs protocolIEs;
} SztMMEConfigUpdAckg;

typedef struct s1ap_ValueMMEConfigUpdFailIEsCls{
 union {
  SztCause sztCause;
  SztTimeToWait sztTimeToWait;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueMMEConfigUpdFailIEsCls;
typedef struct s1apProtIE_Field_MMEConfigUpdFailIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueMMEConfigUpdFailIEsCls value;
} SztProtIE_Field_MMEConfigUpdFailIEs;

typedef struct s1apProtIE_Cont_MMEConfigUpdFailIEs
{
 TknU16 noComp;
 SztProtIE_Field_MMEConfigUpdFailIEs *member;
}SztProtIE_Cont_MMEConfigUpdFailIEs;

typedef struct s1apMMEConfigUpdFail
{
 TknPres pres;
 SztProtIE_Cont_MMEConfigUpdFailIEs protocolIEs;
} SztMMEConfigUpdFail;

typedef struct s1ap_ValueDlnkS1cdma2000tunnelingIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztE_RABSubjtoDataFwdingLst sztE_RABSubjtoDataFwdingLst;
  SztCdma2000HOStatus sztCdma2000HOStatus;
  SztCdma2000RATTyp sztCdma2000RATTyp;
  SztCdma2000PDU sztCdma2000PDU;
 } u;
} Szt_ValueDlnkS1cdma2000tunnelingIEsCls;
typedef struct s1apProtIE_Field_DlnkS1cdma2000tunnelingIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueDlnkS1cdma2000tunnelingIEsCls value;
} SztProtIE_Field_DlnkS1cdma2000tunnelingIEs;

typedef struct s1apProtIE_Cont_DlnkS1cdma2000tunnelingIEs
{
 TknU16 noComp;
 SztProtIE_Field_DlnkS1cdma2000tunnelingIEs *member;
}SztProtIE_Cont_DlnkS1cdma2000tunnelingIEs;

typedef struct s1apDlnkS1cdma2000tunneling
{
 TknPres pres;
 SztProtIE_Cont_DlnkS1cdma2000tunnelingIEs protocolIEs;
} SztDlnkS1cdma2000tunneling;

typedef struct s1ap_ValueUlnkS1cdma2000tunnelingIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztCdma2000RATTyp sztCdma2000RATTyp;
  SztCdma2000SectorID sztCdma2000SectorID;
  SztCdma2000HOReqdInd sztCdma2000HOReqdInd;
  SztCdma2000OneXSRVCCInfo sztCdma2000OneXSRVCCInfo;
  SztCdma2000OneXRAND sztCdma2000OneXRAND;
  SztCdma2000PDU sztCdma2000PDU;
  SztEUTRANRoundTripDelayEstimationInfo sztEUTRANRoundTripDelayEstimationInfo;
 } u;
} Szt_ValueUlnkS1cdma2000tunnelingIEsCls;
typedef struct s1apProtIE_Field_UlnkS1cdma2000tunnelingIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueUlnkS1cdma2000tunnelingIEsCls value;
} SztProtIE_Field_UlnkS1cdma2000tunnelingIEs;

typedef struct s1apProtIE_Cont_UlnkS1cdma2000tunnelingIEs
{
 TknU16 noComp;
 SztProtIE_Field_UlnkS1cdma2000tunnelingIEs *member;
}SztProtIE_Cont_UlnkS1cdma2000tunnelingIEs;

typedef struct s1apUlnkS1cdma2000tunneling
{
 TknPres pres;
 SztProtIE_Cont_UlnkS1cdma2000tunnelingIEs protocolIEs;
} SztUlnkS1cdma2000tunneling;

typedef struct s1ap_ValueUECapbltyInfoIndIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztUERadioCapblty sztUERadioCapblty;
 } u;
} Szt_ValueUECapbltyInfoIndIEsCls;
typedef struct s1apProtIE_Field_UECapbltyInfoIndIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueUECapbltyInfoIndIEsCls value;
} SztProtIE_Field_UECapbltyInfoIndIEs;

typedef struct s1apProtIE_Cont_UECapbltyInfoIndIEs
{
 TknU16 noComp;
 SztProtIE_Field_UECapbltyInfoIndIEs *member;
}SztProtIE_Cont_UECapbltyInfoIndIEs;

typedef struct s1apUECapbltyInfoInd
{
 TknPres pres;
 SztProtIE_Cont_UECapbltyInfoIndIEs protocolIEs;
} SztUECapbltyInfoInd;

typedef struct s1ap_ValueENBStatusTfrIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztENB_StatusTfr_TprntCont sztENB_StatusTfr_TprntCont;
 } u;
} Szt_ValueENBStatusTfrIEsCls;
typedef struct s1apProtIE_Field_ENBStatusTfrIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueENBStatusTfrIEsCls value;
} SztProtIE_Field_ENBStatusTfrIEs;

typedef struct s1apProtIE_Cont_ENBStatusTfrIEs
{
 TknU16 noComp;
 SztProtIE_Field_ENBStatusTfrIEs *member;
}SztProtIE_Cont_ENBStatusTfrIEs;

typedef struct s1apENBStatusTfr
{
 TknPres pres;
 SztProtIE_Cont_ENBStatusTfrIEs protocolIEs;
} SztENBStatusTfr;

typedef struct s1ap_ValueMMEStatusTfrIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztENB_StatusTfr_TprntCont sztENB_StatusTfr_TprntCont;
 } u;
} Szt_ValueMMEStatusTfrIEsCls;
typedef struct s1apProtIE_Field_MMEStatusTfrIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueMMEStatusTfrIEsCls value;
} SztProtIE_Field_MMEStatusTfrIEs;

typedef struct s1apProtIE_Cont_MMEStatusTfrIEs
{
 TknU16 noComp;
 SztProtIE_Field_MMEStatusTfrIEs *member;
}SztProtIE_Cont_MMEStatusTfrIEs;

typedef struct s1apMMEStatusTfr
{
 TknPres pres;
 SztProtIE_Cont_MMEStatusTfrIEs protocolIEs;
} SztMMEStatusTfr;

typedef struct s1ap_ValueTraceStartIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztTraceActvn sztTraceActvn;
 } u;
} Szt_ValueTraceStartIEsCls;
typedef struct s1apProtIE_Field_TraceStartIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueTraceStartIEsCls value;
} SztProtIE_Field_TraceStartIEs;

typedef struct s1apProtIE_Cont_TraceStartIEs
{
 TknU16 noComp;
 SztProtIE_Field_TraceStartIEs *member;
}SztProtIE_Cont_TraceStartIEs;

typedef struct s1apTraceStart
{
 TknPres pres;
 SztProtIE_Cont_TraceStartIEs protocolIEs;
} SztTraceStart;

typedef struct s1ap_ValueTraceFailIndIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztE_UTRAN_Trace_ID sztE_UTRAN_Trace_ID;
  SztCause sztCause;
 } u;
} Szt_ValueTraceFailIndIEsCls;
typedef struct s1apProtIE_Field_TraceFailIndIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueTraceFailIndIEsCls value;
} SztProtIE_Field_TraceFailIndIEs;

typedef struct s1apProtIE_Cont_TraceFailIndIEs
{
 TknU16 noComp;
 SztProtIE_Field_TraceFailIndIEs *member;
}SztProtIE_Cont_TraceFailIndIEs;

typedef struct s1apTraceFailInd
{
 TknPres pres;
 SztProtIE_Cont_TraceFailIndIEs protocolIEs;
} SztTraceFailInd;

typedef struct s1ap_ValueDeactvTraceIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztE_UTRAN_Trace_ID sztE_UTRAN_Trace_ID;
 } u;
} Szt_ValueDeactvTraceIEsCls;
typedef struct s1apProtIE_Field_DeactvTraceIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueDeactvTraceIEsCls value;
} SztProtIE_Field_DeactvTraceIEs;

typedef struct s1apProtIE_Cont_DeactvTraceIEs
{
 TknU16 noComp;
 SztProtIE_Field_DeactvTraceIEs *member;
}SztProtIE_Cont_DeactvTraceIEs;

typedef struct s1apDeactvTrace
{
 TknPres pres;
 SztProtIE_Cont_DeactvTraceIEs protocolIEs;
} SztDeactvTrace;

typedef struct s1ap_ValueCellTrafficTraceIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztE_UTRAN_Trace_ID sztE_UTRAN_Trace_ID;
  SztEUTRAN_CGI sztEUTRAN_CGI;
  SztTportLyrAddr sztTportLyrAddr;
  SztPrivacyIndicator sztPrivacyIndicator;
 } u;
} Szt_ValueCellTrafficTraceIEsCls;
typedef struct s1apProtIE_Field_CellTrafficTraceIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueCellTrafficTraceIEsCls value;
} SztProtIE_Field_CellTrafficTraceIEs;

typedef struct s1apProtIE_Cont_CellTrafficTraceIEs
{
 TknU16 noComp;
 SztProtIE_Field_CellTrafficTraceIEs *member;
}SztProtIE_Cont_CellTrafficTraceIEs;

typedef struct s1apCellTrafficTrace
{
 TknPres pres;
 SztProtIE_Cont_CellTrafficTraceIEs protocolIEs;
} SztCellTrafficTrace;

typedef struct s1ap_ValueLocRprtngCntrlIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztRqstTyp sztRqstTyp;
 } u;
} Szt_ValueLocRprtngCntrlIEsCls;
typedef struct s1apProtIE_Field_LocRprtngCntrlIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueLocRprtngCntrlIEsCls value;
} SztProtIE_Field_LocRprtngCntrlIEs;

typedef struct s1apProtIE_Cont_LocRprtngCntrlIEs
{
 TknU16 noComp;
 SztProtIE_Field_LocRprtngCntrlIEs *member;
}SztProtIE_Cont_LocRprtngCntrlIEs;

typedef struct s1apLocRprtngCntrl
{
 TknPres pres;
 SztProtIE_Cont_LocRprtngCntrlIEs protocolIEs;
} SztLocRprtngCntrl;

typedef struct s1ap_ValueLocRprtngFailIndIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztCause sztCause;
 } u;
} Szt_ValueLocRprtngFailIndIEsCls;
typedef struct s1apProtIE_Field_LocRprtngFailIndIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueLocRprtngFailIndIEsCls value;
} SztProtIE_Field_LocRprtngFailIndIEs;

typedef struct s1apProtIE_Cont_LocRprtngFailIndIEs
{
 TknU16 noComp;
 SztProtIE_Field_LocRprtngFailIndIEs *member;
}SztProtIE_Cont_LocRprtngFailIndIEs;

typedef struct s1apLocRprtngFailInd
{
 TknPres pres;
 SztProtIE_Cont_LocRprtngFailIndIEs protocolIEs;
} SztLocRprtngFailInd;

typedef struct s1ap_ValueLocReportIEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztEUTRAN_CGI sztEUTRAN_CGI;
  SztTAI sztTAI;
  SztRqstTyp sztRqstTyp;
 } u;
} Szt_ValueLocReportIEsCls;
typedef struct s1apProtIE_Field_LocReportIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueLocReportIEsCls value;
} SztProtIE_Field_LocReportIEs;

typedef struct s1apProtIE_Cont_LocReportIEs
{
 TknU16 noComp;
 SztProtIE_Field_LocReportIEs *member;
}SztProtIE_Cont_LocReportIEs;

typedef struct s1apLocReport
{
 TknPres pres;
 SztProtIE_Cont_LocReportIEs protocolIEs;
} SztLocReport;

typedef struct s1ap_ValueOverloadStartIEsCls{
 union {
  SztOverloadResp sztOverloadResp;
  SztGUMMEILst sztGUMMEILst;
  SztTrafficLoadReductionInd sztTrafficLoadReductionInd;
 } u;
} Szt_ValueOverloadStartIEsCls;
typedef struct s1apProtIE_Field_OverloadStartIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueOverloadStartIEsCls value;
} SztProtIE_Field_OverloadStartIEs;

typedef struct s1apProtIE_Cont_OverloadStartIEs
{
 TknU16 noComp;
 SztProtIE_Field_OverloadStartIEs *member;
}SztProtIE_Cont_OverloadStartIEs;

typedef struct s1apOverloadStart
{
 TknPres pres;
 SztProtIE_Cont_OverloadStartIEs protocolIEs;
} SztOverloadStart;

typedef struct s1ap_ValueOverloadStopIEsCls{
 union {
  SztGUMMEILst sztGUMMEILst;
 } u;
} Szt_ValueOverloadStopIEsCls;
typedef struct s1apProtIE_Field_OverloadStopIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueOverloadStopIEsCls value;
} SztProtIE_Field_OverloadStopIEs;

typedef struct s1apProtIE_Cont_OverloadStopIEs
{
 TknU16 noComp;
 SztProtIE_Field_OverloadStopIEs *member;
}SztProtIE_Cont_OverloadStopIEs;

typedef struct s1apOverloadStop
{
 TknPres pres;
 SztProtIE_Cont_OverloadStopIEs protocolIEs;
} SztOverloadStop;

typedef struct s1ap_ValueWriteReplaceWarningRqstIEsCls{
 union {
  SztMsgIdentifier sztMsgIdentifier;
  SztSerialNumber sztSerialNumber;
  SztWarningAreaLst sztWarningAreaLst;
  SztRepetitionPeriod sztRepetitionPeriod;
  SztExtendedRepetitionPeriod sztExtendedRepetitionPeriod;
  SztNumberofBroadcastRqst sztNumberofBroadcastRqst;
  SztWarningTyp sztWarningTyp;
  SztWarningSecurInfo sztWarningSecurInfo;
  SztDataCodingScheme sztDataCodingScheme;
  SztWarningMsgContents sztWarningMsgContents;
  SztConcurrentWarningMsgIndicator sztConcurrentWarningMsgIndicator;
 } u;
} Szt_ValueWriteReplaceWarningRqstIEsCls;
typedef struct s1apProtIE_Field_WriteReplaceWarningRqstIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueWriteReplaceWarningRqstIEsCls value;
} SztProtIE_Field_WriteReplaceWarningRqstIEs;

typedef struct s1apProtIE_Cont_WriteReplaceWarningRqstIEs
{
 TknU16 noComp;
 SztProtIE_Field_WriteReplaceWarningRqstIEs *member;
}SztProtIE_Cont_WriteReplaceWarningRqstIEs;

typedef struct s1apWriteReplaceWarningRqst
{
 TknPres pres;
 SztProtIE_Cont_WriteReplaceWarningRqstIEs protocolIEs;
} SztWriteReplaceWarningRqst;

typedef struct s1ap_ValueWriteReplaceWarningRespIEsCls{
 union {
  SztMsgIdentifier sztMsgIdentifier;
  SztSerialNumber sztSerialNumber;
  SztBroadcastCompletedAreaLst sztBroadcastCompletedAreaLst;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueWriteReplaceWarningRespIEsCls;
typedef struct s1apProtIE_Field_WriteReplaceWarningRespIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueWriteReplaceWarningRespIEsCls value;
} SztProtIE_Field_WriteReplaceWarningRespIEs;

typedef struct s1apProtIE_Cont_WriteReplaceWarningRespIEs
{
 TknU16 noComp;
 SztProtIE_Field_WriteReplaceWarningRespIEs *member;
}SztProtIE_Cont_WriteReplaceWarningRespIEs;

typedef struct s1apWriteReplaceWarningResp
{
 TknPres pres;
 SztProtIE_Cont_WriteReplaceWarningRespIEs protocolIEs;
} SztWriteReplaceWarningResp;

typedef struct s1apInter_SystemInformTfrTyp
{
 TknU8 choice;
 union {
  SztRIMTfr rIMTfr;
 } val;
} SztInter_SystemInformTfrTyp;

typedef struct s1ap_ValueENBDirectInformTfrIEsCls{
 union {
  SztInter_SystemInformTfrTyp sztInter_SystemInformTfrTyp;
 } u;
} Szt_ValueENBDirectInformTfrIEsCls;
typedef struct s1apProtIE_Field_ENBDirectInformTfrIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueENBDirectInformTfrIEsCls value;
} SztProtIE_Field_ENBDirectInformTfrIEs;

typedef struct s1apProtIE_Cont_ENBDirectInformTfrIEs
{
 TknU16 noComp;
 SztProtIE_Field_ENBDirectInformTfrIEs *member;
}SztProtIE_Cont_ENBDirectInformTfrIEs;

typedef struct s1apENBDirectInformTfr
{
 TknPres pres;
 SztProtIE_Cont_ENBDirectInformTfrIEs protocolIEs;
} SztENBDirectInformTfr;

typedef struct s1ap_ValueMMEDirectInformTfrIEsCls{
 union {
  SztInter_SystemInformTfrTyp sztInter_SystemInformTfrTyp;
 } u;
} Szt_ValueMMEDirectInformTfrIEsCls;
typedef struct s1apProtIE_Field_MMEDirectInformTfrIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueMMEDirectInformTfrIEsCls value;
} SztProtIE_Field_MMEDirectInformTfrIEs;

typedef struct s1apProtIE_Cont_MMEDirectInformTfrIEs
{
 TknU16 noComp;
 SztProtIE_Field_MMEDirectInformTfrIEs *member;
}SztProtIE_Cont_MMEDirectInformTfrIEs;

typedef struct s1apMMEDirectInformTfr
{
 TknPres pres;
 SztProtIE_Cont_MMEDirectInformTfrIEs protocolIEs;
} SztMMEDirectInformTfr;

typedef struct s1ap_ValueENBConfigTfrIEsCls{
 union {
  SztSONConfigTfr sztSONConfigTfr;
 } u;
} Szt_ValueENBConfigTfrIEsCls;
typedef struct s1apProtIE_Field_ENBConfigTfrIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueENBConfigTfrIEsCls value;
} SztProtIE_Field_ENBConfigTfrIEs;

typedef struct s1apProtIE_Cont_ENBConfigTfrIEs
{
 TknU16 noComp;
 SztProtIE_Field_ENBConfigTfrIEs *member;
}SztProtIE_Cont_ENBConfigTfrIEs;

typedef struct s1apENBConfigTfr
{
 TknPres pres;
 SztProtIE_Cont_ENBConfigTfrIEs protocolIEs;
} SztENBConfigTfr;

typedef struct s1ap_ValueMMEConfigTfrIEsCls{
 union {
  SztSONConfigTfr sztSONConfigTfr;
 } u;
} Szt_ValueMMEConfigTfrIEsCls;
typedef struct s1apProtIE_Field_MMEConfigTfrIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueMMEConfigTfrIEsCls value;
} SztProtIE_Field_MMEConfigTfrIEs;

typedef struct s1apProtIE_Cont_MMEConfigTfrIEs
{
 TknU16 noComp;
 SztProtIE_Field_MMEConfigTfrIEs *member;
}SztProtIE_Cont_MMEConfigTfrIEs;

typedef struct s1apMMEConfigTfr
{
 TknPres pres;
 SztProtIE_Cont_MMEConfigTfrIEs protocolIEs;
} SztMMEConfigTfr;

typedef struct s1ap_ValuePrivMsgIEsCls{
 union {
  TknU8 unused;
 } u;
} Szt_ValuePrivMsgIEsCls;
typedef struct s1apPrivIE_Field_PrivMsgIEs
{
 TknPres pres;
 SztPrivIE_ID id;
 SztCriticality criticality;
 Szt_ValuePrivMsgIEsCls value;
} SztPrivIE_Field_PrivMsgIEs;

typedef struct s1apPrivIE_Cont_PrivMsgIEs
{
 TknU16 noComp;
 SztPrivIE_Field_PrivMsgIEs *member;
}SztPrivIE_Cont_PrivMsgIEs;

typedef struct s1apPrivMsg
{
 TknPres pres;
 SztPrivIE_Cont_PrivMsgIEs privateIEs;
} SztPrivMsg;

typedef struct s1ap_ValueKillRqstIEsCls{
 union {
  SztMsgIdentifier sztMsgIdentifier;
  SztSerialNumber sztSerialNumber;
  SztWarningAreaLst sztWarningAreaLst;
 } u;
} Szt_ValueKillRqstIEsCls;
typedef struct s1apProtIE_Field_KillRqstIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueKillRqstIEsCls value;
} SztProtIE_Field_KillRqstIEs;

typedef struct s1apProtIE_Cont_KillRqstIEs
{
 TknU16 noComp;
 SztProtIE_Field_KillRqstIEs *member;
}SztProtIE_Cont_KillRqstIEs;

typedef struct s1apKillRqst
{
 TknPres pres;
 SztProtIE_Cont_KillRqstIEs protocolIEs;
} SztKillRqst;

typedef struct s1ap_ValueKillRespIEsCls{
 union {
  SztMsgIdentifier sztMsgIdentifier;
  SztSerialNumber sztSerialNumber;
  SztBroadcastCancelledAreaLst sztBroadcastCancelledAreaLst;
  SztCriticalityDiag sztCriticalityDiag;
 } u;
} Szt_ValueKillRespIEsCls;
typedef struct s1apProtIE_Field_KillRespIEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueKillRespIEsCls value;
} SztProtIE_Field_KillRespIEs;

typedef struct s1apProtIE_Cont_KillRespIEs
{
 TknU16 noComp;
 SztProtIE_Field_KillRespIEs *member;
}SztProtIE_Cont_KillRespIEs;

typedef struct s1apKillResp
{
 TknPres pres;
 SztProtIE_Cont_KillRespIEs protocolIEs;
} SztKillResp;

typedef struct s1ap_ValueDlnkUEAssociatedLPPaTport_IEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztRouting_ID sztRouting_ID;
  SztLPPa_PDU sztLPPa_PDU;
 } u;
} Szt_ValueDlnkUEAssociatedLPPaTport_IEsCls;
typedef struct s1apProtIE_Field_DlnkUEAssociatedLPPaTport_IEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueDlnkUEAssociatedLPPaTport_IEsCls value;
} SztProtIE_Field_DlnkUEAssociatedLPPaTport_IEs;

typedef struct s1apProtIE_Cont_DlnkUEAssociatedLPPaTport_IEs
{
 TknU16 noComp;
 SztProtIE_Field_DlnkUEAssociatedLPPaTport_IEs *member;
}SztProtIE_Cont_DlnkUEAssociatedLPPaTport_IEs;

typedef struct s1apDlnkUEAssociatedLPPaTport
{
 TknPres pres;
 SztProtIE_Cont_DlnkUEAssociatedLPPaTport_IEs protocolIEs;
} SztDlnkUEAssociatedLPPaTport;

typedef struct s1ap_ValueUlnkUEAssociatedLPPaTport_IEsCls{
 union {
  SztMME_UE_S1AP_ID sztMME_UE_S1AP_ID;
  SztENB_UE_S1AP_ID sztENB_UE_S1AP_ID;
  SztRouting_ID sztRouting_ID;
  SztLPPa_PDU sztLPPa_PDU;
 } u;
} Szt_ValueUlnkUEAssociatedLPPaTport_IEsCls;
typedef struct s1apProtIE_Field_UlnkUEAssociatedLPPaTport_IEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueUlnkUEAssociatedLPPaTport_IEsCls value;
} SztProtIE_Field_UlnkUEAssociatedLPPaTport_IEs;

typedef struct s1apProtIE_Cont_UlnkUEAssociatedLPPaTport_IEs
{
 TknU16 noComp;
 SztProtIE_Field_UlnkUEAssociatedLPPaTport_IEs *member;
}SztProtIE_Cont_UlnkUEAssociatedLPPaTport_IEs;

typedef struct s1apUlnkUEAssociatedLPPaTport
{
 TknPres pres;
 SztProtIE_Cont_UlnkUEAssociatedLPPaTport_IEs protocolIEs;
} SztUlnkUEAssociatedLPPaTport;

typedef struct s1ap_ValueDlnkNonUEAssociatedLPPaTport_IEsCls{
 union {
  SztRouting_ID sztRouting_ID;
  SztLPPa_PDU sztLPPa_PDU;
 } u;
} Szt_ValueDlnkNonUEAssociatedLPPaTport_IEsCls;
typedef struct s1apProtIE_Field_DlnkNonUEAssociatedLPPaTport_IEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueDlnkNonUEAssociatedLPPaTport_IEsCls value;
} SztProtIE_Field_DlnkNonUEAssociatedLPPaTport_IEs;

typedef struct s1apProtIE_Cont_DlnkNonUEAssociatedLPPaTport_IEs
{
 TknU16 noComp;
 SztProtIE_Field_DlnkNonUEAssociatedLPPaTport_IEs *member;
}SztProtIE_Cont_DlnkNonUEAssociatedLPPaTport_IEs;

typedef struct s1apDlnkNonUEAssociatedLPPaTport
{
 TknPres pres;
 SztProtIE_Cont_DlnkNonUEAssociatedLPPaTport_IEs protocolIEs;
} SztDlnkNonUEAssociatedLPPaTport;

typedef struct s1ap_ValueUlnkNonUEAssociatedLPPaTport_IEsCls{
 union {
  SztRouting_ID sztRouting_ID;
  SztLPPa_PDU sztLPPa_PDU;
 } u;
} Szt_ValueUlnkNonUEAssociatedLPPaTport_IEsCls;
typedef struct s1apProtIE_Field_UlnkNonUEAssociatedLPPaTport_IEs
{
 TknPres pres;
 SztProtIE_ID id;
 SztCriticality criticality;
 Szt_ValueUlnkNonUEAssociatedLPPaTport_IEsCls value;
} SztProtIE_Field_UlnkNonUEAssociatedLPPaTport_IEs;

typedef struct s1apProtIE_Cont_UlnkNonUEAssociatedLPPaTport_IEs
{
 TknU16 noComp;
 SztProtIE_Field_UlnkNonUEAssociatedLPPaTport_IEs *member;
}SztProtIE_Cont_UlnkNonUEAssociatedLPPaTport_IEs;

typedef struct s1apUlnkNonUEAssociatedLPPaTport
{
 TknPres pres;
 SztProtIE_Cont_UlnkNonUEAssociatedLPPaTport_IEs protocolIEs;
} SztUlnkNonUEAssociatedLPPaTport;

typedef struct s1ap_InitiatingMsgCls{
 union {
  SztHovrReqd sztHovrReqd;
  SztHovrRqst sztHovrRqst;
  SztPathSwRqst sztPathSwRqst;
  SztE_RABSetupRqst sztE_RABSetupRqst;
  SztE_RABMdfyRqst sztE_RABMdfyRqst;
  SztE_RABRlsCmmd sztE_RABRlsCmmd;
  SztInitCntxtSetupRqst sztInitCntxtSetupRqst;
  SztHovrCancel sztHovrCancel;
  SztKillRqst sztKillRqst;
  SztReset sztReset;
  SztS1SetupRqst sztS1SetupRqst;
  SztUECntxtModificationRqst sztUECntxtModificationRqst;
  SztUECntxtRlsCmmd sztUECntxtRlsCmmd;
  SztENBConfigUpd sztENBConfigUpd;
  SztMMEConfigUpd sztMMEConfigUpd;
  SztWriteReplaceWarningRqst sztWriteReplaceWarningRqst;
  SztUERadioCapbltyMatchRqst sztUERadioCapbltyMatchRqst;
  SztHovrNtfy sztHovrNtfy;
  SztE_RABRlsInd sztE_RABRlsInd;
  SztPag sztPag;
  SztDlnkNASTport sztDlnkNASTport;
  SztInitUEMsg sztInitUEMsg;
  SztUlnkNASTport sztUlnkNASTport;
  SztErrInd sztErrInd;
  SztNASNonDlvryInd sztNASNonDlvryInd;
  SztUECntxtRlsRqst sztUECntxtRlsRqst;
  SztDlnkS1cdma2000tunneling sztDlnkS1cdma2000tunneling;
  SztUlnkS1cdma2000tunneling sztUlnkS1cdma2000tunneling;
  SztUECapbltyInfoInd sztUECapbltyInfoInd;
  SztENBStatusTfr sztENBStatusTfr;
  SztMMEStatusTfr sztMMEStatusTfr;
  SztDeactvTrace sztDeactvTrace;
  SztTraceStart sztTraceStart;
  SztTraceFailInd sztTraceFailInd;
  SztCellTrafficTrace sztCellTrafficTrace;
  SztLocRprtngCntrl sztLocRprtngCntrl;
  SztLocRprtngFailInd sztLocRprtngFailInd;
  SztLocReport sztLocReport;
  SztOverloadStart sztOverloadStart;
  SztOverloadStop sztOverloadStop;
  SztENBDirectInformTfr sztENBDirectInformTfr;
  SztMMEDirectInformTfr sztMMEDirectInformTfr;
  SztENBConfigTfr sztENBConfigTfr;
  SztMMEConfigTfr sztMMEConfigTfr;
  SztPrivMsg sztPrivMsg;
  SztDlnkUEAssociatedLPPaTport sztDlnkUEAssociatedLPPaTport;
  SztUlnkUEAssociatedLPPaTport sztUlnkUEAssociatedLPPaTport;
  SztDlnkNonUEAssociatedLPPaTport sztDlnkNonUEAssociatedLPPaTport;
  SztUlnkNonUEAssociatedLPPaTport sztUlnkNonUEAssociatedLPPaTport;
 } u;
} Szt_InitiatingMsgCls;
typedef struct s1apInitiatingMsg
{
 TknPres pres;
 SztProcedureCode procedureCode;
 SztCriticality criticality;
 Szt_InitiatingMsgCls value;
} SztInitiatingMsg;

typedef struct s1ap_SuccessfulOutcomeCls{
 union {
  SztHovrCmmd sztHovrCmmd;
  SztHovrRqstAckg sztHovrRqstAckg;
  SztPathSwRqstAckg sztPathSwRqstAckg;
  SztE_RABSetupResp sztE_RABSetupResp;
  SztE_RABMdfyResp sztE_RABMdfyResp;
  SztE_RABRlsResp sztE_RABRlsResp;
  SztInitCntxtSetupResp sztInitCntxtSetupResp;
  SztHovrCancelAckg sztHovrCancelAckg;
  SztKillResp sztKillResp;
  SztResetAckg sztResetAckg;
  SztS1SetupResp sztS1SetupResp;
  SztUECntxtModificationResp sztUECntxtModificationResp;
  SztUECntxtRlsComplete sztUECntxtRlsComplete;
  SztENBConfigUpdAckg sztENBConfigUpdAckg;
  SztMMEConfigUpdAckg sztMMEConfigUpdAckg;
  SztWriteReplaceWarningResp sztWriteReplaceWarningResp;
  SztUERadioCapbltyMatchResp sztUERadioCapbltyMatchResp;
 } u;
} Szt_SuccessfulOutcomeCls;
typedef struct s1apSuccessfulOutcome
{
 TknPres pres;
 SztProcedureCode procedureCode;
 SztCriticality criticality;
 Szt_SuccessfulOutcomeCls value;
} SztSuccessfulOutcome;

typedef struct s1ap_UnsuccessfulOutcomeCls{
 union {
  SztHovrPrepFail sztHovrPrepFail;
  SztHovrFail sztHovrFail;
  SztPathSwRqstFail sztPathSwRqstFail;
  SztInitCntxtSetupFail sztInitCntxtSetupFail;
  SztS1SetupFail sztS1SetupFail;
  SztUECntxtModificationFail sztUECntxtModificationFail;
  SztENBConfigUpdFail sztENBConfigUpdFail;
  SztMMEConfigUpdFail sztMMEConfigUpdFail;
 } u;
} Szt_UnsuccessfulOutcomeCls;
typedef struct s1apUnsuccessfulOutcome
{
 TknPres pres;
 SztProcedureCode procedureCode;
 SztCriticality criticality;
 Szt_UnsuccessfulOutcomeCls value;
} SztUnsuccessfulOutcome;

typedef struct s1apS1AP_PDU
{
 TknU8 choice;
 union {
  SztInitiatingMsg initiatingMsg;
  SztSuccessfulOutcome successfulOutcome;
  SztUnsuccessfulOutcome unsuccessfulOutcome;
 } val;
} SztS1AP_PDU;

extern S16 cmPkSztPrivIE_ID (SztPrivIE_ID *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnEUTRAN_CGI_ExtIEsCls (Szt_ExtnEUTRAN_CGI_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_EUTRAN_CGI_ExtIEs (SztProtExtnField_EUTRAN_CGI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_EUTRAN_CGI_ExtIEs (SztProtExtnCont_EUTRAN_CGI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztEUTRAN_CGI (SztEUTRAN_CGI *param, Buffer *mBuf);
extern S16 cmPkSztCellIdLstforMDT (SztCellIdLstforMDT *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCellBasedMDT_ExtIEsCls (Szt_ExtnCellBasedMDT_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CellBasedMDT_ExtIEs (SztProtExtnField_CellBasedMDT_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CellBasedMDT_ExtIEs (SztProtExtnCont_CellBasedMDT_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCellBasedMDT (SztCellBasedMDT *param, Buffer *mBuf);
extern S16 cmPkSztTALstforMDT (SztTALstforMDT *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTABasedMDT_ExtIEsCls (Szt_ExtnTABasedMDT_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TABasedMDT_ExtIEs (SztProtExtnField_TABasedMDT_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TABasedMDT_ExtIEs (SztProtExtnCont_TABasedMDT_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTABasedMDT (SztTABasedMDT *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTAI_ExtIEsCls (Szt_ExtnTAI_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TAI_ExtIEs (SztProtExtnField_TAI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TAI_ExtIEs (SztProtExtnCont_TAI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTAI (SztTAI *param, Buffer *mBuf);
extern S16 cmPkSztTAILstforMDT (SztTAILstforMDT *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTAIBasedMDT_ExtIEsCls (Szt_ExtnTAIBasedMDT_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TAIBasedMDT_ExtIEs (SztProtExtnField_TAIBasedMDT_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TAIBasedMDT_ExtIEs (SztProtExtnCont_TAIBasedMDT_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTAIBasedMDT (SztTAIBasedMDT *param, Buffer *mBuf);
extern S16 cmPkSztAreaScopeOfMDT (SztAreaScopeOfMDT *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnAllocnAndRetentionPriority_ExtIEsCls (Szt_ExtnAllocnAndRetentionPriority_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_AllocnAndRetentionPriority_ExtIEs (SztProtExtnField_AllocnAndRetentionPriority_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_AllocnAndRetentionPriority_ExtIEs (SztProtExtnCont_AllocnAndRetentionPriority_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztAllocnAndRetentionPriority (SztAllocnAndRetentionPriority *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCOUNTvalue_ExtIEsCls (Szt_ExtnCOUNTvalue_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_COUNTvalue_ExtIEs (SztProtExtnField_COUNTvalue_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_COUNTvalue_ExtIEs (SztProtExtnCont_COUNTvalue_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCOUNTvalue (SztCOUNTvalue *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCOUNTValueExtended_ExtIEsCls (Szt_ExtnCOUNTValueExtended_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_COUNTValueExtended_ExtIEs (SztProtExtnField_COUNTValueExtended_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_COUNTValueExtended_ExtIEs (SztProtExtnCont_COUNTValueExtended_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCOUNTValueExtended (SztCOUNTValueExtended *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnBrs_SubjToStatusTfr_ItemExtIEsCls (Szt_ExtnBrs_SubjToStatusTfr_ItemExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_Brs_SubjToStatusTfr_ItemExtIEs (SztProtExtnField_Brs_SubjToStatusTfr_ItemExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_Brs_SubjToStatusTfr_ItemExtIEs (SztProtExtnCont_Brs_SubjToStatusTfr_ItemExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztBrs_SubjToStatusTfr_Item (SztBrs_SubjToStatusTfr_Item *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueBrs_SubjToStatusTfr_ItemIEsCls (Szt_ValueBrs_SubjToStatusTfr_ItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_Brs_SubjToStatusTfr_ItemIEs (SztProtIE_Field_Brs_SubjToStatusTfr_ItemIEs *param, Buffer *mBuf);
extern S16 cmPkSztBrs_SubjToStatusTfrLst (SztBrs_SubjToStatusTfrLst *param, Buffer *mBuf);
extern S16 cmPkSztBPLMNs (SztBPLMNs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCellID_Cancelled_Item_ExtIEsCls (Szt_ExtnCellID_Cancelled_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CellID_Cancelled_Item_ExtIEs (SztProtExtnField_CellID_Cancelled_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CellID_Cancelled_Item_ExtIEs (SztProtExtnCont_CellID_Cancelled_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCellID_Cancelled_Item (SztCellID_Cancelled_Item *param, Buffer *mBuf);
extern S16 cmPkSztCellID_Cancelled (SztCellID_Cancelled *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCancelledCellinTAI_Item_ExtIEsCls (Szt_ExtnCancelledCellinTAI_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CancelledCellinTAI_Item_ExtIEs (SztProtExtnField_CancelledCellinTAI_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CancelledCellinTAI_Item_ExtIEs (SztProtExtnCont_CancelledCellinTAI_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCancelledCellinTAI_Item (SztCancelledCellinTAI_Item *param, Buffer *mBuf);
extern S16 cmPkSztCancelledCellinTAI (SztCancelledCellinTAI *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTAI_Cancelled_Item_ExtIEsCls (Szt_ExtnTAI_Cancelled_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TAI_Cancelled_Item_ExtIEs (SztProtExtnField_TAI_Cancelled_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TAI_Cancelled_Item_ExtIEs (SztProtExtnCont_TAI_Cancelled_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTAI_Cancelled_Item (SztTAI_Cancelled_Item *param, Buffer *mBuf);
extern S16 cmPkSztTAI_Cancelled (SztTAI_Cancelled *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCancelledCellinEAI_Item_ExtIEsCls (Szt_ExtnCancelledCellinEAI_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CancelledCellinEAI_Item_ExtIEs (SztProtExtnField_CancelledCellinEAI_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CancelledCellinEAI_Item_ExtIEs (SztProtExtnCont_CancelledCellinEAI_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCancelledCellinEAI_Item (SztCancelledCellinEAI_Item *param, Buffer *mBuf);
extern S16 cmPkSztCancelledCellinEAI (SztCancelledCellinEAI *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnEmergencyAreaID_Cancelled_Item_ExtIEsCls (Szt_ExtnEmergencyAreaID_Cancelled_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_EmergencyAreaID_Cancelled_Item_ExtIEs (SztProtExtnField_EmergencyAreaID_Cancelled_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_EmergencyAreaID_Cancelled_Item_ExtIEs (SztProtExtnCont_EmergencyAreaID_Cancelled_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztEmergencyAreaID_Cancelled_Item (SztEmergencyAreaID_Cancelled_Item *param, Buffer *mBuf);
extern S16 cmPkSztEmergencyAreaID_Cancelled (SztEmergencyAreaID_Cancelled *param, Buffer *mBuf);
extern S16 cmPkSztBroadcastCancelledAreaLst (SztBroadcastCancelledAreaLst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCellID_Broadcast_Item_ExtIEsCls (Szt_ExtnCellID_Broadcast_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CellID_Broadcast_Item_ExtIEs (SztProtExtnField_CellID_Broadcast_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CellID_Broadcast_Item_ExtIEs (SztProtExtnCont_CellID_Broadcast_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCellID_Broadcast_Item (SztCellID_Broadcast_Item *param, Buffer *mBuf);
extern S16 cmPkSztCellID_Broadcast (SztCellID_Broadcast *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCompletedCellinTAI_Item_ExtIEsCls (Szt_ExtnCompletedCellinTAI_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CompletedCellinTAI_Item_ExtIEs (SztProtExtnField_CompletedCellinTAI_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CompletedCellinTAI_Item_ExtIEs (SztProtExtnCont_CompletedCellinTAI_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCompletedCellinTAI_Item (SztCompletedCellinTAI_Item *param, Buffer *mBuf);
extern S16 cmPkSztCompletedCellinTAI (SztCompletedCellinTAI *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTAI_Broadcast_Item_ExtIEsCls (Szt_ExtnTAI_Broadcast_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TAI_Broadcast_Item_ExtIEs (SztProtExtnField_TAI_Broadcast_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TAI_Broadcast_Item_ExtIEs (SztProtExtnCont_TAI_Broadcast_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTAI_Broadcast_Item (SztTAI_Broadcast_Item *param, Buffer *mBuf);
extern S16 cmPkSztTAI_Broadcast (SztTAI_Broadcast *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCompletedCellinEAI_Item_ExtIEsCls (Szt_ExtnCompletedCellinEAI_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CompletedCellinEAI_Item_ExtIEs (SztProtExtnField_CompletedCellinEAI_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CompletedCellinEAI_Item_ExtIEs (SztProtExtnCont_CompletedCellinEAI_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCompletedCellinEAI_Item (SztCompletedCellinEAI_Item *param, Buffer *mBuf);
extern S16 cmPkSztCompletedCellinEAI (SztCompletedCellinEAI *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnEmergencyAreaID_Broadcast_Item_ExtIEsCls (Szt_ExtnEmergencyAreaID_Broadcast_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_EmergencyAreaID_Broadcast_Item_ExtIEs (SztProtExtnField_EmergencyAreaID_Broadcast_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_EmergencyAreaID_Broadcast_Item_ExtIEs (SztProtExtnCont_EmergencyAreaID_Broadcast_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztEmergencyAreaID_Broadcast_Item (SztEmergencyAreaID_Broadcast_Item *param, Buffer *mBuf);
extern S16 cmPkSztEmergencyAreaID_Broadcast (SztEmergencyAreaID_Broadcast *param, Buffer *mBuf);
extern S16 cmPkSztBroadcastCompletedAreaLst (SztBroadcastCompletedAreaLst *param, Buffer *mBuf);
extern S16 cmPkSztCause (SztCause *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCdma2000OneXSRVCCInfo_ExtIEsCls (Szt_ExtnCdma2000OneXSRVCCInfo_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_Cdma2000OneXSRVCCInfo_ExtIEs (SztProtExtnField_Cdma2000OneXSRVCCInfo_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_Cdma2000OneXSRVCCInfo_ExtIEs (SztProtExtnCont_Cdma2000OneXSRVCCInfo_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCdma2000OneXSRVCCInfo (SztCdma2000OneXSRVCCInfo *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCellTyp_ExtIEsCls (Szt_ExtnCellTyp_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CellTyp_ExtIEs (SztProtExtnField_CellTyp_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CellTyp_ExtIEs (SztProtExtnCont_CellTyp_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCellTyp (SztCellTyp *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCGI_ExtIEsCls (Szt_ExtnCGI_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CGI_ExtIEs (SztProtExtnField_CGI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CGI_ExtIEs (SztProtExtnCont_CGI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCGI (SztCGI *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCSG_IdLst_Item_ExtIEsCls (Szt_ExtnCSG_IdLst_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CSG_IdLst_Item_ExtIEs (SztProtExtnField_CSG_IdLst_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CSG_IdLst_Item_ExtIEs (SztProtExtnCont_CSG_IdLst_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCSG_IdLst_Item (SztCSG_IdLst_Item *param, Buffer *mBuf);
extern S16 cmPkSztCSG_IdLst (SztCSG_IdLst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCriticalityDiag_IE_Item_ExtIEsCls (Szt_ExtnCriticalityDiag_IE_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CriticalityDiag_IE_Item_ExtIEs (SztProtExtnField_CriticalityDiag_IE_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CriticalityDiag_IE_Item_ExtIEs (SztProtExtnCont_CriticalityDiag_IE_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCriticalityDiag_IE_Item (SztCriticalityDiag_IE_Item *param, Buffer *mBuf);
extern S16 cmPkSztCriticalityDiag_IE_Lst (SztCriticalityDiag_IE_Lst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnCriticalityDiag_ExtIEsCls (Szt_ExtnCriticalityDiag_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_CriticalityDiag_ExtIEs (SztProtExtnField_CriticalityDiag_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_CriticalityDiag_ExtIEs (SztProtExtnCont_CriticalityDiag_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztCriticalityDiag (SztCriticalityDiag *param, Buffer *mBuf);
extern S16 cmPkSztECGILst (SztECGILst *param, Buffer *mBuf);
extern S16 cmPkSztEmergencyAreaIDLst (SztEmergencyAreaIDLst *param, Buffer *mBuf);
extern S16 cmPkSztENB_ID (SztENB_ID *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnLAI_ExtIEsCls (Szt_ExtnLAI_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_LAI_ExtIEs (SztProtExtnField_LAI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_LAI_ExtIEs (SztProtExtnCont_LAI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztLAI (SztLAI *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnGERAN_Cell_ID_ExtIEsCls (Szt_ExtnGERAN_Cell_ID_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_GERAN_Cell_ID_ExtIEs (SztProtExtnField_GERAN_Cell_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_GERAN_Cell_ID_ExtIEs (SztProtExtnCont_GERAN_Cell_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztGERAN_Cell_ID (SztGERAN_Cell_ID *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnGlobalENB_ID_ExtIEsCls (Szt_ExtnGlobalENB_ID_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_GlobalENB_ID_ExtIEs (SztProtExtnField_GlobalENB_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_GlobalENB_ID_ExtIEs (SztProtExtnCont_GlobalENB_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztGlobal_ENB_ID (SztGlobal_ENB_ID *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnGUMMEI_ExtIEsCls (Szt_ExtnGUMMEI_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_GUMMEI_ExtIEs (SztProtExtnField_GUMMEI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_GUMMEI_ExtIEs (SztProtExtnCont_GUMMEI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztGUMMEI (SztGUMMEI *param, Buffer *mBuf);
extern S16 cmPkSztGUMMEILst (SztGUMMEILst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnENB_StatusTfr_TprntCont_ExtIEsCls (Szt_ExtnENB_StatusTfr_TprntCont_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_ENB_StatusTfr_TprntCont_ExtIEs (SztProtExtnField_ENB_StatusTfr_TprntCont_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_ENB_StatusTfr_TprntCont_ExtIEs (SztProtExtnCont_ENB_StatusTfr_TprntCont_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztENB_StatusTfr_TprntCont (SztENB_StatusTfr_TprntCont *param, Buffer *mBuf);
extern S16 cmPkSztENBX2TLAs (SztENBX2TLAs *param, Buffer *mBuf);
extern S16 cmPkSztEPLMNs (SztEPLMNs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABInformLstItem_ExtIEsCls (Szt_ExtnE_RABInformLstItem_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABInformLstItem_ExtIEs (SztProtExtnField_E_RABInformLstItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABInformLstItem_ExtIEs (SztProtExtnCont_E_RABInformLstItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABInformLstItem (SztE_RABInformLstItem *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABInformLstIEsCls (Szt_ValueE_RABInformLstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABInformLstIEs (SztProtIE_Field_E_RABInformLstIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABInformLst (SztE_RABInformLst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABItem_ExtIEsCls (Szt_ExtnE_RABItem_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABItem_ExtIEs (SztProtExtnField_E_RABItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABItem_ExtIEs (SztProtExtnCont_E_RABItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABItem (SztE_RABItem *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABItemIEsCls (Szt_ValueE_RABItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABItemIEs (SztProtIE_Field_E_RABItemIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABLst (SztE_RABLst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnGBR_QosInform_ExtIEsCls (Szt_ExtnGBR_QosInform_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_GBR_QosInform_ExtIEs (SztProtExtnField_GBR_QosInform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_GBR_QosInform_ExtIEs (SztProtExtnCont_GBR_QosInform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztGBR_QosInform (SztGBR_QosInform *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABQoSParams_ExtIEsCls (Szt_ExtnE_RABQoSParams_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABQoSParams_ExtIEs (SztProtExtnField_E_RABQoSParams_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABQoSParams_ExtIEs (SztProtExtnCont_E_RABQoSParams_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABLvlQoSParams (SztE_RABLvlQoSParams *param, Buffer *mBuf);
extern S16 cmPkSztForbiddenTACs (SztForbiddenTACs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnForbiddenTAs_Item_ExtIEsCls (Szt_ExtnForbiddenTAs_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_ForbiddenTAs_Item_ExtIEs (SztProtExtnField_ForbiddenTAs_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_ForbiddenTAs_Item_ExtIEs (SztProtExtnCont_ForbiddenTAs_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztForbiddenTAs_Item (SztForbiddenTAs_Item *param, Buffer *mBuf);
extern S16 cmPkSztForbiddenTAs (SztForbiddenTAs *param, Buffer *mBuf);
extern S16 cmPkSztForbiddenLACs (SztForbiddenLACs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnForbiddenLAs_Item_ExtIEsCls (Szt_ExtnForbiddenLAs_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_ForbiddenLAs_Item_ExtIEs (SztProtExtnField_ForbiddenLAs_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_ForbiddenLAs_Item_ExtIEs (SztProtExtnCont_ForbiddenLAs_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztForbiddenLAs_Item (SztForbiddenLAs_Item *param, Buffer *mBuf);
extern S16 cmPkSztForbiddenLAs (SztForbiddenLAs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnHovrRestrnLst_ExtIEsCls (Szt_ExtnHovrRestrnLst_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_HovrRestrnLst_ExtIEs (SztProtExtnField_HovrRestrnLst_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_HovrRestrnLst_ExtIEs (SztProtExtnCont_HovrRestrnLst_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrRestrnLst (SztHovrRestrnLst *param, Buffer *mBuf);
extern S16 cmPkSztMeasurementThresholdA2 (SztMeasurementThresholdA2 *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnM1ThresholdEventA2_ExtIEsCls (Szt_ExtnM1ThresholdEventA2_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_M1ThresholdEventA2_ExtIEs (SztProtExtnField_M1ThresholdEventA2_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_M1ThresholdEventA2_ExtIEs (SztProtExtnCont_M1ThresholdEventA2_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztM1ThresholdEventA2 (SztM1ThresholdEventA2 *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnM1PeriodicRprtng_ExtIEsCls (Szt_ExtnM1PeriodicRprtng_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_M1PeriodicRprtng_ExtIEs (SztProtExtnField_M1PeriodicRprtng_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_M1PeriodicRprtng_ExtIEs (SztProtExtnCont_M1PeriodicRprtng_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztM1PeriodicRprtng (SztM1PeriodicRprtng *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnM3Config_ExtIEsCls (Szt_ExtnM3Config_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_M3Config_ExtIEs (SztProtExtnField_M3Config_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_M3Config_ExtIEs (SztProtExtnCont_M3Config_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztM3Config (SztM3Config *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnM4Config_ExtIEsCls (Szt_ExtnM4Config_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_M4Config_ExtIEs (SztProtExtnField_M4Config_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_M4Config_ExtIEs (SztProtExtnCont_M4Config_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztM4Config (SztM4Config *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnM5Config_ExtIEsCls (Szt_ExtnM5Config_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_M5Config_ExtIEs (SztProtExtnField_M5Config_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_M5Config_ExtIEs (SztProtExtnCont_M5Config_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztM5Config (SztM5Config *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnImmediateMDT_ExtIEsCls (Szt_ExtnImmediateMDT_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_ImmediateMDT_ExtIEs (SztProtExtnField_ImmediateMDT_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_ImmediateMDT_ExtIEs (SztProtExtnCont_ImmediateMDT_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztImmediateMDT (SztImmediateMDT *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls (Szt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs (SztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs (SztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztLastVisitedEUTRANCellInform (SztLastVisitedEUTRANCellInform *param, Buffer *mBuf);
extern S16 cmPkSztLastVisitedGERANCellInform (SztLastVisitedGERANCellInform *param, Buffer *mBuf);
extern S16 cmPkSztLastVisitedCell_Item (SztLastVisitedCell_Item *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnLoggedMDT_ExtIEsCls (Szt_ExtnLoggedMDT_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_LoggedMDT_ExtIEs (SztProtExtnField_LoggedMDT_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_LoggedMDT_ExtIEs (SztProtExtnCont_LoggedMDT_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztLoggedMDT (SztLoggedMDT *param, Buffer *mBuf);
extern S16 cmPkSztMDTMode (SztMDTMode *param, Buffer *mBuf);
extern S16 cmPkSztMDTPLMNLst (SztMDTPLMNLst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnMDT_Config_ExtIEsCls (Szt_ExtnMDT_Config_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_MDT_Config_ExtIEs (SztProtExtnField_MDT_Config_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_MDT_Config_ExtIEs (SztProtExtnCont_MDT_Config_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztMDT_Config (SztMDT_Config *param, Buffer *mBuf);
extern S16 cmPkSztOverloadResp (SztOverloadResp *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnRqstTyp_ExtIEsCls (Szt_ExtnRqstTyp_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_RqstTyp_ExtIEs (SztProtExtnField_RqstTyp_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_RqstTyp_ExtIEs (SztProtExtnCont_RqstTyp_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztRqstTyp (SztRqstTyp *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTgetRNC_ID_ExtIEsCls (Szt_ExtnTgetRNC_ID_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TgetRNC_ID_ExtIEs (SztProtExtnField_TgetRNC_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TgetRNC_ID_ExtIEs (SztProtExtnCont_TgetRNC_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTgetRNC_ID (SztTgetRNC_ID *param, Buffer *mBuf);
extern S16 cmPkSztRIMRoutingAddr (SztRIMRoutingAddr *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnRIMTfr_ExtIEsCls (Szt_ExtnRIMTfr_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_RIMTfr_ExtIEs (SztProtExtnField_RIMTfr_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_RIMTfr_ExtIEs (SztProtExtnCont_RIMTfr_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztRIMTfr (SztRIMTfr *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnSecurCntxt_ExtIEsCls (Szt_ExtnSecurCntxt_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_SecurCntxt_ExtIEs (SztProtExtnField_SecurCntxt_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_SecurCntxt_ExtIEs (SztProtExtnCont_SecurCntxt_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztSecurCntxt (SztSecurCntxt *param, Buffer *mBuf);
extern S16 cmPkSztENBX2GTPTLAs (SztENBX2GTPTLAs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnENBX2ExtTLA_ExtIEsCls (Szt_ExtnENBX2ExtTLA_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_ENBX2ExtTLA_ExtIEs (SztProtExtnField_ENBX2ExtTLA_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_ENBX2ExtTLA_ExtIEs (SztProtExtnCont_ENBX2ExtTLA_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztENBX2ExtTLA (SztENBX2ExtTLA *param, Buffer *mBuf);
extern S16 cmPkSztENBX2ExtTLAs (SztENBX2ExtTLAs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnX2TNLConfigInfo_ExtIEsCls (Szt_ExtnX2TNLConfigInfo_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_X2TNLConfigInfo_ExtIEs (SztProtExtnField_X2TNLConfigInfo_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_X2TNLConfigInfo_ExtIEs (SztProtExtnCont_X2TNLConfigInfo_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztX2TNLConfigInfo (SztX2TNLConfigInfo *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTimeSynchronizationInfo_ExtIEsCls (Szt_ExtnTimeSynchronizationInfo_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TimeSynchronizationInfo_ExtIEs (SztProtExtnField_TimeSynchronizationInfo_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TimeSynchronizationInfo_ExtIEs (SztProtExtnCont_TimeSynchronizationInfo_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTimeSynchronizationInfo (SztTimeSynchronizationInfo *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnSONInformReply_ExtIEsCls (Szt_ExtnSONInformReply_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_SONInformReply_ExtIEs (SztProtExtnField_SONInformReply_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_SONInformReply_ExtIEs (SztProtExtnCont_SONInformReply_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztSONInformReply (SztSONInformReply *param, Buffer *mBuf);
extern S16 cmPkSztSONInform (SztSONInform *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTgeteNB_ID_ExtIEsCls (Szt_ExtnTgeteNB_ID_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TgeteNB_ID_ExtIEs (SztProtExtnField_TgeteNB_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TgeteNB_ID_ExtIEs (SztProtExtnCont_TgeteNB_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTgeteNB_ID (SztTgeteNB_ID *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnSrceNB_ID_ExtIEsCls (Szt_ExtnSrceNB_ID_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_SrceNB_ID_ExtIEs (SztProtExtnField_SrceNB_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_SrceNB_ID_ExtIEs (SztProtExtnCont_SrceNB_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztSrceNB_ID (SztSrceNB_ID *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnSONConfigTfr_ExtIEsCls (Szt_ExtnSONConfigTfr_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_SONConfigTfr_ExtIEs (SztProtExtnField_SONConfigTfr_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_SONConfigTfr_ExtIEs (SztProtExtnCont_SONConfigTfr_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztSONConfigTfr (SztSONConfigTfr *param, Buffer *mBuf);
extern S16 cmPkSztUE_HistoryInform (SztUE_HistoryInform *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnSrceNB_ToTgeteNB_TprntCont_ExtIEsCls (Szt_ExtnSrceNB_ToTgeteNB_TprntCont_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_SrceNB_ToTgeteNB_TprntCont_ExtIEs (SztProtExtnField_SrceNB_ToTgeteNB_TprntCont_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_SrceNB_ToTgeteNB_TprntCont_ExtIEs (SztProtExtnCont_SrceNB_ToTgeteNB_TprntCont_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztSrceNB_ToTgeteNB_TprntCont (SztSrceNB_ToTgeteNB_TprntCont *param, Buffer *mBuf);
extern S16 cmPkSztSrvdPLMNs (SztSrvdPLMNs *param, Buffer *mBuf);
extern S16 cmPkSztSrvdGroupIDs (SztSrvdGroupIDs *param, Buffer *mBuf);
extern S16 cmPkSztSrvdMMECs (SztSrvdMMECs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnSrvdGUMMEIsItem_ExtIEsCls (Szt_ExtnSrvdGUMMEIsItem_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_SrvdGUMMEIsItem_ExtIEs (SztProtExtnField_SrvdGUMMEIsItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_SrvdGUMMEIsItem_ExtIEs (SztProtExtnCont_SrvdGUMMEIsItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztSrvdGUMMEIsItem (SztSrvdGUMMEIsItem *param, Buffer *mBuf);
extern S16 cmPkSztSrvdGUMMEIs (SztSrvdGUMMEIs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnSuppTAs_Item_ExtIEsCls (Szt_ExtnSuppTAs_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_SuppTAs_Item_ExtIEs (SztProtExtnField_SuppTAs_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_SuppTAs_Item_ExtIEs (SztProtExtnCont_SuppTAs_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztSuppTAs_Item (SztSuppTAs_Item *param, Buffer *mBuf);
extern S16 cmPkSztSuppTAs (SztSuppTAs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnS_TMSI_ExtIEsCls (Szt_ExtnS_TMSI_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_S_TMSI_ExtIEs (SztProtExtnField_S_TMSI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_S_TMSI_ExtIEs (SztProtExtnCont_S_TMSI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztS_TMSI (SztS_TMSI *param, Buffer *mBuf);
extern S16 cmPkSztTAILstforWarning (SztTAILstforWarning *param, Buffer *mBuf);
extern S16 cmPkSztTgetID (SztTgetID *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTgeteNB_ToSrceNB_TprntCont_ExtIEsCls (Szt_ExtnTgeteNB_ToSrceNB_TprntCont_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TgeteNB_ToSrceNB_TprntCont_ExtIEs (SztProtExtnField_TgeteNB_ToSrceNB_TprntCont_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TgeteNB_ToSrceNB_TprntCont_ExtIEs (SztProtExtnCont_TgeteNB_ToSrceNB_TprntCont_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTgeteNB_ToSrceNB_TprntCont (SztTgeteNB_ToSrceNB_TprntCont *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTraceActvn_ExtIEsCls (Szt_ExtnTraceActvn_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TraceActvn_ExtIEs (SztProtExtnField_TraceActvn_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TraceActvn_ExtIEs (SztProtExtnCont_TraceActvn_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTraceActvn (SztTraceActvn *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTunnel_Inform_ExtIEsCls (Szt_ExtnTunnel_Inform_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_Tunnel_Inform_ExtIEs (SztProtExtnField_Tunnel_Inform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_Tunnel_Inform_ExtIEs (SztProtExtnCont_Tunnel_Inform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTunnelInform (SztTunnelInform *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnUEAgg_MaxBitrates_ExtIEsCls (Szt_ExtnUEAgg_MaxBitrates_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_UEAgg_MaxBitrates_ExtIEs (SztProtExtnField_UEAgg_MaxBitrates_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_UEAgg_MaxBitrates_ExtIEs (SztProtExtnCont_UEAgg_MaxBitrates_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztUEAggMaxBitrate (SztUEAggMaxBitrate *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnUE_S1AP_ID_pair_ExtIEsCls (Szt_ExtnUE_S1AP_ID_pair_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_UE_S1AP_ID_pair_ExtIEs (SztProtExtnField_UE_S1AP_ID_pair_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_UE_S1AP_ID_pair_ExtIEs (SztProtExtnCont_UE_S1AP_ID_pair_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztUE_S1AP_ID_pair (SztUE_S1AP_ID_pair *param, Buffer *mBuf);
extern S16 cmPkSztUE_S1AP_IDs (SztUE_S1AP_IDs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnUE_assocLogS1_ConItemExtIEsCls (Szt_ExtnUE_assocLogS1_ConItemExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_UE_assocLogS1_ConItemExtIEs (SztProtExtnField_UE_assocLogS1_ConItemExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_UE_assocLogS1_ConItemExtIEs (SztProtExtnCont_UE_assocLogS1_ConItemExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztUE_assocLogS1_ConItem (SztUE_assocLogS1_ConItem *param, Buffer *mBuf);
extern S16 cmPkSztUEPagID (SztUEPagID *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnUESecurCapabilities_ExtIEsCls (Szt_ExtnUESecurCapabilities_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_UESecurCapabilities_ExtIEs (SztProtExtnField_UESecurCapabilities_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_UESecurCapabilities_ExtIEs (SztProtExtnCont_UESecurCapabilities_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztUESecurCapabilities (SztUESecurCapabilities *param, Buffer *mBuf);
extern S16 cmPkSztWarningAreaLst (SztWarningAreaLst *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueHovrReqdIEsCls (Szt_ValueHovrReqdIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_HovrReqdIEs (SztProtIE_Field_HovrReqdIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_HovrReqdIEs (SztProtIE_Cont_HovrReqdIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrReqd (SztHovrReqd *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABDataFwdingItem_ExtIEsCls (Szt_ExtnE_RABDataFwdingItem_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABDataFwdingItem_ExtIEs (SztProtExtnField_E_RABDataFwdingItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABDataFwdingItem_ExtIEs (SztProtExtnCont_E_RABDataFwdingItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABDataFwdingItem (SztE_RABDataFwdingItem *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABDataFwdingItemIEsCls (Szt_ValueE_RABDataFwdingItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABDataFwdingItemIEs (SztProtIE_Field_E_RABDataFwdingItemIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_ContLst_E_RABDataFwdingItemIEs (SztProtIE_ContLst_E_RABDataFwdingItemIEs *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueHovrCmmdIEsCls (Szt_ValueHovrCmmdIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_HovrCmmdIEs (SztProtIE_Field_HovrCmmdIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_HovrCmmdIEs (SztProtIE_Cont_HovrCmmdIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrCmmd (SztHovrCmmd *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueHovrPrepFailIEsCls (Szt_ValueHovrPrepFailIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_HovrPrepFailIEs (SztProtIE_Field_HovrPrepFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_HovrPrepFailIEs (SztProtIE_Cont_HovrPrepFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrPrepFail (SztHovrPrepFail *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABToBeSetupItemHOReq_ExtIEsCls (Szt_ExtnE_RABToBeSetupItemHOReq_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABToBeSetupItemHOReq_ExtIEs (SztProtExtnField_E_RABToBeSetupItemHOReq_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABToBeSetupItemHOReq_ExtIEs (SztProtExtnCont_E_RABToBeSetupItemHOReq_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABToBeSetupItemHOReq (SztE_RABToBeSetupItemHOReq *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABToBeSetupItemHOReqIEsCls (Szt_ValueE_RABToBeSetupItemHOReqIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABToBeSetupItemHOReqIEs (SztProtIE_Field_E_RABToBeSetupItemHOReqIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_ContLst_E_RABToBeSetupItemHOReqIEs (SztProtIE_ContLst_E_RABToBeSetupItemHOReqIEs *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueHovrRqstIEsCls (Szt_ValueHovrRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_HovrRqstIEs (SztProtIE_Field_HovrRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_HovrRqstIEs (SztProtIE_Cont_HovrRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrRqst (SztHovrRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABAdmtdItem_ExtIEsCls (Szt_ExtnE_RABAdmtdItem_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABAdmtdItem_ExtIEs (SztProtExtnField_E_RABAdmtdItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABAdmtdItem_ExtIEs (SztProtExtnCont_E_RABAdmtdItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABAdmtdItem (SztE_RABAdmtdItem *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABAdmtdItemIEsCls (Szt_ValueE_RABAdmtdItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABAdmtdItemIEs (SztProtIE_Field_E_RABAdmtdItemIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_ContLst_E_RABAdmtdItemIEs (SztProtIE_ContLst_E_RABAdmtdItemIEs *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABFailedToSetupItemHOReqAckExtIEsCls (Szt_ExtnE_RABFailedToSetupItemHOReqAckExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABFailedToSetupItemHOReqAckExtIEs (SztProtExtnField_E_RABFailedToSetupItemHOReqAckExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABFailedToSetupItemHOReqAckExtIEs (SztProtExtnCont_E_RABFailedToSetupItemHOReqAckExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABFailedToSetupItemHOReqAck (SztE_RABFailedToSetupItemHOReqAck *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABFailedtoSetupItemHOReqAckIEsCls (Szt_ValueE_RABFailedtoSetupItemHOReqAckIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABFailedtoSetupItemHOReqAckIEs (SztProtIE_Field_E_RABFailedtoSetupItemHOReqAckIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_ContLst_E_RABFailedtoSetupItemHOReqAckIEs (SztProtIE_ContLst_E_RABFailedtoSetupItemHOReqAckIEs *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueHovrRqstAckgIEsCls (Szt_ValueHovrRqstAckgIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_HovrRqstAckgIEs (SztProtIE_Field_HovrRqstAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_HovrRqstAckgIEs (SztProtIE_Cont_HovrRqstAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrRqstAckg (SztHovrRqstAckg *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueHovrFailIEsCls (Szt_ValueHovrFailIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_HovrFailIEs (SztProtIE_Field_HovrFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_HovrFailIEs (SztProtIE_Cont_HovrFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrFail (SztHovrFail *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueHovrNtfyIEsCls (Szt_ValueHovrNtfyIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_HovrNtfyIEs (SztProtIE_Field_HovrNtfyIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_HovrNtfyIEs (SztProtIE_Cont_HovrNtfyIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrNtfy (SztHovrNtfy *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABToBeSwedDLItem_ExtIEsCls (Szt_ExtnE_RABToBeSwedDLItem_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABToBeSwedDLItem_ExtIEs (SztProtExtnField_E_RABToBeSwedDLItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABToBeSwedDLItem_ExtIEs (SztProtExtnCont_E_RABToBeSwedDLItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABToBeSwedDLItem (SztE_RABToBeSwedDLItem *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABToBeSwedDLItemIEsCls (Szt_ValueE_RABToBeSwedDLItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABToBeSwedDLItemIEs (SztProtIE_Field_E_RABToBeSwedDLItemIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_ContLst_E_RABToBeSwedDLItemIEs (SztProtIE_ContLst_E_RABToBeSwedDLItemIEs *param, Buffer *mBuf);
extern S16 cmPkSzt_ValuePathSwRqstIEsCls (Szt_ValuePathSwRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_PathSwRqstIEs (SztProtIE_Field_PathSwRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_PathSwRqstIEs (SztProtIE_Cont_PathSwRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztPathSwRqst (SztPathSwRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABToBeSwedULItem_ExtIEsCls (Szt_ExtnE_RABToBeSwedULItem_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABToBeSwedULItem_ExtIEs (SztProtExtnField_E_RABToBeSwedULItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABToBeSwedULItem_ExtIEs (SztProtExtnCont_E_RABToBeSwedULItem_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABToBeSwedULItem (SztE_RABToBeSwedULItem *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABToBeSwedULItemIEsCls (Szt_ValueE_RABToBeSwedULItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABToBeSwedULItemIEs (SztProtIE_Field_E_RABToBeSwedULItemIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_ContLst_E_RABToBeSwedULItemIEs (SztProtIE_ContLst_E_RABToBeSwedULItemIEs *param, Buffer *mBuf);
extern S16 cmPkSzt_ValuePathSwRqstAckgIEsCls (Szt_ValuePathSwRqstAckgIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_PathSwRqstAckgIEs (SztProtIE_Field_PathSwRqstAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_PathSwRqstAckgIEs (SztProtIE_Cont_PathSwRqstAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztPathSwRqstAckg (SztPathSwRqstAckg *param, Buffer *mBuf);
extern S16 cmPkSzt_ValuePathSwRqstFailIEsCls (Szt_ValuePathSwRqstFailIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_PathSwRqstFailIEs (SztProtIE_Field_PathSwRqstFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_PathSwRqstFailIEs (SztProtIE_Cont_PathSwRqstFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztPathSwRqstFail (SztPathSwRqstFail *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueHovrCancelIEsCls (Szt_ValueHovrCancelIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_HovrCancelIEs (SztProtIE_Field_HovrCancelIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_HovrCancelIEs (SztProtIE_Cont_HovrCancelIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrCancel (SztHovrCancel *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueHovrCancelAckgIEsCls (Szt_ValueHovrCancelAckgIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_HovrCancelAckgIEs (SztProtIE_Field_HovrCancelAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_HovrCancelAckgIEs (SztProtIE_Cont_HovrCancelAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztHovrCancelAckg (SztHovrCancelAckg *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABToBeSetupItemBrSUReqExtIEsCls (Szt_ExtnE_RABToBeSetupItemBrSUReqExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABToBeSetupItemBrSUReqExtIEs (SztProtExtnField_E_RABToBeSetupItemBrSUReqExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABToBeSetupItemBrSUReqExtIEs (SztProtExtnCont_E_RABToBeSetupItemBrSUReqExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABToBeSetupItemBrSUReq (SztE_RABToBeSetupItemBrSUReq *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABToBeSetupItemBrSUReqIEsCls (Szt_ValueE_RABToBeSetupItemBrSUReqIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABToBeSetupItemBrSUReqIEs (SztProtIE_Field_E_RABToBeSetupItemBrSUReqIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABToBeSetupLstBrSUReq (SztE_RABToBeSetupLstBrSUReq *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABSetupRqstIEsCls (Szt_ValueE_RABSetupRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABSetupRqstIEs (SztProtIE_Field_E_RABSetupRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_E_RABSetupRqstIEs (SztProtIE_Cont_E_RABSetupRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABSetupRqst (SztE_RABSetupRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABSetupItemBrSUResExtIEsCls (Szt_ExtnE_RABSetupItemBrSUResExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABSetupItemBrSUResExtIEs (SztProtExtnField_E_RABSetupItemBrSUResExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABSetupItemBrSUResExtIEs (SztProtExtnCont_E_RABSetupItemBrSUResExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABSetupItemBrSURes (SztE_RABSetupItemBrSURes *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABSetupItemBrSUResIEsCls (Szt_ValueE_RABSetupItemBrSUResIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABSetupItemBrSUResIEs (SztProtIE_Field_E_RABSetupItemBrSUResIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABSetupLstBrSURes (SztE_RABSetupLstBrSURes *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABSetupRespIEsCls (Szt_ValueE_RABSetupRespIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABSetupRespIEs (SztProtIE_Field_E_RABSetupRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_E_RABSetupRespIEs (SztProtIE_Cont_E_RABSetupRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABSetupResp (SztE_RABSetupResp *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABToBeMdfyItemBrModReqExtIEsCls (Szt_ExtnE_RABToBeMdfyItemBrModReqExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABToBeMdfyItemBrModReqExtIEs (SztProtExtnField_E_RABToBeMdfyItemBrModReqExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABToBeMdfyItemBrModReqExtIEs (SztProtExtnCont_E_RABToBeMdfyItemBrModReqExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABToBeMdfdItemBrModReq (SztE_RABToBeMdfdItemBrModReq *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABToBeMdfdItemBrModReqIEsCls (Szt_ValueE_RABToBeMdfdItemBrModReqIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABToBeMdfdItemBrModReqIEs (SztProtIE_Field_E_RABToBeMdfdItemBrModReqIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABToBeMdfdLstBrModReq (SztE_RABToBeMdfdLstBrModReq *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABMdfyRqstIEsCls (Szt_ValueE_RABMdfyRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABMdfyRqstIEs (SztProtIE_Field_E_RABMdfyRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_E_RABMdfyRqstIEs (SztProtIE_Cont_E_RABMdfyRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABMdfyRqst (SztE_RABMdfyRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABMdfyItemBrModResExtIEsCls (Szt_ExtnE_RABMdfyItemBrModResExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABMdfyItemBrModResExtIEs (SztProtExtnField_E_RABMdfyItemBrModResExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABMdfyItemBrModResExtIEs (SztProtExtnCont_E_RABMdfyItemBrModResExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABMdfyItemBrModRes (SztE_RABMdfyItemBrModRes *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABMdfyItemBrModResIEsCls (Szt_ValueE_RABMdfyItemBrModResIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABMdfyItemBrModResIEs (SztProtIE_Field_E_RABMdfyItemBrModResIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABMdfyLstBrModRes (SztE_RABMdfyLstBrModRes *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABMdfyRespIEsCls (Szt_ValueE_RABMdfyRespIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABMdfyRespIEs (SztProtIE_Field_E_RABMdfyRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_E_RABMdfyRespIEs (SztProtIE_Cont_E_RABMdfyRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABMdfyResp (SztE_RABMdfyResp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABRlsCmmdIEsCls (Szt_ValueE_RABRlsCmmdIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABRlsCmmdIEs (SztProtIE_Field_E_RABRlsCmmdIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_E_RABRlsCmmdIEs (SztProtIE_Cont_E_RABRlsCmmdIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABRlsCmmd (SztE_RABRlsCmmd *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABRlsItemBrRelCompExtIEsCls (Szt_ExtnE_RABRlsItemBrRelCompExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABRlsItemBrRelCompExtIEs (SztProtExtnField_E_RABRlsItemBrRelCompExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABRlsItemBrRelCompExtIEs (SztProtExtnCont_E_RABRlsItemBrRelCompExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABRlsItemBrRelComp (SztE_RABRlsItemBrRelComp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABRlsItemBrRelCompIEsCls (Szt_ValueE_RABRlsItemBrRelCompIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABRlsItemBrRelCompIEs (SztProtIE_Field_E_RABRlsItemBrRelCompIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABRlsLstBrRelComp (SztE_RABRlsLstBrRelComp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABRlsRespIEsCls (Szt_ValueE_RABRlsRespIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABRlsRespIEs (SztProtIE_Field_E_RABRlsRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_E_RABRlsRespIEs (SztProtIE_Cont_E_RABRlsRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABRlsResp (SztE_RABRlsResp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABRlsIndIEsCls (Szt_ValueE_RABRlsIndIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABRlsIndIEs (SztProtIE_Field_E_RABRlsIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_E_RABRlsIndIEs (SztProtIE_Cont_E_RABRlsIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABRlsInd (SztE_RABRlsInd *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABToBeSetupItemCtxtSUReqExtIEsCls (Szt_ExtnE_RABToBeSetupItemCtxtSUReqExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABToBeSetupItemCtxtSUReqExtIEs (SztProtExtnField_E_RABToBeSetupItemCtxtSUReqExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABToBeSetupItemCtxtSUReqExtIEs (SztProtExtnCont_E_RABToBeSetupItemCtxtSUReqExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABToBeSetupItemCtxtSUReq (SztE_RABToBeSetupItemCtxtSUReq *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABToBeSetupItemCtxtSUReqIEsCls (Szt_ValueE_RABToBeSetupItemCtxtSUReqIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABToBeSetupItemCtxtSUReqIEs (SztProtIE_Field_E_RABToBeSetupItemCtxtSUReqIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABToBeSetupLstCtxtSUReq (SztE_RABToBeSetupLstCtxtSUReq *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueInitCntxtSetupRqstIEsCls (Szt_ValueInitCntxtSetupRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_InitCntxtSetupRqstIEs (SztProtIE_Field_InitCntxtSetupRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_InitCntxtSetupRqstIEs (SztProtIE_Cont_InitCntxtSetupRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztInitCntxtSetupRqst (SztInitCntxtSetupRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnE_RABSetupItemCtxtSUResExtIEsCls (Szt_ExtnE_RABSetupItemCtxtSUResExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_E_RABSetupItemCtxtSUResExtIEs (SztProtExtnField_E_RABSetupItemCtxtSUResExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_E_RABSetupItemCtxtSUResExtIEs (SztProtExtnCont_E_RABSetupItemCtxtSUResExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABSetupItemCtxtSURes (SztE_RABSetupItemCtxtSURes *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueE_RABSetupItemCtxtSUResIEsCls (Szt_ValueE_RABSetupItemCtxtSUResIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_E_RABSetupItemCtxtSUResIEs (SztProtIE_Field_E_RABSetupItemCtxtSUResIEs *param, Buffer *mBuf);
extern S16 cmPkSztE_RABSetupLstCtxtSURes (SztE_RABSetupLstCtxtSURes *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueInitCntxtSetupRespIEsCls (Szt_ValueInitCntxtSetupRespIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_InitCntxtSetupRespIEs (SztProtIE_Field_InitCntxtSetupRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_InitCntxtSetupRespIEs (SztProtIE_Cont_InitCntxtSetupRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztInitCntxtSetupResp (SztInitCntxtSetupResp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueInitCntxtSetupFailIEsCls (Szt_ValueInitCntxtSetupFailIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_InitCntxtSetupFailIEs (SztProtIE_Field_InitCntxtSetupFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_InitCntxtSetupFailIEs (SztProtIE_Cont_InitCntxtSetupFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztInitCntxtSetupFail (SztInitCntxtSetupFail *param, Buffer *mBuf);
extern S16 cmPkSzt_ExtnTAIItemExtIEsCls (Szt_ExtnTAIItemExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtExtnField_TAIItemExtIEs (SztProtExtnField_TAIItemExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtExtnCont_TAIItemExtIEs (SztProtExtnCont_TAIItemExtIEs *param, Buffer *mBuf);
extern S16 cmPkSztTAIItem (SztTAIItem *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueTAIItemIEsCls (Szt_ValueTAIItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_TAIItemIEs (SztProtIE_Field_TAIItemIEs *param, Buffer *mBuf);
extern S16 cmPkSztTAILst (SztTAILst *param, Buffer *mBuf);
extern S16 cmPkSzt_ValuePagIEsCls (Szt_ValuePagIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_PagIEs (SztProtIE_Field_PagIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_PagIEs (SztProtIE_Cont_PagIEs *param, Buffer *mBuf);
extern S16 cmPkSztPag (SztPag *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUECntxtRlsRqst_IEsCls (Szt_ValueUECntxtRlsRqst_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UECntxtRlsRqst_IEs (SztProtIE_Field_UECntxtRlsRqst_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UECntxtRlsRqst_IEs (SztProtIE_Cont_UECntxtRlsRqst_IEs *param, Buffer *mBuf);
extern S16 cmPkSztUECntxtRlsRqst (SztUECntxtRlsRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUECntxtRlsCmmd_IEsCls (Szt_ValueUECntxtRlsCmmd_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UECntxtRlsCmmd_IEs (SztProtIE_Field_UECntxtRlsCmmd_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UECntxtRlsCmmd_IEs (SztProtIE_Cont_UECntxtRlsCmmd_IEs *param, Buffer *mBuf);
extern S16 cmPkSztUECntxtRlsCmmd (SztUECntxtRlsCmmd *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUECntxtRlsComplete_IEsCls (Szt_ValueUECntxtRlsComplete_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UECntxtRlsComplete_IEs (SztProtIE_Field_UECntxtRlsComplete_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UECntxtRlsComplete_IEs (SztProtIE_Cont_UECntxtRlsComplete_IEs *param, Buffer *mBuf);
extern S16 cmPkSztUECntxtRlsComplete (SztUECntxtRlsComplete *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUECntxtModificationRqstIEsCls (Szt_ValueUECntxtModificationRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UECntxtModificationRqstIEs (SztProtIE_Field_UECntxtModificationRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UECntxtModificationRqstIEs (SztProtIE_Cont_UECntxtModificationRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztUECntxtModificationRqst (SztUECntxtModificationRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUECntxtModificationRespIEsCls (Szt_ValueUECntxtModificationRespIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UECntxtModificationRespIEs (SztProtIE_Field_UECntxtModificationRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UECntxtModificationRespIEs (SztProtIE_Cont_UECntxtModificationRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztUECntxtModificationResp (SztUECntxtModificationResp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUECntxtModificationFailIEsCls (Szt_ValueUECntxtModificationFailIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UECntxtModificationFailIEs (SztProtIE_Field_UECntxtModificationFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UECntxtModificationFailIEs (SztProtIE_Cont_UECntxtModificationFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztUECntxtModificationFail (SztUECntxtModificationFail *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUERadioCapbltyMatchRqstIEsCls (Szt_ValueUERadioCapbltyMatchRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UERadioCapbltyMatchRqstIEs (SztProtIE_Field_UERadioCapbltyMatchRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UERadioCapbltyMatchRqstIEs (SztProtIE_Cont_UERadioCapbltyMatchRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztUERadioCapbltyMatchRqst (SztUERadioCapbltyMatchRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUERadioCapbltyMatchRespIEsCls (Szt_ValueUERadioCapbltyMatchRespIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UERadioCapbltyMatchRespIEs (SztProtIE_Field_UERadioCapbltyMatchRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UERadioCapbltyMatchRespIEs (SztProtIE_Cont_UERadioCapbltyMatchRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztUERadioCapbltyMatchResp (SztUERadioCapbltyMatchResp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueDlnkNASTport_IEsCls (Szt_ValueDlnkNASTport_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_DlnkNASTport_IEs (SztProtIE_Field_DlnkNASTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_DlnkNASTport_IEs (SztProtIE_Cont_DlnkNASTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztDlnkNASTport (SztDlnkNASTport *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueInitUEMsg_IEsCls (Szt_ValueInitUEMsg_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_InitUEMsg_IEs (SztProtIE_Field_InitUEMsg_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_InitUEMsg_IEs (SztProtIE_Cont_InitUEMsg_IEs *param, Buffer *mBuf);
extern S16 cmPkSztInitUEMsg (SztInitUEMsg *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUlnkNASTport_IEsCls (Szt_ValueUlnkNASTport_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UlnkNASTport_IEs (SztProtIE_Field_UlnkNASTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UlnkNASTport_IEs (SztProtIE_Cont_UlnkNASTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztUlnkNASTport (SztUlnkNASTport *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueNASNonDlvryInd_IEsCls (Szt_ValueNASNonDlvryInd_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_NASNonDlvryInd_IEs (SztProtIE_Field_NASNonDlvryInd_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_NASNonDlvryInd_IEs (SztProtIE_Cont_NASNonDlvryInd_IEs *param, Buffer *mBuf);
extern S16 cmPkSztNASNonDlvryInd (SztNASNonDlvryInd *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUE_assocLogS1_ConItemResCls (Szt_ValueUE_assocLogS1_ConItemResCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UE_assocLogS1_ConItemRes (SztProtIE_Field_UE_assocLogS1_ConItemRes *param, Buffer *mBuf);
extern S16 cmPkSztUE_assocLogS1_ConLstRes (SztUE_assocLogS1_ConLstRes *param, Buffer *mBuf);
extern S16 cmPkSztResetTyp (SztResetTyp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueResetIEsCls (Szt_ValueResetIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_ResetIEs (SztProtIE_Field_ResetIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_ResetIEs (SztProtIE_Cont_ResetIEs *param, Buffer *mBuf);
extern S16 cmPkSztReset (SztReset *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUE_assocLogS1_ConItemResAckCls (Szt_ValueUE_assocLogS1_ConItemResAckCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UE_assocLogS1_ConItemResAck (SztProtIE_Field_UE_assocLogS1_ConItemResAck *param, Buffer *mBuf);
extern S16 cmPkSztUE_assocLogS1_ConLstResAck (SztUE_assocLogS1_ConLstResAck *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueResetAckgIEsCls (Szt_ValueResetAckgIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_ResetAckgIEs (SztProtIE_Field_ResetAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_ResetAckgIEs (SztProtIE_Cont_ResetAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztResetAckg (SztResetAckg *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueErrIndIEsCls (Szt_ValueErrIndIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_ErrIndIEs (SztProtIE_Field_ErrIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_ErrIndIEs (SztProtIE_Cont_ErrIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztErrInd (SztErrInd *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueS1SetupRqstIEsCls (Szt_ValueS1SetupRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_S1SetupRqstIEs (SztProtIE_Field_S1SetupRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_S1SetupRqstIEs (SztProtIE_Cont_S1SetupRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztS1SetupRqst (SztS1SetupRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueS1SetupRespIEsCls (Szt_ValueS1SetupRespIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_S1SetupRespIEs (SztProtIE_Field_S1SetupRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_S1SetupRespIEs (SztProtIE_Cont_S1SetupRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztS1SetupResp (SztS1SetupResp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueS1SetupFailIEsCls (Szt_ValueS1SetupFailIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_S1SetupFailIEs (SztProtIE_Field_S1SetupFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_S1SetupFailIEs (SztProtIE_Cont_S1SetupFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztS1SetupFail (SztS1SetupFail *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueENBConfigUpdIEsCls (Szt_ValueENBConfigUpdIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_ENBConfigUpdIEs (SztProtIE_Field_ENBConfigUpdIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_ENBConfigUpdIEs (SztProtIE_Cont_ENBConfigUpdIEs *param, Buffer *mBuf);
extern S16 cmPkSztENBConfigUpd (SztENBConfigUpd *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueENBConfigUpdAckgIEsCls (Szt_ValueENBConfigUpdAckgIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_ENBConfigUpdAckgIEs (SztProtIE_Field_ENBConfigUpdAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_ENBConfigUpdAckgIEs (SztProtIE_Cont_ENBConfigUpdAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztENBConfigUpdAckg (SztENBConfigUpdAckg *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueENBConfigUpdFailIEsCls (Szt_ValueENBConfigUpdFailIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_ENBConfigUpdFailIEs (SztProtIE_Field_ENBConfigUpdFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_ENBConfigUpdFailIEs (SztProtIE_Cont_ENBConfigUpdFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztENBConfigUpdFail (SztENBConfigUpdFail *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueMMEConfigUpdIEsCls (Szt_ValueMMEConfigUpdIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_MMEConfigUpdIEs (SztProtIE_Field_MMEConfigUpdIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_MMEConfigUpdIEs (SztProtIE_Cont_MMEConfigUpdIEs *param, Buffer *mBuf);
extern S16 cmPkSztMMEConfigUpd (SztMMEConfigUpd *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueMMEConfigUpdAckgIEsCls (Szt_ValueMMEConfigUpdAckgIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_MMEConfigUpdAckgIEs (SztProtIE_Field_MMEConfigUpdAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_MMEConfigUpdAckgIEs (SztProtIE_Cont_MMEConfigUpdAckgIEs *param, Buffer *mBuf);
extern S16 cmPkSztMMEConfigUpdAckg (SztMMEConfigUpdAckg *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueMMEConfigUpdFailIEsCls (Szt_ValueMMEConfigUpdFailIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_MMEConfigUpdFailIEs (SztProtIE_Field_MMEConfigUpdFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_MMEConfigUpdFailIEs (SztProtIE_Cont_MMEConfigUpdFailIEs *param, Buffer *mBuf);
extern S16 cmPkSztMMEConfigUpdFail (SztMMEConfigUpdFail *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueDlnkS1cdma2000tunnelingIEsCls (Szt_ValueDlnkS1cdma2000tunnelingIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_DlnkS1cdma2000tunnelingIEs (SztProtIE_Field_DlnkS1cdma2000tunnelingIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_DlnkS1cdma2000tunnelingIEs (SztProtIE_Cont_DlnkS1cdma2000tunnelingIEs *param, Buffer *mBuf);
extern S16 cmPkSztDlnkS1cdma2000tunneling (SztDlnkS1cdma2000tunneling *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUlnkS1cdma2000tunnelingIEsCls (Szt_ValueUlnkS1cdma2000tunnelingIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UlnkS1cdma2000tunnelingIEs (SztProtIE_Field_UlnkS1cdma2000tunnelingIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UlnkS1cdma2000tunnelingIEs (SztProtIE_Cont_UlnkS1cdma2000tunnelingIEs *param, Buffer *mBuf);
extern S16 cmPkSztUlnkS1cdma2000tunneling (SztUlnkS1cdma2000tunneling *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUECapbltyInfoIndIEsCls (Szt_ValueUECapbltyInfoIndIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UECapbltyInfoIndIEs (SztProtIE_Field_UECapbltyInfoIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UECapbltyInfoIndIEs (SztProtIE_Cont_UECapbltyInfoIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztUECapbltyInfoInd (SztUECapbltyInfoInd *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueENBStatusTfrIEsCls (Szt_ValueENBStatusTfrIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_ENBStatusTfrIEs (SztProtIE_Field_ENBStatusTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_ENBStatusTfrIEs (SztProtIE_Cont_ENBStatusTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztENBStatusTfr (SztENBStatusTfr *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueMMEStatusTfrIEsCls (Szt_ValueMMEStatusTfrIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_MMEStatusTfrIEs (SztProtIE_Field_MMEStatusTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_MMEStatusTfrIEs (SztProtIE_Cont_MMEStatusTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztMMEStatusTfr (SztMMEStatusTfr *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueTraceStartIEsCls (Szt_ValueTraceStartIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_TraceStartIEs (SztProtIE_Field_TraceStartIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_TraceStartIEs (SztProtIE_Cont_TraceStartIEs *param, Buffer *mBuf);
extern S16 cmPkSztTraceStart (SztTraceStart *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueTraceFailIndIEsCls (Szt_ValueTraceFailIndIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_TraceFailIndIEs (SztProtIE_Field_TraceFailIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_TraceFailIndIEs (SztProtIE_Cont_TraceFailIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztTraceFailInd (SztTraceFailInd *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueDeactvTraceIEsCls (Szt_ValueDeactvTraceIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_DeactvTraceIEs (SztProtIE_Field_DeactvTraceIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_DeactvTraceIEs (SztProtIE_Cont_DeactvTraceIEs *param, Buffer *mBuf);
extern S16 cmPkSztDeactvTrace (SztDeactvTrace *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueCellTrafficTraceIEsCls (Szt_ValueCellTrafficTraceIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_CellTrafficTraceIEs (SztProtIE_Field_CellTrafficTraceIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_CellTrafficTraceIEs (SztProtIE_Cont_CellTrafficTraceIEs *param, Buffer *mBuf);
extern S16 cmPkSztCellTrafficTrace (SztCellTrafficTrace *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueLocRprtngCntrlIEsCls (Szt_ValueLocRprtngCntrlIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_LocRprtngCntrlIEs (SztProtIE_Field_LocRprtngCntrlIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_LocRprtngCntrlIEs (SztProtIE_Cont_LocRprtngCntrlIEs *param, Buffer *mBuf);
extern S16 cmPkSztLocRprtngCntrl (SztLocRprtngCntrl *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueLocRprtngFailIndIEsCls (Szt_ValueLocRprtngFailIndIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_LocRprtngFailIndIEs (SztProtIE_Field_LocRprtngFailIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_LocRprtngFailIndIEs (SztProtIE_Cont_LocRprtngFailIndIEs *param, Buffer *mBuf);
extern S16 cmPkSztLocRprtngFailInd (SztLocRprtngFailInd *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueLocReportIEsCls (Szt_ValueLocReportIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_LocReportIEs (SztProtIE_Field_LocReportIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_LocReportIEs (SztProtIE_Cont_LocReportIEs *param, Buffer *mBuf);
extern S16 cmPkSztLocReport (SztLocReport *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueOverloadStartIEsCls (Szt_ValueOverloadStartIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_OverloadStartIEs (SztProtIE_Field_OverloadStartIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_OverloadStartIEs (SztProtIE_Cont_OverloadStartIEs *param, Buffer *mBuf);
extern S16 cmPkSztOverloadStart (SztOverloadStart *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueOverloadStopIEsCls (Szt_ValueOverloadStopIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_OverloadStopIEs (SztProtIE_Field_OverloadStopIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_OverloadStopIEs (SztProtIE_Cont_OverloadStopIEs *param, Buffer *mBuf);
extern S16 cmPkSztOverloadStop (SztOverloadStop *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueWriteReplaceWarningRqstIEsCls (Szt_ValueWriteReplaceWarningRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_WriteReplaceWarningRqstIEs (SztProtIE_Field_WriteReplaceWarningRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_WriteReplaceWarningRqstIEs (SztProtIE_Cont_WriteReplaceWarningRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztWriteReplaceWarningRqst (SztWriteReplaceWarningRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueWriteReplaceWarningRespIEsCls (Szt_ValueWriteReplaceWarningRespIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_WriteReplaceWarningRespIEs (SztProtIE_Field_WriteReplaceWarningRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_WriteReplaceWarningRespIEs (SztProtIE_Cont_WriteReplaceWarningRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztWriteReplaceWarningResp (SztWriteReplaceWarningResp *param, Buffer *mBuf);
extern S16 cmPkSztInter_SystemInformTfrTyp (SztInter_SystemInformTfrTyp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueENBDirectInformTfrIEsCls (Szt_ValueENBDirectInformTfrIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_ENBDirectInformTfrIEs (SztProtIE_Field_ENBDirectInformTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_ENBDirectInformTfrIEs (SztProtIE_Cont_ENBDirectInformTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztENBDirectInformTfr (SztENBDirectInformTfr *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueMMEDirectInformTfrIEsCls (Szt_ValueMMEDirectInformTfrIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_MMEDirectInformTfrIEs (SztProtIE_Field_MMEDirectInformTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_MMEDirectInformTfrIEs (SztProtIE_Cont_MMEDirectInformTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztMMEDirectInformTfr (SztMMEDirectInformTfr *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueENBConfigTfrIEsCls (Szt_ValueENBConfigTfrIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_ENBConfigTfrIEs (SztProtIE_Field_ENBConfigTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_ENBConfigTfrIEs (SztProtIE_Cont_ENBConfigTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztENBConfigTfr (SztENBConfigTfr *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueMMEConfigTfrIEsCls (Szt_ValueMMEConfigTfrIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_MMEConfigTfrIEs (SztProtIE_Field_MMEConfigTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_MMEConfigTfrIEs (SztProtIE_Cont_MMEConfigTfrIEs *param, Buffer *mBuf);
extern S16 cmPkSztMMEConfigTfr (SztMMEConfigTfr *param, Buffer *mBuf);
extern S16 cmPkSzt_ValuePrivMsgIEsCls (Szt_ValuePrivMsgIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztPrivIE_Field_PrivMsgIEs (SztPrivIE_Field_PrivMsgIEs *param, Buffer *mBuf);
extern S16 cmPkSztPrivIE_Cont_PrivMsgIEs (SztPrivIE_Cont_PrivMsgIEs *param, Buffer *mBuf);
extern S16 cmPkSztPrivMsg (SztPrivMsg *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueKillRqstIEsCls (Szt_ValueKillRqstIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_KillRqstIEs (SztProtIE_Field_KillRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_KillRqstIEs (SztProtIE_Cont_KillRqstIEs *param, Buffer *mBuf);
extern S16 cmPkSztKillRqst (SztKillRqst *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueKillRespIEsCls (Szt_ValueKillRespIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_KillRespIEs (SztProtIE_Field_KillRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_KillRespIEs (SztProtIE_Cont_KillRespIEs *param, Buffer *mBuf);
extern S16 cmPkSztKillResp (SztKillResp *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueDlnkUEAssociatedLPPaTport_IEsCls (Szt_ValueDlnkUEAssociatedLPPaTport_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_DlnkUEAssociatedLPPaTport_IEs (SztProtIE_Field_DlnkUEAssociatedLPPaTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_DlnkUEAssociatedLPPaTport_IEs (SztProtIE_Cont_DlnkUEAssociatedLPPaTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztDlnkUEAssociatedLPPaTport (SztDlnkUEAssociatedLPPaTport *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUlnkUEAssociatedLPPaTport_IEsCls (Szt_ValueUlnkUEAssociatedLPPaTport_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UlnkUEAssociatedLPPaTport_IEs (SztProtIE_Field_UlnkUEAssociatedLPPaTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UlnkUEAssociatedLPPaTport_IEs (SztProtIE_Cont_UlnkUEAssociatedLPPaTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztUlnkUEAssociatedLPPaTport (SztUlnkUEAssociatedLPPaTport *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueDlnkNonUEAssociatedLPPaTport_IEsCls (Szt_ValueDlnkNonUEAssociatedLPPaTport_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_DlnkNonUEAssociatedLPPaTport_IEs (SztProtIE_Field_DlnkNonUEAssociatedLPPaTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_DlnkNonUEAssociatedLPPaTport_IEs (SztProtIE_Cont_DlnkNonUEAssociatedLPPaTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztDlnkNonUEAssociatedLPPaTport (SztDlnkNonUEAssociatedLPPaTport *param, Buffer *mBuf);
extern S16 cmPkSzt_ValueUlnkNonUEAssociatedLPPaTport_IEsCls (Szt_ValueUlnkNonUEAssociatedLPPaTport_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztProtIE_Field_UlnkNonUEAssociatedLPPaTport_IEs (SztProtIE_Field_UlnkNonUEAssociatedLPPaTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztProtIE_Cont_UlnkNonUEAssociatedLPPaTport_IEs (SztProtIE_Cont_UlnkNonUEAssociatedLPPaTport_IEs *param, Buffer *mBuf);
extern S16 cmPkSztUlnkNonUEAssociatedLPPaTport (SztUlnkNonUEAssociatedLPPaTport *param, Buffer *mBuf);
extern S16 cmPkSzt_InitiatingMsgCls (Szt_InitiatingMsgCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztInitiatingMsg (SztInitiatingMsg *param, Buffer *mBuf);
extern S16 cmPkSzt_SuccessfulOutcomeCls (Szt_SuccessfulOutcomeCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztSuccessfulOutcome (SztSuccessfulOutcome *param, Buffer *mBuf);
extern S16 cmPkSzt_UnsuccessfulOutcomeCls (Szt_UnsuccessfulOutcomeCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkSztUnsuccessfulOutcome (SztUnsuccessfulOutcome *param, Buffer *mBuf);
extern S16 cmPkSztS1AP_PDU (SztS1AP_PDU *param, Buffer *mBuf);
extern S16 cmUnpkSztPrivIE_ID (SztPrivIE_ID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnEUTRAN_CGI_ExtIEsCls (Szt_ExtnEUTRAN_CGI_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_EUTRAN_CGI_ExtIEs (SztProtExtnField_EUTRAN_CGI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_EUTRAN_CGI_ExtIEs (SztProtExtnCont_EUTRAN_CGI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztEUTRAN_CGI (SztEUTRAN_CGI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCellIdLstforMDT (SztCellIdLstforMDT *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCellBasedMDT_ExtIEsCls (Szt_ExtnCellBasedMDT_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CellBasedMDT_ExtIEs (SztProtExtnField_CellBasedMDT_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CellBasedMDT_ExtIEs (SztProtExtnCont_CellBasedMDT_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCellBasedMDT (SztCellBasedMDT *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTALstforMDT (SztTALstforMDT *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTABasedMDT_ExtIEsCls (Szt_ExtnTABasedMDT_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TABasedMDT_ExtIEs (SztProtExtnField_TABasedMDT_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TABasedMDT_ExtIEs (SztProtExtnCont_TABasedMDT_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTABasedMDT (SztTABasedMDT *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTAI_ExtIEsCls (Szt_ExtnTAI_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TAI_ExtIEs (SztProtExtnField_TAI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TAI_ExtIEs (SztProtExtnCont_TAI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTAI (SztTAI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTAILstforMDT (SztTAILstforMDT *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTAIBasedMDT_ExtIEsCls (Szt_ExtnTAIBasedMDT_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TAIBasedMDT_ExtIEs (SztProtExtnField_TAIBasedMDT_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TAIBasedMDT_ExtIEs (SztProtExtnCont_TAIBasedMDT_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTAIBasedMDT (SztTAIBasedMDT *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztAreaScopeOfMDT (SztAreaScopeOfMDT *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnAllocnAndRetentionPriority_ExtIEsCls (Szt_ExtnAllocnAndRetentionPriority_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_AllocnAndRetentionPriority_ExtIEs (SztProtExtnField_AllocnAndRetentionPriority_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_AllocnAndRetentionPriority_ExtIEs (SztProtExtnCont_AllocnAndRetentionPriority_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztAllocnAndRetentionPriority (SztAllocnAndRetentionPriority *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCOUNTvalue_ExtIEsCls (Szt_ExtnCOUNTvalue_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_COUNTvalue_ExtIEs (SztProtExtnField_COUNTvalue_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_COUNTvalue_ExtIEs (SztProtExtnCont_COUNTvalue_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCOUNTvalue (SztCOUNTvalue *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCOUNTValueExtended_ExtIEsCls (Szt_ExtnCOUNTValueExtended_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_COUNTValueExtended_ExtIEs (SztProtExtnField_COUNTValueExtended_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_COUNTValueExtended_ExtIEs (SztProtExtnCont_COUNTValueExtended_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCOUNTValueExtended (SztCOUNTValueExtended *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnBrs_SubjToStatusTfr_ItemExtIEsCls (Szt_ExtnBrs_SubjToStatusTfr_ItemExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_Brs_SubjToStatusTfr_ItemExtIEs (SztProtExtnField_Brs_SubjToStatusTfr_ItemExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_Brs_SubjToStatusTfr_ItemExtIEs (SztProtExtnCont_Brs_SubjToStatusTfr_ItemExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztBrs_SubjToStatusTfr_Item (SztBrs_SubjToStatusTfr_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueBrs_SubjToStatusTfr_ItemIEsCls (Szt_ValueBrs_SubjToStatusTfr_ItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_Brs_SubjToStatusTfr_ItemIEs (SztProtIE_Field_Brs_SubjToStatusTfr_ItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztBrs_SubjToStatusTfrLst (SztBrs_SubjToStatusTfrLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztBPLMNs (SztBPLMNs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCellID_Cancelled_Item_ExtIEsCls (Szt_ExtnCellID_Cancelled_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CellID_Cancelled_Item_ExtIEs (SztProtExtnField_CellID_Cancelled_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CellID_Cancelled_Item_ExtIEs (SztProtExtnCont_CellID_Cancelled_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCellID_Cancelled_Item (SztCellID_Cancelled_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCellID_Cancelled (SztCellID_Cancelled *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCancelledCellinTAI_Item_ExtIEsCls (Szt_ExtnCancelledCellinTAI_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CancelledCellinTAI_Item_ExtIEs (SztProtExtnField_CancelledCellinTAI_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CancelledCellinTAI_Item_ExtIEs (SztProtExtnCont_CancelledCellinTAI_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCancelledCellinTAI_Item (SztCancelledCellinTAI_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCancelledCellinTAI (SztCancelledCellinTAI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTAI_Cancelled_Item_ExtIEsCls (Szt_ExtnTAI_Cancelled_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TAI_Cancelled_Item_ExtIEs (SztProtExtnField_TAI_Cancelled_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TAI_Cancelled_Item_ExtIEs (SztProtExtnCont_TAI_Cancelled_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTAI_Cancelled_Item (SztTAI_Cancelled_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTAI_Cancelled (SztTAI_Cancelled *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCancelledCellinEAI_Item_ExtIEsCls (Szt_ExtnCancelledCellinEAI_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CancelledCellinEAI_Item_ExtIEs (SztProtExtnField_CancelledCellinEAI_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CancelledCellinEAI_Item_ExtIEs (SztProtExtnCont_CancelledCellinEAI_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCancelledCellinEAI_Item (SztCancelledCellinEAI_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCancelledCellinEAI (SztCancelledCellinEAI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnEmergencyAreaID_Cancelled_Item_ExtIEsCls (Szt_ExtnEmergencyAreaID_Cancelled_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_EmergencyAreaID_Cancelled_Item_ExtIEs (SztProtExtnField_EmergencyAreaID_Cancelled_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_EmergencyAreaID_Cancelled_Item_ExtIEs (SztProtExtnCont_EmergencyAreaID_Cancelled_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztEmergencyAreaID_Cancelled_Item (SztEmergencyAreaID_Cancelled_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztEmergencyAreaID_Cancelled (SztEmergencyAreaID_Cancelled *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztBroadcastCancelledAreaLst (SztBroadcastCancelledAreaLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCellID_Broadcast_Item_ExtIEsCls (Szt_ExtnCellID_Broadcast_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CellID_Broadcast_Item_ExtIEs (SztProtExtnField_CellID_Broadcast_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CellID_Broadcast_Item_ExtIEs (SztProtExtnCont_CellID_Broadcast_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCellID_Broadcast_Item (SztCellID_Broadcast_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCellID_Broadcast (SztCellID_Broadcast *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCompletedCellinTAI_Item_ExtIEsCls (Szt_ExtnCompletedCellinTAI_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CompletedCellinTAI_Item_ExtIEs (SztProtExtnField_CompletedCellinTAI_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CompletedCellinTAI_Item_ExtIEs (SztProtExtnCont_CompletedCellinTAI_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCompletedCellinTAI_Item (SztCompletedCellinTAI_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCompletedCellinTAI (SztCompletedCellinTAI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTAI_Broadcast_Item_ExtIEsCls (Szt_ExtnTAI_Broadcast_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TAI_Broadcast_Item_ExtIEs (SztProtExtnField_TAI_Broadcast_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TAI_Broadcast_Item_ExtIEs (SztProtExtnCont_TAI_Broadcast_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTAI_Broadcast_Item (SztTAI_Broadcast_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTAI_Broadcast (SztTAI_Broadcast *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCompletedCellinEAI_Item_ExtIEsCls (Szt_ExtnCompletedCellinEAI_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CompletedCellinEAI_Item_ExtIEs (SztProtExtnField_CompletedCellinEAI_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CompletedCellinEAI_Item_ExtIEs (SztProtExtnCont_CompletedCellinEAI_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCompletedCellinEAI_Item (SztCompletedCellinEAI_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCompletedCellinEAI (SztCompletedCellinEAI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnEmergencyAreaID_Broadcast_Item_ExtIEsCls (Szt_ExtnEmergencyAreaID_Broadcast_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_EmergencyAreaID_Broadcast_Item_ExtIEs (SztProtExtnField_EmergencyAreaID_Broadcast_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_EmergencyAreaID_Broadcast_Item_ExtIEs (SztProtExtnCont_EmergencyAreaID_Broadcast_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztEmergencyAreaID_Broadcast_Item (SztEmergencyAreaID_Broadcast_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztEmergencyAreaID_Broadcast (SztEmergencyAreaID_Broadcast *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztBroadcastCompletedAreaLst (SztBroadcastCompletedAreaLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCause (SztCause *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCdma2000OneXSRVCCInfo_ExtIEsCls (Szt_ExtnCdma2000OneXSRVCCInfo_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_Cdma2000OneXSRVCCInfo_ExtIEs (SztProtExtnField_Cdma2000OneXSRVCCInfo_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_Cdma2000OneXSRVCCInfo_ExtIEs (SztProtExtnCont_Cdma2000OneXSRVCCInfo_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCdma2000OneXSRVCCInfo (SztCdma2000OneXSRVCCInfo *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCellTyp_ExtIEsCls (Szt_ExtnCellTyp_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CellTyp_ExtIEs (SztProtExtnField_CellTyp_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CellTyp_ExtIEs (SztProtExtnCont_CellTyp_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCellTyp (SztCellTyp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCGI_ExtIEsCls (Szt_ExtnCGI_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CGI_ExtIEs (SztProtExtnField_CGI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CGI_ExtIEs (SztProtExtnCont_CGI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCGI (SztCGI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCSG_IdLst_Item_ExtIEsCls (Szt_ExtnCSG_IdLst_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CSG_IdLst_Item_ExtIEs (SztProtExtnField_CSG_IdLst_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CSG_IdLst_Item_ExtIEs (SztProtExtnCont_CSG_IdLst_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCSG_IdLst_Item (SztCSG_IdLst_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCSG_IdLst (SztCSG_IdLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCriticalityDiag_IE_Item_ExtIEsCls (Szt_ExtnCriticalityDiag_IE_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CriticalityDiag_IE_Item_ExtIEs (SztProtExtnField_CriticalityDiag_IE_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CriticalityDiag_IE_Item_ExtIEs (SztProtExtnCont_CriticalityDiag_IE_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCriticalityDiag_IE_Item (SztCriticalityDiag_IE_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCriticalityDiag_IE_Lst (SztCriticalityDiag_IE_Lst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnCriticalityDiag_ExtIEsCls (Szt_ExtnCriticalityDiag_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_CriticalityDiag_ExtIEs (SztProtExtnField_CriticalityDiag_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_CriticalityDiag_ExtIEs (SztProtExtnCont_CriticalityDiag_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCriticalityDiag (SztCriticalityDiag *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztECGILst (SztECGILst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztEmergencyAreaIDLst (SztEmergencyAreaIDLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENB_ID (SztENB_ID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnLAI_ExtIEsCls (Szt_ExtnLAI_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_LAI_ExtIEs (SztProtExtnField_LAI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_LAI_ExtIEs (SztProtExtnCont_LAI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztLAI (SztLAI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnGERAN_Cell_ID_ExtIEsCls (Szt_ExtnGERAN_Cell_ID_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_GERAN_Cell_ID_ExtIEs (SztProtExtnField_GERAN_Cell_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_GERAN_Cell_ID_ExtIEs (SztProtExtnCont_GERAN_Cell_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztGERAN_Cell_ID (SztGERAN_Cell_ID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnGlobalENB_ID_ExtIEsCls (Szt_ExtnGlobalENB_ID_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_GlobalENB_ID_ExtIEs (SztProtExtnField_GlobalENB_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_GlobalENB_ID_ExtIEs (SztProtExtnCont_GlobalENB_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztGlobal_ENB_ID (SztGlobal_ENB_ID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnGUMMEI_ExtIEsCls (Szt_ExtnGUMMEI_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_GUMMEI_ExtIEs (SztProtExtnField_GUMMEI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_GUMMEI_ExtIEs (SztProtExtnCont_GUMMEI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztGUMMEI (SztGUMMEI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztGUMMEILst (SztGUMMEILst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnENB_StatusTfr_TprntCont_ExtIEsCls (Szt_ExtnENB_StatusTfr_TprntCont_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_ENB_StatusTfr_TprntCont_ExtIEs (SztProtExtnField_ENB_StatusTfr_TprntCont_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_ENB_StatusTfr_TprntCont_ExtIEs (SztProtExtnCont_ENB_StatusTfr_TprntCont_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENB_StatusTfr_TprntCont (SztENB_StatusTfr_TprntCont *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENBX2TLAs (SztENBX2TLAs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztEPLMNs (SztEPLMNs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABInformLstItem_ExtIEsCls (Szt_ExtnE_RABInformLstItem_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABInformLstItem_ExtIEs (SztProtExtnField_E_RABInformLstItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABInformLstItem_ExtIEs (SztProtExtnCont_E_RABInformLstItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABInformLstItem (SztE_RABInformLstItem *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABInformLstIEsCls (Szt_ValueE_RABInformLstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABInformLstIEs (SztProtIE_Field_E_RABInformLstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABInformLst (SztE_RABInformLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABItem_ExtIEsCls (Szt_ExtnE_RABItem_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABItem_ExtIEs (SztProtExtnField_E_RABItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABItem_ExtIEs (SztProtExtnCont_E_RABItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABItem (SztE_RABItem *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABItemIEsCls (Szt_ValueE_RABItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABItemIEs (SztProtIE_Field_E_RABItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABLst (SztE_RABLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnGBR_QosInform_ExtIEsCls (Szt_ExtnGBR_QosInform_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_GBR_QosInform_ExtIEs (SztProtExtnField_GBR_QosInform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_GBR_QosInform_ExtIEs (SztProtExtnCont_GBR_QosInform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztGBR_QosInform (SztGBR_QosInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABQoSParams_ExtIEsCls (Szt_ExtnE_RABQoSParams_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABQoSParams_ExtIEs (SztProtExtnField_E_RABQoSParams_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABQoSParams_ExtIEs (SztProtExtnCont_E_RABQoSParams_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABLvlQoSParams (SztE_RABLvlQoSParams *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztForbiddenTACs (SztForbiddenTACs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnForbiddenTAs_Item_ExtIEsCls (Szt_ExtnForbiddenTAs_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_ForbiddenTAs_Item_ExtIEs (SztProtExtnField_ForbiddenTAs_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_ForbiddenTAs_Item_ExtIEs (SztProtExtnCont_ForbiddenTAs_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztForbiddenTAs_Item (SztForbiddenTAs_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztForbiddenTAs (SztForbiddenTAs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztForbiddenLACs (SztForbiddenLACs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnForbiddenLAs_Item_ExtIEsCls (Szt_ExtnForbiddenLAs_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_ForbiddenLAs_Item_ExtIEs (SztProtExtnField_ForbiddenLAs_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_ForbiddenLAs_Item_ExtIEs (SztProtExtnCont_ForbiddenLAs_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztForbiddenLAs_Item (SztForbiddenLAs_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztForbiddenLAs (SztForbiddenLAs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnHovrRestrnLst_ExtIEsCls (Szt_ExtnHovrRestrnLst_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_HovrRestrnLst_ExtIEs (SztProtExtnField_HovrRestrnLst_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_HovrRestrnLst_ExtIEs (SztProtExtnCont_HovrRestrnLst_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrRestrnLst (SztHovrRestrnLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztMeasurementThresholdA2 (SztMeasurementThresholdA2 *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnM1ThresholdEventA2_ExtIEsCls (Szt_ExtnM1ThresholdEventA2_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_M1ThresholdEventA2_ExtIEs (SztProtExtnField_M1ThresholdEventA2_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_M1ThresholdEventA2_ExtIEs (SztProtExtnCont_M1ThresholdEventA2_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztM1ThresholdEventA2 (SztM1ThresholdEventA2 *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnM1PeriodicRprtng_ExtIEsCls (Szt_ExtnM1PeriodicRprtng_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_M1PeriodicRprtng_ExtIEs (SztProtExtnField_M1PeriodicRprtng_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_M1PeriodicRprtng_ExtIEs (SztProtExtnCont_M1PeriodicRprtng_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztM1PeriodicRprtng (SztM1PeriodicRprtng *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnM3Config_ExtIEsCls (Szt_ExtnM3Config_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_M3Config_ExtIEs (SztProtExtnField_M3Config_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_M3Config_ExtIEs (SztProtExtnCont_M3Config_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztM3Config (SztM3Config *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnM4Config_ExtIEsCls (Szt_ExtnM4Config_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_M4Config_ExtIEs (SztProtExtnField_M4Config_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_M4Config_ExtIEs (SztProtExtnCont_M4Config_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztM4Config (SztM4Config *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnM5Config_ExtIEsCls (Szt_ExtnM5Config_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_M5Config_ExtIEs (SztProtExtnField_M5Config_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_M5Config_ExtIEs (SztProtExtnCont_M5Config_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztM5Config (SztM5Config *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnImmediateMDT_ExtIEsCls (Szt_ExtnImmediateMDT_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_ImmediateMDT_ExtIEs (SztProtExtnField_ImmediateMDT_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_ImmediateMDT_ExtIEs (SztProtExtnCont_ImmediateMDT_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztImmediateMDT (SztImmediateMDT *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls (Szt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs (SztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs (SztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztLastVisitedEUTRANCellInform (SztLastVisitedEUTRANCellInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztLastVisitedGERANCellInform (SztLastVisitedGERANCellInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztLastVisitedCell_Item (SztLastVisitedCell_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnLoggedMDT_ExtIEsCls (Szt_ExtnLoggedMDT_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_LoggedMDT_ExtIEs (SztProtExtnField_LoggedMDT_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_LoggedMDT_ExtIEs (SztProtExtnCont_LoggedMDT_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztLoggedMDT (SztLoggedMDT *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztMDTMode (SztMDTMode *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztMDTPLMNLst (SztMDTPLMNLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnMDT_Config_ExtIEsCls (Szt_ExtnMDT_Config_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_MDT_Config_ExtIEs (SztProtExtnField_MDT_Config_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_MDT_Config_ExtIEs (SztProtExtnCont_MDT_Config_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztMDT_Config (SztMDT_Config *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztOverloadResp (SztOverloadResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnRqstTyp_ExtIEsCls (Szt_ExtnRqstTyp_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_RqstTyp_ExtIEs (SztProtExtnField_RqstTyp_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_RqstTyp_ExtIEs (SztProtExtnCont_RqstTyp_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztRqstTyp (SztRqstTyp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTgetRNC_ID_ExtIEsCls (Szt_ExtnTgetRNC_ID_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TgetRNC_ID_ExtIEs (SztProtExtnField_TgetRNC_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TgetRNC_ID_ExtIEs (SztProtExtnCont_TgetRNC_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTgetRNC_ID (SztTgetRNC_ID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztRIMRoutingAddr (SztRIMRoutingAddr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnRIMTfr_ExtIEsCls (Szt_ExtnRIMTfr_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_RIMTfr_ExtIEs (SztProtExtnField_RIMTfr_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_RIMTfr_ExtIEs (SztProtExtnCont_RIMTfr_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztRIMTfr (SztRIMTfr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnSecurCntxt_ExtIEsCls (Szt_ExtnSecurCntxt_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_SecurCntxt_ExtIEs (SztProtExtnField_SecurCntxt_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_SecurCntxt_ExtIEs (SztProtExtnCont_SecurCntxt_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSecurCntxt (SztSecurCntxt *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENBX2GTPTLAs (SztENBX2GTPTLAs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnENBX2ExtTLA_ExtIEsCls (Szt_ExtnENBX2ExtTLA_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_ENBX2ExtTLA_ExtIEs (SztProtExtnField_ENBX2ExtTLA_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_ENBX2ExtTLA_ExtIEs (SztProtExtnCont_ENBX2ExtTLA_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENBX2ExtTLA (SztENBX2ExtTLA *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENBX2ExtTLAs (SztENBX2ExtTLAs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnX2TNLConfigInfo_ExtIEsCls (Szt_ExtnX2TNLConfigInfo_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_X2TNLConfigInfo_ExtIEs (SztProtExtnField_X2TNLConfigInfo_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_X2TNLConfigInfo_ExtIEs (SztProtExtnCont_X2TNLConfigInfo_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztX2TNLConfigInfo (SztX2TNLConfigInfo *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTimeSynchronizationInfo_ExtIEsCls (Szt_ExtnTimeSynchronizationInfo_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TimeSynchronizationInfo_ExtIEs (SztProtExtnField_TimeSynchronizationInfo_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TimeSynchronizationInfo_ExtIEs (SztProtExtnCont_TimeSynchronizationInfo_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTimeSynchronizationInfo (SztTimeSynchronizationInfo *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnSONInformReply_ExtIEsCls (Szt_ExtnSONInformReply_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_SONInformReply_ExtIEs (SztProtExtnField_SONInformReply_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_SONInformReply_ExtIEs (SztProtExtnCont_SONInformReply_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSONInformReply (SztSONInformReply *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSONInform (SztSONInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTgeteNB_ID_ExtIEsCls (Szt_ExtnTgeteNB_ID_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TgeteNB_ID_ExtIEs (SztProtExtnField_TgeteNB_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TgeteNB_ID_ExtIEs (SztProtExtnCont_TgeteNB_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTgeteNB_ID (SztTgeteNB_ID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnSrceNB_ID_ExtIEsCls (Szt_ExtnSrceNB_ID_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_SrceNB_ID_ExtIEs (SztProtExtnField_SrceNB_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_SrceNB_ID_ExtIEs (SztProtExtnCont_SrceNB_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSrceNB_ID (SztSrceNB_ID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnSONConfigTfr_ExtIEsCls (Szt_ExtnSONConfigTfr_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_SONConfigTfr_ExtIEs (SztProtExtnField_SONConfigTfr_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_SONConfigTfr_ExtIEs (SztProtExtnCont_SONConfigTfr_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSONConfigTfr (SztSONConfigTfr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUE_HistoryInform (SztUE_HistoryInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnSrceNB_ToTgeteNB_TprntCont_ExtIEsCls (Szt_ExtnSrceNB_ToTgeteNB_TprntCont_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_SrceNB_ToTgeteNB_TprntCont_ExtIEs (SztProtExtnField_SrceNB_ToTgeteNB_TprntCont_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_SrceNB_ToTgeteNB_TprntCont_ExtIEs (SztProtExtnCont_SrceNB_ToTgeteNB_TprntCont_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSrceNB_ToTgeteNB_TprntCont (SztSrceNB_ToTgeteNB_TprntCont *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSrvdPLMNs (SztSrvdPLMNs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSrvdGroupIDs (SztSrvdGroupIDs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSrvdMMECs (SztSrvdMMECs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnSrvdGUMMEIsItem_ExtIEsCls (Szt_ExtnSrvdGUMMEIsItem_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_SrvdGUMMEIsItem_ExtIEs (SztProtExtnField_SrvdGUMMEIsItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_SrvdGUMMEIsItem_ExtIEs (SztProtExtnCont_SrvdGUMMEIsItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSrvdGUMMEIsItem (SztSrvdGUMMEIsItem *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSrvdGUMMEIs (SztSrvdGUMMEIs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnSuppTAs_Item_ExtIEsCls (Szt_ExtnSuppTAs_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_SuppTAs_Item_ExtIEs (SztProtExtnField_SuppTAs_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_SuppTAs_Item_ExtIEs (SztProtExtnCont_SuppTAs_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSuppTAs_Item (SztSuppTAs_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSuppTAs (SztSuppTAs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnS_TMSI_ExtIEsCls (Szt_ExtnS_TMSI_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_S_TMSI_ExtIEs (SztProtExtnField_S_TMSI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_S_TMSI_ExtIEs (SztProtExtnCont_S_TMSI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztS_TMSI (SztS_TMSI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTAILstforWarning (SztTAILstforWarning *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTgetID (SztTgetID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTgeteNB_ToSrceNB_TprntCont_ExtIEsCls (Szt_ExtnTgeteNB_ToSrceNB_TprntCont_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TgeteNB_ToSrceNB_TprntCont_ExtIEs (SztProtExtnField_TgeteNB_ToSrceNB_TprntCont_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TgeteNB_ToSrceNB_TprntCont_ExtIEs (SztProtExtnCont_TgeteNB_ToSrceNB_TprntCont_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTgeteNB_ToSrceNB_TprntCont (SztTgeteNB_ToSrceNB_TprntCont *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTraceActvn_ExtIEsCls (Szt_ExtnTraceActvn_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TraceActvn_ExtIEs (SztProtExtnField_TraceActvn_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TraceActvn_ExtIEs (SztProtExtnCont_TraceActvn_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTraceActvn (SztTraceActvn *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTunnel_Inform_ExtIEsCls (Szt_ExtnTunnel_Inform_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_Tunnel_Inform_ExtIEs (SztProtExtnField_Tunnel_Inform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_Tunnel_Inform_ExtIEs (SztProtExtnCont_Tunnel_Inform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTunnelInform (SztTunnelInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnUEAgg_MaxBitrates_ExtIEsCls (Szt_ExtnUEAgg_MaxBitrates_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_UEAgg_MaxBitrates_ExtIEs (SztProtExtnField_UEAgg_MaxBitrates_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_UEAgg_MaxBitrates_ExtIEs (SztProtExtnCont_UEAgg_MaxBitrates_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUEAggMaxBitrate (SztUEAggMaxBitrate *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnUE_S1AP_ID_pair_ExtIEsCls (Szt_ExtnUE_S1AP_ID_pair_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_UE_S1AP_ID_pair_ExtIEs (SztProtExtnField_UE_S1AP_ID_pair_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_UE_S1AP_ID_pair_ExtIEs (SztProtExtnCont_UE_S1AP_ID_pair_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUE_S1AP_ID_pair (SztUE_S1AP_ID_pair *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUE_S1AP_IDs (SztUE_S1AP_IDs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnUE_assocLogS1_ConItemExtIEsCls (Szt_ExtnUE_assocLogS1_ConItemExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_UE_assocLogS1_ConItemExtIEs (SztProtExtnField_UE_assocLogS1_ConItemExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_UE_assocLogS1_ConItemExtIEs (SztProtExtnCont_UE_assocLogS1_ConItemExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUE_assocLogS1_ConItem (SztUE_assocLogS1_ConItem *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUEPagID (SztUEPagID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnUESecurCapabilities_ExtIEsCls (Szt_ExtnUESecurCapabilities_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_UESecurCapabilities_ExtIEs (SztProtExtnField_UESecurCapabilities_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_UESecurCapabilities_ExtIEs (SztProtExtnCont_UESecurCapabilities_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUESecurCapabilities (SztUESecurCapabilities *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztWarningAreaLst (SztWarningAreaLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueHovrReqdIEsCls (Szt_ValueHovrReqdIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_HovrReqdIEs (SztProtIE_Field_HovrReqdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_HovrReqdIEs (SztProtIE_Cont_HovrReqdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrReqd (SztHovrReqd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABDataFwdingItem_ExtIEsCls (Szt_ExtnE_RABDataFwdingItem_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABDataFwdingItem_ExtIEs (SztProtExtnField_E_RABDataFwdingItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABDataFwdingItem_ExtIEs (SztProtExtnCont_E_RABDataFwdingItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABDataFwdingItem (SztE_RABDataFwdingItem *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABDataFwdingItemIEsCls (Szt_ValueE_RABDataFwdingItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABDataFwdingItemIEs (SztProtIE_Field_E_RABDataFwdingItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_ContLst_E_RABDataFwdingItemIEs (SztProtIE_ContLst_E_RABDataFwdingItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueHovrCmmdIEsCls (Szt_ValueHovrCmmdIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_HovrCmmdIEs (SztProtIE_Field_HovrCmmdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_HovrCmmdIEs (SztProtIE_Cont_HovrCmmdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrCmmd (SztHovrCmmd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueHovrPrepFailIEsCls (Szt_ValueHovrPrepFailIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_HovrPrepFailIEs (SztProtIE_Field_HovrPrepFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_HovrPrepFailIEs (SztProtIE_Cont_HovrPrepFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrPrepFail (SztHovrPrepFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABToBeSetupItemHOReq_ExtIEsCls (Szt_ExtnE_RABToBeSetupItemHOReq_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABToBeSetupItemHOReq_ExtIEs (SztProtExtnField_E_RABToBeSetupItemHOReq_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABToBeSetupItemHOReq_ExtIEs (SztProtExtnCont_E_RABToBeSetupItemHOReq_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABToBeSetupItemHOReq (SztE_RABToBeSetupItemHOReq *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABToBeSetupItemHOReqIEsCls (Szt_ValueE_RABToBeSetupItemHOReqIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABToBeSetupItemHOReqIEs (SztProtIE_Field_E_RABToBeSetupItemHOReqIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_ContLst_E_RABToBeSetupItemHOReqIEs (SztProtIE_ContLst_E_RABToBeSetupItemHOReqIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueHovrRqstIEsCls (Szt_ValueHovrRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_HovrRqstIEs (SztProtIE_Field_HovrRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_HovrRqstIEs (SztProtIE_Cont_HovrRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrRqst (SztHovrRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABAdmtdItem_ExtIEsCls (Szt_ExtnE_RABAdmtdItem_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABAdmtdItem_ExtIEs (SztProtExtnField_E_RABAdmtdItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABAdmtdItem_ExtIEs (SztProtExtnCont_E_RABAdmtdItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABAdmtdItem (SztE_RABAdmtdItem *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABAdmtdItemIEsCls (Szt_ValueE_RABAdmtdItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABAdmtdItemIEs (SztProtIE_Field_E_RABAdmtdItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_ContLst_E_RABAdmtdItemIEs (SztProtIE_ContLst_E_RABAdmtdItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABFailedToSetupItemHOReqAckExtIEsCls (Szt_ExtnE_RABFailedToSetupItemHOReqAckExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABFailedToSetupItemHOReqAckExtIEs (SztProtExtnField_E_RABFailedToSetupItemHOReqAckExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABFailedToSetupItemHOReqAckExtIEs (SztProtExtnCont_E_RABFailedToSetupItemHOReqAckExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABFailedToSetupItemHOReqAck (SztE_RABFailedToSetupItemHOReqAck *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABFailedtoSetupItemHOReqAckIEsCls (Szt_ValueE_RABFailedtoSetupItemHOReqAckIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABFailedtoSetupItemHOReqAckIEs (SztProtIE_Field_E_RABFailedtoSetupItemHOReqAckIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_ContLst_E_RABFailedtoSetupItemHOReqAckIEs (SztProtIE_ContLst_E_RABFailedtoSetupItemHOReqAckIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueHovrRqstAckgIEsCls (Szt_ValueHovrRqstAckgIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_HovrRqstAckgIEs (SztProtIE_Field_HovrRqstAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_HovrRqstAckgIEs (SztProtIE_Cont_HovrRqstAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrRqstAckg (SztHovrRqstAckg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueHovrFailIEsCls (Szt_ValueHovrFailIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_HovrFailIEs (SztProtIE_Field_HovrFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_HovrFailIEs (SztProtIE_Cont_HovrFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrFail (SztHovrFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueHovrNtfyIEsCls (Szt_ValueHovrNtfyIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_HovrNtfyIEs (SztProtIE_Field_HovrNtfyIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_HovrNtfyIEs (SztProtIE_Cont_HovrNtfyIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrNtfy (SztHovrNtfy *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABToBeSwedDLItem_ExtIEsCls (Szt_ExtnE_RABToBeSwedDLItem_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABToBeSwedDLItem_ExtIEs (SztProtExtnField_E_RABToBeSwedDLItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABToBeSwedDLItem_ExtIEs (SztProtExtnCont_E_RABToBeSwedDLItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABToBeSwedDLItem (SztE_RABToBeSwedDLItem *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABToBeSwedDLItemIEsCls (Szt_ValueE_RABToBeSwedDLItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABToBeSwedDLItemIEs (SztProtIE_Field_E_RABToBeSwedDLItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_ContLst_E_RABToBeSwedDLItemIEs (SztProtIE_ContLst_E_RABToBeSwedDLItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValuePathSwRqstIEsCls (Szt_ValuePathSwRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_PathSwRqstIEs (SztProtIE_Field_PathSwRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_PathSwRqstIEs (SztProtIE_Cont_PathSwRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztPathSwRqst (SztPathSwRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABToBeSwedULItem_ExtIEsCls (Szt_ExtnE_RABToBeSwedULItem_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABToBeSwedULItem_ExtIEs (SztProtExtnField_E_RABToBeSwedULItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABToBeSwedULItem_ExtIEs (SztProtExtnCont_E_RABToBeSwedULItem_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABToBeSwedULItem (SztE_RABToBeSwedULItem *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABToBeSwedULItemIEsCls (Szt_ValueE_RABToBeSwedULItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABToBeSwedULItemIEs (SztProtIE_Field_E_RABToBeSwedULItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_ContLst_E_RABToBeSwedULItemIEs (SztProtIE_ContLst_E_RABToBeSwedULItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValuePathSwRqstAckgIEsCls (Szt_ValuePathSwRqstAckgIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_PathSwRqstAckgIEs (SztProtIE_Field_PathSwRqstAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_PathSwRqstAckgIEs (SztProtIE_Cont_PathSwRqstAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztPathSwRqstAckg (SztPathSwRqstAckg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValuePathSwRqstFailIEsCls (Szt_ValuePathSwRqstFailIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_PathSwRqstFailIEs (SztProtIE_Field_PathSwRqstFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_PathSwRqstFailIEs (SztProtIE_Cont_PathSwRqstFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztPathSwRqstFail (SztPathSwRqstFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueHovrCancelIEsCls (Szt_ValueHovrCancelIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_HovrCancelIEs (SztProtIE_Field_HovrCancelIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_HovrCancelIEs (SztProtIE_Cont_HovrCancelIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrCancel (SztHovrCancel *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueHovrCancelAckgIEsCls (Szt_ValueHovrCancelAckgIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_HovrCancelAckgIEs (SztProtIE_Field_HovrCancelAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_HovrCancelAckgIEs (SztProtIE_Cont_HovrCancelAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztHovrCancelAckg (SztHovrCancelAckg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABToBeSetupItemBrSUReqExtIEsCls (Szt_ExtnE_RABToBeSetupItemBrSUReqExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABToBeSetupItemBrSUReqExtIEs (SztProtExtnField_E_RABToBeSetupItemBrSUReqExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABToBeSetupItemBrSUReqExtIEs (SztProtExtnCont_E_RABToBeSetupItemBrSUReqExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABToBeSetupItemBrSUReq (SztE_RABToBeSetupItemBrSUReq *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABToBeSetupItemBrSUReqIEsCls (Szt_ValueE_RABToBeSetupItemBrSUReqIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABToBeSetupItemBrSUReqIEs (SztProtIE_Field_E_RABToBeSetupItemBrSUReqIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABToBeSetupLstBrSUReq (SztE_RABToBeSetupLstBrSUReq *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABSetupRqstIEsCls (Szt_ValueE_RABSetupRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABSetupRqstIEs (SztProtIE_Field_E_RABSetupRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_E_RABSetupRqstIEs (SztProtIE_Cont_E_RABSetupRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABSetupRqst (SztE_RABSetupRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABSetupItemBrSUResExtIEsCls (Szt_ExtnE_RABSetupItemBrSUResExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABSetupItemBrSUResExtIEs (SztProtExtnField_E_RABSetupItemBrSUResExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABSetupItemBrSUResExtIEs (SztProtExtnCont_E_RABSetupItemBrSUResExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABSetupItemBrSURes (SztE_RABSetupItemBrSURes *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABSetupItemBrSUResIEsCls (Szt_ValueE_RABSetupItemBrSUResIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABSetupItemBrSUResIEs (SztProtIE_Field_E_RABSetupItemBrSUResIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABSetupLstBrSURes (SztE_RABSetupLstBrSURes *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABSetupRespIEsCls (Szt_ValueE_RABSetupRespIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABSetupRespIEs (SztProtIE_Field_E_RABSetupRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_E_RABSetupRespIEs (SztProtIE_Cont_E_RABSetupRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABSetupResp (SztE_RABSetupResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABToBeMdfyItemBrModReqExtIEsCls (Szt_ExtnE_RABToBeMdfyItemBrModReqExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABToBeMdfyItemBrModReqExtIEs (SztProtExtnField_E_RABToBeMdfyItemBrModReqExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABToBeMdfyItemBrModReqExtIEs (SztProtExtnCont_E_RABToBeMdfyItemBrModReqExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABToBeMdfdItemBrModReq (SztE_RABToBeMdfdItemBrModReq *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABToBeMdfdItemBrModReqIEsCls (Szt_ValueE_RABToBeMdfdItemBrModReqIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABToBeMdfdItemBrModReqIEs (SztProtIE_Field_E_RABToBeMdfdItemBrModReqIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABToBeMdfdLstBrModReq (SztE_RABToBeMdfdLstBrModReq *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABMdfyRqstIEsCls (Szt_ValueE_RABMdfyRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABMdfyRqstIEs (SztProtIE_Field_E_RABMdfyRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_E_RABMdfyRqstIEs (SztProtIE_Cont_E_RABMdfyRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABMdfyRqst (SztE_RABMdfyRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABMdfyItemBrModResExtIEsCls (Szt_ExtnE_RABMdfyItemBrModResExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABMdfyItemBrModResExtIEs (SztProtExtnField_E_RABMdfyItemBrModResExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABMdfyItemBrModResExtIEs (SztProtExtnCont_E_RABMdfyItemBrModResExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABMdfyItemBrModRes (SztE_RABMdfyItemBrModRes *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABMdfyItemBrModResIEsCls (Szt_ValueE_RABMdfyItemBrModResIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABMdfyItemBrModResIEs (SztProtIE_Field_E_RABMdfyItemBrModResIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABMdfyLstBrModRes (SztE_RABMdfyLstBrModRes *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABMdfyRespIEsCls (Szt_ValueE_RABMdfyRespIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABMdfyRespIEs (SztProtIE_Field_E_RABMdfyRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_E_RABMdfyRespIEs (SztProtIE_Cont_E_RABMdfyRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABMdfyResp (SztE_RABMdfyResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABRlsCmmdIEsCls (Szt_ValueE_RABRlsCmmdIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABRlsCmmdIEs (SztProtIE_Field_E_RABRlsCmmdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_E_RABRlsCmmdIEs (SztProtIE_Cont_E_RABRlsCmmdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABRlsCmmd (SztE_RABRlsCmmd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABRlsItemBrRelCompExtIEsCls (Szt_ExtnE_RABRlsItemBrRelCompExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABRlsItemBrRelCompExtIEs (SztProtExtnField_E_RABRlsItemBrRelCompExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABRlsItemBrRelCompExtIEs (SztProtExtnCont_E_RABRlsItemBrRelCompExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABRlsItemBrRelComp (SztE_RABRlsItemBrRelComp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABRlsItemBrRelCompIEsCls (Szt_ValueE_RABRlsItemBrRelCompIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABRlsItemBrRelCompIEs (SztProtIE_Field_E_RABRlsItemBrRelCompIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABRlsLstBrRelComp (SztE_RABRlsLstBrRelComp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABRlsRespIEsCls (Szt_ValueE_RABRlsRespIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABRlsRespIEs (SztProtIE_Field_E_RABRlsRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_E_RABRlsRespIEs (SztProtIE_Cont_E_RABRlsRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABRlsResp (SztE_RABRlsResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABRlsIndIEsCls (Szt_ValueE_RABRlsIndIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABRlsIndIEs (SztProtIE_Field_E_RABRlsIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_E_RABRlsIndIEs (SztProtIE_Cont_E_RABRlsIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABRlsInd (SztE_RABRlsInd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABToBeSetupItemCtxtSUReqExtIEsCls (Szt_ExtnE_RABToBeSetupItemCtxtSUReqExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABToBeSetupItemCtxtSUReqExtIEs (SztProtExtnField_E_RABToBeSetupItemCtxtSUReqExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABToBeSetupItemCtxtSUReqExtIEs (SztProtExtnCont_E_RABToBeSetupItemCtxtSUReqExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABToBeSetupItemCtxtSUReq (SztE_RABToBeSetupItemCtxtSUReq *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABToBeSetupItemCtxtSUReqIEsCls (Szt_ValueE_RABToBeSetupItemCtxtSUReqIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABToBeSetupItemCtxtSUReqIEs (SztProtIE_Field_E_RABToBeSetupItemCtxtSUReqIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABToBeSetupLstCtxtSUReq (SztE_RABToBeSetupLstCtxtSUReq *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueInitCntxtSetupRqstIEsCls (Szt_ValueInitCntxtSetupRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_InitCntxtSetupRqstIEs (SztProtIE_Field_InitCntxtSetupRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_InitCntxtSetupRqstIEs (SztProtIE_Cont_InitCntxtSetupRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztInitCntxtSetupRqst (SztInitCntxtSetupRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnE_RABSetupItemCtxtSUResExtIEsCls (Szt_ExtnE_RABSetupItemCtxtSUResExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_E_RABSetupItemCtxtSUResExtIEs (SztProtExtnField_E_RABSetupItemCtxtSUResExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_E_RABSetupItemCtxtSUResExtIEs (SztProtExtnCont_E_RABSetupItemCtxtSUResExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABSetupItemCtxtSURes (SztE_RABSetupItemCtxtSURes *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueE_RABSetupItemCtxtSUResIEsCls (Szt_ValueE_RABSetupItemCtxtSUResIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_E_RABSetupItemCtxtSUResIEs (SztProtIE_Field_E_RABSetupItemCtxtSUResIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztE_RABSetupLstCtxtSURes (SztE_RABSetupLstCtxtSURes *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueInitCntxtSetupRespIEsCls (Szt_ValueInitCntxtSetupRespIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_InitCntxtSetupRespIEs (SztProtIE_Field_InitCntxtSetupRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_InitCntxtSetupRespIEs (SztProtIE_Cont_InitCntxtSetupRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztInitCntxtSetupResp (SztInitCntxtSetupResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueInitCntxtSetupFailIEsCls (Szt_ValueInitCntxtSetupFailIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_InitCntxtSetupFailIEs (SztProtIE_Field_InitCntxtSetupFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_InitCntxtSetupFailIEs (SztProtIE_Cont_InitCntxtSetupFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztInitCntxtSetupFail (SztInitCntxtSetupFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ExtnTAIItemExtIEsCls (Szt_ExtnTAIItemExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnField_TAIItemExtIEs (SztProtExtnField_TAIItemExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtExtnCont_TAIItemExtIEs (SztProtExtnCont_TAIItemExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTAIItem (SztTAIItem *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueTAIItemIEsCls (Szt_ValueTAIItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_TAIItemIEs (SztProtIE_Field_TAIItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTAILst (SztTAILst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValuePagIEsCls (Szt_ValuePagIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_PagIEs (SztProtIE_Field_PagIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_PagIEs (SztProtIE_Cont_PagIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztPag (SztPag *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUECntxtRlsRqst_IEsCls (Szt_ValueUECntxtRlsRqst_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UECntxtRlsRqst_IEs (SztProtIE_Field_UECntxtRlsRqst_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UECntxtRlsRqst_IEs (SztProtIE_Cont_UECntxtRlsRqst_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUECntxtRlsRqst (SztUECntxtRlsRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUECntxtRlsCmmd_IEsCls (Szt_ValueUECntxtRlsCmmd_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UECntxtRlsCmmd_IEs (SztProtIE_Field_UECntxtRlsCmmd_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UECntxtRlsCmmd_IEs (SztProtIE_Cont_UECntxtRlsCmmd_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUECntxtRlsCmmd (SztUECntxtRlsCmmd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUECntxtRlsComplete_IEsCls (Szt_ValueUECntxtRlsComplete_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UECntxtRlsComplete_IEs (SztProtIE_Field_UECntxtRlsComplete_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UECntxtRlsComplete_IEs (SztProtIE_Cont_UECntxtRlsComplete_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUECntxtRlsComplete (SztUECntxtRlsComplete *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUECntxtModificationRqstIEsCls (Szt_ValueUECntxtModificationRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UECntxtModificationRqstIEs (SztProtIE_Field_UECntxtModificationRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UECntxtModificationRqstIEs (SztProtIE_Cont_UECntxtModificationRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUECntxtModificationRqst (SztUECntxtModificationRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUECntxtModificationRespIEsCls (Szt_ValueUECntxtModificationRespIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UECntxtModificationRespIEs (SztProtIE_Field_UECntxtModificationRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UECntxtModificationRespIEs (SztProtIE_Cont_UECntxtModificationRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUECntxtModificationResp (SztUECntxtModificationResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUECntxtModificationFailIEsCls (Szt_ValueUECntxtModificationFailIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UECntxtModificationFailIEs (SztProtIE_Field_UECntxtModificationFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UECntxtModificationFailIEs (SztProtIE_Cont_UECntxtModificationFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUECntxtModificationFail (SztUECntxtModificationFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUERadioCapbltyMatchRqstIEsCls (Szt_ValueUERadioCapbltyMatchRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UERadioCapbltyMatchRqstIEs (SztProtIE_Field_UERadioCapbltyMatchRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UERadioCapbltyMatchRqstIEs (SztProtIE_Cont_UERadioCapbltyMatchRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUERadioCapbltyMatchRqst (SztUERadioCapbltyMatchRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUERadioCapbltyMatchRespIEsCls (Szt_ValueUERadioCapbltyMatchRespIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UERadioCapbltyMatchRespIEs (SztProtIE_Field_UERadioCapbltyMatchRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UERadioCapbltyMatchRespIEs (SztProtIE_Cont_UERadioCapbltyMatchRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUERadioCapbltyMatchResp (SztUERadioCapbltyMatchResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueDlnkNASTport_IEsCls (Szt_ValueDlnkNASTport_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_DlnkNASTport_IEs (SztProtIE_Field_DlnkNASTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_DlnkNASTport_IEs (SztProtIE_Cont_DlnkNASTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztDlnkNASTport (SztDlnkNASTport *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueInitUEMsg_IEsCls (Szt_ValueInitUEMsg_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_InitUEMsg_IEs (SztProtIE_Field_InitUEMsg_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_InitUEMsg_IEs (SztProtIE_Cont_InitUEMsg_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztInitUEMsg (SztInitUEMsg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUlnkNASTport_IEsCls (Szt_ValueUlnkNASTport_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UlnkNASTport_IEs (SztProtIE_Field_UlnkNASTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UlnkNASTport_IEs (SztProtIE_Cont_UlnkNASTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUlnkNASTport (SztUlnkNASTport *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueNASNonDlvryInd_IEsCls (Szt_ValueNASNonDlvryInd_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_NASNonDlvryInd_IEs (SztProtIE_Field_NASNonDlvryInd_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_NASNonDlvryInd_IEs (SztProtIE_Cont_NASNonDlvryInd_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztNASNonDlvryInd (SztNASNonDlvryInd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUE_assocLogS1_ConItemResCls (Szt_ValueUE_assocLogS1_ConItemResCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UE_assocLogS1_ConItemRes (SztProtIE_Field_UE_assocLogS1_ConItemRes *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUE_assocLogS1_ConLstRes (SztUE_assocLogS1_ConLstRes *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztResetTyp (SztResetTyp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueResetIEsCls (Szt_ValueResetIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_ResetIEs (SztProtIE_Field_ResetIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_ResetIEs (SztProtIE_Cont_ResetIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztReset (SztReset *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUE_assocLogS1_ConItemResAckCls (Szt_ValueUE_assocLogS1_ConItemResAckCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UE_assocLogS1_ConItemResAck (SztProtIE_Field_UE_assocLogS1_ConItemResAck *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUE_assocLogS1_ConLstResAck (SztUE_assocLogS1_ConLstResAck *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueResetAckgIEsCls (Szt_ValueResetAckgIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_ResetAckgIEs (SztProtIE_Field_ResetAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_ResetAckgIEs (SztProtIE_Cont_ResetAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztResetAckg (SztResetAckg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueErrIndIEsCls (Szt_ValueErrIndIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_ErrIndIEs (SztProtIE_Field_ErrIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_ErrIndIEs (SztProtIE_Cont_ErrIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztErrInd (SztErrInd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueS1SetupRqstIEsCls (Szt_ValueS1SetupRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_S1SetupRqstIEs (SztProtIE_Field_S1SetupRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_S1SetupRqstIEs (SztProtIE_Cont_S1SetupRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztS1SetupRqst (SztS1SetupRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueS1SetupRespIEsCls (Szt_ValueS1SetupRespIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_S1SetupRespIEs (SztProtIE_Field_S1SetupRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_S1SetupRespIEs (SztProtIE_Cont_S1SetupRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztS1SetupResp (SztS1SetupResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueS1SetupFailIEsCls (Szt_ValueS1SetupFailIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_S1SetupFailIEs (SztProtIE_Field_S1SetupFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_S1SetupFailIEs (SztProtIE_Cont_S1SetupFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztS1SetupFail (SztS1SetupFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueENBConfigUpdIEsCls (Szt_ValueENBConfigUpdIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_ENBConfigUpdIEs (SztProtIE_Field_ENBConfigUpdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_ENBConfigUpdIEs (SztProtIE_Cont_ENBConfigUpdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENBConfigUpd (SztENBConfigUpd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueENBConfigUpdAckgIEsCls (Szt_ValueENBConfigUpdAckgIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_ENBConfigUpdAckgIEs (SztProtIE_Field_ENBConfigUpdAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_ENBConfigUpdAckgIEs (SztProtIE_Cont_ENBConfigUpdAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENBConfigUpdAckg (SztENBConfigUpdAckg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueENBConfigUpdFailIEsCls (Szt_ValueENBConfigUpdFailIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_ENBConfigUpdFailIEs (SztProtIE_Field_ENBConfigUpdFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_ENBConfigUpdFailIEs (SztProtIE_Cont_ENBConfigUpdFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENBConfigUpdFail (SztENBConfigUpdFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueMMEConfigUpdIEsCls (Szt_ValueMMEConfigUpdIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_MMEConfigUpdIEs (SztProtIE_Field_MMEConfigUpdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_MMEConfigUpdIEs (SztProtIE_Cont_MMEConfigUpdIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztMMEConfigUpd (SztMMEConfigUpd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueMMEConfigUpdAckgIEsCls (Szt_ValueMMEConfigUpdAckgIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_MMEConfigUpdAckgIEs (SztProtIE_Field_MMEConfigUpdAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_MMEConfigUpdAckgIEs (SztProtIE_Cont_MMEConfigUpdAckgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztMMEConfigUpdAckg (SztMMEConfigUpdAckg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueMMEConfigUpdFailIEsCls (Szt_ValueMMEConfigUpdFailIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_MMEConfigUpdFailIEs (SztProtIE_Field_MMEConfigUpdFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_MMEConfigUpdFailIEs (SztProtIE_Cont_MMEConfigUpdFailIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztMMEConfigUpdFail (SztMMEConfigUpdFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueDlnkS1cdma2000tunnelingIEsCls (Szt_ValueDlnkS1cdma2000tunnelingIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_DlnkS1cdma2000tunnelingIEs (SztProtIE_Field_DlnkS1cdma2000tunnelingIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_DlnkS1cdma2000tunnelingIEs (SztProtIE_Cont_DlnkS1cdma2000tunnelingIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztDlnkS1cdma2000tunneling (SztDlnkS1cdma2000tunneling *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUlnkS1cdma2000tunnelingIEsCls (Szt_ValueUlnkS1cdma2000tunnelingIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UlnkS1cdma2000tunnelingIEs (SztProtIE_Field_UlnkS1cdma2000tunnelingIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UlnkS1cdma2000tunnelingIEs (SztProtIE_Cont_UlnkS1cdma2000tunnelingIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUlnkS1cdma2000tunneling (SztUlnkS1cdma2000tunneling *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUECapbltyInfoIndIEsCls (Szt_ValueUECapbltyInfoIndIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UECapbltyInfoIndIEs (SztProtIE_Field_UECapbltyInfoIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UECapbltyInfoIndIEs (SztProtIE_Cont_UECapbltyInfoIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUECapbltyInfoInd (SztUECapbltyInfoInd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueENBStatusTfrIEsCls (Szt_ValueENBStatusTfrIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_ENBStatusTfrIEs (SztProtIE_Field_ENBStatusTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_ENBStatusTfrIEs (SztProtIE_Cont_ENBStatusTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENBStatusTfr (SztENBStatusTfr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueMMEStatusTfrIEsCls (Szt_ValueMMEStatusTfrIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_MMEStatusTfrIEs (SztProtIE_Field_MMEStatusTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_MMEStatusTfrIEs (SztProtIE_Cont_MMEStatusTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztMMEStatusTfr (SztMMEStatusTfr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueTraceStartIEsCls (Szt_ValueTraceStartIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_TraceStartIEs (SztProtIE_Field_TraceStartIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_TraceStartIEs (SztProtIE_Cont_TraceStartIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTraceStart (SztTraceStart *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueTraceFailIndIEsCls (Szt_ValueTraceFailIndIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_TraceFailIndIEs (SztProtIE_Field_TraceFailIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_TraceFailIndIEs (SztProtIE_Cont_TraceFailIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztTraceFailInd (SztTraceFailInd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueDeactvTraceIEsCls (Szt_ValueDeactvTraceIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_DeactvTraceIEs (SztProtIE_Field_DeactvTraceIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_DeactvTraceIEs (SztProtIE_Cont_DeactvTraceIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztDeactvTrace (SztDeactvTrace *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueCellTrafficTraceIEsCls (Szt_ValueCellTrafficTraceIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_CellTrafficTraceIEs (SztProtIE_Field_CellTrafficTraceIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_CellTrafficTraceIEs (SztProtIE_Cont_CellTrafficTraceIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztCellTrafficTrace (SztCellTrafficTrace *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueLocRprtngCntrlIEsCls (Szt_ValueLocRprtngCntrlIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_LocRprtngCntrlIEs (SztProtIE_Field_LocRprtngCntrlIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_LocRprtngCntrlIEs (SztProtIE_Cont_LocRprtngCntrlIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztLocRprtngCntrl (SztLocRprtngCntrl *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueLocRprtngFailIndIEsCls (Szt_ValueLocRprtngFailIndIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_LocRprtngFailIndIEs (SztProtIE_Field_LocRprtngFailIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_LocRprtngFailIndIEs (SztProtIE_Cont_LocRprtngFailIndIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztLocRprtngFailInd (SztLocRprtngFailInd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueLocReportIEsCls (Szt_ValueLocReportIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_LocReportIEs (SztProtIE_Field_LocReportIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_LocReportIEs (SztProtIE_Cont_LocReportIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztLocReport (SztLocReport *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueOverloadStartIEsCls (Szt_ValueOverloadStartIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_OverloadStartIEs (SztProtIE_Field_OverloadStartIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_OverloadStartIEs (SztProtIE_Cont_OverloadStartIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztOverloadStart (SztOverloadStart *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueOverloadStopIEsCls (Szt_ValueOverloadStopIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_OverloadStopIEs (SztProtIE_Field_OverloadStopIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_OverloadStopIEs (SztProtIE_Cont_OverloadStopIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztOverloadStop (SztOverloadStop *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueWriteReplaceWarningRqstIEsCls (Szt_ValueWriteReplaceWarningRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_WriteReplaceWarningRqstIEs (SztProtIE_Field_WriteReplaceWarningRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_WriteReplaceWarningRqstIEs (SztProtIE_Cont_WriteReplaceWarningRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztWriteReplaceWarningRqst (SztWriteReplaceWarningRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueWriteReplaceWarningRespIEsCls (Szt_ValueWriteReplaceWarningRespIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_WriteReplaceWarningRespIEs (SztProtIE_Field_WriteReplaceWarningRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_WriteReplaceWarningRespIEs (SztProtIE_Cont_WriteReplaceWarningRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztWriteReplaceWarningResp (SztWriteReplaceWarningResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztInter_SystemInformTfrTyp (SztInter_SystemInformTfrTyp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueENBDirectInformTfrIEsCls (Szt_ValueENBDirectInformTfrIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_ENBDirectInformTfrIEs (SztProtIE_Field_ENBDirectInformTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_ENBDirectInformTfrIEs (SztProtIE_Cont_ENBDirectInformTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENBDirectInformTfr (SztENBDirectInformTfr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueMMEDirectInformTfrIEsCls (Szt_ValueMMEDirectInformTfrIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_MMEDirectInformTfrIEs (SztProtIE_Field_MMEDirectInformTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_MMEDirectInformTfrIEs (SztProtIE_Cont_MMEDirectInformTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztMMEDirectInformTfr (SztMMEDirectInformTfr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueENBConfigTfrIEsCls (Szt_ValueENBConfigTfrIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_ENBConfigTfrIEs (SztProtIE_Field_ENBConfigTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_ENBConfigTfrIEs (SztProtIE_Cont_ENBConfigTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztENBConfigTfr (SztENBConfigTfr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueMMEConfigTfrIEsCls (Szt_ValueMMEConfigTfrIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_MMEConfigTfrIEs (SztProtIE_Field_MMEConfigTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_MMEConfigTfrIEs (SztProtIE_Cont_MMEConfigTfrIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztMMEConfigTfr (SztMMEConfigTfr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValuePrivMsgIEsCls (Szt_ValuePrivMsgIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztPrivIE_Field_PrivMsgIEs (SztPrivIE_Field_PrivMsgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztPrivIE_Cont_PrivMsgIEs (SztPrivIE_Cont_PrivMsgIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztPrivMsg (SztPrivMsg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueKillRqstIEsCls (Szt_ValueKillRqstIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_KillRqstIEs (SztProtIE_Field_KillRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_KillRqstIEs (SztProtIE_Cont_KillRqstIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztKillRqst (SztKillRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueKillRespIEsCls (Szt_ValueKillRespIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_KillRespIEs (SztProtIE_Field_KillRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_KillRespIEs (SztProtIE_Cont_KillRespIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztKillResp (SztKillResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueDlnkUEAssociatedLPPaTport_IEsCls (Szt_ValueDlnkUEAssociatedLPPaTport_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_DlnkUEAssociatedLPPaTport_IEs (SztProtIE_Field_DlnkUEAssociatedLPPaTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_DlnkUEAssociatedLPPaTport_IEs (SztProtIE_Cont_DlnkUEAssociatedLPPaTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztDlnkUEAssociatedLPPaTport (SztDlnkUEAssociatedLPPaTport *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUlnkUEAssociatedLPPaTport_IEsCls (Szt_ValueUlnkUEAssociatedLPPaTport_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UlnkUEAssociatedLPPaTport_IEs (SztProtIE_Field_UlnkUEAssociatedLPPaTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UlnkUEAssociatedLPPaTport_IEs (SztProtIE_Cont_UlnkUEAssociatedLPPaTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUlnkUEAssociatedLPPaTport (SztUlnkUEAssociatedLPPaTport *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueDlnkNonUEAssociatedLPPaTport_IEsCls (Szt_ValueDlnkNonUEAssociatedLPPaTport_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_DlnkNonUEAssociatedLPPaTport_IEs (SztProtIE_Field_DlnkNonUEAssociatedLPPaTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_DlnkNonUEAssociatedLPPaTport_IEs (SztProtIE_Cont_DlnkNonUEAssociatedLPPaTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztDlnkNonUEAssociatedLPPaTport (SztDlnkNonUEAssociatedLPPaTport *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_ValueUlnkNonUEAssociatedLPPaTport_IEsCls (Szt_ValueUlnkNonUEAssociatedLPPaTport_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Field_UlnkNonUEAssociatedLPPaTport_IEs (SztProtIE_Field_UlnkNonUEAssociatedLPPaTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztProtIE_Cont_UlnkNonUEAssociatedLPPaTport_IEs (SztProtIE_Cont_UlnkNonUEAssociatedLPPaTport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUlnkNonUEAssociatedLPPaTport (SztUlnkNonUEAssociatedLPPaTport *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_InitiatingMsgCls (Szt_InitiatingMsgCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztInitiatingMsg (SztInitiatingMsg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_SuccessfulOutcomeCls (Szt_SuccessfulOutcomeCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztSuccessfulOutcome (SztSuccessfulOutcome *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSzt_UnsuccessfulOutcomeCls (Szt_UnsuccessfulOutcomeCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztUnsuccessfulOutcome (SztUnsuccessfulOutcome *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkSztS1AP_PDU (SztS1AP_PDU *param, Ptr ptr, Buffer *mBuf);


typedef TknU32 SztNumberOfIuInstances;


typedef enum enumSztRelocationTyp
{
   SztRelocationTypue_not_involvedEnum,
   SztRelocationTypue_involvedEnum
} EnumSztRelocationTyp;
typedef TknU32 SztRelocationTyp;


typedef TknStrBSXL SztIntegrityProtectionKey;

typedef TknU32 SztCN_DomainIndicator;


typedef TknU32 SztEncryptionAlgorithm;





typedef TknU8 SztChosenEncryptionAlgorithm;


typedef TknU8 SztChosenIntegrityProtectionAlgorithm;


typedef TknU8 sztIntegrityProtectionAlgo;


typedef sztIntegrityProtectionAlgo sztIntegrityProtectionAlgorithm;


typedef TknU8 sztEncryptionAlgo;


typedef sztEncryptionAlgo sztEncryptionAlgorithm;


typedef TknStrBSXL SztEncryptionKey;


typedef TknU32 SztD_RNTI;


typedef TknU32 SztTgetCellId;

typedef struct s1ap_ExtnSrcUTRANCellID_ExtIEsCls
{
   union
   {
      TknU8 unused;
   } u;
} Szt_ExtnSrcUTRANCellID_ExtIEsCls;
typedef struct s1apProtExtnField_SrcUTRANCellID_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnSrcUTRANCellID_ExtIEsCls extensionValue;
} SztProtExtnField_SrcUTRANCellID_ExtIEs;
typedef struct s1apProtExtnCont_SrcUTRANCellID_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_SrcUTRANCellID_ExtIEs *member;
}SztProtExtnCont_SrcUTRANCellID_ExtIEs;

typedef struct s1apSrcUTRANCellID
{
   TknPres pres;
   SztPLMNidentity pLMNidentity;
   SztTgetCellId uTRANcellID;
   SztProtExtnCont_SrcUTRANCellID_ExtIEs iE_Extns;
} SztSrcUTRANCellID;


typedef TknStr4 Szt3gRAC;

typedef struct s1ap3g_ExtnCGI_ExtIEsCls{
   union {
      Szt3gRAC sztRAC;
   } u;
} Szt3g_ExtnCGI_ExtIEsCls;

typedef struct s1ap3gProtExtnField_CGI_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt3g_ExtnCGI_ExtIEsCls extensionValue;
} Szt3gProtExtnField_CGI_ExtIEs;

typedef struct s1ap3gProtExtnCont_CGI_ExtIEs
{
   TknU16 noComp;
   Szt3gProtExtnField_CGI_ExtIEs *member;
}Szt3gProtExtnCont_CGI_ExtIEs;

typedef struct s1ap3gCGI
{
   TknPres pres;
   SztPLMNidentity pLMNidentity;
   SztLAC lAC;
   SztCI cI;
   Szt3gProtExtnCont_CGI_ExtIEs iE_Extns;
} Szt3gCGI;

typedef struct s1apSrcCellID
{
   TknU8 choice;
   union {
      SztSrcUTRANCellID sourceUTRANCellID;
      Szt3gCGI sourceGERANCellID;
   } val;
} SztSrcCellID;

typedef TknBStr32 SztRAB_ID;


typedef TknU32 SztDCH_ID;


typedef TknU32 SztDSCH_ID;


typedef TknU32 SztHS_DSCH_MAC_d_Flow_ID;


typedef TknU32 SztE_DCH_MAC_d_Flow_ID;


typedef TknU32 SztUSCH_ID;


typedef enum enumSztCN_DomainIndicator
{
   SztCN_DomainIndicatorcs_domainEnum,
   SztCN_DomainIndicatorps_domainEnum
} EnumSztCN_DomainIndicator;

typedef struct s1ap_ExtnTrCH_ID_ExtIEsCls{
   union {
      SztHS_DSCH_MAC_d_Flow_ID sztHS_DSCH_MAC_d_Flow_ID;
      SztE_DCH_MAC_d_Flow_ID sztE_DCH_MAC_d_Flow_ID;
   } u;
} Szt_ExtnTrCH_ID_ExtIEsCls;

typedef struct s1apProtExtnField_TrCH_ID_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnTrCH_ID_ExtIEsCls extensionValue;
} SztProtExtnField_TrCH_ID_ExtIEs;
typedef struct s1apProtExtnCont_TrCH_ID_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_TrCH_ID_ExtIEs *member;
}SztProtExtnCont_TrCH_ID_ExtIEs;

typedef struct s1apTrCH_ID
{
   TknPres pres;
   SztDCH_ID dCH_ID;
   SztDSCH_ID dSCH_ID;
   SztUSCH_ID uSCH_ID;
   SztProtExtnCont_TrCH_ID_ExtIEs iE_Extns;
} SztTrCH_ID;

typedef struct s1apTrCH_ID_Lst
{
   TknU16 noComp;
   SztTrCH_ID *member;
}SztTrCH_ID_Lst;

typedef struct s1ap_ExtnRAB_TrCH_MappingItem_ExtIEsCls
{
   union
   {
      SztCN_DomainIndicator sztCN_DomainIndicator;
   } u;
} Szt_ExtnRAB_TrCH_MappingItem_ExtIEsCls;

typedef struct s1apProtExtnField_RAB_TrCH_MappingItem_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnRAB_TrCH_MappingItem_ExtIEsCls extensionValue;
} SztProtExtnField_RAB_TrCH_MappingItem_ExtIEs;

typedef struct s1apProtExtnCont_RAB_TrCH_MappingItem_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_RAB_TrCH_MappingItem_ExtIEs *member;
}SztProtExtnCont_RAB_TrCH_MappingItem_ExtIEs;

typedef struct s1apRAB_TrCH_MappingItem
{
   TknPres pres;
   SztRAB_ID rAB_ID;
   SztTrCH_ID_Lst trCH_ID_Lst;
   SztProtExtnCont_RAB_TrCH_MappingItem_ExtIEs iE_Extns;
} SztRAB_TrCH_MappingItem;

typedef struct s1apRAB_TrCH_Mapping
{
   TknU16 noComp;
   SztRAB_TrCH_MappingItem *member;
}SztRAB_TrCH_Mapping;



typedef TknU32 SztSRB_ID;

typedef struct s1ap_ExtnSRB_TrCH_MappingItem_ExtIEsCls
{
   union
   {
      TknU8 unused;
   } u;
} Szt_ExtnSRB_TrCH_MappingItem_ExtIEsCls;

typedef struct s1apProtExtnField_SRB_TrCH_MappingItem_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnSRB_TrCH_MappingItem_ExtIEsCls extensionValue;
} SztProtExtnField_SRB_TrCH_MappingItem_ExtIEs;
typedef struct s1apProtExtnCont_SRB_TrCH_MappingItem_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_SRB_TrCH_MappingItem_ExtIEs *member;
}SztProtExtnCont_SRB_TrCH_MappingItem_ExtIEs;

typedef struct s1apSRB_TrCH_MappingItem
{
   TknPres pres;
   SztSRB_ID sRB_ID;
   SztTrCH_ID trCH_ID;
   SztProtExtnCont_SRB_TrCH_MappingItem_ExtIEs iE_Extns;
} SztSRB_TrCH_MappingItem;

typedef struct s1apSRB_TrCH_Mapping
{
   TknU16 noComp;
   SztSRB_TrCH_MappingItem *member;
}SztSRB_TrCH_Mapping;


typedef TknU32 SztCell_Capacity_Class_Value;


typedef TknU32 SztLoadValue;


typedef TknU32 SztRTLoadValue;


typedef TknU32 SztNRTLoadInformValue;
typedef struct s1ap_ExtnCellLoadInform_ExtIEsCls
{
   union
   {
      TknU8 unused;
   } u;
} Szt_ExtnCellLoadInform_ExtIEsCls;
typedef struct s1apProtExtnField_CellLoadInform_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnCellLoadInform_ExtIEsCls extensionValue;
} SztProtExtnField_CellLoadInform_ExtIEs;

typedef struct s1apProtExtnCont_CellLoadInform_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_CellLoadInform_ExtIEs *member;
}SztProtExtnCont_CellLoadInform_ExtIEs;

typedef struct s1apCellLoadInform
{
   TknPres pres;
   SztCell_Capacity_Class_Value cell_Capacity_Class_Value;
   SztLoadValue loadValue;
   SztRTLoadValue rTLoadValue;
   SztNRTLoadInformValue nRTLoadInformValue;
   SztProtExtnCont_CellLoadInform_ExtIEs iE_Extns;
} SztCellLoadInform;

typedef struct s1ap_ExtnCellLoadInformGroup_ExtIEsCls
{
   union
   {
      TknU8 unused;
   } u;
} Szt_ExtnCellLoadInformGroup_ExtIEsCls;

typedef struct s1apProtExtnField_CellLoadInformGroup_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnCellLoadInformGroup_ExtIEsCls extensionValue;
} SztProtExtnField_CellLoadInformGroup_ExtIEs;
typedef struct s1apProtExtnCont_CellLoadInformGroup_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_CellLoadInformGroup_ExtIEs *member;
}SztProtExtnCont_CellLoadInformGroup_ExtIEs;


typedef TknStrOSXL SztTraceReference;


typedef TknU32 SztTraceRecordingSessionReference;

typedef struct s1ap_ExtnTraceRecordingSessionInform_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnTraceRecordingSessionInform_ExtIEsCls;

typedef struct s1apProtExtnField_TraceRecordingSessionInform_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnTraceRecordingSessionInform_ExtIEsCls extensionValue;
} SztProtExtnField_TraceRecordingSessionInform_ExtIEs;

typedef struct s1apProtExtnCont_TraceRecordingSessionInform_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_TraceRecordingSessionInform_ExtIEs *member;
}SztProtExtnCont_TraceRecordingSessionInform_ExtIEs;

typedef struct s1apTraceRecordingSessionInform
{
   TknPres pres;
   SztTraceReference traceReference;
   SztTraceRecordingSessionReference traceRecordingSessionReference;
   SztProtExtnCont_TraceRecordingSessionInform_ExtIEs iE_Extns;
} SztTraceRecordingSessionInform;


typedef enum enumSztMBMSLinkingInform
{
   SztMBMSLinkingInformuE_has_joined_multicast_servicesEnum
} EnumSztMBMSLinkingInform;
typedef TknU32 SztMBMSLinkingInform;


typedef TknStrOSXL SztUE_History_Inform;


typedef enum enumSztCSFB_Inform
{
   SztCSFB_InformcsfbEnum,
   SztCSFB_Informcsfb_high_priorityEnum
} EnumSztCSFB_Inform;
typedef TknU32 SztCSFB_Inform;


typedef TknStrBSXL SztSRVCC_Informnonce;
typedef struct s1ap_ExtnSRVCC_Inform_ExtIEsCls
{
   union
   {
      TknU8 unused;
   } u;
} Szt_ExtnSRVCC_Inform_ExtIEsCls;

typedef struct s1apProtExtnField_SRVCC_Inform_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnSRVCC_Inform_ExtIEsCls extensionValue;
} SztProtExtnField_SRVCC_Inform_ExtIEs;

typedef struct s1apProtExtnCont_SRVCC_Inform_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_SRVCC_Inform_ExtIEs *member;
}SztProtExtnCont_SRVCC_Inform_ExtIEs;

typedef struct s1apSRVCC_Inform
{
   TknPres pres;
   SztSRVCC_Informnonce nonce;
   SztProtExtnCont_SRVCC_Inform_ExtIEs iE_Extns;
} SztSRVCC_Inform;


typedef struct s1apCellLoadInformGroup
{
   TknPres pres;
   SztSrcCellID sourceCellID;
   SztCellLoadInform uplinkCellLoadInform;
   SztCellLoadInform downlinkCellLoadInform;
   SztProtExtnCont_CellLoadInformGroup_ExtIEs iE_Extns;
} SztCellLoadInformGroup;

typedef struct s1ap_ExtnSrcRNC_ToTgetRNC_TprntCont_ExtIEsCls
{
   union
   {
      SztSRB_TrCH_Mapping sztSRB_TrCH_Mapping;
      SztCellLoadInformGroup sztCellLoadInformGroup;
      SztTraceRecordingSessionInform sztTraceRecordingSessionInform;
      SztMBMSLinkingInform sztMBMSLinkingInform;
      SztD_RNTI sztD_RNTI;
      SztUE_History_Inform sztUE_History_Inform;
      SztSubscriberProfileIDforRFP sztSubscriberProfileIDforRFP;
      SztSRVCC_Inform sztSRVCC_Inform;
      SztRAB_ID sztRAB_ID;
      SztCSFB_Inform sztCSFB_Inform;
   } u;
} Szt_ExtnSrcRNC_ToTgetRNC_TprntCont_ExtIEsCls;

typedef struct s1apProtExtnField_SrcRNC_ToTgetRNC_TprntCont_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnSrcRNC_ToTgetRNC_TprntCont_ExtIEsCls extensionValue;
} SztProtExtnField_SrcRNC_ToTgetRNC_TprntCont_ExtIEs;

typedef struct s1apProtExtnCont_SrcRNC_ToTgetRNC_TprntCont_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_SrcRNC_ToTgetRNC_TprntCont_ExtIEs *member;
}SztProtExtnCont_SrcRNC_ToTgetRNC_TprntCont_ExtIEs;

typedef struct s1apSrcRNC_ToTgetRNC_TprntCont
{
   TknPres pres;
   SztRRC_Cont rRC_Cont;
   SztNumberOfIuInstances numberOfIuInstances;
   SztRelocationTyp relocationTyp;
   SztChosenIntegrityProtectionAlgorithm chosenIntegrityProtectionAlgorithm;
   SztIntegrityProtectionKey integrityProtectionKey;
   SztChosenEncryptionAlgorithm chosenEncryptionAlgorithForSignalling;
   SztEncryptionKey cipheringKey;
   SztChosenEncryptionAlgorithm chosenEncryptionAlgorithForCS;
   SztChosenEncryptionAlgorithm chosenEncryptionAlgorithForPS;
   SztD_RNTI d_RNTI;
   SztTgetCellId targetCellId;
   SztRAB_TrCH_Mapping rAB_TrCH_Mapping;
   SztProtExtnCont_SrcRNC_ToTgetRNC_TprntCont_ExtIEs iE_Extns;
} SztSrcRNC_ToTgetRNC_TprntCont_3gasn;



typedef struct s1ap_ExtnTgetRNC_ToSrcRNC_TprntCont_ExtIEsCls{
   union {
      TknU8 unused;
   } u;
} Szt_ExtnTgetRNC_ToSrcRNC_TprntCont_ExtIEsCls;

typedef struct s1apProtExtnField_TgetRNC_ToSrcRNC_TprntCont_ExtIEs
{
   TknPres pres;
   SztProtExtnID id;
   SztCriticality criticality;
   Szt_ExtnTgetRNC_ToSrcRNC_TprntCont_ExtIEsCls extensionValue;
} SztProtExtnField_TgetRNC_ToSrcRNC_TprntCont_ExtIEs;

typedef struct s1apProtExtnCont_TgetRNC_ToSrcRNC_TprntCont_ExtIEs
{
   TknU16 noComp;
   SztProtExtnField_TgetRNC_ToSrcRNC_TprntCont_ExtIEs *member;
}SztProtExtnCont_TgetRNC_ToSrcRNC_TprntCont_ExtIEs;
typedef struct s1apTgetRNC_ToSrcRNC_TprntCont
{
   TknPres pres;
   SztRRC_Cont rRC_Cont;
   SztD_RNTI d_RNTI;
   SztProtExtnCont_TgetRNC_ToSrcRNC_TprntCont_ExtIEs iE_Extns;
} SztTgetRNC_ToSrcRNC_TprntCont_3gasn;






typedef U16 SztPort;
typedef struct s1appdu
{
   CmMemListCp memCp;
   SztS1AP_PDU pdu;
}S1apPdu;


typedef struct sztConReq
{
   TknU32 peerId;
   union
   {
      UConnId spConnId;
      UConnId suConnId;
   }u;
   S1apPdu *pdu;
}SztConReq;

typedef SztConReq SztConInd;

typedef struct sztConRsp
{
   UConnId suConnId;
   UConnId spConnId;
   S1apPdu *pdu;
}SztConRsp;


typedef struct sztRelReq
{
   U8 connIdType;
   U8 relType;
   UConnId connId;
   S1apPdu *pdu;
}SztRelReq;

typedef struct sztRelInd
{
   TknU32 suConnId;
   UConnId spConnId;
   S1apPdu *pdu;
}SztRelInd;

typedef SztConRsp SztConCfm;

typedef struct sztRelCfm
{
   UConnId suConnId;
   UConnId spConnId;
   U8 relType;
   S1apPdu *pdu;
}SztRelCfm;

typedef SztConRsp SztRelRsp;

typedef struct sztDatReq
{
   UConnId spConnId;
   S1apPdu *pdu;
}SztDatEvntReq;

typedef struct sztDatInd
{
   UConnId suConnId;
   S1apPdu *pdu;
}SztDatEvntInd;


typedef struct sztUDatEvnt
{
   TknU32 transId;
   TknU32 peerId;
   S1apPdu *pdu;
}SztUDatEvnt;



typedef struct sztConnSt
{
   UConnId connId;
   State state;
}SztConnSt;
typedef struct sztAudConn
{
   U8 connIdType;
   U8 nmbConn;
   SztConnSt connSt[10];
}SztAudConn;

typedef struct sztAudPeer
{
   U32 peerId;
   State peerState;
}SztAudPeer;

typedef struct sztReqStatus
{
   U16 status;
   U16 cause;
}SztReqStatus;
typedef struct sztAudEvnt
{
   U8 type;
   union
   {
      SztAudConn audConn;
      SztAudPeer audPeer;
   }u;
   SztReqStatus status;
}SztAudEvnt;

typedef struct sztStaInd
{
   TknU32 peerId;
   U8 type;
   U8 status;
   U8 reason;
}SztStaInd;

typedef struct sztLclErrInd
{
   TknU32 suConnId;
   TknU32 spConnId;
   TknU32 transId;
   U8 causeType;
   U8 causeValue;
}SztLclErrInd;



typedef struct szIePdu
{
   CmMemListCp memCp;
   union
   {
      SztSrceNB_ToTgeteNB_TprntCont srcToTget;
      SztTgeteNB_ToSrceNB_TprntCont tgetToSrc;


      SztSrcRNC_ToTgetRNC_TprntCont_3gasn srcRncToTgetRnc;
      SztTgetRNC_ToSrcRNC_TprntCont_3gasn TgetRncToSrcRnc;
      SztSrcCellID utraSrcCellId;

      SztGlobal_ENB_ID globalEnbId;
   }u;
}SzIePdu;


typedef struct sztEncDecEvnt
{
   U32 transId;
   TknU8 type;


   TknU8 ieType;

   union
   {
      S1apPdu *pdu;


      SzIePdu *iePdu;

      Buffer *mBuf;
   }u;
}SztEncDecEvnt;

typedef struct sztFlcInd
{
   TknU32 peerId;
   U8 status;
}SztFlcInd;
typedef struct _sztAbortS1
{
   TknU32 peerId;
   CmStatus abortS1Cfm;
   U8 sndAbortFlag;
} SztAbortS1;




typedef S16 (*SztBndReq) ( Pst *pst, SuId suId, SpId spId )



          ;

typedef S16 (*SztUbndReq) ( Pst *pst, SpId spId, Reason reason )



          ;

typedef S16 (*SztBndCfm) ( Pst *pst, SuId suId, U8 status )



          ;

typedef S16 (*SztStatusInd) ( Pst *pst, SuId suId, SztStaInd *sztSta )



          ;

typedef S16 (*SztFlowControlInd) ( Pst *pst, SuId suId, SztFlcInd *flcInd )



          ;

typedef S16 (*SztErrorInd) ( Pst *pst, SuId suId, SztLclErrInd *sztLclErrInd )



          ;

typedef S16 (*SztUDatReq) ( Pst *pst, SpId spId, SztUDatEvnt *uDatEvnt )



          ;

typedef S16 (*SztUDatInd) ( Pst *pst, SuId suId, SztUDatEvnt *uDatEvnt )



          ;

typedef S16 (*SztConnReq) ( Pst *pst, SpId spId, SztConReq *conReq )



          ;

typedef S16 (*SztConnInd) ( Pst *pst, SuId suId, SztConInd *conInd )



          ;

typedef S16 (*SztConnRsp) ( Pst *pst, SpId spId, SztConRsp *conRsp )



          ;

typedef S16 (*SztConnCfm) ( Pst *pst, SuId suId, SztConCfm *conCfm )



          ;

typedef S16 (*SztRelsReq) ( Pst *pst, SpId spId, SztRelReq *relReq )



          ;

typedef S16 (*SztRelsInd) ( Pst *pst, SuId suId, SztRelInd *relInd )



          ;

typedef S16 (*SztRelsRsp) ( Pst *pst, SpId spId, SztRelRsp *relRsp )



          ;

typedef S16 (*SztRelsCfm) ( Pst *pst, SuId suId, SztRelCfm *relCfm )



          ;

typedef S16 (*SztDatReq) ( Pst *pst, SpId spId, SztDatEvntReq *datEvnt )



          ;

typedef S16 (*SztDatInd) ( Pst *pst, SuId suId, SztDatEvntInd *datEvnt )



          ;

typedef S16 (*SztEncDecReq) ( Pst *pst, SpId spId, SztEncDecEvnt *sztEncDecEvnt )



          ;

typedef S16 (*SztEncDecCfm) ( Pst *pst, SuId suId, SztEncDecEvnt *sztEncDecEvnt, SztReqStatus *status )




          ;

typedef S16 (*SztAudReq) ( Pst *pst, SpId spId, SztAudEvnt *audEvnt )



          ;

typedef S16 (*SztAudCfm) ( Pst *pst, SuId suId, SztAudEvnt *audEvnt )



          ;



typedef S16 (*SztAbortS1Req) ( Pst *pst, SpId spId, SztAbortS1 *abortS1 )



          ;

typedef S16 (*SztAbortS1Cfm) ( Pst *pst, SuId suId, SztAbortS1 *abortS1 )



          ;
extern S16 cmPkS1apPdu (S1apPdu *param,Buffer *mBuf);


extern S16 cmPkS1apPduIe (SztEncDecEvnt *param,Buffer *mBuf);

extern S16 cmPkSztBndReq (Pst *pst, SuId suId, SpId spId);
extern S16 cmPkSztUbndReq (Pst *pst, SpId spId, Reason reason);
extern S16 cmPkSztBndCfm (Pst *pst, SuId suId, U8 status);
extern S16 cmPkSztStaInd (Pst *pst, SuId suId, SztStaInd *sztSta);
extern S16 cmPkSztFlcInd (Pst *pst, SuId suId, SztFlcInd *sztSta);
extern S16 cmPkSztLclErrInd (Pst *pst, SuId suId, SztLclErrInd *sztErrInd)
                                                    ;
extern S16 cmPkSztUDatReq (Pst *pst, SpId spId, SztUDatEvnt *uDatEvnt);
extern S16 cmPkSztUDatInd (Pst *pst, SuId suId, SztUDatEvnt *uDatEvnt);
extern S16 cmPkSztConReq (Pst *pst, SpId spId, SztConReq *conReq);
extern S16 cmPkSztConInd (Pst *pst, SuId suId, SztConInd *conInd);
extern S16 cmPkSztConRsp (Pst *pst, SpId spId, SztConRsp *conRsp);
extern S16 cmPkSztConCfm (Pst *pst, SuId suId, SztConCfm *conCfm);
extern S16 cmPkSztRelReq (Pst *pst, SpId spId, SztRelReq *relReq);
extern S16 cmPkSztRelInd (Pst *pst, SuId suId, SztRelInd *relInd);
extern S16 cmPkSztRelRsp (Pst *pst, SpId spId, SztRelRsp *relRsp);
extern S16 cmPkSztRelCfm (Pst *pst, SuId suId, SztRelCfm *relCfm);
extern S16 cmPkSztDatReq (Pst *pst, SpId spId, SztDatEvntReq *datEvnt);
extern S16 cmPkSztDatInd (Pst *pst, SuId suId, SztDatEvntInd *datEvnt);
extern S16 cmPkSztEncDecReq (Pst *pst, SpId spId, SztEncDecEvnt *sztEncDecEvnt)
                                                                ;
extern S16 cmPkSztEncDecCfm (Pst *pst, SuId suId, SztEncDecEvnt *sztEncDecEvnt, SztReqStatus *status)

                                                        ;
extern S16 cmPkSztAudReq (Pst *pst, SpId spId, SztAudEvnt *audEvnt);
extern S16 cmPkSztAudCfm (Pst *pst, SuId suId, SztAudEvnt *audEvnt);
extern S16 cmPkSztAudEvnt ( SztAudEvnt *audEvnt, Buffer *mBuf);
extern S16 cmUnpkSztAudEvnt ( SztAudEvnt *audEvnt, Buffer *mBuf);



extern S16 cmPkSztAbortS1Req (Pst *pst, SpId spId, SztAbortS1 *abortS1);
extern S16 cmPkSztAbortS1Cfm (Pst *pst, SuId suId, SztAbortS1 *abortS1);
extern S16 cmUnpkS1apPdu (S1apPdu *param,Mem *sMem,Buffer *mBuf);


extern S16 cmUnpkS1apPduIe (SztEncDecEvnt *param,Mem *sMem,Buffer *mBuf);

extern S16 cmUnpkSztBndReq (SztBndReq func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkSztUbndReq (SztUbndReq func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkSztBndCfm (SztBndCfm func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkSztStaInd (SztStatusInd func,Pst *pst,Buffer *mBuf);
extern S16 cmUnpkSztFlcInd (SztFlowControlInd func,Pst *pst,Buffer *mBuf);
extern S16 cmUnpkFlcStaInd (SztFlowControlInd func,Pst *pst,Buffer *mBuf);
extern S16 cmUnpkSztLclErrInd (SztErrorInd func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkSztUDatReq (SztUDatReq func, Pst *pst, Buffer *mBuf, Mem *sMem)


                                           ;
extern S16 cmUnpkSztUDatInd (SztUDatInd func, Pst *pst, Buffer *mBuf, Mem *sMem)


                                           ;
extern S16 cmUnpkSztConReq (SztConnReq func, Pst *pst, Buffer *mBuf, Mem *sMem)


                                           ;
extern S16 cmUnpkSztConInd (SztConnInd func, Pst *pst, Buffer *mBuf, Mem *sMem)


                                           ;
extern S16 cmUnpkSztConRsp (SztConnRsp func, Pst *pst, Buffer *mBuf, Mem *sMem)


                                           ;
extern S16 cmUnpkSztConCfm (SztConnCfm func, Pst *pst, Buffer *mBuf, Mem *sMem)


                                           ;
extern S16 cmUnpkSztRelReq (SztRelsReq func, Pst *pst, Buffer *mBuf, Mem *sMem)


                                           ;
extern S16 cmUnpkSztRelInd (SztRelsInd func, Pst *pst, Buffer *mBuf, Mem *sMem)


                                           ;
extern S16 cmUnpkSztRelRsp (SztRelsRsp func, Pst *pst, Buffer *mBuf, Mem *sMem)


                                           ;
extern S16 cmUnpkSztRelCfm (SztRelsCfm func, Pst *pst, Buffer *mBuf, Mem *sMem)


                                           ;
extern S16 cmUnpkSztDatReq (SztDatReq func, Pst *pst, Buffer *mBuf, Mem *sMem)


                                           ;
extern S16 cmUnpkSztDatInd (SztDatInd func, Pst *pst, Buffer *mBuf, Mem *sMem)


                                           ;
extern S16 cmUnpkSztEncDecReq (SztEncDecReq func, Pst *pst, Buffer *mBuf, Mem *sMem)


                                           ;
extern S16 cmUnpkSztEncDecCfm (SztEncDecCfm func, Pst *pst, Buffer *mBuf, Mem *sMem)


                                           ;
extern S16 cmUnpkSztAudReq (SztAudReq func, Pst *pst, Buffer *mBuf, Mem *sMem)


                                            ;
extern S16 cmUnpkSztAudCfm (SztAudCfm func, Pst *pst, Buffer *mBuf,Mem *sMem)
                                                         ;
extern S16 cmUnpkSztAbortS1Req (SztAbortS1Req func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkSztAbortS1Cfm (SztAbortS1Cfm func, Pst *pst, Buffer *mBuf);
extern S16 SzUiSztBndReq (Pst *pst, SuId suId, SpId spId);
extern S16 SzUiSztUbndReq (Pst *pst, SpId spId, Reason reason);
extern S16 SzUiSztBndCfm (Pst *pst, SuId suId, U8 status);
extern S16 SzUiSztStaInd (Pst *pst, SuId suId, SztStaInd *sztSta);

extern S16 SzUiSztFlcInd (Pst *pst, SuId suId, SztFlcInd *flcInd);
extern S16 SzUiSztErrInd (Pst *pst, SuId suId, SztLclErrInd *sztErrInd)
                                                              ;
extern S16 SzUiSztUDatReq (Pst *pst, SpId spId, SztUDatEvnt *uDatEvnt)
                                                            ;
extern S16 SzUiSztUDatInd (Pst *pst, SuId suId, SztUDatEvnt *uDatEvnt)
                                                            ;
extern S16 SzUiSztConReq (Pst *pst, SpId spId, SztConReq *conReq);
extern S16 SzUiSztConInd (Pst *pst, SuId suId, SztConInd *conInd);
extern S16 SzUiSztConRsp (Pst *pst, SpId spId, SztConRsp *conRsp);
extern S16 SzUiSztConCfm (Pst *pst, SuId suId, SztConCfm *conCfm);
extern S16 SzUiSztRelReq (Pst *pst, SpId spId, SztRelReq *relReq);
extern S16 SzUiSztRelInd (Pst *pst, SuId suId, SztRelInd *relInd);
extern S16 SzUiSztRelRsp (Pst *pst, SpId spId, SztRelRsp *relRsp);
extern S16 SzUiSztRelCfm (Pst *pst, SuId suId, SztRelCfm *relCfm);
extern S16 SzUiSztDatReq (Pst *pst, SpId spId, SztDatEvntReq *datEvnt)
                                                             ;
extern S16 SzUiSztDatInd (Pst *pst, SuId suId, SztDatEvntInd *datEvnt)
                                                             ;
extern S16 SzUiSztEncDecReq (Pst *pst, SpId spId, SztEncDecEvnt *sztEncDecEvnt)
                                                                   ;
extern S16 SzUiSztEncDecCfm (Pst *pst, SuId suId, SztEncDecEvnt *encDecEvnt, SztReqStatus *status)

                                                                         ;
extern S16 SzUiSztAudReq (Pst *pst, SpId spId, SztAudEvnt *audEvnt);
extern S16 SzUiSztAudCfm (Pst *pst, SuId suId, SztAudEvnt *audEvnt);



extern S16 SzUiSztAbortS1Req (Pst *pst, SpId spId, SztAbortS1 *abortS1);
extern S16 SzUiSztAbortS1Cfm (Pst *pst, SuId suId, SztAbortS1 *abortS1);
extern S16 UzLiSztBndReq (Pst *pst, SuId suId, SpId spId);
extern S16 UzLiSztUbndReq (Pst *pst, SpId spId, Reason reason);
extern S16 UzLiSztBndCfm (Pst *pst, SuId suId, U8 status);
extern S16 UzLiSztStaInd (Pst *pst, SuId suId, SztStaInd *sztSta);
extern S16 UzLiSztFlcInd (Pst *pst, SuId suId, SztFlcInd *flcInd);
extern S16 UzLiSztErrInd (Pst *pst, SuId suId, SztLclErrInd *lclErrInd)
                                                              ;
extern S16 UzLiSztUDatReq (Pst *pst, SpId spId, SztUDatEvnt *uDatEvnt)
                                                            ;
extern S16 UzLiSztUDatInd (Pst *pst, SuId suId, SztUDatEvnt *uDatEvnt)
                                                            ;
extern S16 UzLiSztConReq (Pst *pst, SpId spId, SztConReq *conReq);
extern S16 UzLiSztConInd (Pst *pst, SuId suId, SztConInd *conInd);
extern S16 UzLiSztConRsp (Pst *pst, SpId spId, SztConRsp *conRsp);
extern S16 UzLiSztConCfm (Pst *pst, SuId suId, SztConCfm *conCfm);
extern S16 UzLiSztRelReq (Pst *pst, SpId spId, SztRelReq *relReq);
extern S16 UzLiSztRelInd (Pst *pst, SuId suId, SztRelInd *relInd);
extern S16 UzLiSztRelRsp (Pst *pst, SpId spId, SztRelRsp *relRsp);
extern S16 UzLiSztRelCfm (Pst *pst, SuId suId, SztRelCfm *relCfm);
extern S16 UzLiSztDatReq (Pst *pst, SpId spId, SztDatEvntReq *datEvnt)
                                                             ;
extern S16 UzLiSztDatInd (Pst *pst, SuId suId, SztDatEvntInd *datEvnt)
                                                             ;
extern S16 UzLiSztEncDecReq (Pst *pst, SpId spId, SztEncDecEvnt *encDecEvnt)
                                                                ;
extern S16 UzLiSztEncDecCfm (Pst *pst, SuId suId, SztEncDecEvnt *encDecEvnt, SztReqStatus *status)

                                                           ;
extern S16 UzLiSztAudReq (Pst *pst, SpId spId, SztAudEvnt *audEvnt);
extern S16 UzLiSztAudCfm (Pst *pst, SuId suId, SztAudEvnt *audEvnt);


extern S16 UzLiSztAbortS1Cfm (Pst *pst, SuId suId, SztAbortS1 *abortS1);
extern S16 UzLiSztAbortS1Req (Pst *pst, SpId spId, SztAbortS1 *abortS1);





typedef enum enumCztCriticality
{
 CztCriticalityrejectEnum,
 CztCriticalityignoreEnum,
 CztCriticalitynotifyEnum
} EnumCztCriticality;
typedef TknU32 CztCriticality;


typedef enum enumCztPresence
{
 CztPresenceoptionalEnum,
 CztPresenceconditionalEnum,
 CztPresencemandatoryEnum
} EnumCztPresence;
typedef TknU32 CztPresence;


typedef TknU32 CztPrivIE_IDlocal;

typedef struct x2apPrivIE_ID
{
 TknU8 choice;
 union {
  CztPrivIE_IDlocal local;
 } val;
} CztPrivIE_ID;


typedef TknU32 CztProcedureCode;


typedef TknU32 CztProtIE_ID;


typedef enum enumCztTrgMsg
{
 CztTrgMsginitiating_messageEnum,
 CztTrgMsgsuccessful_outcomeEnum,
 CztTrgMsgunsuccessful_outcomeEnum
} EnumCztTrgMsg;
typedef TknU32 CztTrgMsg;


typedef TknStrBSXL CztABSInformFDDabs_pattern_info;

typedef enum enumCztABSInformFDDnumberOfCellSpecificAntennaPorts
{
 CztABSInformFDDnumberOfCellSpecificAntennaPortsoneEnum,
 CztABSInformFDDnumberOfCellSpecificAntennaPortstwoEnum,
 CztABSInformFDDnumberOfCellSpecificAntennaPortsfourEnum
} EnumCztABSInformFDDnumberOfCellSpecificAntennaPorts;
typedef TknU32 CztABSInformFDDnumberOfCellSpecificAntennaPorts;


typedef TknStrBSXL CztABSInformFDDmeasurement_subset;
typedef struct x2ap_ExtnABSInformFDD_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnABSInformFDD_ExtIEsCls;
typedef struct x2apProtExtnField_ABSInformFDD_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnABSInformFDD_ExtIEsCls extensionValue;
} CztProtExtnField_ABSInformFDD_ExtIEs;

typedef struct x2apProtExtnCont_ABSInformFDD_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_ABSInformFDD_ExtIEs *member;
}CztProtExtnCont_ABSInformFDD_ExtIEs;

typedef struct x2apABSInformFDD
{
 TknPres pres;
 CztABSInformFDDabs_pattern_info abs_pattern_info;
 CztABSInformFDDnumberOfCellSpecificAntennaPorts numberOfCellSpecificAntennaPorts;
 CztABSInformFDDmeasurement_subset measurement_subset;
 CztProtExtnCont_ABSInformFDD_ExtIEs iE_Extns;
} CztABSInformFDD;


typedef TknStrBSXL CztABSInformTDDabs_pattern_info;

typedef enum enumCztABSInformTDDnumberOfCellSpecificAntennaPorts
{
 CztABSInformTDDnumberOfCellSpecificAntennaPortsoneEnum,
 CztABSInformTDDnumberOfCellSpecificAntennaPortstwoEnum,
 CztABSInformTDDnumberOfCellSpecificAntennaPortsfourEnum
} EnumCztABSInformTDDnumberOfCellSpecificAntennaPorts;
typedef TknU32 CztABSInformTDDnumberOfCellSpecificAntennaPorts;


typedef TknStrBSXL CztABSInformTDDmeasurement_subset;
typedef struct x2ap_ExtnABSInformTDD_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnABSInformTDD_ExtIEsCls;
typedef struct x2apProtExtnField_ABSInformTDD_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnABSInformTDD_ExtIEsCls extensionValue;
} CztProtExtnField_ABSInformTDD_ExtIEs;

typedef struct x2apProtExtnCont_ABSInformTDD_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_ABSInformTDD_ExtIEs *member;
}CztProtExtnCont_ABSInformTDD_ExtIEs;

typedef struct x2apABSInformTDD
{
 TknPres pres;
 CztABSInformTDDabs_pattern_info abs_pattern_info;
 CztABSInformTDDnumberOfCellSpecificAntennaPorts numberOfCellSpecificAntennaPorts;
 CztABSInformTDDmeasurement_subset measurement_subset;
 CztProtExtnCont_ABSInformTDD_ExtIEs iE_Extns;
} CztABSInformTDD;

typedef struct x2apABSInform
{
 TknU8 choice;
 union {
  CztABSInformFDD fdd;
  CztABSInformTDD tdd;
 } val;
} CztABSInform;


typedef TknU32 CztDL_ABS_status;


typedef TknStrBSXL CztUsableABSInformFDDusable_abs_pattern_info;
typedef struct x2ap_ExtnUsableABSInformFDD_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnUsableABSInformFDD_ExtIEsCls;
typedef struct x2apProtExtnField_UsableABSInformFDD_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnUsableABSInformFDD_ExtIEsCls extensionValue;
} CztProtExtnField_UsableABSInformFDD_ExtIEs;

typedef struct x2apProtExtnCont_UsableABSInformFDD_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_UsableABSInformFDD_ExtIEs *member;
}CztProtExtnCont_UsableABSInformFDD_ExtIEs;

typedef struct x2apUsableABSInformFDD
{
 TknPres pres;
 CztUsableABSInformFDDusable_abs_pattern_info usable_abs_pattern_info;
 CztProtExtnCont_UsableABSInformFDD_ExtIEs iE_Extns;
} CztUsableABSInformFDD;


typedef TknStrBSXL CztUsableABSInformTDDusaable_abs_pattern_info;
typedef struct x2ap_ExtnUsableABSInformTDD_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnUsableABSInformTDD_ExtIEsCls;
typedef struct x2apProtExtnField_UsableABSInformTDD_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnUsableABSInformTDD_ExtIEsCls extensionValue;
} CztProtExtnField_UsableABSInformTDD_ExtIEs;

typedef struct x2apProtExtnCont_UsableABSInformTDD_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_UsableABSInformTDD_ExtIEs *member;
}CztProtExtnCont_UsableABSInformTDD_ExtIEs;

typedef struct x2apUsableABSInformTDD
{
 TknPres pres;
 CztUsableABSInformTDDusaable_abs_pattern_info usaable_abs_pattern_info;
 CztProtExtnCont_UsableABSInformTDD_ExtIEs iE_Extns;
} CztUsableABSInformTDD;

typedef struct x2apUsableABSInform
{
 TknU8 choice;
 union {
  CztUsableABSInformFDD fdd;
  CztUsableABSInformTDD tdd;
 } val;
} CztUsableABSInform;

typedef struct x2ap_ExtnABS_Status_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnABS_Status_ExtIEsCls;
typedef struct x2apProtExtnField_ABS_Status_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnABS_Status_ExtIEsCls extensionValue;
} CztProtExtnField_ABS_Status_ExtIEs;

typedef struct x2apProtExtnCont_ABS_Status_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_ABS_Status_ExtIEs *member;
}CztProtExtnCont_ABS_Status_ExtIEs;

typedef struct x2apABS_Status
{
 TknPres pres;
 CztDL_ABS_status dL_ABS_status;
 CztUsableABSInform usableABSInform;
 CztProtExtnCont_ABS_Status_ExtIEs iE_Extns;
} CztABS_Status;


typedef enum enumCztAdditionalSpecialSubframePatterns
{
 CztAdditionalSpecialSubframePatternsssp0Enum,
 CztAdditionalSpecialSubframePatternsssp1Enum,
 CztAdditionalSpecialSubframePatternsssp2Enum,
 CztAdditionalSpecialSubframePatternsssp3Enum,
 CztAdditionalSpecialSubframePatternsssp4Enum,
 CztAdditionalSpecialSubframePatternsssp5Enum,
 CztAdditionalSpecialSubframePatternsssp6Enum,
 CztAdditionalSpecialSubframePatternsssp7Enum,
 CztAdditionalSpecialSubframePatternsssp8Enum,
 CztAdditionalSpecialSubframePatternsssp9Enum
} EnumCztAdditionalSpecialSubframePatterns;
typedef TknU32 CztAdditionalSpecialSubframePatterns;


typedef enum enumCztCyclicPrefixDL
{
 CztCyclicPrefixDLnormalEnum,
 CztCyclicPrefixDLextendedEnum
} EnumCztCyclicPrefixDL;
typedef TknU32 CztCyclicPrefixDL;


typedef enum enumCztCyclicPrefixUL
{
 CztCyclicPrefixULnormalEnum,
 CztCyclicPrefixULextendedEnum
} EnumCztCyclicPrefixUL;
typedef TknU32 CztCyclicPrefixUL;

typedef struct x2ap_ExtnAdditionalSpecialSubframe_Info_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnAdditionalSpecialSubframe_Info_ExtIEsCls;
typedef struct x2apProtExtnField_AdditionalSpecialSubframe_Info_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnAdditionalSpecialSubframe_Info_ExtIEsCls extensionValue;
} CztProtExtnField_AdditionalSpecialSubframe_Info_ExtIEs;

typedef struct x2apProtExtnCont_AdditionalSpecialSubframe_Info_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_AdditionalSpecialSubframe_Info_ExtIEs *member;
}CztProtExtnCont_AdditionalSpecialSubframe_Info_ExtIEs;

typedef struct x2apAdditionalSpecialSubframe_Info
{
 TknPres pres;
 CztAdditionalSpecialSubframePatterns additionalspecialSubframePatterns;
 CztCyclicPrefixDL cyclicPrefixDL;
 CztCyclicPrefixUL cyclicPrefixUL;
 CztProtExtnCont_AdditionalSpecialSubframe_Info_ExtIEs iE_Extns;
} CztAdditionalSpecialSubframe_Info;


typedef TknStrBSXL CztKey_eNodeB_Star;

typedef TknU32 CztNextHopChainingCount;

typedef struct x2ap_ExtnAS_SecurInform_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnAS_SecurInform_ExtIEsCls;
typedef struct x2apProtExtnField_AS_SecurInform_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnAS_SecurInform_ExtIEsCls extensionValue;
} CztProtExtnField_AS_SecurInform_ExtIEs;

typedef struct x2apProtExtnCont_AS_SecurInform_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_AS_SecurInform_ExtIEs *member;
}CztProtExtnCont_AS_SecurInform_ExtIEs;

typedef struct x2apAS_SecurInform
{
 TknPres pres;
 CztKey_eNodeB_Star key_eNodeB_star;
 CztNextHopChainingCount nextHopChainingCount;
 CztProtExtnCont_AS_SecurInform_ExtIEs iE_Extns;
} CztAS_SecurInform;


typedef TknU32 CztPriorityLvl;


typedef enum enumCztPre_emptionCapblty
{
 CztPre_emptionCapbltyshall_not_trigger_pre_emptionEnum,
 CztPre_emptionCapbltymay_trigger_pre_emptionEnum
} EnumCztPre_emptionCapblty;
typedef TknU32 CztPre_emptionCapblty;


typedef enum enumCztPre_emptionVulnerability
{
 CztPre_emptionVulnerabilitynot_pre_emptableEnum,
 CztPre_emptionVulnerabilitypre_emptableEnum
} EnumCztPre_emptionVulnerability;
typedef TknU32 CztPre_emptionVulnerability;

typedef struct x2ap_ExtnAllocnAndRetentionPriority_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnAllocnAndRetentionPriority_ExtIEsCls;
typedef struct x2apProtExtnField_AllocnAndRetentionPriority_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnAllocnAndRetentionPriority_ExtIEsCls extensionValue;
} CztProtExtnField_AllocnAndRetentionPriority_ExtIEs;

typedef struct x2apProtExtnCont_AllocnAndRetentionPriority_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_AllocnAndRetentionPriority_ExtIEs *member;
}CztProtExtnCont_AllocnAndRetentionPriority_ExtIEs;

typedef struct x2apAllocnAndRetentionPriority
{
 TknPres pres;
 CztPriorityLvl priorityLvl;
 CztPre_emptionCapblty pre_emptionCapblty;
 CztPre_emptionVulnerability pre_emptionVulnerability;
 CztProtExtnCont_AllocnAndRetentionPriority_ExtIEs iE_Extns;
} CztAllocnAndRetentionPriority;


typedef TknStrOSXL CztPLMN_Identity;

typedef TknBStr32 CztEUTRANCellIdentifier;
typedef struct x2ap_ExtnECGI_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnECGI_ExtIEsCls;
typedef struct x2apProtExtnField_ECGI_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnECGI_ExtIEsCls extensionValue;
} CztProtExtnField_ECGI_ExtIEs;

typedef struct x2apProtExtnCont_ECGI_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_ECGI_ExtIEs *member;
}CztProtExtnCont_ECGI_ExtIEs;

typedef struct x2apECGI
{
 TknPres pres;
 CztPLMN_Identity pLMN_Identity;
 CztEUTRANCellIdentifier eUTRANcellIdentifier;
 CztProtExtnCont_ECGI_ExtIEs iE_Extns;
} CztECGI;

typedef struct x2apCellIdLstforMDT
{
 TknU16 noComp;
 CztECGI *member;
}CztCellIdLstforMDT;

typedef struct x2ap_ExtnCellBasedMDT_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnCellBasedMDT_ExtIEsCls;
typedef struct x2apProtExtnField_CellBasedMDT_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnCellBasedMDT_ExtIEsCls extensionValue;
} CztProtExtnField_CellBasedMDT_ExtIEs;

typedef struct x2apProtExtnCont_CellBasedMDT_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_CellBasedMDT_ExtIEs *member;
}CztProtExtnCont_CellBasedMDT_ExtIEs;

typedef struct x2apCellBasedMDT
{
 TknPres pres;
 CztCellIdLstforMDT cellIdLstforMDT;
 CztProtExtnCont_CellBasedMDT_ExtIEs iE_Extns;
} CztCellBasedMDT;


typedef TknStr4 CztTAC;
typedef struct x2apTALstforMDT
{
 TknU16 noComp;
 CztTAC *member;
}CztTALstforMDT;

typedef struct x2ap_ExtnTABasedMDT_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnTABasedMDT_ExtIEsCls;
typedef struct x2apProtExtnField_TABasedMDT_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnTABasedMDT_ExtIEsCls extensionValue;
} CztProtExtnField_TABasedMDT_ExtIEs;

typedef struct x2apProtExtnCont_TABasedMDT_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_TABasedMDT_ExtIEs *member;
}CztProtExtnCont_TABasedMDT_ExtIEs;

typedef struct x2apTABasedMDT
{
 TknPres pres;
 CztTALstforMDT tALstforMDT;
 CztProtExtnCont_TABasedMDT_ExtIEs iE_Extns;
} CztTABasedMDT;

typedef struct x2ap_ExtnTAI_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnTAI_Item_ExtIEsCls;
typedef struct x2apProtExtnField_TAI_Item_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnTAI_Item_ExtIEsCls extensionValue;
} CztProtExtnField_TAI_Item_ExtIEs;

typedef struct x2apProtExtnCont_TAI_Item_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_TAI_Item_ExtIEs *member;
}CztProtExtnCont_TAI_Item_ExtIEs;

typedef struct x2apTAI_Item
{
 TknPres pres;
 CztTAC tAC;
 CztPLMN_Identity pLMN_Identity;
 CztProtExtnCont_TAI_Item_ExtIEs iE_Extns;
} CztTAI_Item;

typedef struct x2apTAILstforMDT
{
 TknU16 noComp;
 CztTAI_Item *member;
}CztTAILstforMDT;

typedef struct x2ap_ExtnTAIBasedMDT_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnTAIBasedMDT_ExtIEsCls;
typedef struct x2apProtExtnField_TAIBasedMDT_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnTAIBasedMDT_ExtIEsCls extensionValue;
} CztProtExtnField_TAIBasedMDT_ExtIEs;

typedef struct x2apProtExtnCont_TAIBasedMDT_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_TAIBasedMDT_ExtIEs *member;
}CztProtExtnCont_TAIBasedMDT_ExtIEs;

typedef struct x2apTAIBasedMDT
{
 TknPres pres;
 CztTAILstforMDT tAILstforMDT;
 CztProtExtnCont_TAIBasedMDT_ExtIEs iE_Extns;
} CztTAIBasedMDT;

typedef struct x2apAreaScopeOfMDT
{
 TknU8 choice;
 union {
  CztCellBasedMDT cellBased;
  CztTABasedMDT tABased;
  CztTAIBasedMDT tAIBased;
 } val;
} CztAreaScopeOfMDT;


typedef TknStrOSXL CztBitRate;

typedef struct x2apBroadcastPLMNs_Item
{
 TknU16 noComp;
 CztPLMN_Identity *member;
}CztBroadcastPLMNs_Item;


typedef TknU32 CztCapacityValue;


typedef TknU32 CztCellCapacityClassValue;


typedef enum enumCztCauseRadioNw
{
 CztCauseRadioNwhandover_desirable_for_radio_reasonsEnum,
 CztCauseRadioNwtime_critical_handoverEnum,
 CztCauseRadioNwresource_optimisation_handoverEnum,
 CztCauseRadioNwreduce_load_in_serving_cellEnum,
 CztCauseRadioNwpartial_handoverEnum,
 CztCauseRadioNwunknown_new_eNB_UE_X2AP_IDEnum,
 CztCauseRadioNwunknown_old_eNB_UE_X2AP_IDEnum,
 CztCauseRadioNwunknown_pair_of_UE_X2AP_IDEnum,
 CztCauseRadioNwho_target_not_allowedEnum,
 CztCauseRadioNwtx2relocoverall_expiryEnum,
 CztCauseRadioNwtrelocprep_expiryEnum,
 CztCauseRadioNwcell_not_availableEnum,
 CztCauseRadioNwno_radio_resources_available_in_target_cellEnum,
 CztCauseRadioNwinvalid_MME_GroupIDEnum,
 CztCauseRadioNwunknown_MME_CodeEnum,
 CztCauseRadioNwencryption_and_or_integrity_protection_algorithms_not_supportedEnum,
 CztCauseRadioNwreportCharacteristicsEmptyEnum,
 CztCauseRadioNwnoReportPeriodicityEnum,
 CztCauseRadioNwexistingMeasurementIDEnum,
 CztCauseRadioNwunknown_eNB_Measurement_IDEnum,
 CztCauseRadioNwmeasurement_temporarily_not_availableEnum,
 CztCauseRadioNwunspecifiedEnum,
 CztCauseRadioNwload_balancingEnum,
 CztCauseRadioNwhandover_optimisationEnum,
 CztCauseRadioNwvalue_out_of_allowed_rangeEnum,
 CztCauseRadioNwmultiple_E_RAB_ID_instancesEnum,
 CztCauseRadioNwswitch_off_ongoingEnum,
 CztCauseRadioNwnot_supported_QCI_valueEnum,
 CztCauseRadioNwmeasurement_not_supported_for_the_objectEnum
} EnumCztCauseRadioNw;
typedef TknU32 CztCauseRadioNw;


typedef enum enumCztCauseTport
{
 CztCauseTporttransport_resource_unavailableEnum,
 CztCauseTportunspecifiedEnum
} EnumCztCauseTport;
typedef TknU32 CztCauseTport;


typedef enum enumCztCauseProt
{
 CztCauseProttransfer_syntax_errorEnum,
 CztCauseProtabstract_syntax_error_rejectEnum,
 CztCauseProtabstract_syntax_error_ignore_and_notifyEnum,
 CztCauseProtmessage_not_compatible_with_receiver_stateEnum,
 CztCauseProtsemantic_errorEnum,
 CztCauseProtunspecifiedEnum,
 CztCauseProtabstract_syntax_error_falsely_constructed_messageEnum
} EnumCztCauseProt;
typedef TknU32 CztCauseProt;


typedef enum enumCztCauseMisc
{
 CztCauseMisccontrol_processing_overloadEnum,
 CztCauseMischardware_failureEnum,
 CztCauseMiscom_interventionEnum,
 CztCauseMiscnot_enough_user_plane_processing_resourcesEnum,
 CztCauseMiscunspecifiedEnum
} EnumCztCauseMisc;
typedef TknU32 CztCauseMisc;

typedef struct x2apCause
{
 TknU8 choice;
 union {
  CztCauseRadioNw radioNw;
  CztCauseTport transport;
  CztCauseProt protocol;
  CztCauseMisc misc;
 } val;
} CztCause;


typedef enum enumCztCell_Size
{
 CztCell_SizeverysmallEnum,
 CztCell_SizesmallEnum,
 CztCell_SizemediumEnum,
 CztCell_SizelargeEnum
} EnumCztCell_Size;
typedef TknU32 CztCell_Size;

typedef struct x2ap_ExtnCellTyp_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnCellTyp_ExtIEsCls;
typedef struct x2apProtExtnField_CellTyp_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnCellTyp_ExtIEsCls extensionValue;
} CztProtExtnField_CellTyp_ExtIEs;

typedef struct x2apProtExtnCont_CellTyp_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_CellTyp_ExtIEs *member;
}CztProtExtnCont_CellTyp_ExtIEs;

typedef struct x2apCellTyp
{
 TknPres pres;
 CztCell_Size cell_Size;
 CztProtExtnCont_CellTyp_ExtIEs iE_Extns;
} CztCellTyp;

typedef struct x2ap_ExtnCompositeAvailableCapacity_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnCompositeAvailableCapacity_ExtIEsCls;
typedef struct x2apProtExtnField_CompositeAvailableCapacity_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnCompositeAvailableCapacity_ExtIEsCls extensionValue;
} CztProtExtnField_CompositeAvailableCapacity_ExtIEs;

typedef struct x2apProtExtnCont_CompositeAvailableCapacity_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_CompositeAvailableCapacity_ExtIEs *member;
}CztProtExtnCont_CompositeAvailableCapacity_ExtIEs;

typedef struct x2apCompositeAvailableCapacity
{
 TknPres pres;
 CztCellCapacityClassValue cellCapacityClassValue;
 CztCapacityValue capacityValue;
 CztProtExtnCont_CompositeAvailableCapacity_ExtIEs iE_Extns;
} CztCompositeAvailableCapacity;

typedef struct x2ap_ExtnCompositeAvailableCapacityGroup_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnCompositeAvailableCapacityGroup_ExtIEsCls;
typedef struct x2apProtExtnField_CompositeAvailableCapacityGroup_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnCompositeAvailableCapacityGroup_ExtIEsCls extensionValue;
} CztProtExtnField_CompositeAvailableCapacityGroup_ExtIEs;

typedef struct x2apProtExtnCont_CompositeAvailableCapacityGroup_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_CompositeAvailableCapacityGroup_ExtIEs *member;
}CztProtExtnCont_CompositeAvailableCapacityGroup_ExtIEs;

typedef struct x2apCompositeAvailableCapacityGroup
{
 TknPres pres;
 CztCompositeAvailableCapacity dL_CompositeAvailableCapacity;
 CztCompositeAvailableCapacity uL_CompositeAvailableCapacity;
 CztProtExtnCont_CompositeAvailableCapacityGroup_ExtIEs iE_Extns;
} CztCompositeAvailableCapacityGroup;


typedef TknU32 CztPDCP_SN;


typedef TknU32 CztHFN;

typedef struct x2ap_ExtnCOUNTvalue_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnCOUNTvalue_ExtIEsCls;
typedef struct x2apProtExtnField_COUNTvalue_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnCOUNTvalue_ExtIEsCls extensionValue;
} CztProtExtnField_COUNTvalue_ExtIEs;

typedef struct x2apProtExtnCont_COUNTvalue_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_COUNTvalue_ExtIEs *member;
}CztProtExtnCont_COUNTvalue_ExtIEs;

typedef struct x2apCOUNTvalue
{
 TknPres pres;
 CztPDCP_SN pDCP_SN;
 CztHFN hFN;
 CztProtExtnCont_COUNTvalue_ExtIEs iE_Extns;
} CztCOUNTvalue;


typedef TknU32 CztPDCP_SNExtended;


typedef TknU32 CztHFNMdfd;

typedef struct x2ap_ExtnCOUNTValueExtended_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnCOUNTValueExtended_ExtIEsCls;
typedef struct x2apProtExtnField_COUNTValueExtended_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnCOUNTValueExtended_ExtIEsCls extensionValue;
} CztProtExtnField_COUNTValueExtended_ExtIEs;

typedef struct x2apProtExtnCont_COUNTValueExtended_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_COUNTValueExtended_ExtIEs *member;
}CztProtExtnCont_COUNTValueExtended_ExtIEs;

typedef struct x2apCOUNTValueExtended
{
 TknPres pres;
 CztPDCP_SNExtended pDCP_SNExtended;
 CztHFNMdfd hFNMdfd;
 CztProtExtnCont_COUNTValueExtended_ExtIEs iE_Extns;
} CztCOUNTValueExtended;


typedef enum enumCztTypOfErr
{
 CztTypOfErrnot_understoodEnum,
 CztTypOfErrmissingEnum
} EnumCztTypOfErr;
typedef TknU32 CztTypOfErr;

typedef struct x2ap_ExtnCriticalityDiag_IE_Lst_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnCriticalityDiag_IE_Lst_ExtIEsCls;
typedef struct x2apProtExtnField_CriticalityDiag_IE_Lst_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnCriticalityDiag_IE_Lst_ExtIEsCls extensionValue;
} CztProtExtnField_CriticalityDiag_IE_Lst_ExtIEs;

typedef struct x2apProtExtnCont_CriticalityDiag_IE_Lst_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_CriticalityDiag_IE_Lst_ExtIEs *member;
}CztProtExtnCont_CriticalityDiag_IE_Lst_ExtIEs;

typedef struct x2apCriticalityDiag_IE_LstMember
{
 TknPres pres;
 CztCriticality iECriticality;
 CztProtIE_ID iE_ID;
 CztTypOfErr typeOfErr;
 CztProtExtnCont_CriticalityDiag_IE_Lst_ExtIEs iE_Extns;
} CztCriticalityDiag_IE_LstMember;

typedef struct x2apCriticalityDiag_IE_Lst
{
 TknU16 noComp;
 CztCriticalityDiag_IE_LstMember *member;
}CztCriticalityDiag_IE_Lst;

typedef struct x2ap_ExtnCriticalityDiag_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnCriticalityDiag_ExtIEsCls;
typedef struct x2apProtExtnField_CriticalityDiag_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnCriticalityDiag_ExtIEsCls extensionValue;
} CztProtExtnField_CriticalityDiag_ExtIEs;

typedef struct x2apProtExtnCont_CriticalityDiag_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_CriticalityDiag_ExtIEs *member;
}CztProtExtnCont_CriticalityDiag_ExtIEs;

typedef struct x2apCriticalityDiag
{
 TknPres pres;
 CztProcedureCode procedureCode;
 CztTrgMsg triggeringMsg;
 CztCriticality procedureCriticality;
 CztCriticalityDiag_IE_Lst iEsCriticalityDiag;
 CztProtExtnCont_CriticalityDiag_ExtIEs iE_Extns;
} CztCriticalityDiag;


typedef TknBStr32 CztCRNTI;

typedef enum enumCztCSGMembershipStatus
{
 CztCSGMembershipStatusmemberEnum,
 CztCSGMembershipStatusnot_memberEnum
} EnumCztCSGMembershipStatus;
typedef TknU32 CztCSGMembershipStatus;


typedef TknBStr32 CztCSG_Id;

typedef enum enumCztDeactivationInd
{
 CztDeactivationInddeactivatedEnum
} EnumCztDeactivationInd;
typedef TknU32 CztDeactivationInd;


typedef enum enumCztDL_Fwding
{
 CztDL_FwdingdL_forwardingProposedEnum
} EnumCztDL_Fwding;
typedef TknU32 CztDL_Fwding;


typedef TknU32 CztDL_GBR_PRB_usage;


typedef TknU32 CztDL_non_GBR_PRB_usage;


typedef TknU32 CztDL_Total_PRB_usage;


typedef TknU32 CztEARFCN;


typedef TknU32 CztEARFCNExtn;


typedef enum enumCztTransmission_Bandwidth
{
 CztTransmission_Bandwidthbw6Enum,
 CztTransmission_Bandwidthbw15Enum,
 CztTransmission_Bandwidthbw25Enum,
 CztTransmission_Bandwidthbw50Enum,
 CztTransmission_Bandwidthbw75Enum,
 CztTransmission_Bandwidthbw100Enum
} EnumCztTransmission_Bandwidth;
typedef TknU32 CztTransmission_Bandwidth;

typedef struct x2ap_ExtnFDD_Info_ExtIEsCls{
 union {
  CztEARFCNExtn cztid_UL_EARFCNExtn;
  CztEARFCNExtn cztid_DL_EARFCNExtn;
 } u;
} Czt_ExtnFDD_Info_ExtIEsCls;
typedef struct x2apProtExtnField_FDD_Info_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnFDD_Info_ExtIEsCls extensionValue;
} CztProtExtnField_FDD_Info_ExtIEs;

typedef struct x2apProtExtnCont_FDD_Info_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_FDD_Info_ExtIEs *member;
}CztProtExtnCont_FDD_Info_ExtIEs;

typedef struct x2apFDD_Info
{
 TknPres pres;
 CztEARFCN uL_EARFCN;
 CztEARFCN dL_EARFCN;
 CztTransmission_Bandwidth uL_Transmission_Bandwidth;
 CztTransmission_Bandwidth dL_Transmission_Bandwidth;
 CztProtExtnCont_FDD_Info_ExtIEs iE_Extns;
} CztFDD_Info;


typedef enum enumCztSubframeAssignment
{
 CztSubframeAssignmentsa0Enum,
 CztSubframeAssignmentsa1Enum,
 CztSubframeAssignmentsa2Enum,
 CztSubframeAssignmentsa3Enum,
 CztSubframeAssignmentsa4Enum,
 CztSubframeAssignmentsa5Enum,
 CztSubframeAssignmentsa6Enum
} EnumCztSubframeAssignment;
typedef TknU32 CztSubframeAssignment;


typedef enum enumCztSpecialSubframePatterns
{
 CztSpecialSubframePatternsssp0Enum,
 CztSpecialSubframePatternsssp1Enum,
 CztSpecialSubframePatternsssp2Enum,
 CztSpecialSubframePatternsssp3Enum,
 CztSpecialSubframePatternsssp4Enum,
 CztSpecialSubframePatternsssp5Enum,
 CztSpecialSubframePatternsssp6Enum,
 CztSpecialSubframePatternsssp7Enum,
 CztSpecialSubframePatternsssp8Enum
} EnumCztSpecialSubframePatterns;
typedef TknU32 CztSpecialSubframePatterns;

typedef struct x2ap_ExtnSpecialSubframe_Info_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnSpecialSubframe_Info_ExtIEsCls;
typedef struct x2apProtExtnField_SpecialSubframe_Info_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnSpecialSubframe_Info_ExtIEsCls extensionValue;
} CztProtExtnField_SpecialSubframe_Info_ExtIEs;

typedef struct x2apProtExtnCont_SpecialSubframe_Info_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_SpecialSubframe_Info_ExtIEs *member;
}CztProtExtnCont_SpecialSubframe_Info_ExtIEs;

typedef struct x2apSpecialSubframe_Info
{
 TknPres pres;
 CztSpecialSubframePatterns specialSubframePatterns;
 CztCyclicPrefixDL cyclicPrefixDL;
 CztCyclicPrefixUL cyclicPrefixUL;
 CztProtExtnCont_SpecialSubframe_Info_ExtIEs iE_Extns;
} CztSpecialSubframe_Info;

typedef struct x2ap_ExtnTDD_Info_ExtIEsCls{
 union {
  CztAdditionalSpecialSubframe_Info cztAdditionalSpecialSubframe_Info;
  CztEARFCNExtn cztEARFCNExtn;
 } u;
} Czt_ExtnTDD_Info_ExtIEsCls;
typedef struct x2apProtExtnField_TDD_Info_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnTDD_Info_ExtIEsCls extensionValue;
} CztProtExtnField_TDD_Info_ExtIEs;

typedef struct x2apProtExtnCont_TDD_Info_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_TDD_Info_ExtIEs *member;
}CztProtExtnCont_TDD_Info_ExtIEs;

typedef struct x2apTDD_Info
{
 TknPres pres;
 CztEARFCN eARFCN;
 CztTransmission_Bandwidth transmission_Bandwidth;
 CztSubframeAssignment subframeAssignment;
 CztSpecialSubframe_Info specialSubframe_Info;
 CztProtExtnCont_TDD_Info_ExtIEs iE_Extns;
} CztTDD_Info;

typedef struct x2apEUTRA_Mode_Info
{
 TknU8 choice;
 union {
  CztFDD_Info fDD;
  CztTDD_Info tDD;
 } val;
} CztEUTRA_Mode_Info;


typedef TknBStr32 CztENB_IDmacro_eNB_ID;

typedef TknBStr32 CztENB_IDhome_eNB_ID;
typedef struct x2apENB_ID
{
 TknU8 choice;
 union {
  CztENB_IDmacro_eNB_ID macro_eNB_ID;
  CztENB_IDhome_eNB_ID home_eNB_ID;
 } val;
} CztENB_ID;


typedef TknBStr32 CztEncryptionAlgorithms;
typedef struct x2apEPLMNs
{
 TknU16 noComp;
 CztPLMN_Identity *member;
}CztEPLMNs;


typedef TknU32 CztE_RAB_ID;


typedef TknU32 CztQCI;

typedef struct x2ap_ExtnGBR_QosInform_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnGBR_QosInform_ExtIEsCls;
typedef struct x2apProtExtnField_GBR_QosInform_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnGBR_QosInform_ExtIEsCls extensionValue;
} CztProtExtnField_GBR_QosInform_ExtIEs;

typedef struct x2apProtExtnCont_GBR_QosInform_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_GBR_QosInform_ExtIEs *member;
}CztProtExtnCont_GBR_QosInform_ExtIEs;

typedef struct x2apGBR_QosInform
{
 TknPres pres;
 CztBitRate e_RAB_MaxBitrateDL;
 CztBitRate e_RAB_MaxBitrateUL;
 CztBitRate e_RAB_GuaranteedBitrateDL;
 CztBitRate e_RAB_GuaranteedBitrateUL;
 CztProtExtnCont_GBR_QosInform_ExtIEs iE_Extns;
} CztGBR_QosInform;

typedef struct x2ap_ExtnE_RAB_Lvl_QoS_Params_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnE_RAB_Lvl_QoS_Params_ExtIEsCls;
typedef struct x2apProtExtnField_E_RAB_Lvl_QoS_Params_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnE_RAB_Lvl_QoS_Params_ExtIEsCls extensionValue;
} CztProtExtnField_E_RAB_Lvl_QoS_Params_ExtIEs;

typedef struct x2apProtExtnCont_E_RAB_Lvl_QoS_Params_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_E_RAB_Lvl_QoS_Params_ExtIEs *member;
}CztProtExtnCont_E_RAB_Lvl_QoS_Params_ExtIEs;

typedef struct x2apE_RAB_Lvl_QoS_Params
{
 TknPres pres;
 CztQCI qCI;
 CztAllocnAndRetentionPriority allocationAndRetentionPriority;
 CztGBR_QosInform gbrQosInform;
 CztProtExtnCont_E_RAB_Lvl_QoS_Params_ExtIEs iE_Extns;
} CztE_RAB_Lvl_QoS_Params;

typedef struct x2ap_ExtnE_RAB_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnE_RAB_Item_ExtIEsCls;
typedef struct x2apProtExtnField_E_RAB_Item_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnE_RAB_Item_ExtIEsCls extensionValue;
} CztProtExtnField_E_RAB_Item_ExtIEs;

typedef struct x2apProtExtnCont_E_RAB_Item_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_E_RAB_Item_ExtIEs *member;
}CztProtExtnCont_E_RAB_Item_ExtIEs;

typedef struct x2apE_RAB_Item
{
 TknPres pres;
 CztE_RAB_ID e_RAB_ID;
 CztCause cause;
 CztProtExtnCont_E_RAB_Item_ExtIEs iE_Extns;
} CztE_RAB_Item;

typedef struct x2ap_ValueE_RAB_ItemIEsCls{
 union {
  CztE_RAB_Item cztE_RAB_Item;
 } u;
} Czt_ValueE_RAB_ItemIEsCls;
typedef struct x2apProtIE_Field_E_RAB_ItemIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueE_RAB_ItemIEsCls value;
} CztProtIE_Field_E_RAB_ItemIEs;


typedef CztProtIE_Field_E_RAB_ItemIEs CztProtIE_Single_Cont_E_RAB_ItemIEs;
typedef struct x2apE_RAB_Lst
{
 TknU16 noComp;
 CztProtIE_Single_Cont_E_RAB_ItemIEs *member;
}CztE_RAB_Lst;


typedef TknStrOSXL CztEUTRANTraceID;

typedef enum enumCztEventTyp
{
 CztEventTypchange_of_serving_cellEnum
} EnumCztEventTyp;
typedef TknU32 CztEventTyp;


typedef enum enumCztForbiddenInterRATs
{
 CztForbiddenInterRATsallEnum,
 CztForbiddenInterRATsgeranEnum,
 CztForbiddenInterRATsutranEnum,
 CztForbiddenInterRATscdma2000Enum,
 CztForbiddenInterRATsgeranandutranEnum,
 CztForbiddenInterRATscdma2000andutranEnum
} EnumCztForbiddenInterRATs;
typedef TknU32 CztForbiddenInterRATs;

typedef struct x2apForbiddenTACs
{
 TknU16 noComp;
 CztTAC *member;
}CztForbiddenTACs;

typedef struct x2ap_ExtnForbiddenTAs_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnForbiddenTAs_Item_ExtIEsCls;
typedef struct x2apProtExtnField_ForbiddenTAs_Item_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnForbiddenTAs_Item_ExtIEsCls extensionValue;
} CztProtExtnField_ForbiddenTAs_Item_ExtIEs;

typedef struct x2apProtExtnCont_ForbiddenTAs_Item_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_ForbiddenTAs_Item_ExtIEs *member;
}CztProtExtnCont_ForbiddenTAs_Item_ExtIEs;

typedef struct x2apForbiddenTAs_Item
{
 TknPres pres;
 CztPLMN_Identity pLMN_Identity;
 CztForbiddenTACs forbiddenTACs;
 CztProtExtnCont_ForbiddenTAs_Item_ExtIEs iE_Extns;
} CztForbiddenTAs_Item;

typedef struct x2apForbiddenTAs
{
 TknU16 noComp;
 CztForbiddenTAs_Item *member;
}CztForbiddenTAs;


typedef TknStr4 CztLAC;
typedef struct x2apForbiddenLACs
{
 TknU16 noComp;
 CztLAC *member;
}CztForbiddenLACs;

typedef struct x2ap_ExtnForbiddenLAs_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnForbiddenLAs_Item_ExtIEsCls;
typedef struct x2apProtExtnField_ForbiddenLAs_Item_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnForbiddenLAs_Item_ExtIEsCls extensionValue;
} CztProtExtnField_ForbiddenLAs_Item_ExtIEs;

typedef struct x2apProtExtnCont_ForbiddenLAs_Item_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_ForbiddenLAs_Item_ExtIEs *member;
}CztProtExtnCont_ForbiddenLAs_Item_ExtIEs;

typedef struct x2apForbiddenLAs_Item
{
 TknPres pres;
 CztPLMN_Identity pLMN_Identity;
 CztForbiddenLACs forbiddenLACs;
 CztProtExtnCont_ForbiddenLAs_Item_ExtIEs iE_Extns;
} CztForbiddenLAs_Item;

typedef struct x2apForbiddenLAs
{
 TknU16 noComp;
 CztForbiddenLAs_Item *member;
}CztForbiddenLAs;


typedef TknBStr32 CztFourframes;

typedef TknU32 CztFreqBandIndicator;

typedef struct x2ap_ExtnGlobalENB_ID_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnGlobalENB_ID_ExtIEsCls;
typedef struct x2apProtExtnField_GlobalENB_ID_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnGlobalENB_ID_ExtIEsCls extensionValue;
} CztProtExtnField_GlobalENB_ID_ExtIEs;

typedef struct x2apProtExtnCont_GlobalENB_ID_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_GlobalENB_ID_ExtIEs *member;
}CztProtExtnCont_GlobalENB_ID_ExtIEs;

typedef struct x2apGlobalENB_ID
{
 TknPres pres;
 CztPLMN_Identity pLMN_Identity;
 CztENB_ID eNB_ID;
 CztProtExtnCont_GlobalENB_ID_ExtIEs iE_Extns;
} CztGlobalENB_ID;


typedef TknStrBSXL CztTportLyrAddr;

typedef TknStrOSXL CztGTP_TEI;
typedef struct x2ap_ExtnGTPtunnelEndpoint_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnGTPtunnelEndpoint_ExtIEsCls;
typedef struct x2apProtExtnField_GTPtunnelEndpoint_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnGTPtunnelEndpoint_ExtIEsCls extensionValue;
} CztProtExtnField_GTPtunnelEndpoint_ExtIEs;

typedef struct x2apProtExtnCont_GTPtunnelEndpoint_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_GTPtunnelEndpoint_ExtIEs *member;
}CztProtExtnCont_GTPtunnelEndpoint_ExtIEs;

typedef struct x2apGTPtunnelEndpoint
{
 TknPres pres;
 CztTportLyrAddr transportLyrAddr;
 CztGTP_TEI gTP_TEID;
 CztProtExtnCont_GTPtunnelEndpoint_ExtIEs iE_Extns;
} CztGTPtunnelEndpoint;


typedef TknStr4 CztMME_Group_ID;
typedef struct x2ap_ExtnGU_Group_ID_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnGU_Group_ID_ExtIEsCls;
typedef struct x2apProtExtnField_GU_Group_ID_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnGU_Group_ID_ExtIEsCls extensionValue;
} CztProtExtnField_GU_Group_ID_ExtIEs;

typedef struct x2apProtExtnCont_GU_Group_ID_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_GU_Group_ID_ExtIEs *member;
}CztProtExtnCont_GU_Group_ID_ExtIEs;

typedef struct x2apGU_Group_ID
{
 TknPres pres;
 CztPLMN_Identity pLMN_Identity;
 CztMME_Group_ID mME_Group_ID;
 CztProtExtnCont_GU_Group_ID_ExtIEs iE_Extns;
} CztGU_Group_ID;

typedef struct x2apGUGroupIDLst
{
 TknU16 noComp;
 CztGU_Group_ID *member;
}CztGUGroupIDLst;


typedef TknStr4 CztMME_Code;
typedef struct x2ap_ExtnGUMMEI_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnGUMMEI_ExtIEsCls;
typedef struct x2apProtExtnField_GUMMEI_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnGUMMEI_ExtIEsCls extensionValue;
} CztProtExtnField_GUMMEI_ExtIEs;

typedef struct x2apProtExtnCont_GUMMEI_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_GUMMEI_ExtIEs *member;
}CztProtExtnCont_GUMMEI_ExtIEs;

typedef struct x2apGUMMEI
{
 TknPres pres;
 CztGU_Group_ID gU_Group_ID;
 CztMME_Code mME_Code;
 CztProtExtnCont_GUMMEI_ExtIEs iE_Extns;
} CztGUMMEI;


typedef enum enumCztHovrReportTyp
{
 CztHovrReportTyphoTooEarlyEnum,
 CztHovrReportTyphoToWrongCellEnum,
 CztHovrReportTypinterRATpingpongEnum
} EnumCztHovrReportTyp;
typedef TknU32 CztHovrReportTyp;

typedef struct x2ap_ExtnHovrRestrnLst_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnHovrRestrnLst_ExtIEsCls;
typedef struct x2apProtExtnField_HovrRestrnLst_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnHovrRestrnLst_ExtIEsCls extensionValue;
} CztProtExtnField_HovrRestrnLst_ExtIEs;

typedef struct x2apProtExtnCont_HovrRestrnLst_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_HovrRestrnLst_ExtIEs *member;
}CztProtExtnCont_HovrRestrnLst_ExtIEs;

typedef struct x2apHovrRestrnLst
{
 TknPres pres;
 CztPLMN_Identity servingPLMN;
 CztEPLMNs equivalentPLMNs;
 CztForbiddenTAs forbiddenTAs;
 CztForbiddenLAs forbiddenLAs;
 CztForbiddenInterRATs forbiddenInterRATs;
 CztProtExtnCont_HovrRestrnLst_ExtIEs iE_Extns;
} CztHovrRestrnLst;


typedef enum enumCztLoadIndicator
{
 CztLoadIndicatorlowLoadEnum,
 CztLoadIndicatormediumLoadEnum,
 CztLoadIndicatorhighLoadEnum,
 CztLoadIndicatoroverLoadEnum
} EnumCztLoadIndicator;
typedef TknU32 CztLoadIndicator;

typedef struct x2ap_ExtnHWLoadIndicator_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnHWLoadIndicator_ExtIEsCls;
typedef struct x2apProtExtnField_HWLoadIndicator_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnHWLoadIndicator_ExtIEsCls extensionValue;
} CztProtExtnField_HWLoadIndicator_ExtIEs;

typedef struct x2apProtExtnCont_HWLoadIndicator_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_HWLoadIndicator_ExtIEs *member;
}CztProtExtnCont_HWLoadIndicator_ExtIEs;

typedef struct x2apHWLoadIndicator
{
 TknPres pres;
 CztLoadIndicator dLHWLoadIndicator;
 CztLoadIndicator uLHWLoadIndicator;
 CztProtExtnCont_HWLoadIndicator_ExtIEs iE_Extns;
} CztHWLoadIndicator;


typedef enum enumCztInvokeInd
{
 CztInvokeIndabs_informationEnum
} EnumCztInvokeInd;
typedef TknU32 CztInvokeInd;


typedef TknBStr32 CztIntegrityProtectionAlgorithms;

typedef TknBStr32 CztIntfsToTrace;

typedef TknU32 CztTime_UE_StayedInCell;


typedef TknU32 CztTime_UE_StayedInCell_EnhancedGranularity;

typedef struct x2ap_ExtnLastVisitedEUTRANCellInform_ExtIEsCls{
 union {
  CztTime_UE_StayedInCell_EnhancedGranularity cztTime_UE_StayedInCell_EnhancedGranularity;
  CztCause cztCause;
 } u;
} Czt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls;
typedef struct x2apProtExtnField_LastVisitedEUTRANCellInform_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls extensionValue;
} CztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs;

typedef struct x2apProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs *member;
}CztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs;

typedef struct x2apLastVisitedEUTRANCellInform
{
 TknPres pres;
 CztECGI global_Cell_ID;
 CztCellTyp cellTyp;
 CztTime_UE_StayedInCell time_UE_StayedInCell;
 CztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs iE_Extns;
} CztLastVisitedEUTRANCellInform;


typedef TknStrOSXL CztLastVisitedUTRANCellInform;
typedef struct x2apLastVisitedGERANCellInform
{
 TknU8 choice;
} CztLastVisitedGERANCellInform;

typedef struct x2apLastVisitedCell_Item
{
 TknU8 choice;
 union {
  CztLastVisitedEUTRANCellInform e_UTRAN_Cell;
  CztLastVisitedUTRANCellInform uTRAN_Cell;
  CztLastVisitedGERANCellInform gERAN_Cell;
 } val;
} CztLastVisitedCell_Item;


typedef enum enumCztLinks_to_log
{
 CztLinks_to_loguplinkEnum,
 CztLinks_to_logdownlinkEnum,
 CztLinks_to_logboth_uplink_and_downlinkEnum
} EnumCztLinks_to_log;
typedef TknU32 CztLinks_to_log;


typedef enum enumCztReportArea
{
 CztReportAreaecgiEnum
} EnumCztReportArea;
typedef TknU32 CztReportArea;

typedef struct x2ap_ExtnLocRprtngInform_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnLocRprtngInform_ExtIEsCls;
typedef struct x2apProtExtnField_LocRprtngInform_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnLocRprtngInform_ExtIEsCls extensionValue;
} CztProtExtnField_LocRprtngInform_ExtIEs;

typedef struct x2apProtExtnCont_LocRprtngInform_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_LocRprtngInform_ExtIEs *member;
}CztProtExtnCont_LocRprtngInform_ExtIEs;

typedef struct x2apLocRprtngInform
{
 TknPres pres;
 CztEventTyp eventTyp;
 CztReportArea reportArea;
 CztProtExtnCont_LocRprtngInform_ExtIEs iE_Extns;
} CztLocRprtngInform;


typedef enum enumCztM3period
{
 CztM3periodms100Enum,
 CztM3periodms1000Enum,
 CztM3periodms10000Enum
} EnumCztM3period;
typedef TknU32 CztM3period;

typedef struct x2ap_ExtnM3Config_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnM3Config_ExtIEsCls;
typedef struct x2apProtExtnField_M3Config_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnM3Config_ExtIEsCls extensionValue;
} CztProtExtnField_M3Config_ExtIEs;

typedef struct x2apProtExtnCont_M3Config_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_M3Config_ExtIEs *member;
}CztProtExtnCont_M3Config_ExtIEs;

typedef struct x2apM3Config
{
 TknPres pres;
 CztM3period m3period;
 CztProtExtnCont_M3Config_ExtIEs iE_Extns;
} CztM3Config;


typedef enum enumCztM4period
{
 CztM4periodms1024Enum,
 CztM4periodms2048Enum,
 CztM4periodms5120Enum,
 CztM4periodms10240Enum,
 CztM4periodmin1Enum
} EnumCztM4period;
typedef TknU32 CztM4period;

typedef struct x2ap_ExtnM4Config_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnM4Config_ExtIEsCls;
typedef struct x2apProtExtnField_M4Config_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnM4Config_ExtIEsCls extensionValue;
} CztProtExtnField_M4Config_ExtIEs;

typedef struct x2apProtExtnCont_M4Config_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_M4Config_ExtIEs *member;
}CztProtExtnCont_M4Config_ExtIEs;

typedef struct x2apM4Config
{
 TknPres pres;
 CztM4period m4period;
 CztLinks_to_log m4_links_to_log;
 CztProtExtnCont_M4Config_ExtIEs iE_Extns;
} CztM4Config;


typedef enum enumCztM5period
{
 CztM5periodms1024Enum,
 CztM5periodms2048Enum,
 CztM5periodms5120Enum,
 CztM5periodms10240Enum,
 CztM5periodmin1Enum
} EnumCztM5period;
typedef TknU32 CztM5period;

typedef struct x2ap_ExtnM5Config_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnM5Config_ExtIEsCls;
typedef struct x2apProtExtnField_M5Config_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnM5Config_ExtIEsCls extensionValue;
} CztProtExtnField_M5Config_ExtIEs;

typedef struct x2apProtExtnCont_M5Config_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_M5Config_ExtIEs *member;
}CztProtExtnCont_M5Config_ExtIEs;

typedef struct x2apM5Config
{
 TknPres pres;
 CztM5period m5period;
 CztLinks_to_log m5_links_to_log;
 CztProtExtnCont_M5Config_ExtIEs iE_Extns;
} CztM5Config;


typedef enum enumCztMDT_Actvn
{
 CztMDT_Actvnimmediate_MDT_onlyEnum,
 CztMDT_Actvnimmediate_MDT_and_TraceEnum
} EnumCztMDT_Actvn;
typedef TknU32 CztMDT_Actvn;


typedef TknBStr32 CztMeasurementsToActivate;

typedef enum enumCztM1RprtngTrigger
{
 CztM1RprtngTriggerperiodicEnum,
 CztM1RprtngTriggera2eventtriggeredEnum,
 CztM1RprtngTriggera2eventtriggered_periodicEnum
} EnumCztM1RprtngTrigger;
typedef TknU32 CztM1RprtngTrigger;


typedef TknU32 CztThreshold_RSRP;


typedef TknU32 CztThreshold_RSRQ;

typedef struct x2apMeasurementThresholdA2
{
 TknU8 choice;
 union {
  CztThreshold_RSRP threshold_RSRP;
  CztThreshold_RSRQ threshold_RSRQ;
 } val;
} CztMeasurementThresholdA2;

typedef struct x2ap_ExtnM1ThresholdEventA2_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnM1ThresholdEventA2_ExtIEsCls;
typedef struct x2apProtExtnField_M1ThresholdEventA2_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnM1ThresholdEventA2_ExtIEsCls extensionValue;
} CztProtExtnField_M1ThresholdEventA2_ExtIEs;

typedef struct x2apProtExtnCont_M1ThresholdEventA2_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_M1ThresholdEventA2_ExtIEs *member;
}CztProtExtnCont_M1ThresholdEventA2_ExtIEs;

typedef struct x2apM1ThresholdEventA2
{
 TknPres pres;
 CztMeasurementThresholdA2 measurementThreshold;
 CztProtExtnCont_M1ThresholdEventA2_ExtIEs iE_Extns;
} CztM1ThresholdEventA2;


typedef enum enumCztReportIntervalMDT
{
 CztReportIntervalMDTms120Enum,
 CztReportIntervalMDTms240Enum,
 CztReportIntervalMDTms480Enum,
 CztReportIntervalMDTms640Enum,
 CztReportIntervalMDTms1024Enum,
 CztReportIntervalMDTms2048Enum,
 CztReportIntervalMDTms5120Enum,
 CztReportIntervalMDTms10240Enum,
 CztReportIntervalMDTmin1Enum,
 CztReportIntervalMDTmin6Enum,
 CztReportIntervalMDTmin12Enum,
 CztReportIntervalMDTmin30Enum,
 CztReportIntervalMDTmin60Enum
} EnumCztReportIntervalMDT;
typedef TknU32 CztReportIntervalMDT;


typedef enum enumCztReportAmountMDT
{
 CztReportAmountMDTr1Enum,
 CztReportAmountMDTr2Enum,
 CztReportAmountMDTr4Enum,
 CztReportAmountMDTr8Enum,
 CztReportAmountMDTr16Enum,
 CztReportAmountMDTr32Enum,
 CztReportAmountMDTr64Enum,
 CztReportAmountMDTrinfinityEnum
} EnumCztReportAmountMDT;
typedef TknU32 CztReportAmountMDT;

typedef struct x2ap_ExtnM1PeriodicRprtng_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnM1PeriodicRprtng_ExtIEsCls;
typedef struct x2apProtExtnField_M1PeriodicRprtng_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnM1PeriodicRprtng_ExtIEsCls extensionValue;
} CztProtExtnField_M1PeriodicRprtng_ExtIEs;

typedef struct x2apProtExtnCont_M1PeriodicRprtng_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_M1PeriodicRprtng_ExtIEs *member;
}CztProtExtnCont_M1PeriodicRprtng_ExtIEs;

typedef struct x2apM1PeriodicRprtng
{
 TknPres pres;
 CztReportIntervalMDT reportInterval;
 CztReportAmountMDT reportAmount;
 CztProtExtnCont_M1PeriodicRprtng_ExtIEs iE_Extns;
} CztM1PeriodicRprtng;


typedef TknBStr32 CztMDT_Loc_Info;
typedef struct x2apMDTPLMNLst
{
 TknU16 noComp;
 CztPLMN_Identity *member;
}CztMDTPLMNLst;

typedef struct x2ap_ExtnMDT_Config_ExtIEsCls{
 union {
  CztM3Config cztM3Config;
  CztM4Config cztM4Config;
  CztM5Config cztM5Config;
  CztMDT_Loc_Info cztMDT_Loc_Info;
  CztMDTPLMNLst cztMDTPLMNLst;
 } u;
} Czt_ExtnMDT_Config_ExtIEsCls;
typedef struct x2apProtExtnField_MDT_Config_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnMDT_Config_ExtIEsCls extensionValue;
} CztProtExtnField_MDT_Config_ExtIEs;

typedef struct x2apProtExtnCont_MDT_Config_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_MDT_Config_ExtIEs *member;
}CztProtExtnCont_MDT_Config_ExtIEs;

typedef struct x2apMDT_Config
{
 TknPres pres;
 CztMDT_Actvn mdt_Actvn;
 CztAreaScopeOfMDT areaScopeOfMDT;
 CztMeasurementsToActivate measurementsToActivate;
 CztM1RprtngTrigger m1reportingTrigger;
 CztM1ThresholdEventA2 m1thresholdeventA2;
 CztM1PeriodicRprtng m1periodicRprtng;
 CztProtExtnCont_MDT_Config_ExtIEs iE_Extns;
} CztMDT_Config;


typedef TknU32 CztMeasurement_ID;


typedef TknStr4 CztMBMS_Service_Area_Identity;
typedef struct x2apMBMS_Service_Area_Identity_Lst
{
 TknU16 noComp;
 CztMBMS_Service_Area_Identity *member;
}CztMBMS_Service_Area_Identity_Lst;


typedef enum enumCztRadioframeAllocnPeriod
{
 CztRadioframeAllocnPeriodn1Enum,
 CztRadioframeAllocnPeriodn2Enum,
 CztRadioframeAllocnPeriodn4Enum,
 CztRadioframeAllocnPeriodn8Enum,
 CztRadioframeAllocnPeriodn16Enum,
 CztRadioframeAllocnPeriodn32Enum
} EnumCztRadioframeAllocnPeriod;
typedef TknU32 CztRadioframeAllocnPeriod;


typedef TknU32 CztRadioframeAllocnOffset;


typedef TknBStr32 CztOneframe;
typedef struct x2apSubframeAllocn
{
 TknU8 choice;
 union {
  CztOneframe oneframe;
  CztFourframes fourframes;
 } val;
} CztSubframeAllocn;

typedef struct x2ap_ExtnMBSFN_Subframe_Info_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnMBSFN_Subframe_Info_ExtIEsCls;
typedef struct x2apProtExtnField_MBSFN_Subframe_Info_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnMBSFN_Subframe_Info_ExtIEsCls extensionValue;
} CztProtExtnField_MBSFN_Subframe_Info_ExtIEs;

typedef struct x2apProtExtnCont_MBSFN_Subframe_Info_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_MBSFN_Subframe_Info_ExtIEs *member;
}CztProtExtnCont_MBSFN_Subframe_Info_ExtIEs;

typedef struct x2apMBSFN_Subframe_Info
{
 TknPres pres;
 CztRadioframeAllocnPeriod radioframeAllocnPeriod;
 CztRadioframeAllocnOffset radioframeAllocnOffset;
 CztSubframeAllocn subframeAllocn;
 CztProtExtnCont_MBSFN_Subframe_Info_ExtIEs iE_Extns;
} CztMBSFN_Subframe_Info;

typedef struct x2apMBSFN_Subframe_Infolist
{
 TknU16 noComp;
 CztMBSFN_Subframe_Info *member;
}CztMBSFN_Subframe_Infolist;


typedef enum enumCztManagementBasedMDTallowed
{
 CztManagementBasedMDTallowedallowedEnum
} EnumCztManagementBasedMDTallowed;
typedef TknU32 CztManagementBasedMDTallowed;


typedef TknS32 CztMobilityParamsModificationRangehandoverTriggerChangeLowerLimit;


typedef TknS32 CztMobilityParamsModificationRangehandoverTriggerChangeUpperLimit;

typedef struct x2apMobilityParamsModificationRange
{
 TknPres pres;
 CztMobilityParamsModificationRangehandoverTriggerChangeLowerLimit handoverTriggerChangeLowerLimit;
 CztMobilityParamsModificationRangehandoverTriggerChangeUpperLimit handoverTriggerChangeUpperLimit;
} CztMobilityParamsModificationRange;


typedef TknS32 CztMobilityParamsInformhandoverTriggerChange;

typedef struct x2apMobilityParamsInform
{
 TknPres pres;
 CztMobilityParamsInformhandoverTriggerChange handoverTriggerChange;
} CztMobilityParamsInform;

typedef struct x2ap_ExtnBandInfo_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnBandInfo_ExtIEsCls;
typedef struct x2apProtExtnField_BandInfo_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnBandInfo_ExtIEsCls extensionValue;
} CztProtExtnField_BandInfo_ExtIEs;

typedef struct x2apProtExtnCont_BandInfo_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_BandInfo_ExtIEs *member;
}CztProtExtnCont_BandInfo_ExtIEs;

typedef struct x2apBandInfo
{
 TknPres pres;
 CztFreqBandIndicator freqBandIndicator;
 CztProtExtnCont_BandInfo_ExtIEs iE_Extns;
} CztBandInfo;

typedef struct x2apMultibandInfoLst
{
 TknU16 noComp;
 CztBandInfo *member;
}CztMultibandInfoLst;


typedef TknU32 CztPCI;

typedef struct x2ap_ExtnNeighbour_Inform_ExtIEsCls{
 union {
  CztTAC cztTAC;
  CztEARFCNExtn cztEARFCNExtn;
 } u;
} Czt_ExtnNeighbour_Inform_ExtIEsCls;
typedef struct x2apProtExtnField_Neighbour_Inform_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnNeighbour_Inform_ExtIEsCls extensionValue;
} CztProtExtnField_Neighbour_Inform_ExtIEs;

typedef struct x2apProtExtnCont_Neighbour_Inform_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_Neighbour_Inform_ExtIEs *member;
}CztProtExtnCont_Neighbour_Inform_ExtIEs;

typedef struct x2apNeighbour_InformMember
{
 TknPres pres;
 CztECGI eCGI;
 CztPCI pCI;
 CztEARFCN eARFCN;
 CztProtExtnCont_Neighbour_Inform_ExtIEs iE_Extns;
} CztNeighbour_InformMember;

typedef struct x2apNeighbour_Inform
{
 TknU16 noComp;
 CztNeighbour_InformMember *member;
}CztNeighbour_Inform;


typedef enum enumCztNumber_of_Antennaports
{
 CztNumber_of_Antennaportsan1Enum,
 CztNumber_of_Antennaportsan2Enum,
 CztNumber_of_Antennaportsan4Enum
} EnumCztNumber_of_Antennaports;
typedef TknU32 CztNumber_of_Antennaports;


typedef TknU32 CztPRACH_ConfigrootSequenceIdx;


typedef TknU32 CztPRACH_ConfigzeroCorrelationIdx;


typedef TknU8 CztPRACH_ConfighighSpeedFlag;


typedef TknU32 CztPRACH_Configprach_FreqOffset;


typedef TknU32 CztPRACH_Configprach_ConfigIdx;

typedef struct x2ap_ExtnPRACH_Config_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnPRACH_Config_ExtIEsCls;
typedef struct x2apProtExtnField_PRACH_Config_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnPRACH_Config_ExtIEsCls extensionValue;
} CztProtExtnField_PRACH_Config_ExtIEs;

typedef struct x2apProtExtnCont_PRACH_Config_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_PRACH_Config_ExtIEs *member;
}CztProtExtnCont_PRACH_Config_ExtIEs;

typedef struct x2apPRACH_Config
{
 TknPres pres;
 CztPRACH_ConfigrootSequenceIdx rootSequenceIdx;
 CztPRACH_ConfigzeroCorrelationIdx zeroCorrelationIdx;
 CztPRACH_ConfighighSpeedFlag highSpeedFlag;
 CztPRACH_Configprach_FreqOffset prach_FreqOffset;
 CztPRACH_Configprach_ConfigIdx prach_ConfigIdx;
 CztProtExtnCont_PRACH_Config_ExtIEs iE_Extns;
} CztPRACH_Config;


typedef TknU32 CztUL_GBR_PRB_usage;


typedef TknU32 CztUL_non_GBR_PRB_usage;


typedef TknU32 CztUL_Total_PRB_usage;

typedef struct x2ap_ExtnRadioResStatus_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnRadioResStatus_ExtIEsCls;
typedef struct x2apProtExtnField_RadioResStatus_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnRadioResStatus_ExtIEsCls extensionValue;
} CztProtExtnField_RadioResStatus_ExtIEs;

typedef struct x2apProtExtnCont_RadioResStatus_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_RadioResStatus_ExtIEs *member;
}CztProtExtnCont_RadioResStatus_ExtIEs;

typedef struct x2apRadioResStatus
{
 TknPres pres;
 CztDL_GBR_PRB_usage dL_GBR_PRB_usage;
 CztUL_GBR_PRB_usage uL_GBR_PRB_usage;
 CztDL_non_GBR_PRB_usage dL_non_GBR_PRB_usage;
 CztUL_non_GBR_PRB_usage uL_non_GBR_PRB_usage;
 CztDL_Total_PRB_usage dL_Total_PRB_usage;
 CztUL_Total_PRB_usage uL_Total_PRB_usage;
 CztProtExtnCont_RadioResStatus_ExtIEs iE_Extns;
} CztRadioResStatus;


typedef TknStrBSXL CztReceiveStatusofULPDCPSDUs;

typedef TknStrBSXL CztReceiveStatusOfULPDCPSDUsExtended;

typedef enum enumCztRegistration_Rqst
{
 CztRegistration_RqststartEnum,
 CztRegistration_RqststopEnum
} EnumCztRegistration_Rqst;
typedef TknU32 CztRegistration_Rqst;


typedef enum enumCztRNTP_Threshold
{
 CztRNTP_ThresholdminusInfinityEnum,
 CztRNTP_ThresholdminusElevenEnum,
 CztRNTP_ThresholdminusTenEnum,
 CztRNTP_ThresholdminusNineEnum,
 CztRNTP_ThresholdminusEightEnum,
 CztRNTP_ThresholdminusSevenEnum,
 CztRNTP_ThresholdminusSixEnum,
 CztRNTP_ThresholdminusFiveEnum,
 CztRNTP_ThresholdminusFourEnum,
 CztRNTP_ThresholdminusThreeEnum,
 CztRNTP_ThresholdminusTwoEnum,
 CztRNTP_ThresholdminusOneEnum,
 CztRNTP_ThresholdzeroEnum,
 CztRNTP_ThresholdoneEnum,
 CztRNTP_ThresholdtwoEnum,
 CztRNTP_ThresholdthreeEnum
} EnumCztRNTP_Threshold;
typedef TknU32 CztRNTP_Threshold;


typedef TknStrBSXL CztRelativeNarrowbandTxPowerrNTP_PerPRB;

typedef enum enumCztRelativeNarrowbandTxPowernumberOfCellSpecificAntennaPorts
{
 CztRelativeNarrowbandTxPowernumberOfCellSpecificAntennaPortsoneEnum,
 CztRelativeNarrowbandTxPowernumberOfCellSpecificAntennaPortstwoEnum,
 CztRelativeNarrowbandTxPowernumberOfCellSpecificAntennaPortsfourEnum
} EnumCztRelativeNarrowbandTxPowernumberOfCellSpecificAntennaPorts;
typedef TknU32 CztRelativeNarrowbandTxPowernumberOfCellSpecificAntennaPorts;


typedef TknU32 CztRelativeNarrowbandTxPowerp_B;


typedef TknU32 CztRelativeNarrowbandTxPowerpDCCH_InterferenceImpact;

typedef struct x2ap_ExtnRelativeNarrowbandTxPower_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnRelativeNarrowbandTxPower_ExtIEsCls;
typedef struct x2apProtExtnField_RelativeNarrowbandTxPower_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnRelativeNarrowbandTxPower_ExtIEsCls extensionValue;
} CztProtExtnField_RelativeNarrowbandTxPower_ExtIEs;

typedef struct x2apProtExtnCont_RelativeNarrowbandTxPower_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_RelativeNarrowbandTxPower_ExtIEs *member;
}CztProtExtnCont_RelativeNarrowbandTxPower_ExtIEs;

typedef struct x2apRelativeNarrowbandTxPower
{
 TknPres pres;
 CztRelativeNarrowbandTxPowerrNTP_PerPRB rNTP_PerPRB;
 CztRNTP_Threshold rNTP_Threshold;
 CztRelativeNarrowbandTxPowernumberOfCellSpecificAntennaPorts numberOfCellSpecificAntennaPorts;
 CztRelativeNarrowbandTxPowerp_B p_B;
 CztRelativeNarrowbandTxPowerpDCCH_InterferenceImpact pDCCH_InterferenceImpact;
 CztProtExtnCont_RelativeNarrowbandTxPower_ExtIEs iE_Extns;
} CztRelativeNarrowbandTxPower;


typedef TknBStr32 CztReportCharacteristics;

typedef TknStrOSXL CztRRC_Cntxt;

typedef enum enumCztRRCConnReestabIndicator
{
 CztRRCConnReestabIndicatorreconfigurationFailEnum,
 CztRRCConnReestabIndicatorhandoverFailEnum,
 CztRRCConnReestabIndicatorotherFailEnum
} EnumCztRRCConnReestabIndicator;
typedef TknU32 CztRRCConnReestabIndicator;


typedef enum enumCztRRCConnSetupIndicator
{
 CztRRCConnSetupIndicatorrrcConnSetupEnum
} EnumCztRRCConnSetupIndicator;
typedef TknU32 CztRRCConnSetupIndicator;

typedef struct x2ap_ExtnS1TNLLoadIndicator_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnS1TNLLoadIndicator_ExtIEsCls;
typedef struct x2apProtExtnField_S1TNLLoadIndicator_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnS1TNLLoadIndicator_ExtIEsCls extensionValue;
} CztProtExtnField_S1TNLLoadIndicator_ExtIEs;

typedef struct x2apProtExtnCont_S1TNLLoadIndicator_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_S1TNLLoadIndicator_ExtIEs *member;
}CztProtExtnCont_S1TNLLoadIndicator_ExtIEs;

typedef struct x2apS1TNLLoadIndicator
{
 TknPres pres;
 CztLoadIndicator dLS1TNLLoadIndicator;
 CztLoadIndicator uLS1TNLLoadIndicator;
 CztProtExtnCont_S1TNLLoadIndicator_ExtIEs iE_Extns;
} CztS1TNLLoadIndicator;

typedef struct x2ap_ExtnSrvdCell_Inform_ExtIEsCls{
 union {
  CztNumber_of_Antennaports cztNumber_of_Antennaports;
  CztPRACH_Config cztPRACH_Config;
  CztMBSFN_Subframe_Infolist cztMBSFN_Subframe_Infolist;
  CztCSG_Id cztCSG_Id;
  CztMBMS_Service_Area_Identity_Lst cztMBMS_Service_Area_Identity_Lst;
  CztMultibandInfoLst cztMultibandInfoLst;
 } u;
} Czt_ExtnSrvdCell_Inform_ExtIEsCls;
typedef struct x2apProtExtnField_SrvdCell_Inform_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnSrvdCell_Inform_ExtIEsCls extensionValue;
} CztProtExtnField_SrvdCell_Inform_ExtIEs;

typedef struct x2apProtExtnCont_SrvdCell_Inform_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_SrvdCell_Inform_ExtIEs *member;
}CztProtExtnCont_SrvdCell_Inform_ExtIEs;

typedef struct x2apSrvdCell_Inform
{
 TknPres pres;
 CztPCI pCI;
 CztECGI cellId;
 CztTAC tAC;
 CztBroadcastPLMNs_Item broadcastPLMNs;
 CztEUTRA_Mode_Info eUTRA_Mode_Info;
 CztProtExtnCont_SrvdCell_Inform_ExtIEs iE_Extns;
} CztSrvdCell_Inform;

typedef struct x2ap_ExtnSrvdCell_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnSrvdCell_ExtIEsCls;
typedef struct x2apProtExtnField_SrvdCell_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnSrvdCell_ExtIEsCls extensionValue;
} CztProtExtnField_SrvdCell_ExtIEs;

typedef struct x2apProtExtnCont_SrvdCell_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_SrvdCell_ExtIEs *member;
}CztProtExtnCont_SrvdCell_ExtIEs;

typedef struct x2apSrvdCellsMember
{
 TknPres pres;
 CztSrvdCell_Inform servedCellInfo;
 CztNeighbour_Inform neighbour_Info;
 CztProtExtnCont_SrvdCell_ExtIEs iE_Extns;
} CztSrvdCellsMember;

typedef struct x2apSrvdCells
{
 TknU16 noComp;
 CztSrvdCellsMember *member;
}CztSrvdCells;


typedef TknBStr32 CztShortMAC_I;

typedef enum enumCztSRVCCOperationPossible
{
 CztSRVCCOperationPossiblepossibleEnum
} EnumCztSRVCCOperationPossible;
typedef TknU32 CztSRVCCOperationPossible;


typedef TknU32 CztSubscriberProfileIDforRFP;


typedef TknStrOSXL CztTgetCellInUTRAN;

typedef TknStrOSXL CztTgeteNBtoSrc_eNBTprntCont;

typedef enum enumCztTimeToWait
{
 CztTimeToWaitv1sEnum,
 CztTimeToWaitv2sEnum,
 CztTimeToWaitv5sEnum,
 CztTimeToWaitv10sEnum,
 CztTimeToWaitv20sEnum,
 CztTimeToWaitv60sEnum
} EnumCztTimeToWait;
typedef TknU32 CztTimeToWait;


typedef enum enumCztTraceDepth
{
 CztTraceDepthminimumEnum,
 CztTraceDepthmediumEnum,
 CztTraceDepthmaximumEnum,
 CztTraceDepthminimumWithoutVendorSpecificExtnEnum,
 CztTraceDepthmediumWithoutVendorSpecificExtnEnum,
 CztTraceDepthmaximumWithoutVendorSpecificExtnEnum
} EnumCztTraceDepth;
typedef TknU32 CztTraceDepth;


typedef TknStrBSXL CztTraceCollectionEntityIPAddr;
typedef struct x2ap_ExtnTraceActvn_ExtIEsCls{
 union {
  CztMDT_Config cztMDT_Config;
 } u;
} Czt_ExtnTraceActvn_ExtIEsCls;
typedef struct x2apProtExtnField_TraceActvn_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnTraceActvn_ExtIEsCls extensionValue;
} CztProtExtnField_TraceActvn_ExtIEs;

typedef struct x2apProtExtnCont_TraceActvn_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_TraceActvn_ExtIEs *member;
}CztProtExtnCont_TraceActvn_ExtIEs;

typedef struct x2apTraceActvn
{
 TknPres pres;
 CztEUTRANTraceID eUTRANTraceID;
 CztIntfsToTrace interfacesToTrace;
 CztTraceDepth traceDepth;
 CztTraceCollectionEntityIPAddr traceCollectionEntityIPAddr;
 CztProtExtnCont_TraceActvn_ExtIEs iE_Extns;
} CztTraceActvn;

typedef struct x2apUE_HistoryInform
{
 TknU16 noComp;
 CztLastVisitedCell_Item *member;
}CztUE_HistoryInform;


typedef TknU32 CztUE_S1AP_ID;


typedef TknU32 CztUE_X2AP_ID;

typedef struct x2ap_ExtnUEAgg_MaxBitrate_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnUEAgg_MaxBitrate_ExtIEsCls;
typedef struct x2apProtExtnField_UEAgg_MaxBitrate_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnUEAgg_MaxBitrate_ExtIEsCls extensionValue;
} CztProtExtnField_UEAgg_MaxBitrate_ExtIEs;

typedef struct x2apProtExtnCont_UEAgg_MaxBitrate_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_UEAgg_MaxBitrate_ExtIEs *member;
}CztProtExtnCont_UEAgg_MaxBitrate_ExtIEs;

typedef struct x2apUEAggMaxBitRate
{
 TknPres pres;
 CztBitRate uEaggregateMaxBitRateDlnk;
 CztBitRate uEaggregateMaxBitRateUlnk;
 CztProtExtnCont_UEAgg_MaxBitrate_ExtIEs iE_Extns;
} CztUEAggMaxBitRate;

typedef struct x2ap_ExtnUESecurCapabilities_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnUESecurCapabilities_ExtIEsCls;
typedef struct x2apProtExtnField_UESecurCapabilities_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnUESecurCapabilities_ExtIEsCls extensionValue;
} CztProtExtnField_UESecurCapabilities_ExtIEs;

typedef struct x2apProtExtnCont_UESecurCapabilities_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_UESecurCapabilities_ExtIEs *member;
}CztProtExtnCont_UESecurCapabilities_ExtIEs;

typedef struct x2apUESecurCapabilities
{
 TknPres pres;
 CztEncryptionAlgorithms encryptionAlgorithms;
 CztIntegrityProtectionAlgorithms integrityProtectionAlgorithms;
 CztProtExtnCont_UESecurCapabilities_ExtIEs iE_Extns;
} CztUESecurCapabilities;


typedef enum enumCztUL_InterferenceOverloadInd_Item
{
 CztUL_InterferenceOverloadInd_Itemhigh_interferenceEnum,
 CztUL_InterferenceOverloadInd_Itemmedium_interferenceEnum,
 CztUL_InterferenceOverloadInd_Itemlow_interferenceEnum
} EnumCztUL_InterferenceOverloadInd_Item;
typedef TknU32 CztUL_InterferenceOverloadInd_Item;

typedef struct x2apUL_InterferenceOverloadInd
{
 TknU16 noComp;
 CztUL_InterferenceOverloadInd_Item *member;
}CztUL_InterferenceOverloadInd;


typedef TknStrBSXL CztUL_HighInterferenceInd;
typedef struct x2ap_ExtnUL_HighInterferenceIndInfo_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnUL_HighInterferenceIndInfo_Item_ExtIEsCls;
typedef struct x2apProtExtnField_UL_HighInterferenceIndInfo_Item_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnUL_HighInterferenceIndInfo_Item_ExtIEsCls extensionValue;
} CztProtExtnField_UL_HighInterferenceIndInfo_Item_ExtIEs;

typedef struct x2apProtExtnCont_UL_HighInterferenceIndInfo_Item_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_UL_HighInterferenceIndInfo_Item_ExtIEs *member;
}CztProtExtnCont_UL_HighInterferenceIndInfo_Item_ExtIEs;

typedef struct x2apUL_HighInterferenceIndInfo_Item
{
 TknPres pres;
 CztECGI target_Cell_ID;
 CztUL_HighInterferenceInd ul_interferenceindication;
 CztProtExtnCont_UL_HighInterferenceIndInfo_Item_ExtIEs iE_Extns;
} CztUL_HighInterferenceIndInfo_Item;

typedef struct x2apUL_HighInterferenceIndInfo
{
 TknU16 noComp;
 CztUL_HighInterferenceIndInfo_Item *member;
}CztUL_HighInterferenceIndInfo;


typedef TknStrOSXL CztUE_RLF_Report_Cont;
typedef struct x2ap_ExtnE_RABs_ToBeSetup_ItemExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnE_RABs_ToBeSetup_ItemExtIEsCls;
typedef struct x2apProtExtnField_E_RABs_ToBeSetup_ItemExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnE_RABs_ToBeSetup_ItemExtIEsCls extensionValue;
} CztProtExtnField_E_RABs_ToBeSetup_ItemExtIEs;

typedef struct x2apProtExtnCont_E_RABs_ToBeSetup_ItemExtIEs
{
 TknU16 noComp;
 CztProtExtnField_E_RABs_ToBeSetup_ItemExtIEs *member;
}CztProtExtnCont_E_RABs_ToBeSetup_ItemExtIEs;

typedef struct x2apE_RABs_ToBeSetup_Item
{
 TknPres pres;
 CztE_RAB_ID e_RAB_ID;
 CztE_RAB_Lvl_QoS_Params e_RAB_Lvl_QoS_Params;
 CztDL_Fwding dL_Fwding;
 CztGTPtunnelEndpoint uL_GTPtunnelEndpoint;
 CztProtExtnCont_E_RABs_ToBeSetup_ItemExtIEs iE_Extns;
} CztE_RABs_ToBeSetup_Item;

typedef struct x2ap_ValueE_RABs_ToBeSetup_ItemIEsCls{
 union {
  CztE_RABs_ToBeSetup_Item cztE_RABs_ToBeSetup_Item;
 } u;
} Czt_ValueE_RABs_ToBeSetup_ItemIEsCls;
typedef struct x2apProtIE_Field_E_RABs_ToBeSetup_ItemIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueE_RABs_ToBeSetup_ItemIEsCls value;
} CztProtIE_Field_E_RABs_ToBeSetup_ItemIEs;


typedef CztProtIE_Field_E_RABs_ToBeSetup_ItemIEs CztProtIE_Single_Cont_E_RABs_ToBeSetup_ItemIEs;
typedef struct x2apE_RABs_ToBeSetup_Lst
{
 TknU16 noComp;
 CztProtIE_Single_Cont_E_RABs_ToBeSetup_ItemIEs *member;
}CztE_RABs_ToBeSetup_Lst;

typedef struct x2ap_ExtnUE_CntxtInform_ExtIEsCls{
 union {
  CztManagementBasedMDTallowed cztManagementBasedMDTallowed;
  CztMDTPLMNLst cztMDTPLMNLst;
 } u;
} Czt_ExtnUE_CntxtInform_ExtIEsCls;
typedef struct x2apProtExtnField_UE_CntxtInform_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnUE_CntxtInform_ExtIEsCls extensionValue;
} CztProtExtnField_UE_CntxtInform_ExtIEs;

typedef struct x2apProtExtnCont_UE_CntxtInform_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_UE_CntxtInform_ExtIEs *member;
}CztProtExtnCont_UE_CntxtInform_ExtIEs;

typedef struct x2apUE_CntxtInform
{
 TknPres pres;
 CztUE_S1AP_ID mME_UE_S1AP_ID;
 CztUESecurCapabilities uESecurCapabilities;
 CztAS_SecurInform aS_SecurInform;
 CztUEAggMaxBitRate uEaggregateMaxBitRate;
 CztSubscriberProfileIDforRFP subscriberProfileIDforRFP;
 CztE_RABs_ToBeSetup_Lst e_RABs_ToBeSetup_Lst;
 CztRRC_Cntxt rRC_Cntxt;
 CztHovrRestrnLst handoverRestrnLst;
 CztLocRprtngInform locationRprtngInform;
 CztProtExtnCont_UE_CntxtInform_ExtIEs iE_Extns;
} CztUE_CntxtInform;


typedef TknBStr32 CztMobilityInform;
typedef struct x2ap_ValueHovrRqst_IEsCls{
 union {
  CztUE_X2AP_ID cztUE_X2AP_ID;
  CztCause cztCause;
  CztECGI cztECGI;
  CztGUMMEI cztGUMMEI;
  CztUE_CntxtInform cztUE_CntxtInform;
  CztUE_HistoryInform cztUE_HistoryInform;
  CztTraceActvn cztTraceActvn;
  CztSRVCCOperationPossible cztSRVCCOperationPossible;
  CztCSGMembershipStatus cztCSGMembershipStatus;
  CztMobilityInform cztMobilityInform;
 } u;
} Czt_ValueHovrRqst_IEsCls;
typedef struct x2apProtIE_Field_HovrRqst_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueHovrRqst_IEsCls value;
} CztProtIE_Field_HovrRqst_IEs;

typedef struct x2apProtIE_Cont_HovrRqst_IEs
{
 TknU16 noComp;
 CztProtIE_Field_HovrRqst_IEs *member;
}CztProtIE_Cont_HovrRqst_IEs;

typedef struct x2apHovrRqst
{
 TknPres pres;
 CztProtIE_Cont_HovrRqst_IEs protocolIEs;
} CztHovrRqst;

typedef struct x2ap_ExtnE_RABs_Admtd_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnE_RABs_Admtd_Item_ExtIEsCls;
typedef struct x2apProtExtnField_E_RABs_Admtd_Item_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnE_RABs_Admtd_Item_ExtIEsCls extensionValue;
} CztProtExtnField_E_RABs_Admtd_Item_ExtIEs;

typedef struct x2apProtExtnCont_E_RABs_Admtd_Item_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_E_RABs_Admtd_Item_ExtIEs *member;
}CztProtExtnCont_E_RABs_Admtd_Item_ExtIEs;

typedef struct x2apE_RABs_Admtd_Item
{
 TknPres pres;
 CztE_RAB_ID e_RAB_ID;
 CztGTPtunnelEndpoint uL_GTP_TunnelEndpoint;
 CztGTPtunnelEndpoint dL_GTP_TunnelEndpoint;
 CztProtExtnCont_E_RABs_Admtd_Item_ExtIEs iE_Extns;
} CztE_RABs_Admtd_Item;

typedef struct x2ap_ValueE_RABs_Admtd_ItemIEsCls{
 union {
  CztE_RABs_Admtd_Item cztE_RABs_Admtd_Item;
 } u;
} Czt_ValueE_RABs_Admtd_ItemIEsCls;
typedef struct x2apProtIE_Field_E_RABs_Admtd_ItemIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueE_RABs_Admtd_ItemIEsCls value;
} CztProtIE_Field_E_RABs_Admtd_ItemIEs;


typedef CztProtIE_Field_E_RABs_Admtd_ItemIEs CztProtIE_Single_Cont_E_RABs_Admtd_ItemIEs;
typedef struct x2apE_RABs_Admtd_Lst
{
 TknU16 noComp;
 CztProtIE_Single_Cont_E_RABs_Admtd_ItemIEs *member;
}CztE_RABs_Admtd_Lst;

typedef struct x2ap_ValueHovrRqstAckg_IEsCls{
 union {
  CztUE_X2AP_ID cztid_Old_eNB_UE_X2AP_ID;
  CztUE_X2AP_ID cztid_New_eNB_UE_X2AP_ID;
  CztE_RABs_Admtd_Lst cztE_RABs_Admtd_Lst;
  CztE_RAB_Lst cztE_RAB_Lst;
  CztTgeteNBtoSrc_eNBTprntCont cztTgeteNBtoSrc_eNBTprntCont;
  CztCriticalityDiag cztCriticalityDiag;
 } u;
} Czt_ValueHovrRqstAckg_IEsCls;
typedef struct x2apProtIE_Field_HovrRqstAckg_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueHovrRqstAckg_IEsCls value;
} CztProtIE_Field_HovrRqstAckg_IEs;

typedef struct x2apProtIE_Cont_HovrRqstAckg_IEs
{
 TknU16 noComp;
 CztProtIE_Field_HovrRqstAckg_IEs *member;
}CztProtIE_Cont_HovrRqstAckg_IEs;

typedef struct x2apHovrRqstAckg
{
 TknPres pres;
 CztProtIE_Cont_HovrRqstAckg_IEs protocolIEs;
} CztHovrRqstAckg;

typedef struct x2ap_ValueHovrPrepFail_IEsCls{
 union {
  CztUE_X2AP_ID cztUE_X2AP_ID;
  CztCause cztCause;
  CztCriticalityDiag cztCriticalityDiag;
 } u;
} Czt_ValueHovrPrepFail_IEsCls;
typedef struct x2apProtIE_Field_HovrPrepFail_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueHovrPrepFail_IEsCls value;
} CztProtIE_Field_HovrPrepFail_IEs;

typedef struct x2apProtIE_Cont_HovrPrepFail_IEs
{
 TknU16 noComp;
 CztProtIE_Field_HovrPrepFail_IEs *member;
}CztProtIE_Cont_HovrPrepFail_IEs;

typedef struct x2apHovrPrepFail
{
 TknPres pres;
 CztProtIE_Cont_HovrPrepFail_IEs protocolIEs;
} CztHovrPrepFail;

typedef struct x2ap_ValueHovrReport_IEsCls{
 union {
  CztHovrReportTyp cztHovrReportTyp;
  CztCause cztCause;
  CztECGI cztid_SrcCellECGI;
  CztECGI cztid_FailCellECGI;
  CztECGI cztid_Re_establishmentCellECGI;
  CztTgetCellInUTRAN cztTgetCellInUTRAN;
  CztCRNTI cztCRNTI;
  CztMobilityInform cztMobilityInform;
  CztUE_RLF_Report_Cont cztUE_RLF_Report_Cont;
 } u;
} Czt_ValueHovrReport_IEsCls;
typedef struct x2apProtIE_Field_HovrReport_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueHovrReport_IEsCls value;
} CztProtIE_Field_HovrReport_IEs;

typedef struct x2apProtIE_Cont_HovrReport_IEs
{
 TknU16 noComp;
 CztProtIE_Field_HovrReport_IEs *member;
}CztProtIE_Cont_HovrReport_IEs;

typedef struct x2apHovrReport
{
 TknPres pres;
 CztProtIE_Cont_HovrReport_IEs protocolIEs;
} CztHovrReport;

typedef struct x2ap_ExtnE_RABs_SubjToStatusTfr_ItemExtIEsCls{
 union {
  CztReceiveStatusOfULPDCPSDUsExtended cztReceiveStatusOfULPDCPSDUsExtended;
  CztCOUNTValueExtended cztid_ULCOUNTValueExtended;
  CztCOUNTValueExtended cztid_DLCOUNTValueExtended;
 } u;
} Czt_ExtnE_RABs_SubjToStatusTfr_ItemExtIEsCls;
typedef struct x2apProtExtnField_E_RABs_SubjToStatusTfr_ItemExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnE_RABs_SubjToStatusTfr_ItemExtIEsCls extensionValue;
} CztProtExtnField_E_RABs_SubjToStatusTfr_ItemExtIEs;

typedef struct x2apProtExtnCont_E_RABs_SubjToStatusTfr_ItemExtIEs
{
 TknU16 noComp;
 CztProtExtnField_E_RABs_SubjToStatusTfr_ItemExtIEs *member;
}CztProtExtnCont_E_RABs_SubjToStatusTfr_ItemExtIEs;

typedef struct x2apE_RABs_SubjToStatusTfr_Item
{
 TknPres pres;
 CztE_RAB_ID e_RAB_ID;
 CztReceiveStatusofULPDCPSDUs receiveStatusofULPDCPSDUs;
 CztCOUNTvalue uL_COUNTvalue;
 CztCOUNTvalue dL_COUNTvalue;
 CztProtExtnCont_E_RABs_SubjToStatusTfr_ItemExtIEs iE_Extns;
} CztE_RABs_SubjToStatusTfr_Item;

typedef struct x2ap_ValueE_RABs_SubjToStatusTfr_ItemIEsCls{
 union {
  CztE_RABs_SubjToStatusTfr_Item cztE_RABs_SubjToStatusTfr_Item;
 } u;
} Czt_ValueE_RABs_SubjToStatusTfr_ItemIEsCls;
typedef struct x2apProtIE_Field_E_RABs_SubjToStatusTfr_ItemIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueE_RABs_SubjToStatusTfr_ItemIEsCls value;
} CztProtIE_Field_E_RABs_SubjToStatusTfr_ItemIEs;


typedef CztProtIE_Field_E_RABs_SubjToStatusTfr_ItemIEs CztProtIE_Single_Cont_E_RABs_SubjToStatusTfr_ItemIEs;
typedef struct x2apE_RABs_SubjToStatusTfr_Lst
{
 TknU16 noComp;
 CztProtIE_Single_Cont_E_RABs_SubjToStatusTfr_ItemIEs *member;
}CztE_RABs_SubjToStatusTfr_Lst;

typedef struct x2ap_ValueSNStatusTfr_IEsCls{
 union {
  CztUE_X2AP_ID cztid_Old_eNB_UE_X2AP_ID;
  CztUE_X2AP_ID cztid_New_eNB_UE_X2AP_ID;
  CztE_RABs_SubjToStatusTfr_Lst cztE_RABs_SubjToStatusTfr_Lst;
 } u;
} Czt_ValueSNStatusTfr_IEsCls;
typedef struct x2apProtIE_Field_SNStatusTfr_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueSNStatusTfr_IEsCls value;
} CztProtIE_Field_SNStatusTfr_IEs;

typedef struct x2apProtIE_Cont_SNStatusTfr_IEs
{
 TknU16 noComp;
 CztProtIE_Field_SNStatusTfr_IEs *member;
}CztProtIE_Cont_SNStatusTfr_IEs;

typedef struct x2apSNStatusTfr
{
 TknPres pres;
 CztProtIE_Cont_SNStatusTfr_IEs protocolIEs;
} CztSNStatusTfr;

typedef struct x2ap_ValueUECntxtRls_IEsCls{
 union {
  CztUE_X2AP_ID cztid_Old_eNB_UE_X2AP_ID;
  CztUE_X2AP_ID cztid_New_eNB_UE_X2AP_ID;
 } u;
} Czt_ValueUECntxtRls_IEsCls;
typedef struct x2apProtIE_Field_UECntxtRls_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueUECntxtRls_IEsCls value;
} CztProtIE_Field_UECntxtRls_IEs;

typedef struct x2apProtIE_Cont_UECntxtRls_IEs
{
 TknU16 noComp;
 CztProtIE_Field_UECntxtRls_IEs *member;
}CztProtIE_Cont_UECntxtRls_IEs;

typedef struct x2apUECntxtRls
{
 TknPres pres;
 CztProtIE_Cont_UECntxtRls_IEs protocolIEs;
} CztUECntxtRls;

typedef struct x2ap_ValueHovrCancel_IEsCls{
 union {
  CztUE_X2AP_ID cztid_Old_eNB_UE_X2AP_ID;
  CztUE_X2AP_ID cztid_New_eNB_UE_X2AP_ID;
  CztCause cztCause;
 } u;
} Czt_ValueHovrCancel_IEsCls;
typedef struct x2apProtIE_Field_HovrCancel_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueHovrCancel_IEsCls value;
} CztProtIE_Field_HovrCancel_IEs;

typedef struct x2apProtIE_Cont_HovrCancel_IEs
{
 TknU16 noComp;
 CztProtIE_Field_HovrCancel_IEs *member;
}CztProtIE_Cont_HovrCancel_IEs;

typedef struct x2apHovrCancel
{
 TknPres pres;
 CztProtIE_Cont_HovrCancel_IEs protocolIEs;
} CztHovrCancel;

typedef struct x2ap_ValueErrInd_IEsCls{
 union {
  CztUE_X2AP_ID cztid_Old_eNB_UE_X2AP_ID;
  CztUE_X2AP_ID cztid_New_eNB_UE_X2AP_ID;
  CztCause cztCause;
  CztCriticalityDiag cztCriticalityDiag;
 } u;
} Czt_ValueErrInd_IEsCls;
typedef struct x2apProtIE_Field_ErrInd_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueErrInd_IEsCls value;
} CztProtIE_Field_ErrInd_IEs;

typedef struct x2apProtIE_Cont_ErrInd_IEs
{
 TknU16 noComp;
 CztProtIE_Field_ErrInd_IEs *member;
}CztProtIE_Cont_ErrInd_IEs;

typedef struct x2apErrInd
{
 TknPres pres;
 CztProtIE_Cont_ErrInd_IEs protocolIEs;
} CztErrInd;

typedef struct x2ap_ValueResetRqst_IEsCls{
 union {
  CztCause cztCause;
 } u;
} Czt_ValueResetRqst_IEsCls;
typedef struct x2apProtIE_Field_ResetRqst_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueResetRqst_IEsCls value;
} CztProtIE_Field_ResetRqst_IEs;

typedef struct x2apProtIE_Cont_ResetRqst_IEs
{
 TknU16 noComp;
 CztProtIE_Field_ResetRqst_IEs *member;
}CztProtIE_Cont_ResetRqst_IEs;

typedef struct x2apResetRqst
{
 TknPres pres;
 CztProtIE_Cont_ResetRqst_IEs protocolIEs;
} CztResetRqst;

typedef struct x2ap_ValueResetResp_IEsCls{
 union {
  CztCriticalityDiag cztCriticalityDiag;
 } u;
} Czt_ValueResetResp_IEsCls;
typedef struct x2apProtIE_Field_ResetResp_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueResetResp_IEsCls value;
} CztProtIE_Field_ResetResp_IEs;

typedef struct x2apProtIE_Cont_ResetResp_IEs
{
 TknU16 noComp;
 CztProtIE_Field_ResetResp_IEs *member;
}CztProtIE_Cont_ResetResp_IEs;

typedef struct x2apResetResp
{
 TknPres pres;
 CztProtIE_Cont_ResetResp_IEs protocolIEs;
} CztResetResp;

typedef struct x2ap_ValueX2SetupRqst_IEsCls{
 union {
  CztGlobalENB_ID cztGlobalENB_ID;
  CztSrvdCells cztSrvdCells;
  CztGUGroupIDLst cztGUGroupIDLst;
 } u;
} Czt_ValueX2SetupRqst_IEsCls;
typedef struct x2apProtIE_Field_X2SetupRqst_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueX2SetupRqst_IEsCls value;
} CztProtIE_Field_X2SetupRqst_IEs;

typedef struct x2apProtIE_Cont_X2SetupRqst_IEs
{
 TknU16 noComp;
 CztProtIE_Field_X2SetupRqst_IEs *member;
}CztProtIE_Cont_X2SetupRqst_IEs;

typedef struct x2apX2SetupRqst
{
 TknPres pres;
 CztProtIE_Cont_X2SetupRqst_IEs protocolIEs;
} CztX2SetupRqst;

typedef struct x2ap_ValueX2SetupResp_IEsCls{
 union {
  CztGlobalENB_ID cztGlobalENB_ID;
  CztSrvdCells cztSrvdCells;
  CztGUGroupIDLst cztGUGroupIDLst;
  CztCriticalityDiag cztCriticalityDiag;
 } u;
} Czt_ValueX2SetupResp_IEsCls;
typedef struct x2apProtIE_Field_X2SetupResp_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueX2SetupResp_IEsCls value;
} CztProtIE_Field_X2SetupResp_IEs;

typedef struct x2apProtIE_Cont_X2SetupResp_IEs
{
 TknU16 noComp;
 CztProtIE_Field_X2SetupResp_IEs *member;
}CztProtIE_Cont_X2SetupResp_IEs;

typedef struct x2apX2SetupResp
{
 TknPres pres;
 CztProtIE_Cont_X2SetupResp_IEs protocolIEs;
} CztX2SetupResp;

typedef struct x2ap_ValueX2SetupFail_IEsCls{
 union {
  CztCause cztCause;
  CztTimeToWait cztTimeToWait;
  CztCriticalityDiag cztCriticalityDiag;
 } u;
} Czt_ValueX2SetupFail_IEsCls;
typedef struct x2apProtIE_Field_X2SetupFail_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueX2SetupFail_IEsCls value;
} CztProtIE_Field_X2SetupFail_IEs;

typedef struct x2apProtIE_Cont_X2SetupFail_IEs
{
 TknU16 noComp;
 CztProtIE_Field_X2SetupFail_IEs *member;
}CztProtIE_Cont_X2SetupFail_IEs;

typedef struct x2apX2SetupFail
{
 TknPres pres;
 CztProtIE_Cont_X2SetupFail_IEs protocolIEs;
} CztX2SetupFail;

typedef struct x2ap_ExtnCellInform_Item_ExtIEsCls{
 union {
  CztABSInform cztABSInform;
  CztInvokeInd cztInvokeInd;
 } u;
} Czt_ExtnCellInform_Item_ExtIEsCls;
typedef struct x2apProtExtnField_CellInform_Item_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnCellInform_Item_ExtIEsCls extensionValue;
} CztProtExtnField_CellInform_Item_ExtIEs;

typedef struct x2apProtExtnCont_CellInform_Item_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_CellInform_Item_ExtIEs *member;
}CztProtExtnCont_CellInform_Item_ExtIEs;

typedef struct x2apCellInform_Item
{
 TknPres pres;
 CztECGI cell_ID;
 CztUL_InterferenceOverloadInd ul_InterferenceOverloadInd;
 CztUL_HighInterferenceIndInfo ul_HighInterferenceIndInfo;
 CztRelativeNarrowbandTxPower relativeNarrowbandTxPower;
 CztProtExtnCont_CellInform_Item_ExtIEs iE_Extns;
} CztCellInform_Item;

typedef struct x2ap_ValueCellInform_ItemIEsCls{
 union {
  CztCellInform_Item cztCellInform_Item;
 } u;
} Czt_ValueCellInform_ItemIEsCls;
typedef struct x2apProtIE_Field_CellInform_ItemIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueCellInform_ItemIEsCls value;
} CztProtIE_Field_CellInform_ItemIEs;


typedef CztProtIE_Field_CellInform_ItemIEs CztProtIE_Single_Cont_CellInform_ItemIEs;
typedef struct x2apCellInform_Lst
{
 TknU16 noComp;
 CztProtIE_Single_Cont_CellInform_ItemIEs *member;
}CztCellInform_Lst;

typedef struct x2ap_ValueLoadInform_IEsCls{
 union {
  CztCellInform_Lst cztCellInform_Lst;
 } u;
} Czt_ValueLoadInform_IEsCls;
typedef struct x2apProtIE_Field_LoadInform_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueLoadInform_IEsCls value;
} CztProtIE_Field_LoadInform_IEs;

typedef struct x2apProtIE_Cont_LoadInform_IEs
{
 TknU16 noComp;
 CztProtIE_Field_LoadInform_IEs *member;
}CztProtIE_Cont_LoadInform_IEs;

typedef struct x2apLoadInform
{
 TknPres pres;
 CztProtIE_Cont_LoadInform_IEs protocolIEs;
} CztLoadInform;

typedef struct x2ap_ExtnSrvdCellsToMdfy_Item_ExtIEsCls{
 union {
  CztDeactivationInd cztDeactivationInd;
 } u;
} Czt_ExtnSrvdCellsToMdfy_Item_ExtIEsCls;
typedef struct x2apProtExtnField_SrvdCellsToMdfy_Item_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnSrvdCellsToMdfy_Item_ExtIEsCls extensionValue;
} CztProtExtnField_SrvdCellsToMdfy_Item_ExtIEs;

typedef struct x2apProtExtnCont_SrvdCellsToMdfy_Item_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_SrvdCellsToMdfy_Item_ExtIEs *member;
}CztProtExtnCont_SrvdCellsToMdfy_Item_ExtIEs;

typedef struct x2apSrvdCellsToMdfy_Item
{
 TknPres pres;
 CztECGI old_ecgi;
 CztSrvdCell_Inform servedCellInfo;
 CztNeighbour_Inform neighbour_Info;
 CztProtExtnCont_SrvdCellsToMdfy_Item_ExtIEs iE_Extns;
} CztSrvdCellsToMdfy_Item;

typedef struct x2apSrvdCellsToMdfy
{
 TknU16 noComp;
 CztSrvdCellsToMdfy_Item *member;
}CztSrvdCellsToMdfy;

typedef struct x2apOld_ECGIs
{
 TknU16 noComp;
 CztECGI *member;
}CztOld_ECGIs;

typedef struct x2ap_ValueENBConfigUpd_IEsCls{
 union {
  CztSrvdCells cztSrvdCells;
  CztSrvdCellsToMdfy cztSrvdCellsToMdfy;
  CztOld_ECGIs cztOld_ECGIs;
  CztGUGroupIDLst cztid_GUGroupIDToAddLst;
  CztGUGroupIDLst cztid_GUGroupIDToDeleteLst;
 } u;
} Czt_ValueENBConfigUpd_IEsCls;
typedef struct x2apProtIE_Field_ENBConfigUpd_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueENBConfigUpd_IEsCls value;
} CztProtIE_Field_ENBConfigUpd_IEs;

typedef struct x2apProtIE_Cont_ENBConfigUpd_IEs
{
 TknU16 noComp;
 CztProtIE_Field_ENBConfigUpd_IEs *member;
}CztProtIE_Cont_ENBConfigUpd_IEs;

typedef struct x2apENBConfigUpd
{
 TknPres pres;
 CztProtIE_Cont_ENBConfigUpd_IEs protocolIEs;
} CztENBConfigUpd;

typedef struct x2ap_ValueENBConfigUpdAckg_IEsCls{
 union {
  CztCriticalityDiag cztCriticalityDiag;
 } u;
} Czt_ValueENBConfigUpdAckg_IEsCls;
typedef struct x2apProtIE_Field_ENBConfigUpdAckg_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueENBConfigUpdAckg_IEsCls value;
} CztProtIE_Field_ENBConfigUpdAckg_IEs;

typedef struct x2apProtIE_Cont_ENBConfigUpdAckg_IEs
{
 TknU16 noComp;
 CztProtIE_Field_ENBConfigUpdAckg_IEs *member;
}CztProtIE_Cont_ENBConfigUpdAckg_IEs;

typedef struct x2apENBConfigUpdAckg
{
 TknPres pres;
 CztProtIE_Cont_ENBConfigUpdAckg_IEs protocolIEs;
} CztENBConfigUpdAckg;

typedef struct x2ap_ValueENBConfigUpdFail_IEsCls{
 union {
  CztCause cztCause;
  CztTimeToWait cztTimeToWait;
  CztCriticalityDiag cztCriticalityDiag;
 } u;
} Czt_ValueENBConfigUpdFail_IEsCls;
typedef struct x2apProtIE_Field_ENBConfigUpdFail_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueENBConfigUpdFail_IEsCls value;
} CztProtIE_Field_ENBConfigUpdFail_IEs;

typedef struct x2apProtIE_Cont_ENBConfigUpdFail_IEs
{
 TknU16 noComp;
 CztProtIE_Field_ENBConfigUpdFail_IEs *member;
}CztProtIE_Cont_ENBConfigUpdFail_IEs;

typedef struct x2apENBConfigUpdFail
{
 TknPres pres;
 CztProtIE_Cont_ENBConfigUpdFail_IEs protocolIEs;
} CztENBConfigUpdFail;

typedef struct x2ap_ExtnCellToReport_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnCellToReport_Item_ExtIEsCls;
typedef struct x2apProtExtnField_CellToReport_Item_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnCellToReport_Item_ExtIEsCls extensionValue;
} CztProtExtnField_CellToReport_Item_ExtIEs;

typedef struct x2apProtExtnCont_CellToReport_Item_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_CellToReport_Item_ExtIEs *member;
}CztProtExtnCont_CellToReport_Item_ExtIEs;

typedef struct x2apCellToReport_Item
{
 TknPres pres;
 CztECGI cell_ID;
 CztProtExtnCont_CellToReport_Item_ExtIEs iE_Extns;
} CztCellToReport_Item;

typedef struct x2ap_ValueCellToReport_ItemIEsCls{
 union {
  CztCellToReport_Item cztCellToReport_Item;
 } u;
} Czt_ValueCellToReport_ItemIEsCls;
typedef struct x2apProtIE_Field_CellToReport_ItemIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueCellToReport_ItemIEsCls value;
} CztProtIE_Field_CellToReport_ItemIEs;


typedef CztProtIE_Field_CellToReport_ItemIEs CztProtIE_Single_Cont_CellToReport_ItemIEs;
typedef struct x2apCellToReport_Lst
{
 TknU16 noComp;
 CztProtIE_Single_Cont_CellToReport_ItemIEs *member;
}CztCellToReport_Lst;


typedef enum enumCztRprtngPeriodicity
{
 CztRprtngPeriodicityone_thousand_msEnum,
 CztRprtngPeriodicitytwo_thousand_msEnum,
 CztRprtngPeriodicityfive_thousand_msEnum,
 CztRprtngPeriodicityten_thousand_msEnum
} EnumCztRprtngPeriodicity;
typedef TknU32 CztRprtngPeriodicity;


typedef enum enumCztPartialSuccessIndicator
{
 CztPartialSuccessIndicatorpartial_success_allowedEnum
} EnumCztPartialSuccessIndicator;
typedef TknU32 CztPartialSuccessIndicator;

typedef struct x2ap_ValueResStatusRqst_IEsCls{
 union {
  CztMeasurement_ID cztid_ENB1_Measurement_ID;
  CztMeasurement_ID cztid_ENB2_Measurement_ID;
  CztRegistration_Rqst cztRegistration_Rqst;
  CztReportCharacteristics cztReportCharacteristics;
  CztCellToReport_Lst cztCellToReport_Lst;
  CztRprtngPeriodicity cztRprtngPeriodicity;
  CztPartialSuccessIndicator cztPartialSuccessIndicator;
 } u;
} Czt_ValueResStatusRqst_IEsCls;
typedef struct x2apProtIE_Field_ResStatusRqst_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueResStatusRqst_IEsCls value;
} CztProtIE_Field_ResStatusRqst_IEs;

typedef struct x2apProtIE_Cont_ResStatusRqst_IEs
{
 TknU16 noComp;
 CztProtIE_Field_ResStatusRqst_IEs *member;
}CztProtIE_Cont_ResStatusRqst_IEs;

typedef struct x2apResStatusRqst
{
 TknPres pres;
 CztProtIE_Cont_ResStatusRqst_IEs protocolIEs;
} CztResStatusRqst;

typedef struct x2ap_ExtnMeasurementFailCause_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnMeasurementFailCause_Item_ExtIEsCls;
typedef struct x2apProtExtnField_MeasurementFailCause_Item_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnMeasurementFailCause_Item_ExtIEsCls extensionValue;
} CztProtExtnField_MeasurementFailCause_Item_ExtIEs;

typedef struct x2apProtExtnCont_MeasurementFailCause_Item_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_MeasurementFailCause_Item_ExtIEs *member;
}CztProtExtnCont_MeasurementFailCause_Item_ExtIEs;

typedef struct x2apMeasurementFailCause_Item
{
 TknPres pres;
 CztReportCharacteristics measurementFailedReportCharacteristics;
 CztCause cause;
 CztProtExtnCont_MeasurementFailCause_Item_ExtIEs iE_Extns;
} CztMeasurementFailCause_Item;

typedef struct x2ap_ValueMeasurementFailCause_ItemIEsCls{
 union {
  CztMeasurementFailCause_Item cztMeasurementFailCause_Item;
 } u;
} Czt_ValueMeasurementFailCause_ItemIEsCls;
typedef struct x2apProtIE_Field_MeasurementFailCause_ItemIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueMeasurementFailCause_ItemIEsCls value;
} CztProtIE_Field_MeasurementFailCause_ItemIEs;


typedef CztProtIE_Field_MeasurementFailCause_ItemIEs CztProtIE_Single_Cont_MeasurementFailCause_ItemIEs;
typedef struct x2apMeasurementFailCause_Lst
{
 TknU16 noComp;
 CztProtIE_Single_Cont_MeasurementFailCause_ItemIEs *member;
}CztMeasurementFailCause_Lst;

typedef struct x2ap_ExtnMeasurementInitiationResult_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnMeasurementInitiationResult_Item_ExtIEsCls;
typedef struct x2apProtExtnField_MeasurementInitiationResult_Item_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnMeasurementInitiationResult_Item_ExtIEsCls extensionValue;
} CztProtExtnField_MeasurementInitiationResult_Item_ExtIEs;

typedef struct x2apProtExtnCont_MeasurementInitiationResult_Item_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_MeasurementInitiationResult_Item_ExtIEs *member;
}CztProtExtnCont_MeasurementInitiationResult_Item_ExtIEs;

typedef struct x2apMeasurementInitiationResult_Item
{
 TknPres pres;
 CztECGI cell_ID;
 CztMeasurementFailCause_Lst measurementFailCause_Lst;
 CztProtExtnCont_MeasurementInitiationResult_Item_ExtIEs iE_Extns;
} CztMeasurementInitiationResult_Item;

typedef struct x2ap_ValueMeasurementInitiationResult_ItemIEsCls{
 union {
  CztMeasurementInitiationResult_Item cztMeasurementInitiationResult_Item;
 } u;
} Czt_ValueMeasurementInitiationResult_ItemIEsCls;
typedef struct x2apProtIE_Field_MeasurementInitiationResult_ItemIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueMeasurementInitiationResult_ItemIEsCls value;
} CztProtIE_Field_MeasurementInitiationResult_ItemIEs;


typedef CztProtIE_Field_MeasurementInitiationResult_ItemIEs CztProtIE_Single_Cont_MeasurementInitiationResult_ItemIEs;
typedef struct x2apMeasurementInitiationResult_Lst
{
 TknU16 noComp;
 CztProtIE_Single_Cont_MeasurementInitiationResult_ItemIEs *member;
}CztMeasurementInitiationResult_Lst;

typedef struct x2ap_ValueResStatusResp_IEsCls{
 union {
  CztMeasurement_ID cztid_ENB1_Measurement_ID;
  CztMeasurement_ID cztid_ENB2_Measurement_ID;
  CztCriticalityDiag cztCriticalityDiag;
  CztMeasurementInitiationResult_Lst cztMeasurementInitiationResult_Lst;
 } u;
} Czt_ValueResStatusResp_IEsCls;
typedef struct x2apProtIE_Field_ResStatusResp_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueResStatusResp_IEsCls value;
} CztProtIE_Field_ResStatusResp_IEs;

typedef struct x2apProtIE_Cont_ResStatusResp_IEs
{
 TknU16 noComp;
 CztProtIE_Field_ResStatusResp_IEs *member;
}CztProtIE_Cont_ResStatusResp_IEs;

typedef struct x2apResStatusResp
{
 TknPres pres;
 CztProtIE_Cont_ResStatusResp_IEs protocolIEs;
} CztResStatusResp;

typedef struct x2ap_ExtnCompleteFailCauseInform_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnCompleteFailCauseInform_Item_ExtIEsCls;
typedef struct x2apProtExtnField_CompleteFailCauseInform_Item_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnCompleteFailCauseInform_Item_ExtIEsCls extensionValue;
} CztProtExtnField_CompleteFailCauseInform_Item_ExtIEs;

typedef struct x2apProtExtnCont_CompleteFailCauseInform_Item_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_CompleteFailCauseInform_Item_ExtIEs *member;
}CztProtExtnCont_CompleteFailCauseInform_Item_ExtIEs;

typedef struct x2apCompleteFailCauseInform_Item
{
 TknPres pres;
 CztECGI cell_ID;
 CztMeasurementFailCause_Lst measurementFailCause_Lst;
 CztProtExtnCont_CompleteFailCauseInform_Item_ExtIEs iE_Extns;
} CztCompleteFailCauseInform_Item;

typedef struct x2ap_ValueCompleteFailCauseInform_ItemIEsCls{
 union {
  CztCompleteFailCauseInform_Item cztCompleteFailCauseInform_Item;
 } u;
} Czt_ValueCompleteFailCauseInform_ItemIEsCls;
typedef struct x2apProtIE_Field_CompleteFailCauseInform_ItemIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueCompleteFailCauseInform_ItemIEsCls value;
} CztProtIE_Field_CompleteFailCauseInform_ItemIEs;


typedef CztProtIE_Field_CompleteFailCauseInform_ItemIEs CztProtIE_Single_Cont_CompleteFailCauseInform_ItemIEs;
typedef struct x2apCompleteFailCauseInform_Lst
{
 TknU16 noComp;
 CztProtIE_Single_Cont_CompleteFailCauseInform_ItemIEs *member;
}CztCompleteFailCauseInform_Lst;

typedef struct x2ap_ValueResStatusFail_IEsCls{
 union {
  CztMeasurement_ID cztid_ENB1_Measurement_ID;
  CztMeasurement_ID cztid_ENB2_Measurement_ID;
  CztCause cztCause;
  CztCriticalityDiag cztCriticalityDiag;
  CztCompleteFailCauseInform_Lst cztCompleteFailCauseInform_Lst;
 } u;
} Czt_ValueResStatusFail_IEsCls;
typedef struct x2apProtIE_Field_ResStatusFail_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueResStatusFail_IEsCls value;
} CztProtIE_Field_ResStatusFail_IEs;

typedef struct x2apProtIE_Cont_ResStatusFail_IEs
{
 TknU16 noComp;
 CztProtIE_Field_ResStatusFail_IEs *member;
}CztProtIE_Cont_ResStatusFail_IEs;

typedef struct x2apResStatusFail
{
 TknPres pres;
 CztProtIE_Cont_ResStatusFail_IEs protocolIEs;
} CztResStatusFail;

typedef struct x2ap_ExtnCellMeasurementResult_Item_ExtIEsCls{
 union {
  CztCompositeAvailableCapacityGroup cztCompositeAvailableCapacityGroup;
  CztABS_Status cztABS_Status;
 } u;
} Czt_ExtnCellMeasurementResult_Item_ExtIEsCls;
typedef struct x2apProtExtnField_CellMeasurementResult_Item_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnCellMeasurementResult_Item_ExtIEsCls extensionValue;
} CztProtExtnField_CellMeasurementResult_Item_ExtIEs;

typedef struct x2apProtExtnCont_CellMeasurementResult_Item_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_CellMeasurementResult_Item_ExtIEs *member;
}CztProtExtnCont_CellMeasurementResult_Item_ExtIEs;

typedef struct x2apCellMeasurementResult_Item
{
 TknPres pres;
 CztECGI cell_ID;
 CztHWLoadIndicator hWLoadIndicator;
 CztS1TNLLoadIndicator s1TNLLoadIndicator;
 CztRadioResStatus radioResStatus;
 CztProtExtnCont_CellMeasurementResult_Item_ExtIEs iE_Extns;
} CztCellMeasurementResult_Item;

typedef struct x2ap_ValueCellMeasurementResult_ItemIEsCls{
 union {
  CztCellMeasurementResult_Item cztCellMeasurementResult_Item;
 } u;
} Czt_ValueCellMeasurementResult_ItemIEsCls;
typedef struct x2apProtIE_Field_CellMeasurementResult_ItemIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueCellMeasurementResult_ItemIEsCls value;
} CztProtIE_Field_CellMeasurementResult_ItemIEs;


typedef CztProtIE_Field_CellMeasurementResult_ItemIEs CztProtIE_Single_Cont_CellMeasurementResult_ItemIEs;
typedef struct x2apCellMeasurementResult_Lst
{
 TknU16 noComp;
 CztProtIE_Single_Cont_CellMeasurementResult_ItemIEs *member;
}CztCellMeasurementResult_Lst;

typedef struct x2ap_ValueResStatusUpd_IEsCls{
 union {
  CztMeasurement_ID cztid_ENB1_Measurement_ID;
  CztMeasurement_ID cztid_ENB2_Measurement_ID;
  CztCellMeasurementResult_Lst cztCellMeasurementResult_Lst;
 } u;
} Czt_ValueResStatusUpd_IEsCls;
typedef struct x2apProtIE_Field_ResStatusUpd_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueResStatusUpd_IEsCls value;
} CztProtIE_Field_ResStatusUpd_IEs;

typedef struct x2apProtIE_Cont_ResStatusUpd_IEs
{
 TknU16 noComp;
 CztProtIE_Field_ResStatusUpd_IEs *member;
}CztProtIE_Cont_ResStatusUpd_IEs;

typedef struct x2apResStatusUpd
{
 TknPres pres;
 CztProtIE_Cont_ResStatusUpd_IEs protocolIEs;
} CztResStatusUpd;

typedef struct x2ap_ValuePrivMsg_IEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ValuePrivMsg_IEsCls;
typedef struct x2apPrivIE_Field_PrivMsg_IEs
{
 TknPres pres;
 CztPrivIE_ID id;
 CztCriticality criticality;
 Czt_ValuePrivMsg_IEsCls value;
} CztPrivIE_Field_PrivMsg_IEs;

typedef struct x2apPrivIE_Cont_PrivMsg_IEs
{
 TknU16 noComp;
 CztPrivIE_Field_PrivMsg_IEs *member;
}CztPrivIE_Cont_PrivMsg_IEs;

typedef struct x2apPrivMsg
{
 TknPres pres;
 CztPrivIE_Cont_PrivMsg_IEs privateIEs;
} CztPrivMsg;

typedef struct x2ap_ValueMobilityChangeRqst_IEsCls{
 union {
  CztECGI cztid_ENB1_Cell_ID;
  CztECGI cztid_ENB2_Cell_ID;
  CztMobilityParamsInform cztid_ENB1_Mobility_Params;
  CztMobilityParamsInform cztid_ENB2_Proposed_Mobility_Params;
  CztCause cztCause;
 } u;
} Czt_ValueMobilityChangeRqst_IEsCls;
typedef struct x2apProtIE_Field_MobilityChangeRqst_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueMobilityChangeRqst_IEsCls value;
} CztProtIE_Field_MobilityChangeRqst_IEs;

typedef struct x2apProtIE_Cont_MobilityChangeRqst_IEs
{
 TknU16 noComp;
 CztProtIE_Field_MobilityChangeRqst_IEs *member;
}CztProtIE_Cont_MobilityChangeRqst_IEs;

typedef struct x2apMobilityChangeRqst
{
 TknPres pres;
 CztProtIE_Cont_MobilityChangeRqst_IEs protocolIEs;
} CztMobilityChangeRqst;

typedef struct x2ap_ValueMobilityChangeAckg_IEsCls{
 union {
  CztECGI cztid_ENB1_Cell_ID;
  CztECGI cztid_ENB2_Cell_ID;
  CztCriticalityDiag cztCriticalityDiag;
 } u;
} Czt_ValueMobilityChangeAckg_IEsCls;
typedef struct x2apProtIE_Field_MobilityChangeAckg_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueMobilityChangeAckg_IEsCls value;
} CztProtIE_Field_MobilityChangeAckg_IEs;

typedef struct x2apProtIE_Cont_MobilityChangeAckg_IEs
{
 TknU16 noComp;
 CztProtIE_Field_MobilityChangeAckg_IEs *member;
}CztProtIE_Cont_MobilityChangeAckg_IEs;

typedef struct x2apMobilityChangeAckg
{
 TknPres pres;
 CztProtIE_Cont_MobilityChangeAckg_IEs protocolIEs;
} CztMobilityChangeAckg;

typedef struct x2ap_ValueMobilityChangeFail_IEsCls{
 union {
  CztECGI cztid_ENB1_Cell_ID;
  CztECGI cztid_ENB2_Cell_ID;
  CztCause cztCause;
  CztMobilityParamsModificationRange cztMobilityParamsModificationRange;
  CztCriticalityDiag cztCriticalityDiag;
 } u;
} Czt_ValueMobilityChangeFail_IEsCls;
typedef struct x2apProtIE_Field_MobilityChangeFail_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueMobilityChangeFail_IEsCls value;
} CztProtIE_Field_MobilityChangeFail_IEs;

typedef struct x2apProtIE_Cont_MobilityChangeFail_IEs
{
 TknU16 noComp;
 CztProtIE_Field_MobilityChangeFail_IEs *member;
}CztProtIE_Cont_MobilityChangeFail_IEs;

typedef struct x2apMobilityChangeFail
{
 TknPres pres;
 CztProtIE_Cont_MobilityChangeFail_IEs protocolIEs;
} CztMobilityChangeFail;

typedef struct x2ap_ValueRLFInd_IEsCls{
 union {
  CztPCI cztPCI;
  CztECGI cztECGI;
  CztCRNTI cztCRNTI;
  CztShortMAC_I cztShortMAC_I;
  CztUE_RLF_Report_Cont cztUE_RLF_Report_Cont;
  CztRRCConnSetupIndicator cztRRCConnSetupIndicator;
  CztRRCConnReestabIndicator cztRRCConnReestabIndicator;
 } u;
} Czt_ValueRLFInd_IEsCls;
typedef struct x2apProtIE_Field_RLFInd_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueRLFInd_IEsCls value;
} CztProtIE_Field_RLFInd_IEs;

typedef struct x2apProtIE_Cont_RLFInd_IEs
{
 TknU16 noComp;
 CztProtIE_Field_RLFInd_IEs *member;
}CztProtIE_Cont_RLFInd_IEs;

typedef struct x2apRLFInd
{
 TknPres pres;
 CztProtIE_Cont_RLFInd_IEs protocolIEs;
} CztRLFInd;

typedef struct x2ap_ExtnSrvdCellsToActivate_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnSrvdCellsToActivate_Item_ExtIEsCls;
typedef struct x2apProtExtnField_SrvdCellsToActivate_Item_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnSrvdCellsToActivate_Item_ExtIEsCls extensionValue;
} CztProtExtnField_SrvdCellsToActivate_Item_ExtIEs;

typedef struct x2apProtExtnCont_SrvdCellsToActivate_Item_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_SrvdCellsToActivate_Item_ExtIEs *member;
}CztProtExtnCont_SrvdCellsToActivate_Item_ExtIEs;

typedef struct x2apSrvdCellsToActivate_Item
{
 TknPres pres;
 CztECGI ecgi;
 CztProtExtnCont_SrvdCellsToActivate_Item_ExtIEs iE_Extns;
} CztSrvdCellsToActivate_Item;

typedef struct x2apSrvdCellsToActivate
{
 TknU16 noComp;
 CztSrvdCellsToActivate_Item *member;
}CztSrvdCellsToActivate;

typedef struct x2ap_ValueCellActvnRqst_IEsCls{
 union {
  CztSrvdCellsToActivate cztSrvdCellsToActivate;
 } u;
} Czt_ValueCellActvnRqst_IEsCls;
typedef struct x2apProtIE_Field_CellActvnRqst_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueCellActvnRqst_IEsCls value;
} CztProtIE_Field_CellActvnRqst_IEs;

typedef struct x2apProtIE_Cont_CellActvnRqst_IEs
{
 TknU16 noComp;
 CztProtIE_Field_CellActvnRqst_IEs *member;
}CztProtIE_Cont_CellActvnRqst_IEs;

typedef struct x2apCellActvnRqst
{
 TknPres pres;
 CztProtIE_Cont_CellActvnRqst_IEs protocolIEs;
} CztCellActvnRqst;

typedef struct x2ap_ExtnActivatedCellLst_Item_ExtIEsCls{
 union {
  TknU8 unused;
 } u;
} Czt_ExtnActivatedCellLst_Item_ExtIEsCls;
typedef struct x2apProtExtnField_ActivatedCellLst_Item_ExtIEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ExtnActivatedCellLst_Item_ExtIEsCls extensionValue;
} CztProtExtnField_ActivatedCellLst_Item_ExtIEs;

typedef struct x2apProtExtnCont_ActivatedCellLst_Item_ExtIEs
{
 TknU16 noComp;
 CztProtExtnField_ActivatedCellLst_Item_ExtIEs *member;
}CztProtExtnCont_ActivatedCellLst_Item_ExtIEs;

typedef struct x2apActivatedCellLst_Item
{
 TknPres pres;
 CztECGI ecgi;
 CztProtExtnCont_ActivatedCellLst_Item_ExtIEs iE_Extns;
} CztActivatedCellLst_Item;

typedef struct x2apActivatedCellLst
{
 TknU16 noComp;
 CztActivatedCellLst_Item *member;
}CztActivatedCellLst;

typedef struct x2ap_ValueCellActvnResp_IEsCls{
 union {
  CztActivatedCellLst cztActivatedCellLst;
  CztCriticalityDiag cztCriticalityDiag;
 } u;
} Czt_ValueCellActvnResp_IEsCls;
typedef struct x2apProtIE_Field_CellActvnResp_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueCellActvnResp_IEsCls value;
} CztProtIE_Field_CellActvnResp_IEs;

typedef struct x2apProtIE_Cont_CellActvnResp_IEs
{
 TknU16 noComp;
 CztProtIE_Field_CellActvnResp_IEs *member;
}CztProtIE_Cont_CellActvnResp_IEs;

typedef struct x2apCellActvnResp
{
 TknPres pres;
 CztProtIE_Cont_CellActvnResp_IEs protocolIEs;
} CztCellActvnResp;

typedef struct x2ap_ValueCellActvnFail_IEsCls{
 union {
  CztCause cztCause;
  CztCriticalityDiag cztCriticalityDiag;
 } u;
} Czt_ValueCellActvnFail_IEsCls;
typedef struct x2apProtIE_Field_CellActvnFail_IEs
{
 TknPres pres;
 CztProtIE_ID id;
 CztCriticality criticality;
 Czt_ValueCellActvnFail_IEsCls value;
} CztProtIE_Field_CellActvnFail_IEs;

typedef struct x2apProtIE_Cont_CellActvnFail_IEs
{
 TknU16 noComp;
 CztProtIE_Field_CellActvnFail_IEs *member;
}CztProtIE_Cont_CellActvnFail_IEs;

typedef struct x2apCellActvnFail
{
 TknPres pres;
 CztProtIE_Cont_CellActvnFail_IEs protocolIEs;
} CztCellActvnFail;

typedef struct x2ap_InitiatingMsgCls{
 union {
  CztHovrRqst cztHovrRqst;
  CztResetRqst cztResetRqst;
  CztX2SetupRqst cztX2SetupRqst;
  CztResStatusRqst cztResStatusRqst;
  CztENBConfigUpd cztENBConfigUpd;
  CztMobilityChangeRqst cztMobilityChangeRqst;
  CztCellActvnRqst cztCellActvnRqst;
  CztSNStatusTfr cztSNStatusTfr;
  CztUECntxtRls cztUECntxtRls;
  CztHovrCancel cztHovrCancel;
  CztErrInd cztErrInd;
  CztResStatusUpd cztResStatusUpd;
  CztLoadInform cztLoadInform;
  CztPrivMsg cztPrivMsg;
  CztRLFInd cztRLFInd;
  CztHovrReport cztHovrReport;
 } u;
} Czt_InitiatingMsgCls;
typedef struct x2apInitiatingMsg
{
 TknPres pres;
 CztProcedureCode procedureCode;
 CztCriticality criticality;
 Czt_InitiatingMsgCls value;
} CztInitiatingMsg;

typedef struct x2ap_SuccessfulOutcomeCls{
 union {
  CztHovrRqstAckg cztHovrRqstAckg;
  CztResetResp cztResetResp;
  CztX2SetupResp cztX2SetupResp;
  CztResStatusResp cztResStatusResp;
  CztENBConfigUpdAckg cztENBConfigUpdAckg;
  CztMobilityChangeAckg cztMobilityChangeAckg;
  CztCellActvnResp cztCellActvnResp;
 } u;
} Czt_SuccessfulOutcomeCls;
typedef struct x2apSuccessfulOutcome
{
 TknPres pres;
 CztProcedureCode procedureCode;
 CztCriticality criticality;
 Czt_SuccessfulOutcomeCls value;
} CztSuccessfulOutcome;

typedef struct x2ap_UnsuccessfulOutcomeCls{
 union {
  CztHovrPrepFail cztHovrPrepFail;
  CztX2SetupFail cztX2SetupFail;
  CztResStatusFail cztResStatusFail;
  CztENBConfigUpdFail cztENBConfigUpdFail;
  CztMobilityChangeFail cztMobilityChangeFail;
  CztCellActvnFail cztCellActvnFail;
 } u;
} Czt_UnsuccessfulOutcomeCls;
typedef struct x2apUnsuccessfulOutcome
{
 TknPres pres;
 CztProcedureCode procedureCode;
 CztCriticality criticality;
 Czt_UnsuccessfulOutcomeCls value;
} CztUnsuccessfulOutcome;

typedef struct x2apX2AP_PDU
{
 TknU8 choice;
 union {
  CztInitiatingMsg initiatingMsg;
  CztSuccessfulOutcome successfulOutcome;
  CztUnsuccessfulOutcome unsuccessfulOutcome;
 } val;
} CztX2AP_PDU;
extern S16 cmPkCztPrivIE_ID (CztPrivIE_ID *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnABSInformFDD_ExtIEsCls (Czt_ExtnABSInformFDD_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_ABSInformFDD_ExtIEs (CztProtExtnField_ABSInformFDD_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_ABSInformFDD_ExtIEs (CztProtExtnCont_ABSInformFDD_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztABSInformFDD (CztABSInformFDD *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnABSInformTDD_ExtIEsCls (Czt_ExtnABSInformTDD_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_ABSInformTDD_ExtIEs (CztProtExtnField_ABSInformTDD_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_ABSInformTDD_ExtIEs (CztProtExtnCont_ABSInformTDD_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztABSInformTDD (CztABSInformTDD *param, Buffer *mBuf);
extern S16 cmPkCztABSInform (CztABSInform *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnUsableABSInformFDD_ExtIEsCls (Czt_ExtnUsableABSInformFDD_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_UsableABSInformFDD_ExtIEs (CztProtExtnField_UsableABSInformFDD_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_UsableABSInformFDD_ExtIEs (CztProtExtnCont_UsableABSInformFDD_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztUsableABSInformFDD (CztUsableABSInformFDD *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnUsableABSInformTDD_ExtIEsCls (Czt_ExtnUsableABSInformTDD_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_UsableABSInformTDD_ExtIEs (CztProtExtnField_UsableABSInformTDD_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_UsableABSInformTDD_ExtIEs (CztProtExtnCont_UsableABSInformTDD_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztUsableABSInformTDD (CztUsableABSInformTDD *param, Buffer *mBuf);
extern S16 cmPkCztUsableABSInform (CztUsableABSInform *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnABS_Status_ExtIEsCls (Czt_ExtnABS_Status_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_ABS_Status_ExtIEs (CztProtExtnField_ABS_Status_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_ABS_Status_ExtIEs (CztProtExtnCont_ABS_Status_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztABS_Status (CztABS_Status *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnAdditionalSpecialSubframe_Info_ExtIEsCls (Czt_ExtnAdditionalSpecialSubframe_Info_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_AdditionalSpecialSubframe_Info_ExtIEs (CztProtExtnField_AdditionalSpecialSubframe_Info_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_AdditionalSpecialSubframe_Info_ExtIEs (CztProtExtnCont_AdditionalSpecialSubframe_Info_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztAdditionalSpecialSubframe_Info (CztAdditionalSpecialSubframe_Info *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnAS_SecurInform_ExtIEsCls (Czt_ExtnAS_SecurInform_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_AS_SecurInform_ExtIEs (CztProtExtnField_AS_SecurInform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_AS_SecurInform_ExtIEs (CztProtExtnCont_AS_SecurInform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztAS_SecurInform (CztAS_SecurInform *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnAllocnAndRetentionPriority_ExtIEsCls (Czt_ExtnAllocnAndRetentionPriority_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_AllocnAndRetentionPriority_ExtIEs (CztProtExtnField_AllocnAndRetentionPriority_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_AllocnAndRetentionPriority_ExtIEs (CztProtExtnCont_AllocnAndRetentionPriority_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztAllocnAndRetentionPriority (CztAllocnAndRetentionPriority *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnECGI_ExtIEsCls (Czt_ExtnECGI_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_ECGI_ExtIEs (CztProtExtnField_ECGI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_ECGI_ExtIEs (CztProtExtnCont_ECGI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztECGI (CztECGI *param, Buffer *mBuf);
extern S16 cmPkCztCellIdLstforMDT (CztCellIdLstforMDT *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnCellBasedMDT_ExtIEsCls (Czt_ExtnCellBasedMDT_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_CellBasedMDT_ExtIEs (CztProtExtnField_CellBasedMDT_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_CellBasedMDT_ExtIEs (CztProtExtnCont_CellBasedMDT_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztCellBasedMDT (CztCellBasedMDT *param, Buffer *mBuf);
extern S16 cmPkCztTALstforMDT (CztTALstforMDT *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnTABasedMDT_ExtIEsCls (Czt_ExtnTABasedMDT_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_TABasedMDT_ExtIEs (CztProtExtnField_TABasedMDT_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_TABasedMDT_ExtIEs (CztProtExtnCont_TABasedMDT_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztTABasedMDT (CztTABasedMDT *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnTAI_Item_ExtIEsCls (Czt_ExtnTAI_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_TAI_Item_ExtIEs (CztProtExtnField_TAI_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_TAI_Item_ExtIEs (CztProtExtnCont_TAI_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztTAI_Item (CztTAI_Item *param, Buffer *mBuf);
extern S16 cmPkCztTAILstforMDT (CztTAILstforMDT *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnTAIBasedMDT_ExtIEsCls (Czt_ExtnTAIBasedMDT_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_TAIBasedMDT_ExtIEs (CztProtExtnField_TAIBasedMDT_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_TAIBasedMDT_ExtIEs (CztProtExtnCont_TAIBasedMDT_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztTAIBasedMDT (CztTAIBasedMDT *param, Buffer *mBuf);
extern S16 cmPkCztAreaScopeOfMDT (CztAreaScopeOfMDT *param, Buffer *mBuf);
extern S16 cmPkCztBroadcastPLMNs_Item (CztBroadcastPLMNs_Item *param, Buffer *mBuf);
extern S16 cmPkCztCause (CztCause *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnCellTyp_ExtIEsCls (Czt_ExtnCellTyp_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_CellTyp_ExtIEs (CztProtExtnField_CellTyp_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_CellTyp_ExtIEs (CztProtExtnCont_CellTyp_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztCellTyp (CztCellTyp *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnCompositeAvailableCapacity_ExtIEsCls (Czt_ExtnCompositeAvailableCapacity_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_CompositeAvailableCapacity_ExtIEs (CztProtExtnField_CompositeAvailableCapacity_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_CompositeAvailableCapacity_ExtIEs (CztProtExtnCont_CompositeAvailableCapacity_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztCompositeAvailableCapacity (CztCompositeAvailableCapacity *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnCompositeAvailableCapacityGroup_ExtIEsCls (Czt_ExtnCompositeAvailableCapacityGroup_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_CompositeAvailableCapacityGroup_ExtIEs (CztProtExtnField_CompositeAvailableCapacityGroup_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_CompositeAvailableCapacityGroup_ExtIEs (CztProtExtnCont_CompositeAvailableCapacityGroup_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztCompositeAvailableCapacityGroup (CztCompositeAvailableCapacityGroup *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnCOUNTvalue_ExtIEsCls (Czt_ExtnCOUNTvalue_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_COUNTvalue_ExtIEs (CztProtExtnField_COUNTvalue_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_COUNTvalue_ExtIEs (CztProtExtnCont_COUNTvalue_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztCOUNTvalue (CztCOUNTvalue *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnCOUNTValueExtended_ExtIEsCls (Czt_ExtnCOUNTValueExtended_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_COUNTValueExtended_ExtIEs (CztProtExtnField_COUNTValueExtended_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_COUNTValueExtended_ExtIEs (CztProtExtnCont_COUNTValueExtended_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztCOUNTValueExtended (CztCOUNTValueExtended *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnCriticalityDiag_IE_Lst_ExtIEsCls (Czt_ExtnCriticalityDiag_IE_Lst_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_CriticalityDiag_IE_Lst_ExtIEs (CztProtExtnField_CriticalityDiag_IE_Lst_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_CriticalityDiag_IE_Lst_ExtIEs (CztProtExtnCont_CriticalityDiag_IE_Lst_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztCriticalityDiag_IE_LstMember (CztCriticalityDiag_IE_LstMember *param, Buffer *mBuf);
extern S16 cmPkCztCriticalityDiag_IE_Lst (CztCriticalityDiag_IE_Lst *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnCriticalityDiag_ExtIEsCls (Czt_ExtnCriticalityDiag_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_CriticalityDiag_ExtIEs (CztProtExtnField_CriticalityDiag_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_CriticalityDiag_ExtIEs (CztProtExtnCont_CriticalityDiag_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztCriticalityDiag (CztCriticalityDiag *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnFDD_Info_ExtIEsCls (Czt_ExtnFDD_Info_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_FDD_Info_ExtIEs (CztProtExtnField_FDD_Info_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_FDD_Info_ExtIEs (CztProtExtnCont_FDD_Info_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztFDD_Info (CztFDD_Info *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnSpecialSubframe_Info_ExtIEsCls (Czt_ExtnSpecialSubframe_Info_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_SpecialSubframe_Info_ExtIEs (CztProtExtnField_SpecialSubframe_Info_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_SpecialSubframe_Info_ExtIEs (CztProtExtnCont_SpecialSubframe_Info_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztSpecialSubframe_Info (CztSpecialSubframe_Info *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnTDD_Info_ExtIEsCls (Czt_ExtnTDD_Info_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_TDD_Info_ExtIEs (CztProtExtnField_TDD_Info_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_TDD_Info_ExtIEs (CztProtExtnCont_TDD_Info_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztTDD_Info (CztTDD_Info *param, Buffer *mBuf);
extern S16 cmPkCztEUTRA_Mode_Info (CztEUTRA_Mode_Info *param, Buffer *mBuf);
extern S16 cmPkCztENB_ID (CztENB_ID *param, Buffer *mBuf);
extern S16 cmPkCztEPLMNs (CztEPLMNs *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnGBR_QosInform_ExtIEsCls (Czt_ExtnGBR_QosInform_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_GBR_QosInform_ExtIEs (CztProtExtnField_GBR_QosInform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_GBR_QosInform_ExtIEs (CztProtExtnCont_GBR_QosInform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztGBR_QosInform (CztGBR_QosInform *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnE_RAB_Lvl_QoS_Params_ExtIEsCls (Czt_ExtnE_RAB_Lvl_QoS_Params_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_E_RAB_Lvl_QoS_Params_ExtIEs (CztProtExtnField_E_RAB_Lvl_QoS_Params_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_E_RAB_Lvl_QoS_Params_ExtIEs (CztProtExtnCont_E_RAB_Lvl_QoS_Params_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztE_RAB_Lvl_QoS_Params (CztE_RAB_Lvl_QoS_Params *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnE_RAB_Item_ExtIEsCls (Czt_ExtnE_RAB_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_E_RAB_Item_ExtIEs (CztProtExtnField_E_RAB_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_E_RAB_Item_ExtIEs (CztProtExtnCont_E_RAB_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztE_RAB_Item (CztE_RAB_Item *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueE_RAB_ItemIEsCls (Czt_ValueE_RAB_ItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_E_RAB_ItemIEs (CztProtIE_Field_E_RAB_ItemIEs *param, Buffer *mBuf);
extern S16 cmPkCztE_RAB_Lst (CztE_RAB_Lst *param, Buffer *mBuf);
extern S16 cmPkCztForbiddenTACs (CztForbiddenTACs *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnForbiddenTAs_Item_ExtIEsCls (Czt_ExtnForbiddenTAs_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_ForbiddenTAs_Item_ExtIEs (CztProtExtnField_ForbiddenTAs_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_ForbiddenTAs_Item_ExtIEs (CztProtExtnCont_ForbiddenTAs_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztForbiddenTAs_Item (CztForbiddenTAs_Item *param, Buffer *mBuf);
extern S16 cmPkCztForbiddenTAs (CztForbiddenTAs *param, Buffer *mBuf);
extern S16 cmPkCztForbiddenLACs (CztForbiddenLACs *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnForbiddenLAs_Item_ExtIEsCls (Czt_ExtnForbiddenLAs_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_ForbiddenLAs_Item_ExtIEs (CztProtExtnField_ForbiddenLAs_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_ForbiddenLAs_Item_ExtIEs (CztProtExtnCont_ForbiddenLAs_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztForbiddenLAs_Item (CztForbiddenLAs_Item *param, Buffer *mBuf);
extern S16 cmPkCztForbiddenLAs (CztForbiddenLAs *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnGlobalENB_ID_ExtIEsCls (Czt_ExtnGlobalENB_ID_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_GlobalENB_ID_ExtIEs (CztProtExtnField_GlobalENB_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_GlobalENB_ID_ExtIEs (CztProtExtnCont_GlobalENB_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztGlobalENB_ID (CztGlobalENB_ID *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnGTPtunnelEndpoint_ExtIEsCls (Czt_ExtnGTPtunnelEndpoint_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_GTPtunnelEndpoint_ExtIEs (CztProtExtnField_GTPtunnelEndpoint_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_GTPtunnelEndpoint_ExtIEs (CztProtExtnCont_GTPtunnelEndpoint_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztGTPtunnelEndpoint (CztGTPtunnelEndpoint *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnGU_Group_ID_ExtIEsCls (Czt_ExtnGU_Group_ID_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_GU_Group_ID_ExtIEs (CztProtExtnField_GU_Group_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_GU_Group_ID_ExtIEs (CztProtExtnCont_GU_Group_ID_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztGU_Group_ID (CztGU_Group_ID *param, Buffer *mBuf);
extern S16 cmPkCztGUGroupIDLst (CztGUGroupIDLst *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnGUMMEI_ExtIEsCls (Czt_ExtnGUMMEI_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_GUMMEI_ExtIEs (CztProtExtnField_GUMMEI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_GUMMEI_ExtIEs (CztProtExtnCont_GUMMEI_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztGUMMEI (CztGUMMEI *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnHovrRestrnLst_ExtIEsCls (Czt_ExtnHovrRestrnLst_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_HovrRestrnLst_ExtIEs (CztProtExtnField_HovrRestrnLst_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_HovrRestrnLst_ExtIEs (CztProtExtnCont_HovrRestrnLst_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztHovrRestrnLst (CztHovrRestrnLst *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnHWLoadIndicator_ExtIEsCls (Czt_ExtnHWLoadIndicator_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_HWLoadIndicator_ExtIEs (CztProtExtnField_HWLoadIndicator_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_HWLoadIndicator_ExtIEs (CztProtExtnCont_HWLoadIndicator_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztHWLoadIndicator (CztHWLoadIndicator *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls (Czt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs (CztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs (CztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztLastVisitedEUTRANCellInform (CztLastVisitedEUTRANCellInform *param, Buffer *mBuf);
extern S16 cmPkCztLastVisitedGERANCellInform (CztLastVisitedGERANCellInform *param, Buffer *mBuf);
extern S16 cmPkCztLastVisitedCell_Item (CztLastVisitedCell_Item *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnLocRprtngInform_ExtIEsCls (Czt_ExtnLocRprtngInform_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_LocRprtngInform_ExtIEs (CztProtExtnField_LocRprtngInform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_LocRprtngInform_ExtIEs (CztProtExtnCont_LocRprtngInform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztLocRprtngInform (CztLocRprtngInform *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnM3Config_ExtIEsCls (Czt_ExtnM3Config_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_M3Config_ExtIEs (CztProtExtnField_M3Config_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_M3Config_ExtIEs (CztProtExtnCont_M3Config_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztM3Config (CztM3Config *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnM4Config_ExtIEsCls (Czt_ExtnM4Config_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_M4Config_ExtIEs (CztProtExtnField_M4Config_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_M4Config_ExtIEs (CztProtExtnCont_M4Config_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztM4Config (CztM4Config *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnM5Config_ExtIEsCls (Czt_ExtnM5Config_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_M5Config_ExtIEs (CztProtExtnField_M5Config_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_M5Config_ExtIEs (CztProtExtnCont_M5Config_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztM5Config (CztM5Config *param, Buffer *mBuf);
extern S16 cmPkCztMeasurementThresholdA2 (CztMeasurementThresholdA2 *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnM1ThresholdEventA2_ExtIEsCls (Czt_ExtnM1ThresholdEventA2_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_M1ThresholdEventA2_ExtIEs (CztProtExtnField_M1ThresholdEventA2_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_M1ThresholdEventA2_ExtIEs (CztProtExtnCont_M1ThresholdEventA2_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztM1ThresholdEventA2 (CztM1ThresholdEventA2 *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnM1PeriodicRprtng_ExtIEsCls (Czt_ExtnM1PeriodicRprtng_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_M1PeriodicRprtng_ExtIEs (CztProtExtnField_M1PeriodicRprtng_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_M1PeriodicRprtng_ExtIEs (CztProtExtnCont_M1PeriodicRprtng_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztM1PeriodicRprtng (CztM1PeriodicRprtng *param, Buffer *mBuf);
extern S16 cmPkCztMDTPLMNLst (CztMDTPLMNLst *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnMDT_Config_ExtIEsCls (Czt_ExtnMDT_Config_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_MDT_Config_ExtIEs (CztProtExtnField_MDT_Config_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_MDT_Config_ExtIEs (CztProtExtnCont_MDT_Config_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztMDT_Config (CztMDT_Config *param, Buffer *mBuf);
extern S16 cmPkCztMBMS_Service_Area_Identity_Lst (CztMBMS_Service_Area_Identity_Lst *param, Buffer *mBuf);
extern S16 cmPkCztSubframeAllocn (CztSubframeAllocn *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnMBSFN_Subframe_Info_ExtIEsCls (Czt_ExtnMBSFN_Subframe_Info_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_MBSFN_Subframe_Info_ExtIEs (CztProtExtnField_MBSFN_Subframe_Info_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_MBSFN_Subframe_Info_ExtIEs (CztProtExtnCont_MBSFN_Subframe_Info_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztMBSFN_Subframe_Info (CztMBSFN_Subframe_Info *param, Buffer *mBuf);
extern S16 cmPkCztMBSFN_Subframe_Infolist (CztMBSFN_Subframe_Infolist *param, Buffer *mBuf);
extern S16 cmPkCztMobilityParamsModificationRange (CztMobilityParamsModificationRange *param, Buffer *mBuf);
extern S16 cmPkCztMobilityParamsInform (CztMobilityParamsInform *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnBandInfo_ExtIEsCls (Czt_ExtnBandInfo_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_BandInfo_ExtIEs (CztProtExtnField_BandInfo_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_BandInfo_ExtIEs (CztProtExtnCont_BandInfo_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztBandInfo (CztBandInfo *param, Buffer *mBuf);
extern S16 cmPkCztMultibandInfoLst (CztMultibandInfoLst *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnNeighbour_Inform_ExtIEsCls (Czt_ExtnNeighbour_Inform_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_Neighbour_Inform_ExtIEs (CztProtExtnField_Neighbour_Inform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_Neighbour_Inform_ExtIEs (CztProtExtnCont_Neighbour_Inform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztNeighbour_InformMember (CztNeighbour_InformMember *param, Buffer *mBuf);
extern S16 cmPkCztNeighbour_Inform (CztNeighbour_Inform *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnPRACH_Config_ExtIEsCls (Czt_ExtnPRACH_Config_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_PRACH_Config_ExtIEs (CztProtExtnField_PRACH_Config_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_PRACH_Config_ExtIEs (CztProtExtnCont_PRACH_Config_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztPRACH_Config (CztPRACH_Config *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnRadioResStatus_ExtIEsCls (Czt_ExtnRadioResStatus_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_RadioResStatus_ExtIEs (CztProtExtnField_RadioResStatus_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_RadioResStatus_ExtIEs (CztProtExtnCont_RadioResStatus_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztRadioResStatus (CztRadioResStatus *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnRelativeNarrowbandTxPower_ExtIEsCls (Czt_ExtnRelativeNarrowbandTxPower_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_RelativeNarrowbandTxPower_ExtIEs (CztProtExtnField_RelativeNarrowbandTxPower_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_RelativeNarrowbandTxPower_ExtIEs (CztProtExtnCont_RelativeNarrowbandTxPower_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztRelativeNarrowbandTxPower (CztRelativeNarrowbandTxPower *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnS1TNLLoadIndicator_ExtIEsCls (Czt_ExtnS1TNLLoadIndicator_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_S1TNLLoadIndicator_ExtIEs (CztProtExtnField_S1TNLLoadIndicator_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_S1TNLLoadIndicator_ExtIEs (CztProtExtnCont_S1TNLLoadIndicator_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztS1TNLLoadIndicator (CztS1TNLLoadIndicator *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnSrvdCell_Inform_ExtIEsCls (Czt_ExtnSrvdCell_Inform_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_SrvdCell_Inform_ExtIEs (CztProtExtnField_SrvdCell_Inform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_SrvdCell_Inform_ExtIEs (CztProtExtnCont_SrvdCell_Inform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztSrvdCell_Inform (CztSrvdCell_Inform *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnSrvdCell_ExtIEsCls (Czt_ExtnSrvdCell_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_SrvdCell_ExtIEs (CztProtExtnField_SrvdCell_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_SrvdCell_ExtIEs (CztProtExtnCont_SrvdCell_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztSrvdCellsMember (CztSrvdCellsMember *param, Buffer *mBuf);
extern S16 cmPkCztSrvdCells (CztSrvdCells *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnTraceActvn_ExtIEsCls (Czt_ExtnTraceActvn_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_TraceActvn_ExtIEs (CztProtExtnField_TraceActvn_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_TraceActvn_ExtIEs (CztProtExtnCont_TraceActvn_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztTraceActvn (CztTraceActvn *param, Buffer *mBuf);
extern S16 cmPkCztUE_HistoryInform (CztUE_HistoryInform *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnUEAgg_MaxBitrate_ExtIEsCls (Czt_ExtnUEAgg_MaxBitrate_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_UEAgg_MaxBitrate_ExtIEs (CztProtExtnField_UEAgg_MaxBitrate_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_UEAgg_MaxBitrate_ExtIEs (CztProtExtnCont_UEAgg_MaxBitrate_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztUEAggMaxBitRate (CztUEAggMaxBitRate *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnUESecurCapabilities_ExtIEsCls (Czt_ExtnUESecurCapabilities_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_UESecurCapabilities_ExtIEs (CztProtExtnField_UESecurCapabilities_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_UESecurCapabilities_ExtIEs (CztProtExtnCont_UESecurCapabilities_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztUESecurCapabilities (CztUESecurCapabilities *param, Buffer *mBuf);
extern S16 cmPkCztUL_InterferenceOverloadInd (CztUL_InterferenceOverloadInd *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnUL_HighInterferenceIndInfo_Item_ExtIEsCls (Czt_ExtnUL_HighInterferenceIndInfo_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_UL_HighInterferenceIndInfo_Item_ExtIEs (CztProtExtnField_UL_HighInterferenceIndInfo_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_UL_HighInterferenceIndInfo_Item_ExtIEs (CztProtExtnCont_UL_HighInterferenceIndInfo_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztUL_HighInterferenceIndInfo_Item (CztUL_HighInterferenceIndInfo_Item *param, Buffer *mBuf);
extern S16 cmPkCztUL_HighInterferenceIndInfo (CztUL_HighInterferenceIndInfo *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnE_RABs_ToBeSetup_ItemExtIEsCls (Czt_ExtnE_RABs_ToBeSetup_ItemExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_E_RABs_ToBeSetup_ItemExtIEs (CztProtExtnField_E_RABs_ToBeSetup_ItemExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_E_RABs_ToBeSetup_ItemExtIEs (CztProtExtnCont_E_RABs_ToBeSetup_ItemExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztE_RABs_ToBeSetup_Item (CztE_RABs_ToBeSetup_Item *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueE_RABs_ToBeSetup_ItemIEsCls (Czt_ValueE_RABs_ToBeSetup_ItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_E_RABs_ToBeSetup_ItemIEs (CztProtIE_Field_E_RABs_ToBeSetup_ItemIEs *param, Buffer *mBuf);
extern S16 cmPkCztE_RABs_ToBeSetup_Lst (CztE_RABs_ToBeSetup_Lst *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnUE_CntxtInform_ExtIEsCls (Czt_ExtnUE_CntxtInform_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_UE_CntxtInform_ExtIEs (CztProtExtnField_UE_CntxtInform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_UE_CntxtInform_ExtIEs (CztProtExtnCont_UE_CntxtInform_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztUE_CntxtInform (CztUE_CntxtInform *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueHovrRqst_IEsCls (Czt_ValueHovrRqst_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_HovrRqst_IEs (CztProtIE_Field_HovrRqst_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_HovrRqst_IEs (CztProtIE_Cont_HovrRqst_IEs *param, Buffer *mBuf);
extern S16 cmPkCztHovrRqst (CztHovrRqst *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnE_RABs_Admtd_Item_ExtIEsCls (Czt_ExtnE_RABs_Admtd_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_E_RABs_Admtd_Item_ExtIEs (CztProtExtnField_E_RABs_Admtd_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_E_RABs_Admtd_Item_ExtIEs (CztProtExtnCont_E_RABs_Admtd_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztE_RABs_Admtd_Item (CztE_RABs_Admtd_Item *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueE_RABs_Admtd_ItemIEsCls (Czt_ValueE_RABs_Admtd_ItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_E_RABs_Admtd_ItemIEs (CztProtIE_Field_E_RABs_Admtd_ItemIEs *param, Buffer *mBuf);
extern S16 cmPkCztE_RABs_Admtd_Lst (CztE_RABs_Admtd_Lst *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueHovrRqstAckg_IEsCls (Czt_ValueHovrRqstAckg_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_HovrRqstAckg_IEs (CztProtIE_Field_HovrRqstAckg_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_HovrRqstAckg_IEs (CztProtIE_Cont_HovrRqstAckg_IEs *param, Buffer *mBuf);
extern S16 cmPkCztHovrRqstAckg (CztHovrRqstAckg *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueHovrPrepFail_IEsCls (Czt_ValueHovrPrepFail_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_HovrPrepFail_IEs (CztProtIE_Field_HovrPrepFail_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_HovrPrepFail_IEs (CztProtIE_Cont_HovrPrepFail_IEs *param, Buffer *mBuf);
extern S16 cmPkCztHovrPrepFail (CztHovrPrepFail *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueHovrReport_IEsCls (Czt_ValueHovrReport_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_HovrReport_IEs (CztProtIE_Field_HovrReport_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_HovrReport_IEs (CztProtIE_Cont_HovrReport_IEs *param, Buffer *mBuf);
extern S16 cmPkCztHovrReport (CztHovrReport *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnE_RABs_SubjToStatusTfr_ItemExtIEsCls (Czt_ExtnE_RABs_SubjToStatusTfr_ItemExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_E_RABs_SubjToStatusTfr_ItemExtIEs (CztProtExtnField_E_RABs_SubjToStatusTfr_ItemExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_E_RABs_SubjToStatusTfr_ItemExtIEs (CztProtExtnCont_E_RABs_SubjToStatusTfr_ItemExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztE_RABs_SubjToStatusTfr_Item (CztE_RABs_SubjToStatusTfr_Item *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueE_RABs_SubjToStatusTfr_ItemIEsCls (Czt_ValueE_RABs_SubjToStatusTfr_ItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_E_RABs_SubjToStatusTfr_ItemIEs (CztProtIE_Field_E_RABs_SubjToStatusTfr_ItemIEs *param, Buffer *mBuf);
extern S16 cmPkCztE_RABs_SubjToStatusTfr_Lst (CztE_RABs_SubjToStatusTfr_Lst *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueSNStatusTfr_IEsCls (Czt_ValueSNStatusTfr_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_SNStatusTfr_IEs (CztProtIE_Field_SNStatusTfr_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_SNStatusTfr_IEs (CztProtIE_Cont_SNStatusTfr_IEs *param, Buffer *mBuf);
extern S16 cmPkCztSNStatusTfr (CztSNStatusTfr *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueUECntxtRls_IEsCls (Czt_ValueUECntxtRls_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_UECntxtRls_IEs (CztProtIE_Field_UECntxtRls_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_UECntxtRls_IEs (CztProtIE_Cont_UECntxtRls_IEs *param, Buffer *mBuf);
extern S16 cmPkCztUECntxtRls (CztUECntxtRls *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueHovrCancel_IEsCls (Czt_ValueHovrCancel_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_HovrCancel_IEs (CztProtIE_Field_HovrCancel_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_HovrCancel_IEs (CztProtIE_Cont_HovrCancel_IEs *param, Buffer *mBuf);
extern S16 cmPkCztHovrCancel (CztHovrCancel *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueErrInd_IEsCls (Czt_ValueErrInd_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_ErrInd_IEs (CztProtIE_Field_ErrInd_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_ErrInd_IEs (CztProtIE_Cont_ErrInd_IEs *param, Buffer *mBuf);
extern S16 cmPkCztErrInd (CztErrInd *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueResetRqst_IEsCls (Czt_ValueResetRqst_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_ResetRqst_IEs (CztProtIE_Field_ResetRqst_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_ResetRqst_IEs (CztProtIE_Cont_ResetRqst_IEs *param, Buffer *mBuf);
extern S16 cmPkCztResetRqst (CztResetRqst *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueResetResp_IEsCls (Czt_ValueResetResp_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_ResetResp_IEs (CztProtIE_Field_ResetResp_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_ResetResp_IEs (CztProtIE_Cont_ResetResp_IEs *param, Buffer *mBuf);
extern S16 cmPkCztResetResp (CztResetResp *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueX2SetupRqst_IEsCls (Czt_ValueX2SetupRqst_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_X2SetupRqst_IEs (CztProtIE_Field_X2SetupRqst_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_X2SetupRqst_IEs (CztProtIE_Cont_X2SetupRqst_IEs *param, Buffer *mBuf);
extern S16 cmPkCztX2SetupRqst (CztX2SetupRqst *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueX2SetupResp_IEsCls (Czt_ValueX2SetupResp_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_X2SetupResp_IEs (CztProtIE_Field_X2SetupResp_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_X2SetupResp_IEs (CztProtIE_Cont_X2SetupResp_IEs *param, Buffer *mBuf);
extern S16 cmPkCztX2SetupResp (CztX2SetupResp *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueX2SetupFail_IEsCls (Czt_ValueX2SetupFail_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_X2SetupFail_IEs (CztProtIE_Field_X2SetupFail_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_X2SetupFail_IEs (CztProtIE_Cont_X2SetupFail_IEs *param, Buffer *mBuf);
extern S16 cmPkCztX2SetupFail (CztX2SetupFail *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnCellInform_Item_ExtIEsCls (Czt_ExtnCellInform_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_CellInform_Item_ExtIEs (CztProtExtnField_CellInform_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_CellInform_Item_ExtIEs (CztProtExtnCont_CellInform_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztCellInform_Item (CztCellInform_Item *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueCellInform_ItemIEsCls (Czt_ValueCellInform_ItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_CellInform_ItemIEs (CztProtIE_Field_CellInform_ItemIEs *param, Buffer *mBuf);
extern S16 cmPkCztCellInform_Lst (CztCellInform_Lst *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueLoadInform_IEsCls (Czt_ValueLoadInform_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_LoadInform_IEs (CztProtIE_Field_LoadInform_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_LoadInform_IEs (CztProtIE_Cont_LoadInform_IEs *param, Buffer *mBuf);
extern S16 cmPkCztLoadInform (CztLoadInform *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnSrvdCellsToMdfy_Item_ExtIEsCls (Czt_ExtnSrvdCellsToMdfy_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_SrvdCellsToMdfy_Item_ExtIEs (CztProtExtnField_SrvdCellsToMdfy_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_SrvdCellsToMdfy_Item_ExtIEs (CztProtExtnCont_SrvdCellsToMdfy_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztSrvdCellsToMdfy_Item (CztSrvdCellsToMdfy_Item *param, Buffer *mBuf);
extern S16 cmPkCztSrvdCellsToMdfy (CztSrvdCellsToMdfy *param, Buffer *mBuf);
extern S16 cmPkCztOld_ECGIs (CztOld_ECGIs *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueENBConfigUpd_IEsCls (Czt_ValueENBConfigUpd_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_ENBConfigUpd_IEs (CztProtIE_Field_ENBConfigUpd_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_ENBConfigUpd_IEs (CztProtIE_Cont_ENBConfigUpd_IEs *param, Buffer *mBuf);
extern S16 cmPkCztENBConfigUpd (CztENBConfigUpd *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueENBConfigUpdAckg_IEsCls (Czt_ValueENBConfigUpdAckg_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_ENBConfigUpdAckg_IEs (CztProtIE_Field_ENBConfigUpdAckg_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_ENBConfigUpdAckg_IEs (CztProtIE_Cont_ENBConfigUpdAckg_IEs *param, Buffer *mBuf);
extern S16 cmPkCztENBConfigUpdAckg (CztENBConfigUpdAckg *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueENBConfigUpdFail_IEsCls (Czt_ValueENBConfigUpdFail_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_ENBConfigUpdFail_IEs (CztProtIE_Field_ENBConfigUpdFail_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_ENBConfigUpdFail_IEs (CztProtIE_Cont_ENBConfigUpdFail_IEs *param, Buffer *mBuf);
extern S16 cmPkCztENBConfigUpdFail (CztENBConfigUpdFail *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnCellToReport_Item_ExtIEsCls (Czt_ExtnCellToReport_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_CellToReport_Item_ExtIEs (CztProtExtnField_CellToReport_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_CellToReport_Item_ExtIEs (CztProtExtnCont_CellToReport_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztCellToReport_Item (CztCellToReport_Item *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueCellToReport_ItemIEsCls (Czt_ValueCellToReport_ItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_CellToReport_ItemIEs (CztProtIE_Field_CellToReport_ItemIEs *param, Buffer *mBuf);
extern S16 cmPkCztCellToReport_Lst (CztCellToReport_Lst *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueResStatusRqst_IEsCls (Czt_ValueResStatusRqst_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_ResStatusRqst_IEs (CztProtIE_Field_ResStatusRqst_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_ResStatusRqst_IEs (CztProtIE_Cont_ResStatusRqst_IEs *param, Buffer *mBuf);
extern S16 cmPkCztResStatusRqst (CztResStatusRqst *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnMeasurementFailCause_Item_ExtIEsCls (Czt_ExtnMeasurementFailCause_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_MeasurementFailCause_Item_ExtIEs (CztProtExtnField_MeasurementFailCause_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_MeasurementFailCause_Item_ExtIEs (CztProtExtnCont_MeasurementFailCause_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztMeasurementFailCause_Item (CztMeasurementFailCause_Item *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueMeasurementFailCause_ItemIEsCls (Czt_ValueMeasurementFailCause_ItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_MeasurementFailCause_ItemIEs (CztProtIE_Field_MeasurementFailCause_ItemIEs *param, Buffer *mBuf);
extern S16 cmPkCztMeasurementFailCause_Lst (CztMeasurementFailCause_Lst *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnMeasurementInitiationResult_Item_ExtIEsCls (Czt_ExtnMeasurementInitiationResult_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_MeasurementInitiationResult_Item_ExtIEs (CztProtExtnField_MeasurementInitiationResult_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_MeasurementInitiationResult_Item_ExtIEs (CztProtExtnCont_MeasurementInitiationResult_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztMeasurementInitiationResult_Item (CztMeasurementInitiationResult_Item *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueMeasurementInitiationResult_ItemIEsCls (Czt_ValueMeasurementInitiationResult_ItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_MeasurementInitiationResult_ItemIEs (CztProtIE_Field_MeasurementInitiationResult_ItemIEs *param, Buffer *mBuf);
extern S16 cmPkCztMeasurementInitiationResult_Lst (CztMeasurementInitiationResult_Lst *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueResStatusResp_IEsCls (Czt_ValueResStatusResp_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_ResStatusResp_IEs (CztProtIE_Field_ResStatusResp_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_ResStatusResp_IEs (CztProtIE_Cont_ResStatusResp_IEs *param, Buffer *mBuf);
extern S16 cmPkCztResStatusResp (CztResStatusResp *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnCompleteFailCauseInform_Item_ExtIEsCls (Czt_ExtnCompleteFailCauseInform_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_CompleteFailCauseInform_Item_ExtIEs (CztProtExtnField_CompleteFailCauseInform_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_CompleteFailCauseInform_Item_ExtIEs (CztProtExtnCont_CompleteFailCauseInform_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztCompleteFailCauseInform_Item (CztCompleteFailCauseInform_Item *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueCompleteFailCauseInform_ItemIEsCls (Czt_ValueCompleteFailCauseInform_ItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_CompleteFailCauseInform_ItemIEs (CztProtIE_Field_CompleteFailCauseInform_ItemIEs *param, Buffer *mBuf);
extern S16 cmPkCztCompleteFailCauseInform_Lst (CztCompleteFailCauseInform_Lst *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueResStatusFail_IEsCls (Czt_ValueResStatusFail_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_ResStatusFail_IEs (CztProtIE_Field_ResStatusFail_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_ResStatusFail_IEs (CztProtIE_Cont_ResStatusFail_IEs *param, Buffer *mBuf);
extern S16 cmPkCztResStatusFail (CztResStatusFail *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnCellMeasurementResult_Item_ExtIEsCls (Czt_ExtnCellMeasurementResult_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_CellMeasurementResult_Item_ExtIEs (CztProtExtnField_CellMeasurementResult_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_CellMeasurementResult_Item_ExtIEs (CztProtExtnCont_CellMeasurementResult_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztCellMeasurementResult_Item (CztCellMeasurementResult_Item *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueCellMeasurementResult_ItemIEsCls (Czt_ValueCellMeasurementResult_ItemIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_CellMeasurementResult_ItemIEs (CztProtIE_Field_CellMeasurementResult_ItemIEs *param, Buffer *mBuf);
extern S16 cmPkCztCellMeasurementResult_Lst (CztCellMeasurementResult_Lst *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueResStatusUpd_IEsCls (Czt_ValueResStatusUpd_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_ResStatusUpd_IEs (CztProtIE_Field_ResStatusUpd_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_ResStatusUpd_IEs (CztProtIE_Cont_ResStatusUpd_IEs *param, Buffer *mBuf);
extern S16 cmPkCztResStatusUpd (CztResStatusUpd *param, Buffer *mBuf);
extern S16 cmPkCzt_ValuePrivMsg_IEsCls (Czt_ValuePrivMsg_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztPrivIE_Field_PrivMsg_IEs (CztPrivIE_Field_PrivMsg_IEs *param, Buffer *mBuf);
extern S16 cmPkCztPrivIE_Cont_PrivMsg_IEs (CztPrivIE_Cont_PrivMsg_IEs *param, Buffer *mBuf);
extern S16 cmPkCztPrivMsg (CztPrivMsg *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueMobilityChangeRqst_IEsCls (Czt_ValueMobilityChangeRqst_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_MobilityChangeRqst_IEs (CztProtIE_Field_MobilityChangeRqst_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_MobilityChangeRqst_IEs (CztProtIE_Cont_MobilityChangeRqst_IEs *param, Buffer *mBuf);
extern S16 cmPkCztMobilityChangeRqst (CztMobilityChangeRqst *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueMobilityChangeAckg_IEsCls (Czt_ValueMobilityChangeAckg_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_MobilityChangeAckg_IEs (CztProtIE_Field_MobilityChangeAckg_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_MobilityChangeAckg_IEs (CztProtIE_Cont_MobilityChangeAckg_IEs *param, Buffer *mBuf);
extern S16 cmPkCztMobilityChangeAckg (CztMobilityChangeAckg *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueMobilityChangeFail_IEsCls (Czt_ValueMobilityChangeFail_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_MobilityChangeFail_IEs (CztProtIE_Field_MobilityChangeFail_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_MobilityChangeFail_IEs (CztProtIE_Cont_MobilityChangeFail_IEs *param, Buffer *mBuf);
extern S16 cmPkCztMobilityChangeFail (CztMobilityChangeFail *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueRLFInd_IEsCls (Czt_ValueRLFInd_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_RLFInd_IEs (CztProtIE_Field_RLFInd_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_RLFInd_IEs (CztProtIE_Cont_RLFInd_IEs *param, Buffer *mBuf);
extern S16 cmPkCztRLFInd (CztRLFInd *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnSrvdCellsToActivate_Item_ExtIEsCls (Czt_ExtnSrvdCellsToActivate_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_SrvdCellsToActivate_Item_ExtIEs (CztProtExtnField_SrvdCellsToActivate_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_SrvdCellsToActivate_Item_ExtIEs (CztProtExtnCont_SrvdCellsToActivate_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztSrvdCellsToActivate_Item (CztSrvdCellsToActivate_Item *param, Buffer *mBuf);
extern S16 cmPkCztSrvdCellsToActivate (CztSrvdCellsToActivate *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueCellActvnRqst_IEsCls (Czt_ValueCellActvnRqst_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_CellActvnRqst_IEs (CztProtIE_Field_CellActvnRqst_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_CellActvnRqst_IEs (CztProtIE_Cont_CellActvnRqst_IEs *param, Buffer *mBuf);
extern S16 cmPkCztCellActvnRqst (CztCellActvnRqst *param, Buffer *mBuf);
extern S16 cmPkCzt_ExtnActivatedCellLst_Item_ExtIEsCls (Czt_ExtnActivatedCellLst_Item_ExtIEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtExtnField_ActivatedCellLst_Item_ExtIEs (CztProtExtnField_ActivatedCellLst_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztProtExtnCont_ActivatedCellLst_Item_ExtIEs (CztProtExtnCont_ActivatedCellLst_Item_ExtIEs *param, Buffer *mBuf);
extern S16 cmPkCztActivatedCellLst_Item (CztActivatedCellLst_Item *param, Buffer *mBuf);
extern S16 cmPkCztActivatedCellLst (CztActivatedCellLst *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueCellActvnResp_IEsCls (Czt_ValueCellActvnResp_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_CellActvnResp_IEs (CztProtIE_Field_CellActvnResp_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_CellActvnResp_IEs (CztProtIE_Cont_CellActvnResp_IEs *param, Buffer *mBuf);
extern S16 cmPkCztCellActvnResp (CztCellActvnResp *param, Buffer *mBuf);
extern S16 cmPkCzt_ValueCellActvnFail_IEsCls (Czt_ValueCellActvnFail_IEsCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztProtIE_Field_CellActvnFail_IEs (CztProtIE_Field_CellActvnFail_IEs *param, Buffer *mBuf);
extern S16 cmPkCztProtIE_Cont_CellActvnFail_IEs (CztProtIE_Cont_CellActvnFail_IEs *param, Buffer *mBuf);
extern S16 cmPkCztCellActvnFail (CztCellActvnFail *param, Buffer *mBuf);
extern S16 cmPkCzt_InitiatingMsgCls (Czt_InitiatingMsgCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztInitiatingMsg (CztInitiatingMsg *param, Buffer *mBuf);
extern S16 cmPkCzt_SuccessfulOutcomeCls (Czt_SuccessfulOutcomeCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztSuccessfulOutcome (CztSuccessfulOutcome *param, Buffer *mBuf);
extern S16 cmPkCzt_UnsuccessfulOutcomeCls (Czt_UnsuccessfulOutcomeCls *param, U32 val, Buffer *mBuf);
extern S16 cmPkCztUnsuccessfulOutcome (CztUnsuccessfulOutcome *param, Buffer *mBuf);
extern S16 cmPkCztX2AP_PDU (CztX2AP_PDU *param, Buffer *mBuf);
extern S16 cmUnpkCztPrivIE_ID (CztPrivIE_ID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnABSInformFDD_ExtIEsCls (Czt_ExtnABSInformFDD_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_ABSInformFDD_ExtIEs (CztProtExtnField_ABSInformFDD_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_ABSInformFDD_ExtIEs (CztProtExtnCont_ABSInformFDD_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztABSInformFDD (CztABSInformFDD *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnABSInformTDD_ExtIEsCls (Czt_ExtnABSInformTDD_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_ABSInformTDD_ExtIEs (CztProtExtnField_ABSInformTDD_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_ABSInformTDD_ExtIEs (CztProtExtnCont_ABSInformTDD_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztABSInformTDD (CztABSInformTDD *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztABSInform (CztABSInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnUsableABSInformFDD_ExtIEsCls (Czt_ExtnUsableABSInformFDD_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_UsableABSInformFDD_ExtIEs (CztProtExtnField_UsableABSInformFDD_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_UsableABSInformFDD_ExtIEs (CztProtExtnCont_UsableABSInformFDD_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztUsableABSInformFDD (CztUsableABSInformFDD *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnUsableABSInformTDD_ExtIEsCls (Czt_ExtnUsableABSInformTDD_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_UsableABSInformTDD_ExtIEs (CztProtExtnField_UsableABSInformTDD_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_UsableABSInformTDD_ExtIEs (CztProtExtnCont_UsableABSInformTDD_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztUsableABSInformTDD (CztUsableABSInformTDD *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztUsableABSInform (CztUsableABSInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnABS_Status_ExtIEsCls (Czt_ExtnABS_Status_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_ABS_Status_ExtIEs (CztProtExtnField_ABS_Status_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_ABS_Status_ExtIEs (CztProtExtnCont_ABS_Status_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztABS_Status (CztABS_Status *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnAdditionalSpecialSubframe_Info_ExtIEsCls (Czt_ExtnAdditionalSpecialSubframe_Info_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_AdditionalSpecialSubframe_Info_ExtIEs (CztProtExtnField_AdditionalSpecialSubframe_Info_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_AdditionalSpecialSubframe_Info_ExtIEs (CztProtExtnCont_AdditionalSpecialSubframe_Info_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztAdditionalSpecialSubframe_Info (CztAdditionalSpecialSubframe_Info *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnAS_SecurInform_ExtIEsCls (Czt_ExtnAS_SecurInform_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_AS_SecurInform_ExtIEs (CztProtExtnField_AS_SecurInform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_AS_SecurInform_ExtIEs (CztProtExtnCont_AS_SecurInform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztAS_SecurInform (CztAS_SecurInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnAllocnAndRetentionPriority_ExtIEsCls (Czt_ExtnAllocnAndRetentionPriority_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_AllocnAndRetentionPriority_ExtIEs (CztProtExtnField_AllocnAndRetentionPriority_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_AllocnAndRetentionPriority_ExtIEs (CztProtExtnCont_AllocnAndRetentionPriority_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztAllocnAndRetentionPriority (CztAllocnAndRetentionPriority *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnECGI_ExtIEsCls (Czt_ExtnECGI_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_ECGI_ExtIEs (CztProtExtnField_ECGI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_ECGI_ExtIEs (CztProtExtnCont_ECGI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztECGI (CztECGI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCellIdLstforMDT (CztCellIdLstforMDT *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnCellBasedMDT_ExtIEsCls (Czt_ExtnCellBasedMDT_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_CellBasedMDT_ExtIEs (CztProtExtnField_CellBasedMDT_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_CellBasedMDT_ExtIEs (CztProtExtnCont_CellBasedMDT_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCellBasedMDT (CztCellBasedMDT *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztTALstforMDT (CztTALstforMDT *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnTABasedMDT_ExtIEsCls (Czt_ExtnTABasedMDT_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_TABasedMDT_ExtIEs (CztProtExtnField_TABasedMDT_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_TABasedMDT_ExtIEs (CztProtExtnCont_TABasedMDT_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztTABasedMDT (CztTABasedMDT *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnTAI_Item_ExtIEsCls (Czt_ExtnTAI_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_TAI_Item_ExtIEs (CztProtExtnField_TAI_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_TAI_Item_ExtIEs (CztProtExtnCont_TAI_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztTAI_Item (CztTAI_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztTAILstforMDT (CztTAILstforMDT *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnTAIBasedMDT_ExtIEsCls (Czt_ExtnTAIBasedMDT_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_TAIBasedMDT_ExtIEs (CztProtExtnField_TAIBasedMDT_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_TAIBasedMDT_ExtIEs (CztProtExtnCont_TAIBasedMDT_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztTAIBasedMDT (CztTAIBasedMDT *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztAreaScopeOfMDT (CztAreaScopeOfMDT *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztBroadcastPLMNs_Item (CztBroadcastPLMNs_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCause (CztCause *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnCellTyp_ExtIEsCls (Czt_ExtnCellTyp_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_CellTyp_ExtIEs (CztProtExtnField_CellTyp_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_CellTyp_ExtIEs (CztProtExtnCont_CellTyp_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCellTyp (CztCellTyp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnCompositeAvailableCapacity_ExtIEsCls (Czt_ExtnCompositeAvailableCapacity_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_CompositeAvailableCapacity_ExtIEs (CztProtExtnField_CompositeAvailableCapacity_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_CompositeAvailableCapacity_ExtIEs (CztProtExtnCont_CompositeAvailableCapacity_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCompositeAvailableCapacity (CztCompositeAvailableCapacity *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnCompositeAvailableCapacityGroup_ExtIEsCls (Czt_ExtnCompositeAvailableCapacityGroup_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_CompositeAvailableCapacityGroup_ExtIEs (CztProtExtnField_CompositeAvailableCapacityGroup_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_CompositeAvailableCapacityGroup_ExtIEs (CztProtExtnCont_CompositeAvailableCapacityGroup_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCompositeAvailableCapacityGroup (CztCompositeAvailableCapacityGroup *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnCOUNTvalue_ExtIEsCls (Czt_ExtnCOUNTvalue_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_COUNTvalue_ExtIEs (CztProtExtnField_COUNTvalue_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_COUNTvalue_ExtIEs (CztProtExtnCont_COUNTvalue_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCOUNTvalue (CztCOUNTvalue *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnCOUNTValueExtended_ExtIEsCls (Czt_ExtnCOUNTValueExtended_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_COUNTValueExtended_ExtIEs (CztProtExtnField_COUNTValueExtended_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_COUNTValueExtended_ExtIEs (CztProtExtnCont_COUNTValueExtended_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCOUNTValueExtended (CztCOUNTValueExtended *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnCriticalityDiag_IE_Lst_ExtIEsCls (Czt_ExtnCriticalityDiag_IE_Lst_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_CriticalityDiag_IE_Lst_ExtIEs (CztProtExtnField_CriticalityDiag_IE_Lst_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_CriticalityDiag_IE_Lst_ExtIEs (CztProtExtnCont_CriticalityDiag_IE_Lst_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCriticalityDiag_IE_LstMember (CztCriticalityDiag_IE_LstMember *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCriticalityDiag_IE_Lst (CztCriticalityDiag_IE_Lst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnCriticalityDiag_ExtIEsCls (Czt_ExtnCriticalityDiag_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_CriticalityDiag_ExtIEs (CztProtExtnField_CriticalityDiag_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_CriticalityDiag_ExtIEs (CztProtExtnCont_CriticalityDiag_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCriticalityDiag (CztCriticalityDiag *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnFDD_Info_ExtIEsCls (Czt_ExtnFDD_Info_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_FDD_Info_ExtIEs (CztProtExtnField_FDD_Info_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_FDD_Info_ExtIEs (CztProtExtnCont_FDD_Info_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztFDD_Info (CztFDD_Info *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnSpecialSubframe_Info_ExtIEsCls (Czt_ExtnSpecialSubframe_Info_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_SpecialSubframe_Info_ExtIEs (CztProtExtnField_SpecialSubframe_Info_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_SpecialSubframe_Info_ExtIEs (CztProtExtnCont_SpecialSubframe_Info_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztSpecialSubframe_Info (CztSpecialSubframe_Info *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnTDD_Info_ExtIEsCls (Czt_ExtnTDD_Info_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_TDD_Info_ExtIEs (CztProtExtnField_TDD_Info_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_TDD_Info_ExtIEs (CztProtExtnCont_TDD_Info_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztTDD_Info (CztTDD_Info *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztEUTRA_Mode_Info (CztEUTRA_Mode_Info *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztENB_ID (CztENB_ID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztEPLMNs (CztEPLMNs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnGBR_QosInform_ExtIEsCls (Czt_ExtnGBR_QosInform_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_GBR_QosInform_ExtIEs (CztProtExtnField_GBR_QosInform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_GBR_QosInform_ExtIEs (CztProtExtnCont_GBR_QosInform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztGBR_QosInform (CztGBR_QosInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnE_RAB_Lvl_QoS_Params_ExtIEsCls (Czt_ExtnE_RAB_Lvl_QoS_Params_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_E_RAB_Lvl_QoS_Params_ExtIEs (CztProtExtnField_E_RAB_Lvl_QoS_Params_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_E_RAB_Lvl_QoS_Params_ExtIEs (CztProtExtnCont_E_RAB_Lvl_QoS_Params_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztE_RAB_Lvl_QoS_Params (CztE_RAB_Lvl_QoS_Params *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnE_RAB_Item_ExtIEsCls (Czt_ExtnE_RAB_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_E_RAB_Item_ExtIEs (CztProtExtnField_E_RAB_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_E_RAB_Item_ExtIEs (CztProtExtnCont_E_RAB_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztE_RAB_Item (CztE_RAB_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueE_RAB_ItemIEsCls (Czt_ValueE_RAB_ItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_E_RAB_ItemIEs (CztProtIE_Field_E_RAB_ItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztE_RAB_Lst (CztE_RAB_Lst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztForbiddenTACs (CztForbiddenTACs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnForbiddenTAs_Item_ExtIEsCls (Czt_ExtnForbiddenTAs_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_ForbiddenTAs_Item_ExtIEs (CztProtExtnField_ForbiddenTAs_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_ForbiddenTAs_Item_ExtIEs (CztProtExtnCont_ForbiddenTAs_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztForbiddenTAs_Item (CztForbiddenTAs_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztForbiddenTAs (CztForbiddenTAs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztForbiddenLACs (CztForbiddenLACs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnForbiddenLAs_Item_ExtIEsCls (Czt_ExtnForbiddenLAs_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_ForbiddenLAs_Item_ExtIEs (CztProtExtnField_ForbiddenLAs_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_ForbiddenLAs_Item_ExtIEs (CztProtExtnCont_ForbiddenLAs_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztForbiddenLAs_Item (CztForbiddenLAs_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztForbiddenLAs (CztForbiddenLAs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnGlobalENB_ID_ExtIEsCls (Czt_ExtnGlobalENB_ID_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_GlobalENB_ID_ExtIEs (CztProtExtnField_GlobalENB_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_GlobalENB_ID_ExtIEs (CztProtExtnCont_GlobalENB_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztGlobalENB_ID (CztGlobalENB_ID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnGTPtunnelEndpoint_ExtIEsCls (Czt_ExtnGTPtunnelEndpoint_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_GTPtunnelEndpoint_ExtIEs (CztProtExtnField_GTPtunnelEndpoint_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_GTPtunnelEndpoint_ExtIEs (CztProtExtnCont_GTPtunnelEndpoint_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztGTPtunnelEndpoint (CztGTPtunnelEndpoint *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnGU_Group_ID_ExtIEsCls (Czt_ExtnGU_Group_ID_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_GU_Group_ID_ExtIEs (CztProtExtnField_GU_Group_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_GU_Group_ID_ExtIEs (CztProtExtnCont_GU_Group_ID_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztGU_Group_ID (CztGU_Group_ID *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztGUGroupIDLst (CztGUGroupIDLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnGUMMEI_ExtIEsCls (Czt_ExtnGUMMEI_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_GUMMEI_ExtIEs (CztProtExtnField_GUMMEI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_GUMMEI_ExtIEs (CztProtExtnCont_GUMMEI_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztGUMMEI (CztGUMMEI *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnHovrRestrnLst_ExtIEsCls (Czt_ExtnHovrRestrnLst_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_HovrRestrnLst_ExtIEs (CztProtExtnField_HovrRestrnLst_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_HovrRestrnLst_ExtIEs (CztProtExtnCont_HovrRestrnLst_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztHovrRestrnLst (CztHovrRestrnLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnHWLoadIndicator_ExtIEsCls (Czt_ExtnHWLoadIndicator_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_HWLoadIndicator_ExtIEs (CztProtExtnField_HWLoadIndicator_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_HWLoadIndicator_ExtIEs (CztProtExtnCont_HWLoadIndicator_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztHWLoadIndicator (CztHWLoadIndicator *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls (Czt_ExtnLastVisitedEUTRANCellInform_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs (CztProtExtnField_LastVisitedEUTRANCellInform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs (CztProtExtnCont_LastVisitedEUTRANCellInform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztLastVisitedEUTRANCellInform (CztLastVisitedEUTRANCellInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztLastVisitedGERANCellInform (CztLastVisitedGERANCellInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztLastVisitedCell_Item (CztLastVisitedCell_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnLocRprtngInform_ExtIEsCls (Czt_ExtnLocRprtngInform_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_LocRprtngInform_ExtIEs (CztProtExtnField_LocRprtngInform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_LocRprtngInform_ExtIEs (CztProtExtnCont_LocRprtngInform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztLocRprtngInform (CztLocRprtngInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnM3Config_ExtIEsCls (Czt_ExtnM3Config_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_M3Config_ExtIEs (CztProtExtnField_M3Config_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_M3Config_ExtIEs (CztProtExtnCont_M3Config_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztM3Config (CztM3Config *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnM4Config_ExtIEsCls (Czt_ExtnM4Config_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_M4Config_ExtIEs (CztProtExtnField_M4Config_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_M4Config_ExtIEs (CztProtExtnCont_M4Config_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztM4Config (CztM4Config *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnM5Config_ExtIEsCls (Czt_ExtnM5Config_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_M5Config_ExtIEs (CztProtExtnField_M5Config_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_M5Config_ExtIEs (CztProtExtnCont_M5Config_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztM5Config (CztM5Config *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztMeasurementThresholdA2 (CztMeasurementThresholdA2 *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnM1ThresholdEventA2_ExtIEsCls (Czt_ExtnM1ThresholdEventA2_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_M1ThresholdEventA2_ExtIEs (CztProtExtnField_M1ThresholdEventA2_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_M1ThresholdEventA2_ExtIEs (CztProtExtnCont_M1ThresholdEventA2_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztM1ThresholdEventA2 (CztM1ThresholdEventA2 *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnM1PeriodicRprtng_ExtIEsCls (Czt_ExtnM1PeriodicRprtng_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_M1PeriodicRprtng_ExtIEs (CztProtExtnField_M1PeriodicRprtng_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_M1PeriodicRprtng_ExtIEs (CztProtExtnCont_M1PeriodicRprtng_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztM1PeriodicRprtng (CztM1PeriodicRprtng *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztMDTPLMNLst (CztMDTPLMNLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnMDT_Config_ExtIEsCls (Czt_ExtnMDT_Config_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_MDT_Config_ExtIEs (CztProtExtnField_MDT_Config_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_MDT_Config_ExtIEs (CztProtExtnCont_MDT_Config_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztMDT_Config (CztMDT_Config *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztMBMS_Service_Area_Identity_Lst (CztMBMS_Service_Area_Identity_Lst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztSubframeAllocn (CztSubframeAllocn *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnMBSFN_Subframe_Info_ExtIEsCls (Czt_ExtnMBSFN_Subframe_Info_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_MBSFN_Subframe_Info_ExtIEs (CztProtExtnField_MBSFN_Subframe_Info_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_MBSFN_Subframe_Info_ExtIEs (CztProtExtnCont_MBSFN_Subframe_Info_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztMBSFN_Subframe_Info (CztMBSFN_Subframe_Info *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztMBSFN_Subframe_Infolist (CztMBSFN_Subframe_Infolist *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztMobilityParamsModificationRange (CztMobilityParamsModificationRange *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztMobilityParamsInform (CztMobilityParamsInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnBandInfo_ExtIEsCls (Czt_ExtnBandInfo_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_BandInfo_ExtIEs (CztProtExtnField_BandInfo_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_BandInfo_ExtIEs (CztProtExtnCont_BandInfo_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztBandInfo (CztBandInfo *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztMultibandInfoLst (CztMultibandInfoLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnNeighbour_Inform_ExtIEsCls (Czt_ExtnNeighbour_Inform_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_Neighbour_Inform_ExtIEs (CztProtExtnField_Neighbour_Inform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_Neighbour_Inform_ExtIEs (CztProtExtnCont_Neighbour_Inform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztNeighbour_InformMember (CztNeighbour_InformMember *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztNeighbour_Inform (CztNeighbour_Inform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnPRACH_Config_ExtIEsCls (Czt_ExtnPRACH_Config_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_PRACH_Config_ExtIEs (CztProtExtnField_PRACH_Config_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_PRACH_Config_ExtIEs (CztProtExtnCont_PRACH_Config_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztPRACH_Config (CztPRACH_Config *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnRadioResStatus_ExtIEsCls (Czt_ExtnRadioResStatus_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_RadioResStatus_ExtIEs (CztProtExtnField_RadioResStatus_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_RadioResStatus_ExtIEs (CztProtExtnCont_RadioResStatus_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztRadioResStatus (CztRadioResStatus *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnRelativeNarrowbandTxPower_ExtIEsCls (Czt_ExtnRelativeNarrowbandTxPower_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_RelativeNarrowbandTxPower_ExtIEs (CztProtExtnField_RelativeNarrowbandTxPower_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_RelativeNarrowbandTxPower_ExtIEs (CztProtExtnCont_RelativeNarrowbandTxPower_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztRelativeNarrowbandTxPower (CztRelativeNarrowbandTxPower *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnS1TNLLoadIndicator_ExtIEsCls (Czt_ExtnS1TNLLoadIndicator_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_S1TNLLoadIndicator_ExtIEs (CztProtExtnField_S1TNLLoadIndicator_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_S1TNLLoadIndicator_ExtIEs (CztProtExtnCont_S1TNLLoadIndicator_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztS1TNLLoadIndicator (CztS1TNLLoadIndicator *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnSrvdCell_Inform_ExtIEsCls (Czt_ExtnSrvdCell_Inform_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_SrvdCell_Inform_ExtIEs (CztProtExtnField_SrvdCell_Inform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_SrvdCell_Inform_ExtIEs (CztProtExtnCont_SrvdCell_Inform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztSrvdCell_Inform (CztSrvdCell_Inform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnSrvdCell_ExtIEsCls (Czt_ExtnSrvdCell_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_SrvdCell_ExtIEs (CztProtExtnField_SrvdCell_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_SrvdCell_ExtIEs (CztProtExtnCont_SrvdCell_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztSrvdCellsMember (CztSrvdCellsMember *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztSrvdCells (CztSrvdCells *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnTraceActvn_ExtIEsCls (Czt_ExtnTraceActvn_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_TraceActvn_ExtIEs (CztProtExtnField_TraceActvn_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_TraceActvn_ExtIEs (CztProtExtnCont_TraceActvn_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztTraceActvn (CztTraceActvn *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztUE_HistoryInform (CztUE_HistoryInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnUEAgg_MaxBitrate_ExtIEsCls (Czt_ExtnUEAgg_MaxBitrate_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_UEAgg_MaxBitrate_ExtIEs (CztProtExtnField_UEAgg_MaxBitrate_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_UEAgg_MaxBitrate_ExtIEs (CztProtExtnCont_UEAgg_MaxBitrate_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztUEAggMaxBitRate (CztUEAggMaxBitRate *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnUESecurCapabilities_ExtIEsCls (Czt_ExtnUESecurCapabilities_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_UESecurCapabilities_ExtIEs (CztProtExtnField_UESecurCapabilities_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_UESecurCapabilities_ExtIEs (CztProtExtnCont_UESecurCapabilities_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztUESecurCapabilities (CztUESecurCapabilities *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztUL_InterferenceOverloadInd (CztUL_InterferenceOverloadInd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnUL_HighInterferenceIndInfo_Item_ExtIEsCls (Czt_ExtnUL_HighInterferenceIndInfo_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_UL_HighInterferenceIndInfo_Item_ExtIEs (CztProtExtnField_UL_HighInterferenceIndInfo_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_UL_HighInterferenceIndInfo_Item_ExtIEs (CztProtExtnCont_UL_HighInterferenceIndInfo_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztUL_HighInterferenceIndInfo_Item (CztUL_HighInterferenceIndInfo_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztUL_HighInterferenceIndInfo (CztUL_HighInterferenceIndInfo *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnE_RABs_ToBeSetup_ItemExtIEsCls (Czt_ExtnE_RABs_ToBeSetup_ItemExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_E_RABs_ToBeSetup_ItemExtIEs (CztProtExtnField_E_RABs_ToBeSetup_ItemExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_E_RABs_ToBeSetup_ItemExtIEs (CztProtExtnCont_E_RABs_ToBeSetup_ItemExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztE_RABs_ToBeSetup_Item (CztE_RABs_ToBeSetup_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueE_RABs_ToBeSetup_ItemIEsCls (Czt_ValueE_RABs_ToBeSetup_ItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_E_RABs_ToBeSetup_ItemIEs (CztProtIE_Field_E_RABs_ToBeSetup_ItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztE_RABs_ToBeSetup_Lst (CztE_RABs_ToBeSetup_Lst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnUE_CntxtInform_ExtIEsCls (Czt_ExtnUE_CntxtInform_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_UE_CntxtInform_ExtIEs (CztProtExtnField_UE_CntxtInform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_UE_CntxtInform_ExtIEs (CztProtExtnCont_UE_CntxtInform_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztUE_CntxtInform (CztUE_CntxtInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueHovrRqst_IEsCls (Czt_ValueHovrRqst_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_HovrRqst_IEs (CztProtIE_Field_HovrRqst_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_HovrRqst_IEs (CztProtIE_Cont_HovrRqst_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztHovrRqst (CztHovrRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnE_RABs_Admtd_Item_ExtIEsCls (Czt_ExtnE_RABs_Admtd_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_E_RABs_Admtd_Item_ExtIEs (CztProtExtnField_E_RABs_Admtd_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_E_RABs_Admtd_Item_ExtIEs (CztProtExtnCont_E_RABs_Admtd_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztE_RABs_Admtd_Item (CztE_RABs_Admtd_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueE_RABs_Admtd_ItemIEsCls (Czt_ValueE_RABs_Admtd_ItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_E_RABs_Admtd_ItemIEs (CztProtIE_Field_E_RABs_Admtd_ItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztE_RABs_Admtd_Lst (CztE_RABs_Admtd_Lst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueHovrRqstAckg_IEsCls (Czt_ValueHovrRqstAckg_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_HovrRqstAckg_IEs (CztProtIE_Field_HovrRqstAckg_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_HovrRqstAckg_IEs (CztProtIE_Cont_HovrRqstAckg_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztHovrRqstAckg (CztHovrRqstAckg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueHovrPrepFail_IEsCls (Czt_ValueHovrPrepFail_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_HovrPrepFail_IEs (CztProtIE_Field_HovrPrepFail_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_HovrPrepFail_IEs (CztProtIE_Cont_HovrPrepFail_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztHovrPrepFail (CztHovrPrepFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueHovrReport_IEsCls (Czt_ValueHovrReport_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_HovrReport_IEs (CztProtIE_Field_HovrReport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_HovrReport_IEs (CztProtIE_Cont_HovrReport_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztHovrReport (CztHovrReport *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnE_RABs_SubjToStatusTfr_ItemExtIEsCls (Czt_ExtnE_RABs_SubjToStatusTfr_ItemExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_E_RABs_SubjToStatusTfr_ItemExtIEs (CztProtExtnField_E_RABs_SubjToStatusTfr_ItemExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_E_RABs_SubjToStatusTfr_ItemExtIEs (CztProtExtnCont_E_RABs_SubjToStatusTfr_ItemExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztE_RABs_SubjToStatusTfr_Item (CztE_RABs_SubjToStatusTfr_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueE_RABs_SubjToStatusTfr_ItemIEsCls (Czt_ValueE_RABs_SubjToStatusTfr_ItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_E_RABs_SubjToStatusTfr_ItemIEs (CztProtIE_Field_E_RABs_SubjToStatusTfr_ItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztE_RABs_SubjToStatusTfr_Lst (CztE_RABs_SubjToStatusTfr_Lst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueSNStatusTfr_IEsCls (Czt_ValueSNStatusTfr_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_SNStatusTfr_IEs (CztProtIE_Field_SNStatusTfr_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_SNStatusTfr_IEs (CztProtIE_Cont_SNStatusTfr_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztSNStatusTfr (CztSNStatusTfr *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueUECntxtRls_IEsCls (Czt_ValueUECntxtRls_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_UECntxtRls_IEs (CztProtIE_Field_UECntxtRls_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_UECntxtRls_IEs (CztProtIE_Cont_UECntxtRls_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztUECntxtRls (CztUECntxtRls *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueHovrCancel_IEsCls (Czt_ValueHovrCancel_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_HovrCancel_IEs (CztProtIE_Field_HovrCancel_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_HovrCancel_IEs (CztProtIE_Cont_HovrCancel_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztHovrCancel (CztHovrCancel *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueErrInd_IEsCls (Czt_ValueErrInd_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_ErrInd_IEs (CztProtIE_Field_ErrInd_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_ErrInd_IEs (CztProtIE_Cont_ErrInd_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztErrInd (CztErrInd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueResetRqst_IEsCls (Czt_ValueResetRqst_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_ResetRqst_IEs (CztProtIE_Field_ResetRqst_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_ResetRqst_IEs (CztProtIE_Cont_ResetRqst_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztResetRqst (CztResetRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueResetResp_IEsCls (Czt_ValueResetResp_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_ResetResp_IEs (CztProtIE_Field_ResetResp_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_ResetResp_IEs (CztProtIE_Cont_ResetResp_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztResetResp (CztResetResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueX2SetupRqst_IEsCls (Czt_ValueX2SetupRqst_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_X2SetupRqst_IEs (CztProtIE_Field_X2SetupRqst_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_X2SetupRqst_IEs (CztProtIE_Cont_X2SetupRqst_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztX2SetupRqst (CztX2SetupRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueX2SetupResp_IEsCls (Czt_ValueX2SetupResp_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_X2SetupResp_IEs (CztProtIE_Field_X2SetupResp_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_X2SetupResp_IEs (CztProtIE_Cont_X2SetupResp_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztX2SetupResp (CztX2SetupResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueX2SetupFail_IEsCls (Czt_ValueX2SetupFail_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_X2SetupFail_IEs (CztProtIE_Field_X2SetupFail_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_X2SetupFail_IEs (CztProtIE_Cont_X2SetupFail_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztX2SetupFail (CztX2SetupFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnCellInform_Item_ExtIEsCls (Czt_ExtnCellInform_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_CellInform_Item_ExtIEs (CztProtExtnField_CellInform_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_CellInform_Item_ExtIEs (CztProtExtnCont_CellInform_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCellInform_Item (CztCellInform_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueCellInform_ItemIEsCls (Czt_ValueCellInform_ItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_CellInform_ItemIEs (CztProtIE_Field_CellInform_ItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCellInform_Lst (CztCellInform_Lst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueLoadInform_IEsCls (Czt_ValueLoadInform_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_LoadInform_IEs (CztProtIE_Field_LoadInform_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_LoadInform_IEs (CztProtIE_Cont_LoadInform_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztLoadInform (CztLoadInform *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnSrvdCellsToMdfy_Item_ExtIEsCls (Czt_ExtnSrvdCellsToMdfy_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_SrvdCellsToMdfy_Item_ExtIEs (CztProtExtnField_SrvdCellsToMdfy_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_SrvdCellsToMdfy_Item_ExtIEs (CztProtExtnCont_SrvdCellsToMdfy_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztSrvdCellsToMdfy_Item (CztSrvdCellsToMdfy_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztSrvdCellsToMdfy (CztSrvdCellsToMdfy *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztOld_ECGIs (CztOld_ECGIs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueENBConfigUpd_IEsCls (Czt_ValueENBConfigUpd_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_ENBConfigUpd_IEs (CztProtIE_Field_ENBConfigUpd_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_ENBConfigUpd_IEs (CztProtIE_Cont_ENBConfigUpd_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztENBConfigUpd (CztENBConfigUpd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueENBConfigUpdAckg_IEsCls (Czt_ValueENBConfigUpdAckg_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_ENBConfigUpdAckg_IEs (CztProtIE_Field_ENBConfigUpdAckg_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_ENBConfigUpdAckg_IEs (CztProtIE_Cont_ENBConfigUpdAckg_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztENBConfigUpdAckg (CztENBConfigUpdAckg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueENBConfigUpdFail_IEsCls (Czt_ValueENBConfigUpdFail_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_ENBConfigUpdFail_IEs (CztProtIE_Field_ENBConfigUpdFail_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_ENBConfigUpdFail_IEs (CztProtIE_Cont_ENBConfigUpdFail_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztENBConfigUpdFail (CztENBConfigUpdFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnCellToReport_Item_ExtIEsCls (Czt_ExtnCellToReport_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_CellToReport_Item_ExtIEs (CztProtExtnField_CellToReport_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_CellToReport_Item_ExtIEs (CztProtExtnCont_CellToReport_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCellToReport_Item (CztCellToReport_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueCellToReport_ItemIEsCls (Czt_ValueCellToReport_ItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_CellToReport_ItemIEs (CztProtIE_Field_CellToReport_ItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCellToReport_Lst (CztCellToReport_Lst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueResStatusRqst_IEsCls (Czt_ValueResStatusRqst_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_ResStatusRqst_IEs (CztProtIE_Field_ResStatusRqst_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_ResStatusRqst_IEs (CztProtIE_Cont_ResStatusRqst_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztResStatusRqst (CztResStatusRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnMeasurementFailCause_Item_ExtIEsCls (Czt_ExtnMeasurementFailCause_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_MeasurementFailCause_Item_ExtIEs (CztProtExtnField_MeasurementFailCause_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_MeasurementFailCause_Item_ExtIEs (CztProtExtnCont_MeasurementFailCause_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztMeasurementFailCause_Item (CztMeasurementFailCause_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueMeasurementFailCause_ItemIEsCls (Czt_ValueMeasurementFailCause_ItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_MeasurementFailCause_ItemIEs (CztProtIE_Field_MeasurementFailCause_ItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztMeasurementFailCause_Lst (CztMeasurementFailCause_Lst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnMeasurementInitiationResult_Item_ExtIEsCls (Czt_ExtnMeasurementInitiationResult_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_MeasurementInitiationResult_Item_ExtIEs (CztProtExtnField_MeasurementInitiationResult_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_MeasurementInitiationResult_Item_ExtIEs (CztProtExtnCont_MeasurementInitiationResult_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztMeasurementInitiationResult_Item (CztMeasurementInitiationResult_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueMeasurementInitiationResult_ItemIEsCls (Czt_ValueMeasurementInitiationResult_ItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_MeasurementInitiationResult_ItemIEs (CztProtIE_Field_MeasurementInitiationResult_ItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztMeasurementInitiationResult_Lst (CztMeasurementInitiationResult_Lst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueResStatusResp_IEsCls (Czt_ValueResStatusResp_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_ResStatusResp_IEs (CztProtIE_Field_ResStatusResp_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_ResStatusResp_IEs (CztProtIE_Cont_ResStatusResp_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztResStatusResp (CztResStatusResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnCompleteFailCauseInform_Item_ExtIEsCls (Czt_ExtnCompleteFailCauseInform_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_CompleteFailCauseInform_Item_ExtIEs (CztProtExtnField_CompleteFailCauseInform_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_CompleteFailCauseInform_Item_ExtIEs (CztProtExtnCont_CompleteFailCauseInform_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCompleteFailCauseInform_Item (CztCompleteFailCauseInform_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueCompleteFailCauseInform_ItemIEsCls (Czt_ValueCompleteFailCauseInform_ItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_CompleteFailCauseInform_ItemIEs (CztProtIE_Field_CompleteFailCauseInform_ItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCompleteFailCauseInform_Lst (CztCompleteFailCauseInform_Lst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueResStatusFail_IEsCls (Czt_ValueResStatusFail_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_ResStatusFail_IEs (CztProtIE_Field_ResStatusFail_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_ResStatusFail_IEs (CztProtIE_Cont_ResStatusFail_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztResStatusFail (CztResStatusFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnCellMeasurementResult_Item_ExtIEsCls (Czt_ExtnCellMeasurementResult_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_CellMeasurementResult_Item_ExtIEs (CztProtExtnField_CellMeasurementResult_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_CellMeasurementResult_Item_ExtIEs (CztProtExtnCont_CellMeasurementResult_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCellMeasurementResult_Item (CztCellMeasurementResult_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueCellMeasurementResult_ItemIEsCls (Czt_ValueCellMeasurementResult_ItemIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_CellMeasurementResult_ItemIEs (CztProtIE_Field_CellMeasurementResult_ItemIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCellMeasurementResult_Lst (CztCellMeasurementResult_Lst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueResStatusUpd_IEsCls (Czt_ValueResStatusUpd_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_ResStatusUpd_IEs (CztProtIE_Field_ResStatusUpd_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_ResStatusUpd_IEs (CztProtIE_Cont_ResStatusUpd_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztResStatusUpd (CztResStatusUpd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValuePrivMsg_IEsCls (Czt_ValuePrivMsg_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztPrivIE_Field_PrivMsg_IEs (CztPrivIE_Field_PrivMsg_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztPrivIE_Cont_PrivMsg_IEs (CztPrivIE_Cont_PrivMsg_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztPrivMsg (CztPrivMsg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueMobilityChangeRqst_IEsCls (Czt_ValueMobilityChangeRqst_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_MobilityChangeRqst_IEs (CztProtIE_Field_MobilityChangeRqst_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_MobilityChangeRqst_IEs (CztProtIE_Cont_MobilityChangeRqst_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztMobilityChangeRqst (CztMobilityChangeRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueMobilityChangeAckg_IEsCls (Czt_ValueMobilityChangeAckg_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_MobilityChangeAckg_IEs (CztProtIE_Field_MobilityChangeAckg_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_MobilityChangeAckg_IEs (CztProtIE_Cont_MobilityChangeAckg_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztMobilityChangeAckg (CztMobilityChangeAckg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueMobilityChangeFail_IEsCls (Czt_ValueMobilityChangeFail_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_MobilityChangeFail_IEs (CztProtIE_Field_MobilityChangeFail_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_MobilityChangeFail_IEs (CztProtIE_Cont_MobilityChangeFail_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztMobilityChangeFail (CztMobilityChangeFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueRLFInd_IEsCls (Czt_ValueRLFInd_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_RLFInd_IEs (CztProtIE_Field_RLFInd_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_RLFInd_IEs (CztProtIE_Cont_RLFInd_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztRLFInd (CztRLFInd *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnSrvdCellsToActivate_Item_ExtIEsCls (Czt_ExtnSrvdCellsToActivate_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_SrvdCellsToActivate_Item_ExtIEs (CztProtExtnField_SrvdCellsToActivate_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_SrvdCellsToActivate_Item_ExtIEs (CztProtExtnCont_SrvdCellsToActivate_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztSrvdCellsToActivate_Item (CztSrvdCellsToActivate_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztSrvdCellsToActivate (CztSrvdCellsToActivate *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueCellActvnRqst_IEsCls (Czt_ValueCellActvnRqst_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_CellActvnRqst_IEs (CztProtIE_Field_CellActvnRqst_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_CellActvnRqst_IEs (CztProtIE_Cont_CellActvnRqst_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCellActvnRqst (CztCellActvnRqst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ExtnActivatedCellLst_Item_ExtIEsCls (Czt_ExtnActivatedCellLst_Item_ExtIEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnField_ActivatedCellLst_Item_ExtIEs (CztProtExtnField_ActivatedCellLst_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtExtnCont_ActivatedCellLst_Item_ExtIEs (CztProtExtnCont_ActivatedCellLst_Item_ExtIEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztActivatedCellLst_Item (CztActivatedCellLst_Item *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztActivatedCellLst (CztActivatedCellLst *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueCellActvnResp_IEsCls (Czt_ValueCellActvnResp_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_CellActvnResp_IEs (CztProtIE_Field_CellActvnResp_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_CellActvnResp_IEs (CztProtIE_Cont_CellActvnResp_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCellActvnResp (CztCellActvnResp *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_ValueCellActvnFail_IEsCls (Czt_ValueCellActvnFail_IEsCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Field_CellActvnFail_IEs (CztProtIE_Field_CellActvnFail_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztProtIE_Cont_CellActvnFail_IEs (CztProtIE_Cont_CellActvnFail_IEs *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztCellActvnFail (CztCellActvnFail *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_InitiatingMsgCls (Czt_InitiatingMsgCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztInitiatingMsg (CztInitiatingMsg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_SuccessfulOutcomeCls (Czt_SuccessfulOutcomeCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztSuccessfulOutcome (CztSuccessfulOutcome *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCzt_UnsuccessfulOutcomeCls (Czt_UnsuccessfulOutcomeCls *param, U32 val, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztUnsuccessfulOutcome (CztUnsuccessfulOutcome *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkCztX2AP_PDU (CztX2AP_PDU *param, Ptr ptr, Buffer *mBuf);




typedef U16 CztStrmId;
typedef U16 CztPort;






typedef struct cztNetAddrLst
{
   U8 nmb;
   CmNetAddr nAddr[5];
}CztNetAddrLst;





typedef struct cztReqStatus
{
   U8 status;



   U8 cause;
}CztReqStatus;





typedef struct cztEvnt
{
   CmMemListCp memCp;
   U32 peerId;
   CztX2AP_PDU pdu;
}CztEvnt;
typedef struct cztStaInd
{
   U32 peerId;
   U8 type;
   U8 status;
   U8 reason;
   U16 oldUEX2APId;
}CztStaInd;
typedef CztStaInd CztRlsCfm;




typedef struct cztUeInfo
{
   U16 oldUEX2APId;
   U16 newUEX2APId;
}CztUeInfo;





typedef struct cztRsrcProcInfo
{
   U16 eNb1MeasId;
   U16 eNb2MeasId;
}CztRsrcProcInfo;
typedef struct cztLclErrInd
{
   U32 peerId;

   U8 causeType;
   U8 causeValue;
   U8 msgType;

   union
   {
      CztUeInfo ueInfo;
      CztRsrcProcInfo rsrcInfo;

   }u;
   Bool evntPres;



   CztEvnt *event;





   Buffer *rcvBuf;



}CztLclErrInd;
typedef struct cztReTxInfo
{
   U32 peerId;

   U8 msgType;
   union
   {
      U16 eNb1MeasId;

   }u;
}CztReTxInfo;
typedef struct cztRlsReq
{
   U32 peerId;

   U8 idType;



   U8 rlsType;
   union
   {
      U16 eNb1MeasId;

      U16 oldUEX2APId;
   }u;
}CztRlsReq;
typedef struct cztPeerAssocInd
{
   CztNetAddrLst dstAddrLst;
   CztPort dstPort;
} CztPeerAssocInd;
typedef struct cztPeerAssocRsp
{
   U32 peerId;
   CztNetAddrLst dstAddrLst;
   CztPort dstPort;
   CmNetAddr priDstAddr;
   CztStrmId globalStreamId;
   CztStrmId locOutStrms;
   CztReqStatus status;



} CztPeerAssocRsp;






typedef struct cztAudPeer
{
   U32 peerId;
   State peerState;
}CztAudPeer;
typedef struct cztAudEvnt
{
   U8 type;
   union
   {
      CztAudPeer audPeer;
   }u;
   CztReqStatus status;
}CztAudEvnt;


typedef S16 (*CztBndReq) ( Pst * pst, SuId suId, SpId spId)


                              ;

typedef S16 (*CztUbndReq) ( Pst * pst, SpId spId, Reason reason)


                                ;

typedef S16 (*CztBndCfm) ( Pst * pst, SuId suId, U8 status)


                                ;

typedef S16 (*CztGpReq) ( Pst * pst, SpId spId, CztEvnt * gpReq)


                               ;

typedef S16 (*CztGpInd) ( Pst * pst, SuId suId, CztEvnt * gpInd)


                               ;

typedef S16 (*CztGpRsp) ( Pst * pst, SpId spId, CztEvnt * gpRsp)


                               ;

typedef S16 (*CztGpCfm) ( Pst * pst, SuId suId, CztEvnt * gpCfm)


                               ;

typedef S16 (*CztGpRetxReq) ( Pst * pst, SpId spId, CztReTxInfo *reTxInfo)


                                   ;

typedef S16 (*CztBmpReq) ( Pst * pst, SpId spId, CztEvnt * bmpEvnt)


                                 ;

typedef S16 (*CztBmpInd) ( Pst * pst, SuId suId, CztEvnt * bmpEvnt)


                                 ;

typedef S16 (*CztBmpRsp) ( Pst * pst, SpId spId, CztEvnt * bmpRsp)


                                ;

typedef S16 (*CztBmpCfm) ( Pst * pst, SuId suId, CztEvnt * bmpCfm)


                                ;

typedef S16 (*CztGpErrReq) ( Pst * pst, SpId spId, CztEvnt * gpErrReq)


                                  ;

typedef S16 (*CztGpErrInd) ( Pst * pst, SuId suId, CztEvnt * gpErrInd)


                                  ;

typedef S16 (*CztLclErrorInd) ( Pst * pst, SuId suId, CztLclErrInd * cztLclErrInd)


                                      ;

typedef S16 (*CztRelReq) ( Pst * pst, SpId spId, CztRlsReq *rlsReq)


                                 ;

typedef S16 (*CztRelCfm) ( Pst * pst, SuId suId, CztRlsCfm * rlsCfm)


                                 ;

typedef S16 (*CztStatusInd) ( Pst * pst, SuId suId, CztStaInd * cztSta)


                                ;

typedef S16 (*CztDynamPeerAssocInd) ( Pst * pst, SuId suId, CztPeerAssocInd * peerAssocInd)


                                      ;

typedef S16 (*CztDynamPeerAssocRsp) ( Pst * pst, SuId suId, CztPeerAssocRsp * peerAssocRsp)


                                      ;

typedef S16 (*CztAudReq) ( Pst *pst, SpId spId, CztAudEvnt *audEvnt )



          ;

typedef S16 (*CztAudCfm) ( Pst *pst, SuId suId, CztAudEvnt *audEvnt )



          ;
extern S16 CzUiCztBndReq ( Pst *pst, SuId suId, SpId spId )



  ;
extern S16 CzUiCztBndCfm ( Pst *pst, SuId suId, U8 status )



  ;
extern S16 CzUiCztUbndReq ( Pst *pst, SpId spId, Reason reason )



  ;
extern S16 CzUiCztGpReq ( Pst *pst, SpId spId, CztEvnt *gpReq )



  ;
extern S16 CzUiCztGpInd ( Pst *pst, SuId suId, CztEvnt *gpInd )



  ;
extern S16 CzUiCztGpRsp ( Pst *pst, SpId spId, CztEvnt *gpRsp )



  ;
extern S16 CzUiCztGpCfm ( Pst *pst, SuId suId, CztEvnt *gpCfm )



  ;
extern S16 CzUiCztGpRetxReq ( Pst *pst, SpId spId, CztReTxInfo *reTxInfo)


                                  ;
extern S16 CzUiCztBmpReq ( Pst *pst, SpId spId, CztEvnt *bmpEvnt )



  ;
extern S16 CzUiCztBmpInd ( Pst *pst, SuId suId, CztEvnt *bmpEvnt )



  ;
extern S16 CzUiCztBmpRsp ( Pst *pst, SpId spId, CztEvnt *bmpRsp )



  ;
extern S16 CzUiCztBmpCfm ( Pst *pst, SuId suId, CztEvnt *bmpCfm )



  ;
extern S16 CzUiCztGpErrReq ( Pst *pst, SpId spId, CztEvnt *gpErrReq )



  ;
extern S16 CzUiCztGpErrInd ( Pst *pst, SuId suId, CztEvnt *gpErrInd )



  ;
extern S16 CzUiCztLclErrorInd ( Pst *pst, SuId suId, CztLclErrInd *cztLclErrInd )



  ;
extern S16 CzUiCztRelReq ( Pst *pst, SpId spId, CztRlsReq *rlsReq )



  ;
extern S16 CzUiCztRelCfm ( Pst *pst, SuId suId, CztRlsCfm *rlsCfm )



  ;
extern S16 CzUiCztStaInd ( Pst *pst, SuId suId, CztStaInd *cztSta )



  ;
extern S16 CzUiCztDynamPeerAssocInd ( Pst *pst, SuId suId, CztPeerAssocInd *peerAssocInd )



  ;
extern S16 CzUiCztDynamPeerAssocRsp ( Pst *pst, SuId suId, CztPeerAssocRsp *peerAssocRsp )



  ;
extern S16 CzUiCztAudReq (Pst *pst, SpId spId, CztAudEvnt *audEvnt);
extern S16 CzUiCztAudCfm (Pst *pst, SuId suId, CztAudEvnt *audEvnt);
extern S16 RsLiCztBndReq ( Pst * pst, SuId suId, SpId spId )



  ;

extern S16 RsLiCztUbndReq ( Pst * pst, SpId spId, Reason reason )



  ;

extern S16 RsLiCztBndCfm ( Pst * pst, SuId suId, U8 status )



  ;

extern S16 RsLiCztGpReq ( Pst * pst, SpId spId, CztEvnt * gpReq )



  ;

extern S16 RsLiCztGpInd ( Pst * pst, SuId suId, CztEvnt * gpInd )



  ;

extern S16 RsLiCztGpRsp ( Pst * pst, SpId spId, CztEvnt * gpRsp )



  ;

extern S16 RsLiCztGpCfm ( Pst * pst, SuId suId, CztEvnt * gpCfm )



  ;

extern S16 RsLiCztGpRetxReq ( Pst * pst, SpId spId, CztReTxInfo *retxInfo )



  ;

extern S16 RsLiCztBmpReq ( Pst * pst, SpId spId, CztEvnt * bmpEvnt )



  ;

extern S16 RsLiCztBmpInd ( Pst * pst, SuId suId, CztEvnt * bmpEvnt )



  ;

extern S16 RsLiCztBmpRsp ( Pst * pst, SpId spId, CztEvnt * bmpRsp )



  ;

extern S16 RsLiCztBmpCfm ( Pst * pst, SuId suId, CztEvnt * bmpCfm )



  ;

extern S16 RsLiCztGpErrReq ( Pst * pst, SpId spId, CztEvnt * gpErrReq )



  ;

extern S16 RsLiCztGpErrInd ( Pst * pst, SuId suId, CztEvnt * gpErrInd )



  ;

extern S16 RsLiCztLclErrorInd ( Pst * pst, SuId suId, CztLclErrInd * cztLclErrInd )



  ;

extern S16 RsLiCztRelReq ( Pst * pst, SpId spId, CztRlsReq *rlsReq )



  ;

extern S16 RsLiCztRelCfm ( Pst * pst, SuId suId, CztRlsCfm * rlsCfm )



  ;

extern S16 RsLiCztStatusInd ( Pst * pst, SuId suId, CztStaInd * cztSta )



  ;


extern S16 RsLiCztDynamPeerAssocInd ( Pst * pst, SuId suId, CztPeerAssocInd * peerAssocInd )



  ;

extern S16 RsLiCztDynamPeerAssocRsp ( Pst * pst, SuId suId, CztPeerAssocRsp * peerAssocRsp )



  ;

extern S16 RsLiCztAudReq ( Pst * pst, SpId spId, CztAudEvnt *audEvnt )



  ;

extern S16 RsLiCztAudCfm ( Pst * pst, SuId suId, CztAudEvnt *audEvnt )



  ;






extern S16 cmPkCztBndReq ( Pst * pst, SuId suId, SpId spId )



  ;

extern S16 cmUnpkCztBndReq ( CztBndReq func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztUbndReq ( Pst * pst, SpId spId, Reason reason )



  ;

extern S16 cmUnpkCztUbndReq ( CztUbndReq func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztBndCfm ( Pst * pst, SuId suId, U8 status )



  ;

extern S16 cmUnpkCztBndCfm ( CztBndCfm func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztGpReq ( Pst * pst, SpId spId, CztEvnt * gpReq )



  ;

extern S16 cmUnpkCztGpReq ( CztGpReq func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztGpInd ( Pst * pst, SuId suId, CztEvnt * gpInd )



  ;

extern S16 cmUnpkCztGpInd ( CztGpInd func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztGpRsp ( Pst * pst, SpId spId, CztEvnt * gpRsp )



  ;

extern S16 cmUnpkCztGpRsp ( CztGpRsp func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztGpCfm ( Pst * pst, SuId suId, CztEvnt * gpCfm )



  ;

extern S16 cmUnpkCztGpCfm ( CztGpCfm func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztGpRetxReq ( Pst * pst, SpId spId, CztReTxInfo *retxInfo )



  ;

extern S16 cmUnpkCztGpRetxReq ( CztGpRetxReq func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztBmpReq ( Pst * pst, SpId spId, CztEvnt * bmpEvnt )



  ;

extern S16 cmUnpkCztBmpReq ( CztBmpReq func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztBmpInd ( Pst * pst, SuId suId, CztEvnt * bmpEvnt )



  ;

extern S16 cmUnpkCztBmpInd ( CztBmpInd func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztBmpRsp ( Pst * pst, SpId spId, CztEvnt * bmpRsp )



  ;

extern S16 cmUnpkCztBmpRsp ( CztBmpRsp func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztBmpCfm ( Pst * pst, SuId suId, CztEvnt * bmpCfm )



  ;

extern S16 cmUnpkCztBmpCfm ( CztBmpCfm func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztGpErrReq ( Pst * pst, SpId spId, CztEvnt * gpErrReq )



  ;

extern S16 cmUnpkCztGpErrReq ( CztGpErrReq func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztGpErrInd ( Pst * pst, SuId suId, CztEvnt * gpErrInd )



  ;

extern S16 cmUnpkCztGpErrInd ( CztGpErrInd func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztLclErrorInd ( Pst * pst, SuId suId, CztLclErrInd * cztLclErrInd )



  ;

extern S16 cmUnpkCztLclErrorInd ( CztLclErrorInd func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztRelReq ( Pst * pst, SpId spId, CztRlsReq *rlsReq )



  ;

extern S16 cmUnpkCztRelReq ( CztRelReq func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztRlsReq
( CztRlsReq *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCztRlsReq
( CztRlsReq *param, Buffer *mBuf )


  ;

extern S16 cmPkCztRelCfm ( Pst * pst, SuId suId, CztRlsCfm * rlsCfm )



  ;

extern S16 cmUnpkCztRelCfm ( CztRelCfm func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztStatusInd ( Pst * pst, SuId suId, CztStaInd * cztSta )



  ;

extern S16 cmUnpkCztStatusInd ( CztStatusInd func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztDynamPeerAssocInd ( Pst * pst, SuId suId, CztPeerAssocInd * peerAssocInd )



  ;

extern S16 cmUnpkCztDynamPeerAssocInd ( CztDynamPeerAssocInd func, Pst * pst, Buffer *mBuf )



  ;

extern S16 cmPkCztDynamPeerAssocRsp ( Pst * pst, SuId suId, CztPeerAssocRsp * peerAssocRsp )



  ;

extern S16 cmUnpkCztDynamPeerAssocRsp ( CztDynamPeerAssocRsp func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkCztNetAddrLst ( CztNetAddrLst *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCztNetAddrLst ( CztNetAddrLst *param, Buffer *mBuf )


  ;


extern S16 cmPkCztReqStatus ( CztReqStatus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCztReqStatus ( CztReqStatus *param, Buffer *mBuf )


  ;
extern S16 cmPkCztEvnt ( CztEvnt *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCztEvnt ( CztEvnt *param, Buffer *mBuf )


  ;
extern S16 cmPkCztStaInd ( CztStaInd *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCztStaInd ( CztStaInd *param, Buffer *mBuf )


  ;
extern S16 cmPkCztUeInfo ( CztUeInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCztUeInfo ( CztUeInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkRsrcProcInfo ( CztRsrcProcInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRsrcProcInfo ( CztRsrcProcInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkCztLclErrInd ( CztLclErrInd *param, Buffer *mBuf )


  ;

extern S16 cmPkCztReTxInfo
( CztReTxInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCztReTxInfo
( CztReTxInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCztLclErrInd ( CztLclErrInd *param, Buffer *mBuf )


  ;


extern S16 cmPkCztPeerAssocInd ( CztPeerAssocInd *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCztPeerAssocInd ( CztPeerAssocInd *param, Buffer *mBuf )


  ;
extern S16 cmPkCztPeerAssocRsp ( CztPeerAssocRsp *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCztPeerAssocRsp ( CztPeerAssocRsp *param, Buffer *mBuf )


  ;

extern S16 cmPkCztAudReq (Pst *pst, SpId spId, CztAudEvnt *audEvnt);
extern S16 cmPkCztAudCfm (Pst *pst, SuId suId, CztAudEvnt *audEvnt);
extern S16 cmPkCztAudEvnt ( CztAudEvnt *audEvnt, Buffer *mBuf);
extern S16 cmUnpkCztAudEvnt ( CztAudEvnt *audEvnt, Buffer *mBuf);
extern S16 cmUnpkCztAudReq (CztAudReq func, Pst *pst, Buffer *mBuf )


                                   ;
extern S16 cmUnpkCztAudCfm (CztAudCfm func, Pst *pst, Buffer *mBuf);
typedef U16 SctStrmId;
typedef U16 SctPort;
typedef U32 SctTSN;
typedef U16 SctRTT;
typedef U16 SctStatus;
typedef U16 SctResult;
typedef U16 SctCause;
typedef S32 SctWinSize;
typedef TknStr64 SctVSInfo;





typedef struct _sctNetAddrLst
{
   U8 nmb;
   CmNetAddr nAddr[5];
} SctNetAddrLst;


typedef struct _sctRtrvInfo
{
   U32 nmbUnsentDgms;
   U32 nmbUnackDgms;
   U32 nmbUndelDgms;
   SctTSN lastAckTsn;
   SctTSN lastSentTsn;
} SctRtrvInfo;


typedef struct _sctDatIndType
{
   U8 type;
   SctTSN tsn;
   U16 seqNum;
   Bool last;
} SctDatIndType;


typedef struct _SctInitParams
{
   U32 iTag;
   U32 a_rwnd;
   SctStrmId outStrms;
   SctStrmId inStrms;
   SctTSN iTsn;
   U32 cookieLife;
   SctPort peerPort;
   SctPort localPort;
   SctNetAddrLst peerAddrLst;
   SctNetAddrLst localAddrLst;
   U16 supAddress;
   U8 hstNameLen;
   U8 hstName[255];
} SctInitParams;


typedef struct _SctCookieParams
{
   UConnId spAssocId;
   UConnId suAssocId;
   SctPort peerPort;
   SctNetAddrLst peerAddrLst;





} SctCookieParams;


typedef struct _SctAssocIndParams
{
   U8 type;
   union
   {
      SctInitParams initParams;
      SctCookieParams cookieParams;
   } t;




} SctAssocIndParams;


typedef struct _sctAssocInfo
{
   SctWinSize rwnd;
   U8 connSta;
   CmNetAddr priDstAddr;
   SctPort dstPort;
   SctNetAddrLst dstAddrLst;
} SctAssocInfo;


typedef struct _sctAddrInfo
{
   U16 rtt;
   U32 cwnd;
   U32 rto;
   Bool active;
} SctAddrInfo;


typedef struct _sctStaInfo
{
   U8 staType;
   union
   {
      SctAssocInfo assocInfo;
      SctAddrInfo addrInfo;
      SctRtrvInfo rtrvInfo;
   } u;
} SctStaInfo;
typedef S16 (*SctBndReq) (Pst *pst, SuId suId, SpId spId)

                                                         ;

typedef S16 (*SctBndCfm) (Pst *pst, SuId suId, SctResult result)

                                                           ;
typedef S16 (*SctEndpOpenReq) (Pst *pst, SpId spId, UConnId suEndpId, SctPort port, CmNetAddr *intfNAddr)



                                                               ;


typedef S16 (*SctEndpOpenCfm) (Pst *pst, SuId suId, UConnId suEndpId, UConnId spEndpId, SctResult result, SctCause cause)




                                                           ;

typedef S16 (*SctEndpCloseReq) (Pst *pst, SpId spId, UConnId endpId, U8 endpIdType)


                                                                ;

typedef S16 (*SctEndpCloseCfm) (Pst *pst, SuId suId, UConnId suEndpId, SctResult result, SctCause cause)



                                                           ;
typedef S16 (*SctAssocReq) (Pst *pst, SpId spId, UConnId spEndpId, UConnId suAssocId, CmNetAddr *priDstNAddr, SctPort dstPort, SctStrmId outStrms, SctNetAddrLst *dstNAddrLst, SctNetAddrLst *srcNAddrLst, Buffer *vsInfo)
                                                           ;


typedef S16 (*SctAssocInd) (Pst *pst, SuId suId, UConnId suEndpId, SctAssocIndParams *assocParams, Buffer *vsInfo)



                                                              ;
typedef S16 (*SctAssocRsp) (Pst *pst, SpId spId, UConnId spEndpId, SctAssocIndParams *assocParams, SctResult result, Buffer *vsInfo)




                                                              ;
typedef S16 (*SctAssocCfm) (Pst *pst, SuId suId, UConnId suAssocId, UConnId spAssocId, SctNetAddrLst *dstNAddrLst, SctPort dstPort, SctStrmId outStrms, Buffer *vsInfo)






                                                           ;


typedef S16 (*SctTermReq) (Pst *pst, SpId spId, UConnId assocId, U8 assocIdType, Bool abrtFlg)



                                                            ;

typedef S16 (*SctTermInd) (Pst *pst, SuId suId, UConnId assocId, U8 assocIdType, SctStatus status, SctCause cause, SctRtrvInfo *rtrvInfo)





                                                             ;

typedef S16 (*SctTermCfm) (Pst *pst, SuId suId, UConnId suAssocId, SctResult result, SctCause cause)



                                                          ;

typedef S16 (*SctSetPriReq) (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr)


                                                             ;

typedef S16 (*SctSetPriCfm) (Pst *pst, SuId suId, UConnId suAssocId, SctResult result, SctCause cause)



                                                          ;

typedef S16 (*SctHBeatReq) (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, U16 intervalTime, SctStatus status)




                                                           ;

typedef S16 (*SctHBeatCfm) (Pst *pst, SuId suId, UConnId suAssocId, CmNetAddr *dstNAddr, SctStatus status, SctResult result, SctCause cause)





                                                          ;

typedef S16 (*SctDatReq) (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, SctStrmId strmId, Bool unorderFlg, Bool nobundleFlg, U16 lifeTime, U32 protId, Buffer *mBuf)
                                                         ;

typedef S16 (*SctDatInd) (Pst *pst, SuId suId, UConnId suAssocId, SctStrmId strmId, SctDatIndType *indType, U32 protId, Buffer *mBuf)





                                                         ;

typedef S16 (*SctStaReq) (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, U8 staType)



                                                            ;

typedef S16 (*SctStaCfm) (Pst *pst, SuId suId, UConnId suAssocId, CmNetAddr *dstNAddr, SctResult result, SctCause cause, SctStaInfo *staInfo)





                                                            ;
typedef S16 (*SctStaInd) (Pst *pst, SuId suId, UConnId suAssocId, UConnId spAssocId, CmNetAddr *dstNAddr, SctStatus status, SctCause cause, Buffer *mBuf)






                                                         ;


typedef S16 (*SctFlcInd) (Pst *pst, SuId suId, UConnId suAssocId, Reason reason)


                                                           ;







extern S16 SbUiSctBndReq (Pst *pst, SuId suId, SpId spId)

                                                               ;

extern S16 SbUiSctBndCfm (Pst *pst, SuId suId, SctResult result)

                                                                 ;
extern S16 SbUiSctEndpOpenReq (Pst *pst, SpId spId, UConnId suEndpId, SctPort port, CmNetAddr *intfNAddr)



                                                                    ;

extern S16 SbUiSctEndpOpenCfm (Pst *pst, SuId suId, UConnId suEndpId, UConnId spEndpId, SctResult result, SctCause cause)




                                                                ;

extern S16 SbUiSctEndpCloseReq (Pst *pst, SpId spId, UConnId endpId, U8 endpIdType)


                                                                     ;

extern S16 SbUiSctEndpCloseCfm (Pst *pst, SuId suId, UConnId suEndpId, SctResult result, SctCause cause)



                                                                ;
extern S16 SbUiSctAssocReq (Pst *pst, SpId spId, UConnId spEndpId, UConnId suAssocId, CmNetAddr *priDstNAddr, SctPort dstPort, SctStrmId outStrms, SctNetAddrLst *dstNAddrLst, SctNetAddrLst *srcNAddrLst, Buffer *vsInfo)
                                                                 ;


extern S16 SbUiSctAssocInd (Pst *pst, SuId suId, UConnId suEndpId, SctAssocIndParams *assocParams, Buffer *vsInfo)



                                                                     ;
extern S16 SbUiSctAssocRsp (Pst *pst, SpId spId, UConnId spEndpId, SctAssocIndParams *assocIndParams, SctResult result, Buffer *vsInfo)




                                                                     ;
extern S16 SbUiSctAssocCfm (Pst *pst, SuId suId, UConnId suAssocId, UConnId spAssocId, SctNetAddrLst *dstNAddrLst, SctPort dstPort, SctStrmId outStrms, Buffer *vsInfo)






                                                                 ;



extern S16 SbUiSctTermReq (Pst *pst, SpId spId, UConnId assocId, U8 assocIdType, Bool abrtFlg)



                                                                  ;

extern S16 SbUiSctTermInd (Pst *pst, SuId suId, UConnId assocId, U8 assocIdType, SctStatus status, SctCause cause, SctRtrvInfo *rtrvInfo)





                                                                   ;

extern S16 SbUiSctTermCfm (Pst *pst, SuId suId, UConnId suAssocId, SctResult result, SctCause cause)



                                                                ;

extern S16 SbUiSctSetPriReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr)


                                                                   ;

extern S16 SbUiSctSetPriCfm (Pst *pst, SuId suId, UConnId suAssocId, SctResult result, SctCause cause)



                                                                ;

extern S16 SbUiSctHBeatReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, U16 intervalTime, SctStatus status)




                                                                 ;

extern S16 SbUiSctHBeatCfm (Pst *pst, SuId suId, UConnId suAssocId, CmNetAddr *dstNAddr, SctStatus status, SctResult result, SctCause cause)





                                                                ;

extern S16 SbUiSctDatReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, SctStrmId strmId, Bool unorderFlg, Bool nobundleFlg, U16 lifeTime, U32 protId, Buffer *mBuf)
                                                               ;

extern S16 SbUiSctDatInd (Pst *pst, SuId suId, UConnId suAssocId, SctStrmId strmId, SctDatIndType *indType, U32 protId, Buffer *mBuf)





                                                               ;

extern S16 SbUiSctStaReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, U8 staType)



                                                                  ;

extern S16 SbUiSctStaCfm (Pst *pst, SuId suId, UConnId suAssocId, CmNetAddr *dstNAddr, SctResult result, SctCause cause, SctStaInfo *staInfo)





                                                                  ;
extern S16 SbUiSctStaInd (Pst *pst, SuId suId, UConnId suAssocId, UConnId spAssocId, CmNetAddr *dstNAddr, SctStatus status, SctCause cause, Buffer *mBuf)






                                                      ;

extern S16 SbUiSctFlcInd (Pst *pst, SuId suId, UConnId suAssocId, Reason reason)


                                                                 ;





extern S16 HiUiSctBndReq (Pst *pst, SuId suId, SpId spId)

                                                               ;

extern S16 HiUiSctBndCfm (Pst *pst, SuId suId, SctResult result)

                                                                 ;
extern S16 HiUiSctEndpOpenReq (Pst *pst, SpId spId, UConnId suEndpId, SctPort port, CmNetAddr *intfNAddr)



                                                                    ;

extern S16 HiUiSctEndpOpenCfm (Pst *pst, SuId suId, UConnId suEndpId, UConnId spEndpId, SctResult result, SctCause cause)




                                                                ;

extern S16 HiUiSctEndpCloseReq (Pst *pst, SpId spId, UConnId endpId, U8 endpIdType)


                                                                     ;

extern S16 HiUiSctEndpCloseCfm (Pst *pst, SuId suId, UConnId suEndpId, SctResult result, SctCause cause)



                                                                ;
extern S16 HiUiSctAssocReq (Pst *pst, SpId spId, UConnId spEndpId, UConnId suAssocId, CmNetAddr *priDstNAddr, SctPort dstPort, SctStrmId outStrms, SctNetAddrLst *dstNAddrLst, SctNetAddrLst *srcNAddrLst, Buffer *vsInfo)
                                                                 ;


extern S16 HiUiSctAssocInd (Pst *pst, SuId suId, UConnId suEndpId, SctAssocIndParams *assocParams, Buffer *vsInfo)



                                                                     ;
extern S16 HiUiSctAssocRsp (Pst *pst, SpId spId, UConnId spEndpId, SctAssocIndParams *assocIndParams, SctResult result, Buffer *vsInfo)




                                                                     ;
extern S16 HiUiSctAssocCfm (Pst *pst, SuId suId, UConnId suAssocId, UConnId spAssocId, SctNetAddrLst *dstNAddrLst, SctPort dstPort, SctStrmId outStrms, Buffer *vsInfo)






                                                                 ;



extern S16 HiUiSctTermReq (Pst *pst, SpId spId, UConnId assocId, U8 assocIdType, Bool abrtFlg)



                                                                  ;

extern S16 HiUiSctTermInd (Pst *pst, SuId suId, UConnId assocId, U8 assocIdType, SctStatus status, SctCause cause, SctRtrvInfo *rtrvInfo)





                                                                   ;

extern S16 HiUiSctTermCfm (Pst *pst, SuId suId, UConnId suAssocId, SctResult result, SctCause cause)



                                                                ;

extern S16 HiUiSctSetPriReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr)


                                                                   ;

extern S16 HiUiSctSetPriCfm (Pst *pst, SuId suId, UConnId suAssocId, SctResult result, SctCause cause)



                                                                ;

extern S16 HiUiSctHBeatReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, U16 intervalTime, SctStatus status)




                                                                 ;

extern S16 HiUiSctHBeatCfm (Pst *pst, SuId suId, UConnId suAssocId, CmNetAddr *dstNAddr, SctStatus status, SctResult result, SctCause cause)





                                                                ;

extern S16 HiUiSctDatReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, SctStrmId strmId, Bool unorderFlg, Bool nobundleFlg, U16 lifeTime, U32 protId, Buffer *mBuf)
                                                               ;

extern S16 HiUiSctDatInd (Pst *pst, SuId suId, UConnId suAssocId, SctStrmId strmId, SctDatIndType *indType, U32 protId, Buffer *mBuf)





                                                               ;

extern S16 HiUiSctStaReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, U8 staType)



                                                                  ;

extern S16 HiUiSctStaCfm (Pst *pst, SuId suId, UConnId suAssocId, CmNetAddr *dstNAddr, SctResult result, SctCause cause, SctStaInfo *staInfo)





                                                                  ;
extern S16 HiUiSctStaInd (Pst *pst, SuId suId, UConnId suAssocId, UConnId spAssocId, CmNetAddr *dstNAddr, SctStatus status, SctCause cause, Buffer *mBuf)






                                                               ;


extern S16 HiUiSctFlcInd (Pst *pst, SuId suId, UConnId suAssocId, Reason reason)


                                                                 ;
extern S16 cmPkSctBndReq (Pst *pst, SuId suId, SpId spId)

                                                               ;

extern S16 cmPkSctBndCfm (Pst *pst, SuId suId, SctResult result)

                                                                 ;
extern S16 cmPkSctEndpOpenReq (Pst *pst, SpId spId, UConnId suEndpId, SctPort port, CmNetAddr *intfNAddr)



                                                                    ;


extern S16 cmPkSctEndpOpenCfm (Pst *pst, SuId suId, UConnId suEndpId, UConnId spEndpId, SctResult result, SctCause cause)




                                                                ;

extern S16 cmPkSctEndpCloseReq (Pst *pst, SpId spId, UConnId endpId, U8 endpIdType)


                                                                     ;

extern S16 cmPkSctEndpCloseCfm (Pst *pst, SuId suId, UConnId suEndpId, SctResult result, SctCause cause)



                                                                ;
extern S16 cmPkSctAssocReq (Pst *pst, SpId spId, UConnId spEndpId, UConnId suAssocId, CmNetAddr *priDstNAddr, SctPort dstPort, SctStrmId outStrms, SctNetAddrLst *dstNAddrLst, SctNetAddrLst *srcNAddrLst, Buffer *vsInfo)
                                                                 ;


extern S16 cmPkSctAssocInd (Pst *pst, SuId suId, UConnId suEndpId, SctAssocIndParams *assocParams, Buffer *vsInfo)



                                                                     ;
extern S16 cmPkSctAssocRsp (Pst *pst, SpId spId, UConnId spEndpId, SctAssocIndParams *assocParams, SctResult result, Buffer *vsInfo)




                                                                     ;
extern S16 cmPkSctAssocCfm (Pst *pst, SuId suId, UConnId suAssocId, UConnId spAssocId, SctNetAddrLst *dstNAddrLst, SctPort dstPort, SctStrmId outStrms, Buffer *vsInfo)






                                                                 ;


extern S16 cmPkSctTermReq (Pst *pst, SpId spId, UConnId assocId, U8 assocIdType, Bool abrtFlg)



                                                                  ;

extern S16 cmPkSctTermInd (Pst *pst, SuId suId, UConnId assocId, U8 assocIdType, SctStatus status, SctCause cause, SctRtrvInfo *rtrvInfo)





                                                                   ;

extern S16 cmPkSctTermCfm (Pst *pst, SuId suId, UConnId suAssocId, SctResult result, SctCause cause)



                                                                ;

extern S16 cmPkSctSetPriReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr)


                                                                   ;

extern S16 cmPkSctSetPriCfm (Pst *pst, SuId suId, UConnId suAssocId, SctResult result, SctCause cause)



                                                                ;

extern S16 cmPkSctHBeatReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, U16 intervalTime, SctStatus status)




                                                                 ;

extern S16 cmPkSctHBeatCfm (Pst *pst, SuId suId, UConnId suAssocId, CmNetAddr *dstNAddr, SctStatus status, SctResult result, SctCause cause)





                                                                ;

extern S16 cmPkSctDatReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, SctStrmId strmId, Bool unorderFlg, Bool nobundleFlg, U16 lifeTime, U32 protId, Buffer *mBuf)
                                                               ;

extern S16 cmPkSctDatInd (Pst *pst, SuId suId, UConnId suAssocId, SctStrmId strmId, SctDatIndType *indType, U32 protId, Buffer *mBuf)





                                                               ;

extern S16 cmPkSctStaReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, U8 staType)



                                                                  ;

extern S16 cmPkSctStaCfm (Pst *pst, SuId suId, UConnId suAssocId, CmNetAddr *dstNAddr, SctResult result, SctCause cause, SctStaInfo *staInfo)





                                                                  ;
extern S16 cmPkSctStaInd (Pst *pst, SuId suId, UConnId suAssocId, UConnId spAssocId, CmNetAddr *dstNAddr, SctStatus status, SctCause cause, Buffer *mBuf)






                                                      ;


extern S16 cmPkSctFlcInd (Pst *pst, SuId suId, UConnId suAssocId, Reason reason)


                                                                 ;


extern S16 cmUnpkSctBndReq (SctBndReq func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctBndCfm (SctBndCfm func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctEndpOpenReq (SctEndpOpenReq func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctEndpOpenCfm (SctEndpOpenCfm func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctEndpCloseReq (SctEndpCloseReq func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctEndpCloseCfm (SctEndpCloseCfm func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctAssocReq (SctAssocReq func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctAssocInd (SctAssocInd func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctAssocRsp (SctAssocRsp func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctAssocCfm (SctAssocCfm func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctTermReq (SctTermReq func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctTermInd (SctTermInd func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctTermCfm (SctTermCfm func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctSetPriReq (SctSetPriReq func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctSetPriCfm (SctSetPriCfm func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctHBeatReq (SctHBeatReq func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctHBeatCfm (SctHBeatCfm func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctDatReq (SctDatReq func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctDatInd (SctDatInd func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctStaReq (SctStaReq func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctStaCfm (SctStaCfm func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctStaInd (SctStaInd func, Pst *pst, Buffer *mBuf);

extern S16 cmUnpkSctFlcInd (SctFlcInd func, Pst *pst, Buffer *mBuf);


extern S16 cmPkSctNetAddrLst (SctNetAddrLst *pkParam, Buffer *mBuf);
extern S16 cmUnpkSctNetAddrLst (SctNetAddrLst *pkParam, Buffer *mBuf);
extern S16 SzLiSctBndReq (Pst *pst, SuId suId, SpId spId)

                                                               ;

extern S16 SzLiSctBndCfm (Pst *pst, SuId suId, SctResult result)

                                                                 ;
extern S16 SzLiSctEndpOpenReq (Pst *pst, SpId spId, UConnId suEndpId, SctPort port, CmNetAddr *intfNAddr)



                                                                    ;


extern S16 SzLiSctEndpOpenCfm (Pst *pst, SuId suId, UConnId suEndpId, UConnId spEndpId, SctResult result, SctCause cause)




                                                                ;

extern S16 SzLiSctEndpCloseReq (Pst *pst, SpId spId, UConnId endpId, U8 endpIdType)


                                                                     ;

extern S16 SzLiSctEndpCloseCfm (Pst *pst, SuId suId, UConnId suEndpId, SctResult result, SctCause cause)



                                                                ;
extern S16 SzLiSctAssocReq (Pst *pst, SpId spId, UConnId spEndpId, UConnId suAssocId, CmNetAddr *priDstNAddr, SctPort dstPort, SctStrmId outStrms, SctNetAddrLst *dstNAddrLst, SctNetAddrLst *srcNAddrLst, Buffer *vsInfo)
                                                                 ;




extern S16 SzLiSctAssocInd (Pst *pst, SuId suId, UConnId suEndpId, SctAssocIndParams *assocParams, Buffer *vsInfo)



                                                                     ;
extern S16 SzLiSctAssocRsp (Pst *pst, SpId spId, UConnId spEndpId, SctAssocIndParams *assocIndParams, SctResult result, Buffer *vsInfo)




                                                                     ;
extern S16 SzLiSctAssocCfm (Pst *pst, SuId suId, UConnId suAssocId, UConnId spAssocId, SctNetAddrLst *dstNAddrLst, SctPort dstPort, SctStrmId outStrms, Buffer *vsInfo)






                                                                 ;


extern S16 SzLiSctTermReq (Pst *pst, SpId spId, UConnId assocId, U8 assocIdType, Bool abrtFlg)



                                                                  ;

extern S16 SzLiSctTermInd (Pst *pst, SuId suId, UConnId assocId, U8 assocIdType, SctStatus status, SctCause cause, SctRtrvInfo *rtrvInfo)





                                                                   ;

extern S16 SzLiSctTermCfm (Pst *pst, SuId suId, UConnId suAssocId, SctResult result, SctCause cause)



                                                                ;
extern S16 SzLiSctStaReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, U8 staType )



                                                                   ;

extern S16 SzLiSctDatReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, SctStrmId strmId, Bool unorderFlg, Bool nobundleFlg, U16 lifeTime, U32 protId, Buffer *mBuf)
                                                               ;

extern S16 SzLiSctDatInd (Pst *pst, SuId suId, UConnId suAssocId, SctStrmId strmId, SctDatIndType *indType, U32 protId, Buffer *mBuf)





                                                               ;
extern S16 SzLiSctStaInd (Pst *pst, SuId suId, UConnId suAssocId, UConnId spAssocId, CmNetAddr *dstNAddr, SctStatus status, SctCause cause, Buffer *mBuf)






                                                               ;


extern S16 SzLiSctFlcInd (Pst *pst, SuId suId, UConnId suAssocId, Reason reason)


                                                                 ;




extern S16 CzLiSctBndReq (Pst *pst, SuId suId, SpId spId)

                                                               ;

extern S16 CzLiSctBndCfm (Pst *pst, SuId suId, SctResult result)

                                                                 ;
extern S16 CzLiSctEndpOpenReq (Pst *pst, SpId spId, UConnId suEndpId, SctPort port, CmNetAddr *intfNAddr)



                                                                    ;


extern S16 CzLiSctEndpOpenCfm (Pst *pst, SuId suId, UConnId suEndpId, UConnId spEndpId, SctResult result, SctCause cause)




                                                                ;

extern S16 CzLiSctEndpCloseReq (Pst *pst, SpId spId, UConnId endpId, U8 endpIdType)


                                                                     ;

extern S16 CzLiSctEndpCloseCfm (Pst *pst, SuId suId, UConnId suEndpId, SctResult result, SctCause cause)



                                                                ;
extern S16 CzLiSctAssocReq (Pst *pst, SpId spId, UConnId spEndpId, UConnId suAssocId, CmNetAddr *priDstNAddr, SctPort dstPort, SctStrmId outStrms, SctNetAddrLst *dstNAddrLst, SctNetAddrLst *srcNAddrLst, Buffer *vsInfo)
                                                                 ;




extern S16 CzLiSctAssocInd (Pst *pst, SuId suId, UConnId suEndpId, SctAssocIndParams *assocParams, Buffer *vsInfo)



                                                                     ;
extern S16 CzLiSctAssocRsp (Pst *pst, SpId spId, UConnId spEndpId, SctAssocIndParams *assocIndParams, SctResult result, Buffer *vsInfo)




                                                                     ;
extern S16 CzLiSctAssocCfm (Pst *pst, SuId suId, UConnId suAssocId, UConnId spAssocId, SctNetAddrLst *dstNAddrLst, SctPort dstPort, SctStrmId outStrms, Buffer *vsInfo)






                                                                 ;


extern S16 CzLiSctTermReq (Pst *pst, SpId spId, UConnId assocId, U8 assocIdType, Bool abrtFlg)



                                                                  ;

extern S16 CzLiSctTermInd (Pst *pst, SuId suId, UConnId assocId, U8 assocIdType, SctStatus status, SctCause cause, SctRtrvInfo *rtrvInfo)





                                                                   ;

extern S16 CzLiSctTermCfm (Pst *pst, SuId suId, UConnId suAssocId, SctResult result, SctCause cause)



                                                                ;
extern S16 CzLiSctSetPriReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr)


                                                                   ;

extern S16 CzLiSctSetPriCfm (Pst *pst, SuId suId, UConnId suAssocId, SctResult result, SctCause cause)



                                                                ;

extern S16 CzLiSctHBeatReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, U16 intervalTime, SctStatus status)




                                                                 ;

extern S16 CzLiSctHBeatCfm (Pst *pst, SuId suId, UConnId suAssocId, CmNetAddr *dstNAddr, SctStatus status, SctResult result, SctCause cause)





                                                                ;
extern S16 CzLiSctStaCfm (Pst *pst, SuId suId, UConnId suAssocId, CmNetAddr *dstNAddr, SctResult result, SctCause cause, SctStaInfo *staInfo)





                                                                  ;
extern S16 CzLiSctStaReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, U8 staType )



                                                                   ;

extern S16 CzLiSctDatReq (Pst *pst, SpId spId, UConnId spAssocId, CmNetAddr *dstNAddr, SctStrmId strmId, Bool unorderFlg, Bool nobundleFlg, U16 lifeTime, U32 protId, Buffer *mBuf)
                                                               ;

extern S16 CzLiSctDatInd (Pst *pst, SuId suId, UConnId suAssocId, SctStrmId strmId, SctDatIndType *indType, U32 protId, Buffer *mBuf)





                                                               ;
extern S16 CzLiSctStaInd (Pst *pst, SuId suId, UConnId suAssocId, UConnId spAssocId, CmNetAddr *dstNAddr, SctStatus status, SctCause cause, Buffer *mBuf)






                                                               ;

extern S16 CzLiSctFlcInd (Pst *pst, SuId suId, UConnId suAssocId, Reason reason)


                                                                 ;
typedef struct rgGenCfg
{
   Pst lmPst;
   MemoryId mem;
   U8 tmrRes;
   U8 numRguSaps;
   U8 startCellId;







}RgGenCfg;




typedef struct rgUpSapCfg
{
   Selector selector;
   MemoryId mem;
   Priority prior;
   ProcId procId;
   Ent ent;
   Inst inst;
   Route route;
   SpId spId;
   SuId suId;
}RgUpSapCfg;




typedef struct rgLowSapCfg
{
   Selector selector;
   MemoryId mem;
   Priority prior;
   ProcId procId;
   Ent ent;
   Inst inst;
   Route route;
   SpId spId;
   SuId suId;
   TmrCfg bndTmr;
}RgLowSapCfg;
typedef struct rgGenSts
{
   U32 numHarqFail;
   U32 numUeCfg;
   U16 numCellCfg;




}RgGenSts;




typedef struct rgSapSts
{
   U32 numPduRcvd;

   U32 numPduTxmit;

   U32 numPduDrop;

}RgSapSts;

typedef struct rgSchInstCfg
{
   U8 instId;
   RgGenCfg genCfg;
   U8 numSaps;
   RgUpSapCfg rgrSap[2];
   RgUpSapCfg rgmSap[2];
   RgLowSapCfg tfuSap[2];
} RgSchInstCfg;




typedef struct rgCfg
{
   union
   {
      RgGenCfg genCfg;

      RgUpSapCfg rguSap;
      RgUpSapCfg crgSap;
      RgLowSapCfg tfuSap;
      RgSchInstCfg schInstCfg;
   }s;
}RgCfg;




typedef struct rgSapSta
{
   U8 sapState;
}RgSapSta;




typedef struct rgSts
{
   DateTime dt;
   U8 sapInst;
   Action action;

   union
   {
      RgGenSts genSts;
      RgSapSts rguSts;
      RgSapSts crgSts;
      RgSapSts rgrSts;
      RgSapSts tfuSts;
   }s;
}RgSts;




typedef struct rgSsta
{
   DateTime dt;
   U8 sapInst;
   union
   {
      SystemId sysId;
      RgSapSta rguSapSta;
      RgSapSta crgSapSta;
      RgSapSta rgrSapSta;
      RgSapSta rgmSapSta;
      RgSapSta tfuSapSta;
   }s;
}RgSsta;




typedef struct rgUstaDgn
{
   U8 type;
   union
   {

      MemoryId mem;



   }u;
} RgUstaDgn;




typedef struct rgUsta
{
   CmAlarm cmAlarm;
   RgUstaDgn dgn;
}RgUsta;




typedef struct rgTrc
{
   DateTime dt;

   U8 evnt;



}RgTrc;




typedef struct rgDbgCntrl
{
   U32 dbgMask;





}RgDbgCntrl;




typedef struct rgSapCntrl
{
   SuId suId;
   SpId spId;
}RgSapCntrl;
typedef struct rgCntrl
{
   DateTime dt;
   U8 action;
   U8 subAction;
   U8 instId;
   union
   {
      RgDbgCntrl rgDbgCntrl;

      S16 trcLen;




      RgSapCntrl rgSapCntrl;
      U32 logMask;



   }s;
}RgCntrl;




typedef struct rgMngmt
{
   Header hdr;
   CmStatus cfm;
   union
   {
      RgCfg cfg;
      RgSts sts;
      RgSsta ssta;
      RgUsta usta;
      RgTrc trc;
      RgCntrl cntrl;
   }t;
}RgMngmt;
typedef S16 (*LrgCfgReq) ( Pst *pst, RgMngmt *cfg )


       ;

typedef S16 (*LrgSchCfgReq) ( Pst *pst, RgMngmt *cfg )


       ;

typedef S16 (*LrgCfgCfm) ( Pst *pst, RgMngmt *cfg )


       ;

typedef S16 (*LrgSchCfgCfm) ( Pst *pst, RgMngmt *cfg )


       ;

typedef S16 (*LrgCntrlReq) ( Pst *pst, RgMngmt *cntrl )


       ;

typedef S16 (*LrgSchCntrlReq) ( Pst *pst, RgMngmt *cntrl )


       ;

typedef S16 (*LrgCntrlCfm) ( Pst *pst, RgMngmt *cntrl )


       ;

typedef S16 (*LrgSchCntrlCfm) ( Pst *pst, RgMngmt *cntrl )


       ;
typedef S16 (*LrgStaReq) ( Pst *pst, RgMngmt *sta )


       ;

typedef S16 (*LrgStaCfm) ( Pst *pst, RgMngmt *sta )


       ;

typedef S16 (*LrgStaInd) ( Pst *pst, RgMngmt *sta )


       ;

typedef S16 (*LrgSchStaInd) ( Pst *pst, RgMngmt *sta )


       ;

typedef S16 (*LrgStsReq) ( Pst *pst, RgMngmt *sts )


       ;

typedef S16 (*LrgStsCfm) ( Pst *pst, RgMngmt *sts )


       ;

typedef S16 (*LrgTrcInd) ( Pst *pst, RgMngmt *trc, Buffer *mBuf )



       ;
extern S16 smRgActvInit (Ent ent,Inst inst, Region region,Reason reason);
extern S16 smRgActvTsk (Pst *pst, Buffer *mBuf);
extern S16 SmMiLrgCfgReq (Pst *pst, RgMngmt *cfg);
extern S16 SmMiLrgCfgCfm (Pst *pst, RgMngmt *cfm);
extern S16 SmMiLrgSchCfgReq (Pst *pst, RgMngmt *cfg);
extern S16 SmMiLrgSchCfgCfm (Pst *pst, RgMngmt *cfm);
extern S16 SmMiLrgStsReq (Pst *pst, RgMngmt *sts);
extern S16 SmMiLrgStsCfm (Pst *pst, RgMngmt *cfm);
extern S16 SmMiLrgStaReq (Pst *pst, RgMngmt *sta);
extern S16 SmMiLrgStaCfm (Pst *pst, RgMngmt *cfm);
extern S16 SmMiLrgStaInd (Pst *pst, RgMngmt *usta);
extern S16 SmMiLrgCntrlReq (Pst *pst, RgMngmt *cntrl);
extern S16 SmMiLrgSchStaInd (Pst *pst, RgMngmt *usta);
extern S16 SmMiLrgCntrlCfm ( Pst *pst, RgMngmt *cfm);
extern S16 SmMiLrgSchCntrlReq (Pst *pst, RgMngmt *cntrl);
extern S16 SmMiLrgSchCntrlCfm ( Pst *pst, RgMngmt *cfm);
extern S16 SmMiLrgTrcInd (Pst *pst, RgMngmt *trc, Buffer *mBuf);
extern S16 cmPkLrgCfgReq ( Pst * pst, RgMngmt * cfg )


  ;


extern S16 cmUnpkLrgCfgReq ( LrgCfgReq func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkLrgSchCfgReq ( Pst * pst, RgMngmt * cfg )


  ;


extern S16 cmUnpkLrgSchCfgReq ( LrgSchCfgReq func, Pst * pst, Buffer *mBuf )



  ;
extern S16 cmPkLrgCfgCfm ( Pst * pst, RgMngmt * cfm )


  ;


extern S16 cmUnpkLrgCfgCfm ( LrgCfgCfm func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkLrgSchCfgCfm ( Pst * pst, RgMngmt * cfg )


  ;


extern S16 cmUnpkLrgSchCfgCfm ( LrgSchCfgCfm func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkLrgStsReq ( Pst * pst, RgMngmt * sts )


  ;


extern S16 cmUnpkLrgStsReq ( LrgStsReq func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkLrgStsCfm ( Pst * pst, RgMngmt * cfm )


  ;


extern S16 cmUnpkLrgStsCfm ( LrgStsCfm func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkLrgStaReq ( Pst * pst, RgMngmt * sta )


  ;


extern S16 cmUnpkLrgStaReq ( LrgStaReq func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkLrgStaCfm ( Pst * pst, RgMngmt * cfm )


  ;


extern S16 cmUnpkLrgStaCfm ( LrgStaCfm func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkLrgStaInd ( Pst * pst, RgMngmt * usta )


  ;


extern S16 cmUnpkLrgStaInd ( LrgStaInd func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkLrgSchStaInd ( Pst * pst, RgMngmt * sta )


  ;


extern S16 cmUnpkLrgSchStaInd ( LrgSchStaInd func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkLrgCntrlReq ( Pst * pst, RgMngmt * cntrl )


  ;


extern S16 cmUnpkLrgCntrlReq ( LrgCntrlReq func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkLrgSchCntrlReq ( Pst * pst, RgMngmt * cntrl )


  ;


extern S16 cmUnpkLrgSchCntrlReq ( LrgSchCntrlReq func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkLrgCntrlCfm ( Pst * pst, RgMngmt * cfm )


  ;


extern S16 cmUnpkLrgCntrlCfm ( LrgCntrlCfm func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkLrgSchCntrlCfm ( Pst * pst, RgMngmt * cntrl )


  ;


extern S16 cmUnpkLrgSchCntrlCfm ( LrgSchCntrlCfm func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkLrgTrcInd ( Pst * pst, RgMngmt * trc, Buffer * trcBuf )



  ;


extern S16 cmUnpkLrgTrcInd ( LrgTrcInd func, Pst * pst, Buffer *mBuf )



  ;
extern S16 cmPkRgGenCfg ( RgGenCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgGenCfg ( RgGenCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgUpSapCfg ( RgUpSapCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgUpSapCfg ( RgUpSapCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgLowSapCfg ( RgLowSapCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgLowSapCfg ( RgLowSapCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgGenSts ( RgGenSts *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgGenSts ( RgGenSts *param, Buffer *mBuf )


  ;
extern S16 cmPkRgSapSts ( RgSapSts *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgSapSts ( RgSapSts *param, Buffer *mBuf )


  ;
extern S16 cmPkRgSchInstCfg ( RgSchInstCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgSchInstCfg ( RgSchInstCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRgCfg ( RgCfg *param, S16 elmnt, Buffer *mBuf )



  ;
extern S16 cmUnpkRgCfg ( RgCfg *param, S16 elmnt, Buffer *mBuf )



  ;
extern S16 cmPkRgSapSta ( RgSapSta *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgSapSta ( RgSapSta *param, Buffer *mBuf )


  ;
extern S16 cmPkRgSts ( RgSts *param, S16 elmnt, Buffer *mBuf )



  ;
extern S16 cmUnpkRgSts ( RgSts *param, S16 elmnt, Buffer *mBuf )



  ;
extern S16 cmPkRgSsta ( Pst *pst, RgSsta *param, S16 elmnt, Buffer *mBuf )




  ;

extern S16 cmUnpkRgSsta ( Pst *pst, RgSsta *param, S16 elmnt, Buffer *mBuf )




  ;
extern S16 cmPkRgUstaDgn ( RgUstaDgn *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgUstaDgn ( RgUstaDgn *param, Buffer *mBuf )


  ;
extern S16 cmPkRgUsta ( RgUsta *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgUsta ( RgUsta *param, Buffer *mBuf )


  ;
extern S16 cmPkRgTrc ( RgTrc *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgTrc ( RgTrc *param, Buffer *mBuf )


  ;
extern S16 cmPkRgDbgCntrl ( RgDbgCntrl *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgDbgCntrl ( RgDbgCntrl *param, Buffer *mBuf )


  ;
extern S16 cmPkRgSapCntrl ( RgSapCntrl *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRgSapCntrl ( RgSapCntrl *param, Buffer *mBuf )


  ;
extern S16 cmPkRgCntrl ( RgCntrl *param, S16 elmnt, Buffer *mBuf )



  ;
extern S16 cmUnpkRgCntrl ( RgCntrl *param, S16 elmnt, Buffer *mBuf )



  ;
extern S16 cmPkRgMngmt ( Pst *pst, RgMngmt *param, U8 eventType, Buffer *mBuf )




  ;
extern S16 cmUnpkRgMngmt ( Pst *pst, RgMngmt *param, U8 eventType, Buffer *mBuf )




  ;
typedef enum egtMsgType
{
   EGT_GTP_MSG_INVALID = 0,
   EGT_GTPU_MSG_ECHO_REQ = 1,
   EGT_GTPU_MSG_ECHO_RSP = 2,
   EGT_GTPU_MSG_ERROR_IND = 26,
   EGT_GTPU_MSG_SUPP_EXT_HDR_NTF = 31,
   EGT_GTPU_MSG_END_MARKER = 254,
   EGT_GTPU_MSG_GPDU,

   EGT_GTP_MSG_MAX
}EgtMsgType;
typedef enum _egtIntfEnt
{
   EGT_INT_S1_U_ENB_GTP_U = 0,
   EGT_INT_S1_U_SGW_GTP_U,
   EGT_INT_S12_RNC_GTP_U,
   EGT_INT_S12_SGW_GTP_U,
   EGT_INT_S5_S8_SGW_GTP_U,
   EGT_INT_S5_S8_PGW_GTP_U = 5,
   EGT_INT_S5_S8_SGW_GTP_C,
   EGT_INT_S5_S8_PGW_GTP_C,
   EGT_INT_S5_S8_SGW_PMIPv6,
   EGT_INT_S5_S8_PGW_PMIPv6,
   EGT_INT_S11_MME_GTP_C = 10,
   EGT_INT_S11_S4_SGW_GTP_C,
   EGT_INT_S10_MME_GTP_C,
   EGT_INT_S3_MME_GTP_C,
   EGT_INT_S3_SGSN_GTP_C,
   EGT_INT_S4_SGSN_GTP_U = 15,
   EGT_INT_S4_SGW_GTP_U,
   EGT_INT_S4_SGSN_GTP_C,
   EGT_INT_S16_SGSN_GTP_C,
   EGT_INT_X2_DL_ENB_GTP_U,
   EGT_INT_X2_UL_ENB_GTP_U = 20,
   EGT_INT_RNC_GTP_U,
   EGT_INT_SGSN_GTP_U,
   EGT_INT_SGW_GTP_U,
   EGT_INT_ENTINVALID
}EgtIntfEnt;
typedef enum _egtErrType
{
   EGT_ERR_NO_ERR,
   EGT_ERR_REQ_FAIL,
   EGT_ERR_TEID_EXHAUSTED,
   EGT_ERR_UNKNOWN_TEID_MSG,
   EGT_ERR_INV_INTF_TYPE,
   EGT_ERR_INV_TUNN_NET_EVNT,
   EGT_ERR_INV_TUNN_USR_EVNT,
   EGT_ERR_MSG_INV_INT,
   EGT_ERR_MSG_NO_MATCH,
   EGT_ERR_MSG_UNABLE_TO_COMPLY,
   EGT_ERR_MSG_MISS_MAND_IE,
   EGT_ERR_MSG_INV_LEN,
   EGT_ERR_MSG_INV_VERSION,
   EGT_ERR_MSG_INV_HDR,
   EGT_ERR_MSG_INV_TYPE,
   EGT_ERR_IE_UNKNOWN,
   EGT_ERR_IE_INV_LEN,
   EGT_ERR_INV_IE_TYPE,
   EGT_ERR_INV_IE_VAL,
   EGT_ERR_MEM_ALLOC_FAILED,
   EGT_ERR_INV_TEID,
   EGT_ERR_DFTL_SRV_NOT_PRSNT,
   EGT_ERR_TIMER_FAILED,
   EGT_ERR_MSG_SNDING_FAIL,
   EGT_ERR_INV_SAP,
   EGT_ERR_INV_IE_DATA_TYPE,
   EGT_ERR_UNKNOWN_TV,
   EGT_ERR_IE_NOT_ASCD_ORDER,
   EGT_ERR_UNSUPP_EXT_HDR,
   EGT_ERR_WRONG_EXT_HDR,
   EGT_ERR_MSG_INV_PTTYPE,
   EGT_ERR_MAN_IE_INV_LEN,
   EGT_ERR_NO_SEQ,
   EGT_ERR_MAX_TDPU_SIZE_EXCED,
   EGT_ERR_INV_DATA_TYPE,
   EGT_ERR_INV_PARAM,
   EGT_ERR_INV_DST_IP,
   EGT_ERR_MSG_NOT_ALLWD,
   EGT_ERR_DST_MULT_IP,
   EGT_ERR_INV_SRC_IP,
   EGT_ERR_INV_SRC_PORT,
   EGT_ERR_CAUSE_MEM_FAIL,
   EGT_ERR_INV_TEID_RCVD,
   EGT_ERR_PENDING_CNTRL_OP,
   EGT_ERR_END_MARKER_RCVD,
   EGT_ERR_MSG_INVOVR_LEN_PBMSG,



   EGT_ERR_MAX_RETRY_EXHAUSTED,
   EGT_ERR_INV_SEQ_NUM,

   EGT_ERR_INV_PIGGY_MSG,

   EGT_ERR_RSP_PIGGY_TMR_EXP,

   EGT_ERR_MAX_ERR

}EgtErrType;
typedef struct _egDatStr132
{
   U16 length;
   U8 val[132];
   U16 spare1;



} EgDatStr132;
typedef struct _egPvtExt
{
   U16 entId;
   EgDatStr132 propVal;
} EgPvtExt;
typedef struct _egErrEvnt
{
   U32 localTeid;
   U32 transId;
   U32 remTeid;
   CmTptAddr remAddr;
   U8 intfType;


   U32 seqNo;
   EgtErrType errCause;
   U8 failedIeInst;
   U8 failedIeType;
   U8 failedMsgType;
} EgErrEvnt;





typedef struct _egUExtHdr
{
   TknU16 udpPort;
   TknU16 pdcpNmb;
} EgUExtHdr;





typedef struct _egUMsgHdr
{
   TknU8 nPduNmb;
   TknU32 seqNumber;
   EgUExtHdr extHdr;
   U32 teId;
   U8 msgType;
}EgUMsgHdr;

typedef struct _egUMsg EgUMsg;




struct _egUMsg
{






   CmMemListCp memCp;

   EgUMsgHdr msgHdr;
   CmTptAddr srcAddr;
   CmTptAddr remAddr;
   U32 lclTeid;
   union
   {
      CmLListCp egIeList;
      Buffer *mBuf;
   }u;
   EgUMsg *next;
};




typedef struct _egUIpAddr
{
   U8 addrType;
   union
   {
      CmIpAddr ipv4;



   } u;
} EgUIpAddr;



typedef struct _egUExtHdrTypeLst
{
   U8 noOfExtHdrs;
   U8 extType[2];
} EgUExtHdrTypeLst;



typedef struct _egUIe
{
  CmLList node;
  U8 ieType;
  U8 dataType;
  union
  {
     U8 valUnSgnd8;
     U32 valUnSgnd32;
     EgPvtExt pvtExt;
     EgUIpAddr ipAddr;
     EgUExtHdrTypeLst extHdrTypeLst;
  }t;
} EgUIe;



typedef struct _egUStatus
{
   CmTptAddr srcAddr;
   CmTptAddr dstAddr;
   CmStatus cfmStatus;
} EgUStatus;



typedef struct _egUErrEvnt
{
   U32 localTeid;
   U32 remTeid;
   EgtErrType errCause;
   CmTptAddr srcAddr;
   CmTptAddr dstAddr;
   U32 diagInfo;
   U8 failedIeType;
   U8 failedMsgType;
} EgUErrEvnt;



typedef struct _egUTnlMgmt
{
   U8 action;
   U8 intfType;

   U8 dscp;
   Bool reOrderPres;


   U8 tunnelType;


   U32 teId;
   U32 remTeId;
   U8 reordAlgo;

   U16 expSeqNmb;
   CmTptAddr srcAddr;
   CmTptAddr dstIpAddr;
   CmTptAddr frmDstIpAddr;
   U16 maxTPduSize;
   CmStatus cfmStatus;
} EgUTnlMgmt;



typedef struct _egtUEvnt
{
   U8 event;
   union
   {
      EgUTnlMgmt tnlMgmt;
      EgUMsg *egMsg;
      EgUStatus status;
      EgUStatus uStaInd;
      EgUErrEvnt errInd;
   } u;
} EgtUEvnt;
typedef S16 (*EgtBndReq) ( Pst *pst, SuId suId, SpId spId)


                                  ;

typedef S16 (*EgtBndCfm) ( Pst *pst, SuId suId, U8 status)


                                    ;

typedef S16 (*EgtUbndReq) ( Pst *pst, SpId spId, Reason reason)


                                    ;
typedef S16 (*EgtEguDatReq) ( Pst *pst, SpId spId, EgtUEvnt *datReq)


                                     ;


typedef S16 (*EgtEguDatInd) ( Pst *pst, SuId suId, EgtUEvnt *datInd)


                                     ;


typedef S16 (*EgtEguLclTnlMgmtReq) ( Pst *pst, SpId spId, EgtUEvnt *mgmtReq)


                                      ;


typedef S16 (*EgtEguLclTnlMgmtCfm) ( Pst *pst, SuId suId, EgtUEvnt *mgmtCfm)


                                      ;


typedef S16 (*EgtEguStaReq) ( Pst *pst, SpId spId, EgtUEvnt *staReq)


                                     ;


typedef S16 (*EgtEguStaCfm) ( Pst *pst, SuId suId, EgtUEvnt *staCfm)


                                     ;


typedef S16 (*EgtEguUStaInd) ( Pst *pst, SuId suId, EgtUEvnt *uStaInd)


                                      ;


typedef S16 (*EgtEguErrInd) ( Pst *pst, SuId suId, EgtUEvnt *errInd)


                                     ;
extern S16 EgUiEgtBndReq ( Pst *pst, SuId suId, SpId spId);
extern S16 EgUiEgtBndCfm ( Pst *pst, SuId suId, U8 status);
extern S16 EgUiEgtUbndReq ( Pst *pst, SpId spId, Reason reason);
extern S16 EgUiEgtEguDatReq (Pst *pst, SpId spId, EgtUEvnt *egtUEvnt);
extern S16 EgUiEgtEguDatInd (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);
extern S16 EgUiEgtEguLclTnlMgmtReq (Pst *pst, SpId spId, EgtUEvnt *egtUEvnt);
extern S16 EgUiEgtEguLclTnlMgmtCfm (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);
extern S16 EgUiEgtEguStaReq (Pst *pst, SpId spId, EgtUEvnt *egtUEvnt);
extern S16 EgUiEgtEguStaCfm (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);
extern S16 EgUiEgtEguUStaInd (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);
extern S16 EgUiEgtEguErrInd (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);







extern S16 EuLiEgtBndReq ( Pst *pst, SuId suId, SpId spId);

extern S16 EuLiEgtBndCfm ( Pst *pst, SuId suId, U8 status);

extern S16 EuLiEgtUbndReq ( Pst *pst, SpId spId, Reason reason);
extern S16 EuLiEgtEguDatReq (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);
extern S16 EuLiEgtEguDatInd (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);

extern S16 EuLiEgtEguLclTnlMgmtReq (Pst *pst, SpId spId, EgtUEvnt *egtUEvnt);
extern S16 EuLiEgtEguLclTnlMgmtCfm (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);

extern S16 EuLiEgtEguStaReq (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);
extern S16 EuLiEgtEguStaCfm (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);

extern S16 EuLiEgtEguUStaInd (Pst *pst, SuId suId, EgtUEvnt *egtUEvnt);

extern S16 EuLiEgtEguErrInd (Pst *pst, SpId spId, EgtUEvnt *egtUEvnt);
extern S16 cmPkEgtBndReq
( Pst* pst, SuId suId, SpId spId )



  ;

extern S16 cmUnpkEgtBndReq
( EgtBndReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmPkEgtBndCfm
( Pst * pst, SuId suId, U8 status )



  ;

extern S16 cmUnpkEgtBndCfm
( EgtBndCfm func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmPkEgtUbndReq
( Pst * pst, SpId spId, Reason reason )



  ;

extern S16 cmUnpkEgtUbndReq
( EgtUbndReq func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmPkEgDatStr132
( EgDatStr132 *param, Buffer *mBuf )


  ;

extern S16 cmUnpkEgDatStr132
( EgDatStr132 *param, Buffer *mBuf )


  ;
extern S16 cmPkEgPvtExt
( EgPvtExt *param, Buffer *mBuf )


  ;

extern S16 cmUnpkEgPvtExt
( EgPvtExt *param, Buffer *mBuf )


  ;


extern S16 cmPkEgtEguDatReq ( Pst *pst, SpId spId, EgtUEvnt *egtUEvnt )




  ;

extern S16 cmUnpkEgtEguDatReq ( EgtEguDatReq func, Pst *pst, Buffer *mBuf, Mem *memInfo )





  ;

extern S16 cmPkEgtEguDatInd ( Pst *pst, SuId suId, EgtUEvnt *egtUEvnt )




  ;

extern S16 cmUnpkEgtEguDatInd ( EgtEguDatInd func, Pst *pst, Buffer *mBuf )




  ;

extern S16 cmPkEgtEguLclTnlMgmtReq ( Pst *pst, SpId spId, EgtUEvnt *egtUEvnt )




  ;

extern S16 cmUnpkEgtEguLclTnlMgmtReq ( EgtEguLclTnlMgmtReq func, Pst *pst, Buffer *mBuf, Mem *memInfo )





  ;

extern S16 cmPkEgtEguLclTnlMgmtCfm ( Pst *pst, SuId suId, EgtUEvnt *egtUEvnt )




  ;

extern S16 cmUnpkEgtEguLclTnlMgmtCfm ( EgtEguLclTnlMgmtCfm func, Pst *pst, Buffer *mBuf )




  ;

extern S16 cmPkEgtEguStaReq ( Pst *pst, SpId spId, EgtUEvnt *egtUEvnt )




  ;

extern S16 cmUnpkEgtEguStaReq ( EgtEguStaReq func, Pst *pst, Buffer *mBuf, Mem *memInfo )





  ;

extern S16 cmPkEgtEguStaCfm ( Pst *pst, SuId suId, EgtUEvnt *egtUEvnt )




  ;

extern S16 cmUnpkEgtEguStaCfm ( EgtEguStaCfm func, Pst *pst, Buffer *mBuf )




  ;

extern S16 cmPkEgtEguUStaInd ( Pst *pst, SuId suId, EgtUEvnt *egtUEvnt )




  ;

extern S16 cmUnpkEgtEguUStaInd ( EgtEguUStaInd func, Pst *pst, Buffer *mBuf )




  ;

extern S16 cmPkEgtEguErrInd ( Pst *pst, SuId suId, EgtUEvnt *egtUEvnt )




  ;

extern S16 cmUnpkEgtEguErrInd ( EgtEguErrInd func, Pst *pst, Buffer *mBuf )




  ;

extern S16 cmPkEgUExtHdr ( EgUExtHdr *pkStruct, Buffer *mBuf )



  ;

extern S16 cmUnpkEgUExtHdr ( EgUExtHdr *unpkStruct, Buffer *mBuf )



  ;

extern S16 cmPkEgUMsgHdr ( EgUMsgHdr *pkStruct, Buffer *mBuf )



  ;

extern S16 cmUnpkEgUMsgHdr ( EgUMsgHdr *unpkStruct, Buffer *mBuf )



  ;

extern S16 cmPkEgUMsg ( EgUMsg *pkStruct, Buffer *mBuf )



  ;

extern S16 cmUnpkEgUMsg ( EgUMsg *unpkStruct, Buffer *mBuf, Mem memInfo )




  ;

extern S16 cmPkEgUIpAddr ( EgUIpAddr *pkStruct, Buffer *mBuf )



  ;

extern S16 cmUnpkEgUIpAddr ( EgUIpAddr *unpkStruct, Buffer *mBuf )



  ;

extern S16 cmPkEgUExtHdrTypeLst ( EgUExtHdrTypeLst *pkStruct, Buffer *mBuf )



  ;

extern S16 cmUnpkEgUExtHdrTypeLst ( EgUExtHdrTypeLst *unpkStruct, Buffer *mBuf )



  ;

extern S16 cmPkEgUIeList ( CmLListCp *pkList, Buffer *mBuf, CmMemListCp *memCp )




  ;

extern S16 cmUnpkEgUIeList ( CmLListCp *unpkList, Buffer *mBuf, CmMemListCp *memCp )




  ;

extern S16 cmPkEgUIe ( EgUIe *pkStruct, Buffer *mBuf )



  ;

extern S16 cmUnpkEgUIe ( EgUIe *unpkStruct, Buffer *mBuf )



  ;

extern S16 cmPkEgUStatus ( EgUStatus *pkStruct, Buffer *mBuf )



  ;

extern S16 cmUnpkEgUStatus ( EgUStatus *unpkStruct, Buffer *mBuf )



  ;

extern S16 cmPkEgUErrEvnt ( EgUErrEvnt *pkStruct, Buffer *mBuf )



  ;

extern S16 cmUnpkEgUErrEvnt ( EgUErrEvnt *unpkStruct, Buffer *mBuf )



  ;

extern S16 cmPkEgUTnlMgmt ( EgUTnlMgmt *pkStruct, Buffer *mBuf )



  ;

extern S16 cmUnpkEgUTnlMgmt ( EgUTnlMgmt *unpkStruct, Buffer *mBuf )



  ;

extern S16 cmPkEgtUEvnt ( EgtUEvnt *pkStruct, Buffer *mBuf )



  ;

extern S16 cmUnpkEgtUEvnt ( EgtUEvnt *unpkStruct, Buffer *mBuf, Pst *pst )




  ;
typedef struct nlMemMngr
{
   U32 nlPool;
   U32 nlRegion;
}NlMemMngr;

typedef enum nlPciSelType
{
   NL_PCI_SEL_DISABLE,
   NL_PCI_SEL_DSON,
   NL_PCI_SEL_CSON
}NlPciSelType;

typedef enum nlPrachSelType
{
   NL_PRACH_SEL_DISABLE,
   NL_PRACH_SEL_DSON,
   NL_PRACH_SEL_CSON
}NlPrachSelType;

typedef enum nlEarfcnSelType
{
   NL_EARFCN_SEL_DISABLE,
   NL_EARFCN_SEL_DSON,
   NL_EARFCN_SEL_CSON
}NlEarfcnSelType;

typedef enum nlTxPowerSelType
{
   NL_TXPOWER_SEL_DISABLE,
   NL_TXPOWER_SEL_DSON,
   NL_TXPOWER_SEL_CSON
}NlTxPowerSelType;




typedef struct nlGenCfg
{
   Pst lmPst;
   MemoryId mem;
   U8 tmrRes;
   U8 maxNluSaps;
   NlPciSelType pciSelType;
   NlPrachSelType prachSelType;
   NlEarfcnSelType earfcnSelType;
   NlTxPowerSelType txPowerSelType;
   U32 maxUeSupp;
   U32 maxUePerTti;
}NlGenCfg;




typedef struct nlUSapCfg
{
   Selector selector;
   MemoryId mem;
   Priority prior;
   ProcId procId;
   Ent ent;
   Inst inst;
   Route route;
   SpId spId;
   SuId suId;
}NlUSapCfg;



typedef struct lnlPlmnId
{
   U8 numMncDigits;
   U8 mcc[3];
   U8 mnc[3];
}LnlPlmnId;



typedef struct lnlEcgi
{
   LnlPlmnId plmn;
   U32 cellId;
}LnlEcgi;




typedef struct nlCfg
{
   union
   {
      NlGenCfg genCfg;

      NlUSapCfg nluSap;
   }u;
}NlCfg;




typedef struct nlCntrl
{
   U8 action;
}NlCntrl;

typedef enum lnlCfgType
{
   LNL_CELL_CFG,
   LNL_NGH_CELL_CFG,
   LNL_CELL_RECFG
}LnlCfgType;



typedef enum lnlPhichNg
{
   LNL_NG_ONESIXTH,
   LNL_NG_HALF,
   LNL_NG_ONE,
   LNL_NG_TWO
}LnlPhichNg;

typedef struct lnlNghPrachCfg
{
   U16 nghRootSeqIdx;
   U8 nghPrachCfgIdx;
   U8 nghZeroCorrelationZoneCfg;
   U8 nghPrachFreqOffset;
   Bool highSpeedFlag;
}LnlNghPrachCfg;

typedef struct lnlPrachCfg
{
   U16 servRootSeqIdx;
   U8 servPrachCfgIdx;
   U8 servZeroCorrelationZoneCfg;
   U8 servPrachFreqOffset;
   Bool highSpeedFlag;

   U8 numRootSeqIndex;
   U16 rootSeqIdx[512];
   U8 numPrachCfgIdx;
   U8 prachConfigIdx[256];
   U8 numZeroCorrCfgZone;
   U8 zeroCorrelationZoneCfg[64];
   U8 numFreqOffset;
   U8 freqOffset[256];
}LnlPrachCfg;


typedef struct lnlRemScanEarfcn
{
   U32 dlEarfcn;
   S32 rssi;
}LnlRemScanEarfcn;






typedef struct lnlPucchCfg
{
   U8 pucchCqiResIdx;
   U16 n1PucchAn;
   U8 deltaShift;

   U8 cyclicShift;

}LnlPucchCfg;






typedef struct lnlTxPwrCfg
{
   U8 refSignalPwrCnt;
   S8 referenceSignalPwr[128];
   U8 pBCnt;
   U8 pB[8];
   U8 pACnt;
   U8 pA[4];
   U8 pschPowerOffCnt;
   U8 sschPowerOffCnt;
   U8 pbchPowerOffCnt;
   S8 pschPowerOffset[512];
   S8 sschPowerOffset[512];
   S8 pbchPowerOffset[512];
}LnlTxPwrCfg;





typedef struct lnlTpmCfg
{
   S8 tgtRsrp;
   U8 attnConstIdx;
   S8 minRsrp;
   S8 maxRsrp;
}LnlTpmCfg;






typedef struct lnlPhichCfg
{
   LnlPhichNg ngEnum;
   Bool isDurExtend;

}LnlPhichCfg;

typedef enum lnlCsgAccessMode
{
   LNL_ENB_OPEN_ACCESS = 1,
   LNL_ENB_CLOSED_ACCESS,
   LNL_ENB_HYBRID_ACCESS
}LnlCsgAccessMode;

typedef struct lnlCsgPciCfg
{
   Bool isCsgPciCfg;
   U16 csgStartPci;
   U16 csgPciRange;
   LnlCsgAccessMode accessMode;
}LnlCsgPciCfg;

typedef struct lnlSmallCellPciCfg
{
   Bool isSmallCellPciCfg;
   U16 smallCellStartPci;
   U16 maxSmallCellPci;
}LnlSmallCellPciCfg;


typedef struct lnlCellCfg
{
   U32 cellId;
   U8 bandWidth;
   U8 numTxAntPorts;
   U32 txPower;
   U8 subFrameCfg;
   U8 duplexMode;
   U16 pci;
   U32 numPci;
   U16 pciList[504];
   LnlCsgPciCfg csgPciCfg;
   LnlSmallCellPciCfg smallCellPciCfg;
   LnlEcgi ecgi;
   U8 numDlEarfcn;
   U16 dlEarfcnList[64];
   U8 numUlEarfcn;
   U16 ulEarfcnList[64];
   U8 numRemScanEarfcn;
   LnlRemScanEarfcn remScanEarfcn[64];
   Bool isCpUlExtend;

   LnlPrachCfg prachCfgInfo;


   LnlPucchCfg pucchResCfg;

   LnlPhichCfg phichCfg;

   LnlTxPwrCfg txPwrCfg;
   LnlTpmCfg tpmCfg;
}LnlCellCfg;

typedef struct lnlCellReCfg
{
   U32 cellId;
   LnlEcgi ecgi;
   U32 numPci;
   U16 pciList[504];
}LnlCellReCfg;

typedef struct lnlNghCellInfo
{
   LnlEcgi ecgi;
   U16 pci;
   U16 dlEarfcn;
   U16 ulEarfcn;
   U16 lteBand;
   U16 tac;
   U8 ulBw;
   U8 dlBw;
   S8 RSTxPower;
   U8 csgAccessMode;
   U32 csgId;
   S16 rsrp;
   S16 rssi;
   Bool isCellBarred;
   Bool isNghPrachInfo;
   LnlNghPrachCfg prachCfgInfo;
}LnlNghCellInfo;

typedef struct lnlNghCellModInfo
{
   LnlEcgi oldEcgi;
   LnlNghCellInfo nghCellInfo;
   U8 numNghNgh;
   LnlNghCellInfo nghNghCellInfo[16];
}LnlNghCellModInfo;

typedef struct lnlNghCellMod
{
   U8 numNgh;
   LnlNghCellModInfo nghCellModInfo[16];

}LnlNghCellMod;

typedef struct lnlNghCellDel
{
   U8 numNgh;
   LnlEcgi ecgi[16];
}LnlNghCellDel;

typedef struct lnlNghCellAddInfo
{
   LnlNghCellInfo nghCellInfo;
   U8 numNghNgh;
   LnlNghCellInfo nghNghCellInfo[16];
}LnlNghCellAddInfo;

typedef struct lnlNghCellAdd
{
   U8 numNgh;
   LnlNghCellAddInfo nghCellAddInfo[16];
}LnlNghCellAdd;

typedef enum lnlNghCfgType
{
   LNL_NGH_ADD,
   LNL_NGH_DEL,
   LNL_NGH_MOD
}LnlNghCfgType;

typedef struct lnlNghCellCfgParam
{
   LnlNghCfgType cfgType;
   union
   {
      LnlNghCellAdd nghCellAdd;
      LnlNghCellDel nghCellDel;
      LnlNghCellMod nghCellMod;
   }u;
}LnlNghCellCfgParam;

typedef struct lnlNghEnbCellCfg
{
   U32 nghEnbId;
   LnlNghCellCfgParam nghCellParam;
}LnlNghEnbCellCfg;

typedef struct lnlNghCellCfg
{
   U32 servCellId;
   U8 numNghEnb;
   LnlNghEnbCellCfg nghEnbCellCfg[16];
}LnlNghCellCfg;

typedef struct nlProtoCfg
{
   LnlCfgType bCfgType;
   union
   {
      LnlCellCfg cellCfg;
      LnlNghCellCfg nghCellCfg;
      LnlCellReCfg cellReCfg;
   }u;
}NlProtoCfg;

typedef enum lnlDgnType
{
   LNL_PCI_CONFLICT,
   LNL_PCI_CONFUSION

}LnlDgnType;

typedef enum lnlDgnSeverity
{
   LNL_ALARM_SEVERITY_CLEARED,
   LNL_ALARM_SEVERITY_WARNING,
   LNL_ALARM_SEVERITY_MINOR,
   LNL_ALARM_SEVERITY_MAJOR,
   LNL_ALARM_SEVERITY_CRITICAL

}LnlDgnSeverity;

typedef enum lnlDgnAlarm
{
   LNL_ALARM_PCI_CONFLICT,
   LNL_ALARM_PCI_CONFUSION
}LnlDgnAlarm;

typedef enum lnlAddInfoAction
{
   LNL_ALARM_MANUAL_INTER_REQ,
   LNL_ALARM_AUTO_RESOLVE
}LnlAddInfoAction;

typedef struct lnlDgnAddInfo
{
   U16 pci;
   U32 cellId;
   LnlAddInfoAction action;
}LnlDgnAddInfo;

typedef struct lnlUstaDgn
{
   LnlDgnType type;
   LnlDgnAlarm alarmId;
   LnlDgnSeverity severity;
   U8 causeType;
   U8 causeVal;
   union
   {
      LnlDgnAddInfo addInfo;
   }u;
}LnlUstaDgn;




typedef struct lnlNlUsta
{
   CmAlarm alarm;
   LnlUstaDgn dgn;
}LnlNlUsta;







typedef enum lnlEnbStaType
{
   LNL_ENBSTATYPE_CELLUP,
   LNL_ENBSTATYPE_CPULOAD
}LnlEnbStaType;
typedef struct lnlEnbStaInd
{
   LnlEnbStaType enStaType;
   union {
      U32 cpuLoad;
      U32 cellId;
   }u;
}LnlEnbStaInd;

typedef enum lnlStaType
{
   LNL_STAT_ENB,
   LNL_STAT_ALARM
}LnlStaType;





typedef struct nlUsta
{
   LnlStaType staType;
   union {
      LnlEnbStaInd stEnbStaInfo;
      LnlNlUsta stAlarm;
   }u;
}NlUsta;






typedef struct nlMngmt
{
   Header hdr;
   CmStatus cfm;
   union
   {
      NlCfg cfg;
      NlCntrl cntrl;
      NlProtoCfg protoCfg;
      NlUsta usta;
   }u;
}NlMngmt;







typedef struct nlUpdatePciCfgInd
{
   U16 pci;
   U32 cellId;
   U32 cellCfgIdx;
}NlUpdatePciCfgInd;







typedef struct nlUpdateEarfcnCfgInd
{
   U16 dlEarfcn;
   U16 ulEarfcn;
   U32 cellCfgIdx;
}NlUpdateEarfcnCfgInd;

typedef enum lnlCfgUpdateTye
{
   LNL_CFG_UPDATE_PCI = 1,
   LNL_CFG_UPDATE_EARFCN,
   LNL_CFG_UPDATE_PRACH,
   LNL_CFG_UPDATE_TXPWR
}LnlCfgUpdateType;
typedef struct nlUpdatePrachCfgInd
{
   U16 rootSequenceIndx;
   U8 prachCfgIdx;

   Bool highSpeedFlag;
   U8 zeroCorrelationZoneCfg;
   U8 prachFreqOffset;
   U32 cellCfgIdx;
}NlUpdatePrachCfgInd;







typedef struct nlUpdateTxPwrCfgInd
{
   S8 refSignalTxPwr;
   S16 pssPowerOffset;
   S16 sssPowerOffset;
   S16 pbchPowerOffset;
   U8 pB;
   S8 pout;
   U32 cellCfgIdx;
}NlUpdateTxPwrCfgInd;


typedef struct nlCfgUpdateInd
{
   LnlEcgi ecgi;
   LnlCfgUpdateType cfgType;
   union
   {
      NlUpdatePciCfgInd pciCfgInd;
      NlUpdateEarfcnCfgInd earfcnCfgInd;
      NlUpdatePrachCfgInd prachCfgInd;
      NlUpdateTxPwrCfgInd txPwrCfgInd;
   }u;
}NlCfgUpdateInd;





typedef enum lnlSonCfgType
{
   LNL_SON_PERD_UE_MEAS_INTERVAL_CFG,
   LNL_SON_SCHD_CFG,
   LNL_SON_PERD_REM_SCAN_CFG
}LnlSonCfgType;





typedef struct lnlSonMeasRptIntervalCfg
{
   U16 periodicUeMeasInterval;

}LnlSonMeasRptIntervalCfg;





typedef struct lnlSonPerdREMScanCfg
{
   U16 perdREMScanInterval;
   U16 perdREMScanCount;
}LnlSonPerdREMScanCfg;





typedef enum lnlSonPrbPaLevel
{
   LNL_SON_CFG_PA_LEVEL_NORMAL,
   LNL_SON_CFG_PA_LEVEL_LOW,
   LNL_SON_CFG_PA_LEVEL_HIGH
}LnlSonPrbPaLevel;




typedef enum lnlSonPa
{
   LNL_SON_CFG_PA_DB_NEG_6 ,
   LNL_SON_CFG_PA_DB_NEG_4_77,
   LNL_SON_CFG_PA_DB_NEG_3 ,
   LNL_SON_CFG_PA_DB_NEG_1_77 ,
   LNL_SON_CFG_PA_DB_0 ,
   LNL_SON_CFG_PA_DB_1 ,
   LNL_SON_CFG_PA_DB_2 ,
   LNL_SON_CFG_PA_DB_3 ,
   LNL_SON_CFG_PA_NEGTIVE_INF
}LnlSonPa;







typedef struct lnlSonUeCfg
{
   U16 crnti;
   Bool isCellEdge;

}LnlSonUeCfg;







typedef struct lnlSonSchdCfg
{
   U8 numUeCfg;
   LnlSonUeCfg ueCfg[16];

   LnlSonPrbPaLevel paLevelPerPrb[110];
   LnlSonPa pa;
   LnlSonPa paLow;

   LnlSonPa paHigh;

   U8 pb;
}LnlSonSchdCfg;






typedef struct lnlSonCfg
{
   LnlEcgi ecgi;
   LnlSonCfgType cfgType;

   union
   {
      LnlSonMeasRptIntervalCfg measCfg;

      LnlSonSchdCfg schdCfg;
      LnlSonPerdREMScanCfg remScanCfg;
   }u;
}LnlSonCfg;

extern NlMemMngr nlMemMngr;





typedef S16 (*LnlCfgReq) ( Pst *pst, NlMngmt *cfg )


       ;

typedef S16 (*LnlCfgCfm) ( Pst *pst, NlMngmt *cfg )


       ;

typedef S16 (*LnlCntrlReq) ( Pst *pst, NlMngmt *cntrl )


       ;

typedef S16 (*LnlStatInd) ( Pst *pst, NlMngmt *cntrl )


       ;

typedef S16 (*LnlCntrlCfm) ( Pst *pst, NlMngmt *cntrl )


       ;

typedef S16 (*LnlCfgUpdateInd) ( Pst *pst, NlCfgUpdateInd *cfgUpdateInd )


       ;

typedef S16 (*LnlSonCfgInd) ( Pst *pst, LnlSonCfg *sonCfg )


       ;

extern S16 nlActvInit ( Ent entity, Inst inst, Region region, Reason reason )




  ;

extern S16 nlActvTsk ( Pst *pst, Buffer *mBuf )


  ;


extern S16 smNlInit ( SSTskId sysTskId )

  ;

extern S16 smNlActvTsk ( Pst *pst, Buffer *mBuf )


  ;

extern S16 smNlActvInit ( Ent entity, Inst inst, Region region, Reason reason )




  ;

extern S16 SmMiLnlCfgReq ( Pst *pst, NlMngmt *cfg )


  ;

extern S16 SmMiLnlCfgCfm ( Pst *pst, NlMngmt *cfm )


  ;

extern S16 SmMiLnlCntrlReq ( Pst *pst, NlMngmt *cntrl )


  ;

extern S16 SmMiLnlCntrlCfm ( Pst *pst, NlMngmt *cfm )


  ;

extern S16 SmMiLnlUpdateTxPwrCfgInd ( NlUpdateTxPwrCfgInd *txPwrInd )

  ;

extern S16 SmMiLnlUpdatePciCfgInd ( NlUpdatePciCfgInd *pciCfgInd )

  ;

extern S16 SmMiLnlUpdateEarfcnCfgInd ( NlUpdateEarfcnCfgInd *earfcnCfgInd )

  ;

extern S16 SmMiLnlCfgUpdateInd ( Pst *pst, NlCfgUpdateInd *cfgUpdateInd )


  ;

extern S16 SmMiLnlSonCfgInd ( Pst *pst, LnlSonCfg *sonCfg )


  ;

extern S16 SmMiLnlUpdatePrachCfgInd ( NlUpdatePrachCfgInd *prachCfgInd )

  ;

extern S16 SmMiLnlUpdateTxPwrCfgInd ( NlUpdateTxPwrCfgInd *txPwrCfgInd )

  ;


extern S16 SmMiLnlEnbStatInd ( Pst *pst, NlMngmt *cellUpInd )


  ;



extern S16 cmPkLnlCfgReq ( Pst * pst, NlMngmt * cfg )


  ;



extern S16 PtMiLnlCfgReq ( Pst * pst, NlMngmt * cfg )


  ;


extern S16 cmUnpkLnlCfgReq ( LnlCfgReq func, Pst *pst, Buffer *mBuf )



  ;


extern S16 cmPkLnlCfgCfm ( Pst * pst, NlMngmt * cfm )


  ;


extern S16 PtMiLnlCfgCfm ( Pst * pst, NlMngmt * cfm )


  ;


extern S16 cmUnpkLnlCfgCfm ( LnlCfgCfm func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkLnlCntrlReq ( Pst * pst, NlMngmt * cfg )


  ;



extern S16 PtMiLnlCntrlReq ( Pst * pst, NlMngmt * cfg )


  ;


extern S16 cmUnpkLnlCntrlReq ( LnlCntrlReq func, Pst *pst, Buffer *mBuf )



  ;


extern S16 cmPkLnlCntrlCfm ( Pst * pst, NlMngmt * cfm )


  ;

extern S16 cmUnpkLnlCntrlCfm ( LnlCntrlCfm func, Pst *pst, Buffer *mBuf )



  ;


extern S16 PtMiLnlCntrlCfm ( Pst * pst, NlMngmt * cfm )


  ;


extern S16 cmUnpkLnlCfgCfm ( LnlCntrlCfm func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkLnlCfgUpdateInd ( Pst *pst, NlCfgUpdateInd *cfgUpdateInd )


  ;


extern S16 PtMiLnlCfgUpdateInd ( Pst *pst, NlCfgUpdateInd *cfgUpdateInd )


  ;


extern S16 cmUnpkLnlCfgUpdateInd ( LnlCfgUpdateInd func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkLnlStatInd ( Pst * pst, NlMngmt * cfg )


  ;



extern S16 PtMiLnlStatInd ( Pst * pst, NlMngmt * cfg )


  ;


extern S16 cmUnpkLnlStatInd ( LnlStatInd func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmPkLnlSonCfgInd ( Pst *pst, LnlSonCfg *sonCfg )


  ;

extern S16 cmUnpkLnlSonCfgInd ( LnlSonCfgInd func, Pst *pst, Buffer *mBuf )



  ;

extern S16 PtMiLnlSonCfgInd ( Pst *pst, LnlSonCfg *sonCfg )


  ;
extern S16 NlMiLnlCfgReq ( Pst *pst, NlMngmt *cfg )


  ;
extern S16 NlMiLnlCfgCfm ( Pst *pst, NlMngmt *cfm )


  ;
extern S16 NlMiLnlCntrlReq ( Pst *pst, NlMngmt *cfg )


  ;
extern S16 NlMiLnlCntrlCfm ( Pst *pst, NlMngmt *cntrl )


  ;
extern S16 NlMiLnlStatInd ( Pst *pst, NlMngmt *cellUpInd )


  ;
extern S16 NlMiLnlCfgUpdateInd ( Pst *pst, NlCfgUpdateInd *cfgUpdateInd )


  ;

extern S16 NlMiLnlAlarmInd ( Pst *pst, NlMngmt *nlMngmt )


  ;

extern S16 SmMiLnlStatInd ( Pst *pst, NlMngmt *mngmt )


  ;
extern S16 NlMiLnlBrdcmSonCfgInd ( Pst *pst, LnlSonCfg *sonCfg )


        ;
typedef enum wrOamNotifyType
{
    WR_OAM_NOTIFY_S1U = 1,
    WR_OAM_NOTIFY_S1MME,
    WR_OAM_NOTIFY_X2AP,
    WR_OAM_NOTIFY_MAX
}WrOamNotifyType;


typedef enum lwrDynCfgEvntType
{
   LWR_DYN_EVNT_ADMIN_STATE_CHANGE,
   LWR_DYN_EVNT_GENERIC_PRAMS,
   LWR_DYN_EVNT_MME_IP_PRAMS,
   LWR_DYN_EVNT_CELL_CONFIG_PRAMS,
   LWR_DYN_EVNT_ENBIP_CONFIG_PRAMS,
   LWR_DYN_EVNT_CELL_MIB_CONFIG_PRAMS,
   LWR_DYN_EVNT_PRACH_CONFIG_PRAMS,
   LWR_DYN_EVNT_RACH_CONFIG_PRAMS,
   LWR_DYN_EVNT_PDSCH_CONFIG_PRAMS,
   LWR_DYN_EVNT_SRS_CONFIG_PRAMS,
   LWR_DYN_EVNT_PUSCH_CONFIG_PRAMS,
   LWR_DYN_EVNT_ULPOWER_CONFIG_PRAMS,
   LWR_DYN_EVNT_ULFREQ_CONFIG_PRAMS,
   LWR_DYN_EVNT_PUCCH_CONFIG_PRAMS,
   LWR_DYN_EVNT_UETMRCONS_CONFIG_PRAMS,
   LWR_DYN_EVNT_CELL_SIB1_CONFIG_GROUP_PRAMS,
   LWR_DYN_EVNT_CELL_SIB2_CONFIG_GROUP_PRAMS,
   LWR_DYN_EVNT_CELL_SIB3_CONFIG_GROUP_PRAMS,
   LWR_DYN_EVNT_CELL_SIB4_CONFIG_GROUP_PRAMS,
   LWR_DYN_EVNT_CELL_SIB6_CONFIG_GROUP_PRAMS,
   LWR_DYN_EVNT_CELL_SIB9_CONFIG_GROUP_PRAMS,
   LWR_DYN_EVNT_CELL_ANR_CONFIG_GROUP_PRAMS,
   LWR_DYN_EVNT_CELL_MEAS_CONFIG_GROUP_PRAMS,
   LWR_DYN_EVNT_CELL_EAID_CONFIG_GROUP_PRAMS,
   LWR_DYN_EVNT_CELL_SIBSCHED_CONFIG_GROUP_PRAMS,
   LWR_DYN_EVNT_CELL_RABPOLICY_CONFIG_GROUP_PRAMS,
   LWR_DYN_EVNT_CELL_TIMER_CONFIG_GROUP_PRAMS,
   LWR_DYN_EVNT_CELL_RRM_CONFIG_GROUP_PRAMS,
   LWR_DYN_EVNT_CELL_ULSCHD_CONFIG_GROUP_PRAMS,
   LWR_DYN_EVNT_CELL_DLSCHD_CONFIG_GROUP_PRAMS,
   LWR_DYN_EVNT_NEIGH_CONFIG_PRAMS,
   LWR_DYN_EVNT_NEIGH_CELL_CONFIG_PRAMS,
   LWR_DYN_EVNT_NEIGH_FREQ_CONFIG_PRAMS,
   LWR_DYN_EVNT_NEIGH_BAND_CLASS_CONFIG_PRAMS,
   LWR_DYN_EVNT_ENB_PROTO_CONFIG_PRAMS,
   LWR_DYN_EVNT_NEIGH_UTRA_FREQ_CFG,
   LWR_DYN_EVNT_NEIGH_EUTRA_FREQ_CFG,
   LWR_DYN_EVNT_NEIGH_UTRA_CELL_CFG,
   LWR_DYN_EVNT_NEIGH_EUTRA_CELL_CFG,
   LWR_DYN_EVNT_UTRANEILIST_CONFIG,
   LWR_DYN_EVNT_EUTRANEILIST_CONFIG,
   LWR_DYN_EVNT_RABSRB1_CONFIG_PARAMS,
   LWR_DYN_EVNT_RABSRB2_CONFIG_PARAMS,
   LWR_DYN_EVNT_NEIGH_ENB_CFG,
   LWR_DYN_EVNT_SM_CELL_CONFIG_PRAMS,
   LWR_DYN_EVNT_CELL_DYN_CFI_CONFIG_PRAMS,
   LWR_DYN_EVNT_CELL_SCHD_CONFIG_GROUP_PRAMS,
   LWR_DYN_EVNT_ADD_CELL_CONFIG_PRAMS,
   LWR_DYN_EVNT_FAP_ACCS_PRAMS,
   LWR_DYN_EVNT_CELL_TM_CONFIG_PRAMS,

   LWR_DYN_EVNT_MESSENGER_CONFIGURATION_COMPLETE
} LwrDynCfgEvntType;
typedef struct lwrNghENBCfg
{
  U32 peerId;
  U16 eAValue;

  U16 iPAValue;

  U32 priDstAddr;
  U16 dstPort;



} LwrNghENBCfg;

typedef struct lwrSmMmeCfg
{
   U16 mmeId;
   U8 noOfIps;
   CmTptAddr mmeAddr[5];
} LwrSmMmeCfg;

typedef struct lwrEcgiCfg
{

   U32 plmnId;

   U32 eutranCellId;
} LwrEcgiCfg;

typedef struct lwrNghInfoCfg
{
   LwrEcgiCfg ecgi;
   U16 physCellId;
   U32 earfcn;
}LwrNghInfoCfg;


typedef struct lwrNghUtraFddCfg
{
   U16 rncId;
   U16 cId;
   U16 arfcnDl;
   U16 arfcnUl;
   U16 psc;
   U16 lac;
   U8 rac;
   Bool isRimSupported;



   S16 pcpich;
   Bool voipCapable;

   Bool psHOCapable;

}LwrNghUtraFddCfg;

typedef struct lwrNghUtraTddCfg
{
   U16 rncId;
   U16 cId;
   U16 arfcn;
   U16 lac;
   S16 ccpchTPwr;
   U8 cellParamId;

   U8 rac;
   Bool isRimSupported;



}LwrNghUtraTddCfg;

typedef struct lwrNghFreqCfg
{
   U16 arfcnDl;
   U16 arfcnUl;
}LwrNghFreqCfg;



typedef struct lwrGuGrpIdCfg
{

   U32 plmnId;
   U16 mmeGrpId;
} LwrGuGrpIdCfg;

typedef struct lwrNghCellCfg
{
   U32 enbId;
   U8 enbType;
   CmTptAddr ipAddr;
   CmTptAddr enbAddr;
   U16 physCellId;
   U16 tac;
   U32 cellId;
   U32 plmnId;
   U8 nghPlmn[6];
   U8 noMnc;
   U32 peerId;
   Bool trgrX2;

   U32 dlEarfcn;
   U32 ulEarfcn;

   RgrSfrRbRange dsfrCEFreqRange;


   U8 csgAccessMode;
   U32 csgId;


   U8 numAntenna;
   U8 ulDlSubFrameCfg;
   U8 splSfCfg;
   U8 cpDl;
   U8 cpUl;
   S16 rsrp;
   S16 rssi;

} LwrNghCellCfg;




typedef enum lwrActType
{
   WR_ACT_ADD = 1,
   WR_ACT_MOD,
   WR_ACT_DEL,
   WR_ACT_IND
} LwrActType;

typedef enum lwrBandwidth
{
   LWR_BANDWIDTH_6,
   LWR_BANDWIDTH_15,
   LWR_BANDWIDTH_25,
   LWR_BANDWIDTH_50,
   LWR_BANDWIDTH_75,
   LWR_BANDWIDTH_100
} LwrBandwidth;

typedef enum lwrQoffRange
{
   LWR_OFFSET_DB_MINUS_24 = 0,
   LWR_OFFSET_DB_MINUS_22,
   LWR_OFFSET_DB_MINUS_20,
   LWR_OFFSET_DB_MINUS_18,
   LWR_OFFSET_DB_MINUS_16,
   LWR_OFFSET_DB_MINUS_14,
   LWR_OFFSET_DB_MINUS_12,
   LWR_OFFSET_DB_MINUS_10,
   LWR_OFFSET_DB_MINUS_8,
   LWR_OFFSET_DB_MINUS_6,

   LWR_OFFSET_DB_MINUS_5,

   LWR_OFFSET_DB_MINUS_4,

   LWR_OFFSET_DB_MINUS_3,

   LWR_OFFSET_DB_MINUS_2,

   LWR_OFFSET_DB_MINUS_1,

   LWR_OFFSET_DB_ZERO_0,
   LWR_OFFSET_DB_PLUS_1,
   LWR_OFFSET_DB_PLUS_2,
   LWR_OFFSET_DB_PLUS_3,
   LWR_OFFSET_DB_PLUS_4,
   LWR_OFFSET_DB_PLUS_5,
   LWR_OFFSET_DB_PLUS_6,
   LWR_OFFSET_DB_PLUS_8,
   LWR_OFFSET_DB_PLUS_10,
   LWR_OFFSET_DB_PLUS_12,
   LWR_OFFSET_DB_PLUS_14,
   LWR_OFFSET_DB_PLUS_16,
   LWR_OFFSET_DB_PLUS_18,
   LWR_OFFSET_DB_PLUS_20,
   LWR_OFFSET_DB_PLUS_21,
   LWR_OFFSET_DB_PLUS_24
}LwrQoffRange;
typedef enum lwrProtoCfgType
{
   WR_CFG_TYPE_CELL = 1,
   WR_CFG_TYPE_MME = 2,
   WR_CFG_TYPE_NEIGH = 3,
   WR_CFG_TYPE_NEIGH_CELL = 4,
   WR_CFG_TYPE_ENB = 5,
   WR_CFG_TYPE_NEIGH_FREQ = 6,
   WR_CFG_TYPE_BAND_CLASS = 7,
   WR_IND_TYPE_ENB = 8
} LwrProtoCfgType;







typedef enum lwrMmeState
{
   WR_MME_STATE_ACTIVE,
   WR_MME_STATE_INACTIVE
} LwrMmeState;
typedef enum lwrMmeAdminState
{
   WR_MME_LOCKED,
   WR_MME_UNLOCKED,
   WR_MME_SHUTTING_DOWN
} LwrMmeAdminState;


typedef enum lwrInetAddrType
{
   WR_INET_IPV4,
   WR_INET_IPV6
} LwrInetAddrType;


typedef struct lwrPlmnId
{
   U8 numMncDigits;
   U8 mcc[3];
   U8 mnc[3];
} LwrPlmnId;

typedef struct lwrMmePlmnCfg
{
   TknPres pres;
} LwrMmePlmnCfg;

typedef struct wrFreqAlarmVal
{
   U8 maxErrIndCnt;
   U8 maxResetCnt;
   U64 minErrIndTime;
   U64 minResetTime;
}WrFreqAlarmVal;
typedef struct lwrAddModMmeCfg
{
   U32 reCfgType;
   U8 mmeIndex;
   U8 peerId;
   U8 noOfIps;
   CmTptAddr ipAddr[5];
   LwrMmeState mmeState;
   LwrMmeAdminState adminState;
   WrFreqAlarmVal alarmVal;
} LwrAddModMmeCfg;





typedef struct lwrDelMme
{
   U8 mmeIndex;
   U8 peerId;
} LwrDelMme;

typedef struct lwrMmeCfg
{
   LwrActType action;
   union
   {
      LwrAddModMmeCfg addMme;
      LwrAddModMmeCfg modMme;
      LwrDelMme delMme;
   }t;
} LwrMmeCfg;



typedef enum lwrPhichRes
{
   WR_PHICH_RES_ONE_SIXTH,
   WR_PHICH_RES_ONE_HALF,
   WR_PHICH_RES_ONE,
   WR_PHICH_RES_TWO
} LwrPhichRes;



typedef enum lwrPhichDur
{
   WR_PHICH_DURATION_NORMAL,
   WR_PHICH_DURATION_EXTENDED
} LwrPhichDur;



typedef struct lwrPhichCfg
{
   LwrPhichDur phichDur;
   LwrPhichRes phichRes;
} LwrPhichCfg;





typedef struct lwrCellMibCfgGrp
{
   U32 reCfgType;




   LwrBandwidth dlBw;
   LwrPhichCfg phichCfg;
} LwrCellMibCfgGrp;


typedef enum lwrCellRsrvdFrOperUse
{
   CELL_RESERVED_FOR_OPER_USE,
   CELL_NOT_RESERVED_FOR_OPER_USE
} LwrCellRsrvdFrOperUse;

typedef enum LwrPlmnRatPrior{
   LWR_CSFB_RAT_PRIOR_UTRA_FDD,
   LWR_CSFB_RAT_PRIOR_UTRA_TDD,
   LWR_CSFB_RAT_PRIOR_GERAN,
   LWR_CSFB_RAT_PRIOR_CDMA_CDMA2000_HRPD,
   LWR_CSFB_RAT_PRIOR_CDMA_CDMA2000_1XRTT,
   LWR_CSFB_MAX_RAT_TYPE
}LwrPlmnRatPrior;



typedef struct lwrRatPriorityList
{
   U8 numberOfRats;

   LwrPlmnRatPrior rat[LWR_CSFB_MAX_RAT_TYPE];

}LwrRatPriorityList;


typedef struct lwrEnbPlmnInfo
{
   LwrPlmnId plmnId;
   LwrRatPriorityList plmnRatPriority;
   U8 isRedirSupport;
} LwrEnbPlmnInfo;



typedef struct lwrPlmnInfo
{
   LwrPlmnId plmnId;
   LwrCellRsrvdFrOperUse rsrvdFrOperUse;
} LwrPlmnInfo;




typedef struct lwrCellAccessInfo
{
   U32 reCfgType;



   U8 numOfPlmns;
   LwrPlmnInfo plmnInfo[6];

   U16 tac;
   U32 cellId;
   Bool cellBarred;
   Bool intraFreqReSelection;


   Bool csgIndication;
   TknU32 csgIdentity;
} LwrCellAccessInfo;




typedef struct lwrCellSelectInfo
{
   S8 qRxLevMin;
   TknU8 qRxLevMinOffset;
   U8 rel9SelInfoPres;
   S8 qQualMin;
   TknU8 qQualMinOffset;
} LwrCellSelectInfo;





typedef struct lwrTddCfg
{
   U8 subframeCfg;
   U8 specialSubframeCfg;
} LwrTddCfg;

typedef enum lwrSiWindowSize
{
   WR_SI_WINDOWLEN_1,
   WR_SI_WINDOWLEN_2,
   WR_SI_WINDOWLEN_5,
   WR_SI_WINDOWLEN_10,
   WR_SI_WINDOWLEN_15,
   WR_SI_WINDOWLEN_20,
   WR_SI_WINDOWLEN_40
} LwrSiWindowSize;





typedef struct lwrCellSib1CfgGrp
{
   U32 reCfgType;




   LwrCellAccessInfo cellAccessInfo;

   LwrCellSelectInfo cellSelectInfo;

   U8 pMaxPres;
   S8 pMax;
   U8 freqBandInd;
   LwrTddCfg tddCfg;
   LwrSiWindowSize siWindowSize;
} LwrCellSib1CfgGrp;

typedef struct lwrAcBarringCfg
{
   TknPres pres;
   U8 acBarringFactor;
   U16 acBarringTime;
   Bool acBarringAC11;
   Bool acBarringAC12;
   Bool acBarringAC13;
   Bool acBarringAC14;
   Bool acBarringAC15;
} LwrAcBarringCfg;

typedef struct lwrAcBarringInfo
{
   TknPres pres;
   Bool acBarringForEmergency;
   LwrAcBarringCfg acBarringForMOSignal;
   LwrAcBarringCfg acBarringForMOData;

   Bool barringDataUsage;

   Bool barringSignalUsage;




} LwrAcBarringInfo;

typedef enum lwrCyclicPrefixLen
{
   WR_CYCLIC_PREFIX_NORMAL,
   WR_CYCLIC_PREFIX_EXTENDED
} LwrCyclicPrefixLen;

typedef enum lwrPwrOffstGrpB
{
   WR_POWER_OFFSET_DB_MINUS_INFNTY,
   WR_POWER_OFFSET_DB_0,
   WR_POWER_OFFSET_DB_5,
   WR_POWER_OFFSET_DB_8,
   WR_POWER_OFFSET_DB_10,
   WR_POWER_OFFSET_DB_12,
   WR_POWER_OFFSET_DB_15,
   WR_POWER_OFFSET_DB_18
} LwrPwrOffstGrpB;


typedef enum lwrCdma2kBandClassType
{
   WR_CDMA_2K_BAND_CLASS_0 = 0,
   WR_CDMA_2K_BAND_CLASS_1 = 1,
   WR_CDMA_2K_BAND_CLASS_2 = 2,
   WR_CDMA_2K_BAND_CLASS_3 = 3,
   WR_CDMA_2K_BAND_CLASS_4 = 4,
   WR_CDMA_2K_BAND_CLASS_5 = 5,
   WR_CDMA_2K_BAND_CLASS_6 = 6,
   WR_CDMA_2K_BAND_CLASS_7 = 7,
   WR_CDMA_2K_BAND_CLASS_8 = 8,
   WR_CDMA_2K_BAND_CLASS_9 = 9,
   WR_CDMA_2K_BAND_CLASS_10 = 10,
   WR_CDMA_2K_BAND_CLASS_11 = 11,
   WR_CDMA_2K_BAND_CLASS_12 = 12,
   WR_CDMA_2K_BAND_CLASS_13 = 13,
   WR_CDMA_2K_BAND_CLASS_14 = 14,
   WR_CDMA_2K_BAND_CLASS_15 = 15,
   WR_CDMA_2K_BAND_CLASS_16 = 16,
   WR_CDMA_2K_BAND_CLASS_17 = 17,
   WR_CDMA_2K_BAND_CLASS_18 = 18,
   WR_CDMA_2K_BAND_CLASS_19 = 19,
   WR_CDMA_2K_BAND_CLASS_20 = 20,
   WR_CDMA_2K_BAND_CLASS_21 = 21,
   WR_CDMA_2K_BAND_CLASS_SPARE_10 = 22,
   WR_CDMA_2K_BAND_CLASS_SPARE_9 = 23,
   WR_CDMA_2K_BAND_CLASS_SPARE_8 = 24,
   WR_CDMA_2K_BAND_CLASS_SPARE_7 = 25,
   WR_CDMA_2K_BAND_CLASS_SPARE_6 = 26,
   WR_CDMA_2K_BAND_CLASS_SPARE_5 = 27,
   WR_CDMA_2K_BAND_CLASS_SPARE_4 = 28,
   WR_CDMA_2K_BAND_CLASS_SPARE_3 = 29,
   WR_CDMA_2K_BAND_CLASS_SPARE_2 = 30,
   WR_CDMA_2K_BAND_CLASS_SPARE_1 = 31
} LwrCdma2kBandClassType;

typedef struct lwrCdma2k1xMobParams
{
   Bool sidIncl;
   U16 sid;
   Bool nidIncl;
   U16 nid;
   Bool multSidsIncl;
   Bool multSids;
   Bool multNidsIncl;
   Bool multNids;
   Bool regZoneIncl;
   U16 regZone;
   Bool totalZonesIncl;
   U8 totalZones;
   Bool zoneTimerIncl;
   U8 zoneTimer;
   Bool pktZoneIdIncl;
   U8 pktZoneId;
   Bool pzIdHysParamIncl;
   Bool pzHystEnabled;
   Bool pzHystInfoIncl;
   Bool pzHystListLen;
   U8 pzHystActTimer;
   U8 pzHystTimerMul;
   U8 pzHystTimerExp;
   Bool pRevIncl;
   U8 pRev;
   Bool minPRevIncl;
   U8 minPRev;
   Bool negSlotCycIndxSupIncl;
   Bool negSlotCycIndxSup;
   Bool encModeIncl;
   U8 encMode;
   Bool encSupIncl;
   Bool encSup;
   Bool sigEncSupIncl;
   U8 sigEncSup;
   Bool msgIntSupIncl;
   Bool msgIntSup;
   Bool sigIntSupINCLIncl;
   Bool sigIntSupINCL;
   Bool sigIntSupIncl;
   U8 sigIntSup;
   Bool authIncl;
   U8 auth;
   Bool maxNumAltoSoIncl;
   U8 maxNumAltoSo;
   Bool useSyncIdIncl;
   Bool useSyncId;
   Bool msInitPosLocSupIndIncl;

   Bool msInitPosLocSupInd;
   Bool mobQosIncl;
   Bool mobQos;
   Bool bandClsInfoReqIncl;
   Bool bandClsInfoReq;
   Bool bandClsIncl;
   U8 bandCls;
   Bool bypassRegIndIncl;
   U8 bypassRegInd;
   Bool altBandClsIncl;
   U8 altBandCls;
   Bool maxAddServInstIncl;
   U8 maxAddServInst;
   Bool homeRegIncl;
   Bool homeReg;
   Bool forSidRegIncl;
   Bool forSidReg;
   Bool forNidRegIncl;
   Bool forNidReg;
   Bool powerUpRegIncl;
   Bool powerUpReg;
   Bool powerDownRegIncl;
   Bool powerDownReg;
   Bool parmRegIncl;
   Bool parmReg;
   Bool regPrdIncl;
   U8 regPrd;
   Bool regDistIncl;
   U16 regDist;
   Bool prefMsIdTypeIncl;
   U8 prefMsIdType;
   Bool extPrefMsIdTypeIncl;
   U8 extPrefMsIdType;
   Bool meIdReqdIncl;
   Bool meIdReqd;
   Bool mccIncl;
   U16 mcc;
   Bool imsi1112Incl;
   U8 imsi1112;
   Bool imsiTSupIncl;
   Bool imsiTSup;
   Bool recntMsgIndIncl;
   Bool recntMsgInd;
   Bool rerModeSupIncl;
   Bool rerModeSup;
   Bool tzkModeSupIncl;
   Bool tzkModeSup;
   Bool tzkIdIncl;
   Bool tzkId;
   Bool pilRepIncl;
   Bool pilRep;
   Bool sdbSupIncl;
   Bool sdbSup;
   Bool autoFcsoAllIncl;
   Bool autoFcsoAll;
   Bool sdbInRcnmIncl;
   Bool sdbInRcnm;
   Bool fpcFchIncl;
   U8 fpcFchInitSetptRC3;

   U8 fpcFchInitSetptRC4;

   U8 fpcFchInitSetptRC5;

   U8 fpcFchInitSetptRC11;

   U8 fpcFchInitSetptRC12;

   Bool tAddIncl;
   U8 tAdd;
   Bool pilotIncIncl;
   U8 PilotInc;
   Bool randIncl;
   U32 rand;
   Bool lpSecIncl;
   U8 lpSec;
   Bool ltmOffIncl;
   U8 ltmOff;
   Bool dayltIncl;
   Bool daylt;
   Bool gcsnaL2ActTimerIncl;
   U8 gcsnaL2ActTimer;
   Bool gcsnaSeqCtxtTimerIncl;
   U8 gcsnaSeqCtxtTimer;
   U8 reserved;
}LwrCdma2k1xMobParams;

typedef struct lwrPreambleCfg
{
   U8 numOfRAPreambles;
   U8 groupASize;
   U16 msgSizeGroupA;
   LwrPwrOffstGrpB pwrOffstGrpB;
} LwrPreambleCfg;

typedef struct lwrPowerRamping
{
   U8 powerRampingstep;
   S16 initRcvdTrgtPwr;
} LwrPowerRamping;

typedef struct lwrRaSupervisionCfg
{
   U8 preambleTransMax;
   U8 rarWindowSize;
   U8 macContResTimer;
} LwrRaSupervisionCfg;

typedef struct lwrRachCfgCommon
{
   U32 reCfgType;




   LwrPreambleCfg preambleCfg;
   LwrPowerRamping powerRamping;
   LwrRaSupervisionCfg raSupervisionCfg;
   U8 maxHARQMsg3;
} LwrRachCfgCommon;





typedef struct lwrBCCHCfgCommon
{
   U8 modPeriodCoeff;
} LwrBCCHCfgCommon;



typedef enum lwrnB
{
   WR_FOUR_T,
   WR_TWO_T,
   WR_ONE_T,
   WR_HALF_T,
   WR_QUATER_T,
   WR_EIGTH_T,
   WR_SIXTEENTH_T,
   WR_THIRTYTWOTH_T
} LwrnB;



typedef enum lwrDefaultPagingCycle
{
   WR_RF_32,
   WR_RF_64,
   WR_RF_128,
   WR_RF_256
} LwrDefaultPagingCycle;

typedef struct lwrPCCHCfgCommon
{
   LwrDefaultPagingCycle defaultPagingCycle;
   LwrnB nB;
} LwrPCCHCfgCommon;






typedef struct lwrPdschCfgCommon
{
   S8 referenceSignalPwr;
   U8 pB;
} LwrPdschCfgCommon;

typedef enum lwrPuschHoppingMode
{
   WR_INTER_SUBFRAME_HOPPING,
   WR_INTRA_SUBFRAME_HOPPING
} LwrPuschHoppingMode;

typedef struct lwrPuschBasicCfgCommon
{
   U32 reCfgType;




   U8 nSb;
   LwrPuschHoppingMode hoppingMode;
   U8 hoppingOffset;
   Bool enable64QAM;
} LwrPuschBasicCfgCommon;

 typedef struct lwrPuschRefSignalCfg
{
   U32 reCfgType;



   Bool grpHopEnabled;
   U8 grpAsgnPusch;
   Bool seqHopEnabled;
   U8 cyclicShift;
} LwrPuschRefSignalCfg;





typedef struct lwrPuschCfgCommon
{
   U32 reCfgType;




   LwrPuschBasicCfgCommon puschBasicCfg;
   LwrPuschRefSignalCfg puschRefSigCfg;

} LwrPuschCfgCommon;

typedef enum lwrDeltaPucchShift
{
   WR_DELTA_PUCCH_SHIFT_1,
   WR_DELTA_PUCCH_SHIFT_2,
   WR_DELTA_PUCCH_SHIFT_3
} LwrDeltaPucchShift;




typedef struct lwrPucchCfgCommon
{
   LwrDeltaPucchShift deltaShift;
   U8 nRBCqi;

   U8 nCSAN;

   U16 n1PucchAn;
} LwrPucchCfgCommon;

typedef struct lwrSRSCfgCommon
{
   U8 cSrs;
   U8 subframeCfg;
   Bool simulAckNackSrs;
   Bool srsMaxUpts;
} LwrSRSCfgCommon;

typedef enum lwrULPwrAlpha
{
   WR_UL_PWR_ALPHA_0,
   WR_UL_PWR_ALPHA_04,
   WR_UL_PWR_ALPHA_05,
   WR_UL_PWR_ALPHA_06,
   WR_UL_PWR_ALPHA_07,
   WR_UL_PWR_ALPHA_08,
   WR_UL_PWR_ALPHA_09,
   WR_UL_PWR_ALPHA_1
} LwrULPwrAlpha;

typedef enum lwrDeltaPUCCHF
{
   WR_PUCCH_F_DELTA_min_2,
   WR_PUCCH_F_DELTA_0,
   WR_PUCCH_F_DELTA_1,
   WR_PUCCH_F_DELTA_2,
   WR_PUCCH_F_DELTA_3,
   WR_PUCCH_F_DELTA_5
} LwrDeltaPUCCHF;

typedef struct lwrDeltaPUCCHLst
{
   LwrDeltaPUCCHF deltaPucchFormat1;
   LwrDeltaPUCCHF deltaPucchFormat1b;
   LwrDeltaPUCCHF deltaPucchFormat2;
   LwrDeltaPUCCHF deltaPucchFormat2a;
   LwrDeltaPUCCHF deltaPucchFormat2b;
} LwrDeltaPUCCHLst;




typedef struct lwrULPwrCtrlCommon
{
   S8 pNomialPusch;
   LwrULPwrAlpha alpha;
   S8 pNomialPucch;
   LwrDeltaPUCCHLst deltaFLst;
   S8 deltaMsg3;
} LwrULPwrCtrlCommon;

typedef struct lwrPrachCfgInfo
{
   U8 prachCfgIdx;

   Bool highSpeedFlag;
   U8 zeroCorrelationZoneCfg;
   U8 prachFreqOffset;
} LwrPrachCfgInfo;

typedef struct lwrPrachCfgCommon
{
   U16 rootSequenceIndx;
   LwrPrachCfgInfo prachCfgInfo;
   U8 prachPosition;
} LwrPrachCfgCommon;

typedef struct lwrRadioResourceCommon
{
   U32 reCfgType;




   LwrRachCfgCommon rachCfgCommon;
   LwrBCCHCfgCommon bcchCfgCommon;
   LwrPCCHCfgCommon pcchCfgCommon;
   LwrPrachCfgCommon prachCfgCommon;
   LwrPdschCfgCommon pdschCfgCommon;
   LwrPuschCfgCommon puschCfgCommon;
   LwrPucchCfgCommon pucchCfgCommon;
   LwrSRSCfgCommon srsCfgCommon;
   LwrULPwrCtrlCommon ulPwrCtrlCommon;
   LwrCyclicPrefixLen ulCyclicPrefix;
   LwrCyclicPrefixLen dlCyclicPrefix;
} LwrRadioResourceCommon;

typedef struct lwrUeTimerConstants
{
   U16 t300;
   U16 t301;
   U16 t302;
   U16 t304;
   U16 ccoT304;
   U16 t310;
   U16 n310;
   U16 t311;
   U16 n311;
   U16 t320;
} LwrUeTimerConstants;

typedef struct lwrULFrequencyInfo
{
   U16 eARFCN;
   LwrBandwidth ulBandwidth;
   U8 addSpectEmission;
} LwrULFrequencyInfo;

typedef enum lwrTimeAlignment
{
   WR_TIME_ALIGNMENT_TIMER_500,
   WR_TIME_ALIGNMENT_TIMER_750,
   WR_TIME_ALIGNMENT_TIMER_1280,
   WR_TIME_ALIGNMENT_TIMER_1920,
   WR_TIME_ALIGNMENT_TIMER_2560,
   WR_TIME_ALIGNMENT_TIMER_5120,
   WR_TIME_ALIGNMENT_TIMER_10240,
   WR_TIME_ALIGNMENT_TIMER_INFINITE
} LwrTimeAlignment;

typedef struct lwrCellSib2CfgGrp
{
   U32 reCfgType;




   LwrAcBarringInfo acBarringInfo;
   LwrRadioResourceCommon radioResourceCommon;
   LwrUeTimerConstants ueTimerConstants;
   LwrULFrequencyInfo ulFreqInfo;
   LwrTimeAlignment timeAlignmentCommon;

   LwrAcBarringCfg acBarringVoice;
   LwrAcBarringCfg acBarringVideo;
} LwrCellSib2CfgGrp;
typedef struct lwrMeasMobilityStatParams
{
   TknPres speedStatPres;
   U16 tEvalulation;
   U16 tHystNormal;
   U16 nCellChangeMedium;
   U16 nCellChangeHigh;
} LwrMeasMobilityStatParams;
typedef struct lwrMeasSpdStateScaleFact
{
   U8 sMeasure;
   TknPres sfUsagePres;
   U8 timeToTriggerSfMedium;
   U8 timeToTriggerSfHigh;
} LwrMeasSpdStateScaleFact;







typedef struct lwrMeasQtyCfgParams
{
   U8 rsrpFltrCoeff;
   U8 rsrqFltrCoeff;
   U8 measQtyCDMA2k;
   U8 ecnoFltrCoeff;
   U8 measQtyUtraFdd;
   U8 measQtyUtraTdd;
   U8 fltrCoeffGERAN;
   U8 filterCoefficient2FDDr10;
} LwrMeasQtyCfgParams;
typedef enum lwrMeasQtyCfgGeran
{
   WR_MEAS_QTY_CFG_GERAN_RSSI
}LwrMeasQtyCfgGeran;
typedef struct lwrMeasPreRegHrpd
{
   U8 preRegAllowed;
   U8 preRegZoneId;
   U8 NumOf2ndPreRegZoneIdList;
   U8 secondaryPreRegZoneId1;
   U8 secondaryPreRegZoneId2;
} LwrMeasPreRegHrpd;
typedef struct lwrMeasGapConfig
{
   U32 gapPatternForInterFA;
   U32 gapPatternForInterRAT;
   TknPres gapForANRPres;
   U32 gapPatternForANR;
} LwrMeasGapConfig;
typedef enum lwrMeasEvntA1Type
{
   WR_MEAS_EVENTA1_HO_RSRP,
   WR_MEAS_EVENTA1_HO_RSRQ,
   WR_MEAS_EVENTA1_RESV1,
   WR_MEAS_EVENTA1_RESV2
} LwrMeasEvntA1Type;
typedef enum lwrMeasEvntA2Type
{
   WR_MEAS_EVENTA2_HO_RSRP,
   WR_MEAS_EVENTA2_HO_RSRQ,
   WR_MEAS_EVENTA2_RESV1,
   WR_MEAS_EVENTA2_RESV2
} LwrMeasEvntA2Type;
typedef enum lwrMeasEvntA3Type
{
   WR_MEAS_EVENTA3_INTRA_FREQ_HO,
   WR_MEAS_EVENTA3_INTER_FREQ_HO_RSRP,
   WR_MEAS_EVENTA3_INTER_FREQ_HO_RSRQ,
   WR_MEAS_EVENTA3_INTRA_FREQ_ANR,
   WR_MEAS_EVENTA3_INTER_FREQ_ANR,

   WR_MEAS_EVENTA3_INTRA_FREQ_ABS,

   WR_MEAS_EVENTA3_RESV1,
   WR_MEAS_EVENTA3_RESV2
} LwrMeasEvntA3Type;
typedef enum lwrMeasEvntA4Type
{
   WR_MEAS_EVENTA4_ANR_SPECIFIC,



   WR_MEAS_EVENTA4_RESV1,
   WR_MEAS_EVENTA4_RESV2
} LwrMeasEvntA4Type;
typedef enum lwrMeasEvntA5Type
{
   WR_MEAS_EVENTA5_INTRA_FREQ_HO,
   WR_MEAS_EVENTA5_INTER_FREQ_HO_RSRP,
   WR_MEAS_EVENTA5_INTER_FREQ_HO_RSRQ,
   WR_MEAS_EVENTA5_INTRA_FREQ_ANR,
   WR_MEAS_EVENTA5_INTER_FREQ_ANR,
   WR_MEAS_EVENTA5_RESV1,
   WR_MEAS_EVENTA5_RESV2
} LwrMeasEvntA5Type;
typedef enum lwrMeasEutraPeriodic
{
   WR_MEAS_EUTRA_PERIODIC_REPORT_STRNG_CELLS,
   WR_MEAS_EUTRA_PERIODIC_REPORT_CGI,
   WR_MEAS_EUTRA_PERIODIC_RESV1
} LwrMeasEutraPeriodic;
typedef enum lwrMeasEvntB1Type
{
   WR_MEAS_EVENTB1_ANR_SPECIFIC,
   WR_MEAS_EVENTB1_RESV1,
   WR_MEAS_EVENTB1_RESV2
} LwrMeasEvntB1Type;
typedef enum lwrMeasUtraB1Type
{
   WR_MEAS_UTRA_EVENTB1_HO,
   WR_MEAS_UTRA_EVENTB1_CSFB,
   WR_MEAS_UTRA_EVENTB1_ANR,
   WR_MEAS_UTRA_EVENTB1_RESV1
}LwrMeasUtraB1Type;
typedef enum lwrMeasUtraB2Type
{
   WR_MEAS_UTRA_EVENTB2_HO,
   WR_MEAS_UTRA_EVENTB2_CSFB,
   WR_MEAS_UTRA_EVENTB2_ANR,
   WR_MEAS_UTRA_EVENTB2_REDIR,
   WR_MEAS_UTRA_EVENTB2_RESV1
}LwrMeasUtraB2Type;
typedef enum lwrMeasGeranEvntB2Type
{
   WR_MEAS_GERAN_EVENTB2_INTER_RAT_REDIR,
   WR_MEAS_GERAN_EVENTB2_INTER_RAT_HO,
   WR_MEAS_GERAN_EVENTB2_RESV2
} LwrMeasGeranEvntB2Type;
typedef enum lwrMeas1xCdmaEvntB2Type
{
   WR_MEAS_1XCDMA_EVENTB2_INTER_RAT_HO,
   WR_MEAS_1XCDMA_EVENTB2_RESV1,
   WR_MEAS_1XCDMA_EVENTB2_RESV2
} LwrMeas1xCdmaEvntB2Type;
typedef enum lwrMeasCdmaHrpdEvntB2Type
{
   WR_MEAS_CDMA_HRPD_EVENTB2_OPT_HRPD_HO,
   WR_MEAS_CDMA_HRPD_EVENTB2_RESV1,
   WR_MEAS_CDMA_HRPD_EVENTB2_RESV2
} LwrMeasCdmaHrpdEvntB2Type;
typedef enum lwrMeasCDMAPeriodic
{
   WR_MEAS_CDMA_PERIODIC_REPORT_STRNG_CELLS,
   WR_MEAS_CDMA_PERIODIC_REPORT_STRNG_CELLS_ANR,
   WR_MEAS_CDMA_PERIODIC_REPORT_CGI
} LwrMeasCDMAPeriodic;



typedef enum lwrMeasUtraPeriodic
{
   WR_MEAS_UTRA_PRDRPT_STRNGCELLS,
   WR_MEAS_UTRA_PRDRPT_STRGCELLS_ANR,
   WR_MEAS_UTRA_PRDRPT_STRGCELLS_CSFB,
   WR_MEAS_UTRA_PERIODIC_REPORT_CGI
}LwrMeasUtraPeriodic;
typedef enum lwrMeasGERANPeriodic
{
   LWR_MEAS_GERAN_REPORT_STRNG_CELLS,
   LWR_MEAS_GERAN_REPORT_STRNG_CELLS_ANR,
   LWR_MEAS_GERAN_CGI
}LwrMeasGERANPeriodic;
typedef struct lwrMeasCDMAEvntB2RptCfg
{
   TknPres isPres;
   U8 reason;
   U8 cellType;
   U32 threshold1Rsrp;
   U32 threshold1Rsrq;
   U32 threshold2;
   U32 hysteresis;
   U32 timeToTrigger;
   U8 maxRptCells;
   U8 trigQtyEutra;
   U32 reportInterval;
   U32 reportAmount;
} LwrMeasCDMAEvntB2RptCfg;
typedef struct lwrMeasCDMAPeridRptCfg
{
   TknPres isPres;
   U8 reason;
   U8 cellType;
   U8 maxRptCells;
   U32 reportInterval;
   U32 reportAmount;
} LwrMeasCDMAPeridRptCfg;
typedef struct lwrMeasEutraPeridRptCfg
{
   TknPres isPres;
   U8 reason;
   U8 triggerQty;
   U8 reportQty;
   U8 maxRptCells;
   U32 reportInterval;
   U32 reportAmount;
   U32 sonCfgRptInterval;


   Bool isPerdStrongCellCfgRptEnable;
} LwrMeasEutraPeridRptCfg;
typedef struct lwrMeasCDMAEvntB1RptCfg
{
   TknPres isPres;
   U8 reason;
   U8 cellType;
   U32 threshold;
   U32 hysteresis;
   U32 timeToTrigger;
   U8 maxRptCells;
   U32 reportInterval;
   U32 reportAmount;
} LwrMeasCDMAEvntB1RptCfg;
typedef struct lwrMeasEvntA3RptCfg
{
   TknPres isPres;
   U8 reason;
   S32 offset;
   U8 reportOnLeave;
   U32 hysteresis;
   U32 timeToTrigger;
   U8 triggerQty;
   U8 reportQty;
   U8 maxRptCells;
   U32 reportInterval;
   U32 reportAmount;
} LwrMeasEvntA3RptCfg;
typedef struct lwrMeasEvntA5RptCfg
{
   TknPres isPres;
   U8 reason;
   U32 threshold1_RSRP;
   U32 threshold1_RSRQ;
   U32 threshold2_RSRP;
   U32 threshold2_RSRQ;
   U32 hysteresis;
   U32 timeToTrigger;
   U8 triggerQty;
   U8 reportQty;
   U8 maxRptCells;
   U32 reportInterval;
   U32 reportAmount;
} LwrMeasEvntA5RptCfg;
typedef struct lwrMeasEvntRptCfg
{
   TknPres isPres;
   U8 reason;
   U32 threshold_RSRP;
   U32 threshold_RSRQ;
   U32 hysteresis;
   U32 timeToTrigger;
   U8 triggerQty;
   U8 reportQty;
   U8 maxRptCells;
   U32 reportInterval;
   U32 reportAmount;
} LwrMeasEvntRptCfg;
typedef struct lwrMeasUtraPeriodRptCfg
{
   U8 reason;
   Bool activeState;
   U8 maxReportCell;
   U8 reportInterval;
   U8 reportAmount;
}LwrMeasUtraPeriodRptCfg;
typedef struct lwrMeasUtraEvntB1RptCfg
{
   LwrMeasUtraB1Type reason;
   Bool activeState;
   S8 b1ThresholdUtraRSCP;
   U8 b1ThresholdUtraEcNo;
   U8 hysteresis;
   U16 timeToTrigger;
   U8 maxReportCell;
   U8 reportInterval;
   U8 reportAmount;
}LwrMeasUtraEvntB1RptCfg;
typedef struct lwrMeasUtraEvntB2RptCfg
{
   LwrMeasUtraB2Type reason;
   Bool activeState;
   U8 b2Threshold1RSRP;
   U8 b2Threshold1RSRQ;
   S8 b2Threshold2UtraRSCP;
   S8 b2Threshold2UtraTddRSCP;
   U8 b2Threshold2UtraEcNo;
   U8 hysteresis;
   U16 timeToTrigger;
   U8 maxReportCell;
   U8 reportInterval;
   U8 reportAmount;

}LwrMeasUtraEvntB2RptCfg;
typedef struct lwrMeasGeranEvntB2RptCfg
{
   LwrMeasGeranEvntB2Type reason;
   Bool activeState;
   U8 b2Threshold1RSRP;
   U8 b2Threshold1RSRQ;
   S8 b2Threshold2Geran;
   U8 hysteresis;
   U16 timeToTrigger;
   U8 maxReportCell;
   U8 reportInterval;
   U8 reportAmount;
}LwrMeasGeranEvntB2RptCfg;




typedef struct lwrMeasGERANPeridRptCfg
{
   TknPres isPres;
   U8 reason;
   U8 maxRptCells;
   U32 reportInterval;
   U32 reportAmount;
} LwrMeasGERANPeridRptCfg;
typedef struct lwrCellMeasCfgGrp
{
   U32 reCfgType;
   LwrMeasEvntRptCfg measA1EvtRptCfg[2];
   LwrMeasEvntRptCfg measA2EvtRptCfg[2];
   LwrMeasEvntRptCfg measA4EvtRptCfg[1];
   LwrMeasEvntA3RptCfg measEvtA3Cfg[6];
   LwrMeasEvntA5RptCfg measEvtA5Cfg[5];
   LwrMeasEutraPeridRptCfg measEutraPerdRptCfg[2];
   LwrMeasUtraPeriodRptCfg measUtraPerdRptCfg[3];
   LwrMeasUtraEvntB1RptCfg measUtraEventB1RptCfg[3];
   LwrMeasUtraEvntB2RptCfg measUtraEventB2RptCfg[4];
   LwrMeasGeranEvntB2RptCfg measGeranEventB2RptCfg[2];
   LwrMeasCDMAEvntB1RptCfg meas1xCDMAEventB1RptCfg[1];
   LwrMeasCDMAEvntB1RptCfg measCDMAHrpdEventB1RptCfg[1];
   LwrMeasCDMAEvntB2RptCfg
      meas1xCDMAEventB2RptCfg[1];
   LwrMeasCDMAEvntB2RptCfg
      measCDMAHrpdEventB2RptCfg[1];
   LwrMeasCDMAPeridRptCfg meas1xCDMAPeridRptCfg[3];
   LwrMeasCDMAPeridRptCfg measCDMAHrpdPeridRptCfg[3];

   LwrMeasGERANPeridRptCfg measGERANPeridRptCfg[3];
   LwrMeasSpdStateScaleFact measSpdSclFact;
   LwrMeasMobilityStatParams mobStatParams;
   LwrMeasQtyCfgParams qtyCfg;
   LwrMeasGapConfig measGap;
   LwrMeasPreRegHrpd preRegHrpd;
   U8 searchWindowSize1xRTT;
   U8 searchWindowSizeHRPD;
   U8 anrRptCfg;
   U8 hoRptCfg;
   U8 rsrqHoThrshld;



} LwrCellMeasCfgGrp;
typedef enum lwrCellCfgGrpType
{
   WR_CELL_CFG_GRP_MIB,
   WR_CELL_CFG_GRP_SIB1,
   WR_CELL_CFG_GRP_SIB2,
   WR_CELL_CFG_GRP_SIB3,
   WR_CELL_CFG_GRP_SIB4,
   WR_CELL_CFG_GRP_SIB6,
   WR_CELL_CFG_GRP_SIB7,
   WR_CELL_CFG_GRP_SIB8,
   WR_CELL_CFG_GRP_SIB9,
   WR_CELL_CFG_GRP_ANR,
   WR_CELL_CFG_GRP_MEAS,
   WR_CELL_CFG_GRP_EAID,
   WR_CELL_CFG_GRP_SIB_SCHED,
   WR_CELL_CFG_GRP_RAB_PARAMS,
   WR_CELL_CFG_GRP_TIMER,
   WR_CELL_CFG_GRP_RRM,
   WR_CELL_CFG_GRP_ULSCHD,
   WR_CELL_CFG_GRP_DLSCHD,
   WR_CELL_CFG_GRP_ULPWRCNTRL,
   WR_CELL_CFG_GRP_RGR,
   WR_CELL_CFG_GRP_CTF,
   WR_CELL_CFG_GRP_RLC,
   WR_CELL_CFG_GRP_RAB_POLICY,
   WR_CELL_CFG_GRP_SCHD,
   WR_CELL_CFG_GRP_CSFB,
   WR_CELL_CFG_GRP_LTEA




   ,
   WR_CELL_CFG_MAX_GRPS
} LwrCellCfgGrpType;


typedef struct lwrSib3IntraFreqCellResel
{
   S8 qRxLevMin;
   U8 pMaxPres;
   S8 pMax;
   U8 sIntraSearchPres;
   U8 SIntraSearch;
   U8 allwdMeasBandwidthPres;
   U8 allwdMeasBandwidth;
   U8 antennaPort1Pres;
   U8 neighCellCfg;
   U8 tReselEutra;
   U8 tResetEutraSFMedium;
   U8 tResetEutraSFHigh;
} LwrSib3IntraFreqCellResel;
typedef struct lwrSib3ServFreqInfo
{
  U8 sNonIntraSearchPres;
  U8 sNonIntraSearch;
  U8 threshServingLow;
  U8 cellReselPrio;
} LwrSib3ServFreqInfo;
typedef struct lwrSib3MobiStateParams
{
   U8 tEvaluation;
   U8 tHyst;
   U8 nCellChangeMed;
   U8 nCellChangeHigh;
} LwrSib3MobiStateParams;




typedef struct lwrCellSib3CfgGrp
{
   U32 reCfgType;




   U8 qHyst;
   U8 speedStateReselPres;
   U8 sfMedium;
   U8 sfHigh;
   LwrMeasMobilityStatParams mobStateParams;

   LwrSib3ServFreqInfo servFreqInfo;
   LwrSib3IntraFreqCellResel intraFreqReSel;

} LwrCellSib3CfgGrp;

typedef struct lwrSib4CsgInfo
{
  U8 csgPciType;
  U16 csgStartPhyCellId;
  U8 isCsgPciCfgd;
  U8 csgPciRange;
} LwrSib4CsgInfo;
typedef struct lwrcellSib4CfgGrp
{
   U32 reCfgType;
   LwrSib4CsgInfo csgInfo;
} LwrCellSib4CfgGrp;
typedef enum lwrEnbType
{
   WR_ENODEB_TYPE_MACRO,
   WR_ENODEB_TYPE_HOME
} LwrEnbType;
typedef enum lwrX2ConFlg
{
   WR_X2_CON_DIS_ALL,
   WR_X2_CON_ENBL_ALL,
   WR_X2_CON_ENBL_FEMTO,
   WR_X2_CON_ENBL_MACRO
} LwrX2ConFlg;



typedef enum lwrEnbCellType
{
   WR_ENB_CELL_SIZE_TYPE_VERY_SMALL,
   WR_ENB_CELL_SIZE_TYPE_SMALL,
   WR_ENB_CELL_SIZE_TYPE_MEDIUM,
   WR_ENB_CELL_SIZE_TYPE_LARGE
} LwrEnbCellType;


typedef struct lwrCellEAIDCfgGrp
{
   U32 reCfgType;
   TknU32 eaid[15];
} LwrCellEAIDCfgGrp;


typedef struct lwrCellSibSchedCfgGrp
{
  U32 reCfgType;
   U8 sib2Period;
   U8 sib3Period;
   U8 sib4Period;
   U8 sib5Period;
   U8 sib6Period;
   U8 sib7Period;
   U8 sib8Period;
   U8 sib9Period;
   U8 sib10Period;
   U8 sib11Period;
   U8 sib12Period;
   U8 siWindow;
   Bool sib10ManualPrdPres;
   U16 sib10RepetPeriod;
   U16 sib10NumBroadCast;
   U16 sib11WarnSegSize;
   Bool sib6PeriodValid;
   Bool sib7PeriodValid;
   Bool sib8PeriodValid;
} LwrCellSibSchedCfgGrp;




typedef struct lwrCdmaTgtcell
{
   U16 marketId;
   U16 switchNum;
   U16 cellId;
   U16 sectorNum;
}LwrCdmaTgtCell;




typedef struct lwrCdmaSectorId
{
   Bool isOctStrPres;

   U32 cdmaType;
   union
   {
      TknStrOSXL sectorIdPtr;
      LwrCdmaTgtCell cdmaSectorId;
   }s;
}LwrCdmaSectorId;


typedef struct lwrCsfbCdma1xRttCfgParams
{
   LwrCdmaSectorId secId;
   LwrCdma2k1xMobParams mobParams;
}LwrCsfbCdma1xRttCfgParams;

typedef enum wrCsfbSupport
{
   LWR_CSFB_WITHOUT_MEAS,
   LWR_CSFB_WITH_MEAS
}LwrCsfbSupport;

typedef enum wrEcsfbSupport
{
   LWR_ECSFB_NOT_SUPPORTED,
   LWR_ECSFB_WITHOUT_MEAS,
   LWR_ECSFB_WITH_MEAS
}LwrEcsfbSupport;


typedef struct lwrCsfbCfgParams
{
   Bool dualRxSup;

   LwrCsfbSupport csfbToUtraMeasSup;


   LwrCsfbSupport csfbToCdmaMeasSup;


   LwrEcsfbSupport eCsfbMeasSup;


   Bool cdma1xRttSup;
   LwrCsfbCdma1xRttCfgParams cdma1xrttCsfbCfg;

   Bool dualRxTxSup;

}LwrCsfbCfgGrp;

typedef enum lwrUpdateRetryCount
{
   ci_CountZero = 0,
   ci_CountOne = 1,
   ci_CouintTwo = 2,
   ci_CountThree = 3,
   ci_CountTen = 4,
   ci_CountInfinity = 5
} LwrUpdateRetryCount;

typedef enum lwrUpdateTimeToWait
{
   ci_v1s = 0,
   ci_v2s = 1,
   ci_v5s = 2,
   ci_v10s = 3,
   ci_v20s = 4,
   ci_v60s = 5
}LwrUpdateTimeToWait;


typedef struct lwrProcTimerCfgGrp
{
   U32 reCfgType;
   U8 dbIndex;
   U32 rrcConnectionSetupTmr;
   U32 rrcConnectionReconfigTmr;
   U32 rrcConnectionReEstablishTmr;
   U32 rrcSecurityModeCommandTmr;
   U32 rrcUeCapabilityEnquiryTmr;
   U32 rrcConnectionReleaseTmr;
   U32 rrcHandoverPrepTmr;
   U32 rrcUeInformationRequestTmr;
   U16 s1SetupTmr;
   U16 s1UpdateTmr;
   LwrUpdateRetryCount s1RetryCount;
   LwrUpdateTimeToWait s1TimeToWait;
   U16 s1InitialContextSetupTmr;
   U16 s1ErabReleaseIndicationTmr;
   U16 s1UeContextReleaseTmr;
   U16 s1PathSwitchTmr;
   U16 s1HandoverPrepTmr;
   U16 s1RelocOverallTmr;

   U16 s1IRatHandoverPrepTmr;

   U16 s1IRatRelocOverallTmr;
   U16 s1HandoverCancelTmr;
   U16 s1MmeConfigurationTransferTmr;
   U16 s1MmeStatusTransferTmr;
   U16 s1ResetTmr;
   U16 S1ResetRetryCount;
   U16 x2SetupTmr;
   LwrUpdateTimeToWait x2SetTimeToWait;
   U16 x2UpdateTmr;
   LwrUpdateRetryCount x2UpdRetryCount;
   LwrUpdateTimeToWait x2UpdTimeToWait;
   U16 x2HandoverPrepTmr;
   U16 x2RelocOverallTmr;
   U16 x2StoreUeContextTmr;
   U16 x2SnStatusTransferTmr;
   U16 x2ResetTmr;
   U16 X2ResetRetryCount;
   U16 X2SetupRetryCount;
   U16 internalResourceSetupTmr;
   U16 internalResourceReleaseTmr;
   U16 internalSecurityControlTmr;
   U16 internalRrcDataTransferTmr;
   U16 internalForwardingPathSetupTmr;
   U16 internalReestablishControlTmr;
   U16 internalBufferFlushTmr;
   U16 internalDataTransferStartTmr;
   U16 internalDataForwardEndIndTmr;
   U16 internalReestablishTimeToWaitTmr;
   U16 internalUserInactivityTmr;
   U16 internalSignalingInactivityTmr;
   U16 internalUnassignedTmr;
   U16 internalNoWaitRetryTmr;
   U16 internalRrcResetTmr;
   U16 internalEnbResetTmr;
   U16 internalSolicitMeasurementTmr;
   U16 internalRtdInfoReqTmr;
   U16 internalSubCellChangeTmr;
   U16 internalSubCellPdcpControlTmr;
   U16 ehrpdOptHoCompleteTmr;
   U16 intraEnbHoCompleteTmr;
   U16 measurementReportToWaitTmr;
   U32 rimOvrlTmr;
   U32 rimRirTmr;
   U32 rimRiTmr;
   U32 rimRiaeTmr;
   U32 rimMaxRetryCnt;
}LwrProcTimerCfgGrp;

typedef enum lwrTimerPollRetransmit
{
   LTE_MS5,
   LTE_MS10,
   LTE_MS15,
   LTE_MS20,
   LTE_MS25,
   LTE_MS30,
   LTE_MS35,
   LTE_MS40,
   LTE_MS45,
   LTE_MS50,
   LTE_MS55,
   LTE_MS60,
   LTE_MS65,
   LTE_MS70,
   LTE_MS75,
   LTE_MS80,
   LTE_MS85,
   LTE_MS90,
   LTE_MS95,
   LTE_MS100,
   LTE_MS105,
   LTE_MS110,
   LTE_MS115,
   LTE_MS120,
   LTE_MS125,
   LTE_MS130,
   LTE_MS135,
   LTE_MS140,
   LTE_MS145,
   LTE_MS150,
   LTE_MS155,
   LTE_MS160,
   LTE_MS165,
   LTE_MS170,
   LTE_MS175,
   LTE_MS180,
   LTE_MS185,
   LTE_MS190,
   LTE_MS195,
   LTE_MS200,
   LTE_MS205,
   LTE_MS210,
   LTE_MS215,
   LTE_MS220,
   LTE_MS225,
   LTE_MS230,
   LTE_MS235,
   LTE_MS240,
   LTE_MS245,
   LTE_MS250,
   LTE_MS300,
   LTE_MS350,
   LTE_MS400,
   LTE_MS450,
   LTE_MS500,
   LTE_SPARE9,
   LTE_SPARE8,
   LTE_SPARE7,
   LTE_SPARE6,
   LTE_SPARE5,
   LTE_SPARE4,
   LTE_SPARE3,
   LTE_SPARE2,
   LTE_SPARE1

} LwrTimerPollRetransmit;


typedef enum lwrPollPdu
{
   LTE_P4,
   LTE_P8,
   LTE_P16,
   LTE_P32,
   LTE_P64,
   LTE_P128,
   LTE_P256,
   LTE_PInfinity
} LwrPollPdu;

typedef enum lwrPollByte
{
   LTE_KB25,
   LTE_KB50,
   LTE_KB75,
   LTE_KB100,
   LTE_KB125,
   LTE_KB250,
   LTE_KB375,
   LTE_KB500,
   LTE_KB750,
   LTE_KB1000,
   LTE_KB1250,
   LTE_KB1500,
   LTE_KB2000,
   LTE_KB3000,
   LTE_KBinfinity,
   LTE_SPARE_1
} LwrPollByte;

typedef enum lwrMaxRetransThresh
{
   LTE_T1,
   LTE_T2,
   LTE_T3,
   LTE_T4,
   LTE_T6,
   LTE_T8,
   LTE_T16,
   LTE_T32
} LwrMaxRetransThresh;

typedef enum lwrTimerReordering
{
   LTE_TR_MS0,
   LTE_TR_MS5,
   LTE_TR_MS10,
   LTE_TR_MS15,
   LTE_TR_MS20,
   LTE_TR_MS25,
   LTE_TR_MS30,
   LTE_TR_MS35,
   LTE_TR_MS40,
   LTE_TR_MS45,
   LTE_TR_MS50,
   LTE_TR_MS55,
   LTE_TR_MS60,
   LTE_TR_MS65,
   LTE_TR_MS70,
   LTE_TR_MS75,
   LTE_TR_MS80,
   LTE_TR_MS85,
   LTE_TR_MS90,
   LTE_TR_MS95,
   LTE_TR_MS100,
   LTE_TR_MS110,
   LTE_TR_MS120,
   LTE_TR_MS130,
   LTE_TR_MS140,
   LTE_TR_MS150,
   LTE_TR_MS160,
   LTE_TR_MS170,
   LTE_TR_MS180,
   LTE_TR_MS190,
   LTE_TR_MS200,
   LTE_TR_SPARE1
} LwrTimerReordering;

typedef enum lwrTimerStatusProhibit
{
   LTE_TSP_MS0,
   LTE_TSP_MS5,
   LTE_TSP_MS10,
   LTE_TSP_MS15,
   LTE_TSP_MS20,
   LTE_TSP_MS25,
   LTE_TSP_MS30,
   LTE_TSP_MS35,
   LTE_TSP_MS40,
   LTE_TSP_MS45,
   LTE_TSP_MS50,
   LTE_TSP_MS55,
   LTE_TSP_MS60,
   LTE_TSP_MS65,
   LTE_TSP_MS70,
   LTE_TSP_MS75,
   LTE_TSP_MS80,
   LTE_TSP_MS85,
   LTE_TSP_MS90,
   LTE_TSP_MS95,
   LTE_TSP_MS100,
   LTE_TSP_MS105,
   LTE_TSP_MS110,
   LTE_TSP_MS115,
   LTE_TSP_MS120,
   LTE_TSP_MS125,
   LTE_TSP_MS130,
   LTE_TSP_MS135,
   LTE_TSP_MS140,
   LTE_TSP_MS145,
   LTE_TSP_MS150,
   LTE_TSP_MS155,
   LTE_TSP_MS160,
   LTE_TSP_MS165,
   LTE_TSP_MS170,
   LTE_TSP_MS175,
   LTE_TSP_MS180,
   LTE_TSP_MS185,
   LTE_TSP_MS190,
   LTE_TSP_MS195,
   LTE_TSP_MS200,
   LTE_TSP_MS205,
   LTE_TSP_MS210,
   LTE_TSP_MS215,
   LTE_TSP_MS220,
   LTE_TSP_MS225,
   LTE_TSP_MS230,
   LTE_TSP_MS235,
   LTE_TSP_MS240,
   LTE_TSP_MS245,
   LTE_TSP_MS250,
   LTE_TSP_MS300,
   LTE_TSP_MS350,
   LTE_TSP_MS400,
   LTE_TSP_MS450,
   LTE_TSP_MS500,
   LTE_TSP_SPARE8,
   LTE_TSP_SPARE7,
   LTE_TSP_SPARE6,
   LTE_TSP_SPARE5,
   LTE_TSP_SPARE4,
   LTE_TSP_SPARE3,
   LTE_TSP_SPARE2,
   LTE_TSP_SPARE1

} LwrTimerStatusProhibit;

typedef enum lwrSnFieldLength
{
   SIZE5,
   SIZE10
} LwrSnFieldLength;

typedef enum lwrPrioritisedBitRate
{
   LTE_PBR_KBPS0,
   LTE_PBR_KBPS8,
   LTE_PBR_KBPS16,
   LTE_PBR_KBPS32,
   LTE_PBR_KBPS64,
   LTE_PBR_KBPS128,
   LTE_PBR_KBPS256,
   INFINITY,
   LTE_PBR_SPARE8,
   LTE_PBR_SPARE7,
   LTE_PBR_SPARE6,
   LTE_PBR_SPARE5,
   LTE_PBR_SPARE4,
   LTE_PBR_SPARE3,
   LTE_PBR_SPARE2,
   LTE_PBR_SPARE1

} LwrPrioritisedBitRate;







typedef enum lwrBucketSizeDurn
{
   LTE_BSD_MS50,
   LTE_BSD_MS100,
   LTE_BSD_MS150,
   LTE_BSD_MS300,
   LTE_BSD_MS500,
   LTE_BSD_MS1000,
   LTE_BSD_SPARE2,
   LTE_BSD_SPARE1

} LwrBucketSizeDurn;
typedef struct lwrSrbQciInfo
{
   U8 srbId;
   U8 resourceType;
   U8 priotity;
   U8 pdb;
   U8 pler;
}LwrSrbQciInfo;

typedef struct lwrSrbLchInfo
{
   U8 srbId;
   U8 pbr;
   U8 bucketSizeDuration;
   U8 lchGrpId;
   U8 priority;
}LwrSrbLchInfo;
typedef struct lwrSrbRlcInfo
{
   U8 srbId;
   LwrTimerPollRetransmit tpRetransmit;
   LwrPollPdu pollPdu;
   LwrPollByte pollByte;
   LwrMaxRetransThresh maxRetransThresh;
   LwrTimerReordering timerReorderingUl;
   LwrTimerReordering timerReorderingDl;
   LwrTimerStatusProhibit timerStatusProhibit;
}LwrSrbRlcInfo;
typedef struct lwrSrbPolicy
{
   U32 reCfgType;
   U8 srbId;
   LwrSrbRlcInfo rlcInfo;
   LwrSrbLchInfo lchInfo;
   LwrSrbQciInfo qciInfo;
}LwrSrbPolicy;

typedef struct lwrDrbPdcpInfo
{
   S16 qci;
   U16 umSnSize;
   U8 discardTimer;

   U16 fwdEndTimer;

   Bool statRprtReqrd;
} LwrDrbPdcpInfo;

typedef struct lwrDrbRlcInfo
{
   S16 qci;
   U8 rlcMode;
   LwrTimerPollRetransmit dlTpRetransmit;
   LwrPollPdu dlPollPdu;
   LwrPollByte dlPollByte;
   LwrMaxRetransThresh dlMaxRetransThresh;
   LwrTimerReordering dlTimerReordering;
   LwrTimerStatusProhibit dlTimerStatusProhibit;
   LwrTimerPollRetransmit ulTpRetransmit;
   LwrPollPdu ulPollPdu;
   LwrPollByte ulPollByte;
   LwrMaxRetransThresh ulMaxRetransThresh;
   LwrTimerReordering ulTimerReordering;
   LwrTimerStatusProhibit ulTimerStatusProhibit;
   LwrSnFieldLength ulSnFieldLength;
   LwrSnFieldLength dlSnFieldLength;
} LwrDrbRlcInfo;

typedef struct lwrDrbLchInfo
{
   S16 qci;
   LwrPrioritisedBitRate prioritisedBitRate;
   LwrBucketSizeDurn bcketSizeDurn;
   U16 lchPriority;
   U16 nonGbrPfWgt;
} LwrDrbLchInfo;

typedef struct lwrDrbQciInfo
{
   S16 qci;
   Bool qciSupported;
   U8 resourceType;
   U8 priotity;
   U8 pdb;
   U8 pler;
   U8 bhServiceGrp;
   U16 schedulingType;
}LwrDrbQciInfo;

typedef struct lwrDrbDscpInfo
{
   S16 qci;
   U16 dscp;
   U16 port;
}LwrDrbDscpInfo;
typedef struct lwrDrbPolicy
{
   U32 reCfgType;
   U8 qci;
   LwrActType action;
   LwrDrbQciInfo qciInfo;
   LwrDrbLchInfo lchInfo;
   LwrDrbRlcInfo rlcInfo;
   LwrDrbPdcpInfo pdcpInfo;
   LwrDrbDscpInfo dscpInfo;
} LwrDrbPolicy;

typedef struct lwrRabPolicyCfgGrp
{
   U32 reCfgType;
   U8 numSrbPolicies;
   U8 numDrbPolicies;
   U8 arpForEmergencyServ;
   LwrSrbPolicy srbPolicy[3];
   LwrDrbPolicy drbPolicy[256];
} LwrRabPolicyCfgGrp;


typedef struct lwrEnbCacInfo
{
   U8 dbIndex;
   Bool callCountCacUsage;
   U16 maxEnbCallCount;
   U16 callCacThreshForNormal;
   U16 callCacThreshForEmerHo;
   Bool checkUeIdUsage;
   Bool plmnEnbCacUsage;
   U16 dfltRrmRntiSize;
   U16 dfltRrmStartPreamble;
   U16 dfltRrmNumPreamble;
} LwrEnbCacInfo;

typedef struct lwrRrmCfgGrp
{
   LwrEnbCacInfo enbCacInfo;
} LwrRrmCfgGrp;

typedef struct lwrCellUlSchdCfgGrp
{
   U8 maxUePerUlSf;
   U8 maxUlUeNewTxPerTti;
   U32 pfsUlTptCoefficient;
   U32 pfsUlFairCoefficient;
   U32 dlMimoMode;
   U32 alpha;
   U32 beta;
   U32 gamma;
   U32 backhaulDelay;
   U32 ulSchedulingAlg;
}LwrCellUlSchdCfgGrp;

typedef struct lwrCellDlSchdCfgGrp
{
   U32 reCfgType;
   U8 maxUePerDlSf;

   U8 maxDlUeNewTxPerTti;
   U32 pfsDlTptCoefficient;
   U32 pfsDlFairCoefficient;
   U32 dlMimoMode;
   U32 alpha;
   U32 beta;
   U32 gamma;
   U32 backhaulDelay;
   U32 dlSchedulingAlg;
   U8 dlfsSchdType;
   U8 dlfsSchd;
}LwrCellDlSchdCfgGrp;
typedef struct lwrCellSib6CfgGrp
{
   U32 reCfgType;
   TknPres sfUsagePres;
   U16 tReselection;
   U8 tReselectionSfMedium;
   U8 tReselectionSfHigh;

}LwrCellSib6CfgGrp;


typedef enum lwrSpdStSclFactor
{
   LWR_O_DOT_25,
   LWR_O_DOT_5,
   LWR_O_DOT_75,
   LWR_1_DOT_0
} LwrSpdStSclFactor;




typedef struct lwrCellSib7CfgGrp
{
   U32 reCfgType;
   U8 tReselectionGERAN;
   TknPres pres_SpeedStateScaleFactors;
   LwrSpdStSclFactor tReselectionGERANSFMedium;
   LwrSpdStSclFactor tReselectionGERANSFHigh;
}LwrCellSib7CfgGrp;




typedef struct lwr1xRttCsfbRegInfo
{
   Bool pres;
   U16 sid;
   U16 nid;
   Bool mulSID;
   Bool mulNID;
   Bool homeReg;
   Bool foreignSIDReg;
   Bool foreignNIDReg;
   Bool paramReg;
   Bool powerUpReg;
   U8 regPeriod;
   U16 regZone;
   U8 totalZone;
   U8 zoneTimer;
   U8 powerDownRegPres;
}Lwr1xRttCsfbRegInfo;


typedef struct Lwr1xRttACBarringCfg
{
  Bool pres;
  U8 acBarring0to9_r9;
  U8 acBarring10_r9;
  U8 acBarring11_r9;
  U8 acBarring12_r9;
  U8 acBarring13_r9;
  U8 acBarring14_r9;
  U8 acBarring15_r9;
  U8 acBarringMsg_r9;
  U8 acBarringReg_r9;
  U8 acBarringEmg_r9;
}Lwr1xRttACBarringCfg;

typedef struct lwrCdma1xRttParams
{
   Lwr1xRttCsfbRegInfo cdma1xrttRegParams;
   Lwr1xRttACBarringCfg cdma1xrttACBarringCfg;
}LwrCdma1xRttParams;

typedef struct lwrCellSib8CfgGrp
{
   Bool cdmaEutraTimeSync;



   U8 tReselection;
   Bool speedStatePres;

   U8 sfMedium;
   U8 sfHigh;
   LwrCdma1xRttParams cdma1xrttParams;
}LwrCellSib8CfgGrp;




typedef struct lwrCellSib9CfgGrp
{
   U8 henbName[48];
}LwrCellSib9CfgGrp;




typedef struct lwrAnrDrxCfg
{
   U8 drxOnDurTmr;
   U16 longDrxCycle;
   U8 inActivTmr;
}LwrAnrDrxCfg;


typedef struct lwrCellAnrCfgGrp
{
   TknU8 maxRankWght;
   TknU8 minRankWght;
   TknU32 epocTimerVal;
   U8 tricePeriodIntv;
   U32 csfbTransTmrVal;
   LwrAnrDrxCfg ueAnrDrxCfg;
   U8 anrCellValidAge;
} LwrCellAnrCfgGrp;





typedef struct lwrReCfg
{
   RgrFeatureStatus status;
   U8 neighQoffset;



   U8 neighCIO;



}LwrReCfg;


typedef struct lwrLteAdvancedConfig
{
   S8 a3Offset;
   U8 enbType;


   RgrAbsConfig absCfg;

   RgrSfrConfig sfrCfg;
   LwrReCfg reCfg;
   RgrDsfrConfig dsfrCfg;
}LwrLteAdvancedConfig;



typedef struct lwrLteAdvancedConfigTrans
{
   U32 pres;
   LwrLteAdvancedConfig lteAdvancedConfig;
}LwrLteAdvancedConfigTrans;


typedef struct lwrCellSchdPwrCfg
{
   U16 pucchPwrFmt3Rnti;
   U16 pucchPwrFmt3Siz;
   U16 pucchPwrFmt3aRnti;
   U16 pucchPwrFmt3aSiz;
   U16 puschPwrFmt3Rnti;
   U16 puschPwrFmt3Siz;
   U16 puschPwrFmt3aRnti;
   U16 puschPwrFmt3aSiz;
   U8 pucchPwrFmt3aEnable;
   U8 puschPwrFmt3aEnable;
   U8 isUlGrpPwrCntrlPucchEnable;
   U8 isUlGrpPwrCntrlPuschEnable;
}LwrCellSchdPwrCfg;

typedef struct lwrCellSchdRachCfg
{
   U8 preambleFormat;
   U8 raOccSize;
   U8 raOccSfnEnum;
   U16 prachResource;
}LwrCellSchdRachCfg;


typedef struct lwrCellSchdSpsCfg
{
   Bool bIsSpsEnabled;
   U16 maxDlSpsUePerTti;
   U16 maxUlSpsUePerTti;
   U8 maxDlBwInRbs;
} LwrCellSchdSpsCfg;


typedef struct lwrCellSchdGenCfg
{
   U8 macInst;
   U8 maxUePerUlSf;


   U8 maxUePerDlSf;


   U8 maxUlBwPerUe;





   U8 maxDlBwPerUe;





   U8 maxDlRetxBw;





   U8 maxDlUeNewTxPerTti;




  U8 maxUlUeNewTxPerTti;
  Bool cellModSchm;
  U8 dlfsSchdType;

}LwrCellSchdGenCfg;

typedef struct lwrCellSchdCfg
{
   U8 srsBwEnum;
   U8 prdEnum;
   U8 modPrd;
   U8 siWinSize;
   U8 retxCnt;
   LwrCellSchdPwrCfg pwrCfg;
   Bool preamPres;
   U8 preamStart;
   U8 preamSize;
   LwrCellSchdRachCfg rachCfg;
   LwrCellSchdGenCfg genCfg;

   LwrCellSchdSpsCfg spsCfg;

   Bool isDynCfiEnb;
}LwrCellSchdCfg;

typedef struct lwrRgrCfgGrp
{
  U16 dfltStartRnti;
  U16 dfltRntiSize;
  U8 dfltCfiCfg;
  U8 dfltTrgUlCqi;
  U16 dfltBcchPchRaCodeRate;
  U16 dfltPdcchCodeRate;
  U8 dfltPuschSubBndStrt;
  U8 dfltPuschNoSubbnds;
  U8 dfltULCmnCodRateCcchCqi;
  U8 dfltDLCmnCodRateCcchCqi;
  U8 dfltIsDlFreqSel;
  U8 dfltThresholdCqi;
  U8 dfltMaxDlHqTx;
  U8 dfltMaxMsg4HqTx;
  U8 dfltPuschSubBandSz;
  U8 dfltPuschSubBandDmrs;
  U8 dfltMaxPucchRbs;
}LwrRgrCfgGrp;
typedef struct lwrCtfCfgGrp
{
   CtfSCSpacing dfltScSpacing;
   U32 dfltOpMode;
   U32 dfltTagPeriod;
}LwrCtfCfgGrp;

typedef struct lwrDlRlcModeInfo
{
   U8 dfltAmRlcSrbmaxRetxThresh;
   U16 dfltAmRlcSrbmaxpollByte;
   U16 dfltAmRlcSrbpollPdu;
   U16 dfltAmRlcSrbtPollRetx;
   U8 dfltAmRlcDrbmaxRetxThresh;
   U16 dfltAmRlcDrbmaxpollByte;
   U16 dfltAmRlcDrbpollPdu;
   U16 dfltAmRlcDrbtPollRetx;
   U8 dfltUmRlcsnFieldLen;
   U8 srbtReordring;
   U8 drbtReordring;
}LwrDlRlcModeInfo;

typedef struct lwrUlRlcModeInfo
{
   U8 dfltAmRlcSrbtStatusProh;
   U8 srbtReordring;
   U8 dfltAmRlcDrbtStatusProh;
   U8 drbtReordring;
   U8 dfltUmRlcsnFieldLen;
}LwrUlRlcModeInfo;

typedef struct lwrRlcCfgGrp
{
   LwrDlRlcModeInfo dlModeInfo;
   LwrUlRlcModeInfo ulModeInfo;
}LwrRlcCfgGrp;

typedef struct lwrAddPwrCntrlParams
{
   Bool deltaMCSenabled;
   S32 p0UePUSCH;
   S32 p0UePUCCH;
   Bool accumulationEnabled;
   U32 pSRSoffset;
   U32 filterCoefficient;
}LwrAddPwrCntrlParams;


typedef struct lwrCellCfgGrp
{
   LwrCellCfgGrpType grpType;
   union
   {
      LwrCellMibCfgGrp mibCfgGrp;
      LwrCellSib1CfgGrp sib1CfgGrp;
      LwrCellSib2CfgGrp sib2CfgGrp;
      LwrCellSib3CfgGrp sib3CfgGrp;
      LwrCellSib4CfgGrp sib4CfgGrp;
      LwrCellSib6CfgGrp sib6CfgGrp;
      LwrCellSib7CfgGrp sib7CfgGrp;
      LwrCellSib8CfgGrp sib8CfgGrp;
      LwrCellSib9CfgGrp sib9CfgGrp;
      LwrCellAnrCfgGrp anrCfgGrp;
      LwrCellMeasCfgGrp measCfgGrp;
      LwrCellEAIDCfgGrp eaidCfgGrp;
      LwrCellSibSchedCfgGrp sibSchedCfgGrp;
      LwrRabPolicyCfgGrp rabPolicyCfgGrp;
      LwrProcTimerCfgGrp procTimerCfgGrp;
      LwrRrmCfgGrp rrmCfgGrp;
      LwrCellUlSchdCfgGrp ulSchdCfgGrp;
      LwrCellDlSchdCfgGrp dlSchdCfgGrp;
      LwrRgrCfgGrp rgrCfgGrp;
      LwrCtfCfgGrp ctfCfgGrp;
      LwrRlcCfgGrp rlcCfgGrp;
      LwrCellSchdCfg schdCfgGrp;
      LwrAddPwrCntrlParams uLPwrCtrl;
      LwrCsfbCfgGrp csfbCfgGrp;
      LwrLteAdvancedConfigTrans lteAdvCfgGrp;



   }t;
} LwrCellCfgGrp;

typedef struct lwrLowPwrCfg
{
   S8 lowRefSigPwr;
   S16 lowPilotSigPwr;
   S16 lowPriSigPwr;
   S16 lowSecSigPwr;
}LwrLowPwrCfg;

typedef struct lwrHighPwrCfg
{
   S8 highRefSigPwr;
   S16 highPilotSigPwr;
   S16 highPriSigPwr;
   S16 highSecSigPwr;
}LwrHighPwrCfg;
typedef struct lwrShutdownPwrCfg
{
   LwrLowPwrCfg lwPwrCfg;
   LwrHighPwrCfg hiPwrCfg;
}LwrShutdownPwrCfg;


typedef enum
{
   WR_ENB_OPEN_ACCESS = 1,
   WR_ENB_CLOSED_ACCESS,
   WR_ENB_HYBRID_ACCESS
} LwrEnbAccessMode;





typedef struct lwrCsgPciRangeInfo
{
   Bool pciRangeInfoPres;
   U16 startPci;
   U16 pciRange;
} LwrCsgPciRangeInfo;

typedef LnlSonCfg LwrSonCfg;
typedef LnlSonSchdCfg LwrSonSchdCfg;

typedef struct lwrHCsgParam
{
   U8 minDlResNonCsg;
   U8 minUlResNonCsg;
   U16 maxCsgUeSup;
   U16 maxNonCsgUeSup;
}LwrHCsgParam;
typedef struct lwrTxnModeInfo
{
   U8 txPrefMode;
   Bool isAutoCfgModeEnb;
} LwrTxnModeInfo;






typedef struct lwrMacMainSchCfg
{
  U32 maxHARQ_Tx;
  U32 periodicBSR_Timer;
  U32 retxBSR_Timer;
   U8 deltaHqOffset;
  U8 ttiBundling;
}LwrMacMainSchCfg;





typedef struct lwrDrxLongCycleOffst
{
   U16 longDrxCycle;
   U16 drxStartOffst;
} LwrDrxLongCycleOffst;
typedef struct lwrDrxShortDrx
{
   Bool pres;
   U16 shortDrxCycle;
   U8 drxShortCycleTmr;
}LwrDrxShortDrx;
typedef struct lwrDrxCfg
{
   Bool isDrxEnabled;
   TknS32 cqiMask;
   U16 drxInactvTmr;
   U8 drxOnDurTmr;
   U8 drxRetxTmr;
   LwrDrxLongCycleOffst drxLongCycleOffst;
   LwrDrxShortDrx drxShortDrx;
}LwrDrxCfg;






typedef struct lwrMacMainPhrCfg
{
   U32 periodicPHR_Timer;
   U32 prohibitPHR_Timer;
   U32 dl_PathlossChange;
}LwrMacMainPhrCfg;
typedef struct lwrMacMainConifg
{
  U32 reCfgType;
  LwrMacMainSchCfg ulSchCfg;
  U8 timeAlignmentTimerDedicated;
  LwrDrxCfg drxCfg;
  LwrMacMainPhrCfg phr_Config;
  TknU32 srProhibitTimer;
}LwrMacMainConifg;







typedef struct lwrPdschCfgDedicated
{
   U8 pA;
}LwrPdschCfgDedicated;


typedef enum wrCqiFormatInd
{
   WR_UE_CQI_FMT_WB = 1,
   WR_UE_CQI_FMT_SB
}WrCqiFormatInd;

typedef struct lwrUeUlPwrCfg
{
   Bool pres;
   CmLteRnti tpcRnti;
   U8 idx;
   U8 isFmt3a;
}LwrUeUlPwrCfg;

typedef enum wrSubbandCqiPeriodicityFactor
{
 WR_PERIODICITY_FACTOR_N2,
 WR_PERIODICITY_FACTOR_N4
}WrSubbandCqiPeriodicityFactor;
typedef struct wrCqiRptCfg
{
      Bool aperCqiEnbld;
   Bool simulAckNackAndCQI;
   Bool riPres;
      U32 cqiAperiodicMode;




      U16 cqiPucchRsrcIdx;
      U16 cqipmiCfgIdx;
   S8 nomPdschRsEpreOff;
   U8 periodRptSetupPres;
      U8 subbndCqik;
 WrSubbandCqiPeriodicityFactor sBCqiPeriodicityFactor;
      WrCqiFormatInd fmtInd;
      U16 riCfgIdx;
      U32 periodicmode;
}WrCqiRptCfg;

typedef struct lwrSchReqCfg
{
      U16 srPucchRsrcIdx;
      U16 srCfgIdx;
      U32 dsrTransMax;
}LwrSchReqCfg;

typedef struct lwrPuschDedCfg
{
   U8 ackIdx;
   U8 riIdx;
   U8 cqiIdx;
   LwrUeUlPwrCfg puschPwrCfg;
}LwrPuschDedCfg;

typedef struct lwrQosCfg
{
   Bool ambrPres;
   U32 dlAmbr;
   U32 ueBr;
} LwrQosCfg;


typedef struct lwrCsfbGeranCfg
{
   Bool isGERANMeasAllowedForCCO;

   Bool isCCOAllowed;
   U32 rrcDatCfmWaitTmr;
   U32 GERANMeasWaitTmr;
   U32 T304expWaitTmrVal;
} LwrCsfbGeranCfg;
typedef struct lwrAddCellCfg
{
   U32 reCfgType;
   U8 cellIndex;
   U32 cellId;
   U16 physCellId;
   U16 numOfGrps;
   U8 duplexMode;
   U16 dlCarrierFreq;
   LwrCsfbSupport measFlagForCsfbUtra;
   LwrCsfbSupport measFlagForCsfbCdma;
   LwrEcsfbSupport measFlagForEcsfb;
   LwrCellCfgGrp cellCfgGrp[WR_CELL_CFG_MAX_GRPS];



   LwrShutdownPwrCfg shutdownPwrCfg;

   Bool isDRXQCIEnabled;

   U8 csgAccessMode;
   LwrCsgPciRangeInfo smallCellCsgPciRange;
   LwrHCsgParam hcsgParam;



   LwrEnbCellType cellSizeType;


   LwrMacMainConifg macMainCfg;
   LwrPdschCfgDedicated pdschCfgDedicated;
   WrCqiRptCfg cqiRptCfg;
   LwrDrbPdcpInfo pdcpInfo;
   LwrSchReqCfg schReqCfg;
   LwrPuschDedCfg puschDedicated;
   LwrUeUlPwrCfg pucchPwrCfg;
   LwrQosCfg qosCfg;
   U8 numTxAntenna;
   LwrCsfbGeranCfg csfbToGeranCfg;




   U8 txPrefMode;
   Bool isAutoCfgModeEnb;
   LwrSonCfg sonCfg;

} LwrAddCellCfg;


typedef struct lwrDelCell
{
   U8 cellIndex;
} LwrDelCell;



typedef struct lwrCellCfg
{
   LwrActType action;
   union
   {
      LwrAddCellCfg addCell;
      LwrAddCellCfg modCell;
      LwrDelCell delCell;
   }t;
} LwrCellCfg;

typedef enum lwrNeighEnbState
{
   WR_NEIGH_ENB_STATE_DOWN = 1,
   WR_NEIGH_ENB_STATE_UP = 2
} LwrNeighEnbState;

typedef struct lwrGuGrpIdLst
{
   LwrPlmnId plmnId;
   U16 mmeGrpId;
} LwrGuGrpIdLst;
typedef struct lwrEUTRANeighCfg
{
   U8 enbIndx;
   U32 enbId;
   LwrEnbType enbType;
   LwrPlmnId plmn;
   CmTptAddr ipAddr;
   CmTptAddr secIpAddr;
   LwrNeighEnbState state;
   Bool isX2Reqd;
   Bool noHO;
   Bool noDirectFwd;




} LwrEUTRANeighCfg;




typedef struct lwrCDMA2KNeighCfg
{
   U8 cellIndex;
} LwrCDMA2KNeighCfg;

typedef enum lwrNeighType
{
   WR_NEIGH_CELL_EUTRA,
   WR_NEIGH_CELL_CDMA2K_1XRTT,
   WR_NEIGH_CELL_CDMA2K_HRPD,
   WR_NEIGH_CELL_UTRA_FDD,
   WR_NEIGH_CELL_UTRA_TDD,
   WR_NEIGH_CELL_GERAN
} LwrNeighType;

typedef enum lwrNeighCfgType
{
   WR_NEIGH_CELL_CFG_INITIAL = 1,
   WR_NEIGH_CELL_CFG_DYNAMIC,
   WR_NEIGH_CELL_CFG_ANR
}LwrNeighCfgType;




typedef struct lwrNeighAddModCfg
{
   U8 enbIndx;
   U32 peerId;
   U32 enbId;
   LwrEnbType enbType;
   LwrPlmnId plmn;
   CmTptAddr ipAddr;
   CmTptAddr secIpAddr;
   LwrNeighEnbState state;
   LwrX2ConFlg isX2Reqd;

   RgrSfrRbRange dsfrCEFreqRange;





   WrFreqAlarmVal alarmVal;
} LwrNeighAddModCfg;


typedef struct lwrNeighDel
{
      U8 enbIndx;
      U32 enbId;
} LwrNeighDel;


typedef struct lwrNeighCfg
{
   U16 cellId;
   LwrActType action;
   U8 numEnb;
   union
   {
      LwrNeighAddModCfg neighAdd[25];
      LwrNeighAddModCfg neighMod[25];
      LwrNeighDel neighDel[25];
   }t;
} LwrNeighCfg;

typedef struct lwrMmeLdBalCfg
{
   U16 mmeGroupId;
   U16 mmeGrpPrior;
}LwrMmeLdBalCfg;

typedef struct lwrSctpParamCfg
{
   U32 mmeFailoverTimer;
   U32 numPathReTx;
   U32 connectInterval;
   U32 maxInitRetx;
   U32 maxAssocRetx;
   U32 cookieLife;
   U32 localPort;
}LwrSctpParamCfg;




typedef struct lwrEnbGrpInfo
{
   LwrPlmnInfo plmnId;
   U16 mmeGId;
} LwrEnbGrpInfo;

typedef struct lwrServedCellCfg
{

   U16 pci;

} LwrServedCellCfg;



typedef struct lwrEnbProtoCfg
{
   CmTptAddr enbIpAddr[2];
   U16 sctpPortNumS1;


   U16 sctpPortNumX2;



   U32 bhLinkCapacity;
   TknStrOSXL enbName;

   LwrEnbType enbType;
   U32 enbId;
   U32 numPlmns;
   LwrEnbPlmnInfo plmns[6];

} LwrEnbProtoCfg;



typedef struct lwrEnbOvldParams
{
   U8 critThrldVal;
   U8 majThrldVal;
   U8 minThrldVal;
   U8 critRcvryVal;
   U8 majRcvryVal;
   U8 minRcvryVal;
   U8 eNBMemCritThresVal;
   U8 eNBMemMajThresVal;
   U8 eNBMemMinThresVal;
   U32 eNBOvldMonTimerVal;
   U32 eNBOvldMonfreq;
   U8 maxCntval;
   Bool eNbOvrLdFlag;
} LwrEnbOvldParams;
typedef struct lwrSecAlgo
{
   U8 intgAlgo;
   U8 ciphAlgo;
}LwrSecAlgo;




typedef struct lwrEnbSchDlPfs
{
   U8 tptCoeffi;

   U8 fairCoeffi;

   U32 dlQciWgtList[9];
}LwrEnbSchDlPfs;




typedef struct lwrEnbSchUlPfs
{
   U8 tptCoeffi;

   U8 fairCoeffi;

   U32 ulQciWgtList[9];
}LwrEnbSchUlPfs;




typedef struct lwrSchedEnbCfg
{
   U8 macInst;
   U8 numAntPorts;
   U8 dlSchType;

   LwrEnbSchDlPfs schDlPfs;
   U8 ulSchType;

   LwrEnbSchUlPfs schUlPfs;

}LwrSchedEnbCfg;




typedef struct lwrENodeBCfg
{
   U32 reCfgType;




   U8 maxNumOfUe;
   LwrEnbProtoCfg protoCfg;

   U8 numOfMmePriGrps;
   LwrMmeLdBalCfg mmeLdBalCfg[17];
   U8 cpuLoad;
   U32 enbCfgTransTmrVal;
   LwrX2ConFlg x2ConFlg;
   U8 pwsEtwsCmas;
   U8 avgFreeCpuRqd;

   U8 isCnmEnabled;
   LwrCsfbGeranCfg csfbToGeranCfg;
   LwrSchedEnbCfg schedEnbCfg;
} LwrENodeBCfg;




typedef struct lwrENbCfg
{
   LwrActType action;
   union
   {
      LwrENodeBCfg eNodeBCfg;
      LwrENodeBCfg eNodeBReCfg;

   }t;
} LwrENbCfg;

typedef struct LwrSib2PrachCfg
{
   U16 rootSeqIdx;
   U8 prachCfgIdx;
   U8 highSpeedFlag;
   U8 zeroCorrZone;
   U8 prachFreqOffset;
} LwrSib2PrachCfg;

typedef struct lwrEcgi
{
   LwrPlmnId plmnId;
   U32 eutranCellId;
} LwrEcgi;

typedef struct lwrEUTRANeighCell
{
   U32 reCfgType;

   U8 status;
   U8 cellNum;
   U8 neighCellId;
   U8 nrIndex;

   U32 enbId;





   LwrEnbType enbType;




   LwrPlmnId enbPlmn;



   U16 pci;


   U16 tac;


   U8 numPlmn;
   LwrPlmnId plmnId[6];


   U16 earfcnDl;



   U16 earfcnUl;


   LwrBandwidth dlBw;


   LwrBandwidth ulBw;


   LwrQoffRange cio;



   LwrQoffRange qoffset;




   U8 blackListed;


   S8 refSigPower;

   U8 isCsgIdResolved;

   U32 csgId;
   U8 isCsgAccessModeResolved;


   U8 csgAccessMode;

   U8 numAntenna;
   U8 ulDlSubFrameCfg;
   U8 splSfCfg;
   U8 cpDl;
   U8 cpUl;
   S16 rsrp;
   S16 rssi;
  U16 oldPci;
  U16 oldEarfcnDl;
   U8 isHeMsCell;
}LwrEUTRANeighCell;

typedef enum lwrCdmaType{
   LWR_1XRTT,
   LWR_HRPD
}LwrCdmaType;

typedef enum lwrBandType{
   LWR_NEIGH_BAND_TYPE_CDMA_1XRTT,
   LWR_NEIGH_BAND_TYPE_CDMA_HRPD
}LwrBandType;


typedef struct lwrCdma1xrttBndClsCfg
{
   LwrCdma2kBandClassType bandClass;
   Bool cellReselectPriorPres;

   U8 cellReselectPrior;
   U8 threshXHigh;
   U8 threshXLow;
}LwrCdma1xrttBndClsCfg;

typedef struct lwrCdma1xrttNeighFreqCfg
{
   LwrCdma2kBandClassType bandClass;
   U16 arfcn;
   S8 freqPriority;
}LwrCdma1xrttNeighFreqCfg;

typedef struct lwrCdma1xrttNeighCellCfg
{
   U16 cid;

   LwrCdma2kBandClassType bandClass;



   U32 arfcn;


   U16 pnOffset;


   U16 curRank;

   U32 neighCellFlag;

   LwrCdma2k1xMobParams mobParams;
}LwrCdma1xrttNeighCellCfg;


typedef struct lwrCDMAHrpdNeighCell
{
   U8 cellNum;
   U16 nrIndex;
   Bool status;
   U16 colorCode;
   U16 bsmId;
   U16 bscId;
   U16 dpssId;
   U16 btsId;
   U16 sectorId;
   LwrCdma2kBandClassType bandClass;



   U32 arfcn;



   U16 pnOffset;


   U16 curRank;

   U8 loadBalanceRate;

   U32 neighCellFlag;

   U8 cid[32];
}LwrCDMAHrpdNeighCell;



typedef struct lwrCDMA1xNeighCell
{
   U8 cellNum;
   U8 nrIndex;
   Bool status;
   U16 sId;
   U16 nId;
   U16 baseId;
   U16 cellId;
   LwrCdma2kBandClassType bandClass;



   U32 arfcn;



   U16 pnOffset;


   U16 curRank;

   U32 neighCellFlag;

   Bool blackListed;
   LwrCdmaSectorId secId;
   LwrCdma2k1xMobParams mobParams;
   U8 systemType;
   U16 channelNum;
   U8 pilotOneWay;
}LwrCDMA1xNeighCell;
typedef struct lwrUtraFddCell{
   Bool isHOAllowed;
   U16 arfcnUl;
   U16 arfcnDl;
   U16 psc;
   S16 pcpich;
}LwrUtraFddCell;






typedef struct lwrUtraTddCell{
   U8 cellParamId;
   U16 arfcn;
   S16 pccpch;
}LwrUtraTddCell;
typedef struct lwrUtraNeighCell{
   U32 reCfgType;
   U8 cellNum;
   U8 status;
   U32 nrIndex;
   U16 rncId;
   U16 cId;
   U16 lac;
   U8 rac;
   U8 numPlmn;
   LwrPlmnId plmnId[6];
   Bool isRimSupported;



   Bool isRemAllowed;
   Bool isVoipCapable;
   Bool isPsHOCapable;

   U16 curRank;
   U16 prevRank;
   U8 duplexMode;
   union{
      LwrUtraFddCell utraFdd;
      LwrUtraTddCell utraTdd;
   }t;
}LwrUtraNeighCell;


typedef enum lwrGeranBand
{
   WR_GERAN_GSM850,
   WR_GERAN_GSM900,
   WR_GERAN_DCS1800,
   WR_GERAN_PCS1900,
   WR_GERAN_MAX_BANDS
} LwrGeranBand;



typedef struct lwrGERANNeighCell
{
   U32 reCfgType;
   U8 status;
   U32 nrIndex;
   LwrPlmnId plmnId;
   U16 lac;
   U8 rac;
   U8 bsic;
   U16 ci;
   LwrGeranBand bandIndicator;
   U16 bcchArfcn;
   U8 nccPermittedMeas;

   Bool isDTMCapable;
   Bool ncoPres;
   U8 ncoVal;
   S8 offsetFreq;
   Bool rimSupportForGeranNgh;
}LwrGERANNeighCell;


typedef struct lwrNeighCellAddCfg
{
   LwrNeighType type;
   LwrNeighCfgType cfgType;
   union
   {
      LwrEUTRANeighCell eutraCell;
      LwrCDMA1xNeighCell cdma1xCell;
      LwrCDMAHrpdNeighCell cdmaHrpdCell;
      LwrUtraNeighCell utranCell;
      LwrGERANNeighCell geranCell;
   }t;
} LwrNeighCellAddCfg;

typedef struct lwrEutranCellDelCfg
{
   U16 nrIndex;
   U16 earfcn;
   U16 phyCellId;
   U16 cid;
   LwrPlmnId plmnId;
}LwrEutranCellDelCfg;

typedef struct lwrCdmaCellDelCfg
{
   U16 nrIndex;
   LwrCdma2kBandClassType bandClass;
   U16 arfcn;
   U16 pnOffset;
}LwrCdmaCellDelCfg;







typedef struct lwrUtraCellDelCfg
{
   U16 nrIndex;
   U16 arfcn;
   U16 psc;
   U16 cid;
   LwrPlmnId plmnId;
}LwrUtraCellDelCfg;

typedef struct lwrNeighCellDelCfg
{
   LwrNeighType type;
   union
   {
      LwrEutranCellDelCfg eutranCell;
      LwrCdmaCellDelCfg cdmaCell;
      LwrUtraCellDelCfg utranCell;
   }t;
}LwrNeighCellDelCfg;

typedef struct lwrNeighCellCfg
{
   U8 cellId;
   LwrActType action;
   U16 numCells;
   union
   {
      LwrNeighCellAddCfg neighAddCfg[40];
      LwrNeighCellAddCfg neighModCfg[40];
      LwrNeighCellDelCfg neighDelCfg[40];
   }t;
} LwrNeighCellCfg;

typedef struct lwrNghCellInd
{
   U8 cellId;
   LwrActType action;
   union
   {
      LwrNeighCellAddCfg neighAddCfg;
      LwrNeighCellAddCfg neighModCfg;
      LwrNeighCellDelCfg neighDelCfg;
   }t;
}LwrNghCellInd;

typedef enum lwrNeighCdmaFreqType
{
   LWR_NEIGH_CDMA_1x_RTT_TYPE,
   LWR_NEIGH_CDMA_HRPD_TYPE
} LwrNeighCdmaFreq;

typedef enum lwrNeighFreqType
{
   LWR_NEIGH_EUTRA_FREQ_TYPE,
   LWR_NEIGH_CDMA_FREQ_TYPE
} LwrNeighFreqType;

typedef enum lwrQOffsetRange
{
   LWR_Q_OFFSET_RANGE_MINUS_24,
   LWR_Q_OFFSET_RANGE_MINUS_22,
   LWR_Q_OFFSET_RANGE_MINUS_20,
   LWR_Q_OFFSET_RANGE_MINUS_18,
   LWR_Q_OFFSET_RANGE_MINUS_16,
   LWR_Q_OFFSET_RANGE_MINUS_14,
   LWR_Q_OFFSET_RANGE_MINUS_12,
   LWR_Q_OFFSET_RANGE_MINUS_10,
   LWR_Q_OFFSET_RANGE_MINUS_8,
   LWR_Q_OFFSET_RANGE_MINUS_6,
   LWR_Q_OFFSET_RANGE_MINUS_5,
   LWR_Q_OFFSET_RANGE_MINUS_4,
   LWR_Q_OFFSET_RANGE_MINUS_3,
   LWR_Q_OFFSET_RANGE_MINUS_2,
   LWR_Q_OFFSET_RANGE_MINUS_1,
   LWR_Q_OFFSET_RANGE_0,
   LWR_Q_OFFSET_RANGE_1,
   LWR_Q_OFFSET_RANGE_2,
   LWR_Q_OFFSET_RANGE_3,
   LWR_Q_OFFSET_RANGE_4,
   LWR_Q_OFFSET_RANGE_5,
   LWR_Q_OFFSET_RANGE_6,
   LWR_Q_OFFSET_RANGE_8,
   LWR_Q_OFFSET_RANGE_10,
   LWR_Q_OFFSET_RANGE_12,
   LWR_Q_OFFSET_RANGE_14,
   LWR_Q_OFFSET_RANGE_16,
   LWR_Q_OFFSET_RANGE_18,
   LWR_Q_OFFSET_RANGE_20,
   LWR_Q_OFFSET_RANGE_22,
   LWR_Q_OFFSET_RANGE_24
} LwrQOffsetRange;

typedef struct lwrSSearchRel9
{
   Bool pres;
   U8 sSearchPRel9;
   U8 sSearchQRel9;
} LwrSSearchRel9;

typedef struct lwrThreshXQRel9
{
   U8 threshXHighQR9;
   U8 threshXLowQR9;
} LwrThreshXQRel9;


typedef struct lwrNeighEutraFreq
{
   U32 reCfgType;
   U8 freqIndex;
   U8 status;
   U16 earfcnUl;
   U16 earfcnDl;
   U8 priority;
   S8 qRxLevMin;
   Bool pMaxUsage;
   S8 pMax;
   U8 tReselection;
   Bool sfUsage;
   U8 tReselectionSFMed;
   U8 tReselectionSFHigh;
   TknU8 sIntraSearch;
   TknU8 sNonIntraSearch;
   U8 servThresholdLow;
   U8 threshXHigh;
   U8 threshXLow;
   TknU8 measBandwidth;
   Bool presAntennaPort1;
   U8 neighCellCfg;
   LwrQOffsetRange qOffsetFreq;
   LwrQOffsetRange offsetFreq;
   LwrSSearchRel9 sIntraSearchRel9;
   LwrSSearchRel9 sInterSearchRel9;
   TknS8 qQualMinRel9;
   TknU8 reselecThreshQRel9;
   LwrThreshXQRel9 threshXQRel9;
} LwrNeighEutraFreq;



typedef struct lwrNeighEutraDelInfo
{
   U8 freqIndex;
   U16 earfcn;
} LwrNeighEutraDelInfo;



typedef struct lwrNeighCdmaDelInfo
{
   U8 freqIndex;
   U16 arfcn;
   LwrCdma2kBandClassType bandClass;
} LwrNeighCdmaDelInfo;



typedef struct lwrNeighUtraDelInfo
{
   U8 freqIndex;
   U16 arfcn;
}LwrNeighUtraDelInfo;




typedef struct lwrNeighCdma1xFreq
{
   U8 reCfgType;
   U8 freqIndex;
   Bool status;
   LwrCdma2kBandClassType bandClass;
   U16 arfcn;
   U8 searchRate;
   S8 offsetFreq;
   U8 freqPriority;
} LwrNeighCdma1xFreq;



typedef struct lwrNeighCdmaHRPDFreq
{
   U8 reCfgType;
   U8 cellNum;
   U8 freqIndex;
   Bool status;
   LwrCdma2kBandClassType bandClass;
   U16 arfcn;
   U8 searchRate;
   S8 offsetFreq;
} LwrNeighCdmaHRPDFreq;






typedef struct lwrNrUtraFreqThrQR9{
   U8 pres;
   U8 thresXHighQR9;
   U8 thresXLowQR9;
}LwrNrUtraFreqThrQR9;



typedef enum lwrUtraTddMode{
   LWR_UTRA_TDD128,
   LWR_UTRA_TDD384,
   LWR_UTRA_TDD768
}LwrUtraTddMode;
typedef struct lwrUtraFddFreq{
   S8 pQualMin;
   U16 arfcnUl;
   U16 arfcnDl;
   LwrNrUtraFreqThrQR9 thresR9;
}LwrUtraFddFreq;
typedef struct lwrUtraTddFreq{
   U8 bandIndicator;
   U16 arfcn;
   LwrUtraTddMode tddMode;
}LwrUtraTddFreq;


typedef enum lwrUtraDuplexMode{
   WR_LWR_UTRA_FDD_MODE = 0,
   WR_LWR_UTRA_TDD_MODE
}LwrUtraDuplexMode;
typedef struct lwrNeighUtraFreq{
   U32 reCfgType;
   U8 freqIndex;
   U8 status;
   TknU8 priority;
   U8 threshXhigh;
   U8 threshXlow;
   S8 qRxLevMin;
   S8 pMaxUtra;
   S8 offsetFreq;
   U8 duplexMode;
   union{
      LwrUtraFddFreq utraFdd;
      LwrUtraTddFreq utraTdd;
   }t;
}LwrNeighUtraFreq;



typedef struct LwrNeighGERANFreq
{
   U32 reCfgType;
   U8 freqIndex;
   U8 status;
   LwrGeranBand bandIndicator;
   U16 bcchArfcn;
   U8 qRxLevMin;
   U8 cellReselePri;
   U8 threshXHigh;
   U8 threshXLow;
   U8 ncc_Permitted;
   TknU8 pMaxGeran;
} LwrNeighGERANFreq;


typedef struct lwrNeighFreqDelCfg
{
   LwrNeighType type;
   union
   {
      LwrNeighEutraDelInfo eutranFreq;
      LwrNeighCdmaDelInfo cdmaFreq;
      LwrNeighUtraDelInfo utranFreq;
   }t;
} LwrNeighFreqDelCfg;


typedef struct lwrNeighFreqAddCfg
{
   LwrNeighType type;
   union
   {
      LwrNeighEutraFreq eutranFreq;
      LwrNeighCdma1xFreq cdma1xFreq;
      LwrNeighCdmaHRPDFreq cdmaHrpdFreq;
      LwrNeighUtraFreq utranFreq;
      LwrNeighGERANFreq geranFreq;
   }t;
} LwrNeighFreqAddModCfg;

typedef struct lwrNeighFreqCfg
{
   U8 cellId;
   LwrActType action;
   U8 numFreq;
   union
   {
      LwrNeighFreqAddModCfg addNeighFreq[16];
      LwrNeighFreqAddModCfg modNeighFreq[16];
      LwrNeighFreqDelCfg delNeighFreq[16];
   }t;
} LwrNeighFreqCfg;

typedef struct lwrNeighCdmaBandClassCfg
{
   U8 reCfgType;
   U8 bandClassIndex;
   U8 status;
   LwrCdma2kBandClassType bandClass;
   U8 cellReselectPrior;
   U8 threshXHigh;
   U8 threshXLow;
} LwrNeighCdmaBandClassCfg;

typedef struct lwrNeighBandClassDel
{
   LwrCdmaType cdmaType;
   U8 badnClassIndex;
   LwrCdma2kBandClassType bandClass;
} LwrNeighBandClassDel;

typedef struct lwrNeighBandClassCfg
{
   LwrBandType bandType;
   union
   {
      LwrNeighCdmaBandClassCfg bandClass1xRtt;
      LwrNeighCdmaBandClassCfg bandClassHRPD;
   }t;
} LwrNeighBandClassCfg;

typedef struct lwrNeighBandClass
{
   U8 cellId;
   LwrActType action;
   U8 numBandClass;
   union
   {
      LwrNeighBandClassCfg bcAddCfg[32];
   }t;
} LwrNeighBandClass;


typedef struct lwrProtoCfg
{
   LwrProtoCfgType type;
   union
   {
      LwrCellCfg cellCfg;
      LwrMmeCfg mmeCfg;
      LwrNeighCfg neighCfg;
      LwrNeighCellCfg neighCellCfg;
      LwrENbCfg eNbCfg;
      LwrNeighFreqCfg neighFreqCfg;
      LwrNeighBandClass bandClassCfg;
   }t;
} LwrProtoCfg;

typedef struct lwrLoadIndInfo
{
  U8 cpuLoad;
}LwrLoadIndInfo;

typedef struct lwrCellFddCfg
{
   U32 ulEarfcn;
   U32 dlEarfcn;
   U8 ulTxBndWdth;
   U8 dlTxBndWdth;
} LwrCellFddCfg;

typedef struct lwrCellTddCfg
{
   U32 earfcn;
   U8 txBndWdth;
   U8 sfAssgnmnt;
   U8 splSfPatrn;
   U8 dlCycPrefix;
   U8 ulCycPrefix;
} LwrCellTddCfg;

typedef struct lwrGenUeCfg
{

  U8 intgAlgo;
  U8 ciphAlgo;
} LwrGenUeCfg;

typedef struct lwrSmCellCfg
{

   U16 cellId;

   U16 duplexMode;
   U16 maxUeSupp;

   TknU8 mcc[3];
   TknU8 mnc[3];

   U16 trackAreaCode;

   U8 freqBandInd;
   LwrGenUeCfg genUeCfg;

   U16 physCellId;
   U16 rrmRntiStart;
   U16 maxRrmRntis;
   U16 rrmPrmblStart;
   U16 maxRrmPrmbls;
   U16 macRntiStart;
   U16 maxMacRntis;
   U8 numOfMacPrm;
   U32 rsrpTrshldRange;

   LwrCellFddCfg fddCfg;
   LwrCellTddCfg tddCfg;
   U8 noOfBrdCstPlmn;
   U8 plmnId[6][3];


} LwrSmCellCfg;

typedef struct lwrGenCfg
{
   Pst lmPst;

   LwrSmCellCfg cellCfg;

   U8 noOfCells;
   CmTptAddr dataAppAddr;
   U8 eNBType;
   U16 noOfNghInfo;
   LwrNghCellCfg **nghInfo;
   U8 noOfguGrp;
   LwrGuGrpIdCfg **guGrpId;
   U32 ueHoAttachTimerVal;
   U32 inactvTmrVal;
   U16 expiryCnt;
   U32 endMrkTmrVal;

   LwrEnbOvldParams eNBOvldParams;

   Ticks timeRes;
   U32 ulSrsPeriod;
   Bool enblSIAndPagngLog;
} LwrGenCfg;


typedef struct lwrLSapCfg
{
   SuId suId;
   SpId spId;
   Ent srcEnt;
   Inst srcInst;
   ProcId dstProcId;
   Ent dstEnt;
   Inst dstInst;
   Priority dstPrior;
   Route dstRoute;
   Selector dstSel;
   Mem mem;
   U8 maxBndRetry;
   TmrCfg bndTmr;
   TmrCfg connTmr;
} LwrLSapCfg;

typedef struct lwrCfg
{
   union
   {
      LwrGenCfg genCfg;
      LwrLSapCfg lSap;
   }t;
} LwrCfg;

typedef struct lwrDbgCntrl
{
   U32 dbgMsk;
} LwrDbgCntrl;

typedef struct lwrCntrl
{
   Action action;
   Action subAction;
   U8 numConn;
   U32 peerId[16];
   U32 idLst[16];

   union
   {
      SpId sapId;

      U16 cellId;


      U32 dbgMask;
      LwrDbgCntrl dbg;



      U8 oper;
      U32 logMask;
   } u;

} LwrCntrl;

typedef struct lwrUstaDgn
{
   U8 type;
   union
   {
      SpId sapId;
      struct {
         U16 udId;
         U16 cellId;
      }s;
      struct{
         U32 alarmId;
         U8 severity;
         U8 causeType;
         U8 causeVal;
      }alarm;
   }u;
} LwrUstaDgn;

typedef struct lwrUsta
{
   CmAlarm alarm;
   LwrUstaDgn dgn;
} LwrUsta;

typedef struct wrHoEutran
{
    U32 wrHODesirableForRadioReasons;
    U32 wrTimeCriticalHO;
    U32 wrResourceOptimizationHO;
    U32 wrReduceLoadInServingCell;
    U32 wrRadioResourcesNotAvailable;
    U32 wrControlProcessingOverload;
    U32 wrNotEnoughUPProcesingResources;
    U32 wrOAMIntervention;
    U32 wrSum;
}WrHoEutran;

typedef struct wrHoUtran
{
    U32 wrHODesirableForRadioReasons;
    U32 wrTimeCriticalHO;
    U32 wrResourceOptimizationHO;
    U32 wrReduceLoadInServingCell;
    U32 wrRadioResourcesNotAvailable;
    U32 wrControlProcessingOverload;
    U32 wrNotEnoughUPProcesingResources;
    U32 wrOAMIntervention;
    U32 wrSum;
}WrHoUtran;


typedef struct wrIntraRatHoSts
{
   WrHoEutran wrToAttempt;
   WrHoEutran wrToSuccess;
   WrHoEutran wrToFail;
   WrHoEutran wrFrAttempt;
   WrHoEutran wrFrSuccess;
   WrHoEutran wrFrFail;
}WrIntraRatHoSts;

typedef struct wrInterRatHoSts
{
   WrHoUtran wrToAttempt;
    WrHoUtran wrToSuccess;
    WrHoUtran wrToFail;
    WrHoUtran wrFrAttempt;
    WrHoUtran wrFrSuccess;
    WrHoUtran wrFrFail;
}WrInterRatHoSts;


typedef struct wrHoSts
{
   WrIntraRatHoSts wrIntraRatHoStat;
   WrInterRatHoSts wrInterRatHoStat;
}WrHoSts;

typedef struct wrConnEstab
{
    U32 emergency;
    U32 HighPriorityAccess;
    U32 MtAccess;
    U32 MoSignalling;
    U32 MoData;
    U32 DelayTolerantAccessV1020;
    U32 Sum;
}WrConnEstab;


typedef struct wrRrcConCause
{
    U32 emergency;
    U32 highPriorityAccess;
    U32 mtAccess;
    U32 moSignalling;
    U32 moData;
    U32 delayTolerantAccessV1020;
    U32 sum;
}WrRrcConCause;


typedef struct wrRrcSts
{
    WrRrcConCause attConnEstab;
    WrRrcConCause succConnEstab;
    WrRrcConCause failConnEstab;
    WrRrcConCause failConnDegradedRadio;
}WrRrcSts;

typedef struct wrRrcReEstabCause
{
   U32 recfgFail;
   U32 hoFail;
   U32 OthrFail;
   U32 sum;
}WrRrcReEstabCause;

typedef struct wrRrcReEstabSts
{
    WrRrcReEstabCause attConnEstab;
    WrRrcReEstabCause succConnEstab;
    WrRrcReEstabCause failConnEstab;
    WrRrcReEstabCause failConnDegradedRadio;
}WrRrcReEstabSts;


typedef struct wrErabStat
{
    U32 qci1;
    U32 qci2;
    U32 qci3;
    U32 qci4;
    U32 qci5;
    U32 qci6;
    U32 qci7;
    U32 qci8;
    U32 qci9;
    U32 qciSum;
}WrErabStat;

typedef struct wrErabFailStat
{
    U32 wrRadioResourcesNotAvailable;
    U32 wrFailureInRadioInterfaceProcedure;
    U32 wrInvalidQoSCombinations;
    U32 wrMultipleERABIDInstances;
    U32 wrNotSupportedQCIValue;
    U32 wrS1IntraSystemHandoverTriggered;
    U32 wrS1InterSystemHandoverTriggered;
    U32 wrX2HandoverTriggered;
    U32 wrSum;
}WrErabFailStat;


typedef struct wrErabFailStatHenb
{
   U32 wrRadioResourcesNotAvailable;
    U32 wrReduceLoadInServingCell;
    U32 wrFailureInTheRadioInterfaceProcedure;
    U32 wrReleaseDueToEUTRANGeneratedReaso;
    U32 wrUserInactivity;
    U32 wrRadioConnectionWithUELost;
    U32 wrHardwareFailure;
    U32 wrOAMIntervention;
}WrErabFailStatHenb;



typedef struct wrErabSts
{
    WrErabStat estabInitAttNbr;
    WrErabStat estabInitSuccNbr;
    WrErabFailStat EstabInitFailNbr;

    WrErabStat EstabAttNbr;
    WrErabStat EstabSuccNbr;
    WrErabFailStat EstabFailNbr;

    WrErabStat RelEnbNbr;
    WrErabFailStatHenb RelEnbNbr_Henb;


    WrErabStat RelEnbMmeAtt;
    WrErabStat RelEnbMmeSucc;
    WrErabFailStat RelEnbMmeFail;

    WrErabStat ModAttNbr;
    WrErabStat ModSuccNbr;
    WrErabFailStat ModFailNbr;
}WrErabSts;

typedef struct wrSigSts
{
   U32 wrSigAttempt;
   U32 wrSigSuccess;
}WrSigSts;


typedef struct wrUeCtxtRelSts
{
   U32 wrUeCtxtRelReq;
   U32 wrUeCtxtRelSuccess;
}WrUeCtxtRelSts;



typedef struct wrCallSts
{
    U32 wrActiveCalls;
    U32 wrTotalCalls;
}WrCallSts;



typedef enum wrMmeStatus
{
    WR_MME_IDLE = 0,
   WR_MME_ACTIVE
}WrMmeStatus;


typedef struct wrMmeSta
{ U32 numMme;
   U32 mmeIdx[17];
   WrMmeStatus mmeUsageState[17];
}WrMmeSta;


typedef enum wrCellStatus
{
  WR_CELL_IDLE = 0,
  WR_CELL_ACTIVE,
  WR_CELL_BUSY
}WrCellStatus;


typedef struct wrCellSta
{
    U16 cellNum;
    WrCellStatus cellUsageState[2];
}WrCellSta;


typedef struct wrS1USta
{
    U32 s1UStat;
}WrS1USta;

typedef struct wrCellSetupSta
{
   U16 cellNum;
   U16 result;
   U8 cause[40];
}WrCellSetupSta;

typedef struct wrUeActvCount
{
   U16 cellNum;
   U16 activeUeCnt;

} WrUeActvCount;





typedef struct lwrSta
{
   DateTime dt;
   U8 sapInst;
   union
   {
      WrMmeSta wrMmeSta;
      WrCellSta wrCellSt;
      WrS1USta wrS1Usta;
      WrCellSetupSta wrCellSetupSta;
      WrUeActvCount wrUeActvCount;
   }s;
}LwrSta;





typedef struct lwrSts
{
   DateTime dt;
   U8 sapInst;
   Action action;

   union
   {
      WrRrcSts wrRrcStat;
      WrErabSts wrErabStat;
      WrCallSts wrCallStat;
      U32 wrPagStat;
      WrHoSts wrHoStat;
      WrUeCtxtRelSts wrUeCtxtRelSts;
   }s;
}LwrSts;

typedef struct lwrNbrAddReq
{
   U32 enbId;
   CmTptAddr nbIpAddress;
} LwrNbrAddReq;

typedef struct lwrNbrAddCfm
{
   U32 enbId;
   U32 peerId;
   CmTptAddr ipAddr;
} LwrNbrAddCfm;

typedef struct lwrMngmt
{
   Header hdr;
   CmStatus cfm;
   union
   {
      LwrCfg cfg;
      LwrCntrl cntrl;
      LwrUsta usta;
      LwrSts sts;
      LwrSta sta;
      LwrProtoCfg protoCfg;
      LwrNbrAddReq nbrAddReq;
      LwrNbrAddCfm nbrAddCfm;
   }t;
} LwrMngmt;

typedef struct lwrDynMngmt
{
   Header hdr;
   CmStatus cfm;
   LwrDynCfgEvntType cfgType;
   U8 cfgPriority;
   Void *dynCfg;
   U16 cellIdx;
} LwrDynMngmt;



typedef S16 (*LwrCfgReq) (
Pst *pst,
LwrMngmt *cfg
);

typedef S16 (*LwrDynCfgReq) (
Pst *pst,
LwrDynMngmt *dynCfg
);

typedef S16 (*LwrCfgCfm) (
Pst *pst,
LwrMngmt *cfg
);

typedef S16 (*LwrDynCfgCfm) (
Pst *pst,
LwrDynMngmt *cfm
);

typedef S16 (*LwrCntrlReq) (
Pst *pst,
LwrMngmt *cntrl
);

typedef S16 (*LwrCntrlCfm) (
Pst *pst,
LwrMngmt *cntrl
);

typedef S16 (*LwrUpDateNhgCellCfg) (
Pst *pst,
LwrMngmt *sta
);


typedef S16 (*LwrStaInd) (
Pst *pst,
LwrMngmt *sta
);

typedef S16 (*LwrLoadInd) (
Pst *pst,
LwrLoadIndInfo *loadInd
);

typedef S16 (*LwrDynCfgReqSend) (
void *cfg,
U32 cfgType,
U16 cellIdx
);

typedef S16 (*LwrStartStopStackReq) (
U8 isPerdREMReq,
U8 isStackStart,
U8 isImmediate
);

typedef S16 (*LwrStaticCfgReqSend) (
Void
);

typedef S16 (*LwrNghCellIndToOam)
(
Pst *pst,
LwrNghCellInd *dynCfg
);


extern S16 WrMiLwrCfgReq (Pst *pst, LwrMngmt *cfg);
extern S16 WrMiLwrCellCfgReq (Pst *pst, LwrMngmt *cfg);
extern S16 WrMiDamLwrCfgReq (Pst *pst, LwrMngmt *cfg);
extern S16 cmPkLwrCfgReq (Pst *pst, LwrMngmt *cfg);
extern S16 cmPkLwrCellCfgReq (Pst *pst, LwrMngmt *cfg);

extern S16 WrMiLwrCfgCfm (Pst *pst, LwrMngmt *cfg);
extern S16 WrMiLwrCellCfgCfm (Pst *pst, LwrMngmt *cfg);
extern S16 WrMiDamLwrCfgCfm (Pst *pst, LwrMngmt *cfg);
extern S16 cmPkLwrCfgCfm (Pst *pst, LwrMngmt *cfg);
extern S16 cmPkLwrCellCfgCfm (Pst *pst, LwrMngmt *cfg);

extern S16 WrMiLwrCntrlReq (Pst *pst, LwrMngmt *cntrl);
extern S16 WrMiLwrCellCntrlReq (Pst *pst, LwrMngmt *cntrl);
extern S16 WrMiDamLwrCntrlReq (Pst *pst, LwrMngmt *cntrl);
extern S16 cmPkLwrCntrlReq (Pst *pst, LwrMngmt *cntrl);
extern S16 cmPkLwrCellCntrlReq (Pst *pst, LwrMngmt *cntrl);

extern S16 WrMiLwrCntrlCfm (Pst *pst, LwrMngmt *cntrl);
extern S16 WrMiLwrCellCntrlCfm (Pst *pst, LwrMngmt *cntrl);
extern S16 cmPkLwrCntrlCfm (Pst *pst, LwrMngmt *cntrl);
extern S16 cmPkLwrCellCntrlCfm (Pst *pst, LwrMngmt *cntrl);

extern S16 WrMiLwrStaInd (Pst *pst, LwrMngmt *sta);
extern S16 cmPkLwrStaInd (Pst *pst, LwrMngmt *sta);
extern S16 WrMiLwrLoadInd (Pst *pst, LwrLoadIndInfo *loadInd);
extern S16 WrMiLwrUpDateNhgCellCfg (Pst *pst, LwrMngmt *nghCellCfg);

extern S16 WrMiLwrDynCfgReq (Pst *pst, LwrDynMngmt *dynCfg);
extern S16 cmPkLwrDynCfgReq (Pst *pst, LwrDynMngmt *dynCfg);

extern S16 cmPkLwrUpDateNhgCellCfgReq (Pst *pst,LwrMngmt *cfg);
extern S16 cmUnpkLwrUpDateNhgCellCfgReq(LwrUpDateNhgCellCfg func,Pst *pst,Buffer *mBuf);
extern S16 cmUnpkLwrNghCellInd(LwrNghCellIndToOam func,Pst *pst,Buffer *mBuf);



extern S16 WrMiLwrCfgReq (Pst *pst, LwrMngmt *cfg);
extern S16 WrMiLwrCfgCfm (Pst *pst, LwrMngmt *cfg);
extern S16 WrMiLwrCntrlReq (Pst *pst, LwrMngmt *cntrl);
extern S16 WrMiLwrCntrlCfm (Pst *pst, LwrMngmt *cntrl);
extern S16 WrMiLwrStaInd (Pst *pst, LwrMngmt *sta);
extern S16 WrMiLwrLoadInd (Pst *pst, LwrLoadIndInfo *loadInd);


extern S16 smDynCfgReq(Void *cfg, U32 cfgType, U16 cellIdx);


extern S16 cmPkLwrLoadInd( Pst *pst, LwrLoadIndInfo *loadIndInfo);
extern S16 cmPkLwrAddNeighCfm( Pst *pst, LwrMngmt *cfg);
extern S16 cmPkLwrCfgCfm (Pst *pst, LwrMngmt *cfg);
extern S16 cmPkLwrCntrlCfm (Pst *pst, LwrMngmt *cntrl);
extern S16 cmPkLwrAddNeighCfgReq (Pst *pst,LwrMngmt *cfm);
extern S16 cmPkLwrDynCfgCfm (Pst *pst, LwrDynMngmt *cfgCfm);

extern S16 cmUnpkLwrCfgCfm (LwrCfgCfm func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkCellLwrCfgCfm (LwrCfgCfm func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLwrCntrlCfm (LwrCntrlCfm func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLwrCellCntrlCfm (LwrCntrlCfm func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLwrStaInd (LwrStaInd func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLwrDynCfgCfm (LwrDynCfgCfm func, Pst *pst, Buffer *mBuf);


extern S16 SmMiLwrCfgReq (Pst *pst, LwrMngmt *cfg);
extern S16 SmMiLwrCellCfgReq (Pst *pst, LwrMngmt *cfg);
extern S16 SmMiDamLwrCfgReq (Pst *pst, LwrMngmt *cfg);
extern S16 SmMiLwrCfgCfm (Pst *pst, LwrMngmt *cfg);
extern S16 SmMiCellLwrCfgCfm (Pst *pst, LwrMngmt *cfg);
extern S16 SmMiDamLwrCfgCfm (Pst *pst, LwrMngmt *cfg);
extern S16 SmMiLwrCntrlReq (Pst *pst, LwrMngmt *cntrl);
extern S16 SmMiLwrCellCntrlReq (Pst *pst, LwrMngmt *cntrl);
extern S16 SmMiDamLwrCntrlReq (Pst *pst, LwrMngmt *cntrl);
extern S16 SmMiLwrCntrlCfm (Pst *pst, LwrMngmt *cntrl);
extern S16 SmMiLwrCellCntrlCfm (Pst *pst, LwrMngmt *cntrl);
extern S16 SmMiLwrStaInd (Pst *pst, LwrMngmt *sta);
extern S16 SmMiLwrAddNeighCfgReq (Pst *pst,LwrMngmt *cntrl);
extern S16 SmMiLwrLoadInd (Pst *pst, LwrLoadIndInfo *loadInd);
extern S16 WrMiLwrAddNeighCfm (Pst *pst,LwrMngmt *cfg);

extern S16 SmMiLwrDynCfgCfm (Pst *pst, LwrDynMngmt *dynCfgCfm);
extern S16 SmMiLwrDynCfgReq (Pst *spst, LwrDynMngmt *cfg);
extern S16 cmPkLwrNghCellInd(Pst *pst,LwrNghCellInd *nghCellInd);
extern S16 SmMiLwrNghInd(Pst *spst,LwrNghCellInd *cfg);





extern S16 smWrActvInit (Ent ent, Inst inst,
                                Region region, Reason reason);

extern S16 smWrActvTsk (Pst *pst, Buffer *mBuf);




extern S16 wrActvInit (Ent ent, Inst inst,
                                Region region, Reason reason);

extern S16 wrActvTsk (Pst *pst, Buffer *mBuf);


extern S16 wrDamActvTsk (Pst *pst, Buffer *mBuf);





extern S16 wrDamActvInit (Ent ent, Inst inst,
                                Region region, Reason reason);

extern S16 wrDamActvTsk (Pst *pst, Buffer *mBuf);
extern S16 cmUnpkWrNghCfg(LwrNeighCellCfg *param,Buffer *mBuf,Pst *pst);
extern S16 cmPkWrMmeCfg(LwrMmeCfg *param,Buffer *mBuf);
extern S16 cmUnpkLwrCfgReq(LwrCfgReq func,Pst *psti,Buffer *mBuf);
extern S16 cmUnpkLwrCellCfgReq(LwrCfgReq func,Pst *psti,Buffer *mBuf);
extern S16 cmUnpkLwrDynCfgReq(LwrDynCfgReq func,Pst *pst,Buffer *mBuf);
extern S16 cmUnpkLwrCntrlReq(LwrCntrlReq func,Pst *pst,Buffer *mBuf);
extern S16 cmUnpkLwrCellCntrlReq(LwrCntrlReq func,Pst *pst,Buffer *mBuf);
extern S16 cmPkWrGenCfg(LwrGenCfg *param,Buffer *mBuf);
extern S16 cmUnpkWrNghCfg(LwrNeighCellCfg *param,Buffer *mBuf,Pst *pst);
extern S16 cmPkWrMmeCfg(LwrMmeCfg *param,Buffer *mBuf);
extern S16 cmUnpkWrMmeCfg(LwrMmeCfg *param,Buffer *mBuf,Pst *pst);
extern S16 cmPkWrUstaDgn(LwrUstaDgn *param,Buffer *mBuf);
extern S16 cmPkWrUsta(LwrUsta *param,Buffer *mBuf);
extern S16 cmPkWrCntrl(LwrCntrl *param,U16 elmnt,Buffer *mBuf);
extern S16 cmPkWrCntrl(LwrCntrl *param,U16 elmnt,Buffer *mBuf);
extern S16 cmPkWrLSapCfg(LwrLSapCfg *param,Buffer *mBuf);
extern S16 cmPkWrCfg(LwrCfg *param,U16 elmnt,Buffer *mBuf);
extern S16 cmPkWrMngmt(LwrMngmt *param,U8 evnt,Buffer *mBuf);
extern S16 cmUnpkWrUstaDgn(LwrUstaDgn *param,Buffer *mBuf);
extern S16 cmUnpkWrUsta(LwrUsta *param,Buffer *mBuf);
extern S16 cmUnpkWrCntrl(LwrCntrl *param,U16 elmnt,Buffer *mBuf);
extern S16 cmUnpkWrLSapCfg(LwrLSapCfg *param,Buffer *mBuf);
extern S16 cmUnpkWrCfg(LwrCfg *param,U16 elmnt,Buffer *mBuf,Pst *pst);
extern S16 cmUnpkWrMngmt(LwrMngmt *param,U8 evnt,Ptr ptr, Buffer *mBuf, Pst *pst);
extern S16 cmUnpkLwrLoadInd(LwrLoadInd func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkWrGenCfg(LwrGenCfg *param, Buffer *mBuf,Pst *pst);
extern S16 cmPkWrDbgCntrl(LwrDbgCntrl *param, Buffer *mBuf);
extern S16 cmUnpkWrDbgCntrl(LwrDbgCntrl *param, Buffer *mBuf);
extern S16 cmUnpkLwrNghCfgInd (LwrCfgReq func, Pst *pst, Buffer *mBuf);



extern S16 wrEmmSndSchdReCfgReq(U32 cellId,U32 minDlResNonCsg,U32 minUlResNonCsg);
extern S16 cmUnPackSendStaticCfg(LwrStaticCfgReqSend func, Pst *pst, Buffer *mBuf);
extern S16 cmUnPackSendDynCfg(LwrDynCfgReqSend func, Pst *pst, Buffer *mBuf);
extern S16 smUnPackStartStopStackReq(LwrStartStopStackReq func, Pst *pst, Buffer *mBuf);
extern S16 SmMiLwrHdlNghCellInd(Pst *pst,LwrNghCellInd *nghCellInfo);
extern S16 smBldAndSendNghCellInd(LwrNghCellInd *nghCellInd);
typedef enum {
 L_ALWAYS=0,
 L_FATAL,
 L_ERROR,
 L_WARNING,
 L_EVENT,
 L_INFO,
 L_DEBUG,
 L_UNUSED,
 L_MAX_LOG_LEVEL
} R_LOG_LEVEL;

typedef enum {
 DBG_CELLID,
   DBG_PEERID,
   DBG_ENBID,
  DBG_MMEID,
  DBG_CRNTI,
   DBG_UEIDX,
  DBG_UEID,
  DBG_RBID,
  DBG_LCID,
  DBG_LCGID,
 DBG_TRNSID,
   DBG_INSTID,
 DBG_MAX_IDs
} R_SPL_ARG;
typedef const char* PSTR;


typedef U32 LOGID;
void logLevH( LOGID logId, R_LOG_LEVEL logLevel, PSTR hex, int hexlen, ...);
void logLev0( LOGID logId, R_LOG_LEVEL logLevel, ...);
void logLev1( LOGID logId, R_LOG_LEVEL logLevel, U32 arg1, ...);
void logLev2( LOGID logId, R_LOG_LEVEL logLevel, U32 arg1, U32 arg2, ...);
void logLev3( LOGID logId, R_LOG_LEVEL logLevel, U32 arg1, U32 arg2, U32 arg3, ...);
void logLev4( LOGID logId, R_LOG_LEVEL logLevel, U32 arg1, U32 arg2, U32 arg3, U32 arg4, ...);
void logLevE(LOGID logId, R_LOG_LEVEL logLevel, R_SPL_ARG splType, U32 splVal,
U32 arg1, U32 arg2, U32 arg3, U32 arg4, ...);
void logLevS( LOGID logId, R_LOG_LEVEL logLevel, const char* str, ...);


void hextostr(char* p, PSTR h, int hexlen);

extern int g_logLevel;
extern U32 g_modMask;
extern const char* g_logStr[L_MAX_LOG_LEVEL];
extern const char* g_splStr[DBG_MAX_IDs];




void rlSetLogPath(const char* logDir);





void rlInitLog(U8 type);







void rlSetLogFile(const char* fileName);





void rlSetLogPort(U32 port);




void rlSetLogLevel(R_LOG_LEVEL logLevel);





void rlSetModuleMask(U32 modMask);



void rlSetLogFileSizeLimit(U32 maxFileSize);




void rlSetNumOfLogFiles(U8 nMaxFiles);





void rlSetCircularBufferSize(U32 bufSize);




void rlSetRemoteLoggingFlag(S32 flag);




int rlHandleConInput(char ch);




void rlEnableDisableCore(S32 enable_core);



void rlEnaBleBufferedIO(void);



extern void rlUpdateRlogTti(void);



extern void rlResetLogRateLmt(void);



extern void rlResetLogRateLmt(void);




extern void rlStartLogCountLimit(void);



extern void rlStopLogCountLimit(void);







extern in_addr_t inet_addr (const char *__cp) __attribute__ ((__nothrow__ , __leaf__));


extern in_addr_t inet_lnaof (struct in_addr __in) __attribute__ ((__nothrow__ , __leaf__));



extern struct in_addr inet_makeaddr (in_addr_t __net, in_addr_t __host)
     __attribute__ ((__nothrow__ , __leaf__));


extern in_addr_t inet_netof (struct in_addr __in) __attribute__ ((__nothrow__ , __leaf__));



extern in_addr_t inet_network (const char *__cp) __attribute__ ((__nothrow__ , __leaf__));



extern char *inet_ntoa (struct in_addr __in) __attribute__ ((__nothrow__ , __leaf__));




extern int inet_pton (int __af, const char *__restrict __cp,
        void *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));




extern const char *inet_ntop (int __af, const void *__restrict __cp,
         char *__restrict __buf, socklen_t __len)
     __attribute__ ((__nothrow__ , __leaf__));






extern int inet_aton (const char *__cp, struct in_addr *__inp) __attribute__ ((__nothrow__ , __leaf__));



extern char *inet_neta (in_addr_t __net, char *__buf, size_t __len) __attribute__ ((__nothrow__ , __leaf__));




extern char *inet_net_ntop (int __af, const void *__cp, int __bits,
       char *__buf, size_t __len) __attribute__ ((__nothrow__ , __leaf__));




extern int inet_net_pton (int __af, const char *__cp,
     void *__buf, size_t __len) __attribute__ ((__nothrow__ , __leaf__));




extern unsigned int inet_nsap_addr (const char *__cp,
        unsigned char *__buf, int __len) __attribute__ ((__nothrow__ , __leaf__));



extern char *inet_nsap_ntoa (int __len, const unsigned char *__cp,
        char *__buf) __attribute__ ((__nothrow__ , __leaf__));




typedef enum wrTmr
{
   WR_TMR_NHU_SAP_BND=1,
   WR_TMR_RGR_SAP_BND,
   WR_TMR_CTF_SAP_BND,
   WR_TMR_SZT_SAP_BND,
   WR_TMR_CZT_SAP_BND,
   WR_TMR_EGT_SAP_BND,
   WR_TMR_PJU_SAP_BND,
   WR_TMR_INACTIVITY,
   WR_TMR_S1_RELOC_TMR,
   WR_TMR_S1_OVRL_TMR,
   WR_TMR_UE_HO_ATTACH_TMR,
   WR_TMR_MME_SETUP_RSP,
   WR_TMR_MME_SETUP_WAIT,
   WR_TMR_REESTABLISH,
   WR_TMR_RECONFIGURE,
   WR_TMR_ENB_SETUP_RSP,
   WR_TMR_ENB_SETUP_WAIT,
   WR_TMR_ENB_CFG_RSP,
   WR_TMR_ENB_CFG_WAIT,
   WR_TMR_OVERLD_SAMPLE,
   WR_TMR_OVERLD_STATUS,

   WR_TMR_ANR_INTRA_LTE,
   WR_TMR_ANR_INTER_RAT,
   WR_TMR_ANR_DFLT_PERIOD,
   WR_TMR_ANR_1XRTT_DFLT_PERIOD,
   WR_TMR_ANR_HRPD_DFLT_PERIOD,

   WR_TMR_X2_RST_RSP,
   WR_TMR_ENB_CONFIG_UPDATE_WAIT,
   WR_TMR_RST_RSP,
   WR_TMR_S1_ENB_CFG_RSP,
   WR_TMR_S1_ENB_CFG_WAIT,
   WR_TMR_RRC_RRCCON,
   WR_TMR_RRC_CONREL,
   WR_TMR_RRC_CAPENQ,
   WR_TMR_RRC_SECUCMD,
   WR_TMR_CSFB_CFG,
   WR_TMR_ECSFB_MEAS_RPT,
   WR_TMR_ECSFB_DATCFM,
   WR_TMR_TGTENB_RELOCEXE,

   WR_TMR_RAD_RES_MOD_TMR,
   WR_TMR_INITIAL_CTX_REQ,
   WR_TMR_END_MARKER_TMR ,
   WR_TMR_DETECT_RLF,
   WR_TMR_RRCCON_FAIL_RRC_UNDO_CFG,
   WR_TMR_UE_CTX_REL_REQ,
   WR_TMR_ENB_CFG_TRANSFER_WAIT,

   WR_TMR_ANR_MEAS_EPOCH_TMR,
   WR_TMR_ANR_MEAS_TRICE_TMR,
   WR_TMR_ANR_CELL_MAX_AGE_TMR,
   WR_TMR_TGT_HOPREP,

   WR_TMR_RRC_DAT_CFM,
   WR_TMR_TGT_PATH_SWITCH,
   WR_TMR_RRC_REL_GUARD,


   WR_TMR_KPI_PREDFND_INTRVL_TMR,


   WR_TMR_RMU_SAP_BND,


   WR_TMR_REPETITION_PERIOD,

   WR_TMR_TGT_SNSTATUS_TMR,
   WR_TMR_ECSFB_SIB8_TMR,
   WR_TMR_ABS_LOAD_INFO_TMR,

   WR_TMR_NLU_SAP_BND,

   WR_TMR_UL_HO_PREP_WAIT_TMR,
   WR_TMR_DL_CDMA_RECV_HO_WAIT_TMR,
   WR_TMR_ECSFB_HO_EXEC_TMR,
   WR_TMR_SRC_HO_CANCEL,

   WR_TMR_RIM_OVERALL,
   WR_TMR_RIM_TRIR,
   WR_TMR_RIM_TRIAE,
   WR_TMR_CSFB_GSM_T304_EXP_WAIT,
   WR_TMR_CSFB_GSM_MEAS_WAIT,
   WR_TMR_PCI_MOD_TMR,
   WR_TMR_ANR_STRONGCELL_REPORT_R1,

   WR_TMR_MEM_CPU_UTIL_INFO,

   WR_TMR_DAM_SAP_BND,
   WR_TMR_GUARD_UE_CTX_REL
} enWrTimer;
typedef enum WrCellResetStates
{
   WR_INIT_STATE_NONE = 0,
   WR_S1_RESET_DONE = 1,
   WR_UE_RELEASE_DONE = 2,
   WR_X2_RESET_DONE = 4,
   WR_ALL_RESET_DONE = 7
}WrCellResetStates;
typedef struct wrLiSapCb
{
   Pst pst;
   SuId suId;
   SpId spId;
   State sapState;
   Mem mem;
   CmTimer timer;
   U8 bndRetryCnt;
   U8 maxBndRetry;
   TmrCfg bndTmr;
} WrLiSapCb;







typedef struct wrMultiSapSupport
{
   SuId kwuSapId;
   SuId ckwSapId;
   SuId crgSapId;
   SuId cpjSapId;
   SuId pjuSapId;
   SuId rguSapId;
   SuId rguUlSapId;
   SuId rguDlSapId;
}WrMultiSapSupport;
typedef struct wrCb
{
   Mem mem;
   CmTqCp tqCp;
   CmTqType tq[100];
   TskInit init;
   Header lmHdr;
   UConnId s1apConId;
   Pst wrDamPst;
   WrLiSapCb **nhuSap;
   WrLiSapCb **ctfSap;
   WrLiSapCb **rgrSap;
   WrLiSapCb **sztSap;
   WrLiSapCb **cztSap;

   WrLiSapCb **rmuSap;

   WrLiSapCb **nluSap;
   WrLiSapCb **damSap;
   WrCellResetStates resetCmfState;
   WrCellResetStates parResetCmfState;






   Ticks timeRes;
   Bool enblSIAndPagngLog;

   NhuLLyrSapIdInfo sapIds[12];

} WrCb;

typedef struct wrUmmTimer
{
   void *cb;
   CmLList tmrLnk;
   CmTimer tmr;
}WrUmmTimer;


typedef struct wrSockAddr
{
  U16 len;
  U8 type;
  union
  {
     CmInet4SockAddr addr;
     CmInet6SockAddr addr6;
  }u;
} WrSockAddr;



typedef enum smLteAntennaPortsCount
{
   SM_LWR_AP_CNT_1,
   SM_LWR_AP_CNT_2,
   SM_LWR_AP_CNT_4
}SmLteAntennaPortsCount;

extern WrCb wrCb;

extern Bool memAlarm;

extern S16 wrActvTmr (Ent ent, Inst inst);
extern S16 wrRegInitTmr(Void);
extern S16 wrStartTmr(U32 cb, S16 tmrEvnt, U32 delay);
extern Void wrStopTmr(U32 cb, S16 event);
extern Bool wrIsTmrRunning(CmTimer *tmr, S16 event);

extern Void wrSendLmAlarm(U16 category, U16 event, U16 cause);
extern Void wrSendDamLmAlarm(U16 category, U16 event, U16 cause);
extern Void wrShutdown(Void);
extern S16 wrGenerateCfm (Pst *pst, CmStatus *cfmSts, U8 prim, LwrMngmt *cfm);
extern S16 wrDamGenerateCfm (Pst *pst, CmStatus *cfmSts, U8 prim, LwrMngmt *cfm);

extern Void wrPlatNonrtTickHdl(Void);
extern Void PrintRLCStats(Void);
extern Void wrPlatRgrTtiHndl(U32 tticnt, CmLteCellId cellId);
extern Void ResetRLCStats(Void);
extern Void ResetPDCPStats(Void);
extern Void PrintPDCPStats(Void);

extern const char * wrGetSwVersion(Void);
extern const char * wrGetPfVersion(Void);


extern S16 wrInitWireShark(Void);
extern S16 wrHandleWireSharkMsg(Buffer *mBuf);
int g_sockfd, g_sockfd1;
struct sockaddr_in g_serv_addr, g_serv_addr1;





typedef struct rnwCause
{
   U32 logLevel;
   U8 cause[128];
}RnwCause;

typedef struct tportCause
{
   U32 logLevel;
   U8 cause[128];
}TportCause;

typedef struct nasCause
{
   U32 logLevel;
   U8 cause[128];
}NasCause;

typedef struct protCause
{
   U32 logLevel;
   U8 cause[128];
}ProtCause;

typedef struct MiscCause
{
   U32 logLevel;
   U8 cause[128];
}MiscCause;

typedef struct staticAlarms
{
   U32 logLevel;
   U8 alarmType[128];
}StaticAlarms;

typedef struct dynAlarms
{
   U32 logLevel;
   U8 alarmType[128];
}DynamicAlarms;

typedef struct s1Alarm
{
   U32 logLevel;
   U8 s1AlarmType[128];
}S1Alarm;

typedef struct x2Alarm
{
   U32 logLevel;
   U8 x2AlarmType[128];
}X2Alarm;





extern Void smInitMsm(U8 cellCfgIdx);
typedef enum
{
   WR_ALARM_ID_FIRST = 11100,
   WR_ALARM_ID_CFG_PLAN_ERROR = WR_ALARM_ID_FIRST,
   WR_ALARM_ID_CFG_PLAN_INCONSISTENCY,
   WR_ALARM_ID_FREQ_SYNC_FAIL,
   WR_ALARM_ID_NTP_SERVER_NOT_RESPONDING,
   WR_ALARM_ID_OSCILLATOR_STABILITY_PROBLEM,
   WR_ALARM_ID_FAP_TEMP_OVER_THRESH,
   WR_ALARM_ID_PCI_CONFLICT,
   WR_ALARM_ID_LTE_LOW_QUALITY_CHANNEL,
   WR_ALARM_ID_NETWORK_JITTER,
   WR_ALARM_ID_S1_SETUP_FAIL,
   WR_ALARM_ID_X2_SETUP_FAIL,
   WR_ALARM_ID_MEM_ALLOC_FAIL,
   WR_ALARM_ID_SCTP_LNK_FAIL,
   WR_ALARM_ID_TNL_SETUP_FAIL,
   WR_ALARM_ID_S1_ERROR_IND,
   WR_ALARM_ID_S1_RESET,
   WR_ALARM_ID_X2_ERROR_IND,
   WR_ALARM_ID_X2_RESET
}WrAlarmId;


typedef enum
{
   WR_ALARM_SEVERITY_CLEARED,
   WR_ALARM_SEVERITY_WARNING,
   WR_ALARM_SEVERITY_MINOR,
   WR_ALARM_SEVERITY_MAJOR,
   WR_ALARM_SEVERITY_CRITICAL
} WrAlarmSeverity;
extern S16 wrAlarmEvt(WrAlarmId alarmId, WrAlarmSeverity severity,
                            U8 causeType, U8 causeVal);






typedef struct _legStr
{
    U16 length;
    Data buff[255];
}LegStr;





typedef enum _legEntity
{
   LEG_GTP_ENT_UNKNWN,
   LEG_GTP_ENT_MME,
   LEG_GTP_ENT_SGW,
   LEG_GTP_ENT_PGW,
   LEG_GTP_ENT_SGSN
}LegEntity;





typedef struct _legIeEntry
{
   U8 ieType;
   U8 dataType;
   U16 minLen;
   U16 maxLen;
}LegIeEntry;

typedef struct _legIeProperties LegIeProperties;
typedef struct _legGroupedIe LegGroupedIe;





struct _legGroupedIe
{
   U8 nmbGrpIe;
   U8 posIndex[10][256];
   LegIeProperties *ieProperties;
};





struct _legIeProperties
{
   U8 ieType;
   U8 ieClass;
   Bool ieList;
   U8 ieInst;
   LegGroupedIe *groupedIe;
};




typedef S16 (*EscFun) (Void *,U8 );
typedef struct _legMsgEntry
{
   U8 msgType;
   U8 posIndex[10][256];
   U8 nmbIeProp;
   LegIeProperties ieProperties[40];
   EscFun validateIe;
}LegMsgEntry;





typedef struct _egIeDictCfg
{
  LegIeEntry ieEntry[81];
  U16 posIdx[256];
  U8 nmbIe;

}EgIeDictCfg;





typedef struct _egGmDictCfg
{
  U8 intfType;
  U8 nmbMsg;
  LegMsgEntry *gmEntry;
}EgGmDictCfg;
typedef struct _egGenCfg
{
   TmrCfg eguT3Timer;
   U8 nmbRetries;
   TmrCfg echoTmr;
   TmrCfg reOrderTmr;
   U16 pvtExtId;

   U32 pduWindSize;
   U8 maxNumOfIp;
   U8 nodeArch;
 Bool lclEchoSup;







   S16 timerRes;
   U16 nmbUSaps;
   U16 maxNmbTSaps;
   U16 nmbSrvs;
   Status resThreshUpper;
   Status resThreshLower;
   Pst lmPst;





}EgGenCfg;







typedef struct _egUSapCfg
{
   SpId sapId;




   Selector selector;
   MemoryId mem;
   Priority priority;
   Route route;
   Ent dstEnt;
   Inst dstInst;
   ProcId dstProcId;
   U8 flag;






}EgUSapCfg;







typedef struct _egTSapCfg
{
   SuId tSapId;
   SpId spId;
   U16 tptType;
   Selector selector;
   MemoryId mem;
   Priority priority;
   Route route;
   Ent dstEnt;
   Inst dstInst;
   ProcId dstProcId;
   TmrCfg tInitTmr;
   CmTptParam tptParam;






}EgTSapCfg;



typedef struct _egTSapReCfg
{
   CmTptParam tPar;

   U8 maxBndRetry;
   TmrCfg bndTmCfg;
} EgTSapReCfg;
typedef struct _egIpInfo
{
   CmTptAddr srcIpAddr;
   SpId spId;
   U8 nodeType;
   Bool cfmStatus;
   U16 reason;
   LegStr echoReqPvtExtVal;

   LegStr echoRspPvtExtVal;

   LegStr errIndPvtExtVal;

}EgIpInfo;
typedef struct _egIpAddrCfg
{
   U8 nmbIpAddr;
   EgIpInfo *ipInfo;
}EgIpAddrCfg;
typedef struct _egTptSrvCfg
{
   SpId uSapId;
   U32 tptSrvId;
   SuId tSapId;
   CmTptAddr tptAddr;
   CmTptParam tptParam;
   S16 opnSrvRetryCnt;

   TmrCfg opnSrvTmr;





   TknStrOSXL hostName;
   U8 gtp_C_Or_U;

}EgTptSrvCfg;
typedef struct _egCfg
{
  union
   {
      EgGenCfg gen;
      EgUSapCfg uSap;
      EgTSapCfg tSap;

      EgIpAddrCfg ipAddr;

      EgTptSrvCfg tptSrv;




   } s;

   union
   {
      EgTSapReCfg tSapReCfg;
   }r;

}EgCfg;







typedef struct _egDbgCntrl
{
   U32 genDbgMask;
}EgDbgCntrl;







typedef struct _egTrcCntrl
{
   union
   {
      SpId tSapId;
   }t;
   S16 trcLen;
   U32 trcMask;
}EgTrcCntrl;







typedef struct egIpAddrCntrl
{
   CmTptAddr ipAddr;
   SpId fromSpId;
   SpId toSpId;
}EgIpAddrCntrl;
typedef struct egServerCntrl
{
   U8 type;




   union
   {
     U32 tptSrvId;
     CmTptAddr tptAddr;
   }t;
}EgServerCntrl;






typedef struct egSapCntrl
{
   SpId sapId;
}EgSapCntrl;







typedef struct _egCntrl
{
   DateTime dt;
   U8 action;
   U8 subAction;
   Bool flag;

   union
   {
      EgServerCntrl server;
      EgSapCntrl sap;
      EgTrcCntrl trcCntrl;

      EgDbgCntrl dbgCntrl;


      EgIpAddrCntrl ipAddress;


      U32 logMask;
 }s;
}EgCntrl;







typedef struct _egGenSta
{
   U32 memSize;
   U32 memAlloc;
   Bool resCong;
}EgGenSta;







typedef struct _egTSapSta
{
   SpId tSapId;
   S16 state;
}EgTSapSta;






typedef struct _egUSapSta
{
   SpId uSapId;
   S16 state;
}EgUSapSta;



typedef struct _egTptSrvSta
{
   SpId tSapId;
   U32 tptSrvId;
   Bool status;
   U8 state;
}EgTptSrvSta;



typedef struct _egTnlSta
{
   U32 teId;
   SpId spId;
   CmTptAddr srcIpAddr;

   CmTptAddr destIpAddr;

   Bool reOrderPrsnt;
}EgTnlSta;
typedef struct _egSta
{
   DateTime dt;
   union
   {
      SystemId sysId;
      EgGenSta genSta;
      EgUSapSta uSapSta;
      EgTSapSta tSapSta;

      EgTptSrvSta tSrvrSta;
      EgTnlSta tnlSta;

   } s;
}EgSta;







typedef struct _egErrSts
{
   Cntr invVerRx;
   Cntr invProtTypeRx;
   Cntr invMsgRx;
   Cntr invMsgLenRx;
   Cntr invIeOrderRx;
   Cntr invIeLenRx;
   Cntr invIeFormatRx;
   Cntr invManIeLenRx;
   Cntr missMandIeRx;
   Cntr unSuppExtHdrRx;
   Cntr wrngExtHdrRx;
   Cntr msgUnableCompRx;
   Cntr msgUnableCompTx;
   Cntr missMandIeTx;
   Cntr memAllocFldTx;
   Cntr invMsgTx;
   Cntr invTeidTx;
   Cntr invTeidRx;
   Cntr errSeqNoTx;
   Cntr errSeqNoRx;
   Cntr tpduExcdTx;
   Cntr invDatTypeTx;
}EgErrSts;

typedef struct _egGenSts
{
   Cntr numTxMsg;
   Cntr numRxMsg;
   Cntr numActvTnls;


   Cntr numNrmlDataTunn;

   Cntr numFwdDataTunn;


   Cntr numErrInd;

   Cntr cntInvldTeidInd;
   Cntr rxDesgMsg;

   EgErrSts errSts;
}EgGenSts;







typedef struct MsgSts
{
   Cntr Tx;
   Cntr Rx;
}EgMsgSts;







typedef struct _egSapSts
{
   SpId sapId;
   Cntr totalMsgsTx;
   Cntr totalMsgsRx;
   EgMsgSts msgType[256];

}EgSapSts;
typedef struct _egTnlSts
{
   U32 teId;
   SpId spId;
   CmTptAddr srcIpAddr;

   CmTptAddr destIpAddr;

   Cntr totalMsgsTx;
   Cntr totalMsgsRx;
   Bool reOrderPrsnt;
}EgTnlSts;
typedef struct _egTptSrvrSts
{
   SpId spId;
   CmTptAddr lclAddr;
   Cntr totalMsgsTx;
   Cntr totalMsgsRx;
}EgTptSrvrSts;







typedef struct _egIpSts
{
   CmTptAddr IpAddr;
   SpId spId;
   U32 nmbPorts;
   U32 *portsLst;
   U32 nmbActvSrvrs;
   U32 nmbInactvSrvr;
   Cntr totalMsgsTx;
   Cntr totalMsgsRx;
}EgIpSts;







typedef struct _egSts
{
   DateTime dt;
   union
   {
     EgGenSts gen;
     EgSapSts usap;
     EgSapSts tsap;

     EgIpSts ipSts;
     EgTptSrvrSts tptSrvrSts;
     EgTnlSts tnlSts;




   }s;
}EgSts;
typedef struct _egUstaDgnVal
{
   U8 type;
   union
   {
      Event event;
      SpId sapId;
      U32 connId;
      U8 choice;
      U8 ieType;
      CmTptAddr ipAddr;
      MemoryId mem;
   } t;
}EgUstaDgnVal;



typedef struct _egUstaDgn
{
   EgUstaDgnVal dgnVal[4];
}EgUstaDgn;



typedef struct _egUsta
{
   CmAlarm alarm;
   DateTime dt;
   EgUstaDgn dgn;
}EgUsta;







typedef struct _egTrc
{
   DateTime dt;
   U16 evnt;
   S16 length;
   CmTptAddr *srcAddr;
   CmTptAddr *remAddr;
}EgTrc;






typedef struct _egMngmt
{
   Header hdr;
   CmStatus cfm;
   union
   {
      EgCfg cfg;
      EgCntrl cntrl;
      EgSts sts;
      EgSta ssta;
      EgUsta usta;
      EgTrc trc;
   }u;
}EgMngmt;
typedef S16 (*LegCfgReq) ( Pst *pst, EgMngmt *cfgReq )

                                ;

typedef S16 (*LegCfgCfm) ( Pst *pst, EgMngmt *cfgCfm )


                               ;

typedef S16 (*LegStsReq) ( Pst *pst, Action action, EgMngmt *stsReq )



                               ;

typedef S16 (*LegStsCfm) ( Pst *pst, EgMngmt *stsCfm )


                               ;

typedef S16 (*LegStaReq) ( Pst *pst, EgMngmt *staReq )


                               ;

typedef S16 (*LegStaCfm) ( Pst *pst, EgMngmt *staCfm )


                               ;

typedef S16 (*LegStaInd) ( Pst *pst, EgMngmt *staInd )


                               ;

typedef S16 (*LegCntrlReq) ( Pst *pst, EgMngmt *cntrlReq )


                               ;

typedef S16 (*LegCntrlCfm) ( Pst *pst, EgMngmt *cntrlCfm )


                               ;

typedef S16 (*LegTrcInd) ( Pst *pst, EgMngmt *trcInd, Buffer *mBuf )



                               ;
 S16 EgMiLegCfgReq ( Pst *pst, EgMngmt *cfgReq )


                               ;
 S16 EgMiLegCfgCfm ( Pst *pst, EgMngmt *cfgCfm )


                               ;
 S16 EgMiLegStsReq ( Pst *pst, Action action, EgMngmt *stsReq )



                               ;
 S16 EgMiLegStsCfm ( Pst *pst, EgMngmt *stsCfm )


                               ;
 S16 EgMiLegStaReq ( Pst *pst, EgMngmt *staReq )


                               ;
 S16 EgMiLegStaCfm ( Pst *pst, EgMngmt *staCfm )


                               ;
 S16 EgMiLegStaInd ( Pst *pst, EgMngmt *staInd )


                               ;
 S16 EgMiLegCntrlReq ( Pst *pst, EgMngmt *cntrlReq )


                               ;
 S16 EgMiLegCntrlCfm ( Pst *pst, EgMngmt *cntrlCfm )


                               ;
 S16 EgMiLegTrcInd ( Pst *pst, EgMngmt *trcInd, Buffer *mBuf )



                               ;




 S16 SmMiLegCfgReq ( Pst *pst, EgMngmt *cfgReq )


                               ;

 S16 SmMiLegCfgCfm ( Pst *pst, EgMngmt *cfgCfm )


                               ;

 S16 SmMiLegStsReq ( Pst *pst, Action action, EgMngmt *stsReq )



                               ;

 S16 SmMiLegStsCfm ( Pst *pst, EgMngmt *stsCfm )


                               ;

 S16 SmMiLegStaReq ( Pst *pst, EgMngmt *staReq )


                               ;

 S16 SmMiLegStaCfm ( Pst *pst, EgMngmt *staCfm )


                               ;

 S16 SmMiLegStaInd ( Pst *pst, EgMngmt *staInd )


                               ;

 S16 SmMiLegCntrlReq ( Pst *pst, EgMngmt *cntrlReq )


                               ;

 S16 SmMiLegCntrlCfm ( Pst *pst, EgMngmt *cntrlCfm )


                               ;

 S16 SmMiLegTrcInd ( Pst *pst, EgMngmt *trcInd, Buffer *mBuf )



                               ;




extern S16 cmPkLegCfgReq (Pst* pst, EgMngmt * cfgReq);
extern S16 cmPkLegCntrlReq (Pst* pst, EgMngmt * cntrlReq);
extern S16 cmPkLegStaReq (Pst* pst, EgMngmt * staReq);
extern S16 cmPkLegStsReq (Pst* pst, Action action, EgMngmt * stsReq);


extern S16 cmUnpkLegCfgReq (LegCfgReq func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLegCntrlReq (LegCntrlReq func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLegStaReq (LegStaReq func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLegStsReq (LegStsReq func, Pst *pst, Buffer *mBuf);

extern S16 cmPkLegCfgCfm (Pst* pst, EgMngmt * cfgCfm);
extern S16 cmPkLegCntrlCfm (Pst* pst, EgMngmt * cntrlCfm);
extern S16 cmPkLegStsCfm (Pst* pst, EgMngmt * stsCfm);
extern S16 cmPkLegStaCfm (Pst* pst, EgMngmt * staCfm);

extern S16 cmUnpkLegCfgCfm (LegCfgCfm func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLegCntrlCfm (LegCntrlCfm func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLegStsCfm (LegStsCfm func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLegStaCfm (LegStaCfm func, Pst *pst, Buffer *mBuf);

extern S16 cmPkLegStaInd (Pst* pst, EgMngmt * staInd);
extern S16 cmPkLegTrcInd (Pst* pst, EgMngmt * trcInd, Buffer * uBuf);

extern S16 cmUnpkLegStaInd (LegStaInd func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLegTrcInd (LegTrcInd func, Pst *pst, Buffer *mBuf);

extern S16 cmPkEgGenCfg (EgGenCfg *genCfg, Buffer *mBuf, Pst *pst);
extern S16 cmPkEgUSapCfg (EgUSapCfg *usapCfg, Buffer *mBuf);
extern S16 cmPkEgTSapReCfg (EgTSapReCfg *tsapReCfg, Buffer *mBuf);
extern S16 cmPkEgTSapCfg (EgTSapCfg *tsapCfg, Buffer *mBuf);
extern S16 cmPkEgTptSrvCfg (EgTptSrvCfg *tsrvCfg, Buffer *mBuf);
extern S16 cmPkEgGmDictCfg (EgGmDictCfg *msgCfg, Buffer *mBuf);
extern S16 cmPkEgIeDictCfg (EgIeDictCfg *ieCfg, Buffer *mBuf);


extern S16 cmPkEgIpAddrCfg (EgIpAddrCfg *ipAddrCfg, Buffer *mBuf, Pst *pst);
extern S16 cmUnpkEgIpAddrCfg (EgIpAddrCfg *ipAddrCfg, Buffer *mBuf, Pst *pst);




extern S16 cmPkLegMsgEntry (LegMsgEntry *msg, Buffer *mBuf);
extern S16 cmPkLegIeProperties (LegIeProperties *ieProp, Buffer *mBuf);
extern S16 cmPkLegGroupedIe (LegGroupedIe *grpIe, Buffer *mBuf);
extern S16 cmPkLegIeEntry (LegIeEntry *ieEnt, Buffer *mBuf);

extern S16 cmUnpkEgGenCfg (EgGenCfg *genCfg, Buffer *mBuf, Pst *pst);
extern S16 cmUnpkEgUSapCfg (EgUSapCfg *usapCfg, Buffer *mBuf);
extern S16 cmUnpkEgTSapReCfg (EgTSapReCfg *tsapReCfg, Buffer *mBuf);
extern S16 cmUnpkEgTSapCfg (EgTSapCfg *tsapCfg, Buffer *mBuf);
extern S16 cmUnpkEgTptSrvCfg (EgTptSrvCfg *tsrvCfg, Buffer *mBuf);
extern S16 cmUnpkEgGmDictCfg (EgGmDictCfg *msgCfg, Buffer *mBuf);
extern S16 cmUnpkEgIeDictCfg (EgIeDictCfg *ieCfg, Buffer *mBuf);

extern S16 cmUnpkLegMsgEntry (LegMsgEntry *msg, Buffer *mBuf);
extern S16 cmUnpkLegIeProperties (LegIeProperties *ieProp, Buffer *mBuf);
extern S16 cmUnpkLegGroupedIe (LegGroupedIe *grpIe, Buffer *mBuf);
extern S16 cmUnpkLegIeEntry (LegIeEntry *ieEnt, Buffer *mBuf);

extern S16 cmPkEgTrcCntrl (EgTrcCntrl *trcCntrl, Buffer *mBuf);
extern S16 cmPkEgDbgCntrl (EgDbgCntrl *dbgCntrl, Buffer *mBuf);
extern S16 cmPkEgSapCntrl (EgSapCntrl *sapCntrl, Buffer *mBuf);
extern S16 cmPkEgServerCntrl (EgServerCntrl *srvCntrl, Buffer *mBuf);

extern S16 cmUnpkEgTrcCntrl (EgTrcCntrl *trcCntrl, Buffer *mBuf);
extern S16 cmUnpkEgDbgCntrl (EgDbgCntrl *dbgCntrl, Buffer *mBuf);
extern S16 cmUnpkEgSapCntrl (EgSapCntrl *sapCntrl, Buffer *mBuf);
extern S16 cmUnpkEgServerCntrl (EgServerCntrl *srvCntrl, Buffer *mBuf);

extern S16 cmPkEgGenSta (EgGenSta *genSta, Buffer *mBuf);
extern S16 cmPkEgUSapSta (EgUSapSta *usapSta, Buffer *mBuf);
extern S16 cmPkEgTSapSta (EgTSapSta *tsapSta, Buffer *mBuf);

extern S16 cmUnpkEgGenSta (EgGenSta *genSta, Buffer *mBuf);
extern S16 cmUnpkEgUSapSta (EgUSapSta *usapSta, Buffer *mBuf);
extern S16 cmUnpkEgTSapSta (EgTSapSta *tsapSta, Buffer *mBuf);

extern S16 cmPkEgGenSts (EgGenSts *genSts, Buffer *mBuf);
extern S16 cmPkEgMsgSts (EgMsgSts *msgSts, Buffer *mBuf);
extern S16 cmPkEgSapSts (EgSapSts *sapSts, Buffer *mBuf);

extern S16 cmUnpkEgGenSts (EgGenSts *genSts, Buffer *mBuf);
extern S16 cmUnpkEgMsgSts (EgMsgSts *msgSts, Buffer *mBuf);
extern S16 cmUnpkEgSapSts (EgSapSts *sapSts, Buffer *mBuf);

extern S16 cmPkEgUstaDgnVal (EgUstaDgnVal *dgnVal, Buffer *mBuf);
extern S16 cmPkEgUstaDgn (EgUstaDgn *dgn, Buffer *mBuf);

extern S16 cmUnpkEgUstaDgnVal (EgUstaDgnVal *dgnVal, Buffer *mBuf);
extern S16 cmUnpkEgUstaDgn (EgUstaDgn *dgn, Buffer *mBuf);


extern S16 cmPkLegStr (LegStr *legStr, Buffer *mBuf);
extern S16 cmUnpkLegStr (LegStr *legStr, Buffer *mBuf);
extern S16 cmPkEgIpAddrCntrl (EgIpAddrCntrl *ipCntrl, Buffer *mBuf);
extern S16 cmUnpkEgIpAddrCntrl (EgIpAddrCntrl *ipCntrl, Buffer *mBuf);
extern S16 cmPkEgIpAddrStsCfm (EgIpSts *ipSts, Buffer *mBuf, Pst *pst);
extern S16 cmPkEgSrvrStsCfm (EgTptSrvrSts *tSrvrSts, Buffer *mBuf);
extern S16 cmUnpkEgTnlStsCfm (EgTnlSts *tnlSts, Buffer *mBuf);
extern S16 cmUnpkEgSrvrStsCfm (EgTptSrvrSts *tSrvrSts, Buffer *mBuf);
extern S16 cmUnpkEgIpAddrStsCfm (EgIpSts *ipSts, Buffer *mBuf, Pst *pst);
extern S16 cmPkEgTnlStsCfm (EgTnlSts *tnlSts, Buffer *mBuf);
extern S16 cmPkEgIpAddrStsReq (EgIpSts *ipSts, Buffer *mBuf);
extern S16 cmPkEgSrvrStsReq (EgTptSrvrSts *tSrvrSts, Buffer *mBuf);
extern S16 cmPkEgTnlStsReq (EgTnlSts *tnlSts, Buffer *mBuf);
extern S16 cmUnpkEgIpAddrStsReq (EgIpSts *ipSts, Buffer *mBuf);
extern S16 cmUnpkEgSrvrStsReq (EgTptSrvrSts *tSrvrSts, Buffer *mBuf);
extern S16 cmUnpkEgTnlStsReq (EgTnlSts *tnlSts, Buffer *mBuf);
extern S16 cmPkEgSrvrStaReq (EgTptSrvSta *tserverSta, Buffer *mBuf);
extern S16 cmUnpkEgSrvrStaReq (EgTptSrvSta *tserverSta, Buffer *mBuf);
extern S16 cmPkEgTnlStaReq (EgTnlSta *tnlSta, Buffer *mBuf);
extern S16 cmUnpkEgTnlStaReq (EgTnlSta *tnlSta, Buffer *mBuf);
extern S16 cmUnpkEgTnlStaReq (EgTnlSta *tnlSta, Buffer *mBuf);
extern S16 cmUnpkEgSrvrStaCfm (EgTptSrvSta *tserverSta, Buffer *mBuf);
extern S16 cmPkEgTnlStaCfm (EgTnlSta *tnlSta, Buffer *mBuf);
extern S16 cmUnpkEgTnlStaCfm (EgTnlSta *tnlSta, Buffer *mBuf);
 S16 cmPkEgSrvrStaCfm (EgTptSrvSta *tserverSta, Buffer *mBuf);
extern S16 smEgActvTsk (Pst *pst, Buffer *mBuf);




extern S16 smEgActvInit (Ent ent, Inst inst, Region region, Reason reason)
                                                                    ;
extern S16 egActvInit (Ent ent, Inst inst, Region region, Reason reason);

extern S16 egActvTsk (Pst *pst, Buffer *mBuf);
extern U16 wrPciRange[14];
typedef U8 WrCellBw;
typedef enum WrCellState
{
   WR_CELL_STATE_INIT = 1,
   WR_CELL_STATE_RESET,
   WR_CELL_STATE_UP,
   WR_CELL_STATE_PWR_DOWN,
   WR_CELL_STATE_RECFG
}WrCellState;



typedef enum
{
   UTRA_FDD,
   UTRA_TDD,
   GERAN,
   CDMA2000_HRPD,
   CDMA2000_1XRTT,
   MAX_RAT_TYPE
}wrCsfbRatType;


typedef enum
{
   CDMA2000_CSFB_WITHOUT_REDIRECTION = 1,
   CDMA2000_CSFB_WITH_REDIRECTION,
   CDMA2000_CSFB_WITHOUT_PS_HO,
   CDMA2000_CSFB,
   CDMA2000_CSFB_WO_PSHO_FAIL_REDIR_SUCC,
   CDMA2000_CSFB_DUALRXTX_REDIR,
   CDMA2000_CSFB_DUALRXTX_DLNAS,
   GERAN_CSFB,
   GERAN_CSFB_CCO,
   GERAN_CSFB_CCO_WITH_NACC,
   GERAN_CSFB_WITH_REDIRECTION,
   GERAN_CSFB_WITHOUT_REDIRECTION,
   GERAN_CSFB_WITH_REDIRECTION_WITH_SI,
   UTRA_CSFB,
   UTRA_CSFB_WITHOUT_REDIRECTION,
   UTRA_CSFB_WITH_REDIRECTION_WITH_SI,
   UNKNOWN_CSFB_REDIRECTION_TYPE
}wrCsfbReDirType;







typedef enum
{
  WR_UMM_NULL_ALGO,
  WR_UMM_SNOW3G_ALGO,
  WR_UMM_AES_ALGO,
  WR_UMM_ZUC_ALGO
} WrUmmAsSecAlgo;

typedef struct wrRatPriorityList{
   U8 numberOfRats;
   wrCsfbRatType rat[MAX_RAT_TYPE];
}WrRatPriorityList;



typedef enum wrUmmMeasCellTyp
{
  WR_UMM_MEAS_INTRA_FREQ,
  WR_UMM_MEAS_INTER_FREQ,
  WR_UMM_MEAS_1XCDMA,
  WR_UMM_MEAS_CDMA_HRPD,
  WR_UMM_MEAS_UTRA_FDD_FREQ,
  WR_UMM_MEAS_UTRA_TDD_FREQ,
  WR_UMM_MEAS_GERAN_FREQ,
  WR_UMM_MEAS_NONE
}WrUmmMeasCellTyp;




typedef struct wrUmmMeasGeranMeasInfo
{
   U16 arfcn;
   U8 bsic;
   U8 nccPermitted;
   U8 bandIndicator;
   S8 qOffset;
}WrUmmMeasGeranMeasInfo;



typedef enum wrMobilityType
{
   WR_INTRA_SYS_MEAS,
   WR_INTRA_SYS_MBLTY,
   WR_INTER_SYS_UTRA_MBLTY,
   WR_INTER_SYS_GERAN_MBLTY
}WrMobilityType;




typedef enum wrHrlDecisionRet
{
   WR_MEAS_MBLTY_APPL_TO_CELL = 0,
   WR_MEAS_MBLTY_NOT_APPL_TO_CELL,
   WR_MEAS_MBLTY_APPL_TO_RAT,
   WR_MEAS_MBLTY_NOT_APPL_TO_RAT
}WrHrlDecisionRet;
typedef enum wrForbRatTyp
{
   WR_RAT_EUTRA = 0,
   WR_FORB_RAT_UTRA,
   WR_FORB_RAT_CDMA,
   WR_FORB_RAT_GERAN
}WrForbRatTyp;







typedef struct wrUmmMsgCause
{
   U32 causeTyp;
   U32 causeVal;
} WrUmmMsgCause;
typedef struct wrPlmnId
{
   U8 numMncDigits;
   U8 mcc[3];
   U8 mnc[3];
} WrPlmnId;





typedef struct wrEcgi
{
   WrPlmnId plmnId;
   U32 eutranCellId;
} WrEcgi;






typedef struct wrSTmsi
{
   Bool pres;
   U8 mmec;
   U32 mTMSI;
} WrSTmsi;







typedef struct wrGummei
{
   Bool pres;

   Bool plmn_identity_pres;
   WrPlmnId plmnId;
   U16 mmeGrpId;
   U8 mmec;
}WrGummei;





typedef struct wrBitRate
{
   U32 dl;
   U32 ul;
} WrBitRate;
typedef U32 WrRbDir;

typedef U32 WrMmeId;
typedef CmLteCellId WrCellId;





typedef struct wrCgi
{
   WrPlmnId plmnId;
   U32 cellId;
} WrCgi;





typedef struct wrTai
{
   WrPlmnId plmnId;
   U16 tac;
} WrTai;
typedef struct wrLchChnlCfg
{
   U8 priority;
   U32 pbr;
   U32 bucketSzDur;
   U8 lcg;
} WrLchChnlCfg;
typedef struct wrUeCapInfo
{
   CmMemListCp memCp;
   NhuUE_EUTRA_Cap eUTRA_Cap;
   TknStrOSXL ueEutraOctStr;
   TknStrOSXL ueUtraOctStr;
   TknStrOSXL ueGeranCsOctStr;
   TknStrOSXL ueGeranPsOctStr;
   TknStrOSXL ueCdmaOctStr;



   NhuUE_EUTRA_Cap_v9a0_IEs eUTRA_Cap_v9a0;

} WrUeCapInfo;

typedef U16 WrTac;
typedef U16 WrLac;

typedef struct wrForbiddenTAs
{
   WrPlmnId plmnId;
   U16 noOfTac;
   WrTac *tac;
} WrForbiddenTAs;


typedef struct wrForbiddenLAs
{
   WrPlmnId plmnId;
   U16 noOfLac;
   WrLac *lac;
} WrForbiddenLAs;

typedef struct wrHoRstrctInfo
{
   CmMemListCp memCp;
   WrPlmnId srvngPlmn;
   TknU32 frbdnInterRATs;
   U8 noOfEplmn;
   U8 noOfTAs;
   U8 noOfLAs;
   WrPlmnId *ePlmn;
   WrForbiddenTAs *frbdnTAs;
   WrForbiddenLAs *frbdnLAs;
} WrHoRstrctInfo;

typedef struct wrPLMNs
{
   Bool isPLMNForb;
   WrPlmnId plmnId;
} WrPLMNs;

typedef struct wrSelctdPLMN
{
   U8 nosOfPlmns;
   WrPLMNs selectdPLMN[6];
}WrSelctdPLMN;

typedef struct wrHrlCb
{
   U8 nosOfPlmns;
   WrPlmnId plmnToVldt[6];
   U16 tacOrLacToVldt;
}WrHrlCb;
typedef struct wrRlcAmCfg
{
   U32 tPollRetransmit;
   U32 pollPdu;
   U32 pollByte;
   U32 maxRetxThreshold;
   U32 tReordering;
   U32 tStatusProhibit;
} WrRlcAmCfg;







typedef struct wrRlcUmCfg
{
   U32 dlSnLen;
   U32 ulSnLen;
   U32 tReordering;
} WrRlcUmCfg;
typedef struct wrRlcCfg
{
   U8 mode;
   union
   {
      WrRlcAmCfg amCfg;
      WrRlcUmCfg umCfg;
   } u;
} WrRlcCfg;
typedef struct wrPdcpCfg
{
   Bool statusRptReq;
   Bool hdrCmpReq;
   U32 discardTmr;
   U32 snSize;
   U16 maxCid;
   U16 rohcProfid;
} WrPdcpCfg;
typedef struct wrEmmS1ConId
{
   U8 type;
   U32 conId;
}WrEmmS1ConId;






typedef struct wrRegLai
{
      Bool isLaiPres;
      WrPlmnId plmnId;
      U16 lac;
} WrRegLai;


typedef struct wrUmmIntraLteHoNghInfo
{
   U16 pci;
   U32 earfcn;
   U32 eutranCellId;
   CmTptAddr neighEnbAddr;
   U8 isX2Connected;
   U8 enbType;
   U16 tac;
   U32 neighEnbCb;
} WrUmmIntraLteHoNghInfo;

typedef struct wrUmmIRatUtraHoNghInfo
{
  U16 psc;
  U32 arfcn;
  U16 rncId;
  U16 cId;
  U16 lac;
  U8 rac;
  WrPlmnId plmnId;
  TknU32 srvccHoInd;
} WrUmmIRatUtraHoNghInfo;

typedef struct wrUmmIRatGeranHoNghInfo
{
  Bool psSrvcNotAvlbl;
  U32 rssi;
  TknU32 srvccHoInd;
} WrUmmIRatGeranHoNghInfo;
typedef struct wrHoNghInfo
{
   U32 peerId;
   WrPlmnId plmnId;
   U32 neighCellCb;
   U8 hoType;

   U8 isCsgInfoDiscovered;
   U32 csgId;
   U8 csgCellAccessMode;


   union
   {
     WrUmmIntraLteHoNghInfo intraLteNghInfo;
     WrUmmIRatUtraHoNghInfo iRatUtraNghInfo;
     WrUmmIRatGeranHoNghInfo iRatGeranNghInfo;
   }t;
} WrHoNghInfo;
typedef struct wrUmmAnrMeasInfo
{
   TknU32 intraFreq;
   U8 interArfcnCnt;
   U32 interArfcn[32];
   U8 utranArfcnCnt;
   U32 utranArfcn[32];

   WrUmmMeasCellTyp currAnrCfgType;
   U8 currAnrInterFreqCnt;

} WrUmmAnrMeasInfo;




typedef struct _wrEmmlteAdvFeatureActDeact
{
    RgrFeature feature;
    RgrFeatureStatus flag;
} WrEmmlteAdvFeatureActDeact;
typedef struct wrUmmUtraCellRedirInfo
{
    U16 pscId;
    S16 rscp;
    U8 ecno;
    TknStrOSXL utraSI;
} WrUmmUtraCellRedirInfo;
typedef struct wrUmmUtraTddCellRedirInfo
{
    U16 pscId;
    S16 rscp;
    U16 arfcn;
    TknStrOSXL utraSI;
} WrUmmUtraTddCellRedirInfo;
typedef struct wrUmmUtraRedirectInfo
{
   U8 duplexTyp;
   U16 arfcn;
   U8 noOfPscs;
   TknPres pres;
   WrUmmUtraCellRedirInfo utraCellRedirInfo[16];
} WrUmmUtraRedirectInfo;
typedef struct wrUmmUtraTddRedirectInfo
{
   Bool eRedirUtraR10Sup;
   U8 noOfPscs;
   U8 noOfTddArfcn;
   U32 arfcnTddLst[6];
   WrUmmUtraTddCellRedirInfo utraCellRedirInfo[16];
} WrUmmUtraTddRedirectInfo;
typedef struct wrUmmEutraRedirectInfo
{
   U16 arfcn;
} WrUmmEutraRedirectInfo;







typedef struct wrUmmCdmaRedirectInfo
{
   U16 arfcn;
   LwrCdma2kBandClassType bandClass;
} WrUmmCdmaRedirectInfo;
typedef TknStrOSXL* WrSiInfoGeran[10];

typedef struct wrCellInfoListGeran
{

   U8 bsic;



   U16 arfcn;
   U8 noOfsiPsi;
   WrSiInfoGeran siListGeran;
}WrCellInfoListGeran;




typedef struct wrUmmGeranRedirectInfo
{
   WrCellInfoListGeran cellInfoList[16];
   U8 cellInfoCnt;
   U8 bandInd;

}WrUmmGeranRedirectInfo;
typedef enum wrUmmRedirectType
{
   WR_UMM_REDIRECTION,
   WR_UMM_CSFB
}WrUmmRedirectType;
typedef struct wrUmmRedirectInfo
{
   U16 cellId;
   U32 eRedirGeranR9Sup;
   Bool eRedirUtraR9Sup;
   WrUmmMeasCellTyp ratTyp;
   WrUmmRedirectType redirType;
   union
   {
      WrUmmEutraRedirectInfo eutraInfo;
      WrUmmUtraRedirectInfo utraInfo;
      WrUmmUtraTddRedirectInfo utraTddInfo;
      WrUmmCdmaRedirectInfo cdmaInfo;
      WrUmmGeranRedirectInfo geranInfo;
   }val;
} WrUmmRedirectInfo;
  typedef enum wrUmmUeEstablishCause
  {
     WR_UMM_EMERGENCY,
     WR_UMM_HIGHPRIORACCESS,
     WR_UMM_MTACCESS,
     WR_UMM_MOSIGNALLING,
     WR_UMM_MODATA,
     WR_UMM_HO_CALL
  }WrUmmUeEstablishCause;
typedef enum wrUmmMeasRptCfgType
{
   WR_UMM_NO_ANR_CFG,
   WR_UMM_EVENT_A3_CFG,
   WR_UMM_EVENT_A5_CFG,
   WR_UMM_STRONG_CELL_CFG,
   WR_UMM_EVENT_A4_A5_INTER_CFG,
   WR_UMM_PERD_STRONG_CELL_CFG
}WrUmmMeasRptCfgType;
typedef enum wrUmmTmrVal
{
   WR_UMM_INT_LTE_S1_PREP_TMR,
   WR_UMM_IRAT_S1_PREP_TMR,
   WR_UMM_INT_LTE_S1_OVRL_TMR,
   WR_UMM_IRAT_S1_OVRL_TMR
}wrUmmTmrVal;





typedef struct WrDrxLongCycleOffst
{
   U16 longDrxCycle;
   U16 drxStartOffst;
} WrDrxLongCycleOffst;
typedef struct wrDrxShortDrx
{
   Bool pres;
   U16 shortDrxCycle;
   U8 drxShortCycleTmr;
} WrDrxShortDrx;
typedef struct wrDrxCfg
{
   Bool isDrxEnabled;
   TknS32 cqiMask;
   U8 drxOnDurTmr;
   U16 drxInactvTmr;
   U8 drxRetxTmr;
   WrDrxLongCycleOffst drxLongCycleOffst;
   WrDrxShortDrx drxShortDrx;
} WrDrxCfg;


typedef struct wr1xRttTgtCell
{
   U32 bandClass;
   U32 arfcn;
   U16 pnOffset;
   U16 pilotPnPhase;
   U8 pilotStrength;
}WrCdmaRttPilotLst;

typedef struct wrCdma1xRttPnOffset
{
   U16 pnOffset;
   U32 bandClass;
   U32 arfcn;
}WrCdma1xRttPnOffset;

typedef struct wrCdma1xRttPilotInfo
{
   U8 systemType;
   U8 pilotOneWay;
   U16 channelNum;
   TknStrOSXL *sectorId;
   U8 bandClass;
}WrCdma1xRttPilotInfo;

typedef struct wrSpsCfg
{
   U16 spsRnti;
   RmuSpsConfigDl spsCfgDl;
   RmuSpsConfigUl spsCfgUl;
} WrSpsCfg;



typedef struct wrcdmatgtcell
{
   U16 marketId;
   U16 switchNum;
   U16 cellId;
   U16 sectorNum;
   U32 cdmaType;
}WrCdmaCell;
typedef struct wrcdmacell
{
   WrCdmaCell cdmaCell;
   U8 priority;
}WrCdmaTgtCell;



typedef struct wrMemCpuMeasCb
{
   U16 memUtilizationMask;
   U16 cpuUtilizationMask;
   CmTimer cpuMemUtilTmr;
   CmLteMemInfo memInfo;
   CmLteMemInfo memCfmInfo;
   CmCpuStatsInfo cpuInfo;
   CmLteCpuInfo cpuCfmInfo;
}WrMemCpuMeasCb;
typedef U8 WrEnbType;
extern S16 wrEmCellSchdSiWinSzMap(U16 window, U8 *siWindowSize);
extern S16 wrEmmInit(Void);
extern S16 wrEmmGetCgi(WrCellId cellId, WrCgi *cgi);
extern S16 wrEmmSchdTtiInd(RgrTtiIndInfo *ttiInd);
extern S16 wrEmmSchdCellCfgCfm(U32 transId, U8 status);
extern S16 wrEmmSchdEnbCfgCfm(U32 transId, U8 status);
extern S16 wrEmmS1apProcPdu(SztUDatEvnt *uDatEvnt);
extern S16 wrEmmPrcPhyCfgCfm(U32 transId, U8 status);
extern S16 wrEmmSetupS1(WrMmeId mmeId);
extern S16 wrEmmRrcCellCfgCfm(U16 cellId);
extern S16 wrEmmAddCell(WrCellId cellId);
extern S16 wrEmmSchdSiCfgCfm(U32 transId, U8 status);
extern S16 wrEmmGetCellType(WrCellId cellId, U8 *cellType);
extern S16 wrEmmSendEnbConfigTransfer(Void);

extern S16 wrEmmSchdWrngSiCfgCfm
(
U32 transId,
U8 status
);

extern S16 wrEmmSchdStopWrngSiCfgCfm
(
U32 transId,
U8 status
);

extern S16 WrIfmSchdEnbCfgReq(RgrCfgReqInfo *cfgReq, U32 transId);



extern S16 wrEmmPrcS1StaInd(SztStaInd *sztSta);
extern S16 wrEmmMmeSetupWaitTmrExpiry(U32 mmeCb);
extern S16 wrEmmAddMme(WrMmeId mmeId);
extern S16 wrEmmGetMmeByPlmn(WrPlmnId *plmnId, WrMmeId *mmeId);
extern S16 wrEmmGetMmeByMmec(U8 mmec, WrMmeId *mmeId);
extern S16 wrEmmGetMme(WrPlmnId *plmnId, U16 grpId, U8 mmeCode, WrMmeId *mmeId);
extern S16 wrEmmGetSelPlmn(WrCellId cellId, U8 selPlmnId, WrPlmnId **plmn);
extern S16 wrEmmGetDatAppAddr(U16 cellId, CmTptAddr **addr, U8 type);
extern S16 wrEmmUmmMeasReCfg(WrCellId cellId);
extern S16 wrEmmUpdateCellState(U16 cellId,WrCellState cellState);
extern S16 wrEmmMmeBrngCellPwrDown(Void);

extern S16 wrEmmCallMmeSetup(Void);

extern Void wrUmmInit(Void);
extern S16 wrUmmAddCell(WrCellId cellId, LwrAddCellCfg *cfgAdd);

extern S16 wrUmmCreateSpsRntiDb(WrCellId cellId, LwrAddCellCfg *cfgAdd, U32 grpIndx);

extern S16 wrUmmDelMme(WrMmeId mmeId);
extern S16 wrUmmAddMme(WrMmeId mmeId);
extern S16 wrUmmPrcRrcCfgCfm(NhuCfgCfmSdus *cfgCfm);
extern S16 wrUmmPrcPhyCfgCfm(U32 transId, U8 status);
extern S16 wrUmmPrcSchdCfgCfm(U32 transId, U8 status);
extern S16 wrUmmPrcUuDatInd(NhuDatIndSdus *uuDatInd);
extern S16 wrUmmPrcS1RelCfm(SztRelCfm *relCfm);
extern S16 wrUmmPrcS1RelInd(SztRelInd *relInd);
extern S16 wrUmmPrcS1ErrInd(SztLclErrInd *relInd);
extern S16 wrUmmPrcS1apConCfm(SztConCfm *conCfm);
extern S16 wrUmmPrcS1DatInd(SztDatEvntInd *s1DatInd);
extern S16 wrUmmPrcRrcDatCfm(NhuDatCfmSdus *rrcDatCfm);
extern S16 wrUmmPrcRrcErrInd(NhuErrIndSdus *rrcErrInd);
extern S16 wrUmmPrcRrcEncodeCfm(NhuEncCfmSdus *rrcEncCfmSdus);
extern S16 wrUmmPrcRrcDecodeCfm(NhuDecodeSduCfm *rrcDecCfmSdus);
extern S16 wrUmmPrcTimerExp(WrUmmTimer *cb, U8 wrUmmTmrExpEvnt);
extern S16 wrUmmMmeFullRst(WrMmeId mmeId);
extern S16 wrUmmMmePartInRst(WrMmeId mmeId, SztResetTyp *tknIE);
extern S16 wrUmmMmePartRst(WrMmeId mmeId, WrEmmS1ConId *conId, U32 nmbCons);
extern S16 wrUmmPrcReestabCfm(U32 transId, U8 status);
extern S16 wrUmmUpdateCellState(U16 cellId,WrCellState cellState);
extern S16 wrUmmPrcRrmUeAdmitResp(RmuUeAdmitRsp *ueAdmitResp);
extern S16 wrUmmPrcRrmUeRelInd(RmuUeRelInd *ueRelInd);
extern S16 wrUmmPrcRrmUeRelResp(RmuUeRelRsp *ueRelResp);
extern S16 wrUmmProcHoAdmitRsp(RmuUeHoRsp* hoResp);

extern S16 wrUmmPrcKdfCfm(U32 trasnId, U8 status, CtfKdfCfmInfo *kdfCfmInf);

extern S16 wrUmmGetUeCntxToRel(WrCellId cellId);


extern S16 wrDamInit(Void);
extern Void wrDamTnlMgmtCfm(EgtUEvnt *eguMsg);
extern S16 wrDamErrInd(EgtUEvnt *eguMsg);



extern S16 wrDamEgtpDatInd(Pst *pst, EgtUEvnt *eguMsg);
extern S16 wrDamPdcpDatInd(CmLtePdcpId *pdcpId, Buffer *mBuf);
extern S16 wrDamPdcpDatFwdInd(Pst *pst, CmLtePdcpId *pdcpId,
      PjuDatFwdIndInfo *datFwdInd);
extern Bool wrDamIsUeInactv(Void *cb);
extern U16 wrEmmGetServCarrierFreq(U16 cellId);
extern U16 wrEmmGetPhyCellId(U16 cellId);

extern U16 wrEmmGetDuplexMode(U16 cellId);
extern S16 wrEmmGetMaxUeSupport(U16 cellId, U16 *pMaxUeSupp);

extern U16 wrEmmGetNeighIpFrmPeerId(U32 peerId, U8 cellId, CmTptAddr *peerAddr);


extern Void wrEnbParamsInit(Void);
extern U8 wrEmmGetNumTxAnt(U16 cellId);
extern U32 wrEmmGetRrcUeCapTmrVal(U16 cellId);

extern U32 wrEmmGetRrcSecModTmrVal(U16 cellId);
extern U32 wrEmmGetRrcConTmrVal(U16 cellId);
extern U32 wrEmmGetRrcReestabTmrVal(U16 cellId);
extern U32 wrEmmGetRrcConRelTmrVal(U16 cellId);
extern U32 wrEmmGetRrcReCfgTmrVal(U16 cellId);
extern S16 wrEmmGetT304IRATTmrVal(U16 cellId, U32 *val);
extern S16 wrEmmGetT301TmrVal(U16 cellId, U32 *val);
extern S16 wrEmmGetTmrVal(U16 cellId, U32 type,U32 *tmrVal);

extern S16 wrUmmMmeGetFirstUeS1apId(WrMmeId mmeId, U32 *ue_enb_s1apId,
                                                     U32 *ue_mme_s1apId);
extern S16 wrUmmAnrMeasInitCfg(U16 cellId, WrUmmAnrMeasInfo *anrMeasCfgInfo);

extern S16 wrUmmAnrStartMeasurements(U16 cellId);
extern Bool wrEmmAnrUeConnected(U16 cellId);
extern Bool wrEmmAnrIsTriceTmrRunning(U16 cellId);

extern S16 wrUmmAnrDelMeasCfgForAllUe(U16 cellId);
extern S16 wrEmmMeasReportCgiHdlr(U16 cellId,U8 nrType,U16 carrFreq,
      NhuMeasResults *measRprt, U8 ueAccessStratRel);
extern S16 wrUmmAddNrFreq(U16 cellId, U8 numFreq, LwrNeighFreqAddModCfg *nrFreqCfg);

extern S16 wrUmmModNrFreq(U16 cellId,U8 numFreq,LwrNeighFreqAddModCfg *nrFreqCfg);
extern S16 wrUmmDelNrFreq(U16 cellId,U16 numFreq,LwrNeighFreqDelCfg *nrFreqCfg);
extern S16 wrEmmGetOffsetFreqFrmArfcn(U16 cellId,U16 arfcn,U8 *offsetFreq);
extern S16 wrUmmAddNrGeranObj(U16 cellId,U8 numFreq, WrUmmMeasGeranMeasInfo *nrFreqCfg);
extern Void* wrEmmAnrGetGeranNbr(U16 cellId, U16 arfcn, U8 bandInd, U8 ncc, U8 bcc);
extern U8 wrEmmGetAnrDrxInActivTmrVal(WrCellId cellId);
extern Void wrEmmAnrPrintCellInfo(Void);
extern Void wrEmmAnrPrintUtraFddCellInfo (U8 cellId);
extern Void wrEmmAnrPrintUtraTddCellInfo (U8 cellId);
extern S16 wrSendNghCellInfo(LwrMngmt *lwrMng);
extern S16 wrEmmDynCfgReq(LwrDynMngmt *dynCfg);
extern U16 wrEmmGetAnrDrxOnDur(WrCellId cellId);
extern U16 wrEmmGetAnrDrxLongCycle(WrCellId cellId);
extern Void wrPlatRgrTtiHndl(U32 tticnt, CmLteCellId cellId);
extern Bool wrUmmChkGeranBandindEql(U8 cfgdBand, U32 nhuBand);
extern S16 wrUmmCsfbCdma2k1xMobParams(U16 cellId, LwrCdma2k1xMobParams *mobParams);

extern U32 wrUmmGetRrcDatCfmTmrVal(U32 cellId);
extern S16 smBuildNlGenCfg(NlGenCfg *genCfg);
extern S16 smBuildNlNghCellCfg(LnlNghCellCfg *nghCellCfg, U8 cellCfgIdx);
extern S16 smBuildNlCellCfg(LnlCellCfg *cellCfg, U8 cellCfgIdx);
extern S16 smBuildNlCellReCfg(LnlCellReCfg *cellReCfg);
extern S16 smUpdateNlPciVal(NlUpdatePciCfgInd *pciCfgInd);
extern S16 smUpdateNlEarfcnVal(NlUpdateEarfcnCfgInd *earfcnCfgInd);
extern S16 smSendNlCellReCfg(Void);
extern S16 smUpdateNlPrachVal(NlUpdatePrachCfgInd *prachCfgInd);
extern S16 wrEmmGetPlmnRedirSupport(WrPlmnId *plmn,Bool *isRedirSupport,WrCellId cellId);
extern Void smFillEgIpInfo(SpId spId,EgIpInfo *ipInfo);
extern S16 smBuildTServerCfg(Void);
extern S16 smUpdateNlTxPwrVal(NlUpdateTxPwrCfgInd *txPwrCfgInd);
extern S16 smUpdateNlMeasRptInterval(U32 measInterval);
extern S16 wrEmmCheckPRem(void);






extern Void TSInfSetEnbIp(U32 enbIpAddr);
extern S16 TSInfInitStatsFrmWork ( Bool tenbSocketStats, Bool tenbFileStats, Bool tenbConsoleStats, U32 tenbStatsPeriodicity, U32 tendStatsSocketPort )





  ;
extern Void TSInfCfgCL (Void);
extern S16 smBuildYsTenbStatsCntrl (U32 statsPer);
typedef RgrSegmentInfo WrPwsSegmentInfo;
typedef struct wrPwsMsgRepeatInfo
{
   U8 wrngType;
   U32 wrngInfo;
   U32 cellCb;
   CmTimer repetitionTmr;
}WrPwsMsgRepeatInfo;



typedef struct wrPwsWrngMsgInfo
{
   CmLListCp segPduLst;

   U8 *wrngMsgPtr;
   U32 msgLen;
   U8 emergencyAreaType;

   U8 dataCodingScheme;

   U16 repetitionPeriod;

   S32 numBroadcastReq;

   Bool readyToSch;
   WrPwsMsgRepeatInfo repetitionInfo;
}WrPwsWrngMsgInfo;



typedef struct wrPwsPrimEtwsInfo
{
   U8 emergencyAreaType;

   U8 wrngSecurity[50];

   U16 warningType;

   U16 repetitionPeriod;

   S32 numBroadcastReq;

   Bool readyToSch;
   Bool wrngSecurityPres;
   WrPwsMsgRepeatInfo repetitionInfo;
   Buffer *pdu;
}WrPwsPrimEtwsInfo;





typedef struct wrEtwsPagInfo
{
   U16 pf;
   U8 po;
}WrEtwsPagInfo;



typedef enum wrWaringPagingType
{
   WR_START_PAG_PRI_ETWS = 0,
   WR_START_PAG_SEC_ETWS,
   WR_START_PAG_ETWS,
   WR_STOP_PAG_ETWS,
   WR_MAX_WARING_PAG
}WrWaringPagingType;



typedef struct wrPwsEtwsInfo
{
   U8 notificationType;

   U16 wrngMsgId;
   U16 wrngSerialNum;

   WrPwsPrimEtwsInfo primEtwsInfo;
   WrPwsWrngMsgInfo secEtwsInfo;

   WrEtwsPagInfo waringPagingInfo[WR_MAX_WARING_PAG];
}WrPwsEtwsInfo;




typedef struct wrPwsCmasInfo
{
   CmLList cmasLstLnk;
   U32 wrngMsgId;
   U32 wrngSerialNum;

   Bool waitToStop;
   WrPwsWrngMsgInfo wrngMsgInfo;

   U16 numberOfBroadcasts;

}WrPwsCmasInfo;



typedef struct wrPwsSIBldInfo
{
   WrPwsCmasInfo *crntCmas;
   U8 segNum;
   Bool isLastSeg;
   U16 segLen;
   Buffer *segment;
}WrPwsSIBldInfo;




typedef struct wrPwsTransientInfo
{
   Bool validCell[12];
   Bool broadCastCompletedIePres;
   Bool isDuplicate;
   Bool isEtwsPresent;
   Bool validSecEtws;
   U8 wrngType;
   U16 cellIdx;
   U8 wrngToProcess;
   U16 wrngSibType;
   U16 wrngSiIdx;
   U16 cfgType;
}WrPwsTranientInfo;




typedef struct wrPwsWarningInfo
{
   WrPwsEtwsInfo etwsInfo;
   CmLListCp cmasLst;

   WrPwsSIBldInfo siBldInfo;
   WrPwsCmasInfo *currentCmas;
   Bool isPrimEtwsInProgress;
   Bool isSecEtwsInProgress;
   Bool isCmasInProgress;
   U8 rcvdWrngType;
   U8 sib10SiIdx;
   U8 sib11SiIdx;
   U8 sib12SiIdx;
   Bool tmrRunningForLastCmas;
}WrPwsWarningInfo;



typedef struct wrPwsParsedWrngInfo
{
   U16 repetitionPeriod;
   U32 numBrdcstReq;
   U32 msgId;
   U32 serialNum;
   U8 notificationType;
   U8 *msg;
   U32 msgLen;
   U8 emergencyAreaType;
   U8 dataCodingScheme;
   U8 wrngSecurity[50];
   U16 warningType;
   Bool warnMsgContentsIePres;
   Bool dataCodingSchemeIePres;
   Bool extRepetitionPeriodPres;
   Bool concrntMsgInd;
   U32 extRepetitionPeriod;
}WrPwsParsedWrngInfo;





typedef struct wrActCfgEaid
{
        Bool isWarningMsgBroadcastInit;
        Bool isKillInit;
        U32 eaid;
}WrActCfgEaid;




typedef struct wrCfgSIB10Info
{
        U16 sib10ManPerdUsage;
        U16 sib10NumOfBroadcasts;
        U16 sib10RepetitionPeriod;
}WrCfgSIB10Info;
typedef enum wrEmergergencyAreaType
{

   WR_PWS_EATYPE_CELLID ,
   WR_PWS_EATYPE_TAI ,
   WR_PWS_EATYPE_EAI ,
   WR_PWS_EATYPE_NONE
} WrEmergergencyAreaType;





typedef enum wrNotificationType
{
   WR_PWS_PRI_NOTIFICATION = 1,
   WR_PWS_SEC_NOTIFICATION,
   WR_PWS_BOTH_NOTIFICATIONS,
   WR_PWS_CMAS_NOTIFICATION
} WrNotificationType;





extern S16 wrEmmPwsProcWarningReq(U32 peerId, S1apPdu *warningReqPdu);

extern S16 wrEmmPwsProcKillReq(U32 peerId, S1apPdu *killReqPdu);

extern S16 wrPwsHndlSchdCfgCfm
(
   WrCellId cellId,
   U32 transId
);

extern S16 wrPwsHndlSchdCfgFail
(
   WrCellId cellId,
   U32 transId
);

extern S16 wrPwsHndlStopWrngSiCfgCfm
(
   WrCellId cellId,
   U32 transId
);



extern S16 wrPwsPrntPdu
(
  CmLListCp *pduLst
);

extern S16 wrPwsCpySegLst
(
  RgrWarningSiCfgReqInfo *cfgReq,
  CmLListCp *pduLstSrc
);

extern WrPwsCmasInfo* wrPwsGetNextNode
(
  CmLListCp *cmasLst,
  WrPwsCmasInfo *cmasInfo
);


extern S16 wrEmmPwsProcRepTimerExp
(
Void *cb,
U8 wrUmmTmrExpEvnt
);

extern S16 wrEmmupdatePwsConfig
(
U8 newpwsEtwsCmasval,
U8 oldpwsEtwsCmasval
);
typedef Bool WrBrdCstInfo;





typedef enum {
    WR_N_EQUIP = 0,
    WR_EQUIP
} WrConfStatus;




typedef enum wrLstNrType
{
    WR_ANR_LST_INTRA_FREQ = 0,
    WR_ANR_LST_INTER_FREQ,
    WR_ANR_LST_CDMA_2K_1xRTT,
    WR_ANR_LST_CDMA_2K_HRPD
}WrLstNrType;




typedef enum wrAnrCntrType{
    WR_ANR_HO_FAILURE = 0,
    WR_ANR_HO_ATTEMPT,
    WR_ANR_HO_SUCCESS,
    WR_ANR_HO_WRONG_CELL,
    WR_ANR_MMM_MR_STRG_CELL,
    WR_ANR_MMM_MR_HO,
    WR_ANR_MMM_MR_STRG_CELL_SON,
    WR_ANR_MMM_MR_CS_FB,
    WR_ANR_MMM_MR_PS_HO,
    WR_ANR_MMM_MR_RPRT_CGI_LTE,
    WR_ANR_MMM_MR_RPRT_CGI_HRPD
}WrAnrCntrType;





typedef enum wrEmmNrType
{
    WR_EMM_ANR_EUTRAN,
    WR_EMM_ANR_CDMA_2K_1xRTT,
    WR_EMM_ANR_CDMA_2K_HRPD,
    WR_EMM_ANR_UTRA_FDD,
    WR_EMM_ANR_UTRA_TDD,
    WR_EMM_ANR_GERAN
}WrEmmNrType;





typedef enum wrNrChgType
{
   WR_ANR_WL_TO_BL = 1,
   WR_ANR_BL_TO_WL
}WrNrChgType;







typedef enum wrAnrNrUpdtType
{
   WR_EMM_ANR_ADD_NR,
   WR_EMM_ANR_DEL_NR
}WrAnrNrUpdtType;



typedef enum wrSpdStSclFctr
{
   WR_EMM_ANR_O_DOT_25,
   WR_EMM_ANR_O_DOT_5,
   WR_EMM_ANR_O_DOT_75,
   WR_EMM_ANR_1_DOT_0
} WrSpdStSclFctr;






typedef struct wrPhysCellIdRange
{
    U16 startPhyCellID;
    Bool phyCellIdRangePres;

    U8 phyCellIdRange;
    WrAnrNrUpdtType nrUpdtType;

} WrPhysCellIdRange;



typedef struct wrNeighCellInfo
{
    U16 phyCellId;
    U32 qoffset;
    U32 cio;
    WrAnrNrUpdtType nrUpdtType;


} WrNeighCellInfo;





typedef struct wrNrPerFreqWlInfo
{
    U8 numWlCells;
    WrNeighCellInfo cellInfo[64];

}WrNrPerFreqWlInfo;




typedef struct wrNrPerFreqBlInfo
{
    U8 numBlInfos;
    WrPhysCellIdRange blInfo[64];

} WrNrPerFreqBlInfo;






typedef struct wrNrIntraFrqInfo
{
    WrNrPerFreqWlInfo wlData;
    WrNrPerFreqBlInfo blData;
}WrNrIntraFreqInfo;




typedef struct wrNrPerFreqInfo
{
   U16 dlCarrierFreq;
   WrNrPerFreqWlInfo wlData;
   WrNrPerFreqBlInfo blData;
}WrNrPerFreqInfo;





typedef struct wrNrInterFreqInfo
{
    U8 numFreq;
    WrNrPerFreqInfo freqList[32];


} WrNrInterFreqInfo;







typedef struct wrCDMA2KPciInfo
{
    U16 pnOffset;
    WrAnrNrUpdtType nrUpdtType;

}WrCDMA2KPciInfo;

typedef struct wrNrCDMA2KPerFreqInfo
{
   U8 numWlCells;
   WrCDMA2KPciInfo pciInfoLst[40];
}WrNrCDMA2KPerFreqInfo;


typedef struct wrCDMA2KFreqInfo
{
    U16 arfcn;
    WrNrCDMA2KPerFreqInfo wlData;
} WrCDMA2KFreqInfo;



typedef struct wrCDMA2KBandInfo
{
    U8 bandClass;
    U8 numFreq;

    WrCDMA2KFreqInfo neighFreqInfo[16];

} WrCDMA2KBandInfo;



typedef struct wrCDMA2KNeighInfo
{
    U8 numBandClass;

    WrCDMA2KBandInfo neighBandLst[32];

} WrCDMA2KNeighInfo;



typedef struct wrUtraNeighCellInfo
{
    U16 psc;
    U32 qoffset;
    WrAnrNrUpdtType nrUpdtType;


} WrUtraNeighCellInfo;




typedef struct wrNrUtraPerFreqBlInfo
{
    U8 numWlCells;
    WrUtraNeighCellInfo cellInfo[64];

}WrNrUtraPerFreqBlInfo;




typedef struct wrNrUtraPerFreqWlInfo
{
    U8 numWlCells;
    WrUtraNeighCellInfo cellInfo[64];

}WrNrUtraPerFreqWlInfo;


typedef struct wrNrUtraPerFreqInfo
{
   U16 dlCarrierFreq;
   WrNrUtraPerFreqWlInfo wlData;
}WrNrUtraPerFreqInfo;

typedef struct wrNrUtraFreqInfo
{
   U8 numFreq;
   WrNrUtraPerFreqInfo freqList[32];

}WrNrUtraFreqInfo;





typedef union wrNrWlBlInfo
{
    WrNrIntraFreqInfo intra;
    WrNrInterFreqInfo inter;
    WrCDMA2KNeighInfo cdma1xRtt;
} WrNrWlBlInfo;




typedef struct wrNrUpdtInfo
{
    U8 freqTypeBitMap;


    WrNrInterFreqInfo eutran;
    WrCDMA2KNeighInfo cdma1xRtt;
    WrCDMA2KNeighInfo cdmaHrpd;
    WrNrUtraFreqInfo utran;
    WrNrUtraFreqInfo utranTdd;
    Bool skipSibsUpd;
    Bool skipMeasUpt;
} WrNrUpdtInfo;


typedef struct wrNrEutranFreqCb
{
   U16 earfcn;

   CmLListCp nrWlLst;
   CmLListCp nrBlLst;
   CmLList freqLstEnt;
}WrNrEutranFreqCb;

typedef struct wrNrUtranFreqCb
{
   U16 arfcn;
   CmLListCp nrWlLst;
   CmLListCp nrBlLst;
   CmLList freqLstEnt;
}WrNrUtranFreqCb;

typedef struct wrNrEutranCb
{
   WrNrEutranFreqCb intraFreqCb;
   CmLListCp interFreqList;
}WrNrEutranCb;

typedef struct wrNrUtranCb
{
   CmLListCp utranFreqList;
}WrNrUtranCb;
typedef struct wrNrCdmaFreqCb
{
   CmLListCp nrWlLst;
   CmLListCp nrBlLst;
   U16 arfcn;
   CmLList freqLstEnt;
}WrNrCdmaFreqCb;

typedef struct wrNrCdmaBandCb
{
   U8 bandClass;
   CmLListCp cdmaFreqList;
   CmLList bandLstEnt;
}WrNrCdmaBandCb;


typedef struct wrNrCdmaCb
{
   CmLListCp cdmaBandList;

}WrNrCdmaCb;



typedef struct wrNrGeranCb
{
   CmLListCp geranNrCellLst;
}WrNrGeranCb;



typedef struct wrCellNrCb
{
   U8 cellId;

   WrNrEutranCb eutranCb;
   WrNrCdmaCb cdma1xRttCb;
   WrNrCdmaCb cdmaHrpdCb;
   WrNrUtranCb utranCb;
   WrNrUtranCb utranTddCb;
   WrNrGeranCb geranCb;
   WrNrWlBlInfo *nrWlBlInfo;

   WrNrUpdtInfo *nrUpdtInfo;

   U8 maxRnkWght;
   U8 minRnkWght;
   U16 epochCnt;
   U64 epochTmrVal;
   U32 tricePeriodIntvCnt;
   CmTimer epochTmr;
   CmTimer triceTmr;
   U32 cellValidAgeTmrVal;
   CmTimer cellValidAgeTmr;
} WrCellNrCb;



typedef struct wrNewPci
{
   Bool pciExist;
   U16 pci;
} WrNewPci;

typedef struct wrCdmaFreqInfo
{
   U8 bandClass;
   U16 arfcn;
}WrCdmaFreqInfo;




typedef union wrNrInfo
{
   U16 earfcn;
   WrCdmaFreqInfo cdmaNrInfo;
}WrNrInfo;




typedef struct wrNewPciLst
{
   U8 numComp;
   U8 newPciCnt;

   WrEmmNrType nrType;

   WrNrInfo nrInfo;

   WrNewPci newPci[8];
} WrNewPciLst;




extern WrNrWlBlInfo* wrEmmAnrGetWhiteAndBlackList
(
    U8 cellId,
    WrLstNrType nrType,
    WrBrdCstInfo brInfo
);

extern Bool wrEmmAnrValidatePci
(
   U8 cellId,
   U16 pci,
   WrEmmNrType nrType,
   WrNrInfo *nrInfo,
   U8 *reportType,
   U8 isEvntAnr,
   U16 ueIdx
);

extern S16 wrEmmAnrValidatePciList
(
   U8 cellId,
   WrEmmNrType nrType,
   WrNewPciLst *pciList,
   U8 isEvntAnr,
   U16 ueIdx
);


extern S16 wrEmmAnrDeInit
(
   U8 cellId
);

extern S16 wrEmmAnrCellCfgReq
(
   U8 cellId,
   LwrCellAnrCfgGrp *anrCfgGrp
);

extern S16 wrEmmAnrCellReCfgReq
(
   U8 cellId
);





extern Void wrEmmAnrAlgoPrcPrdEutranNrOpt
(
   U8 cellId
);

extern Void wrEmmAnrAlgoPrcPrdInterRatNrOpt
(
   U8 cellId
);

extern S16 wrEmmAnrAddNrFreq
(
    U8 cellId,
    U8 numFreq,
    LwrNeighFreqAddModCfg *nbrFreqAdd
);

extern S16 wrEmmAnrDelNrFreq
(
    U8 cellId,
    U8 numFreq,
    LwrNeighFreqDelCfg *nbrFreqDel
);


extern U32 wrEmmAnrCheckEnbBL
(
   U8 cellId,
   U32 enbid
);

extern S16 wrEmmAnrProcessIntraFreqChg
(
   U8 cellId
);

extern S16 wrEmmAnrUpdtNrCellRank ( U16 cellId, U16 hoPci, U32 earfcnDl, Bool status )





        ;

typedef enum _wrEmmAbsEventEnum
{
   WR_EMM_ABS_CELL_INIT_EVENT,
   WR_EMM_ABS_ABS_UE_EVENT,
   WR_EMM_ABS_NONABS_UE_EVENT,
   WR_EMM_ABS_LOAD_INFO_RCVD_EVENT,
   WR_EMM_ABS_RSRC_STS_REQ_RCVD_EVENT,
   WR_EMM_ABS_RSRC_STS_RSP_RCVD_EVENT,
   WR_EMM_ABS_RSRC_STS_FLR_RCVD_EVENT,
   WR_EMM_ABS_RSRC_STS_UPD_RCVD_EVENT,
   WR_EMM_ABS_X2AP_UP_IND_EVENT,
   WR_EMM_ABS_X2AP_DOWN_IND_EVENT,
   WR_EMM_ABS_CELL_UP_IND_EVENT,
   WR_EMM_ABS_CELL_DOWN_IND_EVENT,
   WR_EMM_ABS_SCH_LOAD_IND_EVENT,
   WR_EMM_ABS_ENABLED_EVENT,
   WR_EMM_ABS_DISABLED_EVENT,
   WR_EMM_ABS_UE_REL_IND_EVENT,
   WR_EMM_ABS_TIMER_EVENT,
   WR_EMM_ABS_ERROR_IND_EVENT,

   WR_EMM_ABS_MAX_EVENT
} WrEmmAbsEventEnum;



typedef enum _wrEmmAbsState
{
   WR_EMM_ABS_DISABLED_STATE,
   WR_EMM_ABS_ENABLED_STATE,

   WR_EMM_ABS_MAX_STATE
} WrEmmAbsState;



typedef enum _wrEmmAbsNegType
{
   WR_EMM_ABS_STATIC_NEG_TYPE,
   WR_EMM_ABS_DYNAMIC_NEG_TYPE,

   WR_EMM_ABS_MAX_NEG_TYPE
} WrEmmAbsNegType;





typedef enum _wrEnumAbsPatternSelectFlrCause
{
   WR_EMM_ABS_DUP_PATTERN,
   WR_EMM_ABS_NO_PATTERN,
   WR_EMM_ABS_NULL_PATTERN
} WrEnumAbsPatternSelectFlrCause;

typedef struct _wrEmmAbsEnbId
{
   U32 val;
} WrEmmAbsEnbId;

typedef struct _wrEmmAbsCellId
{
   U32 cId;
   WrPlmnId plmnId;
} WrEmmAbsCellId;

typedef struct _wrEmmAbsCellInfo
{
   WrEmmAbsCellId cellId;
   WrEmmAbsEnbId enbId;
} WrEmmAbsCellInfo;

typedef struct _wrEmmAbsCellInfoLstItem
{
   CmLList lnk;
   WrEmmAbsCellInfo cellInfo;
} WrEmmAbsCellInfoLstItem;






typedef struct _wrEmmAbsCellEvent
{
   U32 cellId;
} WrEmmAbsCellEvent;



typedef struct _wrEmmAbsX2apEvent
{
   U32 peerId;
   CztEvnt *pdu;
} WrEmmAbsX2apEvent;



typedef struct _wrEmmAbsSchEvent
{
   RgrLoadInfIndInfo *schLoadInfo;
} WrEmmAbsSchEvent;



typedef struct _wrEmmAbsUeInfo
{
   U32 ueId;
   U32 cellId;
   U8 numOfCell;
   WrEmmAbsCellInfo cellInfo[8];
} WrEmmAbsUeInfo;



typedef struct _wrEmmAbsUeRelInfo
{
   U32 ueId;
} WrEmmAbsUeRelInfo;



typedef struct _wrEmmAbsCfgEvent
{
   CmLteCellId cellId;
   LwrLteAdvancedConfigTrans *lteAdvTrans;
} WrEmmAbsCfgEvent;



typedef struct _wrEmmAbsErrorIndEvent
{
   U32 event;
   U32 cb;
} WrEmmAbsErrorIndEvent;



typedef struct _wrEmmAbsTimerExpiryEvent
{
   U32 event;
   U32 cb;
} WrEmmAbsTimerExpiryEvent;




typedef struct _wrEmmAbsEvent
{
   WrEmmAbsEventEnum eventId;
   union
   {
      WrEmmAbsCellEvent cellEvent;
      WrEmmAbsX2apEvent x2apEvent;
      WrEmmAbsSchEvent schLoadInfoEvent;
      WrEmmAbsUeInfo absUeEvent;
      WrEmmAbsUeRelInfo ueRelEvent;
      WrEmmAbsCfgEvent absCfgEvent;
      WrEmmAbsErrorIndEvent errIndEvent;
      WrEmmAbsTimerExpiryEvent timerEvent;
   } u;
} WrEmmAbsEvent;





typedef struct _wrEmmLteAdvAbsAggrPeerEnbInfo
{
   CmLListCp absPeerEnbLstCp;
} WrEmmLteAdvAbsAggrPeerEnbInfo;

typedef struct _wrEmmAbsAggrPeerEnbCb
{
   CmLList lnk;
   WrEmmAbsEnbId enbId;
   U32 enb1MeasId;
   U32 enb2MeasId;
   CmLListCp absPeerCellLstCp;
} WrEmmAbsAggrPeerEnbCb;

typedef struct _wrEmmAbsAggrPeerCellCb
{
   CmLList lnk;
   WrEmmAbsCellId cellId;
   U8 usablePatternId;
   U8 absPercentageRsrcUsed;
} WrEmmAbsAggrPeerCellCb;

typedef struct _wrEmmAbsAggrPatternCfg
{
    U8 absPattern[5];
    U8 absPercentage;
    U32 absWeightage;
} WrEmmAbsAggrPatternCfg;

typedef struct _wrEmmAbsAggrPatternCfgTable
{
    U8 absPatternCount;
    WrEmmAbsAggrPatternCfg absPatternCfg[25];
} WrEmmAbsAggrPatternCfgTable;

typedef struct _wrEmmLteAdvAbsAggrCellInfo
{
   WrEmmAbsAggrPatternCfgTable absPatternCfgTable;
   U8 absMinRsrc;
   U8 absMaxRsrc;
   U8 absPatternId;
   U8 absTotalRsrcAvail;
   U8 absRprtPeriodCount;
} WrEmmLteAdvAbsAggrCellInfo;





typedef struct _wrEmmLteAdvAbsVctmPeerEnbInfo
{
   CmLListCp absPeerEnbLstCp;
   CmLListCp absPatternLstCp;
} WrEmmLteAdvAbsVctmPeerEnbInfo;


typedef struct _wrEmmAbsVctmPeerEnbCb
{
   CmLList lnk;
   WrEmmAbsEnbId enbId;
   U32 enb1MeasId;
   U32 enb2MeasId;
   U16 rprtPeriodicity;
   U8 absRprtStatus;
   U16 absRprtPeriodCount;
   CmLListCp absPeerCellLstCp;
   CmTimer tmr;
} WrEmmAbsVctmPeerEnbCb;

typedef struct _wrEmmAbsVctmPatternCb
{
   CmLList lnk;
   U8 absPattern[5];
   U8 absPercentage;
   U32 absWeightage;
   CmLListCp absCellLstCp;
} WrEmmAbsVctmPatternCb;

typedef struct _wrEmmAbsVctmPeerCellCb
{
   CmLList enbLnk;
   CmLList absPatternLnk;
   WrEmmAbsCellId cellId;
   U8 noCSAntPorts;
   U8 measSubset[5];
   U32 cellWeightage;
   WrEmmAbsVctmPatternCb *absPatternCb;
} WrEmmAbsVctmPeerCellCb;

typedef struct _wrEmmLteAdvAbsVctmCellInfo
{
   U8 absPercentage;
   U8 absPercentageRsrcUsed;
} WrEmmLteAdvAbsVctmCellInfo;





typedef struct _wrEmmLteAdvAbsPeerEnbInfo
{
   union
   {
      WrEmmLteAdvAbsAggrPeerEnbInfo aggrInfo;
      WrEmmLteAdvAbsVctmPeerEnbInfo vctmInfo;
   } u;
} WrEmmLteAdvAbsPeerEnbInfo;

typedef struct _wrEmmLteAdvAbsCellInfo
{
   U8 absPattern[5];
   U8 isAbsEnabled;
   union
   {
      WrEmmLteAdvAbsAggrCellInfo aggrInfo;
      WrEmmLteAdvAbsVctmCellInfo vctmInfo;
   } u;
} WrEmmLteAdvAbsCellInfo;


typedef struct _wrEmmAbsInfo
{
   WrEmmAbsState state;
   WrEmmAbsNegType negType;
   WrEmmLteAdvAbsPeerEnbInfo peerInfo;
} WrEmmAbsInfo;





extern S16 wrEmmAbsProcessEvent (WrEmmAbsEvent *evnt);
typedef struct _wrEmmLteAdvCellCb
{
   LwrLteAdvancedConfig lteAdvCfg;

   WrEmmLteAdvAbsCellInfo absInfo;

} WrEmmLteAdvCellCb;

typedef struct _wrEmmLteAdvCb
{
   U32 enbType;

   WrEmmAbsInfo absInfo;

} WrEmmLteAdvCb;




extern S16 wrEmmHdlLteAdvReCfg (CmLteCellId cellId,
                                LwrLteAdvancedConfigTrans *lteAdvancedTrans,
                                Bool *trgSib4);
extern S16 wrEmmHdlLteAdvCfg (U32 cellId,
                              LwrLteAdvancedConfigTrans *lteAdvancedTrans);
extern S16 wrEmmLteAdvUpdCellSpfcOffset (U32 cellId,
                                         RgrFeature feature,
                                         RgrFeatureStatus status);
extern S16 wrEmmSchdLoadInfInd (RgrLoadInfIndInfo *loadInfInd);
extern S16 wrEmmLteAdvPrcLoadInfo (U32 peerId, CztEvnt *pdu);
extern S16 wrEmmLteAdvPrcTmrExpiry(U32 cb, U32 event);

typedef enum wrRimAppId
{
   WR_RIM_APP_RESVD = 0,
   WR_RIM_APP_NACC,
   WR_RIM_APP_SI3,
   WR_RIM_APP_MBMS,
   WR_RIM_APP_SON_TRFR,
   WR_RIM_APP_UTRA_SI,
   WR_RIM_APP_MAX
} WrRimAppId;




typedef enum wrRimAckInd
{
   WR_RIM_NO_ACK_REQD = 0,
   WR_RIM_ACK_REQD
} WrRimAckInd;




typedef enum wrRimProtVer
{
   WR_RIM_PROT_RESVD_VER = 0,
   WR_RIM_PROT_VER1
} WrRimProtVer;



typedef enum wrRimSiType
{
   WR_RIM_SI = 0,
   WR_RIM_PSI
} WrRimSiType;




typedef enum wrRimRirPduExt
{
   WR_RIM_RIR_STOP = 0,
   WR_RIM_RIR_SINGLE,
   WR_RIM_RIR_MULTI,
   WR_RIM_RIR_RESVD
} WrRimRirPduExt;




typedef enum wrRimRiPduExt
{
   WR_RIM_RI_STOP = 0,
   WR_RIM_RI_SINGLE,
   WR_RIM_RI_INIT_MULTI,
   WR_RIM_RI_MULTI,
   WR_RIM_RI_END,
   WR_RIM_RI_RESVD
} WrRimRiPduExt;



typedef enum wrRimNaccCause
{
   WR_RIM_NACC_OTHRUNSPEC = 0,
   WR_RIM_NACC_SYNTAC_ERR,

   WR_RIM_NACC_CELL_ID_NOT_MATCH,



   WR_RIM_NACC_SI_PSI_TYP_ERR,
   WR_RIM_NACC_INCONSISTENT_SI_PSI_LEN,

   WR_RIM_NACC_INCONSISTENT_MSG,
   WR_RIM_NACC_RESVD_CAUSE
} WrRimNaccCause;



typedef enum wrRimSi3Cause
{
   WR_RIM_SI3_OTHRUNSPEC = 0,
   WR_RIM_SI3_SYNTAC_ERR,

   WR_RIM_SI3_CELL_ID_NOT_MATCH,



   WR_RIM_SI3_INCONSISTENT_MSG,
   WR_RIM_SI3_RESVD_CAUSE
} WrRimSi3Cause;



typedef enum wrRimUtraSiCause
{
   WR_RIM_UTRA_SI_UNSPEC = 0,
   WR_RIM_UTRA_SI_SYNTAC_ERR,

   WR_RIM_UTRA_SI_INCONSISTENT_CELL_ID,

   WR_RIM_UTRA_SI_RESVD_CAUSE
} WrRimUtraSiCause;



typedef enum wrRimCause
{
   WR_RIM_SEMANT_ERR = 0x20,
   WR_RIM_INVLD_MNDTRY_IE,
   WR_RIM_MSING_MNDTRY_IE,
   WR_RIM_MSING_COND_IE,
   WR_RIM_UNEXPCD_COND_IE,
   WR_RIM_COND_IE_ERR,
   WR_RIM_PROT_ERR_UNSPEC = 0x27,
   WR_RIM_PDU_NOT_COMPTBL = 0x28,

   WR_RIM_UNKNOWN_RIM_APP = 0x2b

} WrRimCause;

typedef enum wrRimRoutDisc
{
   WR_RIM_GERAN_ROUT_DISC = 0x00,
   WR_RIM_UTRA_ROUT_DISC,
   WR_RIM_EUTRA_ROUT_DISC
} WrRimRoutDisc;
typedef struct wrEnbIdentifier
{
   U8 enbType;
   U32 enbId;
   U16 tac;
   WrPlmnId plmnId;
}WrEnbIdentifier;







typedef struct wrRncIdentifier
{
   U16 lac;
   U16 rncId;
   WrPlmnId plmnId;
   U8 rac;
} WrRncIdentifier;







typedef struct wrGeranCellId
{
   U16 ci;
   U16 lac;
   U8 rac;
   WrPlmnId plmnId;
}WrGeranCellId;






typedef struct wrEutraCgi
{
   U32 eutranCellId;
   WrPlmnId plmnId;
}WrEutraCgi;






typedef struct wrUtraCellId
{
   U16 cId;
   U16 rncId;
   WrPlmnId plmnId;
}WrUtraCellId;







typedef struct wrRimRoutingInfo
{
   U8 ratChoice;
   union
   {
      WrEnbIdentifier eutraIdentity;
      WrRncIdentifier rncIdentity;
      WrGeranCellId geranCellId;
   }t;
}WrRimRoutingInfo;
typedef struct wrRimCfg
{
   U32 tmrRirVal;
   U32 tmrRiVal;
   U32 tmrRiaeVal;
   U32 maxRetryCnt;
   WrRimRoutingInfo selfAddr;
   S16 (*rimStartTmr)(U32 cb, S16 tmrEvnt, U32 delay);

   Void (*rimStopTmr)(U32 cb, S16 tmrEvnt);

}WrRimCfg;
typedef struct wrRimRptCell
{
   U8 ratChoice;
   union
   {
      WrEutraCgi eutranCell;
      WrUtraCellId utraCell;
      WrGeranCellId geranCell;
   }t;
}WrRimRptCell;






typedef struct wrRimRirDecInfo
{
   WrRimRirPduExt reptType;
   TknStrOSXL appCont;



} WrRimRirDecInfo;






typedef struct wrRimNacc
{
   U8 noOfSi;
   WrRimSiType siType;
   TknStrOSXL si;
} WrRimNacc;
typedef struct wrRimReqInfo
{
   WrRimAppId appId;
   WrRimRirPduExt reptType;
   WrRimRptCell rptCellId;
   WrRimRoutingInfo dstAddr;
   WrRimRoutingInfo srcAddr;
}WrRimReqInfo;
typedef struct wrRimRiDecInfo
{
   TknU8 appErrCause;

   WrRimRiPduExt rptType;
   union
   {
      TknStrOSXL utraSI;
      WrRimNacc nacc;



   } app;
   TknStrOSXL appCont;




} WrRimRiDecInfo;




typedef struct wrRimRiAckDecInfo
{
   U8 pduType;
}WrRimRiAckDecInfo;





typedef struct wrRimRiAppErrDecInfo
{
   U8 cause;
   WrRimAppId appId;
} WrRimRiAppErrDecInfo;




typedef struct wrRimRiErrDecInfo
{
   WrRimCause rimErrCause;
} WrRimRiErrDecInfo;
typedef struct wrRimDecRspInfo
{
   Bool isDecSucc;
   Bool isAckRequested;

   U8 rimPduType;
   WrRimAppId appId;
   union
   {
      WrRimRirDecInfo rirDecInfo;
      WrRimRiDecInfo riDecInfo;
      WrRimRiAckDecInfo riaDecInfo;





      WrRimRiErrDecInfo riErrDecInfo;
   } pdu;
   Buffer *rimErrPdu;

   Buffer *rimAckPdu;

   WrRimRoutingInfo dstAddr;
   WrRimRoutingInfo srcAddr;
   WrRimRptCell rptCellId;
} WrRimDecRspInfo;
typedef struct wrRimToAction
{
  Bool isMaxRtxReached;

  Buffer *rtxPdu;

  WrRimAppId appId;
  WrRimRptCell rptCellId;
  WrRimRoutingInfo dstAddr;

} WrRimToAction;






typedef struct wrRimTimeOut
{
  S16 event;
  U32 cb;
} WrRimTimeOut;
typedef struct wrRimAppErr
{
   U8 cause;

   WrRimAppId appId;
   WrRimRoutingInfo dstAddr;
   WrRimRoutingInfo srcAddr;
   WrRimRptCell rptCellId;
   TknStrOSXL appCont;



}WrRimAppErr;







typedef struct wrRimAssocHashKey
{
  WrRimAppId appId;
  WrRimRoutingInfo dstAddr;
  WrRimRoutingInfo srcAddr;

} WrRimAssocHashKey;
typedef struct _wrRimDstCellInfo
{
   Bool isPres;
   U8 cellIdx;
   U8 rtxCount;
   U8 reptType;
   U8 state;
   Buffer *rtxPdu;
   WrRimRptCell rptCellId;
   U32 lastSentRsn;
   U32 lastRcvdRsn;
   U32 assocCbPtr;
   CmTimer timer;
} WrRimDstCellInfo;
typedef struct wrRimAssocCb
{
   CmHashListEnt hlEnt;
   WrRimAssocHashKey hashKey;
   U32 nextSndRsn;
   WrRimDstCellInfo cellLst[3];
} WrRimAssocCb;






typedef struct wrRimPduInd
{
   Bool pres;
   Bool isAckRequested;
   U8 pduTypExt;
} WrRimPduInd;






typedef struct wrRimRirAppCont
{
   Bool pres;
   WrRimRptCell rptCellId;
   TknStrOSXL appContIe;
} WrRimRirAppCont;
typedef struct wrRimRiAppCont
{
   Bool pres;
   WrRimRptCell rptCellId;
   union
   {
      TknStrOSXL utraSI;
      WrRimNacc nacc;



   }app;
   TknStrOSXL appContIe;
} WrRimRiAppCont;





typedef struct wrRimAppErrCnt
{
  TknStrOSXL appCntIe;
  U8 appCause;
} WrRimAppErrCnt;
typedef struct wrRimEncDecCb
{
   U8 pduType;
   TknU8 appId;
   TknU8 version;
   TknU8 decFailCause;
   TknU8 rimCause;
   TknU32 rsn;
   WrRimPduInd pduInd;
   WrRimRirAppCont rirAppCont;
   WrRimRiAppCont riAppCont;
   TknStrOSXL pduInErr;
   TknStrOSXL sonAppId;
   WrRimAppErrCnt appErrCnt;
   WrRimRoutingInfo srcAddr;
   WrRimRoutingInfo dstAddr;
} WrRimEncDecCb;
typedef struct wrRimCb
{
   CmHashListCp assocCbHL;
   U32 assocCount;
   U32 rirTmrVal;
   U32 riTmrVal;
   U32 riaeTmrVal;
   U32 maxRetryCnt;

   WrRimRoutingInfo selfAddr;
   S16 (*rimStartTmr)(U32 cb, S16 tmrEvnt, U32 delay);

   Void (*rimStopTmr)(U32 cb, S16 tmrEvnt);

} WrRimCb;


extern S16 wrRimCfgReq(WrRimCfg *cfg);
extern S16 wrRimRirProcReq(WrRimReqInfo *rimReqInfo, Buffer **rirPdu);
extern S16 wrRimTimoutHdl(WrRimTimeOut *rimTO, WrRimToAction *timeOutAction);
extern S16 wrRimShutdown(Void);
extern S16 wrRimPrcRcvdPdu(TknStrOSXL *rimPdu, WrRimDecRspInfo *rimInfo );
extern S16 wrRimRiErrReq(WrRimAppErr *appErrInfo, Buffer **riPdu);
extern S16 wrRimRiaeProcReq (WrRimAppErr *appErrInfo, Buffer **riaePdu);
extern S16 wrRimEncPdu(WrRimEncDecCb *rimEncCb, Buffer *rimPdu);
extern S16 wrRimDecPdu(TknStrOSXL *rimPdu, WrRimEncDecCb *rimDecCb);
extern S16 wrRimAbortRirProc(Bool abortAll, WrRimReqInfo *rimReqInfo);
typedef struct wrRimErrInd
{
  WrRimAppId appId;
  U8 errType;

  U8 errCause;

  WrRimRptCell rptCellId;
}WrRimErrInd;
typedef struct wrEmmRimRspInfo
{
   U8 rptType;
   WrRimAppId appId;
   union
   {
     TknStrOSXL utraSI;
     WrRimNacc nacc;



   } app;
   WrRimRptCell rptCellId;
   TknU8 appErrCause;

} WrEmmRimRspInfo;


extern S16 wrEmmRimCfgReq (WrRimCfg *rimCfg);
extern S16 wrEmmRimInfoReq( WrRimReqInfo *rimReqInfo);
extern S16 wrEmmRimMmeDownHdlr(Void);
extern S16 wrEmmRimShutdown(Void);
extern S16 wrEmmRimPrcTmrExp(U32 cb,S16 event);


extern S16 wrEmmPrcMmeDirectInfoTransfer(U32 peerId, S1apPdu *pdu);
extern S16 wrEmmBldEnbDirectInfoTransfer(S1apPdu **pdu, Buffer *rimPdu,WrRimRoutingInfo *dstAddr);
extern S16 wrEmmRimPrcRimPdu(TknStrOSXL *rimPdu);
typedef struct wrSibCfg
{
   U8 period;
   U8 sibId;
} WrSibCfg;

typedef struct wrGuGrpIdLst
{

   Bool isValid;
   U8 refCnt;

   U16 mmeGrpId;

   WrPlmnId plmnId;

} WrGuGrpIdLst;

typedef enum wrPhichDuration {
   WrPhichNormal,
   WrPhichExtended
} WrPhichDuration;

typedef enum wrPhichGrps
{
   WrPhichOneSixth,
   WrPhichHalf,
   WrPhichOne,
   WrPhichTwice
} WrPhichGrps;



typedef enum wrEutranBw
{
   WR_EUTRAN_BW_6 = 0,
   WR_EUTRAN_BW_15,
   WR_EUTRAN_BW_25,
   WR_EUTRAN_BW_50,
   WR_EUTRAN_BW_75,
   WR_EUTRAN_BW_100
}WrEutranBw;



typedef enum wrCdmaType{

   WR_1XRTT,
   WR_HRPD
}WrCdmaType;



typedef enum WrQoffRange
{
   WR_OFFSET_DB_MINUS_24 = 0,
   WR_OFFSET_DB_MINUS_22,
   WR_OFFSET_DB_MINUS_20,
   WR_OFFSET_DB_MINUS_18,
   WR_OFFSET_DB_MINUS_16,
   WR_OFFSET_DB_MINUS_14,
   WR_OFFSET_DB_MINUS_12,
   WR_OFFSET_DB_MINUS_10,
   WR_OFFSET_DB_MINUS_8,
   WR_OFFSET_DB_MINUS_6,
   WR_OFFSET_DB_MINUS_4,
   WR_OFFSET_DB_MINUS_2,
   WR_OFFSET_DB_ZERO_0,
   WR_OFFSET_DB_PLUS_1,
   WR_OFFSET_DB_PLUS_2,
   WR_OFFSET_DB_PLUS_3,
   WR_OFFSET_DB_PLUS_4,
   WR_OFFSET_DB_PLUS_5,
   WR_OFFSET_DB_PLUS_6,
   WR_OFFSET_DB_PLUS_8,
   WR_OFFSET_DB_PLUS_10,
   WR_OFFSET_DB_PLUS_12,
   WR_OFFSET_DB_PLUS_14,
   WR_OFFSET_DB_PLUS_16,
   WR_OFFSET_DB_PLUS_18,
   WR_OFFSET_DB_PLUS_20,
   WR_OFFSET_DB_PLUS_21,
   WR_OFFSET_DB_PLUS_24
}WrQoffRange;





typedef enum wrTransType{
   WR_MIB_TRANS_ID = 10,
   WR_SIB1_TRANS_ID,
   WR_SIB1_PRI_ETWS_TRANS_ID,
   WR_SIB1_SEC_ETWS_TRANS_ID,
   WR_SIB1_BOTH_ETWS_TRANS_ID,
   WR_SIB1_CMAS_TRANS_ID,
   WR_SIB1_KILL_TRANS_ID,
   WR_SIB8_TRANS_ID
}WrTransType;



typedef enum wrSiIndex{
   WR_PBM_SIB10_SI_INDEX = 10,
   WR_PBM_SIB11_SI_INDEX,
   WR_PBM_SIB12_SI_INDEX
}WrSiIndex;
typedef struct wrSISchdInfo
{
   U16 period;
   U8 numSibs;
   U8 sibs[16];
} WrSISchdInfo;

typedef struct wrMibParams
{
   WrCellBw dlBw;
   WrPhichDuration phichDur;
   WrPhichGrps phichGrps;
} WrMibParams;
typedef struct wrPlmnInfo
{
   WrPlmnId plmnId;
   U8 resvForOperUse;
   WrRatPriorityList plmnRatPriority;
   U8 isRedirSupport;
} WrPlmnInfo;



typedef struct wrSib1Plmn
{
   WrPlmnId plmnId;
   Bool resvForOperUse;
   Bool activated;
} WrSib1Plmn;




typedef struct wrSib1TddCfg
{
   U8 subframeCfg;
   U8 specialSubframeCfg;
}WrSib1TddCfg;
typedef struct wrSib1Params
{
   U8 modified;

   U8 numPlmnIds;
   WrSib1Plmn plmns[6];

   U16 tac;
   U32 cellIdentity;
   U8 cellBarred;
   U8 intraFreqReselection;
   Bool csgInd;
   TknU32 csgId;
   S8 qRxLevMin;
   U8 qRxLevMinOffsetPres;
   S8 qRxLevMinOffset;
   S8 pMax;
   U8 freqBandIndicator;
   U8 numSis;
   WrSISchdInfo siSchdInfo[13];
   U8 siWindowLen;
   U8 valueTag;
   WrSib1TddCfg tddCfg;
} WrSib1Params;






typedef struct wrEmmSuppTAs{
   U16 tac;
   U8 numPlmnIds;
   WrPlmnId plmns[6];
}WrEmmSuppTAs;





typedef struct wrEmmS1SetpSuppTAs{
   U16 numTAs;
   WrEmmSuppTAs taInfo[5];
}WrEmmS1SetpSuppTAs;
typedef U8 WrCyclicPrefix;
typedef struct wrSib2AcBarringCfg
{
   U8 pres;
   U8 acBarringFactor;
   U8 acBarringTime;
   U8 acBarringForSpecialAC;
   U8 lwrCfgAcbFactor;
   U8 lwrCfgAcbTime;
   Bool isRrmCfgPres;
} WrSib2AcBarringCfg;
typedef struct wrSib2RachCfg
{
   U8 noRaPreambles;
   U8 noGrpAPreambles;
   U8 grpAMsgSize;
   U8 grpBPwrOffset;
   U8 pwrRampStep;
   U8 prmbInitRcvdTrgtPwr;
   U8 maxPrmbTrans;
   U8 raWindowSize;
   U8 contResTimer;
   U8 maxMsg3HarqTrans;
} WrSib2RachCfg;





typedef struct wrSib2BcchCfg
{
   U8 modifPeriodCoeff;
} WrSib2BcchCfg;





typedef struct wrSib2PcchCfg
{
   U8 defaultPagingCycle;
   U8 nB;
} WrSib2PcchCfg;
typedef struct wrSib2PrachCfg
{
   U16 rootSeqIdx;
   U8 prachCfgIdx;
   U8 highSpeedFlag;
   U8 zeroCorrZone;
   U8 prachFreqOffset;
} WrSib2PrachCfg;





typedef struct wrSib2PdschCfg
{
   S8 refSigPower;
   U8 pB;
} WrSib2PdschCfg;
typedef struct wrSib2PuschCfg
{
   U8 nSB;
   U8 hoppingMode;
   U8 hoppingOffset;
   U8 qam64Enabled;
   U8 grpHoppingEnabled;
   U8 grpAssignPusch;
   U8 seqHoppingEnabled;
   U8 cyclicShift;
   U8 puschSubBndStrt;
   U8 puschNoSubbnds;
   U8 puschSubBandSz;
   U8 puschSubBandDmrs;
} WrSib2PuschCfg;







typedef struct wrSib2PucchCfg
{
   U8 deltaPucchShift;
   U8 nRBCqi;
   U8 nCSAN;
   U16 n1PucchAn;
} WrSib2PucchCfg;
typedef struct wrSib2SrsCfg
{
   U8 release;
   U8 srsBandwidthCfg;
   U8 srsSubfrmCfg;
   U8 ackNackSrsSimulTx;
} WrSib2SrsCfg;
typedef struct wrSib2UlPwrCtrlCfg
{
   S8 p0NominalPusch;
   U8 alpha;
   S8 p0NominlPucch;
   U8 deltaFPucchFormat1;
   U8 deltaFPucchFormat1b;
   U8 deltaFPucchFormat2;
   U8 deltaFPucchFormat2a;
   U8 deltaFPucchFormat2b;
   S8 deltaPeambleMsg3;
} WrSib2UlPwrCtrlCfg;
typedef struct wrSib2Params
{
   U8 siIndex;
   U8 barringInfoPres;
   struct {
      U8 emergency;
      WrSib2AcBarringCfg signalling;
      WrSib2AcBarringCfg dataCall;
   } barringInfo;
   WrSib2RachCfg rachCfg;
   WrSib2BcchCfg bcchCfg;
   WrSib2PcchCfg pcchCfg;
   WrSib2PrachCfg prachCfg;
   WrSib2PdschCfg pdschCfg;
   WrSib2PuschCfg puschCfg;
   WrSib2PucchCfg pucchCfg;
   WrSib2SrsCfg srsCfg;
   WrSib2UlPwrCtrlCfg ulPwrCtrlCfg;
   WrCyclicPrefix ulCyclicPrefix;
   U8 t300;
   U8 t301;
   U8 t310;
   U8 n310;
   U8 t311;
   U8 n311;
   U16 ulCarrierFreq;
   U8 ulBw;
   U8 addlSpectrEmission;
   U8 timingAlignTimer;
   WrSib2AcBarringCfg voiceBarringInfo;
   WrSib2AcBarringCfg videoBarringInfo;
} WrSib2Params;
typedef struct wrSib3ServFreqInfo
{
  U8 sNonIntraSearchPres;
  U8 sNonIntraSearch;
  U8 threshServingLow;
  U8 cellReselPrio;
} WrSib3ServFreqInfo;
typedef struct wrSib3IntraFreqCellResel
{
   S8 qRxLevMin;
   U8 pMaxPres;
   S8 pMax;
   U8 sIntraSearchPres;
   U8 SIntraSearch;
   U8 allwdMeasBandwidthPres;
   U8 allwdMeasBandwidth;
   U8 antennaPort1Pres;
   U8 neighCellCfg;
   U8 tReselEutra;
   U8 tResetEutraSFMedium;
   U8 tResetEutraSFHigh;
} WrSib3IntraFreqCellResel;
typedef struct wrSib3MobiStateParams
{
   U8 tEvaluation;
   U8 tHyst;
   U8 nCellChangeMed;
   U8 nCellChangeHigh;
} WrSib3MobiStateParams;
typedef struct wrSib3R9Params
{
  U8 sIntraSearchRel9Pres;
  U8 sIntraSearchP;
  U8 sIntraSearchQ;
  U8 sNonIntraSearchRel9Pres;
  U8 sNonIntraSearchP;
  U8 sNonIntraSearchQ;
  U8 qQualMinRel9Pres;
  S8 qQualMin;
  U8 threshServLowQRel9Pres;
  U8 threshServLowQ;
} WrSib3R9Params;
typedef struct wrSib3Params
{
   U8 siIndex;
   U8 qHyst;
   U8 speedStateReselPres;
   WrSib3MobiStateParams mobStateParams;
   U8 sfMedium;
   U8 sfHigh;
   WrSib3ServFreqInfo servFreqInfo;
   WrSib3IntraFreqCellResel intraFreqReSel;
   WrSib3R9Params r9Params;
} WrSib3Params;
typedef struct wrSib4Params
{
   U8 siIndex;
   Bool csgCellInfoPres;
   WrPhysCellIdRange csgPhyCellIdRange;
} WrSib4Params;




typedef struct wrSib6Params
{
   U8 siIndex;
   Bool sfUsagePres;
   U16 tReselection;
   U8 tReselectionSfMedium;
   U8 tReselectionSfHigh;
}WrSib6Params;




typedef struct wrSib9Params
{
   U8 siIndex;
   U8 henbName[48];
}WrSib9Params;

typedef struct wrCellUlSchdCfgGrp
{
   U8 maxUePerUlSf;
   U8 maxUlUeNewTxPerTti;
   U32 ulSchedulingAlg;
}WrCellUlSchdCfgGrp;

typedef struct wrCellDlSchdCfgGrp
{
   U8 maxUePerDlSf;
   U8 maxDlUeNewTxPerTti;
   U32 dlSchedulingAlg;
}WrCellDlSchdCfgGrp;
typedef struct wrSib5Params
{
   U8 siIndex;




} WrSib5Params;
typedef struct wrSysTimeInfoCDMA2000
{
   Bool cdmaEutraTimeSync;
   U8 syncChoice;
    union
       {
         U8 synchSysTime[5];
         U8 asyncSysTime[7];
        } u;
} WrSysTimeInfoCDMA2000;






typedef struct wrHrpdPreRegInfo
{
     Bool preRegAllow;
     TknU8 preHrpdZoneId;
     TknU8 secPreRegZoneIds[2];
} WrHrpdPreRegInfo;
 typedef struct wrAcBarrCDMA2K
  {
     Bool acBarringFor1XRTTPres;
     U8 acBarr0to9;
     U8 acBarr10;
     U8 acBarr11;
     U8 acBarr12;
     U8 acBarr13;
     U8 acBarr14;
     U8 acBarr15;
     U8 acBarrMsg;
     U8 acBarrReg;
     U8 acBarrEmg;
    } WrAcBarrCDMA2K;
typedef struct wrCDMA2000BandClasInfo
  {
     U8 bandClass;
     TknU32 cellReselPri;
     U8 threshHigh;
     U8 threshLow;
   } WrCDMA2000BandClasInfo;
typedef struct wrCDMA2000BandInfo
  {
     U16 arfcn;
     U8 noOfPhyCellIds;
     U16 phyCellIdLst[16];
  } WrCDMA2000BandInfo;
typedef struct wrCDMA2000NeighCellInfo
  {
     U8 bandClass;
     U8 noOfFreq;
     WrCDMA2000BandInfo neighFreqInfo[16];
   } WrCDMA2000NeighCellInfo;
typedef struct wrCDMA2000CellReselParam
  {
   U8 numBandClasses;
    WrCDMA2000BandClasInfo bandClassLst[32];
    U8 numNeighCellLst;
    WrCDMA2000NeighCellInfo neighCellLst[16];
    U8 tReselCDMA2000;
    U8 tReselSpeedSFPres;
    U8 tReselCdma2000SFMedium;
    U8 tReselCdma2000SFHigh;
  } WrCDMA2000CellReselParam;
typedef struct wr1xRttCsfbRegInfo
{
  U16 sid;
  U16 nid;
  Bool mulSID;
  Bool mulNID;
  Bool homeReg;
  Bool foreignSIDReg;
  Bool foreignNIDReg;
  Bool paramReg;
  Bool powerUpReg;
  U8 regPeriod;
  U16 regZone;
  U8 totalZone;
  U8 zoneTimer;
  U8 powerDownRegPres;
}Wr1xRttCsfbRegInfo;

typedef struct wr1xRttACBarringCfg
{
  U8 acBarring0to9_r9;
  U8 acBarring10_r9;
  U8 acBarring11_r9;
  U8 acBarring12_r9;
  U8 acBarring13_r9;
  U8 acBarring14_r9;
  U8 acBarring15_r9;
  U8 acBarringMsg_r9;
  U8 acBarringReg_r9;
  U8 acBarringEmg_r9;
}Wr1xRttACBarringCfg;
typedef struct wrHRPDParams
{
      WrHrpdPreRegInfo preRegParam;
         U8 hrpdCellReselPres;
            WrCDMA2000CellReselParam cellResel;
} WrHRPDParams;
typedef struct wrxRTTParams
{
  Bool csfbRegParamPres;
  Wr1xRttCsfbRegInfo csfbRegParam;
  U64 longCodeState;
  Bool acBarringPres;
  Wr1xRttACBarringCfg acBarring;
} Wr1xRTTParams;
typedef struct wrSib8Params
{
  U8 siIndex;
  WrSysTimeInfoCDMA2000 sysTime;
  TknU8 searchWindSize;
  Bool hrpdParamPres;
  WrHRPDParams hrpdParam;
  Bool XRTTParamPres;
  Wr1xRTTParams XRTTparam;
  U8 tReselection;
  Bool speedStatePres;
  U8 sfMedium;
  U8 sfHigh;
} WrSib8Params;


typedef struct wrSib7Params
{
  U8 siIndex;
  U8 tReselectionGERAN;
  Bool tReselSpeedSFPres;
  LwrSpdStSclFactor tReselGeranSFMedium;
  LwrSpdStSclFactor tReselGeranSFHigh;
} WrSib7Params;
typedef enum
{
   WrIntraFreq = 0,
   WrInterFreq,
   WrCDMA2kRAT,
   WrUtraFreq,
   WrGeranFreq
} WrNeighType;
typedef enum
{
   VE_MODE_TDD = 0,
   VE_MODE_FDD
} WrDuplexMode;
typedef struct wrIntraFreqNeighCell
{
   U16 pci;
   U32 cgi;
   U16 tac;
   WrPlmnId plmnIds[6];
   WrEnbType enbType;
   U16 ulFreq;
   U16 dlFreq;
   U8 ulBw;
   U8 dlBw;
   CmTptAddr addr;
   U32 eGTPTunCntr;
   U8 x2State;
   WrDuplexMode duplexMode;
   U32 peerId;
   U8 trgrX2;
   UConnId spConnId;
   UConnId suConnId;
} WrIntraFreqNeighCell;





typedef struct wrInterFreqNeighCell
{
   U16 pci;
} WrInterFreqNeighCell;





typedef struct wrCdma2000NeighCell
{
   U16 pci;
} WrCdma2000NeighCell;

typedef struct wrUtraFreqNeighCell
{
   U16 psc;
   U16 ulFreq;
   U16 dlFreq;
}WrUtraFreqNeighCell;
typedef struct wrNeighCellCb
{
   CmLList lnk;
   WrNeighType neighType;
   union
   {
      WrIntraFreqNeighCell intra;
      WrInterFreqNeighCell inter;
      WrCdma2000NeighCell cdma;
      WrUtraFreqNeighCell utra;
   } u;
} WrNeighCellCb;
typedef struct wrNeighCells
{
   CmLListCp intra;
   CmLListCp inter;
   CmLListCp cdma;

   CmHashListCp eutran;
   CmHashListCp cdma1xRTT;
   CmHashListCp cdmaHRPD;
   CmHashListCp utran;
} WrNeighCells;
typedef struct WrEmmS1Reset
{
   U16 causeType;
   U16 causeVal;
   U8 rstType;
   U16 nmbUes;
   WrEmmS1ConId conIds[17];
}WrEmmS1Reset;

typedef struct wrAlarmVal
{
   U8 alarmCnt;
   Ticks alarmTime;
   U8 maxErrIndCnt;
   U8 maxResetCnt;
   U64 minErrIndTime;
   U64 minResetTime;
}WrAlarmVal;

typedef struct wrOvrldGummeiLst
{
   WrPlmnId plmnId;
   U8 mmeCode;
   U32 mmeGroupId;
}WrOvrldGummeiLst;
typedef struct wrMmeCb
{
   WrMmeId mmeId;
   U32 peerId;
   U32 suConnId;
   U32 spConnId;
   CmTimer timer;
   WrLiSapCb *s1apSap;
   U8 state;
   U8 adminState;
   CmTptAddr mmeAddr[5];
   U32 locEgtpTunCntr;
   U8 numPlmnIds;
   WrPlmnId plmnIds[32];
   U16 numGrpIds;
   U16 groupIds[256];
   U16 numCodes;
   U8 codes[256];
   U8 relCapacity;
   Bool mmeOvldFlag;
   U32 overloadAction;




   WrEmmS1Reset resetRtxInputs;
   U16 cfgUpdRtxCnt;
   U16 resetRtxCnt;
   WrAlarmVal alarmVal;
   U32 numOvrldGummei;
   WrOvrldGummeiLst ovrldGummeiLst[256];
} WrMmeCb;






typedef struct wrMmeCont
{
   U8 numMmes;
   WrMmeCb *mmes[17];
} WrMmeCont;
typedef struct wrPbmCb
{
   Bool siModPres;

   Bool etwsIndPres;

   Bool cmasIndPres;

   U16 curSfn;
   U16 repeatNumPagCycles;
   CmLListCp *pbmSchedInfo[1024];
   U8 **allPfsAndPos;
   U8 numSIs;
   WrSISchdInfo pendSiInfo[13];
   Bool pendReCalcAllPfsAndPos;
   U8 pendDfltPagingCycle;
   U8 pendnB;
   U8 pendModifPeriodCoeff;
} WrPbmCb;

typedef struct wrUeTimers
{
   U16 t302;
   U16 t304;
   U16 ccoT304;
   U16 t320;
} WrUeTimers;

typedef struct wrEmmCellTmrCfg
{
   U32 rrcConnectionSetupTmr;
   U32 rrcConnectionReconfigTmr;
   U32 rrcConnectionReEstablishTmr;
   U32 rrcSecurityModeCommandTmr;
   U32 rrcUeCapabilityEnquiryTmr;
   U32 rrcConnectionReleaseTmr;
   U32 rrcHandoverPrepTmr;
   U32 rrcUeInformationRequestTmr;
   U16 s1InitialContextSetupTmr;
   U16 s1ErabReleaseIndicationTmr;
   U16 s1UeContextReleaseTmr;
   U16 s1PathSwitchTmr;
   U16 s1HandoverPrepTmr;
   U16 s1RelocOverallTmr;

   U16 s1IRatHandoverPrepTmr;

   U16 s1IRatRelocOverallTmr;
   U16 s1HandoverCancelTmr;
   U16 x2HandoverPrepTmr;
   U16 x2RelocOverallTmr;
   U16 x2StoreUeContextTmr;
   U16 x2SnStatusTransferTmr;
   U16 internalSubCellChangeTmr;
   U16 internalSubCellPdcpControlTmr;
   U16 ehrpdOptHoCompleteTmr;
   U16 intraEnbHoCompleteTmr;
   U16 measurementReportToWaitTmr;
   U16 internalResourceSetupTmr;
   U16 internalResourceReleaseTmr;
   U16 internalSecurityControlTmr;
   U16 internalRrcDataTransferTmr;
   U16 internalForwardingPathSetupTmr;
   U16 internalReestablishControlTmr;
   U16 internalBufferFlushTmr;
   U16 internalDataTransferStartTmr;
   U16 internalDataForwardEndIndTmr;
   U16 internalReestablishTimeToWaitTmr;
   U16 internalUserInactivityTmr;
   U16 internalSignalingInactivityTmr;
   U16 internalUnassignedTmr;
   U16 internalNoWaitRetryTmr;
   U16 internalRrcResetTmr;
   U16 internalEnbResetTmr;
   U16 internalSolicitMeasurementTmr;
   U16 internalRtdInfoReqTmr;
} WrEmmCellTmrCfg;

typedef struct wrEmmcellReCfgInfo
{
  U8 cellReCfgBitMsk;
  RgrCellRecfg schReCfg;
  CtfCellRecfgInfo phyReCfg;
  NhuCellReCfgInfo rrcReCfg;
} WrEmmcellReCfgInfo;
typedef struct wrCellStat
{
   WrRrcSts wrRrcStat;
   WrRrcReEstabSts wrRrcReEstabSts;
   WrErabSts wrErabStat;
   WrCallSts wrCallStat;
   U32 wrPagStat;
   WrHoSts wrHoStat;
   WrSigSts wrSigSts;
   WrUeCtxtRelSts wrUeCtxtRelSts;
}WrCellStat;

typedef struct wrSchedulerCfg
{
   U8 ulSchType;
   U8 dlSchType;
   U8 dlfsSchdType;
   U32 pfsDlTptCoefficient;
   U32 pfsDlFairCoefficient;
   U32 pfsUlTptCoefficient;
   U32 pfsUlFairCoefficient;
   U32 pfsDlQciWgt[9];
   U32 pfsUlQciWgt[9];
}WrSchedulerCfg;

typedef struct wrAddPwrCntrlParams
{
   Bool deltaMCSenabled;
   S32 p0UePUSCH;
   S32 p0UePUCCH;
   Bool accumulationEnabled;
   U32 pSRSoffset;
   U32 filterCoefficient;
}WrAddPwrCntrlParams;

typedef enum wrEmmModuleStat
{
   WR_EMM_RRC_STATS = 1,
   WR_EMM_RRC_REEST_STATS,
   WR_EMM_ERAB_STATS,
   WR_EMM_PAG_STATS,
   WR_EMM_CALL_STATS,
   WR_EMM_SIG_STATS,
   WR_EMM_UE_CTXT_REL_STAT,
   WR_EMM_UE_PRB_QCI,
   WR_EMM_UE_PRB_AVG,
   WR_EMM_ACTV_UE_QCI,
   WR_EMM_PREAMBLE,
   WR_EMM_ACTUE_CNT,
   WR_EMM_MAX
}WrEmmModuleStat;


typedef enum wrEmmPrbStat
{
   WR_EMM_PRB_UL,
   WR_EMM_PRB_DL,
   WR_EMM_PRB_MAX
}WrEmmPrbStat;

typedef enum wrEmmActUeCnt
{
   WR_EMM_TOT_ACTV_UE
}WrEmmActUeCnt;


typedef enum wrEmmSubActUeCnt
{
   WR_EMM_TOT_ACTV_UE_MAX

}WrEmmSubActUeCnt;


typedef enum wrEmmPrbAvg
{
   WR_EMM_UE_PRB_AVG_MAX

}WrEmmPrbAvg;

typedef enum wrEmmPreambleSubTypeStat
{
   WR_EMM_PREAMBLE_MAX

}WrEmmPreambleSubTypeStat;



typedef enum wrEmmPreambleStat
{
   WR_EMM_Preamble_DEDICATED = 1,
   WR_EMM_Preamble_GRPA,
   WR_EMM_Preamble_GRPB
}WrEmmPreambleStat;


typedef enum wrEmmPrbSubStat
{
   WR_EMM_PRB_QCI1 = 1,
   WR_EMM_PRB_QCI2,
   WR_EMM_PRB_QCI3,
   WR_EMM_PRB_QCI4,
   WR_EMM_PRB_QCI5,
   WR_EMM_PRB_QCI6,
   WR_EMM_PRB_QCI7,
   WR_EMM_PRB_QCI8,
   WR_EMM_PRB_QCI9,
   WR_EMM_PRB_QCI_SUM
}WrEmmPrbSubStat;

typedef enum wrEmmSigStat
{
   WR_EMM_SIG_ATTEMPT =1,
   WR_EMM_SIG_SUCCESS,
   WR_EMM_SIG_MAX
}WrEmmSigStat;


typedef enum wrEmmUeCtxtRelStat
{
   WR_EMM_UE_CTXT_REL_REQ =1,
   WR_EMM_UE_CTXT_REL_SUCCESS,
   WR_EMM_UE_CTXT_REL_MAX
}wrEmmUeCtxtRelStat;


typedef enum wrEmmRrcStat
{
   WR_EMM_RRC_CON_ATTEMPT = 1,
   WR_EMM_RRC_CON_SUCCESS,
   WR_EMM_RRC_CON_FAIL,
   WR_EMM_RRC_CON_FAIL_DEGRAD,

   WR_EMM_RRC_CON_MAX
}WrEmmRrcStat;


typedef enum wrEmmRrcReEstabStat
{
   WR_EMM_RRC_REESTAB_CON_ATTEMPT = 1,
   WR_EMM_RRC_REESTAB_CON_SUCCESS,
   WR_EMM_RRC_REESTAB_CON_FAIL,
   WR_EMM_RRC_REESTAB_CON_FAIL_DEGRAD,

   WR_EMM_RRC_REESTAB_CON_MAX
}WrEmmRrcReEstabStat;


typedef enum wrEmmErabStat
{
   WR_EMM_ERAB_DEFAULT = 1,
   WR_EMM_ERAB_DEDICATED,
   WR_EMM_ERAB_MODIFY,
   WR_EMM_ERAB_RELEASE_ENB,
   WR_EMM_ERAB_RELEASE_MME,
   WR_EMM_ERAB_MAX
}WrEmmErabStat;

typedef enum wrEmmPagStat
{
   WR_EMM_PAG_TOT = 1,
   WR_EMM_PAG_MAX
}WrEmmPagStat;


typedef enum wrEmmcallStat
{
   WR_EMM_CALL_TOT = 1,
   WR_EMM_CALL_ACT,
   WR_EMM_CALL_MAX
}WrEmmcallStat;


typedef enum wrEmmRrcFailDegRad
{
   WR_EMM_RRC_EMERGENCY = 0,
   WR_EMM_RRC_HIGH_PRIORITY_ACCESS,
   WR_EMM_RRC_MT_ACCESS,
   WR_EMM_RRC_MO_SIGNALLING,
   WR_EMM_RRC_MO_DATA,
   WR_EMM_RRC_DELAY_TOLERANT_ACCESS_V1020,
   WR_EMM_RRC_MAX
}WrEmmRrcFailDegRad;


typedef enum wrEmmRrcReEstabFail
{
   WR_EMM_RRC_REESTAB_RECFG =0,
   WR_EMM_RRC_REESTAB_HO,
   WR_EMM_RRC_REESTAB_OTHR,
   WR_EMM_RRC_REESTAB_MAX
}WrEmmRrcReEstabFail;


typedef enum wrEmmErabSubType
{
   WR_EMM_ERAB_ATTEMPT = 1,


   WR_EMM_ERAB_SUCCESS,


   WR_EMM_ERAB_QCI_1,


   WR_EMM_ERAB_QCI_2,


   WR_EMM_ERAB_QCI_3,


   WR_EMM_ERAB_QCI_4,


   WR_EMM_ERAB_QCI_5,


   WR_EMM_ERAB_QCI_6,


   WR_EMM_ERAB_QCI_7,


   WR_EMM_ERAB_QCI_8,


   WR_EMM_ERAB_QCI_9,


   WR_EMM_ERAB_FAIL_RADIORESOURCESNOTAVAILABLE,



   WR_EMM_ERAB_FAIL_REDUCELOADINSERVINGCELL,


   WR_EMM_ERAB_FAIL_FAILUREINTHERADIOINTERFACEPROCEDURE,


   WR_EMM_ERAB_FAIL_RELEASEDUETOEUTRANGENERATEDREASONS,


   WR_EMM_ERAB_FAIL_USERINACTIVITY,


   WR_EMM_ERAB_FAIL_RADIOCONNECTIONWITHUELOST,


   WR_EMM_ERAB_FAIL_OAMINTERVENTION,

   WR_EMM_ERAB_SUBTYP_MAX
}WrEmmErabSubType;

typedef enum wrEmmPagSubType
{
   WR_EMM_PAG_SUBTYP_MAX = 1
}WrEmmPagSubType;


typedef enum wrEmmSigSubType
{
   WR_EMM_SIG_SUBTYP_MAX = 1
}WrEmmSigSubType;

typedef enum wrEmmUeCtxtRelSubType
{
   WR_EMM_UE_CTXT_REL_SUBTYP_MAX = 1
}WrEmmUeCtxtRelSubType;







typedef struct wrLowPwrCfg
{
   S8 lowRefSigPwr;
   S16 lowPilotSigPwr;
   S16 lowPriSigPwr;
   S16 lowSecSigPwr;
}WrLowPwrCfg;

typedef struct wrHighPwrCfg
{
   S8 highRefSigPwr;
   S16 highPilotSigPwr;
   S16 highPriSigPwr;
   S16 highSecSigPwr;
}WrHighPwrCfg;
typedef struct wrShutdownPwrCfg
{
   WrLowPwrCfg lwPwrCfg;
   WrHighPwrCfg hiPwrCfg;
}WrShutdownPwrCfg;

typedef struct wrDlRlcModeInfo
{
   U8 amRlcSrbmaxRetxThresh;
   U16 amRlcSrbmaxpollByte;
   U16 amRlcSrbpollPdu;
   U16 amRlcSrbtPollRetx;
   U8 amRlcDrbmaxRetxThresh;
   U16 amRlcDrbmaxpollByte;
   U16 amRlcDrbpollPdu;
   U16 amRlcDrbtPollRetx;
   U8 umRlcsnFieldLen;
   U8 srbtReordring;
   U8 drbtReordring;
}WrDlRlcModeInfo;

typedef struct wrUlRlcModeInfo
{
   U8 amRlcSrbtStatusProh;
   U8 amRlcSrbtReordring;
   U8 amRlcDrbtStatusProh;
   U8 amRlcDrbtReordring;
   U8 umRlcsnFieldLen;
   U8 srbtReordring;
   U8 drbtReordring;
}WrUlRlcModeInfo;

typedef struct wrRlcCfgGrp
{
   WrDlRlcModeInfo dlModeInfo;
   WrUlRlcModeInfo ulModeInfo;
}WrRlcCfgGrp;

typedef struct wrRgrCfgGrp
{
   U16 dfltStartRnti;
   U16 dfltRntiSize;
   U8 dfltCfiCfg;
   U8 dfltTrgUlCqi;
   U16 dfltBcchPchRaCodeRate;
   U16 dfltPdcchCodeRate;
   U8 dfltULCmnCodRateCcchCqi;
   U8 dfltDLCmnCodRateCcchCqi;
   U8 dfltIsDlFreqSel;
   U8 dfltThresholdCqi;
   U8 dfltMaxDlHqTx;
   U8 dfltMaxMsg4HqTx;
   U8 dfltMaxPucchRbs;
}WrRgrCfgGrp;

typedef enum {
   WR_CTF_SC_SPACING_15KHZ,
   WR_CTF_SC_SPACING_7DOT5KHZ
} WrCtfSCSpacing;

typedef struct wrCtfCfgGrp
{
   WrCtfSCSpacing dfltScSpacing;
   U32 dfltOpMode;
   U32 dfltTagPeriod;
}WrCtfCfgGrp;

typedef struct wrCellSchdPwrCfg
{
   U16 pucchPwrFmt3Rnti;
   U16 pucchPwrFmt3Siz;
   U16 pucchPwrFmt3aRnti;
   U16 pucchPwrFmt3aSiz;
   U16 puschPwrFmt3Rnti;
   U16 puschPwrFmt3Siz;
   U16 puschPwrFmt3aRnti;
   U16 puschPwrFmt3aSiz;
   U8 pucchPwrFmt3aEnable;
   U8 puschPwrFmt3aEnable;
   U8 isUlGrpPwrCntrlPucchEnable;
   U8 isUlGrpPwrCntrlPuschEnable;
}WrCellSchdPwrCfg;

typedef struct wrCellSchdRachCfg
{
   U8 preambleFormat;
   U8 raOccSize;
   U8 raOccSfnEnum;
   U16 prachResource;
}WrCellSchdRachCfg;

typedef struct wrCellSchdGenCfg
{
   U8 macInst;
   U8 maxUePerUlSf;


   U8 maxUePerDlSf;


   U8 maxUlBwPerUe;





   U8 maxDlBwPerUe;





   U8 maxDlRetxBw;





   U8 maxDlUeNewTxPerTti;




  U8 maxUlUeNewTxPerTti;
  Bool cellModSchm;

}WrCellSchdGenCfg;


typedef struct wrEmmSpsCfgGrp
{
   Bool bIsSpsEnabled;
   U16 maxDlSpsUePerTti;
   U16 maxUlSpsUePerTti;
   U8 maxDlBwInRbs;
}WrEmmSpsCfgGrp;


typedef struct wrCellSchdCfg
{
   U8 srsBwEnum;
   U8 prdEnum;
   U8 modPrd;
   U8 siWinSize;
   U8 retxCnt;
   WrCellSchdPwrCfg pwrCfg;
   Bool preamPres;
   U8 preamStart;
   U8 preamSize;
   WrCellSchdRachCfg rachCfg;
   WrCellSchdGenCfg genCfg;

   WrEmmSpsCfgGrp spsCfg;

   Bool isDynCfiEnb;
}WrCellSchdCfg;

typedef struct wrCdma2k1xMobParams
{
   Bool sidIncl;
   U16 sid;
   Bool nidIncl;
   U16 nid;
   Bool multSidsIncl;
   Bool multSids;
   Bool multNidsIncl;
   Bool multNids;
   Bool regZoneIncl;
   U16 regZone;
   Bool totalZonesIncl;
   U8 totalZones;
   Bool zoneTimerIncl;
   U8 zoneTimer;
   Bool pktZoneIdIncl;
   U8 pktZoneId;
   Bool pzIdHysParamIncl;
   Bool pzHystEnabled;
   Bool pzHystInfoIncl;
   Bool pzHystListLen;
   U8 pzHystActTimer;
   U8 pzHystTimerMul;
   U8 pzHystTimerExp;
   Bool pRevIncl;
   U8 pRev;
   Bool minPRevIncl;
   U8 minPRev;
   Bool negSlotCycIndxSupIncl;
   Bool negSlotCycIndxSup;
   Bool encModeIncl;
   U8 encMode;
   Bool encSupIncl;
   Bool encSup;
   Bool sigEncSupIncl;
   U8 sigEncSup;
   Bool msgIntSupIncl;
   Bool msgIntSup;
   Bool sigIntSupINCLIncl;
   Bool sigIntSupINCL;
   Bool sigIntSupIncl;
   U8 sigIntSup;
   Bool authIncl;
   U8 auth;
   Bool maxNumAltoSoIncl;
   U8 maxNumAltoSo;
   Bool useSyncIdIncl;
   Bool useSyncId;
   Bool msInitPosLocSupIndIncl;

   Bool msInitPosLocSupInd;
   Bool mobQosIncl;
   Bool mobQos;
   Bool bandClsInfoReqIncl;
   Bool bandClsInfoReq;
   Bool bandClsIncl;
   U8 bandCls;
   Bool bypassRegIndIncl;
   U8 bypassRegInd;
   Bool altBandClsIncl;
   U8 altBandCls;
   Bool maxAddServInstIncl;
   U8 maxAddServInst;
   Bool homeRegIncl;
   Bool homeReg;
   Bool forSidRegIncl;
   Bool forSidReg;
   Bool forNidRegIncl;
   Bool forNidReg;
   Bool powerUpRegIncl;
   Bool powerUpReg;
   Bool powerDownRegIncl;
   Bool powerDownReg;
   Bool parmRegIncl;
   Bool parmReg;
   Bool regPrdIncl;
   U8 regPrd;
   Bool regDistIncl;
   U16 regDist;
   Bool prefMsIdTypeIncl;
   U8 prefMsIdType;
   Bool extPrefMsIdTypeIncl;
   U8 extPrefMsIdType;
   Bool meIdReqdIncl;
   Bool meIdReqd;
   Bool mccIncl;
   U16 mcc;
   Bool imsi1112Incl;
   U8 imsi1112;
   Bool imsiTSupIncl;
   Bool imsiTSup;
   Bool recntMsgIndIncl;
   Bool recntMsgInd;
   Bool rerModeSupIncl;
   Bool rerModeSup;
   Bool tzkModeSupIncl;
   Bool tzkModeSup;
   Bool tzkIdIncl;
   Bool tzkId;
   Bool pilRepIncl;
   Bool pilRep;
   Bool sdbSupIncl;
   Bool sdbSup;
   Bool autoFcsoAllIncl;
   Bool autoFcsoAll;
   Bool sdbInRcnmIncl;
   Bool sdbInRcnm;
   Bool fpcFchIncl;
   U8 fpcFchInitSetptRC3;

   U8 fpcFchInitSetptRC4;

   U8 fpcFchInitSetptRC5;

   U8 fpcFchInitSetptRC11;

   U8 fpcFchInitSetptRC12;

   Bool tAddIncl;
   U8 tAdd;
   Bool pilotIncIncl;
   U8 PilotInc;
   Bool randIncl;
   U32 rand;
   Bool lpSecIncl;
   U8 lpSec;
   Bool ltmOffIncl;
   U8 ltmOff;
   Bool dayltIncl;
   Bool daylt;
   Bool gcsnaL2ActTimerIncl;
   U8 gcsnaL2ActTimer;
   Bool gcsnaSeqCtxtTimerIncl;
   U8 gcsnaSeqCtxtTimer;
   U8 reserved;
}WrCdma2k1xMobParams;


typedef struct wrCsfbCdma1xRttCfgParams
{
   TknStrOSXL sectorIdPtr;
   WrCdma2k1xMobParams mobParams;
}WrCsfbCdma1xRttCfgParams;


typedef struct wrCsfbCfgParams
{
   U8 csfbToUtraMeasSup;
   U8 csfbToCdmaMeasSup;
   U8 eCsfbMeasSup;
   Bool dualRxSup;
   Bool dualRxTxSup;
   Bool cdma1xRttSup;
   WrCsfbCdma1xRttCfgParams cdma1xrttCsfbCfg;

}WrCsfbCfgGrp;


typedef enum
{
   WR_EMM_NBR_CSG_ID_NOT_DISCOVERED,
   WR_EMM_NBR_CSG_ID_DISCOVERERY_ON_GOING,
   WR_EMM_NBR_CSG_ID_DISCOVERED
} WrNbrCsgIdSts;

typedef enum
{
   WR_UMM_PREF_HO_TGT_NO_PREFERENCE,
   WR_UMM_PREF_HO_TGT_OPEN,
   WR_UMM_PREF_HO_TGT_CLOSED,
   WR_UMM_PREF_HO_TGT_HYBRID
} WrHoTgtPref;

typedef enum
{
   WR_EMM_CELL_ACCESS_MODE_NOT_DETERMINED,
   WR_EMM_CELL_ACCESS_MODE_DETERMINED
} WrNbrAccessModeSts;

typedef enum
{
   WR_EMM_ANR_REPORT_CGI,
   WR_EMM_ANR_REPORT_CSG
} WrEmmReportType;



typedef enum wrEmmCellType
{
  WR_EMM_CELL_TYPE_VERY_SMALL,
  WR_EMM_CELL_TYPE_SMALL,
  WR_EMM_CELL_TYPE_MEDIUM,
  WR_EMM_CELL_TYPE_LARGE
}WrEmmCellType;
typedef struct wrSonPaReCfg
{
   U32 NumPaReCfg;

}WrSonPaReCfg;
typedef struct wrSonCfg
{
   LwrSonSchdCfg schdCfg;
   WrSonPaReCfg paReCfg;
}WrSonCfg;


typedef struct WrCellCb
{
   U16 cellId;
   U16 dlCarrierFreq;
   U16 physCellId;
   U16 dlCyclicprefix;
   U8 numAntPorts;
   U8 numTxAntenna;
   U32 ttiCnt;
   WrMibParams mib;
   WrSib1Params sib1;
   WrSib2Params sib2;
   WrSib3Params sib3;
   WrSib4Params sib4;
   WrSib5Params sib5;
   WrSib6Params sib6;
   WrSib7Params sib7;
   WrSib8Params sib8;
   WrSib9Params sib9;
   WrCellUlSchdCfgGrp ulSchdCfgGrp;
   WrCellDlSchdCfgGrp dlSchdCfgGrp;
   WrCellState cellState;
   WrSibCfg sibsCfg[12];
   U8 numSibsCfg;
   WrPbmCb pbmCb;
   U8 numOfCfgActiveEaids;
   WrActCfgEaid eaidLst[15];
   WrCfgSIB10Info sib10Info;
   WrPwsWarningInfo *warningInfo;

   U16 warMsgSegmentSize;
   U16 sfn;
   U8 modType;
   U16 duplexMode;
   U16 maxUeSupp;
   U8 numUeCfg;
   WrNeighCells neighCells;
   U8 numGuGrpIds;
   WrGuGrpIdLst guGrpIdLst[16];




   U8 wrDfltNumRaPreamble;

   U16 wrDfltRrmRntisize;
   U16 wrDfltRrmStartPreamble;
   U16 wrDfltRrmNumPreamble;
   U32 rsrpTrshldRange;

   CmLListCp pendPagUesLst;

   CmLListCp **ueCbLst;

   CmLListCp eutranNbrFreqLst;
   CmLListCp cdma1xFreqLst;
   CmLListCp cdmaHrpdFreqLst;
   CmLListCp cdmaBandLst;
   CmLListCp utraFddNbrFreqLst;
   CmLListCp utraTddNbrFreqLst;
   CmLListCp geranNbrFreqLst;
   WrCellNrCb *nrCb;
   WrUeTimers ueTmrConstants;
   WrEmmCellTmrCfg tmrCfg;
   Bool pendReCfgPres;
   WrEmmcellReCfgInfo pendRecfg;
   U16 noMmeToReset;
   U16 noNghEnbToReset;
   WrCellStat wrCellStats;



  CmTimer rrmRrcConHystTmr;
  CmTimer pciModTmr;
  LwrAnrDrxCfg ueAnrDrxCfg;
  WrSchedulerCfg schCfg;
  WrAddPwrCntrlParams ulPwrCtrl;
  WrShutdownPwrCfg shutdwnPwrCfg;
  WrCtfCfgGrp ctfCfg;
  WrRgrCfgGrp rgrCfg;
  WrRlcCfgGrp rlcCfg;
  WrCellSchdCfg schdCfg;

   WrEmmLteAdvCellCb lteAdvCb;

   LwrSrbPolicy srbPolicy[3];
   LwrDrbPolicy drbPolicy[256];
   Bool sib1Modified;
   WrCsfbCfgGrp csfbCfgGrp;

   U8 csgAccessMode;
   LwrCsgPciRangeInfo smallCellCsgPciRange;


   U8 minDlResNonCsg;
   U8 minUlResNonCsg;
   U16 maxCsgUeSup;
   U16 maxNonCsgUeSup;


   Bool isDRXQCIEnabled;

   U32 cnmLstSyncEarfcn;
   U16 cnmLstSyncPci;
   U16 cnmState;
   WrEmmCellType cellSizeType;



   U8 txPrefMode;
   Bool isAutoCfgModeEnb;
   WrSonCfg sonCfg;





} WrCellCb;







typedef struct wrPlmnCb
{
   WrPlmnInfo plmnInfo;
   U32 numMmes;
   U8 crntMmeIdx;
   U8 mmes[17];
} WrPlmnCb;





typedef struct wrPlmnCont
{
   U32 numPlmns;
   WrPlmnCb plmns[6];
} WrPlmnCont;




typedef struct wrEnbOvldParams
{
   U8 critThrldVal;
   U8 majThrldVal;
   U8 minThrldVal;
   U8 critRcvryVal;
   U8 majRcvryVal;
   U8 minRcvryVal;
   U8 eNBMemCritThresVal;
   U8 eNBMemMajThresVal;
   U8 eNBMemMinThresVal;
   U8 maxCntval;
   U32 eNBOvldMonTimerVal;
   U32 eNBOvldMonfreq;
   Bool eNbOvrLdFlag;
   U8 ovldCntVal;
   U8 prevOvldFlag;
} WrEnbOvldParams;



typedef struct _wrCpuParam
{
   unsigned long idle_time;
   unsigned int sys_time;
   unsigned int nice_time;
   unsigned int usr_time;
   unsigned long uptime;
}WrCpuParam;
typedef struct wrMmeLoaddBalCfg
{
   U16 mmeGroupId;
   U16 mmeGrpPrior;
} WrMmeLoaddBalCfg;



typedef struct wrSSearchR9
{
   Bool pres;
   U8 sSearchPRel9;
   U8 sSearchQRel9;
} WrSSearchR9;




typedef struct wrThreshXQR9
{
   U8 threshXHighQR9;
   U8 threshXLowQR9;
} WrThreshXQR9;




typedef struct wrEutranFreqCb
{
   U32 reCfgType;
   U8 freqIndex;
   Bool status;
   U16 dlEarfcn;
   U16 ulEarfcn;

   U8 cellReSelPri;
   S8 qRxLevMin;

   Bool pMaxPres;
   S8 pMax;

   U8 tReselcxn;
   Bool sfPres;

   WrSpdStSclFctr sfMedium;
   WrSpdStSclFctr sfHigh;

   TknU8 sIntraSrch;

   TknU8 sNonIntraSrch;

   U8 thSrvngLow;

   U8 threshXHigh;
   U8 threshXLow;
   Bool measBWusage;
   TknU8 allowedMeasBW;

   Bool presenceAntPort1;

   U8 neighCellConfig;




   WrQoffRange qOffsetFreq;
   WrQoffRange offsetFreq;
   WrSSearchR9 sIntraSrchR9;
   WrSSearchR9 sNonIntraSrchR9;
   TknS8 qQualMinR9;
   TknU8 thSrvngLowQR9;

   WrThreshXQR9 threshXQR9;




   CmLList freqLstEnt;
} WrEutranFreqCb;
typedef struct wrUtranFddNeighFreq{
   U8 thresQR9Pres;
   U8 threshXhighQR9;

   U8 threshXlowQR9;

   S8 pQualMin;
   U16 arfcnUl;
   U16 arfcnDl;
}WrUtranFddNeighFreq;





typedef struct wrUtranTddNeighFreq{
   U8 bandIndicator;
   U16 arfcn;
   LwrUtraTddMode tddMode;
}WrUtranTddNeighFreq;
typedef struct wrUtraFreqCb
{
   U32 reCfgType;
   U8 freqIndex;

   TknU8 priority;
   U8 threshXhigh;

   U8 threshXlow;

   S8 qRxLevMin;
   S8 pMaxUtra;
   U8 offsetFreq;
   WrDuplexMode duplexMode;
   CmLList freqLstEnt;
   union{
      WrUtranFddNeighFreq utraFddFreq;
      WrUtranTddNeighFreq utraTddFreq;
   }t;
}WrUtraFreqCb;
typedef struct wrUtranFddNeighCell{
  U16 psc;
  U16 arfcnUl;
  U16 arfcnDl;
} WrUtranFddNeighCell;
typedef struct wrUtranTddNeighCell{
  U16 psc;
  U16 arfcn;
  S16 pccpch;
} WrUtranTddNeighCell;
typedef struct wrUtraNeighCellCb
{
  U32 reCfgType;
  U32 nrIndex;
  U16 rncId;
  U16 cId;
  U16 lac;
  U8 rac;
  U8 numPlmn;
  WrPlmnId plmnId[6];
   U8 duplexMode;
   union{
      WrUtranFddNeighCell utraFdd;
      WrUtranTddNeighCell utraTdd;
   }t;
  Bool isVoipCapable;
  Bool isPsHOCapable;
  Bool isRimSupported;



  U8 qoffset;
  U8 curRank;
  Bool blackListed;
  WrNrUtranFreqCb *freqNode;
  CmLList nrWlBlLnk;
  TknStrOSXL utraSI;
  Bool rimState;
}WrUtraNeighCellCb;



typedef struct wrCdma1xFreqCb
{
   U8 reCfgType;
   U8 freqIndex;
   Bool status;
   U8 bandClass;
   U16 arfcn;
   U8 searchRate;
   S8 offsetFreq;
   U8 freqPriority;
   CmLList freqLstEnt;
} WrCdma1xFreqCb;



typedef struct wrCdmaHRPDFreqCb
{
   U8 reCfgType;
   U8 freqIndex;
   Bool status;
   U8 bandClass;
   U16 arfcn;
   U8 searchRate;
   S8 offsetFreq;

   U16 anrUeSearchRateHRPD;

   CmLList freqLstEnt;
} WrCdmaHRPDFreqCb;




typedef struct wrCdmaBandClassCb
{
   U8 reCfgType;
   U8 bandIndex;
   Bool status;
   U8 bandClass;
   U8 cellReselPri;
   U8 threshxHigh;
   S8 threshxLow;
   CmLList bandLstEnt;
} WrCdmaBandClassCb;

typedef struct wrGeranFreqCb
{
   CmLList freqLstEnt;
   U16 arfcn;
   TknU8 pMaxGeran;
   U8 bandInd;

   U8 qRxLevMin;

   U8 cellReselPriority;

   U8 threshXLo;


   U8 threshXHi;


   U8 nccPermitted;
}WrGeranFreqCb;


typedef struct wrGeranCellCb
{
   CmLList cellLstEnt;
   WrGeranFreqCb *freqCb;
   WrPlmnId plmnId;
   U32 nrIndex;
   U16 lac;
   U8 rac;
   U16 cId;
   U8 bsic;


   U8 nccPermittedMeas;

   Bool isDtmCapable;
   U8 siPsiType;
   U8 noOfsiPsi;
   WrSiInfoGeran siOrPsi;
   TknStrBSXL nco;
   S8 offsetFreq;
   Bool isRimSupported;



  Bool rimState;
}WrGeranCellCb;

typedef struct wrNeighNeighCb
{
   WrEcgi ecgi;
   U16 pci;
   U16 dlEarfcn;
   U32 tac;
   CmLList LstEnt;
} WrNeighNeighCb;

typedef struct wrTimeStamp
{
   U32 timeSeconds;
   U32 timeMs;
}WrTimeStamp;

typedef struct wrEutranNeighCellCb
{
   U8 nrIndex;
   U32 enbId;





   WrEnbType enbType;




   WrPlmnId enbPlmn;


   U16 pci;


   U16 tac;


   U8 numPlmn;
   WrPlmnId plmn[6];


   U16 earfcnDl;



   U16 earfcnUl;


   WrEutranBw dlBw;


   WrEutranBw ulBw;


   WrQoffRange cio;



   WrQoffRange qoffset;




   WrEcgi eCgi;


   Bool blackListed;

   U8 numAntenna;
   WrSib2PrachCfg prachCfg;

   CmLList srvdCellLstEnt;
   CmLListCp neighNeighLstCp;

   CmLList nrWlBlLnk;

   WrNrEutranFreqCb *freqNode;

   U8 curRank;
   WrTimeStamp timeStamp;

   U8 isCsgIdResolved;
   U32 csgId;
   U8 isCsgAccessModeResolved;
   U8 csgAccessMode;
   Bool isCnmPerformed;

   Bool isCsgCell;
   S16 detectedRsrp;
   CtfCnmMibInfo cnmMibInfo;
   U8 isHeMsCell;
   U32 numTtiTicks;
}WrEutranNeighCellCb;




typedef struct wrCdma2kNeighCellCb
{
    CmHashListEnt cdmaNrHashEnt;


    U8 nrIndex;
    U32 bandClass;



    U32 arfcn;



    U16 pnOffset;



    WrCdmaType cdmaType;






    U16 cid;




    Bool blackListed;

    TknStrOSXL sectorId;

    CmLList cdmaNrLLstEnt;

    WrNrCdmaFreqCb *freqNode;

    U16 pilotPnPhase;

    U8 pilotStrength;

    U8 systemType;
    U16 channelNum;
    U8 pilotOneWay;
} WrCdma2kNeighCellCb;

typedef struct wrEutranNrInfo
{
   U16 nrIndex;
   U16 earfcn;
   U16 phyCellId;
   U16 cid;
   WrPlmnId plmnId;
}WrEutranNbrCellInfo;

typedef struct wrUtranNrInfo
{
   U16 nrIndex;
   U16 arfcn;
   U16 psc;
   U16 cid;
   WrPlmnId plmnId;
}WrUtranNrInfo;

typedef struct wrGeranNrInfo
{
   WrPlmnId plmnId;
   U32 nrIndex;
   U16 arfcn;
   U16 cId;
   U8 bsic;

   U8 bandInd;

}WrGeranNrInfo;




typedef struct wrEutranCellModInfo
{
   WrEutranNbrCellInfo nrInfo;
}WrEutranCellModInfo;

typedef struct wrUtranCellModInfo
{
   WrUtranNrInfo nrInfo;
}WrUtranCellModInfo;
typedef struct wrEmmSrvdCellMod
{
   U32 oldCellId;
   U32 newCellId;
} WrEmmSrvdCellMod;
typedef struct wrEmmEnbCfgUpdInfo
{
   U8 numSrvdCellAdded;
   U8 numSrvdCellDeleted;
   U8 numSrvdCellModified;
   U8 numGrpIdAdded;
   U8 numGrpIdDeleted;
   U32 srvdCellAdd[12];
   WrEmmSrvdCellMod srvdCellMod[12];
   U32 oldEcgiToDel[12];
   WrGuGrpIdLst guIdAddLst[16];
   WrGuGrpIdLst guIdDelLst[16];
   Bool isCellModified;
} WrEmmEnbCfgUpd;

typedef struct wrNeighEnbCb
{
   CmHashListEnt neighEnbHashEnt;

   U16 cellId;
   U32 peerId;
   U32 enbId;
   U8 x2Connection;
   Bool isX2Connected;
   Bool isX2Reqd;
   Bool isX2ReqSent;
   Bool isAnrDetected;
   U8 enbType;
   U8 numGuGrpIds;
   WrGuGrpIdLst guGrpIdLst[16];

   CmTptAddr neighEnbAddr;
   CmTptAddr secIpAddr;
   U32 egtpTnlCntr;
   CmTimer timer;
   CmTimer enbCfgUpTm;
   U32 rstRtxCnt;
   U32 cfgUpdRtxCnt;
   U32 x2SetupRtxCnt;
   WrPlmnId plmnId;
   CmLListCp srvdCellLst;
   WrEmmEnbCfgUpd cfgUpdRtxInfo;
   U16 enbcfgTransRtxCnt;
   CmTimer enbcfgTransTmr;
   WrAlarmVal alarmVal;
   U8 enbCfgTransTriggerd;


   RgrSfrRbRange dsfrCEFreqRange;

   U8 isParallelCfgUpdate;

} WrNeighEnbCb;


typedef struct wrEmmTmrCfg
{
   U16 s1SetupTmr;
   U16 s1UpdateTmr;
   LwrUpdateRetryCount s1RetryCount;
   LwrUpdateTimeToWait s1TimeToWait;
   U16 s1MmeConfigurationTransferTmr;
   U16 s1ResetTmr;
   U16 S1ResetRetryCount;
   U16 x2SetupTmr;
   LwrUpdateTimeToWait x2SetTimeToWait;
   U16 x2UpdateTmr;
   LwrUpdateRetryCount x2UpdRetryCount;
   LwrUpdateTimeToWait x2UpdTimeToWait;
   U16 x2ResetTmr;
   U16 X2ResetRetryCount;
   U16 X2SetupRetryCount;
   U16 internalNoWaitRetryTmr;
   U32 rimOvrlTmr;
} WrEmmTmrCfg;





typedef struct _wrEmmEnbIdNode
{
   U32 peerId;
   U32 enbId;
} WrEmmEnbIdNode;

typedef struct wrUePerBsrTmr
{
   U16 prdBsrTmr;
   U16 retxBsrTmr;
} WrUePerBsrTmr;

typedef struct wrPdschDed
{
   U32 p_a;
}WrPdschDed;
typedef struct _wrPeerAbrtCfm
{
   WrMmeId mmeId;
   Bool isAbortCfmRcv;
}wrPeerAbrtCfm;
typedef struct _wrEmmCb
{
   Mem mem;
   TskInit init;
   Header lmHdr;
   UConnId s1apConId;
   U8 numCells;
   WrCellCb **cellCb;
   WrMmeCont mmeCont;
   CmHashListCp neighEnbLstCp;
   CmTptAddr datAppAddr[2];
   U32 nhuTransId;
   U32 enbId;
   WrEnbType enbType;
   WrPlmnCont plmns;
   U16 enbNameLen;
   U8 numGuGrpIds;
   WrGuGrpIdLst guGrpIdLst[16];
   U8 enbName[151];
   U32 x2apOldEnbUeIdCntr;
   U32 s1CancelTimerVal;
   U32 ueHoAttachTimerVal;




   CmTimer enbCfgWaitTmr;
   CmTimer enbCfgRspTmr;
   CmTimer enbResetRspTmr;
   U8 adminState;
   WrEmmEnbIdNode x2ApEnbIdLst[32];







   WrEnbOvldParams eNBOvldParams;
   CmTimer smplTimer;

   CmTimer eNbOvrldStatUpd;


   U32 memSample;

   U32 cpuSample;

   WrCpuParam cpuUsageparam;





   U8 maxNumOfUe;
   U16 sctpPortNumS1;


   U16 sctpPortNumX2;



   U32 bhLinkCapacity;


   U8 numOfMmePriGrps;
   WrMmeLoaddBalCfg mmeLoadBalCfg[17];
   WrEmmTmrCfg tmrCfg;
   U32 s1UStatus;



   CmTimer rrmCpuLdHystTmr;
   U32 enbCfgTransTmrVal;
   WrUePerBsrTmr uePerBsrTmrCfg;
   WrPdschDed pdschDedCfg;
   CmTimer sib8Tmr;

   WrEmmLteAdvCb lteAdvCb;


   CmHashListCp GummeiMmeCbs;
   CmHashListCp guGrupIdLst;
   WrEmmEnbCfgUpd cellInfo;
   LwrX2ConFlg x2ConFlg;
   U8 pwsEtwsCmas;
   U8 avgFreeCpuRqd;


   Bool isCnmEnabled;
   CmTimer rimOvrlTmr;

   U32 ulSrsPeriod;
   wrPeerAbrtCfm peerAbrtCfm;
   Bool isSchedEnbCfgDone;
   LwrSchedEnbCfg schedEnbCfg;
} WrEmmCb;

typedef enum _wrOamAccessBaringUpdType
{
   WR_OAM_CELL_BARING,
   WR_OAM_ENB_OVRLD_MAN,
   WR_OAM_1RTT_ACC_BARING
}WrOamAccessBaringUpdType;

typedef struct _wrOamAccessBarring
{
   U16 cellId;
   WrOamAccessBaringUpdType updType;
   union
   {
      U8 cellBarred;
      struct
      {
         U8 emergency;
         WrSib2AcBarringCfg signalling;
         WrSib2AcBarringCfg dataCall;
      } barringInfo;
      struct
      {
         U8 acBarr0to9;
         U8 acBarr10;
         U8 acBarr11;
         U8 acBarr12;
         U8 acBarr13;
         U8 acBarr14;
         U8 acBarr15;
         U8 acBarrMsg;
         U8 acBarrReg;
         U8 acBarrEmg;
      }RTT;
   }u;
}WrOamAccessBarring;





typedef struct _wrPlmnCbMmeList
{
   U32 *crntIdx;
   U32 numOfMme;
   U8 *mmeIdList;
}WrPlmnCbMmeList;

typedef struct _wrEutraNghCellModInfo
{
   U16 earfcnDl;
   U16 pci;
   U8 blackListed;
   U32 mask;
}WrEutraNghCellModInfo;



extern WrEmmCb wrEmmCb;
extern S16 wrEmmMmeBldResetAck (S1apPdu *pdu, S1apPdu **rstAckPdu);
extern S16 wrEmmMmeAddMme(WrMmeId mmeId, U32 ipAddr, U16 port);
extern S16 wrEmmMmeGetMmeByMmec(U8 mmeCode, WrMmeId *mmeId);
extern S16 wrEmmMmeGetMme(WrPlmnId plmn, U16 grp, U8 mmec, WrMmeId *mmeId);
extern S16 wrEmmMmeGrpidMmecEqual(U8 mmeId, U16 grpId, U8 mmeCode);
extern S16 wrEmmMmeSetup(WrMmeId mmeId);
extern S16 wrEmmMmeAddMme(WrMmeId mmeId, U32 ipAddr, U16 port);
extern WrHrlDecisionRet wrChkForFrbRat(WrForbRatTyp forbRatTyp, WrHoRstrctInfo *hoRstrctInfo);

extern S16 wrEmmMmeGetMmeByMmeGrpId(U32 estCause, U16 mmeGrpId, WrMmeId *mmeId);
extern S16 wrEmmMmeGetMme(WrPlmnId plmn, U16 grp, U8 mmec, WrMmeId *mmeId);

extern WrMmeCb *wrEmmMmeGetMmeByPeerId(U32 peerId);
extern WrMmeCb *wrEmmMmeGetMmeByPlmn(WrPlmnId *plmnId);
extern S16 wrEmmMmeGrpidMmecEqual(U8 mmeId, U16 grpId, U8 mmeCode);
extern S16 wrEmmMmeSetup(WrMmeId mmeId);
extern S16 wrEmmMmeSendCfgUpdate(WrMmeId mmeId);
extern S16 wrEmmMmePrcRcvdPdu(U32 peerId, S1apPdu *pdu);
extern S16 wrEmmMmePrcStaInd(SztStaInd *sztSta);


extern S16 wrEmmPlmnAddMme(WrPlmnId *plmnId, WrMmeId mmeId);
extern S16 wrEmmPlmnDelMme(WrPlmnId *plmnId, WrMmeId mmeId);
extern S16 wrEmmPlmnAddPlmn(WrPlmnInfo *plmnInfo);
extern S16 wrEmmPlmnGetMmeByPlmn(WrPlmnId *plmnId, WrMmeId *mmeId);
extern S16 wrEmmPlmnGetMme(WrPlmnId *plmn, U16 grpId, U8 mmec, WrMmeId *mmeId);
extern WrHrlDecisionRet wrMbltyRestrc
(
WrMobilityType mbltyTyp,
U32 *neighCellCb,
U32 *neighEnbCb,
U8 *hoTyp,
WrPlmnId *fnlzdPLMN,
WrHoRstrctInfo *hoRstrctInfo
);

extern Bool wrEmmChkServPlmnHoUe
(
WrCellId cellId,
WrPlmnId srvngPlmn
);

extern U8 wrEmmGetNosOfBdcstPlmn(WrCellId cellId);
extern WrEutranNeighCellCb* wrEmmGetNeighEutraCell
(
WrCellId cellId,
U32 carrFreq,
U16 pci
 );

extern Bool wrEmmPlmnPlmnsEqual
(
WrPlmnId *plmnId1,
WrPlmnId *plmnId2
);


extern S16 wrEmmPbmCellInit(WrCellCb *);
extern S16 wrEmmPbmUpdateSis(WrCellCb *, U32 , WrSibCfg *);
extern S16 wrEmmPbmSibConfig(U16 cellId);
extern S16 wrEmmPbmModifyPlmn( WrPlmnId *plmnId, Bool activate);
extern S16 wrPagHdlTmrInd(RgrTtiIndInfo *);


extern S16 wrEmmCellAdd(WrCellId cellId);


extern S16 wrEmmCellSchdCfg(WrCellId cellId);
extern S16 wrEmmCellDelSchdCfg(WrCellId cellId);
extern S16 wrEmmCellSchdReCfg(WrCellId cellId);
extern S16 wrEmmCellSchdSiCfg (RgrSiCfg *cfg, WrCellCb *cellCb);
extern S16 wrEmmCellSchdRachCfg ( RgrRachCfg *cfg, WrCellCb *cellCb);
extern S16 wrFillNhuCellCfgReq (WrCellCb *cellCb);
extern S16 wrFillNhuCellDelCfgReq (U16 cellId);
extern S16 wrFillCtfCellCfgReq (U16 cellId);
extern S16 wrFillCtfCellReCfgReq (U32 cellId);
extern S16 wrFillCtfCellDelCfgReq (U16 cellId);

extern S16 wrEmmCellCfgDam(WrCellCb *cellCb);
extern S16 wrEmmCellGetSelPlmn(WrCellId cellId, U8 selPlmnIdx, WrPlmnId **plmn);
extern S16 wrEmmCellGetSelPlmn(WrCellId cellId, U8 selPlmnIdx, WrPlmnId **plmn);
extern S16 wrEmmCellRrmCfg(WrCellCb *cellCb);
extern S16 wrEmmCellDelRrmCfg(WrCellCb *cellCb);


extern S16 wrEmmSampleData(Void);
extern S16 wrEmmUpdOvrLdStat(Void);
extern S16 wrEmmOamCfg(WrOamAccessBarring *oamParam);
extern S16 wrEmmPlmnGetMmeIdList(WrPlmnCbMmeList *wrEmmPlmnMmeLst, WrPlmnId wrEmmPlmnId);
extern S16 wrEmmSndEnCfgUpReq(WrNeighEnbCb *nghEnbCb, WrEmmEnbCfgUpd *cellInfo);
extern S16 wrEmCellSchdSiPeriodMap( U16 period, RgrSiPeriodicity *siPeriodicity);
extern S16 wrEmmCellTxPwrReCfg (U16 txType,U8 cellId, U32 transId);


extern S16 wrEmmNghEnbCfgUptTmrExpiry(WrNeighEnbCb *cb);



extern Void wrEmmAnrInitMeasNrUpdtInfo
(
   WrCellCb *cellCb
);
extern S16 wrEmmAnrProcNrUpdtInfo
(
   WrCellCb *cellCb,
   Bool isNewFreq
);
extern S16 wrEmmAnrAddEutranNr
(
   WrCellCb *cellCb,
   WrEutranNeighCellCb *newNr
);
extern S16 wrEmmAnrAddUtraNr
(
   WrCellCb *cellCb,
   WrUtraNeighCellCb *newNr
);
extern S16 wrEmmAnrAddGeranNr
(
   WrCellCb *cellCb,
   WrGeranCellCb *newNr,
   U16 bcchArfcn
);
extern Void wrEmmAnrDelEutranNr
(
   WrCellCb *cellCb,
   WrEutranNeighCellCb *nrNode
);
extern CmLList* wrEmmAnrDelFrmEutranNr
(
   WrCellCb *cellCb,
   WrEutranNeighCellCb *nrNode
);
extern CmLList* wrEmmAnrUpdInterFreqWlBlInfo
(
   WrCellCb *cellCb,
   WrEutranNeighCellCb *nrNode
);
extern Void wrEmmAnrUpdFrqTypBitMap
(
   WrCellCb *cellCb,
   WrEutranNeighCellCb *nrNode,
   Bool isNull
);

extern Void wrEmmAnrDelUtraNr
(
   WrCellCb *cellCb,
   WrUtraNeighCellCb *nrNode
);
extern Void wrEmmAnrUpdtEutranModInfo
(
   WrCellCb *cellCb,
   WrEutranNeighCellCb *modNr
);
extern Void wrEmmAnrUpdtUtranModInfo
(
   WrCellCb *cellCb,
   WrUtraNeighCellCb *modNr
);
extern Void wrEmmAnrProcEutranDfltPrdTmrExp
(
   WrEutranNeighCellCb *neighCellInfo
);

extern S16 wrEmmDelNrFrmServCellLst
(
   WrEutranNeighCellCb *neighCellCb
);
extern WrEutranNeighCellCb* wrEmmAnrGetEutranNr
(
   WrNrEutranCb *eutranCb,
   WrEutranNbrCellInfo *nrInfo
);
 WrUtraNeighCellCb* wrEmmAnrGetUtranNr
(
   WrNrUtranCb *utranCb,
   WrUtranNrInfo *nrInfo
);

extern S16 wrEmmDelNbrEnbServedCellList
(
   WrNeighEnbCb *neignEnb
);

extern S16 wrEmmGetIntraLteHoNghInfo(U16 cellId, WrHoNghInfo *hoNghInfo);
extern WrEutranNeighCellCb* wrEmmFindEutranNeighCell(U8 cellId, U16 earfcn,
                   U16 pci);
extern S16 wrEmmNghHdlLocalErrInd(CztLclErrInd *);
extern S16 wrEmmcheckActiveMmme(Void);
extern WrGeranCellCb* wrEmmGetNeighGeranCell
(
 U16 cellId,
 U16 arfcn,
 U16 bsic
);
extern WrUtraNeighCellCb* wrEmmGetNeighUtraCell
(
 U16 cellId,
 U16 arfcn,
 U16 psc,
 U8 duplexMode
);
extern S16 wrEmmGetOffsetFreqFrmArfcn ( U16 cellId, U16 arfcn, U8 *offsetFreq);

extern S16 wrEmmPrcEpochTimerExp
(
 Void *cb,
 U8 wrUmmTmrExpEvnt
);
extern S16 wrEmmPrcTriceTimerExp
(
 Void *cb,
 U8 wrUmmTmrExpEvnt
);
extern S16 wrEmmPrcCellMaxAgeTmrExp
(
Void *cb
);
extern Bool wrEmmChkTriceTmr
(
  U16 cellId
);
extern S16 wrEmmPrcSib8SchdEvnt
(
   WrCellCb *cellCb
);
 S16 wrEmmCfgAnrMeasFreqInfo
(
   WrCellCb *cellCb
);
 WrEutranNeighCellCb* wrEmmGetNeighEnbSrvdCell
(
   WrNeighEnbCb *neignEnb,
   U16 pci
);
 S16 wrEmmResetCell
(
  WrCellId cellId
);
extern S16 wrEmmRrcCellDelCfgCfm(U16 cellId);

 S16 wrEmmSchdCellReCfgCfm
(
 U32 transId,
 U8 status
);
 S16 wrEmmSchdCellDelCfgCfm
(
 U32 transId,
 U8 status
);

 S16 wrEmmAnrUpdtEutranKeyModInfo
(
 WrCellCb *cellCb,
 WrEutraNghCellModInfo *modCellInfo,
 WrEutranNeighCellCb *modNr
);


extern S16 wrGetMmeRejectStatus(U32 establishmentCause, U32 mmeId);
extern S16 wrEmmMmeEnbCfgUpdWaitTmrExp(U32 mmeId);
extern S16 wrEmmMmeEnbCfgRspTmrExp(U32 mmeId);
extern S16 wrEmmMmeResetRspTmrExp(U32 mmeId);
extern S16 wrEmmGetOvldStatus(U32 mmeId);
extern Bool wrEmmGetRelCap(U32 mmeId);
extern Bool wrEmmGetMmeStatus(U32 mmeId);
extern S16 wrEmmMmePrcErrInd(U32 peerId,S1apPdu *pdu);
extern S16 wrPwsStartPrimaryEtws ( WrCellCb *cellCb );
extern S16 wrPwsStartSecondaryEtws( WrCellCb *cellCb);
extern S16 wrPwsStartCmas( WrCellCb *cellCb);
extern S16 wrPwsStartPrimaryEtws ( WrCellCb *cellCb );
extern S16 wrPwsStartSecondaryEtws( WrCellCb *cellCb);
extern S16 wrPwsStartCmas( WrCellCb *cellCb);
extern Void wrEmmMmeBldEnbConfigTranForAllNegh ( WrCellCb *cellCb);
extern S16 wrEmmCellDedCrntiRange(U8 cellId,U16 *minVal,U16 *maxVal);
extern S16 wrEmmStartTriceTmr ( WrCellCb *cellCb);
extern S16 wrEmmMmeFillPrimaryGummei(WrGummei *gummei,U16 mmeId);
extern S16 wrEmmIsPrdAnrTmrsRunning(WrCellId cellId,Bool *running);
extern S16 wrGetMmeIdfromPlmnId(WrGummei *gummei, WrMmeId *mmeId, U32 establishCause);

extern WrPlmnCb *wrEmmPlmnGetPlmnCb(WrPlmnId *plmnId);
 S16 wrEmmCellSchdReCfgLteAdvFeatures
(
   CmLteCellId cellId,
   LwrLteAdvancedConfigTrans *lteAdvancedTrans
);



extern Bool wrEmmIsCsgCell (U16 cellId);
extern U32 wrEmmGetCsgIdFrmCellId (U16 cellId);
extern U8 wrEmmGetAccessModeFrmCellId (U16 cellId);
extern S16 wrEmmCsgNbrUpdCsgInfoFrmExtnIe (TknBStr32 *csg_Id,
      WrEutranNeighCellCb *eutranNrCellCb);
extern S16 wrUmmCsgPrntNbrCsgInfo(U16 cellId);
extern S16 wrUmmCsgPrntCellInfo(U16 cellId);
extern S16 wrEmmCsgSetNbrAccessMode (U16 cellId, U16 nbrPci,
      Bool isCsgIdPres, U8 *accessMode);
extern Bool wrEmmCsgIsReportCgiNeeded (U16 ueIdx, U8 isEvntAnr,
      WrCellCb *cellCb, WrEutranNeighCellCb *eutNbrCellCb);

extern S16 wrEmmCellSchdReCfgDynCfi(WrCellCb *cellCb);

extern S16 wrEmmSonSchdPrbCfg(WrCellCb *cellCb);



 S16 wrEmmGetCellSizeType
(
WrCellId cellId,
U8 *cellSizeType
);

 S16 wrEmmGetPeerId
(
 U32 eNodeBId,
 U32 *peerId
 );

extern S16 wrEmmTrigRirProc
(
 WrCellCb *cellCb,
 U8 reptType
);
extern S16 wrEmmRimErrInd
(
  WrRimErrInd *rimErrInd
);

extern S16 wrEmmRimInfoRsp
(
  WrEmmRimRspInfo *riInfo
);
extern S16 wrEmmRimTrigRirStop
(
  WrCellCb *cellCb
);

extern Void wrEmmDelGeranSi
(
 WrGeranCellCb *geranCellCb
);

 S16 wrEmmRimNghStateChange
(
 WrCellCb *cellCb
);

 S16 wrEmmGetTtiCnt
(
WrCellId cellId,
U32 *ttiCnt,
Bool flag
);
extern Bool wrFindRegLaiPlmnCell
(
WrRegLai *regLai,
WrUtraNeighCellCb *neighCellCb,
WrHoRstrctInfo *hoRstrctInfo
);

extern CmLListCp* wrEmmGetUtraFddFreqLst
(
WrCellId cellId
);

extern CmLListCp* wrEmmGetUtraTddFreqLst
(
WrCellId cellId
);

extern WrNrUtranFreqCb* wrEmmAnrGetFreqNode
(
U16 arfcnDl,
WrNrUtranCb *utranCb
);

extern WrNrUtranCb* wrEmmGetUtranCb
(
WrCellId cellId,
U8 duplexMode
);

extern S16 wrEmmTrigUtraRirProc
(
 CmLListCp *lst,
 U8 reptType,
 U8 *status,
 WrRimReqInfo *rimReqInfo
);

extern Bool wrEmmGetNeighUtraTddSIInfo
(
 U16 psc,
 U16 arfcn,
 U16 cellId,
 TknStrOSXL *utraSI
 );


extern S16 wrEmmCellSchdReCfgTmMode
(
WrCellCb *cellCb
);
extern Void wrEmmCheckAgeAndDeleteCell
(
WrCellCb *cellCb,
WrEutranNeighCellCb *nbrCell
);

extern S16 wrEmmStopNRTAgeTimer
(
Void
);
extern S16 wrEmmCellSchdCmdCpuOvrldReCfg
(
U16 cellId,
U8 instruction
);

extern Void wrEmmCpyMultiLSapId
(
   U8 noOfCells
);
extern Void wrFillLSapIds
(
   NhuLLyrSapIdInfo *sapIdLst,
   U8 cellId
);


extern S16 wrEmmSendSchedEnbCfg
(
   LwrSchedEnbCfg *schedEnbCfg
);

extern S16 wrEmmSchdEnbCfgCfm
(
 U32 transId,
 U8 status
);


extern S16 wrIfmSchMacCellStartReq(U32 cellId);
extern U8 wrSmDfltRlLogLvl;

extern U16 wrSmDfltServingCellDLCarrierFreq[12];


extern CtfBandwidth wrSmDfltCellDlBW[12];

extern U8 wrSmTddSubframeConfig;
extern U8 wrSmTddSpecialSubframeConfig;



extern CtfPhichDuration wrSmDfltPhichDur;
extern CtfPhichResource wrSmDfltPhichRes;


extern U32 wrSmDfltTenbSocketStats;
extern U32 wrSmDfltTenbFileStats;
extern U32 wrSmDfltTenbConsoleStats;
extern U32 wrSmDfltTenbStatsPeriodicity;
extern U32 wrSmDfltTenbStatsSocketPort;
extern U32 wrSmDfltTenbIpAddr;




extern U16 wrSmDfltPagDrx;
extern U16 wrSmDfltCellRsvdForOperuser;
extern U16 wrSmDfltCellBarred;
extern U16 wrSmDfltIntraFreqRese;
extern U16 wrSmDfltCellRsrvExtn;
extern S16 wrSmDfltqRxlevmin;
extern U16 wrSmDfltSubframeAssignment;
extern U16 wrSmDfltSpecialSubfrmPatterns;
extern U16 wrSmDfltSiPeriodicity[];
extern U16 wrSmDfltSiMapInfoCnt[];

extern U16 wrSmDfltSiMapInfoVal[];
extern U8 wrSmDfltNumSi;
extern U8 wrSmDfltModPrd;
extern U16 wrSmDfltSiWindowLength;
extern U16 wrSmDfltSystemInfoValueTag;

extern U8 wrSmDfltNumMncDigits;
extern U8 wrSmDfltPlmn1Mcc0;
extern U8 wrSmDfltPlmn1Mcc1;
extern U8 wrSmDfltPlmn1Mcc2;
extern U8 wrSmDfltPlmn1Mnc0;
extern U8 wrSmDfltPlmn1Mnc1;
extern U8 wrSmDfltPlmn1Mnc2;



extern U8 wrSmDfltPreferredHoTarget;
extern S16 wrSmDfltMaxCsgMembers;
extern Bool wrSmDfltIsCsgMbrshpDetermndLcly;
extern U8 wrSmDfltNonCsgUeAccDcsn;

extern U16 wrSmDfltMaxCsgUEs;
extern U16 wrSmDfltMaxNonCsgUEs;
extern U8 wrSmDfltMinDlResNonCsg;
extern U8 wrSmDfltMinUlResNonCsg;


extern U8 wrSmDfltPlmn2Mcc0;
extern U8 wrSmDfltPlmn2Mcc1;
extern U8 wrSmDfltPlmn2Mcc2;
extern U8 wrSmDfltPlmn2Mnc0;
extern U8 wrSmDfltPlmn2Mnc1;
extern U8 wrSmDfltPlmn2Mnc2;


extern U8 wrSmDfltnumSi;


extern U16 wrSmDfltCellRsrvdForOperUse;
extern U16 wrSmDfltCellBarred;
extern U16 wrSmDfltIntraFreqResel;
extern U16 wrSmDfltCSFInd;

extern S16 wrSmDlftqRxLevMin;
extern U16 wrSmDfltqRxlevminoffset;


extern U8 wrSmDfltThresRSRQ;
extern U8 wrSmDfltSiWinSize;
extern U16 wrSmDfltAddSpectEmn;
extern U16 wrSmDfltSib10RptPrd;
extern U16 wrSmDfltSib10NumBroadCast;
extern U8 wrSmDfltWarnSegSize;

extern U8 wrSmDfltACBarrEmergency;
extern U8 wrSmDfltACBarrNormal;
extern U8 wrSmDfltMOACBarrInfoPres;
extern U8 wrSmDfltDOACBarrInfoPres;
extern U8 wrSmDfltACBarrInfoPres;
extern U8 wrSmDfltVDACBarrInfoPres;
extern U8 wrSmDfltVOACBarrInfoPres;

extern Bool wrSmDfltMoSigAcBarringEnable;
extern Bool wrSmDfltMoDataAcBarringEnable;
extern U8 wrSmDfltacBarringFactor;
extern U16 wrSmDfltacBarringTime;
extern U8 wrSmDfltacBarringAC11;
extern U8 wrSmDfltacBarringAC12;
extern U8 wrSmDfltacBarringAC13;
extern U8 wrSmDfltacBarringAC14;
extern U8 wrSmDfltacBarringAC15;


extern U16 wrSmDfltModPeriodCoeff;


extern CtfSCSpacing wrSmDfltScSpacing;
extern CtfCPCfg wrSmDfltCycPfx;


extern S8 wrSmDfltRefSignalPower;
extern U16 wrSmDfltPDSCHCfgPB;



extern S16 wrSmDfltMspdDbUnit;




extern S8 wrSmDfltRefSigPwr;
extern S16 wrSmDfltPilotSigPwr;
extern S16 wrSmDfltPriSigPwr;
extern S16 wrSmDfltSecSigPwr;

extern S8 wrSmDfltLowRefSigPwr;
extern S16 wrSmDfltLowPilotSigPwr;
extern S16 wrSmDfltLowPriSigPwr;
extern S16 wrSmDfltLowSecSigPwr;




extern U16 wrSmDfltRootSequenceIdx;
extern U16 wrSmDfltHighSpeedFlag;
extern U16 wrSmDfltZeroCorrelZoneCfg;
extern U16 wrSmDfltPrachFreqOffset;

extern U16 wrSmDfltPrachMaskIdx;



extern CtfPucchDeltaShift wrSmDfltPUCCHDeltaShift;
extern U16 wrSmDfltPUCCHnRBCQI[12];
extern U16 wrSmDfltPUCCHnCSAN[12];
extern U8 wrSmDfltPUCCHFixBw;
extern U8 wrSmDfltPUCCHCyclShift;
extern U8 wrSmDfltMaxPucchRbs[12];

extern U16 wrSmDfltNSB[12];
extern CtfPuschHoppingMode wrSmDfltHoppingMode[12];
extern U16 wrSmDfltPuschHoppingOff[12];
extern U16 wrSmDfltEnable64QAM[12];
extern U16 wrSmDfltGroupHoppingEnabled[12];
extern U16 wrSmDfltSeqHoppingEnabled[12];
extern U16 wrSmDfltGroupAssignPUSCH[12];
extern U16 wrSmDfltCyclicShift[12];




extern U16 wrSmDfltNumberOfRaPreambles;
extern U16 wrSmDflSizeOfRaPreamblesGroupA;
extern U16 wrSmDfltMessageSizeGroupA;
extern U16 wrSmDfltMessagePowerOffsetGroupB;
extern U16 wrSmDfltPowerRampingStep;
extern U16 wrSmDfltPreambleInitRecvdTgtPwr;
extern U16 wrSmDfltPreambleTransMax;
extern U16 wrSmDfltRaRspWindowSize;
extern U16 wrSmDfltMacContentResTmr;
extern U16 wrSmDfltMaxHARQMsg3Tx;
extern U8 wrSmDfltPreambleFormat;
extern U16 wrSmDfltRaOccasionSize;
extern U16 wrSmDfltRaOccasionSfnEnum;
extern U16 wrSmDfltRaOccasionSubFrmNum0;
extern U16 wrSmDfltRACHCfgMsgSizeGrpA;
extern U16 wrSmDfltPrachResource;




extern U16 wrSmDfltSrsBandwidthCfg;
extern U16 wrSmDfltSrsSubfrmCfg;
extern U16 wrSmDfltAckNackSrsSimTrns;
extern U16 wrSmDfltSrsMaxUpPts;
extern Bool wrSmEnableSrs;
extern U16 wrSmDfltSrsUeBandwidthCfg;
extern U16 wrSmDfltSrsUEHoppingBandwidth;

extern U16 wrSmDfltSrsCfgPrd;

extern U16 wrSmDfltULPwrCtrlAlpha;
extern S16 wrSmDfltP0NominalPUCCH;
extern S16 wrSmDfltP0NominalPUSCH;
extern U16 wrSmDfltDeltaFPUCCHFormat1;
extern U16 wrSmDfltDeltaFPUCCHFormat1b;
extern U16 wrSmDfltDeltaFPUCCHFormat2;
extern U16 wrSmDfltDeltaFPUCCHFormat2a;
extern U16 wrSmDfltDeltaFPUCCHFormat2b;
extern S16 wrSmDfltUlDeltaPreambleMsg3;
extern U16 wrSmDfltUlCyclicPrefixLength;


extern U16 wrSmDfltTmrsAndConstsT300;
extern U16 wrSmDfltTmrsAndConstsT301;
extern U16 wrSmDfltTmrsAndConstsT304;
extern U16 wrSmDfltTmrsAndConstsT310;
extern U16 wrSmDfltTmrsAndConstsN310;
extern U16 wrSmDfltTmrsAndConstsT311;
extern U16 wrSmDfltTmrsAndConstsN311;


extern U16 wrSmDfltUlCarrierFreq;
extern U16 wrSmDfltUlBandwidth;
extern U16 wrSmDfltDlBandwidth;
extern U16 wrSmDfltAddSpectEmn;
extern U16 wrSmDfltTimeAlignTmrCmn;


extern U8 wrSmDfltMacInst;
extern U8 wrSmDfltMaxUePerDlSf;
extern U8 wrSmDfltMaxUlBwPerUe;
extern U16 wrSmDfltMaxDlBwPerUe;
extern U8 wrSmDfltMaxDlRetxBw;
extern U16 wrSmDfltNumOfTxAnt;
extern U16 wrSmDfltIsCycPrefULExt;
extern U16 wrSmDfltIsCycPrefDLExt;
extern U16 wrSmDfltCellModSchm;

extern U8 veUlDlCfgIdx;
extern U8 veSpclSfCfgIdx;
extern U8 wrSmDfltDLFSSchdTyp;
extern Bool wrSmDfltTmAutoConfig;
extern U8 wrSmDfltPreferredTm;
extern U8 wrSmDfltPfsDlTptCoefficient;
extern U8 wrSmDfltPfsDlFairCoefficient;
extern U8 wrSmDfltPfsUlTptCoefficient;
extern U8 wrSmDfltPfsUlFairCoefficient;
extern U32 wrSmDfltDlQciWgt[9];
extern U32 wrSmDfltUlQciWgt[9];
extern U8 wrSmDfltTransModeUse;
extern U8 wrSmDfltMaxDlHqTx;
extern U8 wrSmDfltMaxMsg4HqTx;

extern U8 wrSmDfltTrgUlCqi;
extern U16 wrSmDfltBcchPchRaCodeRate;
extern U16 wrSmDfltPdcchCodeRate;
extern U8 wrSmDfltDlCmnCodRateCcchCqi;
extern U8 wrSmDfltPuschSubBndStrt;
extern U8 wrSmDfltPuschNoSubbnds;
extern U8 wrSmDfltPuschSubBandSz;
extern U8 wrSmDfltPuschSubBandDmrs;
extern U8 wrSmDfltULCmnCodRateCcchCqi;
extern U8 wrSmDfltThresholdCqi;
extern U8 wrSmDfltDLTotalBw;
extern U8 wrSmDfltULTotalBw;
extern U16 wrSmDfltNgEnum;
extern U8 wrSmDfltIsDurExt;
extern U8 wrSmDfltPUCCHResSz;
extern U16 wrSmDfltN1PucchAn;
extern U8 wrSmDfltDeltaShift;
extern U8 wrSmDfltPUCCHCycShift;
extern U16 wrSmDfltSrsCfgPrdEnum;
extern U16 wrSmDfltSrsBwEnum;
extern U8 wrSmDfltSrsSubFrameCfg;
extern U8 wrSmDfltPreambleFrmt;
extern U8 wrSmDfltRaWinSz;
extern U8 wrSmDfltRaOccSz;
extern U16 wrSmDfltRaOccSfnEnum;
extern U8 wrSmDfltMaxMsg3Tx;
extern U8 wrSmDfltNumRaPreamble;
extern U8 wrSmDfltSzRaPreambleGrpA;
extern U16 wrSmDfltMsgSzGrpA;

extern U8 wrSmDfltSiWinSize;
extern U8 wrSmDfltRetxCnt;
extern S8 wrSmDfltP0NominalPusch;
extern U16 wrSmDfltUlPwrCfgAlpha;
extern S8 wrSmDfltP0NominalPucch;
extern S8 wrSmDfltDeltaPreambleMsg3;
extern U16 wrSmDfltPucchPwrFmt3RntiSt;
extern U16 wrSmDfltPucchPwrFmt3RntiSz;
extern U16 wrSmDfltPucchPwrFmt3aRntiSt;
extern U16 wrSmDfltPucchPwrFmt3aRntiSz;
extern U16 wrSmDfltPuschPwrFmt3RntiSt;
extern U16 wrSmDfltPuschPwrFmt3RntiSz;
extern U16 wrSmDfltPuschPwrFmt3aRntiSt;
extern U16 wrSmDfltPuschPwrFmt3aRntiSz;
extern U8 wrSmDfltPucchPwrFmt3AEnable;
extern U8 wrSmDfltPuschPwrFmt3AEnable;
extern U8 wrSmDfltisUlGrpPwrCntrlPucchEnable;
extern U8 wrSmDfltisUlGrpPwrCntrlPuschEnable;
extern U8 wrSmDfltPuschCfgNoSubBands;
extern U8 wrSmDfltPuschCfgIsIntraHop;
extern U8 wrSmDfltPuschCfgHopOffst;
extern U8 wrSmDfltPreambleSetCfgPres;
extern U8 wrSmDfltPreambleSetCfgStart;
extern U8 wrSmDfltPreambleSetCfgSz;
extern U8 wrSmDfltPRACHNumRes;
extern U8 wrSmDfltNumCmnLcs;
extern U8 wrSmDfltGrpPwrTpcIdx;



extern U16 wrSmDfltCiphAlgo;
extern U16 wrSmDfltIntgProtAlgo;




extern U16 wrSmDfltSrbPollRetrans;
extern U16 wrSmDfltSrbPollPdu;
extern U16 wrSmDfltSrbPollByte;
extern U16 wrSmDfltSrbMaxReTxThresh;
extern U16 wrSmDfltSrbTStatProhibit;

extern U16 wrSmDfltMacCfgMaxHARQTx;
extern U16 wrSmDfltMacCfgPeriodicBSRTimer;
extern U16 wrSmDfltMacCfgRetxBSRTimer;
extern U8 wrSmDfltMacCfgTtiBundling;

extern Bool wrSmDfltIsCnmEnabled;
extern U8 wrSmDfltTddBoardType;
extern U16 wrSmDfltAnrDrxLongCycle;
extern U16 wrSmDfltAnrDrxOnDurationTmr;

extern U16 wrSmDfltAnrDrxInActivTmr;

extern U16 wrSmDfltMacCfgTimeAligTmrDed;

extern U16 wrSmDfltMacCfgPeriodicPHR_Timer;
extern U16 wrSmDfltMacCfgProhibitPHRTimer;
extern U16 wrSmDfltMacCfgDlPathlossChange;

extern U16 wrSmDfltDedPhyCfgPa;




extern S16 wrSmDfltP0UEPUSCH;
extern U16 wrSmDfltDeltaMCSEnabled;
extern U8 wrSmDfltAccumulationEnabled;
extern S16 wrSmDfltP0UEPUCCH;
extern U16 wrSmDfltpSRSOffset;
extern U16 wrSmDfltCqiPmiConfigIdx;
extern U16 wrSmDfltFilterCoef;

extern U16 wrSmDfltBetaOffACKIdx;
extern U16 wrSmDfltBetaOffRIIdx;
extern U16 wrSmDfltBetaOffCQIIdx;

extern U16 wrSmDfltCqiRprtModeAperiodic;
extern U16 wrSmDfltCqiNomPDSCHRSEPREoff;
extern U16 wrSmDfltCqiPUCCHResIdx;
extern U16 wrSmDfltRiConfigIdx;
extern U8 wrSmDfltSimultAckNackAndCQI;

extern U16 wrSmDfltDsrTransMax;


extern U16 wrSmDfltSrsBandwidth;
extern U16 wrSmDfltSrsHoppingBw;
extern U16 wrSmDfltFreqDomainPos;
extern U8 wrSmDfltDuration;
extern U16 wrSmDfltSrsConfigIdx;
extern U16 wrSmDfltTransmissionComb;
extern U16 wrSmDfltDedCyclicShift;


extern U16 wrSmDfltSrPUCCHResIdx;
extern U16 wrSmDfltDsrTransMax;


extern U16 wrSmDfltTransMode;


extern U16 wrSmDfltDiscardTimer;
extern U8 wrSmDfltStatusReportReqd;


extern U16 wrSmDfltDrbTPollRetx;
extern U16 wrSmDfltDrbTPollPDU;
extern U16 wrSmDfltDrbTPollByte;
extern U16 wrSmDfltDrbTMaxRetxThres;
extern U16 wrSmDfltDrbTStatProh;


extern CmLteUeCategory wrSmDfltUECategory;
extern CtfPdschPaParam wrSmDfltPdschPA;
extern CtfPucchRepFactor wrSmDfltRepFact;
extern U16 wrSmDfltN1PUCCHRep;
extern U16 wrSmDfltFormatInd;
extern U16 wrSmDfltSubBandK;
extern CtfUeTxAntMode wrSmDfltAntInfoTxMode;

extern CtfUeTxAntSelectType wrSmDfltAntennaSel;



extern U16 wrSmDfltTxModeEnum;
extern U16 wrSmDfltAPrdModeEnum;
extern U16 wrSmDfltPrdModeEnum;
extern U16 wrSmDfltPrdicityEnum;
extern U8 wrSmDfltSubframeOffst;
extern S8 wrSmDfltCqiOffst[12];
extern S8 wrSmDfltCqiCfgk[12];
extern U16 wrSmDfltCqiPmiCfgIdx[12];
extern U8 wrSmDfltMaxUlHqTx;
extern U8 wrSmDfltDeltaHqOffst;
extern U8 wrSmDfltTaTmrCmn;
extern U8 wrSmDfltTaTmrDed;
extern Bool wrSmDfltTaTmrPres;
extern U8 wrSmDfltUePrdDlCqiK;
extern U8 wrSmDfltUeUlPwrTrgCqi[12];
extern U8 wrSmDfltAckNackRepFactor;

extern U32 wrSmDfltUeBr;
extern U32 wrSmDfltQci;
extern U32 wrSmDfltDlQosGbr;
extern U32 wrSmDfltDlQosMbr;
extern Bool wrSmDfltRiCfgPres;
extern U32 wrSmDfltRiCfgIndx;
extern U32 wrSmDfltAntCmnInfoPorts;
extern Bool veCodeBookRstnPres;
extern U32 wrPmiBitMap0;
extern U32 wrPmiBitMap1;



extern U32 wrSmDfltS3nCellChangeMedium;
extern U32 wrSmDfltS3nCellChangeHigh;
extern U32 wrSmDfltS3sNonIntraSearch;
extern U32 wrSmDfltS3ThreshServingLow;
extern U32 wrSmDfltS3CellReselectionPriority;
extern U32 wrSmDfltS3qRxLevMin;
extern U32 wrSmDfltS3pMax;
extern U32 wrSmDfltS3sIntraSearch;
extern U32 wrSmDfltS3AllowedMeasBandwidth;
extern U32 wrSmDfltS3PresenceAntennaPort1;
extern U8 wrSmDfltS3NeighCellCfg;
extern U32 wrSmDfltS3tReselectionEUTRA;

extern U32 wrSmDfltS5DlCarrierFreq;
extern S32 wrSmDfltS5QRxLevMin;
extern U32 wrSmDfltS5InterFreqtReselection;
extern U32 wrSmDfltS5ThreshXHigh;
extern U32 wrSmDfltS5ThreshXLow;
extern U32 wrSmDfltS5AllowedMeasBandwidth;
extern U32 wrSmDfltS5PresenceAntennaPort1;
extern U32 wrSmDfltS5CellReselectionPriority;
extern U8 wrSmDfltS5NeighCellCfg;
extern U32 wrSmDfltS5QOffsetFreq;
extern U32 wrSmDfltCellIdentity;
extern U8 wrSmDfltNumMncDigits;
extern U8 wrSmDfltNumPlmn;
extern U8 wrSmDfltPlmn1Mcc0;
extern U8 wrSmDfltPlmn1Mcc1;
extern U8 wrSmDfltPlmn1Mcc2;
extern U8 wrSmDfltPlmn1Mnc0;
extern U8 wrSmDfltPlmn1Mnc1;
extern U8 wrSmDfltPlmn1Mnc2;

extern U8 wrSmDfltPlmn2Mcc0;
extern U8 wrSmDfltPlmn2Mcc1;
extern U8 wrSmDfltPlmn2Mcc2;
extern U8 wrSmDfltPlmn2Mnc0;
extern U8 wrSmDfltPlmn2Mnc1;
extern U8 wrSmDfltPlmn2Mnc2;
extern U16 wrSmDfltTac[12];
extern U32 wrSmDfltPhysCellId[12];


extern U8 wrSmDfltnumSi;
extern U8 wrSmDfltNumNrFreq[12];
extern U16 wrSmDfltNoOfGrp;
extern Bool wrSmDfltSecEnable;
extern U32 wrSmDfltNumCells;
extern U32 wrSmDfltNumNrEnb;


extern U8 wrSmDfltqHyst;
extern U8 wrSmDfltSfMed;
extern U8 wrSmDfltSfHigh;
extern U8 wrSmDfltTEval;
extern U8 wrSmDfltTHyst;
extern U16 wrSmDfltUlEarFcn[12];


extern U8 wrSmDfltAmRlcSrbmaxRetxThresh;
extern U8 wrSmDfltAmRlcDrbmaxRetxThresh;
extern U16 wrSmDfltAmRlcSrbmaxpollByte;
extern U16 wrSmDfltAmRlcDrbmaxpollByte;
extern U16 wrSmDfltAmRlcSrbpollPdu;
extern U16 wrSmDfltAmRlcDrbpollPdu;
extern U16 wrSmDfltAmRlcSrbtPollRetx;
extern U16 wrSmDfltAmRlcDrbtPollRetx;
extern U8 wrSmDfltUmRlcsnFieldLen;


extern U32 wrSmDfltAnrEnbCfgTmrVal;


extern U8 wrSmDfltAmRlcSrbtStatusProh;
extern U8 wrSmDfltAmRlcDrbtStatusProh;

extern U8 wrSmDfltDlSrbtReordring;
extern U8 wrSmDfltDlDrbtReordring;
extern U8 wrSmDfltUlSrbtReordring;
extern U8 wrSmDfltUlDrbtReordring;






extern U32 wrSmNumofEaid;
extern U32 wrSmUlSrsPeriod;






typedef struct wrRlcUmModeUl
{
   U8 snFldLen;
   U32 tReordering;
} WrRlcUmModeUl;
typedef struct wrRlcUmModeDl
{
   U8 snFldLen;
   U32 tReordering;
} WrRlcUmModeDl;

typedef struct wrRlcUmMode
{
   WrRlcUmModeUl ul;
   WrRlcUmModeDl dl;
} WrRlcUmMode;

typedef struct wrRlcAmModeUl
{
   U32 statusProhTmr;
   U32 reorderingTmr;
   U32 pollByte;
   U32 pollPdu;
   U32 pollRetxTmr;
   U32 maxRetxThrsh;
   U32 pbr;
   U32 priority;
   U32 bucketSizeDur;
   U32 lcg;
} WrRlcAmModeUl;

typedef struct wrRlcAmModeDl
{
   U32 statusProhTmr;
   U32 reorderingTmr;
   U32 pollByte;
   U32 pollPdu;
   U32 pollRetxTmr;
   U32 maxRetxThrsh;
} WrRlcAmModeDl;

typedef struct wrRlcAmMode
{
   WrRlcAmModeUl ul;
   WrRlcAmModeDl dl;
} WrRlcAmMode;



typedef struct wrPdcpCfgParams
{
   U32 discardTimer;
   U32 fwdEndTimer;
   U32 statusRprtReqd;
   U32 hdrCompress;
   U32 cfmReqrd;
   U32 pdcpSnSize;
} WrPdcpCfgParams;

typedef struct wrRlcCfgParams
{
   union
   {
      WrRlcUmMode um;
      WrRlcAmMode am;
   } u;
} WrRlcCfgParams;

typedef struct wrLchCfgParams
{
   U8 priority;
   U8 bitRate;
   U8 bucketSizeDur;
   U8 lchGrp;
} WrLchCfgParams;

typedef struct wrRabCfgParams
{
   U8 qciSupported;
   U8 rlcMode;
   U8 rlcDir;
   U16 delayBudget;
   WrRlcCfgParams rlcParams;
   WrPdcpCfgParams pdcpParams;
   WrLchCfgParams lchParams;
   U16 dscp;
   U16 port;
} WrRabCfgParams;
typedef struct wrPrioInfoPerRb {
   U8 lchGrp;
   U8 lchPriority;
   U32 pbr;
   U32 bucketSizeDur;
} WrPrioInfoPerRb;

typedef struct wrPrioInfo {
   WrPrioInfoPerRb srb[2];
   WrPrioInfoPerRb drb[9 +1];
} WrPrioInfo;

extern WrPrioInfo wrSmDfltPrioInfoTbl;




extern U32 wrSmDfltNeighEnbID[2];
extern U8 wrSmDfltNeighEnbIndex[5];
extern U8 wrSmDfltNeighEnbType;


extern U8 wrSmDfltNeEnbNumMncDigits;
extern U8 wrSmDfltNeEnbPlmn1Mcc0[32];
extern U8 wrSmDfltNeEnbPlmn1Mcc1[32];
extern U8 wrSmDfltNeEnbPlmn1Mcc2[32];
extern U8 wrSmDfltNeEnbPlmn1Mnc0[32];
extern U8 wrSmDfltNeEnbPlmn1Mnc1[32];
extern U8 wrSmDfltNeEnbPlmn1Mnc2[32];

extern U8 wrSmDfltNeEnbIPType;

extern S8 *wrSmDfltNeEnbIP[2];

extern U8 wrSmDfltNeEnbState;

extern LwrX2ConFlg wrSmDfltX2ConFlg;

extern U8 wrSmDfltNeEnbNoGrpID;
extern U32 wrSmDfltNeEnbGrpIDPLmn;
extern U16 wrSmDfltNeEnbMMEGrpID;




extern U8 wrSmDfltMmeIndex;
extern U8 wrSmDfltMmeIPType;
extern U16 wrSmDfltMmePort;
extern S8 *wrSmDfltMmeIP;

extern U8 wrSmDftMmeNoPlmn;

extern U8 wrSmDftMmeNoGID;
extern U16 wrSmDfltMmeGID;

extern U8 wrSmDfltMmeNoCode;
extern U16 wrSmDfltMmeCode;

extern U8 wrSmDfltMmeState;
extern U8 wrSmDfltMmeAdminState;




extern U8 wrSmDfltMaxNoUE;
extern U8 wrSmDfltEnbNoGrp;


extern U8 wrSmDfltEnbType;
extern U16 wrSmDfltEnbPort;
extern U16 wrSmSctpPort;

extern U32 wrSmDfltEnbCfgTransTmrVal;
extern U8 wrSmDfltEnbNoPlmn;
extern U8 wrSmDfltNoMME;



extern U16 wrSmDfltEartcnNrDLEarfcn[3];
extern U8 wrSmDfltNeigCellNum[5];
extern U8 wrSmDfltNriIndex[5];
extern U32 wrSmDfltCid;
extern U16 wrSmDfltNeighCellID;
extern U8 wrSmDfltCIO;
extern U8 wrSmDfltNeighCellNoPlmn;
extern U8 wrSmDfltNeighNoOfAnt;
extern U16 wrSmDfltNeighCellPci[3];
extern U16 wrSmDfltNeighCellTAC[3];
extern U8 wrSmDfltQoff;
extern U8 wrSmDfltNeighBlockedList;
extern U16 wrSmDfltDlEarFcn[3];
extern Bool wrSmDfltEutranNrIsRemAllowed;
extern Bool wrSmDfltEutranNrIsHOAllowed;
extern U8 wrSmDfltEutranNrCurRank;
extern U8 wrSmDfltEutranNrPrevRank;






extern U32 wrSmDfltS3nCellChangeMedium;
extern U32 wrSmDfltS3nCellChangeHigh;
extern U32 wrSmDfltS3sNonIntraSearch;
extern U32 wrSmDfltS3ThreshServingLow;
extern U32 wrSmDfltS3CellReselectionPriority;
extern U32 wrSmDfltS3qRxLevMin;
extern U32 wrSmDfltS3pMax;
extern U32 wrSmDfltS3sIntraSearch;
extern U32 wrSmDfltS3AllowedMeasBandwidth;
extern U32 wrSmDfltS3PresenceAntennaPort1;
extern U8 wrSmDfltS3NeighCellCfg;
extern U32 wrSmDfltS3tReselectionEUTRA;
extern U8 wrSmDfltqHyst;
extern U8 wrSmDfltSfMed;
extern U8 wrSmDfltSfHigh;
extern U8 wrSmDfltTEval;
extern U8 wrSmDfltTHyst;


extern U32 wrSmDfltCsfbTmrVal;
extern U8 wrSmDfltReason;
extern U32 wrSmDfltThresRSRP1;
extern U32 wrSmDfltThresRSRQ1;
extern U32 wrSmDfltThresRSRP2;
extern U32 wrSmDfltThresRSRQ2;
extern U32 wrSmDfltA5ThresRSRP1;
extern U32 wrSmDfltA5ThresRSRP2;
extern U8 wrSmDfltArpForEmerServ;
extern U8 wrSmDfltTricePrdIntv;
extern U32 wrSmDfltEpocTmrVal;
extern U8 wrSmDfltAnrCelValidAge;
extern S16 wrSmDfltUtraTddB2ThresRSCP;
extern U16 wrSmDfltUtraB2ThresEcNo;
extern U32 wrSmDfltUtraB2ThresRSRQ1;
extern U32 wrSmDfltHysteresis;
extern U32 wrSmDfltTimeToTrig;
extern U8 wrSmDfltTrigQty;
extern U8 wrSmDfltRptQty;
extern U8 wrSmDfltMaxRptCells;
extern U32 wrSmDfltRptInterval;
extern U32 wrSmDfltRptAmount;
extern S32 wrSmDfltOffset;
extern U8 wrSmDfltRptOnLeave;
extern U8 wrSmDfltPurpose;
extern U8 wrSmDfltCellType;
extern U32 wrSmDfltCdmaThres1;
extern U32 wrSmDfltCdmaHysteresis;
extern U32 wrSmDfltCdmaTimeToTrig;
extern U8 wrSmDfltCdmaMaxRptCells;
extern U32 wrSmDfltCdmaRptInterval;
extern U32 wrSmDfltCdmaRptAmount;
extern U8 wrSmDflddtPurpose;
extern U32 wrSmDfltCdmaThresRSRP1;
extern U32 wrSmDfltCdmaThresRSRQ1;
extern U8 wrSmDfltTimeToTrigSfMedium;
extern U8 wrSmDfltTimeToTrigSfHigh;
extern U16 wrSmDfltTEvalulation;
extern U16 wrSmDfltTHystNormal;
extern U16 wrSmDfltNCellChangeMedium;
extern U16 wrSmDfltNCellChangeHigh;

extern U8 wrSmDfltRsrpFltrCoeff;
extern U8 wrSmDfltRsrqFltrCoeff;
extern U8 wrSmDfltMeasQtyCDMA2k;
extern U32 wrSmDfltGapPatForInterRAT;
extern U8 wrSmDfltPreRegAllowed;
extern U8 wrSmDfltPreRegZoneId;
extern U8 wrSmDfltNumOf2ndPreRegZoneIdList;
extern U8 wrSmDfltSecondaryPreRegZoneId1;
extern U8 wrSmDfltSecondaryPreRegZoneId2;

extern U8 wrSmDfltNumofNrFreq;

extern U32 wrSmDfltReCfgType;
extern U8 wrSmDfltStatus;
extern U8 wrSmDfltPriority;
extern S8 wrSmDfltQRxLevMin;
extern Bool wrSmDfltPMaxUsage;
extern S8 wrSmDfltPMax;
extern U8 wrSmDfltTReselection;
extern Bool wrSmDfltSfUsage;
extern U8 wrSmDfltTReselectionSFMed;
extern U8 wrSmDfltTReselectionSFHigh;
extern U8 wrSmDfltSIntraSearch;
extern U8 wrSmDfltSNonIntraSearch;
extern U8 wrSmDfltServThresholdLow;
extern U8 wrSmDfltThreshXHigh;
extern U8 wrSmDfltThreshXLow;
extern U8 wrSmDfltMeasBandwidth;
extern Bool wrSmDfltPresAntennaPort1;
extern U8 wrSmDfltNeighCellCfg;
extern U8 wrSmDfltsSearchPRel9;
extern U8 wrSmDfltsSearchQRel9;
extern S8 wrSmDfltDualMinRel9;
extern U8 wrSmDfltReselecThreshQRel9;
extern U8 wrSmDfltThreshXHighQR9;
extern U8 wrSmDfltThreshXLowQR9;

extern U8 wrSmDfltBandClass;
extern U16 wrSmDfltArfcn;
extern U8 wrSmDfltSearchRate;
extern S8 wrSmDfltOffsetFreq;
extern U16 wrSmDfltAnrUeSearchRate1xRTT;


extern U8 wrSmDflt1XRTT;
extern U8 wrSmDfltNumBandClass;
extern U8 wrSmDfltBandClsReCfgType;
extern U8 wrSmDfltBandClsStatus;
extern U8 wrSmDfltBandClass;
extern U8 wrSmDfltBandClsCellReSelPri;
extern U8 wrSmDfltBandClassThresHigh;
extern U8 wrSmDfltBandClassThresLow;
extern U8 wrSmDfltHrpda;


extern U8 wrSmDfltCdma1xNeighFreqReCfgType;
extern U8 wrSmDfltCdma1xSrchWindSize;
extern S8 wrSmDfltCdma1xOffsetFreq;


extern Bool wrSmDfltCdma1xSidIncl;
extern U16 wrSmDfltCdma1xSid;
extern Bool wrSmDfltCdma1xNidIncl;
extern U16 wrSmDfltCdma1xNid;
extern Bool wrSmDfltCdma1xMultSidsIncl;
extern Bool wrSmDfltCdma1xMultSids;
extern Bool wrSmDfltCdma1xMultNidsIncl;
extern Bool wrSmDfltCdma1xMultNids;
extern Bool wrSmDfltCdma1xRegZoneIncl;
extern U16 wrSmDfltCdma1xRegZone;
extern Bool wrSmDfltCdma1xTotalZonesIncl;
extern U8 wrSmDfltCdma1xTotalZones;
extern Bool wrSmDfltCdma1xZoneTimerIncl;
extern U8 wrSmDfltCdma1xZoneTimer;
extern Bool wrSmDfltCdma1xPktZoneIdIncl;
extern U8 wrSmDfltCdma1xPktZoneId;
extern Bool wrSmDfltCdma1xPzIdHysParamIncl;
extern Bool wrSmDfltCdma1xPzHystEnabled;
extern Bool wrSmDfltCdma1xPzHystInfoIncl;
extern Bool wrSmDfltCdma1xPzHystListLen;
extern U8 wrSmDfltCdma1xPzHystActTimer;
extern U8 wrSmDfltCdma1xPzHystTimerMul;
extern U8 wrSmDfltCdma1xPzHystTimerExp;
extern Bool wrSmDfltCdma1xPRevIncl;
extern U8 wrSmDfltCdma1xPRev;
extern Bool wrSmDfltCdma1xMinPRevIncl;
extern U8 wrSmDfltCdma1xMinPRev;
extern Bool wrSmDfltCdma1xNegSlotCycIndxSupIncl;
extern Bool wrSmDfltCdma1xNegSlotCycIndxSup;
extern Bool wrSmDfltCdma1xEncModeIncl;
extern U8 wrSmDfltCdma1xEncMode;
extern Bool wrSmDfltCdma1xEncSupIncl;
extern Bool wrSmDfltCdma1xEncSup;
extern Bool wrSmDfltCdma1xSigEncSupIncl;
extern U8 wrSmDfltCdma1xSigEncSup;
extern Bool wrSmDfltCdma1xMsgIntSupIncl;
extern Bool wrSmDfltCdma1xMsgIntSup;
extern Bool wrSmDfltCdma1xSigIntSupINCLIncl;
extern Bool wrSmDfltCdma1xSigIntSupINCL;
extern Bool wrSmDfltCdma1xSigIntSupIncl;
extern U8 wrSmDfltCdma1xSigIntSup;
extern Bool wrSmDfltCdma1xAuthIncl;
extern U8 wrSmDfltCdma1xAuth;
extern Bool wrSmDfltCdma1xMaxNumAltoSoIncl;
extern U8 wrSmDfltCdma1xMaxNumAltoSo;
extern Bool wrSmDfltCdma1xUseSyncIdIncl;
extern Bool wrSmDfltCdma1xUseSyncId;
extern Bool wrSmDfltCdma1xMsInitPosLocSupIndIncl;
extern Bool wrSmDfltCdma1xMsInitPosLocSupInd;
extern Bool wrSmDfltCdma1xMobQosIncl;
extern Bool wrSmDfltCdma1xMobQos;
extern Bool wrSmDfltCdma1xBandClsInfoReqIncl;
extern Bool wrSmDfltCdma1xBandClsInfoReq;
extern Bool wrSmDfltCdma1xBandClsIncl;
extern U8 wrSmDfltCdma1xBandCls;
extern Bool wrSmDfltCdma1xBypassRegIndIncl;
extern U8 wrSmDfltCdma1xBypassRegInd;
extern Bool wrSmDfltCdma1xAltBandClsIncl;
extern U8 wrSmDfltCdma1xAltBandCls;
extern Bool wrSmDfltCdma1xMaxAddServInstIncl;
extern U8 wrSmDfltCdma1xMaxAddServInst;
extern Bool wrSmDfltCdma1xHomeRegIncl;
extern Bool wrSmDfltCdma1xHomeReg;
extern Bool wrSmDfltCdma1xForSidRegIncl;
extern Bool wrSmDfltCdma1xForSidReg;
extern Bool wrSmDfltCdma1xForNidRegIncl;
extern Bool wrSmDfltCdma1xForNidReg;
extern Bool wrSmDfltCdma1xPowerUpRegIncl;
extern Bool wrSmDfltCdma1xPowerUpReg;
extern Bool wrSmDfltCdma1xPowerDownRegIncl;
extern Bool wrSmDfltCdma1xPowerDownReg;
extern Bool wrSmDfltCdma1xParmRegIncl;
extern Bool wrSmDfltCdma1xParmReg;
extern Bool wrSmDfltCdma1xRegPrdIncl;
extern U8 wrSmDfltCdma1xRegPrd;
extern Bool wrSmDfltCdma1xRegDistIncl;
extern U16 wrSmDfltCdma1xRegDist;
extern Bool wrSmDfltCdma1xPrefMsIdTypeIncl;
extern U8 wrSmDfltCdma1xPrefMsIdType;
extern Bool wrSmDfltCdma1xExtPrefMsIdTypeIncl;
extern U8 wrSmDfltCdma1xExtPrefMsIdType;
extern Bool wrSmDfltCdma1xMeIdReqdIncl;
extern Bool wrSmDfltCdma1xMeIdReqd;
extern Bool wrSmDfltCdma1xMccIncl;
extern U16 wrSmDfltCdma1xMcc;
extern Bool wrSmDfltCdma1xImsi1112Incl;
extern U8 wrSmDfltCdma1xImsi1112;
extern Bool wrSmDfltCdma1xImsiTSupIncl;
extern Bool wrSmDfltCdma1xImsiTSup;
extern Bool wrSmDfltCdma1xRecntMsgIndIncl;
extern Bool wrSmDfltCdma1xRecntMsgInd;
extern Bool wrSmDfltCdma1xRerModeSupIncl;
extern Bool wrSmDfltCdma1xRerModeSup;
extern Bool wrSmDfltCdma1xTzkModeSupIncl;
extern Bool wrSmDfltCdma1xTzkModeSup;
extern Bool wrSmDfltCdma1xTzkIdIncl;
extern Bool wrSmDfltCdma1xTzkId;
extern Bool wrSmDfltCdma1xPilRepIncl;
extern Bool wrSmDfltCdma1xPilRep;
extern Bool wrSmDfltCdma1xSdbSupIncl;
extern Bool wrSmDfltCdma1xSdbSup;
extern Bool wrSmDfltCdma1xAutoFcsoAllIncl;
extern Bool wrSmDfltCdma1xAutoFcsoAll;
extern Bool wrSmDfltCdma1xSdbInRcnmIncl;
extern Bool wrSmDfltCdma1xSdbInRcnm;
extern Bool wrSmDfltCdma1xFpcFchIncl;
extern U8 wrSmDfltCdma1xFpcFchInitSetptRC3;
extern U8 wrSmDfltCdma1xFpcFchInitSetptRC4;
extern U8 wrSmDfltCdma1xFpcFchInitSetptRC5;
extern U8 wrSmDfltCdma1xFpcFchInitSetptRC11;
extern U8 wrSmDfltCdma1xFpcFchInitSetptRC12;
extern Bool wrSmDfltCdma1xTAddIncl;
extern U8 wrSmDfltCdma1xTAdd;
extern Bool wrSmDfltCdma1xPilotInclIncl;
extern U8 wrSmDfltCdma1xPilotInc;
extern Bool wrSmDfltCdma1xRandIncl;
extern U32 wrSmDfltCdma1xRand;
extern Bool wrSmDfltCdma1xLpSecIncl;
extern U8 wrSmDfltCdma1xLpSec;
extern Bool wrSmDfltCdma1xLtmOffIncl;
extern U8 wrSmDfltCdma1xLtmOff;
extern Bool wrSmDfltCdma1xDayltIncl;
extern Bool wrSmDfltCdma1xDaylt;
extern Bool wrSmDfltCdma1xGcsnaL2ActTimerIncl;
extern U8 wrSmDfltCdma1xGcsnaL2ActTimer;
extern Bool wrSmDfltCdma1xGcsnaSeqCtxtTimerIncl;
extern U8 wrSmDfltCdma1xGcsnaSeqCtxtTimer;
extern U8 wrSmDfltCdma1xReserved;


extern Bool wrSmDfltSib8CdmaEutraTimeSync;
extern U8 wrSmDfltSib8SfMedium;
extern U8 wrSmDfltSib8SfHigh;
extern U8 wrSmDfltSib8TReselection;


extern U16 wrSmDfltCdma1xRegParamsSid;
extern U16 wrSmDfltCdma1xRegParamsNid;
extern Bool wrSmDfltCdma1xRegParamsMulSID;
extern Bool wrSmDfltCdma1xRegParamsMulNID;
extern Bool wrSmDfltCdma1xRegParamsHomeReg;
extern Bool wrSmDfltCdma1xRegParamsForeignSIDReg;
extern Bool wrSmDfltCdma1xRegParamsForeignNIDReg;
extern Bool wrSmDfltCdma1xRegParamsParamReg;
extern Bool wrSmDfltCdma1xRegParamsPowerUpReg;

extern U16 wrSmDfltCdma1xRegParamsRegPeriod;

extern U16 wrSmDfltCdma1xRegParamsRegZone;
extern U8 wrSmDfltCdma1xRegParamsTotalZone;
extern U8 wrSmDfltCdma1xRegParamsZoneTimer;
extern Bool wrSmDfltCdma1xRegParamsPowerDownReg;


extern U8 wrSmDfltCdma1xAcBarring0to9;
extern U8 wrSmDfltCdma1xAcBarring10;
extern U8 wrSmDfltCdma1xAcBarring11;
extern U8 wrSmDfltCdma1xAcBarring12;
extern U8 wrSmDfltCdma1xAcBarring13;
extern U8 wrSmDfltCdma1xAcBarring14;
extern U8 wrSmDfltCdma1xAcBarring15;
extern U8 wrSmDfltCdma1xAcBarringMsg;
extern U8 wrSmDfltCdma1xAcBarringReg;
extern U8 wrSmDfltCdma1xAcBarringEmg;


extern LwrRatPriorityList wrSmDfltPlmnRatPriorList;
extern U8 wrSmDfltPlmnRedirSuppLst[6];
extern U8 wrSmDfltCsfbToUtraMeasSup;
extern U8 wrSmDfltCsfbToCdmaMeasSup;
extern U8 wrSmDfltEcsfbMeasSup;
extern U8 wrSmDfltDualRxSup;
extern U8 wrSmDfltCdma1xrttRegSup;
extern U8 wrSmDfltDualRxTxSup;
extern U16 wrSmDfltCdmaMktId;
extern U8 wrSmDfltCdmaSwitchNum;
extern U16 wrSmDfltCdmaCellId;
extern U8 wrSmDfltCdmaSectorNum;
extern U8 wrSmDfltCdmaSib8AdvTime;

extern U64 wrSmDfltSecId;
extern U64 wrSmDfltSecIdPerNgh;
extern U8 wrSmDfltCdmaSystemType;
extern U16 wrSmDfltCdmaChannelNum;
extern U8 wrSmDfltCdmaPilotOneWay;





extern U32 wrSmDfltGeranReCfgType;
extern U32 wrSmDfltGeranplmnID;
extern U16 wrSmDfltGeranLAC;
extern U16 wrSmDfltGeranRAC;
extern U8 wrSmDfltGeranBSIC;
extern U16 wrSmDfltGeranCI;
extern U8 wrSmDfltGerantReselection;
extern U8 wrSmDfltGeranpMaxGeran;
extern U8 wrSmDfltGeranBandInd;
extern U16 wrSmDfltGeranBcchArfcn;
extern U8 wrSmDfltGeranNccPermittedMeas;
extern Bool wrSmDfltGeranisDTMCapability;
extern U8 wrSmDfltGeranCellRelectionPriority;
extern U8 wrSmDfltGeranNccPermitted;
extern U8 wrSmDfltGeranqRxLevMin;
extern U32 wrSmDfltGeranQoffset;
extern U32 wrSmDfltGeranFltrCoeff;
extern U32 wrSmDfltGeranMaxRptCells;
extern U32 wrSmDfltGeranRptAmt;
extern U8 wrSmDfltGeranthreshXHigh;
extern U8 wrSmDfltGeranthreshXLow;
extern U32 wrSmDfltGerantReselSFMedium;
extern U32 wrSmDfltGerantReselSFHigh;
extern Bool wrSmDfltGeranpres_SpeedStateScaleFactors;
extern Bool wrSmDfltGeranpMaxGeranPress;


extern U8 wrSmDfltBlCellInfoReCfgType[];
extern U8 wrSmDfltBlCellInfoBlackListIdx[];
extern Bool wrSmDfltBlCellInfoStatus[];
extern Bool wrSmDfltBlCellInfoPciType[];
extern U16 wrSmDfltBlCellInfoStartPci[];
extern U8 wrSmDfltBlCellInfoPciRange[];
extern U16 wrSmDfltBlCellInfoEarfcnUl[];
extern U16 wrSmDfltBlCellInfoEarfcnDl[];



extern U8 wrSmDfltBlCellInfoIndex;





extern U8 wrSmDfltEutranBlNrIndex;




extern U16 wrSmDfltCdmaBlNrReCfgType[];
extern U8 wrSmDfltCdmaBlNrBlackListIdx[];
extern Bool wrSmDfltCdmaBlNrStatus[];
extern U16 wrSmDfltCdmaBlNrSId[];
extern U16 wrSmDfltCdmaBlNrNId[];
extern U16 wrSmDfltCdmaBlNrBaseId[];
extern U16 wrSmDfltCdmaBlNrPnOffset[];
extern U16 wrSmDfltCdmaBlNrMarketId[];
extern U16 wrSmDfltCdmaBlNrCellId[];
extern U8 wrSmDfltCdmaBlNrSectorNum[];
extern U32 wrSmDfltCdmaBlNrBandClass[];
extern U32 wrSmDfltCdmaBlNrArfcn[];


extern U8 wrSmDfltCdma1xBlNrIndex;




extern U16 wrSmDfltCdmaHrpdBlNrReCfgType[];
extern U8 wrSmDfltCdmaHrpdBlNrBlackListIdx[];
extern Bool wrSmDfltCdmaHrpdBlNrStatus[];
extern U16 wrSmDfltCdmaHrpdBlNrColorCode[];
extern U16 wrSmDfltCdmaHrpdBlNrBsmId[];
extern U16 wrSmDfltCdmaHrpdBlNrBscId[];
extern U16 wrSmDfltCdmaHrpdBlNrDpssId[];
extern U16 wrSmDfltCdmaHrpdBlNrBtsId[];
extern U16 wrSmDfltCdmaHrpdBlNrSectorId[];
extern U32 wrSmDfltCdmaHrpdBlNrBandClass[];
extern U32 wrSmDfltCdmaHrpdBlNrArfcn[];
extern U16 wrSmDfltCdmaHrpdBlNrPnOffset[];



extern U8 wrSmDfltCdmaHrpdBlNrIndex;

extern U16 wrSmDfltS1MmeCfgTrfrTmr;
extern U16 wrSmDfltX2SnSTatTrfrTmr;
extern U16 wrSmDfltX2RstRtryCntTmr;
extern U16 wrSmDfltX2SetupRtryCntTmr;
extern U16 wrSmDfltIntSigInactivtTmr;
extern U16 wrSmDfltHRPDCpltTmr;
extern U16 wrSmDfltIntraEnbHoCpltTmr;
extern U16 wrSmDfltMeasureRptToWaitTmr;
extern U16 wrSmDfltS1MmeStatTrfrTmr;
extern U16 wrSmDfltS1RstRtryCntTmr;
extern Bool wrSmDfltDirectFwd;
extern Bool wrSmDfltPlmnEnbCacUsage;
extern Bool wrSmDfltStatRptReqd;

extern U16 wrSmDfltS1SetupTmr;
extern U16 wrSmDfltUpdateTmr;
extern U16 wrSmDfltS1TimeToWait;
extern U16 wrSmDfltS1RtryCntTmr;
extern U16 wrSmDfltS1ResetRetryTmr;
extern U16 wrSmDfltX2SetupTmr;
extern U16 wrSmDfltX2SetTimeToWait;
extern U16 wrSmDfltX2UpdateTmr;
extern U16 wrSmDfltX2UpdateTimeToWait;
extern U16 wrSmDfltX2UpdateRetryCount;
extern U16 wrSmDfltX2ResetRetryTmr;
extern U16 wrSmDfltIntNoWaitRetryTmr;


extern U32 wrSmDfltRrcConSetupTmr;
extern U32 wrSmDfltRrcConReCfgTmr;
extern U32 wrSmDfltRrcConReEstTmr;
extern U32 wrSmDfltRrcSecModCmdTmr;
extern U32 wrSmDfltRrcConRelTmr;
extern U32 wrSmDfltRrcUeCapEnqTmr;
extern U32 wrSmDfltRrcHandoverPrepTmr;
extern U32 wrSmDfltRrcUeInfReqTmr;

extern U16 wrSmDflts1InitialContextSetupTmr;
extern U16 wrSmDflts1ErabReleaseIndicationTmr;
extern U16 wrSmDflts1UeContextReleaseTmr;
extern U16 wrSmDflts1PathSwitchTmr;
extern U16 wrSmDflts1HandoverCancelTmr;
extern U16 wrSmDfltx2HandoverPrepTmr;
extern U16 wrSmDfltx2RelocOverallTmr;
extern U16 wrSmDfltx2StoreUeContextTmr;
extern U16 wrSmDfltx2SnStatusTransferTmr;
extern U16 wrSmDfltinternalSubCellChangeTmr;
extern U16 wrSmDfltinternalSubCellPdcpControlTmr;
extern U16 wrSmDfltehrpdOptHoCompleteTmr;
extern U16 wrSmDfltintraEnbHoCompleteTmr;
extern U16 wrSmDfltmeasurementReportToWaitTmr;
extern U16 wrSmDfltinternalResourceSetupTmr;
extern U16 wrSmDfltinternalResourceReleaseTmr;
extern U16 wrSmDfltinternalSecurityControlTmr;
extern U16 wrSmDfltinternalRrcDataTransferTmr;
extern U16 wrSmDfltinternalForwardingPathSetupTmr;
extern U16 wrSmDfltinternalReestablishControlTmr;
extern U16 wrSmDfltinternalBufferFlushTmr;
extern U16 wrSmDfltinternalDataTransferStartTmr;
extern U16 wrSmDfltinternalDataForwardEndIndTmr;
extern U16 wrSmDfltinternalReestablishTimeToWaitTmr;
extern U16 wrSmDfltinternalUserInactivityTmr;
extern U16 wrSmDfltinternalSignalingInactivityTmr;
extern U16 wrSmDfltinternalUnassignedTmr;
extern U16 wrSmDfltinternalNoWaitRetryTmr;
extern U16 wrSmDfltinternalRrcResetTmr;
extern U16 wrSmDfltinternalEnbResetTmr;
extern U16 wrSmDfltinternalSolicitMeasurementTmr;
extern U16 wrSmDfltinternalRtdInfoReqTmr;




extern U32 wrSmDfltUtraReCfgType;
extern U16 wrSmDfltUtraUlArFcn;
extern U16 wrSmDfltUtraDlArFcn;
extern U8 wrSmDfltUtraPriority;
extern U8 wrSmDfltUtraThreshXHigh;
extern U8 wrSmDfltUtraThreshXLow;
extern S8 wrSmDfltUtraQRxLevMin;
extern S8 wrSmDfltUtraDualMin;
extern U8 wrSmDfltUtraDuplexMode;
extern S8 wrSmDfltUtraPMax;
extern U8 wrSmDfltUtraFreqIdx;


extern U8 wrSmDfltUtraNriIndex;
extern U32 wrSmDfltRncID;
extern U16 wrSmDfltUtraCid;
extern U8 wrSmDfltNeRncNumMncDigits;
extern U8 wrSmDfltNeRncPlmn1Mcc0;
extern U8 wrSmDfltNeRncPlmn1Mcc1;
extern U8 wrSmDfltNeRncPlmn1Mcc2;
extern U8 wrSmDfltNeRncPlmn1Mnc0;
extern U8 wrSmDfltNeRncPlmn1Mnc1;
extern U8 wrSmDfltNeRncPlmn1Mnc2;
extern U16 wrSmDfltNeighCellPsc;
extern U16 wrSmDfltNeighCellLac;
extern U8 wrSmDfltNeighCellRac;
extern Bool wrSmDfltUtranNrIsRemAllowed;
extern Bool wrSmDfltUtranNrIsHOAllowed;
extern U8 wrSmDfltUtranNrCurRank;
extern U8 wrSmDfltUtranNrPrevRank;

extern U8 wrSmDfltUtraReason;
extern U32 wrSmDfltUtraRptAmount;
extern U32 wrSmDfltUtraRptInterval;
extern U8 wrSmDfltUtraMaxRptCells;
extern U8 wrSmDfltEcnoFltrCoeff;
extern U16 wrSmDfltMeasQtyUtraFdd;
extern U16 wrSmDfltMeasQtyUtraTdd;
extern U8 wrSmDfltReslctSfMed;
extern U8 wrSmDfltReslctSfHigh;
extern U16 wrSmDfltReslct;
extern U8 wrSmDfltUtraNumNrFreq;
extern U8 wrSmDfltUtraNumNrCell;
extern Bool wrSmDfltMeasRptReqFlg;


extern U32 wrSmDfltWiresharkDstIpAddr;
extern U16 wrSmDfltWiresharkPort;



extern U32 wrSmDfltNoOfPrbRpts;
extern U32 wrSmDfltPrbRptInterval;
extern U8 wrSmDfltQci1TmngReq ;
extern U8 wrSmDfltQci2TmngReq ;
extern U8 wrSmDfltQci3TmngReq ;
extern U8 wrSmDfltQci4TmngReq ;
extern U8 wrSmDfltQci4TmngReqEnable ;
extern U8 wrSmDfltMinDlReTxUesPerTti;
extern U8 wrSmDfltMinUlReTxUesPerTti;


typedef struct {
   U32 cellNum;
   U32 faIndex;
   S16 status;
   U16 earfcnUl;
   U16 earfcnDl;
   S16 priority;
   S16 qRxLevMin;
   S16 pMaxUsage;
   S16 pMax;
   S16 tReselection;
   S16 sfUsage;
   S16 tReselectionSfMedium;
   S16 tReselectionSfHigh;
   S16 sIntraSearchUsage;
   S16 sIntraSearch;
   S16 sNonIntraSearchUsage;
   S16 sNonIntraSearch;
   S16 threshServingLow;
   S16 threshXhigh;
   S16 threshXLow;
   S16 mesaBandwidthUsage;
   S16 measurementBandwidth;
   S16 presenceAntPort1;
   S16 neighCellConfig;
   S16 qOffsetFreq;
   S16 offsetFreq;
   U16 sIntraSearchRel9Usage;
   U16 sIntraSearchP;
   U16 sIntraSearchQ;
   U16 sNonIntraSearchRel9Usage;
   U16 sNonIntraSearchP;
   U16 sNonIntraSearchQ;
   U32 qQualMinRel9Usage;
   S16 qQualMinRel9;
   U16 threshServingLowQRel9Usage;
   U16 threshServingLowQRel9;
   U16 threshXhighQRel9;
   U16 threshXLowQRel9;
} WrSmDfltEutraFaPriorInfoFunc;

typedef struct {
   U32 cellNum;
   U32 faIndex;
   S16 status;
   S16 duplexType;
   short uarfcnUl;
   short uarfcnDl;
   S16 priority;
   S16 threshXhigh;
   S16 threshXLow;
   S16 qRxLevMin;
   S16 pMaxUtra;
   S16 qQualMin;
   S16 offsetFreq;
   U16 threshXhighQRel9;
   U16 threshXlowQRel9;
} WrSmDfltUtraFaPriorInfoFunc;


typedef struct {
   U32 cellNum;
   U32 faIndex;
   S16 status;
   S16 duplexType;
   short uarfcn;
   S16 priority;
   S16 threshXhigh;
   S16 threshXLow;
   S16 qRxLevMin;
   S16 pMaxUtra;
   S16 offsetFreq;
   U16 threshXhighQRel9;
   U16 threshXlowQRel9;
} WrSmDfltUtraTddFaPriorInfoFunc;

typedef struct {
   U32 cellNum;
   U32 purpose;
   U16 activeState;
   U16 maxReportCell;
   U16 reportInterval;
   U16 reportAmount;
} WrSmDfltUtraPeriodicInfo;

typedef struct {
   U32 cellNum;
   U32 relationIdx;
   U32 status;
   U32 enbId;
   U32 targetCellNum;
   U32 enbType;
   U8 mncSize;
   U8 enbMcc[4];
   U8 enbMnc[4];
   U16 phyCellId;
   U16 tac;
   U8 numPlmns;
   U8 mcc0[4];
   U8 mnc0[4];
   U8 mcc1[4];
   U8 mnc1[4];
   U8 mcc2[4];
   U8 mnc2[4];
   U8 mcc3[4];
   U8 mnc3[4];
   U8 mcc4[4];
   U8 mnc4[4];
   U8 mcc5[4];
   U8 mnc5[4];
   U16 earfcnUl;
   U16 earfcnDl;
   U16 bandwidthUl;
   U16 bandwidthDl;
   U16 indOffset;
   U16 qoffsetCell;
   U16 isRemoveAllowed;
   U16 isHOAllowed;
}WrSmDfltExternalEUtranCellFDDLogic;

typedef struct {
   U32 cellNum;
   U32 relationIdx;
   U32 status;
   U16 rncId;
   U16 cId;
   U16 lac;
   U8 rac;
   U8 reserved2;
   U8 numPlmns;
   LwrPlmnId plmnIds[6];
   U32 duplexType;
   U16 pScmCode;
   U16 cellParaId;
   U16 arfcnUl;
   U16 arfcnDl;
   U16 isRemoveAllowed;
   U16 isHOAllowed;
   U32 rimStatus;
} WrSmDfltExternalUtranCellLogic;


typedef struct {
  Bool pres;
  U8 val;
}WreNodBPriIntAlgo;

typedef struct {
  Bool pres;
  U8 val;
}WreNodBPriCiphAlgo;

extern WreNodBPriIntAlgo wreNodBPriIntgAlgo[];
extern WreNodBPriCiphAlgo wreNodBPriCiphAlgo[];

extern U8 wrSmDfltNumofUtraNrFreq;
extern WrSmDfltUtraFaPriorInfoFunc wrSmDfltUtraFaPriorInfo[];
extern WrSmDfltUtraTddFaPriorInfoFunc wrSmDfltUtraTddFaPriorInfo[];
extern U8 wrSmDfltNumofUtraFddNrCell[12];
extern U8 wrSmDfltNumofUtraTddNrCell[12];
extern WrSmDfltExternalUtranCellLogic wrSmDfltExtUtraCell[12][32];
extern WrSmDfltExternalUtranCellLogic wrSmDfltExtUtraTddCell[12][32];

extern U8 wrSmDfltNumofEutraNrFreq;
extern WrSmDfltEutraFaPriorInfoFunc wrSmDfltEutraFaPriorInfo[];

extern U32 wrSmNumUesGrpPwrCtrlFmt3 ;
extern U32 wrSmNumUesGrpPwrCtrlFmt3A;
extern U8 wrSmDfltGeranB2REDThres1RSRP;
extern U8 wrSmDfltGeranB2HOThres1RSRP;
extern U8 wrSmDfltGeranB2Thres1RSRQ;
extern S8 wrSmDfltGeranB2REDThres2;
extern S8 wrSmDfltGeranB2HOThres2;

extern S16 WrIfmS1apBndReq(Pst *pst, SuId suId, SpId spId);
extern S16 WrIfmS1apSndMgmtMsg(SztUDatEvnt *uDatEvnt);
extern S16 WrIfmS1apUbndReq(Pst *pst, SpId spId, Reason reason);
extern S16 WrIfmS1apConReq(SztConReq *conReq);
extern S16 WrIfmS1apConReq(SztConReq *conReq);
extern S16 WrIfmS1apRelReq(SztRelReq *relReq);
extern S16 WrIfmS1apRelRsp(SztRelRsp *relRsp);
extern S16 WrIfmS1apDatReq(SztDatEvntReq *datEvnt);
extern S16 WrIfmS1apEncDecReq(SztEncDecEvnt *sztEncDecEvnt);
extern S16 WrIfmS1apAudReq(SztAudEvnt *audEvnt);
extern S16 wrIfmS1apSndUeMsg(U32 spConnId, S1apPdu *s1pdu);
extern S16 WrIfmS1apDatReq(SztDatEvntReq *datEvnt);
extern S16 WrIfmS1apSndAbortMsg(SztAbortS1 *abortS1);
extern S16 WrIfmS1apConRsp(SztConRsp *conRsp);
extern S16 wrUmmPrcS1ConInd(SztConReq *conReq, U32 *cause);
extern S16 WrIfmSztEncDecCfm(Pst *pst,SuId suId,
            SztEncDecEvnt *sztEncDecEvnt,SztReqStatus *status);
extern S16 wrUmmPrcSztEncDecCfm(SztEncDecEvnt *sztEncDecCfmSdus,SztReqStatus *status);
typedef enum LrmCause
{
 LRM_CAUSE_NOT_APP,
 LRM_CAUSE_CELLID_UNKNOWN,
 LRM_CAUSE_MMEID_UNKNOWN,
 LRM_CAUSE_CELL_ALREADY_EXISTS,
 LRM_CAUSE_MME_ALREADY_EXISTS,
 LRM_CAUSE_ENB_ALREADY_UP,
 LRM_CAUSE_MME_ALREADY_UP,
 LRM_CAUSE_MME_ALREADY_DOWN,
   LRM_CAUSE_INVALID_CFG_TYPE,
 LRM_CAUSE_INVALID_CFG_INFO,
 LRM_CAUSE_OTHER
} LrmCause;

typedef struct LrmStatusCause
{
 LrmCause enCause;
 U8 bStatus;
} LrmStatusCause;
typedef struct rmGenCfg
{
   Pst lmPst;
   MemoryId mem;
   U8 tmrRes;
   U8 maxRmuSaps;
} RmGenCfg;




typedef struct rmUSapCfg
{
   Selector selector;
   MemoryId mem;
   Priority prior;
   ProcId procId;
   Ent ent;
   Inst inst;
   Route route;
   SpId spId;
   SuId suId;
} RmUSapCfg;




typedef struct rmLSapCfg
{
   Selector selector;
   MemoryId mem;
   Priority prior;
   ProcId procId;
   Ent ent;
   Inst inst;
   Route route;
   SpId spId;
   SuId suId;
   TmrCfg bndTmr;
} RmLSapCfg;




typedef struct rmCfg
{
   union
   {
      RmGenCfg genCfg;

      RmUSapCfg rmuSap;
      RmLSapCfg rgmSap;
   }s;
} RmCfg;




typedef struct rmSapCntrl
{
   SuId suId;
   SpId spId;
} RmSapCntrl;




typedef struct rmCntrl
{
   DateTime dt;
   U8 action;
   U8 subAction;
   U8 instId;
   union
   {
      RmSapCntrl rmSapCntrl;
   }u;

} RmCntrl;


typedef enum lrmCfgAction
{
 LRM_CFG_ADD = 1,
   LRM_CFG_MOD,
   LRM_CFG_DEL
} LrmCfgAction;

typedef enum lrmCellBandwidth
{
   LRM_BANDWIDTH_6,
   LRM_BANDWIDTH_15,
   LRM_BANDWIDTH_25,
   LRM_BANDWIDTH_50,
   LRM_BANDWIDTH_75,
   LRM_BANDWIDTH_100,
   LRM_BANDWIDTH_MAX
}LrmCellBandwidth;


typedef struct lrmSpsCellConfigData
{
   Bool bIsSpsEnabled;
   U16 usMaxDlSpsUePerTti;
   U16 usMaxUlSpsUePerTti;
} LrmSpsCellConfigData;


typedef enum lrmSplSfConfig
{
   LRM_SPL_SF_CONFIG_0,
   LRM_SPL_SF_CONFIG_1,
   LRM_SPL_SF_CONFIG_2,
   LRM_SPL_SF_CONFIG_3,
   LRM_SPL_SF_CONFIG_4,
   LRM_SPL_SF_CONFIG_5,
   LRM_SPL_SF_CONFIG_6,
   LRM_SPL_SF_CONFIG_7,
   LRM_SPL_SF_CONFIG_8
}LrmSplSfConfig;
typedef enum lrmUlDlConfig
{
   LRM_UL_DL_CONFIG_0,
   LRM_UL_DL_CONFIG_1,
   LRM_UL_DL_CONFIG_2,
   LRM_UL_DL_CONFIG_3,
   LRM_UL_DL_CONFIG_4,
   LRM_UL_DL_CONFIG_5,
   LRM_UL_DL_CONFIG_6,
   LRM_UL_DL_CONFIG_MAX
}LrmUlDlConfig;
typedef enum lrmCqiPrdcty
{
   LRM_CQI_PRDCTY_2,
   LRM_CQI_PRDCTY_5,
   LRM_CQI_PRDCTY_10,
   LRM_CQI_PRDCTY_20,
   LRM_CQI_PRDCTY_40,
   LRM_CQI_PRDCTY_80,
   LRM_CQI_PRDCTY_160,
   LRM_CQI_PRDCTY_32,
   LRM_CQI_PRDCTY_64,
   LRM_CQI_PRDCTY_128,
   LRM_CQI_PRDCTY_MAX
}LrmCqiPrdcty;

typedef enum lrmSrPrdcty
{
   LRM_SR_PRDCTY_5,
   LRM_SR_PRDCTY_10,
   LRM_SR_PRDCTY_20,
   LRM_SR_PRDCTY_40,
   LRM_SR_PRDCTY_80,
   LRM_SR_PRDCTY_2,
   LRM_SR_PRDCTY_1,
   LRM_SR_PRDCTY_MAX
}LrmSrPrdcty;


typedef struct lrmCellConfigData
{
   CmRrmCellDrxCfg stRmCellDrxCfg;
 LrmCellBandwidth enCellDlBandWidth;
   CmRrmAcbInfo stAcbInfo;
 U16 usMaxUlBroadbandBw;
 U16 usMaxDlBroadbandBw;
   U16 usN1Pucch;
 U8 bNRbCqi;
 U8 bNCsAn;
 U8 bMaxActiveUesServed;
 U8 bMaxSigUesServed;
 U8 flagDlfsScheduling;
 U8 flagTransMode;
 U8 bWaitTime;
 U8 bCellId;
   U8 bRcmAlgoType;
 U8 bNumTxAnt;
   LrmSrPrdcty enSrPrdcty;
   LrmCqiPrdcty enCqiPrdcty;
   U16 usNumSrResPerTti;
   U16 usNumCqiResPerTti;
   LrmUlDlConfig enUlDlConfig;
   LrmSplSfConfig enSplSfCfg;
   CmRrmDsrTransMax enDsrTransMax;
   Bool bSimulCqiAckNack;
   U8 bArpForEmergencyBearer;
   LrmSpsCellConfigData stSpsCellCfg;
   U32 utNumOfPrbRpts;
   U32 utPrbRptInterval;

   U8 bMaxAvgGbrPrbUsage;
   U16 bRbcQci1TmngReq;
   U8 bRbcQci2TmngReq;
   U8 bRbcQci3TmngReq;
   U8 bRbcQci4TmngReq;
   U8 bRbcQci4TmngReqEnable;
   U8 bNumDlNewUesPerTti;
   U8 bNumUlNewUesPerTti;
   U8 bNumDlReTxUesPerTti;
   U8 bNumUlReTxUesPerTti;
   U8 bDuplexMode;
   U8 usAccessMode;
   U16 usMaxNonCsgUes;
   U16 usMaxCsgUes;
   U16 usMaxExtraUes;

   U8 usMaxDlUePerTti;
   Bool bIsCaEnabled;

} LrmCellConfigData;


typedef struct lrmCellConfiguration
{
 LrmCfgAction enCellAddModDel;
 LrmCellConfigData stCellCfgInfo;
 U16 usReCfgType;
} LrmCellConfiguration;

typedef struct lrmCellCfgRsp
{
 LrmStatusCause statusInfo;
 U8 bCellId;
} LrmCellCfgRsp;

typedef struct lrmEnodebCfgResp
{
 LrmStatusCause statusInfo;
} LrmEnodebCfgResp;
typedef struct lrmMmeCfg
{
   LrmCfgAction enMmeAddModOrDel;
   U16 usMmeId;
} LrmMmeCfg;




typedef struct lrmEnbConfiguration
{
 U8 bCfgType;
   union
   {
    U8 bMaxNumCells;
    LrmMmeCfg stMmeCfg;
   } u;
} LrmEnbConfiguration;

typedef enum lrmCfgType
{
 LRM_ENB_CONFIG,
 LRM_CELL_CONFIG
}LrmCfgType;

typedef struct rmProtoCfg
{
 LrmCfgType bCfgType;
 union
 {
  LrmCellConfiguration stCellCfg;
  LrmEnbConfiguration stEnbCfg;
 } u;
} RmProtoCfg;





typedef struct rmUstaDgn
{
  U8 bType;
  union {
     Mem stMem;
  }u;
} RmUstaDgn;




typedef struct lrmRmUsta
{
   CmAlarm alarm;
   RmUstaDgn stDgn;
} LrmRmUsta;
typedef enum lrmEnbStaType
{
   LRM_ENBSTATYPE_CELLUP,
   LRM_ENBSTATYPE_CPULOAD
}LrmEnbStaType;
typedef struct lrmEnbStaInd
{
   LrmEnbStaType enStaType;
   union {
      U8 bCpuLoad;
      U8 bCellId;
   }u;
} LrmEnbStaInd;




typedef struct rmUsta
{
   U8 bStaType;
   union {
      LrmEnbStaInd stEnbStaInfo;
      LrmRmUsta stAlarm;
   }u;
} RmUsta;






typedef struct rmMngmt
{
   Header hdr;
   CmStatus cfm;
   union
   {
      RmCfg cfg;
      RmCntrl cntrl;
      RmProtoCfg protoCfg;
      RmUsta usta;
   }t;
} RmMngmt;





typedef S16 (*LrmCfgReq) ( Pst *pst, RmMngmt *cfg )


       ;

typedef S16 (*LrmCfgCfm) ( Pst *pst, RmMngmt *cfg )


       ;

typedef S16 (*LrmCntrlReq) ( Pst *pst, RmMngmt *cntrl )


       ;

typedef S16 (*LrmEnbStatusInd) ( Pst *pst, RmMngmt *usta )


       ;


typedef S16 (*LrmStaInd) ( Pst *pst, RmMngmt *usta )


       ;

typedef S16 (*LrmCntrlCfm) ( Pst *pst, RmMngmt *usta )


       ;
extern S16 RmMiLrmCfgReq (Pst *pst, RmMngmt *cfg);
extern S16 RmMiLrmCntrlReq (Pst *pst, RmMngmt *cntrl);
extern S16 RmMiLrmCfgCfm (Pst *pst, RmMngmt *cfm);
extern S16 RmMiLrmCntrlReq (Pst *pst, RmMngmt *cntrl);
extern S16 RmMiLrmCntrlCfm ( Pst *pst, RmMngmt *cfm);
extern S16 RmMiLrmEnbStaInd (Pst *pst, RmMngmt *usta);
extern S16 RmMiLrmStaInd (Pst *pst, RmMngmt *usta);
extern S16 smRmActvInit (Ent ent,Inst inst, Region region,Reason reason);
extern S16 smRmActvTsk (Pst *pst, Buffer *mBuf);
extern S16 SmMiLrmCfgReq (Pst *pst, RmMngmt *cfg);
extern S16 SmMiLrmCfgCfm (Pst *pst, RmMngmt *cfm);
extern S16 SmMiLrmStaInd (Pst *pst, RmMngmt *usta);
extern S16 SmMiLrmEnbStaInd (Pst *pst, RmMngmt *usta);
extern S16 SmMiLrmCntrlReq (Pst *pst, RmMngmt *cntrl);
extern S16 SmMiLrmCntrlCfm ( Pst *pst, RmMngmt *cfm);
extern S16 cmPkLwLcLrmCfgReq ( Pst * pst, RmMngmt * cfg )


  ;




extern S16 cmUnpkLwLcLrmCfgReq ( LrmCfgReq func, Pst *pst, Buffer *mBuf )



  ;



extern S16 cmPkLwLcLrmCfgCfm ( Pst * pst, RmMngmt * cfm )


  ;


extern S16 cmUnpkLwLcLrmCfgCfm ( LrmCfgCfm func, Pst * pst, Buffer *mBuf )



  ;



extern S16 cmUnpkLwLcLrmCntrlReq ( LrmCntrlReq func, Pst * pst, Buffer *mBuf )



  ;



extern S16 cmPkLwLcLrmCntrlReq ( Pst * pst, RmMngmt * cntrl )


  ;


extern S16 cmPkLwLcLrmCntrlCfm ( Pst * pst, RmMngmt * cfm )


  ;


extern S16 cmUnpkLwLcLrmCntrlCfm ( LrmCntrlCfm func, Pst * pst, Buffer *mBuf )



  ;



extern S16 cmPkLwLcLrmEnbStaInd ( Pst * pst, RmMngmt * usta )


  ;



extern S16 cmPkLwLcLrmStaInd ( Pst * pst, RmMngmt * usta )


  ;


extern S16 cmUnpkLwLcLrmEnbStaInd ( LrmEnbStatusInd func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmUnpkLwLcLrmStaInd ( LrmStaInd func, Pst * pst, Buffer *mBuf )



  ;
extern S16 cmPkLrmCfgReq ( Pst * pst, RmMngmt * cfg )


  ;


extern S16 cmUnpkLrmCfgReq ( LrmCfgReq func, Pst * pst, Buffer *mBuf )



  ;



extern S16 cmPkLrmCfgCfm ( Pst * pst, RmMngmt * cfm )


  ;


extern S16 cmUnpkLrmCfgCfm ( LrmCfgCfm func, Pst * pst, Buffer *mBuf )



  ;



extern S16 cmUnpkLrmCntrlReq ( LrmCntrlReq func, Pst * pst, Buffer *mBuf )



  ;



extern S16 cmPkLrmEnbStaInd ( Pst * pst, RmMngmt * usta )


  ;


extern S16 cmUnpkLrmEnbStaInd ( LrmStaInd func, Pst * pst, Buffer *mBuf )



  ;



extern S16 cmPkLrmStaInd ( Pst * pst, RmMngmt * usta )


  ;


extern S16 cmUnpkLrmStaInd ( LrmStaInd func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkLrmCntrlReq ( Pst * pst, RmMngmt * cntrl )


  ;


extern S16 cmUnpkLrmCntrlReq ( LrmCntrlReq func, Pst * pst, Buffer *mBuf )



  ;


extern S16 cmPkLrmCntrlCfm ( Pst * pst, RmMngmt * cfm )


  ;


extern S16 cmUnpkLrmCntrlCfm ( LrmCntrlCfm func, Pst * pst, Buffer *mBuf )



  ;
extern S16 cmPkRmGenCfg ( RmGenCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRmGenCfg ( RmGenCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRmUpSapCfg ( RmUSapCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRmUpSapCfg ( RmUSapCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRmLowSapCfg ( RmLSapCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkRmLowSapCfg ( RmLSapCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkRmCfg ( RmCfg *param, S16 elmnt, Buffer *mBuf )



  ;
extern S16 cmUnpkRmCfg ( RmCfg *param, S16 elmnt, Buffer *mBuf )



  ;
extern S16 cmPkRmCntrl ( RmCntrl *param, S16 elmnt, Buffer *mBuf )



  ;
extern S16 cmUnpkRmCntrl ( RmCntrl *param, S16 elmnt, Buffer *mBuf )



  ;
extern S16 cmPkRmMngmt ( Pst *pst, RmMngmt *param, U8 eventType, Buffer *mBuf )




  ;
extern S16 cmUnpkRmMngmt ( Pst *pst, RmMngmt *param, U8 eventType, Buffer *mBuf )




  ;


extern S16 rrmInit(U8 itfType);
extern S16 rmActvTsk(Pst *pst,Buffer *mBuf);
extern S16 rmActvInit( Ent entity,
                       Inst inst,
                       Region region,
                       Reason reason
                     );





typedef enum
{
   SM_ALARM_SEVERITY_CLEARED = 0,
   SM_ALARM_SEVERITY_WARNING,
   SM_ALARM_SEVERITY_MINOR,
   SM_ALARM_SEVERITY_MAJOR,
   SM_ALARM_SEVERITY_CRITICAL
} SmAlarmSeverity;


typedef enum
{
   SM_ALARM_CAUSE_TYPE_ERR_IND,
   SM_ALARM_CAUSE_TYPE_TMR_EXP
} SmAlarmCause;


typedef enum
{
   SM_ALARM_CAUSE_VAL_INIT_FAIL,
   SM_ALARM_CAUSE_VAL_ABNORMAL
} SmAlarmCauseVal;
typedef enum msmMeasEvntA3Type
{
   MSM_MEAS_EVENTA3_INTRA_FREQ_HO,
   MSM_MEAS_EVENTA3_INTER_FREQ_HO_RSRP,
   MSM_MEAS_EVENTA3_INTER_FREQ_HO_RSRQ,
   MSM_MEAS_EVENTA3_INTRA_FREQ_ANR,
   MSM_MEAS_EVENTA3_INTER_FREQ_ANR,
   MSM_MEAS_EVENTA3_RESV1,
   MSM_MEAS_EVENTA3_RESV2
} MsmMeasEvntA3Type;
typedef enum msmMeasEvntA4Type
{
   MSM_MEAS_EVENTA4_ANR_SPECIFIC,



   MSM_MEAS_EVENTA4_RESV1,
   MSM_MEAS_EVENTA4_RESV2
} MsmMeasEvntA4Type;
typedef enum MsmMeasEvntA5Type
{
   MSM_MEAS_EVENTA5_INTRA_FREQ_HO,
   MSM_MEAS_EVENTA5_INTER_FREQ_HO_RSRP,
   MSM_MEAS_EVENTA5_INTER_FREQ_HO_RSRQ,
   MSM_MEAS_EVENTA5_INTRA_FREQ_ANR,
   MSM_MEAS_EVENTA5_INTER_FREQ_ANR,
   MSM_MEAS_EVENTA5_RESV1,
   MSM_MEAS_EVENTA5_RESV2
} MsmMeasEvntA5Type;







typedef enum msmMeasEutraPeriodic
{
   MSM_MEAS_EUTRA_PERIODIC_REPORT_STRNG_CELLS,
   MSM_MEAS_EUTRA_PERIODIC_REPORT_CGI,
   MSM_MEAS_EUTRA_PERIODIC_RESV1
}MsmMeasEutraPeriodic;
typedef enum msmMeasUtraPeriodic
{
   MSM_MEAS_UTRA_PRDRPT_STRNGCELLS,
   MSM_MEAS_UTRA_PRDRPT_STRGCELLS_ANR,
   MSM_MEAS_UTRA_PRDRPT_STRGCELLS_CSFB,
   MSM_MEAS_UTRA_PERIODIC_REPORT_CGI
}MsmMeasUtraPeriodic;





typedef enum{
   MSM_WR_CFG_FOUND,
   MSM_WR_CFG_DONE,
   MSM_WR_CFG_ADD,
   MSM_WR_CFG_MOD,
   MSM_WR_CFG_DEL,
   MSM_WR_CFG_INV
}MsmDynCfgInd;
typedef enum msmLteMeasGERANPeriodic
{
    MSM_MEAS_GERAN_REPORT_STRNG_CELLS,
    MSM_MEAS_GERAN_REPORT_STRNG_CELLS_ANR,
    MSM_MEAS_GERAN_CGI
}MsmLteMeasGERANPeriodic;
typedef enum msmQOffsetRange
{
   MSM_Q_OFFSET_RANGE_MINUS_24,
   MSM_Q_OFFSET_RANGE_MINUS_22,
   MSM_Q_OFFSET_RANGE_MINUS_20,
   MSM_Q_OFFSET_RANGE_MINUS_18,
   MSM_Q_OFFSET_RANGE_MINUS_16,
   MSM_Q_OFFSET_RANGE_MINUS_14,
   MSM_Q_OFFSET_RANGE_MINUS_12,
   MSM_Q_OFFSET_RANGE_MINUS_10,
   MSM_Q_OFFSET_RANGE_MINUS_8,
   MSM_Q_OFFSET_RANGE_MINUS_6,
   MSM_Q_OFFSET_RANGE_MINUS_5,
   MSM_Q_OFFSET_RANGE_MINUS_4,
   MSM_Q_OFFSET_RANGE_MINUS_3,
   MSM_Q_OFFSET_RANGE_MINUS_2,
   MSM_Q_OFFSET_RANGE_MINUS_1,
   MSM_Q_OFFSET_RANGE_0,
   MSM_Q_OFFSET_RANGE_1,
   MSM_Q_OFFSET_RANGE_2,
   MSM_Q_OFFSET_RANGE_3,
   MSM_Q_OFFSET_RANGE_4,
   MSM_Q_OFFSET_RANGE_5,
   MSM_Q_OFFSET_RANGE_6,
   MSM_Q_OFFSET_RANGE_8,
   MSM_Q_OFFSET_RANGE_10,
   MSM_Q_OFFSET_RANGE_12,
   MSM_Q_OFFSET_RANGE_14,
   MSM_Q_OFFSET_RANGE_16,
   MSM_Q_OFFSET_RANGE_18,
   MSM_Q_OFFSET_RANGE_20,
   MSM_Q_OFFSET_RANGE_22,
   MSM_Q_OFFSET_RANGE_24
} MsmLteOffsetRange;

typedef struct msmLteSSearchRel9
{
   U8 sSearchPRel9;
   U8 sSearchQRel9;
} MsmLteSSearchRel9;


typedef enum msmSubscriptionGroup
{
   MSM_LTE_ADMIN_STATE_CHANGE,
   MSM_LTE_PRACH_CONFIG_COMMON_PARAMETERS,
   MSM_LTE_ENODEB_IP_PARAMETERS,
   MSM_LTE_RACH_CONFIG_COMMON_PARAMETERS,
   MSM_LTE_PDSCH_CONFIG_COMMON_PARAMETERS,
   MSM_LTE_UL_POWER_CONTROL_COMMON_PARAMETERS,
   MSM_LTE_UL_FREQUENCY_INFO_PARAMETERS,
   MSM_LTE_CELL_SIB3_CONFIG_GROUP_PARAMETERS,
   MSM_LTE_CELL_SIB1_CONFIG_GROUP_PARAMETERS,
   MSM_LTE_DRX_CONFIG_PARAMETERS,
   MSM_LTE_CELL_MEAS_CONFIG_PARAMETERS,
   MSM_LTE_ADD_CELL_CONFIG_PARAMETERS,
   MSM_LTE_SM_CELL_CONFIG_PARAMETERS,
   MSM_LTE_CELL_MIB_CONFIG_PARAMETERS,
   MSM_LTE_MAC_SCH_CONFIG_PARAMETERS,
   MSM_LTE_ANTENNA_COMMON_CONFIG_PARAMETERS,
   MSM_LTE_PDSCH_CONFIG_DEDICATED_PARAMETERS,
   MSM_LTE_PUSCH_BASIC_CFG_COMMON_PARAMETERS,
   MSM_LTE_PUSCH_REF_SIGNAL_CFG_PARAMETERS,
   MSM_LTE_PUCCH_CFG_COMMON_PARAMETERS,
   MSM_LTE_SRS_CFG_COMMON_PARAMETERS,
   MSM_LTE_RAB_SRB1_POLICY_CFG_GRP_PARAMETERS,
   MSM_LTE_RAB_SRB2_POLICY_CFG_GRP_PARAMETERS,
   MSM_LTE_UE_TIMER_CONSTANTS_PARAMETERS,
   MSM_LTE_CELL_EAID_CFG_GRP_PARAMETERS,
   MSM_LTE_CELL_SIB9_CFG_GRP_PARAMETERS,
   MSM_LTE_CQI_PERIODIC_REPORT_CFG_PARAMETERS,
   MSM_LTE_UTRA_NEIGH_FREQ_CFG_PARAMETERS,
   MSM_LTE_EUTRAN_NEIGH_FREQ_CFG_PARAMETERS,
   MSM_LTE_EUTRAN_NEIGHBORLIST_IN_USE_PARAMETERS,
   MSM_LTE_UTRA_NEIGHBORLIST_IN_USE_PARAMETERS,
   MSM_LTE_SIB5_INTER_FREQ_CARRIER_INFO_PARAMETERS,
   MSM_LTE_CELL_SIB6_CONFIG_GROUP_PARAMETERS,
   MSM_LTE_DYNAMIC_CFI_PARAMETERS,
   MSM_LTE_ENB_PROTO_CFG_PARAMETERS,
   MSM_LTE_UPDATE_SON_SELECTED_PCI,
   MSM_LTE_UPDATE_PCI_LIST,
   MSM_LTE_UPDATE_SON_SELECTED_EARFCNUL,
   MSM_LTE_UPDATE_SON_SELECTED_EARFCNDL,
   MSM_LTE_UPDATE_EARFCN_LIST,
   MSM_LTE_UPDATE_PRACH_CONFIG,
   MSM_LTE_FACTORY_PARAMETERS,
   MSM_LTE_AC_BARRING_INFO_PARAMETERS,
   MSM_LTE_SELF_CONFIG_PARAMETERS,
   MSM_ENB_IP_ADDRESS,
   MSM_LTE_TUNNEL_INFO_PARAMETERS,
   MSM_LTE_POWER_OFFSET_PARAMETERS,
   MSM_LTE_FAP_CONTROL_PARAMETERS,
   MSM_LTE_PRB_ALLOCATION_PARAMETERS,
   MSM_LTE_SIB4_CSG_INFO_PARAMETERS,
   MSM_LTE_RRM_TDD_PARAMETERS,
   MSM_LTE_TDD_PARAMETERS,
   MSM_LTE_FAP_ACCESS_PARAMETERS,
   MSM_LTE_X2_CONFIG_PARAMETERS,
   MSM_LTE_SCTP_CONFIG_PARAMETERS,
   MSM_LTE_PCCH_CONFIG_COMMON_PARAMETERS,
   MSM_LTE_CELL_UL_SCHD_CONFIG_PARAMETERS,
   MSM_LTE_CELL_DL_SCHD_CONFIG_PARAMETERS,
   MSM_LTE_MS_CELL_CFG_REQ_PARAMETERS,
   MSM_LTE_DBG_PARAMETERS,
   MSM_LTE_UL_ALLOC_INFO_CB_PARAMETERS,
   MSM_LTE_PROC_TIMER_CFG_PARAMETERS,
   MSM_PM_PARAMETERS,
   MSM_FREQUENT_FAULT_PARAMETERS,
   MSM_CDMA_BAND_CLASS_PARAMETERS,
   MSM_CDMA_MOBILITY_PARAMETERS,
   MSM_BARRING_CFG_1XRTT,
   MSM_CDMA_1XRTT_CELL,
   MSM_CDMA_1XRTT_CSFB_REG_INFO,
   MSM_CDMA_1XRTT_CSFB_CFG_INFO,
   MSM_LTE_SPS_PARAMETERS,
   MSM_LTE_TM_PARAMETERS,
   MSM_CDMA_1XRTT_DSCP_CFG_INFO,
   MSM_TENB_STATS_CFG,
   MSM_LTE_LOG_LVL_PARAMETERS,
   MSM_GERAN_NEIGHBOR_CELL_IN_USE_PARAMETERS,

   MSM_LTE_CONFIGURATION_COMPLETE_END
} MsmSubscriptionGroup;




typedef enum msmActType
{
   MSM_ACT_ADD = 1,
   MSM_ACT_MOD,
   MSM_ACT_DEL,
   MSM_DYN_ADD
} MsmActType;


typedef enum msmLteNeighType
{
   MSM_NEIGH_CELL_EUTRA,
   MSM_NEIGH_CELL_CDMA2K_1XRTT,
   MSM_NEIGH_CELL_CDMA2K_HRPD,
   MSM_NEIGH_CELL_UTRA,
   MSM_NEIGH_CELL_GERAN
}MsmLteNeighType;


typedef struct msmDynCfmInfo
{
   U16 cfgType;
   U8 action;
   union key
   {
      U8 neighFreqIndx;
      U8 neighCellIndex;
   } u;
}MsmDynCfmInfo;




typedef enum msmCfmType
{
   MSM_CFM_SUCCESS = 0,
   MSM_CFM_FAILURE,
} MsmCfmType;




typedef enum msmCauseType
{
   MSM_CAUSE_CFG_FAIL = 0,
   MSM_CAUSE_TIMER_EXPIRY,
   MSM_CAUSE_NA,
} MsmCauseType;


typedef struct msmLteAdminStateParams
{
   U32 adminState;
   U32 rfTx_OpState;

}MsmLteAdminStateParams;




typedef struct msmLteRimParams
{
   U32 rimOvrlTmrVal;

   U32 rimRirTmr;
   U32 rimRiTmr;
   U32 rimRiaeTmr;
   U32 rimMaxRetryCnt;
}MsmLteRimParams;

typedef enum msmLtePciSelType
{
   MSM_PCI_SEL_DISABLE,
   MSM_PCI_SEL_DSON,
   MSM_PCI_SEL_CSON
}MsmLtePciSelType;

typedef enum msmLtePrachSelType
{
   MSM_PRACH_SEL_DISABLE,
   MSM_PRACH_SEL_DSON,
   MSM_PRACH_SEL_CSON
}MsmLtePrachSelType;

typedef enum msmLteEarfcnSelType
{
   MSM_EARFCN_SEL_DISABLE,
   MSM_EARFCN_SEL_DSON,
   MSM_EARFCN_SEL_CSON
}MsmLteEarfcnSelType;



typedef struct msmLteSonGenericParams
{
   MsmActType actType;
   Bool isPciSelEnabled;
   Bool isPrachSelEnabled;
   Bool isEarfcnSelEnabled;
   Bool isTxPowerSelEnabled;
   U8 sonSrvrVendor;

}MsmLteSonGenericParams;



typedef struct msmLteSrvdCellPciListCfg
{
   U32 numPci;
   U16 pciLst[512];
}MsmLteSrvdCellPciListCfg;

typedef struct msmRssiEarfcn
{
   U16 earfcnDl;
   S32 rssi;
}MsmRssiEarfcn;

typedef struct msmLteEarfcnRssiCfg
{
   U8 numEarfcn;
   MsmRssiEarfcn remScanEarfcn[40];
}MsmLteEarfcnRssiCfg;


typedef struct msmEarfcnListCfg
{
   U8 numEarfcnDl;
   U8 numEarfcnUl;
   U32 earfcnDlLst[64];
   U32 earfcnUlLst[64];
}MsmEarfcnListCfg;





typedef struct msmPrachCfgInfo
{
   Bool highSpeedFlag;
   U8 zeroCorrelationZoneCfg;
   U8 prachFreqOffset;
} MsmPrachCfgInfo;

typedef struct msmPrachParamLst
{
   U8 numRootSeqIndex;
   U8 numPrachCfgIdx;
   U8 numZeroCorrZoneCfg;
   U8 numPrachFreqOffset;
   U16 rootSequenceIndxLst[838];


   U8 prachCfgIdxLst[256];


   U8 zeroCorrelationZoneCfgLst[64];


   U8 prachFreqOffsetLst[256];


}MsmPrachParamLst;


typedef struct msmLtePrachCfgCommon
{
   MsmActType actType;
   U16 rootSequenceIndx;
   MsmPrachCfgInfo prachCfgInfo;
   U8 prachPosition;
   MsmPrachParamLst prachParamLst;
} MsmLtePrachCfgCommon;


typedef struct msmLteCellCarrierParams
{
   MsmActType actType;
   U32 earfdnDl;

}MsmLteCellCarrierParams;
typedef struct mmeiptype
{
   U32 mmeipv4;
   U8 mmeipv6[16];
   Bool ipv4pres;
   Bool ipv6pres;
}Mmeiptype;

typedef struct msmLteeNodeBIPparams
{
   MsmActType actType;
   U32 lteS1connmode;
   Mmeiptype lteSiglinkserverlist[16];
   U16 sctpPortNumS1;
   Mmeiptype lteSecIp1[16];
   Mmeiptype lteSecIp2[16];
   Mmeiptype lteSecIp3[16];
   Mmeiptype lteSecIp4[16];
}MsmLteeNodeBIPparams;


typedef struct msmLtePreambleCfgParams
{
   MsmActType actType;
   U8 numOfRAPreambles;
   U8 groupASize;
   U16 msgSizeGroupA;
   U8 pwrOffstGrpB;
}MsmLtePreambleCfgParams;


typedef struct msmLtePowerRampingParams
{
   MsmActType actType;
   U8 powerRampingstep;
   U16 initRcvdTrgtPwr;
}MsmLtePowerRampingParams;


typedef struct msmLteRaSupervisionCfgParams
{
   MsmActType actType;
   U8 preambleTransMax;
   U8 rarWindowSize;
   U8 macContResTimer;
}MsmLteRaSupervisionCfgParams;


typedef struct msmLteRachCfgCommonParams
{
   MsmLtePreambleCfgParams ltePreambleCfg;
   MsmLtePowerRampingParams ltePowerRamping;
   MsmLteRaSupervisionCfgParams lteRaSupervisionCfg;
   U8 maxHARQMsg3;
} MsmLteRachCfgCommonParams;






typedef struct msmLtePdschCfgCommon
{
   MsmActType actType;
   U8 refSignalPwrCnt;
   S8 referenceSignalPwr[128];
   U8 pBCnt;
   U8 pB[8];
} MsmLtePdschCfgCommon;


typedef struct msmLtePdschCfgDedicated
{
   MsmActType actType;
   U8 pACnt;
   U8 pA[4];
} MsmLtePdschCfgDedicated;


typedef struct msmLteDeltaPUCCHLst
{
   U8 deltaPucchFormat1;
   U8 deltaPucchFormat1b;
   U8 deltaPucchFormat2;
   U8 deltaPucchFormat2a;
   U8 deltaPucchFormat2b;
} MsmLteDeltaPUCCHLst;



typedef struct msmLteULPwrCtrlCommon
{
   MsmActType actType;
   S8 pNomialPusch;
   U8 alpha;
   S8 pNomialPucch;
   MsmLteDeltaPUCCHLst deltaFLst;
   S8 deltaMsg3;
} MsmLteULPwrCtrlCommon;


typedef enum msmLteBandwidth
{
   MSM_LWR_BANDWIDTH_6,
   MSM_LWR_BANDWIDTH_15,
   MSM_LWR_BANDWIDTH_25,
   MSM_LWR_BANDWIDTH_50,
   MSM_LWR_BANDWIDTH_75,
   MSM_LWR_BANDWIDTH_100
} MsmLteBandwidth;


typedef struct msmLteULFrequencyInfo
{
   MsmActType actType;
   U16 eARFCN;
   MsmLteBandwidth ulBandwidth;

} MsmLteULFrequencyInfo;


typedef struct msmLteDynCfiGrp
{
   Bool isDynCfiEnb;
}MsmLteDynCfiGrp;

typedef struct msmLteMeasMobilityStatParams
{
   MsmActType actType;
   U16 tEvalulation;

   U16 tHystNormal;
   U16 nCellChangeMedium;

   U16 nCellChangeHigh;

} MsmLteMeasMobilityStatParams;


typedef struct msmLteSib3IntraFreqCellResel
{
   MsmActType actType;
   S8 qRxLevMin;
   S8 pMax;
   U8 SIntraSearch;


   U8 tReselEutra;
   U8 tReselectionSfMedium;
   U8 tReselectionSfHigh;
} MsmLteSib3IntraFreqCellResel;


typedef struct msmLteSib3ServFreqInfo
{
   MsmActType actType;
   U8 sNonIntraSearch;
   U8 threshServingLow;
   U8 cellReselPrio;
} MsmLteSib3ServFreqInfo;




typedef struct msmLteCellSib3CfgGrp
{
   MsmActType actType;
   U8 qHyst;
   U8 sfMedium;
   U8 sfHigh;
   MsmLteMeasMobilityStatParams mobStateParams;
   MsmLteSib3ServFreqInfo servFreqInfo;
   MsmLteSib3IntraFreqCellResel intraFreqReSel;

} MsmLteCellSib3CfgGrp;


typedef struct msmLtePlmnId
{
   U8 numMncDigits;
   U8 mcc[3];
   U8 mnc[3];
} MsmLtePlmnId;


typedef struct msmLtePlmnInfo
{
   MsmLtePlmnId plmnId;
   U8 rsrvdFrOperUse;
   U8 isPrimary;
} MsmLtePlmnInfo;


typedef struct msmLteCellAccessInfo
{
   MsmActType actType;
   U8 maxNumOfPlmns;
   U8 numOfPlmns;
   MsmLtePlmnInfo plmnInfo[6];

   U16 tac;

   U32 cellId;
   Bool cellBarred;


   U32 csgIdentity;
} MsmLteCellAccessInfo;




typedef struct msmLteCellSelectInfo
{
   MsmActType actType;
   S8 qRxLevMin;
   U8 qRxLevMinOffset;


} MsmLteCellSelectInfo;




typedef struct msmLteCellSib1CfgGrp
{
   MsmActType actType;
   MsmLteCellAccessInfo cellAccessInfo;

   MsmLteCellSelectInfo cellSelectInfo;

   S8 pMax;
   U8 freqBandInd;
} MsmLteCellSib1CfgGrp;




typedef struct msmLteMeasEvntRptCfg
{
   MsmActType actType;
   U32 threshold_RSRP;

   U32 threshold_RSRQ;

   U32 hysteresis;

   U32 timeToTrigger;
   U8 triggerQty;

   U8 reportQty;
   U8 maxRptCells;

   U32 reportInterval;
   U32 reportAmount;
} MsmLteMeasEvntRptCfg;



typedef struct msmLteMeasEvntA5RptCfg
{
   MsmActType actType;

   U32 threshold1_RSRP;

   U32 threshold1_RSRQ;

   U32 threshold2_RSRP;

   U32 threshold2_RSRQ;

   U32 hysteresis;

   U32 timeToTrigger;
   U8 triggerQty;

   U8 reportQty;
   U8 maxRptCells;
   U32 reportInterval;
   U32 reportAmount;
} MsmLteMeasEvntA5RptCfg;

typedef struct msmLteMeasEvntA3RptCfg
{

   U8 reason;
   S32 offset;
   U8 reportOnLeave;
   U32 hysteresis;
   U32 timeToTrigger;
   U8 triggerQty;
   U8 reportQty;
   U8 maxRptCells;
   U32 reportInterval;
   U32 reportAmount;
} MsmLteMeasEvntA3RptCfg;


typedef struct msmLteMeasUtraEvntB2RptCfg
{
   MsmActType actType;

   U8 b2Threshold1RSRP;



   U8 b2Threshold1RSRQ;



   S8 b2Threshold2UtraRSCP;



   U8 b2Threshold2UtraEcNo;



   U32 hysteresis;

   U32 timeToTrigger;




   U8 maxReportCell;

   U32 reportInterval;

   U32 reportAmount;

   S32 b2Threshold2UtraTddRSRP;
}MsmLteMeasUtraEvntB2RptCfg;


typedef struct msmLteMeasGeranEvntB2RptCfg
{
   MsmActType actType;
   U32 b2Threshold1RSRP;
   U32 b2Threshold1RSRQ;
   U32 b2Threshold2Geran;

   U8 hysteresis;

   U16 timeToTrigger;

   U8 maxReportCell;


   U8 reportInterval;


   U8 reportAmount;

}MsmLteMeasGeranEvntB2RptCfg;


typedef struct msmMeasCDMAPeridRptCfg
{
 U8 maxReportCell;

    U32 reportInterval;

    U32 reportAmount;
}MsmMeasCDMAPeridRptCfg;
typedef struct msmMeasEutraPeridRptCfg
{


   U8 triggerQty;
   U8 reportQty;
   U8 maxRptCells;
   U32 reportInterval;
   U32 reportAmount;
   Bool isPerdStrongCellCfgRptEnable;
   U32 sonCfgRptInterval;
}MsmMeasEutraPeridRptCfg;
typedef struct msmMeasUtraPeriodRptCfg
{


   U8 maxReportCell;
   U8 reportInterval;
   U8 reportAmount;
}MsmMeasUtraPeriodRptCfg;
typedef struct msmMeasSpdStateScaleFact
{
   U8 sMeasure;

   U8 timeToTriggerSfMedium;
   U8 timeToTriggerSfHigh;
} MsmMeasSpdStateScaleFact;


typedef struct msmLteMeasQtyCfgParams
{
   MsmActType actType;
   U8 rsrpFltrCoeff;
   U8 rsrqFltrCoeff;
   U8 measQtyCDMA2k;
   U8 ecnoFltrCoeff;
   U8 measQtyUtraFdd;
   U8 fltrCoeffGERAN;
   U8 filterCoefficient2FDDr10;
   U8 measQtyUtraTdd;
} MsmLteMeasQtyCfgParams;


typedef struct msmLteMeasGapConfig
{
   U32 gapPatternForInterFA;
   U32 gapPatternForInterRAT;

   U32 gapPatternForANR;
} MsmLteMeasGapConfig;


typedef struct msmLteMeasGERANPeridRptCfg
{
   U8 maxRptCells;
   U32 reportInterval;
   U32 reportAmount;
} MsmLteMeasGERANPeridRptCfg;




typedef struct msmLteCellMeasCfgGrp
{
   MsmActType actType;
   MsmLteMeasEvntRptCfg measA1EvtRptCfg[4];
   MsmLteMeasEvntRptCfg measA2EvtRptCfg[10];
   MsmLteMeasEvntA3RptCfg measEvtA3Cfg[5];
   MsmLteMeasEvntA5RptCfg measEvtA5Cfg[5];

   MsmLteMeasUtraEvntB2RptCfg measUtraEventB2RptCfg[4];
   MsmLteMeasGeranEvntB2RptCfg measGeranEventB2RptCfg[2];
   MsmMeasCDMAPeridRptCfg measCDMA1xPeridRptCfg[3];
   MsmMeasEutraPeridRptCfg measEutraPeridRptCfg[2];
   MsmMeasUtraPeriodRptCfg measUtraPeriodRptCfg[4];
   MsmMeasSpdStateScaleFact measSpeedCfg;
   MsmLteMeasQtyCfgParams qtyCfg;
   MsmLteMeasGapConfig measGap;
   U8 isA3SupportReq;
   U8 anrRptCfg;
   U8 hoRptCfg;
   MsmLteMeasGERANPeridRptCfg measGERANPeridRptCfg[3];




}MsmLteCellMeasCfgGrp;





typedef struct msmDrxLongCycleOffst
{

   U16 longDrxCycleGbr;
   U16 longDrxCycleNonGbr;

} MsmDrxLongCycleOffst;
typedef struct msmDrxShortDrx
{
   U16 shortDrxCycle;
   U8 drxShortCycleTmr;
} MsmDrxShortDrx;
typedef struct msmLteDrxCfgParams
{
   MsmActType actType;
   Bool isDrxEnabled;


   U16 drxInactvTmr;
   U8 drxRetxTmr;
   MsmDrxLongCycleOffst drxLongCycleOffst;

   Bool isDRXQCIEnabled;

}MsmLteDrxCfgParams;


typedef struct msmSpsCellConfigData
{
   MsmActType actType;
   Bool bIsSpsEnabled;
   U16 maxDlSpsUePerTti;
   U16 maxUlSpsUePerTti;
   U8 maxDlBwInRbs;
} MsmSpsCellConfigData;



typedef struct msmTMCellConfig
{
   MsmActType actType;
   Bool bIsAutoConfigEnabled;
   U8 preferredTransMode;
   U8 transModeUse;
} MsmTMCellConfig;



typedef struct msmEnbLogLvlData
{
   U8 enbL3LogLvl;
   U8 enbL2LogLvl;
   U8 remoteLogin;
   U8 enbLog_mask;
} MsmEnbLogLvlData;




typedef struct msmLteAddCellCfg
{
   MsmActType actType;

   U16 physCellId;
   U8 duplexMode;
   U32 dlCarrierFreq;
   U32 earfdnDl;
   U32 earfdnUl;

   U8 isSmallCellPciCfgd;
   U16 startPci;
   U16 pciRange;
   Bool isCcoEnabled;
   Bool isGERANMeasAllowedForCCO;
   S8 cellSizeType;
   U16 emergencyServicePriorityLevel;
   MsmLteSrvdCellPciListCfg pciListCfg;
   MsmEarfcnListCfg earfcnListCfg;
   U8 minDlResNonCsg;
   U8 minUlResNonCsg;
} MsmLteAddCellCfg;


typedef struct msmLteGenUeCfg
{

  MsmActType actType;
  S32 intgAlgo[4];
  S32 ciphAlgo[4];
} MsmLteGenUeCfg;


typedef struct msmLteSmCellCfg
{
   MsmActType actType;


   U16 duplexMode;
   S16 maxUeSupp;

   U8 maxAvgGbrPrbUsage;
   U16 rrmQci1TmngReq;
   U8 rrmQci2TmngReq;
   U8 rrmQci3TmngReq;
   U8 rrmQci4TmngReq;
   U8 rrmQci4TmngReqEnable;



   U16 trackAreaCode;

   MsmLteGenUeCfg genUeCfg;


   U16 rrmRntiStart;
   U16 maxRrmRntis;
   U16 rrmPrmblStart;
   U16 maxRrmPrmbls;
   U16 macRntiStart;
   U16 maxMacRntis;
   U8 numOfMacPrm;

   U32 numOfPrbRpts;

   U32 prbRptIntvl;
   U8 dfltCfiCfg;

    U32 maxX2Peers;
} MsmLteSmCellCfg;

typedef struct msmLteFreqSyncParams
{
   U32 freqSyncPci;
   U32 freqSyncEarfcn;
}MsmLteFreqSyncParams;




typedef struct msmLteCellMibCfgGrp
{
   MsmActType actType;
   U8 dlBwCnt;
   MsmLteBandwidth dlBw[6];

} MsmLteCellMibCfgGrp;







typedef struct msmLteMAC_SCH_Config
{
   MsmActType actType;
   U32 maxHARQ_Tx;
   U32 periodicBSR_Timer;
   U32 retxBSR_Timer;
   U8 ttiBundling;
} MsmLteMAC_SCH_Config;


typedef struct msmLteAntenna_Common_Config
{
   MsmActType actType;
   U8 numAntPorts;
}MsmLteAntenna_Common_Config;


typedef struct msmSonPrachInfo
{
   U16 rootSeqIndex;
   U8 zeroCorrelationZoneCfg;
   U8 highSpeedFlag;
   U8 prachCfgIdx;
   U8 prachFreqOffset;
}MsmSonPrachInfo;


typedef struct msmEUTRANeighCell
{
   Bool enable;
   U8 nrIndex;
   U32 cid;
   U16 pci;
   U16 tac;


   U8 numPlmn;
   MsmLtePlmnId plmnId[6];



   U16 earfcnDl;



   U16 earfcnUl;


   U8 cio;



   U8 qoffset;



   S8 RSTxPower;
   Bool BlackListed;

  U8 csgAccessMode;
  U32 csgId;

  Bool mustInclude;

   U8 numAntenna;
   U8 ulDlSubFrameCfg;
   U8 splSfCfg;
   U8 cpDl;
   U8 cpUl;
   S16 rsrp;
   S16 rssi;
   U8 ulBw;
   U8 dlBw;
   U16 lteBand;
   Bool isCellBarred;
   Bool isPrachConfig;
   MsmSonPrachInfo prachCfgInfo;
   U8 numIntraFreqNeighbors;
   U16 intraFreqNghPci[40];
   U8 isHeMsCell;

   U32 enbAddr;
   U8 enbIpv6Addr[16];
   Bool isIpv4Pres;
   Bool isIpv6Pres;
   U32 peerId;
   Bool isNewNbrEnb;


   U8 enbType;
   Bool isX2Reqd;
   MsmDynCfgInd dynCfgInd;
}MsmEUTRANeighCell;


typedef struct msmUtraTddNeighCell
{
   U32 nrIndex;
   U16 rncId;
   U16 cId;
   U16 lac;
   U8 rac;
   U8 ura;
   U8 numPlmn;
   MsmLtePlmnId plmnId[6];
   S8 pccpch;
   U16 arfcn;
   U8 duplexMode;
   U8 cellParamId;
   Bool isRimSupported;
} MsmUtraTddNeighCell;


typedef struct msmUtraNeighCell
{
   U32 nrIndex;
   U16 rncId;
   U16 cId;
   U16 lac;
   U8 rac;
   U8 numPlmn;
   MsmLtePlmnId plmnId[6];
   U16 psc;
   S8 pcpichTxPower;
   U16 arfcnUl;

   U16 arfcnDl;

   U8 duplexMode;
   Bool isRimSupported;
   Bool isVoipCapable;
   Bool isPsHOCapable;

   MsmDynCfgInd dynCfgInd;
} MsmUtraNeighCell;




typedef struct msmCdmaTgtcell
{
   U16 marketId;
   U16 switchNum;
   U16 cellId;
   U16 sectorNum;
}MsmCdmaTgtCell;

typedef struct msmCDMA1xNeighCell
{
   U8 cellType;
   S8 *CID;
   U8 bandClass;
   U32 arfcn;
   U16 pnOffset;
   U16 curRank;
   MsmCdmaTgtCell tgtCell;
   U8 systemType;
   U16 channelNum;

   U32 neighCellFlag;

   S8 freqPriority;

} MsmCDMA1xNeighCell;


typedef struct msmLteGERANNeighCell
{
   MsmLtePlmnId plmnId;
   U16 lac;
   U16 rac;
   U8 bsic;
   U16 ci;
   U8 bandIndicator;
   U16 bcchArfcn;
   U8 ncc_PermittedMeas;
   Bool isDTMCapable;
   Bool rimSupportForGeranNgh;
   U8 networkControlOrder;
   Bool networkControlOrderPres;
   S8 qoffsetGERAN;
   S8 offsetFreq;
}MsmLteGERANNeighCell;


typedef struct msmNeighCellAddCfg
{
   MsmEUTRANeighCell eutraCell;
   MsmCDMA1xNeighCell cdma1xCell;

   MsmUtraNeighCell utranCell;
   MsmUtraTddNeighCell utranTddCell;
   MsmLteGERANNeighCell geranCell;
} MsmNeighCellAddCfg;


typedef struct msmEutranCellDelCfg
{
   U16 nrIndex;
   U16 earfcn;
   U16 phyCellId;
}MsmEutranCellDelCfg;


typedef struct msmDynNeighCellDelCfg
{
   union
   {
      MsmEutranCellDelCfg eutranCell;
   }t;
}MsmDynNeighCellDelCfg;


typedef struct msmNeighCellCfg
{

   MsmActType actType;
   U16 maxCellEntries;
   U16 maxTddCellEntries;
   U16 numEutraCells;
   U16 numUtraCells;
   U16 numUtraTddCells;
   U16 numGeranCells;
   U16 numCdma1xCells;
   U16 isX2Enabled;
   union
   {
      MsmNeighCellAddCfg neighAddCfg[40];
   }t;
} MsmNeighCellCfg;

typedef struct msmDynNeighCellAddModCfg
{
   union
   {
      MsmEUTRANeighCell eutraCell;
      MsmCDMA1xNeighCell cdma1xCell;
      MsmUtraNeighCell utranCell;
      MsmUtraTddNeighCell utranTddCell;
      MsmLteGERANNeighCell geranCell;
   }t;
}MsmDynNeighCellAddModCfg;



typedef struct msmDynNeighCellCfg
{
   MsmActType actType;
   U8 cellType;
   union
   {
      MsmDynNeighCellAddModCfg addModCfg;
      MsmDynNeighCellDelCfg delCfg;
   }t;
}MsmDynNeighCellCfg;



typedef struct msmLtePuschBasicCfgCommon
{
   MsmActType actType;
   U8 nSb;
   U8 hoppingMode;
   U8 hoppingOffset;
   Bool enable64QAM;
} MsmLtePuschBasicCfgCommon;


typedef struct msmLtePuschRefSignalCfg
{
   MsmActType actType;
   Bool grpHopEnabled;
   U8 grpAsgnPusch;
   Bool seqHopEnabled;
   U8 cyclicShift;
} MsmLtePuschRefSignalCfg;


typedef enum msmLteDeltaPucchShift
{
   MSM_DELTA_PUCCH_SHIFT_1,
   MSM_DELTA_PUCCH_SHIFT_2,
   MSM_DELTA_PUCCH_SHIFT_3
} MsmLteDeltaPucchShift;




typedef struct msmLtePucchCfgCommon
{
   MsmActType actType;
   MsmLteDeltaPucchShift deltaShift;
   U8 nRBCqi;

   U8 nCSAN;

   U16 n1PucchAn;
} MsmLtePucchCfgCommon;


typedef struct msmLteSRSCfgCommon
{
   MsmActType actType;
   Bool enable;
   U8 cSrs;

   Bool simulAckNackSrs;
   Bool srsMaxUpts;
} MsmLteSRSCfgCommon;


typedef struct msmLteSrbRlcInfo
{
   MsmActType actType;
   U8 srbId;
   Bool srbDefaultCfg;
   U8 tpRetransmit;
   U8 pollPdu;
   U8 pollByte;
   U8 maxRetransThresh;
   U8 timerReordering;
   U8 timerStatusProhibit;
}MsmLteSrbRlcInfo;


typedef struct msmLteSrbPolicy
{
   MsmActType actType;
   U8 srbId;
   MsmLteSrbRlcInfo rlcInfo;


}MsmLteSrbPolicy;

typedef struct msmDrbDscpInfo
{
   S16 qci;
   U16 dscp;
   U16 port;
}MsmDrbDscpInfo;

typedef struct msmLteDrbPolicy
{
   U32 reCfgType;
   U8 qci;
   MsmActType action;




   MsmDrbDscpInfo dscpInfo;
} MsmLteDrbPolicy;



typedef struct msmLteRabPolicyCfgGrp
{
   MsmActType actType;
   Bool isDscpEnable;

   U8 numDrbPolicies;
   MsmLteSrbPolicy srbPolicy[3];
   MsmLteDrbPolicy drbPolicy[9];
} MsmLteRabPolicyCfgGrp;


typedef struct msmLteUeTimerConstants
{
   MsmActType actType;
   U16 t300;
   U16 t301;
   U16 t302;
   U16 t304;
   U16 ccoT304;
   U16 t310;
   U16 n310;
   U16 t311;
   U16 n311;
   U16 t320;
} MsmLteUeTimerConstants;


typedef struct msmLteCellEAIDCfgGrp
{
   MsmActType actType;
   U32 eaid[15];
} MsmLteCellEAIDCfgGrp;


typedef struct msmLteCellSib9CfgGrp
{
   MsmActType actType;
   U8 henbName[48];
}MsmLteCellSib9CfgGrp;


typedef struct msmLteSubBandCQI
{
   MsmActType actType;
   U8 k;
}MsmLteSubBandCQI;


typedef struct msmLteCQIPeriodicReportCfg
{
   MsmActType actType;
   U16 cqi_PUCCH_ResourceIdx;
   MsmLteSubBandCQI subBandCQI;
} MsmLteCQIPeriodicReportCfg;


typedef struct msmLteNeighEutraFreq
{
   U32 reCfgType;
   U8 freqIndex;
   U8 status;
   U16 earfcnUl;
   U16 earfcnDl;
   U8 priority;
   S8 qRxLevMin;
   S8 pMax;
   U8 tReselection;
   U8 tReselectionSFMed;
   U8 tReselectionSFHigh;
   U8 sIntraSearch;
   U8 sNonIntraSearch;
   U8 servThresholdLow;
   U8 threshXHigh;
   U8 threshXLow;
   U8 measBandwidth;
   Bool presAntennaPort1;
   U8 neighCellCfg;
   U8 qOffsetFreq;
   U8 offsetFreq;
   S8 qQualMinRel9;
   U8 threshXHighQR9;
   U8 threshXLowQR9;
   U8 reselecThreshQRel9;
   MsmLteSSearchRel9 sIntraSearchRel9;
   MsmLteSSearchRel9 sInterSearchRel9;
   Bool pMaxUsage;
   Bool sfUsage;
   MsmDynCfgInd dynCfgInd;
} MsmLteNeighEutraFreq;


typedef struct msmLteNeighUtraFreq
{
   Bool enable;

   U8 freqIndex;

   U16 arfcnUl;
   U16 arfcnDl;
   U8 priority;
   U8 threshXhigh;
   U8 threshXlow;
   S8 qRxLevMin;
   S8 pMaxUtra;
   S8 pQualMin;
   S8 offsetFreq;

   U8 duplexModeUtra;
   U8 threshXHighQR9;
   U8 threshXLowQR9;

   MsmDynCfgInd dynCfgInd;
} MsmLteNeighUtraFreq;


typedef struct msmLteNeighUtraTddFreq
{
   U8 freqIndex;
   U16 arfcn;
   U8 priority;
   U8 threshXhigh;
   U8 threshXlow;
   S8 qRxLevMin;
   S8 pMaxUtra;
   S8 offsetFreq;

   U8 duplexModeUtra;
   U8 tddMode;
   U8 bandIndicator;
} MsmLteNeighUtraTddFreq;


typedef struct msmLteNeighGERANFreq
{
   U8 bandIndicator;
   U16 bcchArfcn;
   S8 qRxLevMin;
   U8 cellReselectionPriority;
   U8 threshXHigh;
   U8 threshXLow;
   U8 ncc_Permitted;
   U8 pMaxPres;
   U8 pMax;
} MsmLteNeighGERANFreq;


typedef struct msmLteNeighCdma1xFreq
{
   S8 offsetFreq;
   U8 reCfgType;
   U8 freqIndex;
   Bool status;
   U16 arfcn;
   U8 searchRate;
   U8 freqPriority;
   U8 bandClass;
} MsmLteNeighCdma1xFreq;

typedef struct msmLteNeighEutraDelFreq
{
   U8 freqIndex;
}MsmLteNeighEutraDelFreq;

typedef struct msmLteNeighFreqDelCfg
{
  MsmLteNeighEutraDelFreq eutranFreq;




}MsmLteNeighFreqDelCfg;


typedef struct msmLteNeighFreqAddCfg
{
      MsmLteNeighEutraFreq eutranFreq;
      MsmLteNeighCdma1xFreq cdma1xFreq;

      MsmLteNeighUtraFreq utranFreq;
      MsmLteNeighUtraTddFreq utranTddFreq;
      MsmLteNeighGERANFreq geranFreq;
} MsmLteNeighFreqAddModCfg;


typedef struct msmLteNeighFreqCfg
{
   MsmActType actType;

    U8 maxUtraTddFreqEntries;
    U8 numUtraTddFreq;
    U8 maxUtraFreqEntries;
    U8 numUtraFreq;
    U8 numEutraFreq;
    U8 numCdma1xFreq;
    U8 numGeranFreq;
   union
   {
      MsmLteNeighFreqAddModCfg addNeighFreq[16];
      MsmLteNeighFreqAddModCfg dynNeighFreq;
      MsmLteNeighFreqDelCfg delNeighFreq;
   }t;
} MsmLteNeighFreqCfg;


typedef struct msmLteSib5InterFreqCarrierInfo
{
   MsmActType actType;
   U16 maxCellEntries;
   U16 numCells;
   Bool enable;
   U16 arfcnDl;
   S8 qRxLevMin;
   U8 qOffsetFreq;
   U8 cellReselPrio;
   S8 pMax;
   U8 tReselEutra;
   U8 tResetEutraSFMedium;
   U8 tResetEutraSFHigh;
   U8 threshXHigh;
   U8 threshXLow;


} MsmLteSib5InterFreqCarrierInfo;


typedef struct msmLteCellSib6CfgGrp
{
   MsmActType actType;
   U16 tReselection;
   U8 tReselectionSfMedium;
   U8 tReselectionSfHigh;
}MsmLteCellSib6CfgGrp;

typedef struct msmRatPriorityList
{
   U8 numberOfRats;

   U8 rat[5];

}MsmRatPriorityList;


typedef struct msmLteEnbProtoCfg
{
   MsmActType actType;

   U16 sctpPortNumS1;


   U16 sctpPortNumX2;




   U8 henbName[48];

   U32 enbType;
   U32 enbId;
   U32 numPlmns;
   MsmRatPriorityList plmnRatPriority[6];
   U32 inactvTmrVal;
   U32 endMrkTmrVal;

   U32 maxExpires;
   U8 pwsEtwsCmas;
   U8 avgFreeCpuRqd;
   U8 isRedirectionSupport[6];
   U8 numOfCells;
} MsmLteEnbProtoCfg;


typedef struct msmLteAcBarringCfg
{

   U8 acBarringFactor;
   U16 acBarringTime;
   Bool acBarringAC11;
   Bool acBarringAC12;
   Bool acBarringAC13;
   Bool acBarringAC14;
   Bool acBarringAC15;
} MsmLteAcBarringCfg;


typedef struct msmLteAcBarringInfo
{
   MsmActType actType;
   Bool acBarringForEmergency;
   MsmLteAcBarringCfg acBarringForMOSignal;
   MsmLteAcBarringCfg acBarringForMOData;
   Bool barringDataUsage;

   Bool barringSignalUsage;

} MsmLteAcBarringInfo;


typedef struct msmCellSchdPwrCfg
{
   U16 pucchPwrFmt3Rnti;
   U16 pucchPwrFmt3Siz;
   U16 pucchPwrFmt3aRnti;
   U16 pucchPwrFmt3aSiz;
   U16 puschPwrFmt3Rnti;
   U16 puschPwrFmt3Siz;
   U16 puschPwrFmt3aRnti;
   U16 puschPwrFmt3aSiz;
   U8 pucchPwrFmt3aEnable;
   U8 puschPwrFmt3aEnable;
   U8 isUlGrpPwrCntrlPucchEnable;
   U8 isUlGrpPwrCntrlPuschEnable;
}MsmCellSchdPwrCfg;

typedef struct msmLteRemScanParameters
{
   MsmActType actType;



   U16 maxCellEntries;
   U16 numCells;
   U16 maxCarrierMeasEntries;
   U16 measNumberOfEntries;
   U16 arfcnUl;
   U16 pci;
   S8 rsrp;
   S8 rsrq;
   S8 rssi;
   MsmLteBandwidth dlBw;
   MsmLteBandwidth ulBw;
   S8 rsTxPower;
   U16 tac;
   U32 cellId;
   Bool cellBarred;
   Bool csgIndication;
   U32 csgIdentity;
   MsmLtePlmnId ltePlmnId;
   U8 numPlmn;
   U8 maxNumOfPlmns;
   U8 rsrvdFrOperUse;
   U16 carrierARFCNDL;
   U16 carrierChWidth;
   S16 carrierRSSI;
} MsmLteRemScanParameters;

typedef struct msmRsysTpmCfg
{
   S8 tgtRsrp;
   U8 attnConstIdx;
   S8 minRsrp;
   S8 maxRsrp;
}MsmRsysTpmCfg;


typedef struct msmLteTunnelInfoParams
{
   MsmActType actType;
   Bool enable;
   U16 numOfTunnelEntries;
   U8 tunnelRef[255];
   MsmLtePlmnId tunnelPlmnId;
} MsmLteTunnelInfoParams;


typedef struct msmLtePowerOffsetParams
{
   MsmActType actType;
   U8 pschPowerOffCnt;
   U8 sschPowerOffCnt;
   U8 pbchPowerOffCnt;
   S8 pschPowerOffset[512];
   S8 sschPowerOffset[512];
   S8 pbchPowerOffset[512];
} MsmLtePowerOffsetParams;


typedef struct msmLteFapControlParams
{
   MsmActType actType;
   U8 connHandling;
   U8 maxUserCount;
   U8 maxCapacityRate;
   Bool handOverEmergencyAllowed;
   S8 fapCoverageTarget;
   U16 inServiceDeferredTimer;
   U16 minRBAllocationPerUser;
   Bool enableX2;
   U32 anrEpochPeriod;
   U8 anrTricePeriod;
   U16 anrDrxInactvTmr;
   U8 anrDrxOnDurTmr;
   U16 anrDrxLongCycle;
   U8 specialAccessClass;

   U8 anrCellValidAge;
} MsmLteFapControlParams;


typedef struct msmLtePRBallocation
{
   MsmActType actType;
   MsmLtePlmnId plmns[6];
} MsmLtePRBallocation;


typedef struct msmLteFapAccessParams
{
   MsmActType actType;
   U8 accessMode;
   U8 maxCSGMembers;
   U8 maxNonCSGMembers;
   U8 maxResourceNonCSGMembers;

} MsmLteFapAccessParams;


typedef struct msmLteSib4CsgInfo
{
   MsmActType actType;

  U16 csgStartPhyCellId;

  U8 isCsgPciCfgd;
  U8 csgPciRange;
  U8 csgRange2Offset;
} MsmLteSib4CsgInfo;

typedef struct msmLteRrmTddParam
{
   MsmActType actType;
   U8 srPrdcty;
   U8 cqiPrdcty;
   U8 numSrPerTti;
   U8 numCqiPerTti;
   U8 simulAckNackEnb;
} MsmLteRrmTddParam;

typedef struct msmLteTddParam
{
   MsmActType actType;
   U8 sfconfigMaxEntries;
   U8 sfconfigNumEntries;
   U8 syncStratumId;
   U8 subframeAssignment;
   U8 specialSubFramePattern;
} MsmLteTddParam;

typedef struct msmEnodebIpAddr
{

  U32 enbIpAddr;

  U8 enbIpv6Addr[16];
  Bool ipv4pres;
  Bool ipv6pres;
}MsmEnodebIpAddr;
typedef struct msmLteSctpCfgParams
{
   MsmActType actType;

   U32 heartBeatInterval;

   U32 rtoInitial;
   U32 rtoMin;
   U32 rtoMax;

   U32 maxInitRetx;
   U32 maxPathRetx;
   U32 maxAssocRetx;
   U32 cookieLife;
   U32 localPort;
}MsmLteSctpCfgParams;


typedef struct msmLtePCCHCfgCommon
{
   MsmActType actType;
   U8 defaultPagingCycle;
   U8 nB;
} MsmLtePCCHCfgCommon;

typedef struct msmLteCellUlSchdCfgGrp
{
   MsmActType actType;
   U8 maxUePerUlSf;

   U8 maxUlUeNewTxPerTti;
   U32 pfsUlTptCoefficient;
   U32 pfsUlFairCoefficient;
   U8 ulSchedulingAlg;
   U32 ulQciWgtList[9];
}MsmLteCellUlSchdCfgGrp;

typedef struct msmLteCellDlSchdCfgGrp
{
   MsmActType actType;
   U8 maxUePerDlSf;

   U8 maxDlUeNewTxPerTti;
   U32 pfsDlTptCoefficient;
   U32 pfsDlFairCoefficient;
   U8 dlSchedulingAlg;
   Bool dlfsSchd;
   U32 dlQciWgtList[9];
}MsmLteCellDlSchdCfgGrp;


typedef struct msmLteMsCellCfgReq
{
   MsmActType actType;
   U16 opMode;
   U32 period;
}MsmLteMsCellCfgReq;


typedef struct msmLteDbgParams
{
   MsmActType actType;
   U8 hiDbg;
   U8 sbDbg;
   U8 szDbg;
   U8 egDbg;
   U8 wrDbg;
   U8 nhDbg;
   U8 kwDbg;
   U8 rgDbg;
   U8 ysDbg;
   U8 smDbg;
   U8 czDbg;
}MsmLteDbgParams;


typedef struct msmLteUlAllocInfoCbParams
{
   MsmActType actType;
   U8 mcs;
   U16 numOfRb;
   U16 rbStart;

   U16 logTime;
}MsmLteUlAllocInfoCbParams;
typedef struct msmGostLog
{
   U8 ipAddress[16];
   U32 portNumber;
   U8 rrcLogEnable;
}MsmGostLog;

typedef struct msmLteProcTimerCfg
{
   MsmActType actType;
   U16 s1ResetTmr;

   U16 x2ResetTmr;


   U32 s1PrepTimerVal;
   U32 s1OvrAllTimerVal;
   U32 s1RATPrepTimerVal;
   U32 s1RATOvrAllTimerVal;
   U32 x2PrepTimerVal;
   U32 x2OvrAllTimerVal;
   U32 s1HandoverCancelTmr;
   U32 x2TimeToWaitTimerVal;






}MsmLteProcTimerCfg;


typedef struct msmCdmaBandClassCfg
{
   U8 bandClass;
   U8 cellReselectPrior;
   U8 threshXHigh;
   U8 threshXLow;
}MsmCdmaBandClassCfg;

typedef struct msmNeighBandClassCfg
{
   U8 bandType;
   union
   {
      MsmCdmaBandClassCfg bandClass1XRtt;
      MsmCdmaBandClassCfg bandClassHRPD;
   }t;
}MsmNeighBandClassCfg;


typedef struct msmCdmaBandClass
{
   MsmActType actType;
   U8 maxBandClass;
   U8 numBandClass;
   union
   {
      MsmNeighBandClassCfg bandClassAddCfg[32];
      MsmNeighBandClassCfg bandClassModCfg[32];

   }t;
}MsmCdmaBandClass;

typedef struct msmCdmaMobilityParam
{
   MsmActType actType;
   Bool sidIncl;
   U16 sid;
   Bool nidIncl;
   U16 nid;
   Bool multSidsIncl;
   Bool multSids;
   Bool multNidsIncl;
   Bool multNids;
   Bool regZoneIncl;
   U16 regZone;
   Bool totalZonesIncl;
   U8 totalZones;
   Bool zoneTimerIncl;
   U8 zoneTimer;
   Bool pktZoneIdIncl;
   U8 pktZoneId;
   Bool pzIdHysParamIncl;
   Bool pzHystEnabled;
   Bool pzHystInfoIncl;
   Bool pzHystListLen;
   U8 pzHystActTimer;
   U8 pzHystTimerMul;
   U8 pzHystTimerExp;
   Bool pRevIncl;
   U8 pRev;
   Bool minPRevIncl;
   U8 minPRev;
   Bool negSlotCycIndxSupIncl;
   Bool negSlotCycIndxSup;
   Bool encModeIncl;
   U8 encMode;
   Bool encSupIncl;
   Bool encSup;
   Bool sigEncSupIncl;
   U8 sigEncSup;
   Bool msgIntSupIncl;
   Bool msgIntSup;
   Bool sigIntSupINCLIncl;
   Bool sigIntSupINCL;
   Bool sigIntSupIncl;
   U8 sigIntSup;
   Bool authIncl;
   U8 auth;
   Bool maxNumAltoSoIncl;
   U8 maxNumAltoSo;
   Bool useSyncIdIncl;
   Bool useSyncId;
   Bool msInitPosLocSupIndIncl;

   Bool msInitPosLocSupInd;
   Bool mobQosIncl;
   Bool mobQos;
   Bool bandClsInfoReqIncl;
   Bool bandClsInfoReq;
   Bool bandClsIncl;
   U8 bandCls;
   Bool bypassRegIndIncl;
   U8 bypassRegInd;
   Bool altBandClsIncl;
   U8 altBandCls;
   Bool maxAddServInstIncl;
   U8 maxAddServInst;
   Bool homeRegIncl;
   Bool homeReg;
   Bool forSidRegIncl;
   Bool forSidReg;
   Bool forNidRegIncl;
   Bool forNidReg;
   Bool powerUpRegIncl;
   Bool powerUpReg;
   Bool powerDownRegIncl;
   Bool powerDownReg;
   Bool parmRegIncl;
   Bool parmReg;
   Bool regPrdIncl;
   U8 regPrd;
   Bool regDistIncl;
   U16 regDist;
   Bool prefMsIdTypeIncl;
   U8 prefMsIdType;
   Bool extPrefMsIdTypeIncl;
   U8 extPrefMsIdType;
   Bool meIdReqdIncl;
   Bool meIdReqd;
   Bool mccIncl;
   U16 mcc;
   Bool imsi1112Incl;
   U8 imsi1112;
   Bool imsiTSupIncl;
   Bool imsiTSup;
   Bool recntMsgIndIncl;
   Bool recntMsgInd;
   Bool rerModeSupIncl;
   Bool rerModeSup;
   Bool tzkModeSupIncl;
   Bool tzkModeSup;
   Bool tzkIdIncl;
   Bool tzkId;
   Bool pilRepIncl;
   Bool pilRep;
   Bool sdbSupIncl;
   Bool sdbSup;
   Bool autoFcsoAllIncl;
   Bool autoFcsoAll;
   Bool sdbInRcnmIncl;
   Bool sdbInRcnm;
   Bool fpcFchIncl;
   U8 fpcFchInitSetptRC3;
   U8 fpcFchInitSetptRC4;
   U8 fpcFchInitSetptRC5;
   U8 fpcFchInitSetptRC11;
   U8 fpcFchInitSetptRC12;
   Bool tAddIncl;
   U8 tAdd;
   Bool pilotIncIncl;
   U8 pilotInc;
   Bool randIncl;
   U32 rand;
   Bool lpSecIncl;
   U8 lpSec;
   Bool ltmOffIncl;
   U8 ltmOff;
   Bool dayltIncl;
   Bool daylt;
   Bool gcsnaL2ActTimerIncl;
   U8 gcsnaL2ActTimer;
   Bool gcsnaSeqCtxtTimerIncl;
   U8 gcsnaSeqCtxtTimer;
   U8 reserved;
} MsmCdmaMobilityParam;

typedef struct msmBarringConfig1xRTTCfg
{
   MsmActType actType;
   U8 ac_Barring0to9_r9;
   U8 ac_Barring10_r9;
   U8 ac_Barring11_r9;
   U8 ac_Barring12_r9;
   U8 ac_Barring13_r9;
   U8 ac_Barring14_r9;
   U8 ac_Barring15_r9;
   U8 ac_BarringMsg_r9;
   U8 ac_BarringReg_r9;
   U8 ac_BarringEmg_r9;
} MsmBarringConfig1xRTTCfg;

typedef struct msm1xRttCsfbRegInfo
{
   U16 sid;
   U16 nid;
   Bool mulSID;
   Bool mulNID;
   Bool homeReg;
   Bool foreignSIDReg;
   Bool foreignNIDReg;
   Bool paramReg;
   Bool powerUpReg;
   U8 regPeriod;
   U16 regZone;
   U8 totalZone;
   U8 zoneTimer;
   Bool powerDownReg;
}Msm1xRttCsfbRegInfo;

typedef struct msmCellSib8CfgGrp
{
   MsmActType actType;
   Bool cdmaEutraTimeSync;
   U8 tReselection;
   Bool speedStatePres;
   U8 sfMedium;
   U8 sfHigh;
   Msm1xRttCsfbRegInfo cdma1xrttRegParams;
   MsmBarringConfig1xRTTCfg cdma1xrttACBarringCfg;
}MsmCellSib8CfgGrp;

typedef struct msmCsfbCfgParams
{

   MsmActType actType;
   U8 ecsfbSupport;
   U8 csfbSupport;
   Bool dualRxSup;
   U16 marketId;
   U8 switchNum;
   U8 sectorNum;
   U8 searchRate;
   Bool csfbToUtranWithMeasEnabled;
   Bool dualRxTxSup;
}MsmCsfbCfgGrp;

typedef struct msmCAGenCfg
{
   Bool isCaEnabled;
   Bool isCellFreqCont;
   U32 sCellDeActTmr;
}MsmCAGenCfg;

typedef struct msmSib2Cfg
{
   MsmActType actType;
   U8 timeAlignmentCommon;
}MsmSib2Cfg;


typedef struct msmWatchDogTmrCfg
{
   U16 softTimeout;
   U16 hardTimeout;
}MsmWatchDogTmrCfg;

typedef struct msmAbsSfrCfg
{
   U8 neighCIO;
   U32 absPatternType;
   U8 absPattern[40];
   U32 absLoadPeriodicity;
   U8 startRb;
   U8 endRb;
   U32 pLow;
   U32 pHigh;
}MsmAbsSfrCfg;

typedef struct msmMacMainConfig
{
   U8 timeAlignmentTimerDedicated;
}MsmMacMainConifg;

typedef struct msmCnmCfg
{
   MsmActType actType;
   U8 cnmEnable;
}MsmCnmCfg;

typedef struct msmTenbStatsCfg
{
   U8 tenbSocketStats;
   U8 tenbFileStats;
   U8 tenbConsoleStats;
   U32 tenbStatsPeriodicity;
   U32 tendStatsSocketPort;
}MsmTenbStatsCfg;

typedef struct msmLteCellSib7CfgGrp
{
   U8 tReselectionGERAN;
   Bool pres_SpeedStateScaleFactors;
   U8 tReselectionGERANSFMedium;
   U8 tReselectionGERANSFHigh;
}MsmLteCellSib7CfgGrp;


typedef struct msmLteCsfbGeranCfg
{
   Bool isGERANMeasAllowedForCCO;
   Bool isCCOAllowed;
   U32 rrcDatCfmWaitTmr;
   U32 GERANMeasWaitTmr;
   U32 T304expWaitTmrVal;
} MsmLteCsfbGeranCfg;
typedef struct msmLteS1UCfg
{
   U8 gtpuEchoIntvl;
}MsmS1UCfg;




typedef struct msmLteeNodeBparams
{
   MsmLteRimParams lteRimParams;

   MsmLteSonGenericParams lteSonGenericParams;
   MsmLteEarfcnRssiCfg lteEarfcnRssiCfg;

   MsmLtePrachCfgCommon ltePrachCfgCommon;
   MsmLteRachCfgCommonParams lteRachCfgCommonParams;
   MsmLtePdschCfgCommon ltePdschCfgCommon;
   MsmLteULPwrCtrlCommon lteULPwrCtrlCommon;
   MsmLteDynCfiGrp lteDynCfiParams;
   MsmLteULFrequencyInfo lteULFrequencyInfo;
   MsmLteCellSib3CfgGrp lteCellSib3CfgGrp;
   MsmLteCellSib1CfgGrp lteCellSib1CfgGrp;
   MsmLteDrxCfgParams lteDrxCfgParams;
   MsmLteCellMeasCfgGrp lteCellMeasCfgGrp;
   MsmLteAddCellCfg lteAddCellCfg;
   MsmLteSmCellCfg lteSmCellCfg;
   MsmLteFreqSyncParams lteFreqSyncParams;
   MsmLteCellMibCfgGrp lteCellMibCfgGrp;
   MsmLteMAC_SCH_Config lteMAC_SCH_Config;
   MsmLteAntenna_Common_Config lteAntenna_Common_Config;
   MsmLtePdschCfgDedicated ltePdschCfgDedicated;
   MsmLtePuschBasicCfgCommon ltePuschBasicCfgCommon;
   MsmLtePuschRefSignalCfg ltePuschRefSignalCfg;
   MsmLtePucchCfgCommon ltePucchCfgCommon;
   MsmLteSRSCfgCommon lteSRSCfgCommon;
   MsmLteRabPolicyCfgGrp lteRabPolicyCfgGrp;
   MsmLteUeTimerConstants lteUeTimerConstants;
   MsmLteCellEAIDCfgGrp lteCellEAIDCfgGrp;
   MsmLteCellSib9CfgGrp lteCellSib9CfgGrp;
   MsmLteCQIPeriodicReportCfg lteCQIPeriodicReportCfg;
   MsmLteNeighFreqCfg lteNeighFreqCfg;
   MsmNeighCellCfg lteNeighCellCfg;
   MsmCnmCfg lteCnmCfg;
   MsmLteSib5InterFreqCarrierInfo lteSib5InterFreqCarrierInfo;
   MsmLteCellSib6CfgGrp lteCellSib6CfgGrp;
   MsmLteCellSib7CfgGrp sib7CfgGrp;
   MsmLteCsfbGeranCfg csfbToGeranCfg;
   MsmLteEnbProtoCfg lteEnbProtoCfg;
   MsmLteAcBarringInfo lteAcBarringInfo;
   MsmLtePowerOffsetParams ltePowerOffsetParams;
   MsmLteFapControlParams lteFapControlParams;
   MsmLtePRBallocation ltePRBallocation;
   MsmLteFapAccessParams lteFapAccessParams;
   MsmLteSib4CsgInfo lteSib4CsgInfo;
   MsmLteRemScanParameters lteRemScanParameters;
   MsmLteTunnelInfoParams lteTunnelInfoParams;
   MsmLteSctpCfgParams lteSctpCfgParams;
   MsmLtePCCHCfgCommon ltePCCHCfgCommon;
   MsmLteCellUlSchdCfgGrp lteCellUlSchdCfgGrp;
   MsmLteCellDlSchdCfgGrp lteCellDlSchdCfgGrp;
   MsmLteMsCellCfgReq lteMsCellCfgReq;
   MsmGostLog lteGostLog;
   MsmLteUlAllocInfoCbParams lteUlAllocInfoCbParams;
   MsmLteProcTimerCfg lteProcTimerCfg;
   MsmCdmaBandClass cdmaBandClassParams;
   MsmCdmaMobilityParam cdmaMobilityParam;
   MsmBarringConfig1xRTTCfg barringConfig1xRTTCfg;
   MsmCellSib8CfgGrp cellSib8CfgGrp;
   MsmCsfbCfgGrp csfbCfgGrp;
   MsmSib2Cfg sib2Cfg;
   MsmMacMainConifg macMainConfig;
   MsmCellSchdPwrCfg ltecellSchdPwrCfg;
   MsmLteRrmTddParam lteRrmTddParam;
   MsmLteTddParam lteTddParam;

   MsmSpsCellConfigData stSpsCellCfg;




   MsmWatchDogTmrCfg watchDogTmrCfg;
   MsmAbsSfrCfg absSfrCfg;

   MsmTMCellConfig lteTransModeCellCfg;
   MsmRsysTpmCfg tpmCfg;



}MsmLteeNodeBparams;




typedef struct msmPerfMgmtParameters
{
   MsmActType actType;
   U8 collectionMethodForPM[255];
   Bool l2PMCollectionEnable;
}MsmPerfMgmtParameters;


typedef struct msmWcdmaNodeBparams
{
   MsmPerfMgmtParameters perfMgmtParameters;
}MsmWcdmaNodeBparams;

typedef struct msmFapParameters
{
   MsmLteDbgParams lteDbgParams;
   MsmTenbStatsCfg tenbStatsCfg;
   MsmLteeNodeBIPparams lteeNodeBIPparams;
   MsmEnodebIpAddr lteEnodebIpAddr;
   MsmEnbLogLvlData lteLogLvlCfg;
   S8 *configFilePath;

   MsmS1UCfg s1uCfg;

}MsmFapParameters;

typedef struct msmMmeDynUpdate
{
   U8 mmeNewIpPresent;
   U32 mmeNewIp;
}MsmMmeDynUpdate;

typedef struct msmMmeDynUpdateParams
{
   U8 mmeIPpresent;
   U8 newIPlist;
   U8 numDelMmeIds;
   U8 deleteMme;
   U8 newMmeId;
}MsmMmeDynUpdateParams;


typedef struct msmFrequentFaultMgmtParameters
{
   MsmActType actType;
   U8 maxS1ErrIndCnt;
   U8 maxS1ResetCnt;
   U8 maxX2ErrIndCnt;
   U8 maxX2ResetCnt;
   U32 minS1ErrIndTime;
   U32 minS1ResetTime;
   U32 minX2ErrIndTime;
   U32 minX2ResetTime;
}MsmFrequentFaultMgmtParameters;

typedef struct msmFaultMgmtParams
{
   MsmFrequentFaultMgmtParameters frequentFaultMgmtParameters;
}MsmFaultMgmtParams;


typedef struct pCIConflictCollision
{
   U16 pci;
   U8 actionType;
   U32 cellId;
}PCIConflictCollision;


typedef struct msmUpdateAlarms
{
   U32 cellId;
   U32 alarmId;
   SmAlarmSeverity severity;
   U8 causeType;
   U8 causeValue;
   U8 isAdditionalInfo;
   union
   {
      PCIConflictCollision info;
   }t;

} MsmUpdateAlarms;



typedef enum msmAlarmId
{
   LTE_CONFIGURATION_PLAN_ERROR = 11100,
   LTE_CONFIGURATION_PLAN_INCONSISTENCY,
   LTE_FREQUENCY_SYNCHRONISATION_FAILURE,
   LTE_NTP_SERVER_NOT_RESPONDING,
   LTE_OSCILLATOR_STABILITY_PROBLEM,
   LTE_FAP_TEMPERATURE_OVER_THRESHOLD,
   PCI_CONFLICT,
   LTE_LOW_QUALITY_CHANNEL,
   LTE_NETWORK_JITTER,
   S1_SETUP_FAIL,
   X2_SETUP_FAIL,
   LTE_MEMORY_ALLOCATION_FAIL,
   SCTP_LINK_FAIL,
   TNL_SETUP_FAIL,
   S1_ERROR_IND,
   S1_RESET,
   X2_ERROR_IND,
   X2_RESET,

   SOCKET_CFG_FAIL,
   SCTP_CFG_FAIL,
   S1AP_CFG_FAIL,
   EGTP_CFG_FAIL,
   X2AP_CFG_FAIL,
   RRM_CFG_FAIL,
   APP_CFG_FAIL,
   RRC_CFG_FAIL,
   PDCPUL_CFG_FAIL,
   PDCPDL_CFG_FAIL,
   RLCUL_CFG_FAIL,
   RLCDL_CFG_FAIL,
   MAC_CFG_FAIL,
   CL_CFG_FAIL,
   CELLUP_CFG_FAIL,


   ADMIN_STATE_CHANGE_FAIL,
   GENERIC_PRAMS_CFG_FAIL,
   MME_IP_PRAMS_CFG_FAIL,
   CELL_CONFIG_PRAMS_FAIL,
   ENBIP_CFG_FAIL,
   MIB_CFG_FAIL,
   PRACH_CFG_FAIL,
   RACH_CFG_FAIL,
   PDSCH_CFG_FAIL,
   SRS_CFG_FAIL,
   PUSCH_CFG_FAIL,
   ULPOWER_CFG_FAIL,
   ULFREQ_CFG_FAIL,
   PUCCH_CFG_FAIL,
   UETMRCONS_CFG_FAIL,
   SIB1_CFG_FAIL,
   SIB2_CFG_FAIL,
   SIB3_CFG_FAIL,
   SIB4_CFG_FAIL,
   SIB6_CFG_FAIL,
   SIB9_CFG_FAIL,
   ANR_CFG_FAIL,
   MEAS_CFG_FAIL,
   EAID_CFG_FAIL,
   SIBSCHED_CFG_FAIL,
   RABPOLICY_CFG_FAIL,
   TIMER_CFG_FAIL,
   RRM_CELL_CFG_FAIL,
   ULSCHD_CFG_FAIL,
   DLSCHD_CFG_FAIL,
   NEIGH_CFG_FAIL,
   NEIGH_CELL_CFG_FAIL,
   NEIGH_FREQ_CFG_FAIL,
   NEIGH_BAND_CLASS_CFG_FAIL,
   ENB_PROTO_CFG_FAIL,
   UTRANEIFREQ_CFG_FAIL,
   EUTRANEIFREQ_CFG_FAIL,
   UTRANEICELL_CFG_FAIL,
   EUTRANEICELL_CFG_FAIL,
   UTRANEILIST_CFG_FAIL,
   EUTRANEILIST_CFG_FAIL,
   RABSRB1_CFG_FAIL,
   RABSRB2_CFG_FAIL,
   EVNT_NEIGH_ENB_CFG_FAIL,
   SMCELL_CFG_FAIL,
   PROCTMR_CFG_FAIL,
   CFG_FAIL_FROM_SON,
   PCI_COLLISION,
   PCI_CONFUSION,
 MAX_ALARMS
} MsmAlarmId;
S16 msmSetPrachConfigCommonParameters(const MsmLtePrachCfgCommon *ltePrachCfgCommon,U16 cellIdx);
S16 msmSetEnodebIpParameters(const MsmLteeNodeBIPparams *lteEnodebIpAddr);
S16 msmSetRachConfigCommonParameters(const MsmLteRachCfgCommonParams *lteRachCfgCommonParams,U16 cellIdx);
S16 msmSetPdschConfigCommonParameters(const MsmLtePdschCfgCommon *ltePdschCfgCommon,U16 cellIdx);
S16 msmSetUlPowerControlCommonParameters(const MsmLteULPwrCtrlCommon *lteULPwrCtrlCommon,U16 cellIdx);
S16 msmSetUlFrequencyInfoParameters(const MsmLteULFrequencyInfo *lteULFrequencyInfo,U16 cellIdx);
S16 msmSetCell_Sib3ConfigGroupParameters(const MsmLteCellSib3CfgGrp *lteCellSib3CfgGrp,U16 cellIdx);
S16 msmSetCellSib1ConfigGroupParameters(const MsmLteCellSib1CfgGrp *lteCellSib1CfgGrp, U32 isPlmnCfgd, U16 cellIdx);
S16 msmSetDrxConfigParameters(const MsmLteDrxCfgParams *lteDrxCfgParams, U16 cellIdx);
S16 msmSetCellMeasConfigParameters(const MsmLteCellMeasCfgGrp *lteCellMeasCfgGrp, U16 cellIdx);
S16 msmSetAddCellConfigParameters(const MsmLteAddCellCfg *lteAddCellCfg, U16 cellIdx);
S16 msmSetFreqSyncParameters(const MsmLteFreqSyncParams *lteFreqSyncParams, U16 cellIdx);
S16 msmSetSmCellConfigParameters(const MsmLteSmCellCfg *lteSmCellCfg, U16 cellIdx);
S16 msmSetCellMibConfigParameters(const MsmLteCellMibCfgGrp *lteCellMibCfgGrp, U16 cellIdx);
S16 msmSetMacSchConfigParameters(const MsmLteMAC_SCH_Config *lteMAC_SCH_Config, U16 cellIdx);
S16 msmSetAntennaCommonConfigParameters(const MsmLteAntenna_Common_Config *lteAntenna_Common_Config, U16 cellIdx);
S16 msmSetPdschConfigDedicatedParameters(const MsmLtePdschCfgDedicated *ltePdschCfgDedicated, U16 cellIdx);
S16 msmSetPuschBasicCfgCommonParameters(const MsmLtePuschBasicCfgCommon *ltePuschBasicCfgCommon,U16 cellIdx);
S16 msmSetPuschRefSignalCfgParameters(const MsmLtePuschRefSignalCfg *ltePuschRefSignalCfg,U16 cellIdx);
S16 msmSetPucchCfgCommonParameters(const MsmLtePucchCfgCommon *ltePucchCfgCommon, U16 cellIdx);
S16 msmSetSrsCfgCommonParameters(const MsmLteSRSCfgCommon *lteSRSCfgCommon,U16 cellIdx);
S16 msmSetRabPolicyCfgGrpParameters(const MsmLteRabPolicyCfgGrp *lteRabPolicyCfgGrp);
S16 msmSetUeTimerConstantsParameters(const MsmLteUeTimerConstants *lteUeTimerConstants,U16 cellIdx);
S16 msmSetCellEaidCfgGrpParameters(const MsmLteCellEAIDCfgGrp *lteCellEAIDCfgGrp, U16 cellIdx);
S16 msmSetCellSib9CfgGrpParameters(const MsmLteCellSib9CfgGrp *lteCellSib9CfgGrp,U16 cellIdx);
S16 msmSetCqiPeriodicReportCfgParameters(const MsmLteCQIPeriodicReportCfg *lteCQIPeriodicReportCfg, U16 cellIdx);
S16 msmGetNeighFreqEutraCfgParameters(MsmLteNeighFreqCfg *lteNeighFreqCfg, U16 cellIdx);
S16 msmGetNeighFreqUtraCfgParameters(MsmLteNeighFreqCfg *lteNeighFreqCfg, U16 cellIdx);
S16 msmSetNeighFreqEutraCfgParameters(const MsmLteNeighFreqCfg *lteNeighFreqCfg, U16 cellIdx);
S16 msmSetNeighFreqUtraCfgParameters(const MsmLteNeighFreqCfg *lteNeighFreqCfg, U16 cellIdx);
S16 msmSetSib5InterFreqCarrierInfoParameters(const MsmLteSib5InterFreqCarrierInfo *lteSib5InterFreqCarrierInfo, U16 cellIdx);
S16 msmSetCellSib6ConfigGroupParameters(const MsmLteCellSib6CfgGrp *lteCellSib6CfgGrp,U16 cellIdx);
S16 msmSetEnbProtoCfgParameters(const MsmLteEnbProtoCfg *lteEnbProtoCfg, U16 cellIdx);
S16 msmSetAcBarringInfoParameters(const MsmLteAcBarringInfo *lteAcBarringInfo, U16 cellIdx);
S16 msmSetSelfConfigParameters(const MsmLteSonGenericParams *lteSelfConfigParams, U16 cellIdx);
S16 msmSetRemScanParameters(const MsmLteRemScanParameters *lteRemScanParameters, U16 cellIdx);
S16 msmSetTunnelInfoParameters(const MsmLteTunnelInfoParams *lteTunnelInfoParams, U16 cellIdx);
S16 msmSetPowerOffsetParameters(const MsmLtePowerOffsetParams *ltePowerOffsetParams, U16 cellIdx);
S16 msmSetDynCfiParameters(const MsmLteDynCfiGrp *lteDynCfiParams, U16 cellIdx);
S16 msmSetFapControlParameters(const MsmLteFapControlParams *lteFapControlParams, U16 cellIdx);
S16 msmSetPrbAllocationParameters(const MsmLtePRBallocation *ltePRBallocation, U16 cellIdx);
S16 msmSetSib4CsgInfoParameters(const MsmLteSib4CsgInfo *lteSib4CsgInfo,U16 cellIdx);
S16 msmSetRrmTddParameters(const MsmLteRrmTddParam *lteRrmTddParam, U16 cellIdx);



S16 msmSetSctpConfigParameters(const MsmLteSctpCfgParams *lteSctpCfgParams, U16 cellIdx);
S16 msmSetPcchConfigCommonParameters(const MsmLtePCCHCfgCommon *ltePCCHCfgCommon,U16 cellIdx);
S16 msmSetCellUlSchdConfigParameters(const MsmLteCellUlSchdCfgGrp *lteCellUlSchdCfgGrp, U16 cellIdx);
S16 msmSetCellDlSchdConfigParameters(const MsmLteCellDlSchdCfgGrp *lteCellDlSchdCfgGrp, U16 cellIdx);
S16 msmSetMsCellCfgReqParameters(const MsmLteMsCellCfgReq *lteMsCellCfgReq, U16 cellIdx);
S16 msmSetDbgParameters(const MsmLteDbgParams *lteDbgParams);
S16 msmSetGostLog(MsmGostLog *lteGostLog);
S16 msmSetUlAllocInfoCbParameters(const MsmLteUlAllocInfoCbParams *lteUlAllocInfoCbParams, U16 cellIdx);
S16 msmSetProcTimerCfgParameters(const MsmLteProcTimerCfg *lteProcTimerCfg, U16 cellIdx);
S16 msmSetFapAccessParameters(const MsmLteFapAccessParams *lteFapAccessParams, U16 cellIdx);
S16 msmGetFapAccessParameters(MsmLteFapAccessParams *lteFapAccessParams, U16 cellIdx);
S16 msmSetFactorySmCellParameters(const MsmLteSmCellCfg *lteSmCellCfg, U16 cellIdx);
S16 msmGetFactoryFapAceessParameters(MsmLteFapAccessParams *lteFapAccessParams);
S16 msmGetFactorySmCellParameters(MsmLteSmCellCfg *lteSmCellCfg, U16 cellIdx);
S16 msmSetEnbIpAddress(const MsmEnodebIpAddr *lteEnbIpAddr);
S16 msmSetPmParameters(const MsmPerfMgmtParameters *perfMgmtParameters);
S16 msmSetFrequentFaultParameters(const MsmFrequentFaultMgmtParameters *frequentFaultMgmtParameters);
S16 msmSetCdmaBandClassParameters(const MsmCdmaBandClass *cdmaBandClass, U16 cellIdx);
S16 msmSetCdmaMobilityParameters(const MsmCdmaMobilityParam *cdmaMobilityParam, U16 cellIdx);
S16 msmSetBarringCfg1xRtt(const MsmBarringConfig1xRTTCfg *barringConfig1xRTTCfg,U16 cellIdx);
S16 msmSetCdma1XRttNghCell(const MsmNeighCellCfg *lteNeighCellCfg, U16 cellIdx);
S16 msmSetSib8Parameters(const MsmCellSib8CfgGrp *cellSib8CfgGrp, U16 cellIdx);
S16 msmSetCsfbCfgParameters(const MsmCsfbCfgGrp *csfbCfgGrp, U16 cellIdx);
S16 msmSetSpsParameters(const MsmSpsCellConfigData *stSpsCellCfg, U16 cellIdx);

S16 msmSetTMParameters(const MsmTMCellConfig *lteTransModeCellCfg, U16 cellIdx);
S16 msmSetSib2Cfg(MsmSib2Cfg *sib2Cfg, U16 cellIdx);
S16 msmSetMacMainConfig(MsmMacMainConifg *macMainConfig, U16 cellIdx);
S16 msmSetSchdPwrCfgParameters(MsmCellSchdPwrCfg *ltecellSchdPwrCfg, U16 cellIdx);
S16 msmSetLogLvlParameter(const MsmEnbLogLvlData *lteLogLvlCfg);
S16 msmSetRsysTpmCfgParameters(MsmRsysTpmCfg *tpmCfg, U16 cellIdx);
S16 msmGetPrachConfigCommonParameters(MsmLtePrachCfgCommon *ltePrachCfgCommon,U16 cellIdx);
S16 msmGetRimParameters(MsmLteRimParams* lteRimParams, U16 cellIdx);
S16 msmSetEarfcnRssiParameters(const MsmLteEarfcnRssiCfg *lteEarfcnRssiCfg, U16 cellIdx);
S16 msmGetEarfcnRssiParameters(MsmLteEarfcnRssiCfg *lteEarfcnRssiCfg, U16 cellIdx);
S16 msmGetEnodebIpParameters(MsmLteeNodeBIPparams *lteeNodeBIPparams);
S16 msmGetRachConfigCommonParameters(MsmLteRachCfgCommonParams *lteRachCfgCommonParams,U16 cellIdx);
S16 msmGetPdschConfigCommonParameters(MsmLtePdschCfgCommon *ltePdschCfgCommon,U16 cellIdx);
S16 msmGetUlPowerControlCommonParameters(MsmLteULPwrCtrlCommon *lteULPwrCtrlCommon,U16 cellIdx);
S16 msmGetUlFrequencyInfoParameters(MsmLteULFrequencyInfo *lteULFrequencyInfo,U16 cellIdx);
S16 msmGetCell_Sib3ConfigGroupParameters(MsmLteCellSib3CfgGrp *lteCellSib3CfgGrp,U16 cellIdx);
S16 msmGetCellSib1ConfigGroupParameters(MsmLteCellSib1CfgGrp *lteCellSib1CfgGrp,U16 cellIdx);
S16 msmGetDrxConfigParameters(MsmLteDrxCfgParams *lteDrxCfgParams, U16 cellIdx);
S16 msmGetCellMeasConfigParameters(MsmLteCellMeasCfgGrp *lteCellMeasCfgGrp, U16 cellIdx);
S16 msmGetAddCellConfigParameters(MsmLteAddCellCfg *lteAddCellCfg, U16 cellIdx);
S16 msmGetFreqSyncParameters(const MsmLteFreqSyncParams *lteFreqSyncParams, U16 cellIdx);
S16 msmGetSmCellConfigParameters(MsmLteSmCellCfg *lteSmCellCfg, U16 cellIdx);
S16 msmGetCellMibConfigParameters(MsmLteCellMibCfgGrp *lteCellMibCfgGrp, U16 cellIdx);
S16 msmGetMacSchConfigParameters(MsmLteMAC_SCH_Config *lteMAC_SCH_Config, U16 cellIdx);
S16 msmGetAntennaCommonConfigParameters(MsmLteAntenna_Common_Config *lteAntenna_Common_Config, U16 cellIdx);
S16 msmGetPdschConfigDedicatedParameters(MsmLtePdschCfgDedicated *ltePdschCfgDedicated, U16 cellIdx);
S16 msmGetPuschBasicCfgCommonParameters(MsmLtePuschBasicCfgCommon *ltePuschBasicCfgCommon,U16 cellIdx);
S16 msmGetPuschRefSignalCfgParameters(MsmLtePuschRefSignalCfg *ltePuschRefSignalCfg, U16 cellIdx);
S16 msmGetPucchCfgCommonParameters(MsmLtePucchCfgCommon *ltePucchCfgCommon, U16 cellIdx);
S16 msmGetSrsCfgCommonParameters(MsmLteSRSCfgCommon *lteSRSCfgCommon,U16 cellIdx);
S16 msmGetRabPolicyCfgGrpParameters(MsmLteRabPolicyCfgGrp *lteRabPolicyCfgGrp, U16 cellIdx);
S16 msmGetUeTimerConstantsParameters(MsmLteUeTimerConstants *lteUeTimerConstants,U16 cellIdx);
S16 msmGetCellEaidCfgGrpParameters(MsmLteCellEAIDCfgGrp *lteCellEAIDCfgGrp, U16 cellIdx);
S16 msmGetCellSib9CfgGrpParameters(MsmLteCellSib9CfgGrp *lteCellSib9CfgGrp,U16 cellIdx);
S16 msmGetCqiPeriodicReportCfgParameters(MsmLteCQIPeriodicReportCfg *lteCQIPeriodicReportCfg, U16 cellIdx);
S16 msmGetSib5InterFreqCarrierInfoParameters(MsmLteSib5InterFreqCarrierInfo *lteSib5InterFreqCarrierInfo, U16 cellIdx);
S16 msmGetCellSib6ConfigGroupParameters(MsmLteCellSib6CfgGrp *lteCellSib6CfgGrp,U16 cellIdx);
S16 msmGetEnbProtoCfgParameters(MsmLteEnbProtoCfg *lteEnbProtoCfg, U16 cellIdx);
S16 msmGetAcBarringInfoParameters(MsmLteAcBarringInfo *lteAcBarringInfo, U16 cellIdx);
S16 msmGetSelfConfigParameters(MsmLteSonGenericParams *lteSelfConfigParams, U16 cellIdx);
S16 msmGetRemScanParameters(MsmLteRemScanParameters *lteRemScanParameters, U16 cellIdx);
S16 msmGetTunnelInfoParameters(MsmLteTunnelInfoParams *lteTunnelInfoParams, U16 cellIdx);
S16 msmGetPowerOffsetParameters(MsmLtePowerOffsetParams *ltePowerOffsetParams, U16 cellIdx);
S16 msmGetFapControlParameters(MsmLteFapControlParams *lteFapControlParams, U16 cellIdx);
S16 msmGetPrbAllocationParameters(MsmLtePRBallocation *ltePRBallocation, U16 cellIdx);
S16 msmGetSib4CsgInfoParameters(MsmLteSib4CsgInfo *lteSib4CsgInfo,U16 cellIdx);
S16 msmGetRrmTddParameters(MsmLteRrmTddParam *lteRrmTddParam, U16 cellIdx);

S16 msmGetSctpConfigParameters(MsmLteSctpCfgParams *lteSctpCfgParams, U16 cellIdx);
S16 msmGetPcchConfigCommonParameters(MsmLtePCCHCfgCommon *ltePCCHCfgCommon,U16 cellIdx);
S16 msmGetCellUlSchdConfigParameters(MsmLteCellUlSchdCfgGrp *lteCellUlSchdCfgGrp, U16 cellIdx);
S16 msmGetCellDlSchdConfigParameters(MsmLteCellDlSchdCfgGrp *lteCellDlSchdCfgGrp, U16 cellIdx);
S16 msmGetMsCellCfgReqParameters(MsmLteMsCellCfgReq *lteMsCellCfgReq, U16 cellIdx);
S16 msmGetDbgParameters(MsmLteDbgParams *lteDbgParams);
S16 msmGetUlAllocInfoCbParameters(MsmLteUlAllocInfoCbParams *lteUlAllocInfoCbParams, U16 cellIdx);
S16 msmGetProcTimerCfgParameters(MsmLteProcTimerCfg *lteProcTimerCfg, U16 cellIdx);
S16 msmGetEnbIpAddress(MsmEnodebIpAddr *lteEnbIpAddr);
S16 msmGetPmParameters(MsmPerfMgmtParameters *perfMgmtParameters);
S16 msmGetFrequentFaultParameters(MsmFrequentFaultMgmtParameters *frequentFaultMgmtParameters);
S16 msmGetCdmaBandClassParameters(MsmCdmaBandClass *cdmaBandClass, U16 cellIdx);
S16 msmGetCdmaMobilityParameters(MsmCdmaMobilityParam *cdmaMobilityParam, U16 cellIdx);
S16 msmGetBarringCfg1xRtt(MsmBarringConfig1xRTTCfg *barringConfig1xRTTCfg, U16 cellIdx);
S16 msmGetCdma1XRttNghCell(MsmNeighCellCfg *lteNeighCellCfg, U16 cellIdx);
S16 msmGetSib8Parameters(MsmCellSib8CfgGrp *cellSib8CfgGrp, U16 cellIdx);
S16 msmGetCsfbCfgParameters(MsmCsfbCfgGrp *csfbCfgGrp, U16 cellIdx);
S16 msmGetSpsParameters(MsmSpsCellConfigData *stSpsCellCfg, U16 cellIdx);

S16 msmGetTMParameters(MsmTMCellConfig *lteTransModeCellCfg, U16 cellIdx);
S16 msmGetTddParameters(MsmLteTddParam *lteTddParam, U16 cellIdx);
S16 msmGetLogLvlParameter(MsmEnbLogLvlData *lteLogLvlCfg);
S16 msmGetsib7CfgGrpParameters(MsmLteCellSib7CfgGrp *sib7CfgGrp, U16 cellIdx);
S16 msmGetcsfbGeranCfgParameters(MsmLteCsfbGeranCfg *csfbToGeranCfg, U16 cellIdx);
S16 msmGetNeighFreqCfgGeranParameters(MsmLteNeighFreqCfg *lteNeighFreqCfg, U16 cellIdx);
S16 msmGetNeighCellCfgGeranParameters(MsmNeighCellCfg *lteNeighCellCfg, U16 cellIdx);
S16 msmSetsib7CfgGrpParameters(MsmLteCellSib7CfgGrp *sib7CfgGrp, U16 cellIdx);
S16 msmSetcsfbGeranCfgParameters(MsmLteCsfbGeranCfg *csfbToGeranCfg, U16 cellIdx);
S16 msmSetNeighFreqCfgGeranParameters(const MsmLteNeighFreqCfg *lteNeighFreqCfg, U16 cellIdx);
S16 msmSetNeighCellCfgGeranParameters(const MsmNeighCellCfg *lteNeighCellCfg, U16 cellIdx);
S16 msmSetTddParameters(MsmLteTddParam *lteTddParam,U16 cellIdx);
S16 msmSetNeighborListInUseEutraParameters(const MsmNeighCellCfg *lteNeighCellCfg, U16 cellIdx);
S16 msmSetNeighborListInUseUtraParameters(const MsmNeighCellCfg *lteNeighCellCfg ,U16 cellIdx);
S16 msmSetEnodebIpAddr(const MsmEnodebIpAddr *lteEnodebIpAddr);
S16 msmSetCellCnmCfgGrpParameters(MsmCnmCfg *lteCnmCfg, U16 cellIdx);
S16 msmGetNeighborListInUseUtraParameters(MsmNeighCellCfg *lteNeighCellCfg, U16 cellIdx);
S16 msmGetNeighborListInUseEutraParameters(MsmNeighCellCfg *lteNeighCellCfg, U16 cellIdx);
S16 msmSetTdsCdmaUtranTddFreqParameters(const MsmLteNeighFreqCfg *lteNeighFreqCfg, U16 cellIdx);
S16 msmSetTdsCdmaUtranTddCellParameters(const MsmNeighCellCfg *lteNeighCellCfg, U16 cellIdx);
S16 msmGetTdsCdmaUtranTddFreqParameters(MsmLteNeighFreqCfg *lteNeighFreqCfg, U16 cellIdx);
S16 msmGetTdsCdmaUtranTddCellParameters(MsmNeighCellCfg *lteNeighCellCfg, U16 cellIdx);
S16 msmSetRabPolicyCfgGrpSrb1Parameters(const MsmLteRabPolicyCfgGrp *lteRabPolicyCfgGrp, U16 cellIdx);
S16 msmSetRabPolicyCfgGrpSrb2Parameters(const MsmLteRabPolicyCfgGrp *lteRabPolicyCfgGrp, U16 cellIdx);
S16 msmSetRabPolicyCfgGrpDrbParameters(const MsmLteRabPolicyCfgGrp *lteRabPolicyCfgGrp, U16 cellIdx);
S16 msmGetRabPolicyCfgGrpSrb1Parameters(MsmLteRabPolicyCfgGrp *lteRabPolicyCfgGrp, U16 cellIdx);
S16 msmGetRabPolicyCfgGrpSrb2Parameters(MsmLteRabPolicyCfgGrp *lteRabPolicyCfgGrp, U16 cellIdx);
S16 msmGetRabPolicyCfgGrpDrbParameters(MsmLteRabPolicyCfgGrp *lteRabPolicyCfgGrp, U16 cellIdx);
S16 msmGetFactoryFapAccessParameters(MsmLteFapAccessParams *lteFapAccessParams, U16 cellIdx);
S16 msmGetEnodebIpAddr(MsmEnodebIpAddr *lteEnodebIpAddr);
S16 msmGetSchdPwrCfgParameters(MsmCellSchdPwrCfg *ltecellSchdPwrCfg, U16 cellIdx);
S16 msmSetRimParameters(const MsmLteRimParams* lteRimParams, U16 cellIdx);
S16 msmSetTenbStatsCfgGrpParameters(MsmTenbStatsCfg *tenbStatsCfg);
S16 msmSetFapAcceessParameters(const MsmLteFapAccessParams *lteFapAccessParams, U16 cellIdx);
S16 msmSetNumOfCellsParameters(MsmLteEnbProtoCfg *lteEnbProtoCfg,U16 cellIdx);

S16 msmSetS1UParameters(MsmS1UCfg *s1uCfg);
extern U16 proc_Id;
extern MsmLteeNodeBparams lteeNodeBparams[12];
extern MsmFapParameters fapParameters;




typedef enum{
WR_CFG_FOUND,
WR_CFG_DONE,
WR_CFG_ADD,
WR_CFG_MOD,
WR_CFG_DEL,
WR_CFG_INV
}SmDynCfgInd;





typedef struct _smFreeEnbPeerId
{
  U32 freePeerIdIdx;
  U32 peerId[100];
}SmFreeEnbPeerId;





typedef struct _smNghCellHasKey
{
 LwrPlmnId plmnId;
 U16 cellId;
}smNghCellHasKey;





typedef struct _smNeigEnbCfg
{
  CmHashListEnt nghEnbListEnt;
  LwrNeighAddModCfg nghEnbCfg;
  U32 numCell;
  SmDynCfgInd dynCfgInd;
}SmNeigEnbList;





typedef struct _smNeigEutraFreqCfg
{
  CmHashListEnt nghEutraFreqListEnt;
  LwrNeighEutraFreq nghEutraFreqCfg;
  SmDynCfgInd dynCfgInd;
}SmNeigEutraFreqList;





typedef struct _smNeigUtraTddFreqCfg
{
  CmHashListEnt nghUtraTddFreqListEnt;
  LwrNeighUtraFreq nghUtraTddFreqCfg;
  SmDynCfgInd dynCfgInd;
}SmNeigUtraTddFreqList;





typedef struct _smNeigUtraFreqCfg
{
  CmHashListEnt nghUtraFreqListEnt;
  LwrNeighUtraFreq nghUtraFreqCfg;
  SmDynCfgInd dynCfgInd;
}SmNeigUtraFreqList;





typedef struct _smNeigCdma1xFreqCfg
{
  CmHashListEnt nghCdma1xFreqListEnt;
  LwrNeighCdma1xFreq nghCdma1xFreqCfg;
  SmDynCfgInd dynCfgInd;
}SmNeigCdma1xFreqList;





typedef struct _smNeigGeranFreqCfg
{
  CmHashListEnt nghGeranFreqListEnt;
  LwrNeighGERANFreq nghGeranFreqCfg;
}SmNeigGeranFreqList;




typedef struct _smNeigCdma1xBandCfg
{
  CmHashListEnt nghCdma1xBandListEnt;
  LwrNeighCdmaBandClassCfg nghCdma1xBandCfg;
  SmDynCfgInd dynCfgInd;
}SmNeigCdma1xBandList;



typedef struct _smNeigCdma1xCellCfg
{
  CmHashListEnt nghCdma1xCellListEnt;
  LwrCDMA1xNeighCell nghCdma1xCellCfg;
  SmDynCfgInd dynCfgInd;
}SmNeigCdma1xCellList;

typedef struct _smSonNghCellCfg
{
   LwrEUTRANeighCell *nghCellCfg;
   Bool isPrachConfig;
   U16 rootSeqIndex;
   U8 zeroCorrelationZoneCfg;
   U8 highSpeedFlag;
   U8 prachCfgIdx;
   U8 prachFreqOffset;
   U8 numNghNgh;
   U16 nghNghcellPci[16];
   U16 lteBand;
   Bool isCellBarred;
}SmSonNghCellCfg;




typedef struct _smNeigEutraCellCfg
{
  CmHashListEnt nghEutraCellListEnt;
  LwrEUTRANeighCell nghEutraCellCfg;
  smNghCellHasKey hashKey;
  SmDynCfgInd dynCfgInd;
  SmSonNghCellCfg sonNghCellCfg;
}SmNeigEutraCellList;





typedef struct _smNeigUtraTddCellCfg
{
  CmHashListEnt nghUtraTddFreqListEnt;
  LwrUtraNeighCell nghUtraTddCellCfg;
  smNghCellHasKey hashKey;
  SmDynCfgInd dynCfgInd;
}SmNeigUtraTddCellList;





typedef struct _smNeigUtraCellCfg
{
  CmHashListEnt nghEutraFreqListEnt;
  LwrUtraNeighCell nghUtraCellCfg;
  smNghCellHasKey hashKey;
  SmDynCfgInd dynCfgInd;
}SmNeigUtraCellList;




typedef struct _smNeigGeranCellCfg
{
  CmHashListEnt nghGeranCellListEnt;
  LwrGERANNeighCell nghGeranCellCfg;
  smNghCellHasKey hashKey;
}SmNeigGeranCellList;
typedef enum {
    WR_SM_STATE_INIT = 0,
    WR_SM_STATE_TUCL_CFG_DONE,
    WR_SM_STATE_SCTP_CFG_DONE,
    WR_SM_STATE_S1AP_CFG_DONE,
    WR_SM_STATE_X2AP_CFG_DONE,
    WR_SM_STATE_EGTP_CFG_DONE,
    WR_SM_STATE_APP_CFG_DONE,
    WR_SM_STATE_APP_CELL_CFG_DONE,
    WR_SM_STATE_RRC_CFG_DONE,
    WR_SM_STATE_PDCP_CFG_DONE,
    WR_SM_STATE_PDCP_UL_CFG_DONE,
    WR_SM_STATE_PDCP_DL_CFG_DONE,
    WR_SM_STATE_RLC_CFG_DONE,
    WR_SM_STATE_RLC_UL_CFG_DONE,
    WR_SM_STATE_RLC_DL_CFG_DONE,
    WR_SM_STATE_MAC_CFG_DONE,
    WR_SM_STATE_MAC_SCHD_CFG_DONE,
    WR_SM_STATE_CL_CFG_DONE,

    WR_SM_STATE_RRM_CFG_DONE,

    WR_SM_STATE_SON_CFG_DONE,
    WR_SM_STATE_S1AP_STK_BND_DONE,
    WR_SM_STATE_EGTP_STK_BND_DONE,
    WR_SM_STATE_X2AP_STK_BND_DONE,
    WR_SM_STATE_RRC_STK_BND_DONE,

    WR_SM_STATE_RRM_STK_BND_DONE,

    WR_SM_STATE_ENB_DEBUGS_DONE,
    WR_SM_STATE_ENB_ALRMS_DONE,
    WR_SM_STATE_AWAIT_S1_CON,
    WR_SM_STATE_AWAIT_CELL_UP,
    WR_SM_STATE_DYN_X2AP_CFG_DONE,

    WR_SM_STATE_AWAIT_SYNC,
    WR_SM_STATE_CELL_UP,






    WR_SM_STATE_ENB_LOG_DONE,

    WR_SM_STATE_REBOOT_REQUIRED,
    WR_SM_STATE_DINIT,
    WR_SM_STATE_TUCL_SHUTDWN_DONE,
    WR_SM_STATE_SCTP_SHUTDWN_DONE,
    WR_SM_STATE_S1AP_SHUTDWN_DONE,
    WR_SM_STATE_X2AP_SHUTDWN_DONE,
    WR_SM_STATE_EGTP_SHUTDWN_DONE,
    WR_SM_STATE_APP_SHUTDWN_DONE,
    WR_SM_STATE_RRM_SHUTDWN_DONE,
    WR_SM_STATE_RRC_SHUTDWN_DONE,
    WR_SM_STATE_SON_SHUTDWN_DONE,
    WR_SM_STATE_PDCP_DL_SHUTDWN_DONE,
    WR_SM_STATE_PDCP_UL_SHUTDWN_DONE,
    WR_SM_STATE_RLC_DL_SHUTDWN_DONE,
    WR_SM_STATE_RLC_UL_SHUTDWN_DONE,
    WR_SM_STATE_PDCP_SHUTDWN_DONE,
    WR_SM_STATE_RLC_SHUTDWN_DONE,
    WR_SM_STATE_MAC_SCH_SHUTDWN_DONE,
    WR_SM_STATE_MAC_SHUTDWN_DONE,
    WR_SM_STATE_CL_SHUTDWN_DONE,
    WR_SM_STATE_RRM_STK_UNBND_DONE,
    WR_SM_STATE_RRC_STK_UNBND_DONE,
    WR_SM_STATE_X2AP_STK_UNBND_DONE,
    WR_SM_STATE_EGTP_STK_UNBND_DONE,
    WR_SM_STATE_S1AP_STK_UNBND_DONE
}WrSmState;

typedef enum
{
   WR_ON,
   WR_OFF
}WrCliSecArg;

typedef enum
{
   APP = 1,
   S1AP,
   SCTP,
   TUCL,
   X2AP,
   EGTP,
   RRC,
   RLC,
   PDCP,
   MAC,
   CL,
   CPLANE,
   ALL
}WrLyrDbg;
extern S16 smSndWrLteAdvancedCellReCfg( WrEmmlteAdvFeatureActDeact *configInfo);
extern S16 smBuildLteAdvConfigTrans(LwrLteAdvancedConfigTrans *lteAdvGroup, WrEmmlteAdvFeatureActDeact *configInfo);
typedef struct _smDiagInfo
{
   U32 diagLvl;
   Bool diagState;
}SmDiagInfo;





typedef struct _smLyrDiagInfo
{
  SmDiagInfo tucl;
  SmDiagInfo sctp;
  SmDiagInfo s1ap;
  SmDiagInfo x2ap;
  SmDiagInfo egtp;
  SmDiagInfo app;
  SmDiagInfo lteRrc;
  SmDiagInfo lteRlc;
  SmDiagInfo ltePdcp;
  SmDiagInfo lteMac;
  SmDiagInfo lteCl;
}SmLyrDiagInfo;


typedef struct _smSonPrachCfg
{
   U8 highSpeedFlag;
}SmSonPrachCfg;

typedef struct _smCfgCb
{
   U16 cellId;
   U8 maxAvgGbrPrbUsage;
   SmSonPrachCfg sonPrachCfg;
   U8 noOfCfg;
   LwrSmMmeCfg *mmeCfg[17];
   U8 hiDbg;
   U8 sbDbg;
   U8 szDbg;
   U8 egDbg;
   U8 wrDbg;
   U8 nhDbg;
   U8 kwDbg;
   U8 rgDbg;
   U8 ysDbg;
   U8 smDbg;

   U32 smDbgMsk;


   U8 czDbg;
   U8 enbName[20];
   U8 plmnId[6][3];
   U16 noOfNghInfo;
   LwrNghInfoCfg **nghInfo;
   LwrNghUtraFddCfg *nghUtraFddInfo[12][32];
   LwrNghUtraTddCfg *nghUtraTddInfo[12][32];
   U16 noOfEutraFreq[12];
   LwrNghFreqCfg *nghEutraFreq[12][16];
   U16 noOfUtraFddFreq[12];
   LwrNeighUtraFreq *nghUtraFddFreq[12][16];
   U16 noOfUtraTddFreq[12];
   LwrNeighUtraFreq *nghUtraTddFreq[12][16];
   U16 noOfGeranFreq[12];
   U16 noOfGeranCell[12];
   LwrGERANNeighCell *geranCell[12][16];
   LwrNeighGERANFreq *geranFreq[12][16];
   U8 noOfguGrp;
   LwrGuGrpIdCfg **guGrpId;
   U32 ueHoAttachTimerVal;




   U8 noOfNghCfg[12];
   LwrNghCellCfg *wrNghCellCfg[12][16];

   TknU16 wrX2apPeerIdLst[16];

   U32 rsrpTrshldRange;

   U8 noOfnghENBs;



   LwrEnbType eNBType;


  U8 noOfCdma1xBndCls[12];
  LwrCdma1xrttBndClsCfg *cdma1xBndClsCfg[12][32];
  U8 noOfNeighCdma1xFreq[12];
  LwrCdma1xrttNeighFreqCfg *neighCdma1xFreq[12][16];
  U8 noOfNeighCdma1xCells[12];
  LwrCdma1xrttNeighCellCfg *neighCdma1xCell[12][40];

  LwrSctpParamCfg lwrSctpParamCfg;
  SmLyrDiagInfo diagInfo;
  LwrLteAdvancedConfig lteAdvancedConfig;

  Bool isDscpEnable;
  U8 qciDscpMap[9];
  U16 remScanInterval;
  U16 remScanCount;
  Bool sonTriggeredDynCfg;

  LnlTpmCfg tpmCfg;




}SmCfgCb;

extern SmCfgCb smCfgCb;

typedef struct _smCb
{
   TskInit init;




   WrSmState smState;
   U8 smCellState;
   U8 numOfCells;
   U16 cellIdLst[12];
   SmCfgCb cfgCb;
   Bool cellState;
   Bool reCfg;
   Bool prem;






   U16 transIdMdfy;
   Bool isPciMod;

   Bool syncState;
   WrMemCpuMeasCb memCpuMeasCb;
}SmCb;

typedef struct _tstTkn
{
   TknStr tok;
   U16 nmbArgs;
   TknStr args[20];
} TstTkn;
extern SmCb smCb;






extern S16 SRegInfoShow (Region region, U32 *availmem);
extern S16 smWrReadConfigParams (Void);
extern S16 smL2ReadCfgParams (Void);

extern S16 wrSmmEnbValidateIpAddr(Void);
extern S16 wrSmmEnbValidateConfigParams(U8 cellCfgIdx);
extern Void smWrCfgGetTagNum (U8* tag, U16* tagNum);
extern Void wrCfgValdtInput (U8* input, Bool* status, U8 *noOfElem);
extern Void wrCfgGetParamVal (U8* tagVal, U8 paramLst[][100], U16* noOfParams);
extern S32 wrUpdateIpAddr(U8 *strIpAddr, CmTptAddr *binIpAddr);


extern S16 smWrInit (SSTskId sysTskId);
extern S16 smSzInit (SSTskId sysTskId);
extern S16 smRmInit (SSTskId sysTskId);


extern S16 smCzInit (SSTskId sysTskId);

extern S16 smEgInit (SSTskId sysTskId);
extern S16 smEuInit (SSTskId sysTskId);
extern S16 smSbInit (SSTskId sysTskId);
extern S16 smHiInit (SSTskId sysTskId);
extern S16 smNhInit (SSTskId sysTskId);
extern S16 smPjInit (SSTskId sysTskId);
extern S16 smRgInit (SSTskId sysTskId);
extern S16 smKwInit (SSTskId sysTskId);
extern S16 smYsInit (SSTskId sysTskId);

extern S16 smKwUlInit (SSTskId sysTskId);
extern S16 smKwDlInit (SSTskId sysTskId);
extern S16 smPjDlInit (SSTskId sysTskId);
extern S16 smPjUlInit (SSTskId sysTskId);
extern S16 smNlInit (SSTskId sysTskId);
extern S16 smNlActvTsk (Pst *pst, Buffer *mBuf);
extern S16 smNlActvInit(Ent entity, Inst inst, Region region, Reason reason);



extern Void smWrShutdownSm (U8 event);
extern Void wrSmHdlUnBndRrmStack(U8 event);
extern Void wrSmHdlUnBndRrcStack(U8 event);
extern Void wrSmHdlUnBndX2apStack(U8 event);
extern Void wrSmHdlUnBndEgtpStack(U8 event);
extern Void wrSmHdlUnBndS1apStack(U8 event);

extern Void smWrProcSm (U8 event);





extern S16 smBldYsSndLogStrmInfoReq (U8 logStrmType);
extern S16 wrSmSelfPstMsg (Pst *pst);
extern Void wrSmHdlTuclCfgEvent (U8 event);
extern Void wrSmHdlSctpCfgEvent (U8 event);
extern Void wrSmHdlS1apCfgEvent (U8 event);
extern Void wrSmHdlEgtpCfgEvent (U8 event);
extern Void wrSmHdlAppCfgEvent (U8 event);
extern Void wrSmHdlRrcCfgEvent (U8 event);
extern Void wrSmHdlPdcpUlCfgEvent (U8 event);
extern Void wrSmHdlPdcpDlCfgEvent (U8 event);
extern Void wrSmHdlRlcUlCfgEvent (U8 event);
extern Void wrSmHdlRlcDlCfgEvent (U8 event);
extern Void wrSmHdlMacCfgEvent (U8 event);
extern Void wrSmHdlCLCfgEvent (U8 event);
extern Void wrSmHdlBndS1apStack (U8 event);
extern Void wrSmHdlBndEgtpStack (U8 event);
extern Void wrSmHdlBndRrcStack (U8 event);

extern Void wrSmHdlBndRrmStack (U8 event);
extern Void wrSmHdlRrmCfgEvent (U8 event);
extern Void wrSmSndRrmCellUpInd (U8 event);


extern Void wrSmHdlSonCfgEvent (U8 event);
extern Void wrSmSndSonCellUpInd (U8 event, U8 cellCfgIndx);
extern Void wrSmNlCfg (Void);
extern Void smSendCellUpIndToSon(U8 cellCfgIndx);
extern S16 smBuildWrNluLSapCfg(SuId suId, SpId spId);
extern S16 smSndWrPciUpdateReq(NlUpdatePciCfgInd *pciUpdate);
extern S16 smSndWrSchdPrbPaUpdateReq(LnlSonCfg *sonCfg);

extern Void wrSmHdlEnbAlarms (U8 event);
extern Void wrSmHdlEnbDebugs (U8 event);
extern Void wrSmHdlInitS1Setup (U8 event);
extern Void wrSmHdlInitCellCfg (U8 event);
extern Void wrSmHdlEnbLog (U8 event);
extern Void wrSmConfigComplete (Void);


extern Void wrSmHdlX2apCfgEvent (U8 event);
extern Void wrSmHdlBndX2apStack (U8 event);
extern Void wrSmHdlInitX2Setup (U8 event);



extern S16 nhActvTsk (Pst *, Buffer *);
extern S16 nhActvInit (Ent, Inst, Region, Reason);

extern S16 nlActvTsk (Pst *, Buffer *);
extern S16 nlActvInit (Ent, Inst, Region, Reason);

extern S16 kwUlActvTsk (Pst *, Buffer *);
extern S16 kwUlActvInit (Ent, Inst, Region, Reason);
extern S16 kwDlActvTsk (Pst *, Buffer *);
extern S16 kwDlActvInit (Ent, Inst, Region, Reason);
extern S16 rgActvTsk (Pst *, Buffer *);
extern S16 rgActvInit (Ent, Inst, Region, Reason);
extern S16 schActvTsk (Pst *, Buffer *);
extern S16 schActvInit (Ent, Inst, Region, Reason);
extern S16 egActvTsk (Pst *, Buffer *);
extern S16 egActvInit (Ent, Inst, Region, Reason);
extern S16 pjUlActvTsk (Pst *, Buffer *);
extern S16 pjUlActvInit (Ent, Inst, Region, Reason);
extern S16 pjDlActvTsk (Pst *, Buffer *);
extern S16 pjDlActvInit (Ent, Inst, Region, Reason);

extern S16 ysActvTsk (Pst *, Buffer *);
extern S16 ysActvInit (Ent, Inst, Region, Reason);
extern S16 rmActvTsk (Pst *, Buffer *);
extern S16 rmActvInit (Ent, Inst, Region, Reason);

extern S16 tfActvTsk (Pst *, Buffer *);
extern S16 tfActvInit (Ent, Inst, Region, Reason);



extern S16 smEgActvTsk (Pst *, Buffer *);
extern S16 smRgActvTsk (Pst *, Buffer *);
extern S16 smNhActvTsk (Pst *, Buffer *);
extern S16 smKwActvTsk (Pst *, Buffer *);
extern S16 smPjActvTsk (Pst *, Buffer *);
extern S16 smHiActvTsk (Pst *, Buffer *);
extern S16 smSbActvTsk (Pst *, Buffer *);
extern S16 smSzActvTsk (Pst *, Buffer *);


extern S16 smSzActvTsk (Pst *, Buffer *);



extern Void wrSmHiCfg (Void);
extern Void wrSmSbCfg (Void);
extern Void wrSmSzCfg (Void);
extern Void wrSmEgCfg (Void);
extern Void wrSmWrCfg (Void);

extern Void wrSmRmCfg (Void);

extern Void wrSmNhCfg (Void);
extern Void wrSmPjUlCfg (Void);
extern Void wrSmPjDlCfg (Void);
extern Void wrSmKwUlCfg (Void);
extern Void wrSmKwDlCfg (Void);
extern Void wrSmRgCfg (Void);
extern Void wrSmYsCfg (Void);





extern Void wrSmCzCfg (Void);




extern Void smBuildHiGenCfg (Void);
extern Void smBuildHiTSapCfg (SpId spId);
extern Void smBuildHiDbgCntrl (Void);
extern Void smBuildHiLogCntrl (Bool actType, U32 mask);


extern Void smBuildSbGenCfg (Void);
extern Void smBuildSbTSapCfg (SpId spId, SuId suId);
extern Void smBuildSbSctSapCfg (SpId spId);
extern Void smBindUnBindSbToLSap(SpId spId,U8 action);
extern Void smBuildSbDbgCntrl (Void);
extern Void smBuildSbLogCntrl (Bool actType, U32 mask);
extern S16 smBindKwUdxSap(Inst inst);


extern S16 smBuildSzGenCfg (Void);
extern S16 smBuildSzLSapCfg (SpId spId, SuId suId);
extern S16 smBuildSzUSapCfg (SpId spId);
extern S16 smBuildSzProtCfg (Void);
extern S16 smBuildSzPeerCfg (Void);
extern S16 smBuildDynSzPeerCfg (U8 mmeIndex, U8 dbIndex);



extern S16 smBuildDynCzPeerCfg (U32 nbrIndex,U8 dbIndex);

extern S16 smBldSzPeerDelCntrlReq(U8 peerId, U8 dbIndex);
extern S16 smBldCzPeerDelCntrlReq(U8 peerId, U8 dbIndex);
extern S16 smBindUnBindSzToLSap (U8 action);
extern S16 smBuildSzGenCntrl (Void);
extern S16 smBuildSzDbgCntrl (Void);
extern S16 smBuildSzLogCntrl (Bool actType, U32 mask);
extern S16 SmMiLwrUpDateNhgCellCfgReq(Pst *pst,LwrMngmt *nghCellCfgReq);




extern S16 smBuildCzGenCfg (Void);
extern S16 smBuildCzGenCntrl (Void);
extern S16 smBuildCzProtCfg (Void);
extern S16 smBuildCzLSapCfg (SuId suId, SpId spId);
extern S16 smBuildCzUSapCfg (SpId spId);
extern S16 smBuildCzPeerCfg (Void);
extern S16 smBuildCzUstaCntrl (Void);
extern S16 smBuildCzDbgCntrl (Void);
extern S16 smBuildCzLogCntrl (Bool actType, U32 mask);
extern S16 smBuildCzShutDownCntrl (Void);
extern S16 smBuildWrUnbindSz (Void);
extern S16 smBuildWrUnbindCz (Void);
extern S16 smBuildWrUnbindEg (Void);
extern S16 smBuildCzLSapTrcCntrl (U16 action);
extern S16 smBuildCzPeerTrcCntrl (Void);
extern S16 smBuildCzEndPtCntrl (Void);
extern S16 smBuildCzAssocCntrl (Void);
extern S16 smBuildCzGenStsReq (Void);
extern S16 smBuildCzPeerStsReq (Void);
extern S16 smBuildCzGenStaReq (Void);
extern S16 smBuildCzSidStaReq (Void);
extern S16 smBuildCzUSapStaReq (Void);
extern S16 smBuildCzLSapStaReq (Void);
extern S16 smBuildCzPeerStaReq (Void);
extern S16 smBindUnBindCzToLSap (U8 action);
extern S16 smUbindCzFrmUSap (Void);
extern S16 smDelCzUSap (Void);
extern S16 smUbindCzFrmLSap (Void);
extern S16 smDelCzLSap (Void);
extern S16 smDelCzPeer (Void);
extern S16 smBldrCzPeerDelCntrlReq (U32 peerId, U32 dbIndex);
extern S16 smBuildAddNeighCfg (LwrMngmt *lwrMngmt);



extern S16 smBuildEgGenCfg (Void);
extern S16 smBuildEgGenCntrl (Void);
extern S16 smBuildEgUSapCfg (SpId spId);
extern S16 smBuildEgLSapCfg (SpId spId, SuId suId);

extern S16 smBuildEgIpAddrCfg (SpId spId);
extern Void smBindUnBindEgToHitSap (SpId spId,U8 action);
extern Void smBuildEgDbgCntrl (Void);
extern Void smBuildEgLogCntrl (Bool actType, U32 mask);


extern S16 smBuildYsGenCfg (Void);
extern S16 smBuildYsTfuSapCfg (SpId spId, SuId suId);
extern S16 smBuildYsSchTfuSapCfg (SpId spId, SuId suId);
extern S16 smBuildYsCtfSapCfg (SpId spId, SuId suId);
extern S16 smBuildYsGenCntrl (Void);
extern S16 smBuildYsDbgCntrl (Void);
extern S16 smBuildYsLogCntrl (Bool actType, U32 mask);






extern S16 smBuildWrGenCfg (Void);
extern S16 smBuildWrCtfLSapCfg (SpId spId, SuId suId);
extern S16 smBuildWrNhuLSapCfg (SpId spId, SuId suId);
extern S16 smBuildWrRgrLSapCfg (SpId spId, SuId suId);
extern S16 smBuildWrSztLSapCfg (SpId spId, SuId suId);

extern S16 smBuildWrCztLSapCfg (SpId spId, SuId suId);
extern S16 smBindUnBindWrToCztSap (U8 action);
extern S16 smBuildCdmaHrpdaBandClass (LwrMngmt *lwrMng);
extern S16 smBuildCdma1xRTTBandClass (LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 wrSmmEnbBuildCdma1xRTTBandClass (LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 wrSmmEnbBuildWrNehUtraFddCellCfg (LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 smBuildWrNehUtraFddCellCfg (LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 smBuildWrNehUtraTddCellCfg (LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 wrSmmEnbBuildWrNehUtraTddCellCfg (LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 smBuildWrNrCdmaHrpdFreqCfg(LwrMngmt *lwrMng);

extern S16 smBindUnBindDamToEgtSap(U8 action);

extern S16 wrSmmEnbBuildWrNehCellCfg (LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 smBuildWrNehCellCfg(LwrMngmt *lwrMng, U8 cellCfgIdx);



extern S16 wrSmmEnbBuildWrNghCfg (LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 wrSmmEnbBuildModCellCfg (LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 wrSmmEnbBuildWrMmeCfg (LwrMngmt *lwrMng, LwrSmMmeCfg *mmeCfg);
extern S16 smBuildWrNghCfg (LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 smBuildCellCfg (LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 smBuildModCellCfg (LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 smBuildWrMmeCfg (LwrMngmt *lwrMng, LwrSmMmeCfg *mmeCfg);
extern Void smGetS1apStats(Void);
extern S16 smSndRmuProtDynMmeCfg(U16 mmeId, U32 action);
extern S16 smSndRmuProtModCellCfg ( U8 cellId, LrmCellConfiguration modCellCfg );
extern S16 wrSendDynMmeDelcfg( U32 mmeIdx );
extern S16 smBuildWrNrUtraFddFreqCfg(LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 smBuildWrNrUtraTddFreqCfg(LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 wrSmmEnbBuildWrNrUtraFddFreqCfg(LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 wrSmmEnbBuildWrNrUtraTddFreqCfg(LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 wrSmmEnbBuildWrNrGeranFreqCfg(LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 wrSmmEnbBuildWrNrGeranCellCfg(LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 wrSmmEnbBuildWrNrEutraFreqCfg(LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 wrSmmEnbBuildWrEnbCfg (LwrMngmt *lwrMng,U8 cellCfgIdx);
extern Void wrSmmEnbBldCellAnrCfg (LwrMngmt *lwrMng, U8 cfgGrpIndex, U8 cellCfgIdx);
extern Void wrSmmEnbBldCellSibSchCfg (LwrMngmt *lwrMng, U8 cfgGrpIndex, U8 cellCfgIdx);
extern Void wrSmmEnbBldCellEaidCfg(LwrMngmt *lwrMng, U8 cfgGrpIndex);
extern S16 smBuildWrNrGeranFreqCfg(LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 smBuildWrNrGeranCellCfg(LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 smBuildWrNrEutraFreqCfg(LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 smBuildWrEnbCfg (LwrMngmt *lwrMng);
extern S16 wrSmmEnbFillX2InitCntrl(LwrMngmt *cntrl, U8 cellCfgIdx);

extern S16 smBuildDynMmeAddCfg(U32 mmeIndex);
extern S16 smBuildDynMmeDelCfg(U32 mmeIndex);
extern S16 MsmEnodeBinitialCfgComplete(Void);
extern Void MsmStartStopStackReq(U8 isPremReq,U8 isStkSt,U8 isImd);
extern S16 smSndWrModCellCfg(U8 cellCfgIndx);
extern S16 smBuildWrErabRelIndCntrl(Void);
extern S16 wrSmDynInitS1Setup(Void);
extern S16 smBuildWrX2InitCntrl(U8 cellCfgIdx);
extern S16 wrSmDynInitX2Setup(Void);
extern S16 smBuildWrPartRstCntrl(Void);
extern S16 smBuildWrFullRstCntrl(Void);
extern S16 smBuildNghRstCntrl(Void);
extern S16 smBuildAnrPrintCntrl(Void);
extern S16 smSndWrCellReCfgSib2(U8 ovldFlag);
extern S16 smSndLoadInd(U16 choice,U16 value);
extern S16 smSndDynWrNhCellCfg(Void);







extern S16 smBuildWrRmuLSapCfg (SpId spId, SuId suId);
extern S16 smBindUnBindWrToRmuSap(U8 action);
extern S16 smBuildRmRgmLsapCfg (Void);
extern S16 smBindUnBindRmToRgmSap (U8 action);
extern S16 smSendCellUpIndToRrm (U16 cellId);
extern S16 smSendCpuLoadToRrm(U8 cpuload);

extern S16 smBindUnBindWrToNluSap(U8 action);


extern S16 smBuildWrDamLSapCfg(SpId spId, SuId suId);



extern S16 smBuildWrEgtLSapCfg (SpId spId, SuId suId);
extern S16 smBuildWrPjuLSapCfg (SpId spId, SuId suId);
extern S16 smBindUnBindWrToEgtSap(U8 action);
extern S16 smBindUnBindWrToPjuSap (Inst inst,U8 action);

extern S16 smBuildPjLogCntrl (Bool actType, U32 mask);

extern S16 smBindUnBindWrToSztSap (U8 action);
extern S16 smBindUnBindWrToNhuSap (U8 action);
extern S16 smBindUnBindWrToCtfSap (U8 action);
extern S16 smBindUnBindWrToRgrSap (U8 action);
extern S16 smBuildWrGenCntrl (Void);
extern S16 smBuildWrS1InitCntrl (Void);
extern S16 smBuildWrCellCntrl (Void);

extern S16 smBuildWrSyncCntrl (Void);
extern S16 smBuildWrDbgCntrl (Void);
extern S16 smBuildWrLogCntrl (Bool actType, U32 mask);
extern S16 wrSmmEnbBuildRmuProtCellDel(LrmCellConfiguration *cellCfg, U8 idx);



extern S16 smBuildRgSCHShutDownCtrl (Void);
extern S16 smBuildRmShutDownCntrl (Void);
extern S16 smBuildNlShutDownCntrl (Void);
extern S16 smBuildWrshutDownCntrl (Void);
extern S16 smBuildNhShutDownCntrl (Void);
extern S16 smBuildEgShutDownCntrl (Void);
extern S16 smBuildPjShutDownCntrl (U8 inst);
extern S16 smBuildKwShutDownCntrl (Inst inst);
extern S16 smBuildRgShutDownCntrl (Void);
extern S16 smBuildCzShutDownCntrl (Void);
extern S16 smBuildSzShutDownCntrl (Void);
extern S16 smBuildYsShutDownCntrl (Void);
extern S16 smBuildSbShutDownCntrl (Void);
extern S16 smBuildWrShutDownCntrl (Void);
extern Void smBuildHiShutDownCntrl (Void);

extern S16 smBuildNhGenCfg (Void);
extern S16 smBuildNhGenCntrl (Void);
extern S16 smBuildNhProtCfg (Void);
extern S16 smBuildNhUsapCfg (Void);
extern S16 smBuildNhKwuLsapCfg (Inst inst, U8 cellIdx);
extern S16 smBuildNhCkwLsapCfg (U8 cellIdx);
extern S16 smBuildNhCrgLsapCfg (Inst inst);
extern S16 smBuildNhCpjLsapCfg (U8 cellIdx);
extern S16 smBuildNhPjuLsapCfg (Inst inst, U8 cellIdx);
extern S16 smBuildNhLsapCfg (U8 elemId,Inst inst, U8 cellIdx);
extern S16 smBindUnBindNhToKwuSap (Inst inst,U8 action);
extern S16 smBindUnBindNhToCkwSap (U8 action);
extern S16 smBindUnBindNhToCrgSap (U8 action);
extern S16 smBindUnBindNhToCpjSap (U8 action);
extern S16 smBindUnBindNhToPjuSap (Inst inst,U8 action);
extern S16 smBindUnBindNhToLsap (U8 elemId,U8 action);
extern S16 smBindUnBindWrToDamSap (Inst inst,U8 action);
extern S16 smBindNhToLsap (U8 elemId);
extern S16 smBuildNhGenCntrl (Void);
extern S16 smBuildNhDbgCntrl (Void);
extern S16 smBuildNhLogCntrl (Bool actType, U32 mask);

extern S16 smBuildWrAppDamLSapCfg(SuId suId,SpId spId);

extern S16 smBuildPjGenCfg (Inst inst);
extern S16 smBuildPjCpjSapCfg (Inst inst);
extern S16 smBuildPjPjuSapCfg (SpId spId, Inst inst);


extern S16 smBuildKwGenCfg (Inst inst);
extern S16 smBuildKwUsapCfg (U8 elemId, U8 ent,Inst inst);
extern S16 smBuildCkwUsapCfg (Inst inst);
extern S16 smBuildKwuUsapCfg (U8 ent,Inst inst);
extern S16 smBuildKwRguLsapCfg (Void);
extern S16 smBuildKwLsapCfg (U8 ent,Inst inst, U8 lsapInst);
extern S16 smBindUnBindKwToRguSap (Inst,U8 action);
extern S16 smBuildKwDbgCntrl (Void);
extern S16 smBuildKwLogCntrl (Bool actType, U32 mask);

extern S16 smBuildUdxUsapCfg (Inst inst);
extern S16 smBindUnBindKwUdxSap (Inst inst,U8 action);
extern S16 smBindUnBindPJToKwuSap (Inst inst,U8 action);
extern S16 smBindUnBindPjUdxSap (Inst inst,U8 action);
extern S16 smBindUnBindPjKwuSap (Inst inst,U8 action);
extern S16 smBindPjUdxSap(Inst inst);
extern S16 smBuildPjKwuSapCfg (Inst inst);
extern S16 smBuildPjUdxSapCfg (Inst inst);


extern S16 smBuildRgGenCfg (Void);
extern S16 smBuildRgUsapCfg (U8 elemId,SpId sapId);
extern S16 smBuildCrgUsapCfg (Void);
extern S16 smBuildRguUsapCfg (SpId sapId);
extern S16 smBuildRgSchInsCfg (Void);
extern S16 smBuildRgStsReq (Void);
extern S16 smBuildRgTfuLsapCfg (Void);
extern S16 smBindUnBindRgToTfuSap (U8 action);
extern S16 smBindUnBindRgSchToTfuSap (U8 action);
extern S16 smBuildRgGenCntrl (Void);
extern S16 smBuildRgDbgCntrl (Void);
extern S16 smBuildSchdDbgCntrl (Void);
extern S16 smBuildRgLogCntrl (Bool actType, U32 mask);
extern S16 smCreateLogThr (Void);

extern S16 smSndWrCellModSib2 (Void);
extern S16 smSndWrCellModSib3 (Void);
extern S16 smSndWrCellModSib4 (Void);
extern S16 smSndWrCellModSib5 (Void);
extern S16 smSndWrCellModSib6 (Void);
extern S16 smSndWrCellModSib9 (Void);
extern S16 smSndWrModCellCfg (U8 cellCfgIndx);


extern S16 smModBuildWrNehCellCfg (LwrMngmt *lwrMng);


extern S16 smModWrNhCellCfg (Void);


extern S16 wrSmDynInitX2Setup (Void);
extern S16 wrSmDynInitS1Setup (Void);
extern S16 smBuildAnrPrintCntrl (Void);
extern S16 smBuildWrFullRstCntrl (Void);
extern S16 smBuildWrPartRstCntrl (Void);
extern S16 smBuildNghRstCntrl (Void);
extern S16 smBuildWrX2InitCntrl (U8 cellCfgIdx);
extern S16 smBuildWrErabRelIndCntrl (Void);
extern S16 smSndLoadInd (U16 choice, U16 value);
extern S16 smSndWrCellReCfgSib2 (U8 ovldFlag);
extern S16 wrSmmSendDynNbrEnbCfg (U32 dbIndex);
extern S16 wrSmmEnbBuildDynWrNbrEnbCfg (U32 dbIndex, LwrMngmt *lwrMng);
extern U8 smGetEnbType(U16 phyCellId, U8 cellCfgIdx);
extern S16 smBuildYsTenbStatsCntrl (U32 statsPer);


extern S16 wrSmmEnbBuildGenCfg(LwrMngmt *lwrMng,U8 cellCfgIdx);
extern S16 wrSmmEnbBuildCellCfg (LwrMngmt *lwrMng,U8 cellCfgIdx);
extern S16 wrSmmEnbBuildWrNr1xCdmaCellCfg(LwrMngmt *lwrMng, U8 cellCfgIdx);
extern S16 wrSmmEnbBuildWrNr1xCdmaFreqCfg(LwrMngmt *lwrMng, U8 cellCfgIdx);

extern Void wrSmmSetBandwidth(U32 freqBandwidth,U8 loopCnt);
extern Void smBuildShutRestart(Void);
extern Void smBuildShutdown(Void);

extern S16 wrMemCpuL3MeasSendReq(Void);
extern S16 wrMemCpuL3MeasStopReq(Void);
extern S16 wrMemCpuUtilMeasStartReq(Void);
extern Void wrMemCpuUtilTmrExp(Void);
extern Void smSendKpiMemCpuInfo(Void);

typedef enum {
   WR_TAG_CELL_ID,
   WR_TAG_NOS_OF_CELLS,



   WR_TAG_DUP_MODE,
   WR_TAG_MAX_UE_SUPPORT,
   WR_TAG_MAX_AVG_GBRPRB_USAGE,
   WR_TAG_MCC_0,
   WR_TAG_MCC_1,
   WR_TAG_MCC_2,
   WR_TAG_MNC_0,
   WR_TAG_MNC_1,
   WR_TAG_MNC_2,
   WR_TAG_TA_CODE,
   WR_TAG_FREQ_BAND_IND,
   WR_TAG_ENB_IP_ADDR,
   WR_TAG_ENB_IP_ADDR_IPV6,
   WR_TAG_PCI_SELECT_TYPE,
   WR_TAG_PRACH_SELECT_TYPE,
   WR_TAG_EARFCN_SELECT_TYPE,
   WR_TAG_PCI_LIST,
   WR_TAG_DL_EARFCN_LIST,
   WR_TAG_UL_EARFCN_LIST,
   WR_TAG_ROOTSEQ_IDX_LIST,
   WR_TAG_PRACHCFG_IDX_LIST,
   WR_TAG_ZERO_CORR_ZONE_CFG_LIST,
   WR_TAG_PRACH_FREQ_OFFSET_LIST,
   WR_TAG_ROOTSEQ_IDX,



   WR_TAG_ZERO_CORR_ZONE_CFG,
   WR_TAG_PRACH_FREQ_OFFSET,
   WR_TAG_NO_OF_MME_INFO,
   WR_TAG_MME_INFO,
   WR_TAG_NO_OF_MME_INFO_IPV6,
   WR_TAG_MME_INFO_IPV6,
   WR_TAG_HI_DBG,
   WR_TAG_SB_DBG,
   WR_TAG_SZ_DBG,
   WR_TAG_EG_DBG,
   WR_TAG_WR_DBG,
   WR_TAG_NH_DBG,
   WR_TAG_KW_DBG,
   WR_TAG_RG_DBG,
   WR_TAG_YS_DBG,
   WR_TAG_SM_DBG,
   WR_TAG_INACTIVITY_TIMER_VAL,
   WR_TAG_MAX_EXPIRY,

   WR_TAG_CZ_DBG,
   WR_TAG_X2_PREP_TMR,
   WR_TAG_X2_OVRALL_TMR,



   WR_TAG_NO_OF_BRDCST_PLMN,
   WR_TAG_PLMN_ID_LST,
   WR_TAG_NO_OF_NGH_INFO,



   WR_TAG_NO_OF_GU_GRP,



   WR_TAG_S1_PREP_TMR,
   WR_TAG_S1_OVRALL_TMR,
   WR_TAG_NO_OF_NGH_CFG,
   WR_TAG_NGH_CELL_CFG,
   WR_TAG_NO_OF_NGH_CFG_IPV6,
   WR_TAG_NGH_CELL_CFG_IPV6,
   WR_TAG_MEAS_CFG_ENB,
   WR_TAG_RRM_RNTI_STRT,
   WR_TAG_MAX_RRM_RNTIS,
   WR_TAG_MAC_RNTI_STRT,
   WR_TAG_MAX_MAC_RNTIS,
   WR_TAG_RRM_NO_OF_DED_PREMBL,
   WR_TAG_RRM_DED_PREMBL_STRT,
   WR_TAG_MAC_NO_OF_PREMBL,
   WR_TAG_A1_RSRP_THRSHLD_VAL,
   WR_TAG_A2_RSRP_THRSHLD_VAL,
   WR_TAG_INTRA_A5_RSRP_THRSD1_VAL,
   WR_TAG_INTRA_A5_RSRP_THRSD2_VAL,
   WR_TAG_INTER_A5_RSRP_THRSD1_VAL,
   WR_TAG_INTER_A5_RSRP_THRSD2_VAL,
   WR_TAG_INTRA_HO_A3_OFFSET,
   WR_TAG_INTRA_ANR_A3_OFFSET,
   WR_TAG_INTER_ANR_A5_RSRP_THRSD1_VAL,
   WR_TAG_INTER_ANR_A5_RSRP_THRSD2_VAL,
   WR_TAG_ANR_REPORT_CFG_VAL,
   WR_TAG_ANR_CELL_VALID_AGE_VAL,
   WR_TAG_HO_REPORT_CFG_VAL,
   WR_TAG_RSRQ_THRSHLD_VAL,
   WR_TAG_ANR_EPOC_TMR_VAL_IN_SECS,
   WR_TAG_ANR_TRICE_INTV_COUNT,
   WR_TAG_UTRA_B2_RSRP_THRSD1_VAL,
   WR_TAG_UTRA_FDD_B2_RSCP_THRSD2_VAL,
   WR_TAG_UTRA_TDD_B2_RSCP_THRSD2_VAL,
   WR_TAG_S_MEASURE_VAL,
   WR_TAG_INTRA_TTT_VAL,
   WR_TAG_INTRA_HYTERISIS,




   WR_TAG_PCI_VAL,
   WR_TAG_DL_NUM_UE_PER_TTI,
   WR_TAG_UL_NUM_UE_PER_TTI,
   WR_TAG_DL_SCHD_TYPE,
   WR_TAG_UL_SCHD_TYPE,
   WR_TAG_DLFS_SCHD_TYPE,
   WR_TAG_PFS_DL_TPT_COEFFICIENT,
   WR_TAG_PFS_DL_FAIRNESS_COEFFICIENT,
   WR_TAG_PFS_UL_TPT_COEFFICIENT,
   WR_TAG_PFS_UL_FAIRNESS_COEFFICIENT,
   WR_TAG_TM_AUTO_CONFIG,
   WR_TAG_PREFERRED_TM,
   WR_TAG_MAX_X2_PEERS,
   WR_TAG_X2_TIME_TO_WAIT,
   WR_TAG_UE_HO_ATTACH_TMR,
   WR_TAG_SCTP_SRVC_TYPE,
   WR_TAG_OP_MODE,
   WR_TAG_PERIOD,
   WR_TAG_DL_EARFCN,
   WR_TAG_UL_EARFCN,
   WR_TAG_END_MARKER_TIMER_VAL,






   WR_TAG_AS_PRI_INTG_ALGO_LST,
   WR_TAG_AS_PRI_CIPH_ALGO_LST,

   WR_TAG_DIAG_TUCL,
   WR_TAG_DIAG_S1AP,
   WR_TAG_DIAG_EGTP,
   WR_TAG_DIAG_APP,
   WR_TAG_DIAG_LTERRC,
   WR_TAG_DIAG_LTERLC,
   WR_TAG_DIAG_LTEPDCP,
   WR_TAG_DIAG_LTECL,
   WR_TAG_DIAG_LTEMAC,
   WR_TAG_DIAG_X2AP,
   WR_TAG_DIAG_SCTP,
   WR_TAG_NO_OF_UTRA_FDD_NGH_CFG,
   WR_TAG_NGH_UTRA_FDD_CELL_CFG,
   WR_TAG_NO_OF_UTRA_TDD_NGH_CFG,
   WR_TAG_NGH_UTRA_TDD_CELL_CFG,
   WR_TAG_NUM_EUTRA_FREQ,
   WR_TAG_EUTRA_FREQ_CFG,
   WR_TAG_NUM_UTRA_FDD_FREQ,
   WR_TAG_UTRA_FDD_FREQ_CFG,
   WR_TAG_NUM_UTRA_TDD_FREQ,
   WR_TAG_UTRA_TDD_FREQ_CFG,
   WR_TAG_NUM_CDMA_1XRTT_BAND_CLS,
   WR_TAG_CDMA_1XRTT_BAND_CLS,
   WR_TAG_NUM_CDMA_1XRTT_NEIGH_FREQ,
   WR_TAG_CDMA_1XRTT_NEIGH_FREQ,
   WR_TAG_NUM_CDMA_1XRTT_NEIGH_CELL,
   WR_TAG_CDMA_1XRTT_NEIGH_CELL,
   WR_TAG_CSFB_UTRA_CFG_VAL,
   WR_TAG_CSFB_CDMA_CFG_VAL,
   WR_TAG_ECSFB_CFG_VAL,
   WR_TAG_DUAL_RX_SUPPORTED,
   WR_TAG_MAX_DL_UE_PER_TTI,
   WR_TAG_MAX_UL_UE_PER_TTI,
   WR_TAG_DEFAULT_PAGING_CYCLE,
   WR_TAG_DEFAULT_PCCH_CFG_NB,
   WR_TAG_SCTP_RTO_MIN,
   WR_TAG_SCTP_RTO_MAX,
   WR_TAG_SCTP_RTO_INITIAL,
   WR_TAG_SCTP_HRTBEAT_INTERVAL,
   WR_TAG_ABS_A3_OFFSET,
   WR_TAG_PICO_OFFSET,
   WR_TAG_ABS_PATTERN_TYPE,
   WR_TAG_ABS_PATTERN,
   WR_TAG_ABS_LOAD_PERIODICITY,
   WR_TAG_SFR_START_RB,
   WR_TAG_SFR_END_RB,
   WR_TAG_SFR_POWER_LOW,
   WR_TAG_SFR_POWER_HIGH,
   WR_TAG_DRX_QCI_SUPPORT_ENABLED,
   WR_TAG_DRX_ENABLED,
   WR_TAG_DRX_INACTIVITY_TMR,
   WR_TAG_DRX_RETX_TMR,
   WR_TAG_DRX_LONG_CYCLE_GBR,
   WR_TAG_DRX_LONG_CYCLE_NON_GBR,
   WR_TAG_ANR_DRX_LONG_CYCLE,
   WR_TAG_ANR_DRX_ON_DURATION_TMR,
   WR_TAG_ANR_DRX_INACTIVITY_TMR,




   WR_TAG_BANDWIDTH,






   WR_TAG_PWS_ETWS_CMAS_CNTRL,
   WR_TAG_TDD_ULDL_CFG_MODE,
   WR_TAG_TDD_SPCL_SF_CONFIG,

   WR_TAG_WATCHDOG_SOFT_LIMIT,
   WR_TAG_WATCHDOG_HARD_LIMIT,

   WR_TAG_INT_FREQ_MEAS_GAP,
   WR_TAG_ANR_MEAS_GAP_CONFIG,
   WR_TAG_SRC_HO_CANCEL_TMR,
   WR_TAG_LOG_PATH,
   WR_TAG_LOG_FILE,
   WR_TAG_LOG_MAX_FILES,
   WR_TAG_LOG_FILESIZE_LIMIT,
   WR_TAG_LOG_LEVEL,
   WR_TAG_LOG_MASK,
   WR_TAG_LOG_PORT,
   WR_TAG_LOG_REMOTE_LOGGING,
   WR_TAG_LOG_CIRBUF_SIZE,
   WR_TAG_LOG_COREDUMP_FLAG,
   WR_TAG_RRM_SR_PRDCTY,
   WR_TAG_RRM_CQI_PRDCTY,
   WR_TAG_RRM_NUM_SR_PER_TTI,
   WR_TAG_RRM_NUM_CQI_PER_TTI,
   WR_TAG_RRM_N1_PUCCH,



   WR_TAG_SPS_ENABLE_FLAG,
   WR_TAG_DL_NUM_SPS_UE_PER_TTI,
   WR_TAG_UL_NUM_SPS_UE_PER_TTI,
   WR_TAG_MAX_SPS_RB,
   WR_TAG_DSCP_ENABLE,
   WR_TAG_QCI_DSCP_MAP,
   WR_TAG_DL_QCI_SCHD_WGT,
   WR_TAG_UL_QCI_SCHD_WGT,
   WR_TAG_CSG_CSG_ID,
   WR_TAG_CSG_ACCESS_MODE,
   WR_TAG_CSG_CSG_PCI_START,
   WR_TAG_CSG_CSG_PCI_RANGE,
   WR_TAG_CSG_SMCELL_PCI_START,
   WR_TAG_CSG_SMCELL_PCI_RANGE,
   WR_TAG_CSG_HENB_NAME,
   WR_TAG_MAX_CSG_UES,
   WR_TAG_MAX_NON_CSG_UES,
   WR_TAG_MIN_DL_RSRC_FOR_NON_CSG,
   WR_TAG_MIN_UL_RSRC_FOR_NON_CSG,
   WR_TAG_RIM_CFG,
   WR_TAG_NUM_GERAN_NEIGH_FREQ,
   WR_TAG_GERAN_NEIGH_FREQ,
   WR_TAG_NUM_GERAN_NEIGH_CELL,
   WR_TAG_GERAN_NEIGH_CELL,
   WR_TAG_GERAN_MEAS_CFG,
   WR_TAG_CELL_PMAX,
   WR_TAG_CNM_ENABLED,
   WR_TAG_CNM_BOARD_TYPE,
   WR_TAG_TA_TMR_CMN,
   WR_TAG_TA_TMR_DED,
   WR_TAG_CELL_SIZE_TYPE,
   WR_TAG_ARP_EMER_SERV,
   WR_TAG_DCFI_ENABLE,
   WR_TAG_CFI,
   WR_TAG_GRP_PUCCH_PWR_CTRL_ENABLE,
   WR_TAG_GRP_PUSCH_PWR_CTRL_ENABLE,
   WR_TAG_LTE_PUCCH_PWR_FMT3A_ENABLE,
   WR_TAG_LTE_PUSCH_PWR_FMT3A_ENABLE,




   WR_TAG_DUAL_RX_TX_SUPPORTED,
   WR_TAG_GERAN_B2_RED_RSRP_THRSD1_VAL,
   WR_TAG_GERAN_B2_RED_THRSD2_VAL,
   WR_TAG_GERAN_B2_HO_RSRP_THRSD1_VAL,
   WR_TAG_GERAN_B2_HO_THRSD2_VAL,
   WR_TAG_NUM_PRB_RPTS,
   WR_TAG_PRB_RPT_INTERVAL,
   WR_TAG_SRS_ENABLE,
   WR_TAG_SRS_PERIODICITY,
   WR_TAG_SRS_CELL_BANDWIDTH,
   WR_TAG_SRS_CELL_SUBFRAME_CFG,
   WR_TAG_SRS_CELL_ACKNACK_SIMTX,
   WR_TAG_SRS_CELL_MAX_UPPTS,
   WR_TAG_SRS_UE_BANDWIDTH,
   WR_TAG_SRS_UE_HOPPING_BW,

   WR_TAG_WIRESHARK_PORT,
   WR_TAG_WIRESHARK_DST_IP_ADDR,
   WR_TAG_RRC_LOG_ENABLE,

   WR_TAG_RSYS_TPM_TGT_RSRP,
   WR_TAG_RSYS_TPM_ATTN_CONST_IDX,
   WR_TAG_RSYS_TPM_MIN_RSRP,
   WR_TAG_RSYS_TPM_MAX_RSRP,
   WR_TAG_NUM_TX_ANTENNA
   ,
   WR_TAG_TENB_STATS
   ,
   WR_TAG_L3_IP,
   WR_TAG_UL2_IP_LIST,
   WR_TAG_LL2_IP_LIST,
   WR_TAG_UL2_EGTP_IP_LIST,
   WR_TAG_UL2_IP,
   WR_TAG_LL2_IP,
   WR_TAG_DUL2_IP,
   WR_TAG_L3_PORT,
   MAX_CFG_PARAM
}wrCfgTagNum;

extern S8 *wrCfgTagLst[MAX_CFG_PARAM];
extern U16 wrSmmGetX2apFreePeerId(Void);

extern U16 cmMaxBufLen;
extern S16 wrSendDynAddMmeCfg
(
U32 mmeIndex
);

extern S16 wrSmDynAddMme(void);
extern Void smWrProcCliMsg(Void);
extern S16 smBuildDamGenCfg();
extern Void smCfgCellAdd(U16 cellIdx);
typedef struct wrRrcConTransCb {
    U8 state;
    WrGummei gummei;
    TknU32 gummeiType;
    U8 selPlmnIdx;
    U16 tac;
    WrPlmnId *plmnId;
    WrMmeId mmeId;
    TknStrOSXL *nasPdu;
    U8 schUeCfg;
    U8 schSrbCfg;
    U8 phyCfg;
    U8 rrcCfg;
    U8 ueCfg;
    RmuStatusInfo ueAdmitStatus;
} WrRrcConTransCb;
typedef struct wrEmmMmeEnbInfo
{
   U32 enbType;
   U32 cellId;
   U32 tac;
   WrPlmnId plmnId;
} WrEmmMmeEnbInfo;
typedef struct wrEmmMmeEnbCfgTrnsfr
{
   Bool isReply;
   WrEmmMmeEnbInfo targetInfo;
   WrEmmMmeEnbInfo sourceInfo;
} WrEmmMmeEnbCfgTrnsfr;

extern S16 wrEmmMmeBldSetupReq(S1apPdu **pdu);
extern S16 wrEmmMmeBldMmeCfgUpdAck(S1apPdu **pdu);
extern S16 wrEmmMmeBldWriteRepResp(S1apPdu **pdu, U16 serialNum);
extern S16 wrEmmMmeBldKillRsp(S1apPdu **pdu, U16 serialNum);
extern S16 wrEmmMmeBldMmeCfgUpdFail(S1apPdu **pdu, WrUmmMsgCause *cause,
                                    U8 timeToWaitSecs);
extern S16 wrEmmMmeBldEnbCfgUpd(S1apPdu **pdu);
extern S16 wrEmmMmeBldEnbCfgTrnsfr(S1apPdu **pdu,
                                   WrEmmMmeEnbCfgTrnsfr *trnsfrInfo);
extern S16 wrEmmNghEnbSndResetReq(U32 peerId,
                                  WrUmmMsgCause *cause);
extern S16 wrGenerateAddNeighCfgReq(LwrMngmt *cfm);
extern S16 wrEmmMmeEnbCfgTransferRspTmrExpiry(WrNeighEnbCb *nghEnbCb);
extern Void wrEmmMmeDown(WrMmeCb *mmeCb);
extern S16 wrEmmMmeSendResetReq(U32 mmeId,U8 causeType,
               U32 cause,U16 numCons,U8 rstType,
               WrEmmS1ConId *conIds);
extern S16 wrEmmMmeBldResetReq(S1apPdu **pdu,U8 rstType,U16 numCons,U8 choice,U32 cause,WrEmmS1ConId *conIds);
extern S16 wrEmmMmeSendCfgUpdateFail(WrMmeId mmeId,WrUmmMsgCause *cause,U8 timeToWaitSecs);
extern S16 wrEmmMmeBldEnbCfgUpdFail(S1apPdu **pdu,WrUmmMsgCause *cause,U8 timeToWaitSecs);
extern S16 wrEmmMmeSendEnbErrInd(WrMmeId mmeId,WrUmmMsgCause *cause,U32 *eNbUeId,U32 *mmeUeId);
extern S16 wrEmmMmeBldEnbErrInd(S1apPdu **pdu,WrUmmMsgCause *cause,U32 *eNbUeId,U32 *mmeUeId);
extern S16 wrEmmMmeParsePlmnIe(SztPLMNidentity *plmnIe,WrPlmnId *plmnId);
extern S16 wrEmmMmeEnbCfgUpdWaitTmrExp(U32 mmeId);
extern S16 wrEmmMmeEnbCfgRspTmrExp(U32 mmeId);
extern S16 wrEmmMmeResetRspTmrExp(U32 mmeId);
extern S16 wrEmmGetOvldStatus(U32 mmeId);
extern Bool wrEmmGetRelCap(U32 mmeId);
extern Bool wrEmmGetMmeStatus(U32 mmeId);
extern S16 wrEmmMmePrcErrInd(U32 peerId,S1apPdu *pdu);
extern S16 wrEmmMmePrcS1Abort(SztAbortS1 *abortS1);
extern S16 wrEmmMmeEnbRst(WrCellCb *cellCb);
extern S16 wrEmmMmePeerRestart(WrCellId cellId);
extern S16 wrEmmMmeTstEnbRst(U8 rstType);
extern S16 wrEmmMmeBrngAllS1Down(Void);
 S16 wrEmmMmeEnbConfigTransfer(WrEmmMmeEnbCfgTrnsfr *trnsfrInfo,
                               U32 enbCfgTransTmrVal,WrNeighEnbCb *neighEnbCb);
extern S16 wrEmmMmeSztFillLAC(U16 lac, SztLAC *lAC);
extern S16 wrEmmMmeSztFillTAC(U16 tac, S1apPdu *pdu, SztTAC *tAC);
extern S16 wrEmmMmeSztFillPLMNId (S1apPdu *pdu, WrPlmnId *plmnId, SztPLMNidentity *plmnIe);
extern S16 wrEmmGetLdBalMme(WrRrcConTransCb *rrccon);
extern S16 wrEmmGetMmeFrmStmsi(U8 mmeCode,U8 *causeTauRequiredSet,
                               U32 establishCause,WrRrcConTransCb *rrccon);
extern S16 wrEmmMmeBrngCellPwrUp(Void);


extern U32 wrEmmGetGummeiOvldStatus(WrGummei *gummei, WrMmeId mmeId);

extern S16 wrEmmMmeSztFillCI(U16 inCi,SztCI *outCi);
typedef enum wrSibAction
{
   WR_SIB_ACTION_ADD = 1,
   WR_SIB_ACTION_REMOVE
} WrSibAction;

typedef enum wrSiChange
{
   WR_PBM_SEND_NONE = 0,
   WR_PBM_SEND_ONE_SI_MSG,
   WR_PBM_SEND_ALL_SI_MSGS
} WrSiChange;



typedef enum
{
   WR_PBM_TYPE_START_PAG_SIMOD = 1,
   WR_PBM_TYPE_START_PAG_ETWS,
   WR_PBM_TYPE_START_PAG_CMAS,
   WR_PBM_TYPE_STOP_PAG_SIMOD,
   WR_PBM_TYPE_STOP_PAG_ETWS,
   WR_PBM_TYPE_STOP_PAG_CMAS,
   WR_PBM_TYPE_START_SI_MOD,
   WR_PBM_TYPE_NORMAL_PAG,
   WR_PBM_TYPE_PRI_ETWS,
   WR_PBM_TYPE_SEC_ETWS,
   WR_PBM_TYPE_CMAS,
   WR_PBM_TYPE_SIB8
} WrPbmInfoType;





typedef enum wrPageType
{
   WR_PAGE_ETWS_IND = 0,
   WR_PAGE_CMAS_IND,
   WR_PAGE_SYS_SI_CHAGE,
   WR_PAGE_SI_TYPE1
}WrPageType;





typedef enum wrWarningType
{
   WR_START_PRI_ETWS_IND = 3,
   WR_START_SEC_ETWS_IND,
   WR_START_BOTH_ETWS_IND,
   WR_START_CMAS_IND
}WrWarningType;






typedef struct wrPagingRecord
{
   U8 ueIdType;
   union
   {
      WrSTmsi sTMSI;
      U8 imsi[22];


   } ueId;
   U8 domIndType;
   U32 arrvTimeInfo;
   U8 pagPriority;
}WrPagingRecord;
typedef struct wrPagingMsgInfo
{
    U16 pf;
    U8 po;
    U8 numPagRcrds;

    WrPagingRecord pagRec[16];
}WrPagingMsgInfo;



typedef struct wrPbmInfo
{
   CmLList lnk;
   WrPbmInfoType pbmInfoType;
   WrPagingMsgInfo pendPagMsg;

}WrPbmInfo;





typedef struct wrUePagingMsgInfo
{
   U8 ueIdenType;

   union
   {
      WrSTmsi sTMSI;
      U8 imsi[22];




   } ueIden;
   U32 ue_Id;
   Bool pagingDrxPres;

   U8 ueSpcPagDrx;
   U16 pf;

   U8 po;

   U16 T;

   U8 N;
   U8 Ns;
   U8 domIndType;

   U8 pagPriority;
   U32 arrvTimeInfo;
} WrUePagingMsgInfo;




typedef struct wrSibMaping
{
   U8 sibNum;
   U8 siIndx;
   U8 sibAction;
   U8 reCfgOneOrAllSis;
} WrSibMaping;




extern S16 wrBldDlBcchBchPdu(NhuDatReqSdus *nhDatReqEvntSdu, Buffer **encBuf);
extern S16 wrBldDlBcchDlSchPdu(NhuDatReqSdus *nhDatReqEvnt, Buffer **encBuf);
extern S16 wrSibBldMIBMsg(WrCellCb *, NhuDatReqSdus *, U16 );
extern S16 wrSibBldSIB1Msg(WrCellCb *, NhuDatReqSdus *, U16 );
extern S16 wrEmmPbmBldSI(WrCellCb *, NhuDatReqSdus *, WrSISchdInfo *, U16, U8 , U8 );
extern S16 wrEmmPbmPorcPagingMsg(S1apPdu *s1apPagMsg);
extern S16 wrPbmTTIInd(RgrTtiIndInfo *tmngInfo);
extern S16 wrPbmAddOrUpdateSibs(U8 numSibs, U8 *sibs, U16 cellId);
extern S16 wrEmmPbmSib1Config(WrCellId cellId, U16 cfgType);
extern S16 wrEmmPbmMibConfig(WrCellId cellId);
extern S16 wrEmmPbmCellCfg(WrCellCb *cellCb);
extern S16 wrEmmPbmCellDel(WrCellCb *cellCb);
extern S16 wrEmmPbmModifyPlmn(WrPlmnId *plmnId, Bool activate);
extern S16 wrEmmFillRrcEvntHdr(NhuHdr *nhuHdr, U16 cellId,
                               U16 crnti, U32 transId);
extern S16 wrEmmPbmSibConfig(U16 cellId);
extern S16 wrPbmUpdSiSchedInfoLstInSIB1(WrCellCb *cellCb, WrSibAction action,
                                        U8 sibNum, U8 *retransSiIndx);
extern S16 wrEmmPbmTrgNrUpdt(U16 cellId, U8 updtNrBitMap);
extern S16 wrPbmStartPagingMsg(WrCellCb *cellCb, WrPageType pageType);

extern S16 wrPbmDelSibs(U8 numSibs, U8 *sibs, U16 cellId);


extern S16 wrPbmStopPagingMsg
(
 WrCellCb *cellCb,
 WrPageType pageType
);

extern S16 wrEmmPbmBldEncWrngSeg
(
WrCellId cellId,
U8 siIdx,
Buffer **pdu
);

extern S16 wrEmmPbmWrngSiConfig
(
WrCellId cellId,
U8 siIdx
);

extern S16 wrEmmPbmWrngStopSi
(
WrCellId cellId,
U8 siIdx
);




extern S16 wrEmmPbmProcPagingMsg(S1apPdu *s1apPagMsg);
extern S16 wrPbmAddOrUpdateSibs(U8 numSibs,U8 *sibs,U16 cellId );
extern S16 wrSibBldCellAccInfo
(
WrCellCb *cellCb,
NhuDatReqSdus *nhDatReqEvntSdu,
NhuSysInfoBlockTyp1cellAccessRelatedInfo *cellAcc
);
extern S16 wrPbmStartWarningMsg
(
    WrCellCb *cellCb,
    WrWarningType pageType
);
extern S16 wrEmmPbmCellSchdReCfg
(
  U16 cellId
);
extern S16 wrPbmSib8InsertRecord
(
 WrCellCb *cellCb,
 WrPbmInfo *pbmInfo
);
extern S16 wrSibBldSIHeader
(
WrCellCb *cellCb,
NhuDatReqSdus *sibSdu,
U16 schedSFN,
U8 subframe,
U8 numSibs
);
extern Void wrEmmPbmFreePendMsgLst
(
 U16 sfn,
 WrCellCb *cellCb
);

extern S16 wrEmmPbmActivatePlmnInSib1
(
 WrMmeCb *mmeCb
);
extern S16 wrCpyCmTptAddr(CmTptAddr *dst, CmTptAddr *src);
extern S16 wrCpyTptToNetAddr(CmNetAddr *dst, CmTptAddr *src);
extern S16 wrFillTknU8(TknU8 *encParam, U8 val);
extern S16 wrFillTknU16(TknU16 *encParam, U16 val);
extern S16 wrFillTknU32(TknU32 *encParam, U32 val);
extern S16 wrFillTknBStr32(TknBStr32 *ptr, U16 len, U32 val);
extern S16 wrFillTknBitStr4(TknStr4 *ptr, U8 len, U8 *val);
extern S16 wrFillTknStr4(TknStr4 *ptr, U8 len, U32 val);
extern S16 wrFill2TknStr4(TknStr4 *ptr, U8 len, U8 *val);
extern Bool wrUtlPlmnsEqual(WrPlmnId *plmnId1, WrPlmnId *plmnId2);
extern S16 wrUtlGetS1apMsgIdx (U8 *msgIdx, S1apPdu *pdu);
extern S16 wrUtlGetPlmnId (WrPlmnId *plmnId, SztPLMNidentity *plmnIe);
extern S16 wrGetBitRate (SztBitRate *ie, U32 *val);
extern S16 wrUtlFillBitRate (CmMemListCp *mem, TknStrOSXL *ptr,
      U16 len, U32 val);
extern S16 wrSzGetIE (SztS1AP_PDU *pdu, U32 id, TknU8 **ie);
extern S16 wrCzGetIE (CztX2AP_PDU *pdu, U32 id, TknU8 **ie);
extern S16 wrUtlGetDscp (U16 cellId, U32 qci, U8 *dscp);
extern S16 wrUtlGetRbMode (U16 cellId, U32 qci,U8 *rbMode);
extern S16 wrUtlGetRbDir (U16 cellId, U32 qci, U8 *rbDir);
extern S16 wrSztUtilsGetMsgIdx(U8 *msgIdx, S1apPdu *pdu);
extern S16 wrUtlX2GetMsgIdx(CztX2AP_PDU *pdu);
extern S16 wrUtlGetTportAddr(TknStrBSXL *ie, CmTptAddr *addr);
extern U32 wrUtlGetTeid(TknStrOSXL *ie);
extern S16 wrUtlFillU32BSXL(CmMemListCp *mem, TknStrBSXL *ie, U32 val, U8 len);
extern S16 wrFillTknStr4096BSXL(TknStrBSXL *ptr,U16 len,Data *val,
                                             CmMemListCp *mem);
extern S16 wrFillTknStr16384BSXL(TknStrBSXL *ptr,U16 len,Data *val,
                                             CmMemListCp *mem);
extern S16 wrRetrvBitMapfrm4096BSXL(TknStrBSXL *ptr, U16 *numOfBits, U8 **ulBitMap);
extern S16 wrRetrvBitMapfrm16384BSXL(TknStrBSXL *ptr, U16 *numOfBits, U8 **ulBitMap);
extern S16 wrUtlGetU32FrmBSXL(U32 *val, TknStrBSXL *ie);
extern S16 wrUtlGetU16FrmBSXL(U16 *val, TknStrBSXL *ie);
extern S16 wrGetU32FrmTknStr4(U32 *val, TknStr4 *ie);
extern S16 wrGetU16FrmTknStr4(U16 *val, TknStr4 *ie);
extern S16 wrFillTknStrOSXL1(TknStrOSXL *ie, U16 len, U32 val,
                                                            CmMemListCp *mem);
extern S16 wrFillTknStrOSXL(TknStrOSXL *ie, U16 len, Data *val,
                                                            CmMemListCp *mem);
extern S16 wrFillTknStrBSXL(TknStrBSXL *ie, U16 len, Data *val,
                                                            CmMemListCp *mem);
extern S16 wrUtlFillPlmn(WrPlmnId *plmnId, SztPLMNidentity *plmnIe);

extern S16 wrUtlGetDedCrnti(U16 *rnti, U16 cellId);
extern S16 wrUtlFreeDedCrnti(U16 rnti, U16 cellId);
extern S16 wrUtlGetDedPreamble (U16 *prmblId, U16 cellId);
extern S16 wrUtlFreeDedPreamble (U16 prmblId, U16 cellId);
extern S16 wrUtlGetU32FrmBStr32 (U32 *val, TknBStr32 *ie);
extern S16 wrUtlX2GetCztIE (CztX2AP_PDU *pdu, U32 id, void **ie);
extern S16 wrUtlX2GetX2UeId (S16 msgType, CztX2AP_PDU *pdu, U32 *ueX2apId);
extern S16 wrUtlCopyPlmnId (WrPlmnId *plmn1, WrPlmnId *plmn2);
extern S32 wrUpdateIpAddr (U8 *strIpAddr,CmTptAddr *binIpAddr);

extern S16 wrFillTknS32(TknS32 *encParam,S32 val);
extern void wrUtlPrntIncTansType(U8 transTyp,U16 crnti,U16 msgTyp, U32 transId);
extern void getLogTimeStrng(char* ts);

extern S16 wrUmmEncCsfbSectorId
(
 U16 marketId,
 U8 switchNum,
 U16 cellId,
 U8 sectorNum,
 TknStrOSXL *ptr,
 U8 len
 );
extern Void wrGetCdmaParamFromCID
(
 U16 *sId,
 U16 *nId,
 U64 *baseId,
 U32 ratType,
 U64 cId
);
extern S16 wrGetDrxQCIFeatureFlag(WrCellId cellId,Bool *flag);
extern Bool wrChkUtranFddSupp(WrUeCapInfo *ueCap);


 S16 wrUtlGetSpsRnti(U16 *spsRnti, U16 cellId);
 S16 wrUtlFreeSpsRnti(U16 spsRnti, U16 cellId);




typedef struct WrMsCellCfgReq
{
   U16 opMode;
   U32 counter;
   U32 period;



}WrMsCellCfgReq;


typedef enum wrRedirectionUtraSupp
{
 WR_REDIRECTION_NOT_SUPP,
 WR_REDIRECTION_REL9_SUPP,
 WR_REDIRECTION_REL10_SUPP
}WrRedirectionUtraSupp;

extern Void wrChkUtranTddERedirSupp
(
 WrUeCapInfo *ueCap,
 WrRedirectionUtraSupp *redirType
);

extern Bool wrEmmGetNeighUtraTddSIInfo
(
 U16 psc,
 U16 arfcn,
 U16 cellId,
 TknStrOSXL *utraSI
 );


extern S16 wrUpdtHrlUeCb(U8 cellId);


extern U8 wrPrintS1apCause
(
   SztCause *cause
);

extern Void wrPrintS1apCauseInfo
(
U8 causeType,
U8 causeVal
);

extern Void wrCpuLoadCntrl(CmLteCellId cellId);



extern Void wrInitSapIds(U8 cellId);

extern SuId wrUtlGetSapIdFrmCellId(WrCellId cellId, U8 sapType);
typedef struct wrUmmMeasRmvInfo
{
    U8 measIdRmvLstCnt;
    U8 measIdRmvLst[32];
    U8 measObjIdRmvLstCnt;
    U8 measObjIdRmvLst[32];
    U8 rptCfgRmvLstCnt;
    U8 rptCfgRmvLst[32];
} WrUmmMeasRmvInfo;

typedef struct wrUmmMeasAddInfo
{
    U8 measIdCnt;
    U8 measObjIdCnt;
    U8 rptCfgIdCnt;
    U8 measIdLst[32];
    U8 measObjLst[32];
    U8 rptCfgLst[32];
    Bool isCellsToBeSkip;
    Bool isEutraRptCgiFlg;
    Bool isInterRatRptCgiFlg;
    Bool isUtraRptCgiFlg;
} WrUmmMeasAddInfo;

typedef enum wrUmmMeasGapStatus
{
  WR_UMM_MEAS_GAP_NONE,
  WR_UMM_MEAS_GAP_INIT_SCH_CONFIG,
  WR_UMM_MEAS_GAP_INIT_UE_CONFIG,
  WR_UMM_MEAS_GAP_CONFIGURED,
  WR_UMM_MEAS_GAP_REL
}WrUmmMeasGapStatus;

typedef struct wrUmmMeasGapInfo
{
    U32 measGapModuleBitMask;
    U32 measGap80msBitMask;
    U32 latestTxId;
    WrUmmMeasGapStatus isMeasGapCfg;
    Bool isRecfgRqd;
    U8 gapPattern;
    U8 measGapOffset;
} WrUmmMeasGapInfo;
typedef struct wrUmmMeasTranInfo
{
    U8 transId;
    U8 transState;
    WrUmmMeasGapStatus measGapStatus;
    U32 rrcReCfgMsgPtr;
    WrUmmMeasRmvInfo rmvMeasInfo;
    WrUmmMeasAddInfo addMeasInfo;
} WrUmmMeasTransInfo;



typedef enum wrUmmMeasIntRptCfgTyp
{
  WR_UMM_MEAS_RPTCFG_NONE,
  WR_UMM_MEAS_RPTCFG_INTRA,
  WR_UMM_MEAS_RPTCFG_INTRA_ANR,
  WR_UMM_MEAS_RPTCFG_INTER_RSRP,
  WR_UMM_MEAS_RPTCFG_INTER_RSRQ,
  WR_UMM_MEAS_RPTCFG_INTER_ANR,
  WR_UMM_MEAS_RPTCFG_IRATB2_REDIR,
  WR_UMM_MEAS_RPTCFG_IRATB2_HO
}WrUmmMeasIntRptCfgTyp;




typedef enum wrUmmMeasNrFreqTyp
{
  WR_UMM_MEAS_NR_NEW_FREQ,
  WR_UMM_MEAS_NR_EXIST_FREQ
}WrUmmMeasNrFreqTyp;





typedef struct wrMeasCdmaCarrFreq
{
  U8 bandClass;
  U32 arfcn;
}WrMeasCdmaCarrFreq;
typedef struct wrMeasObjFreq
{
   U8 choice;
   union {
       U32 carrierFreq;
       WrMeasCdmaCarrFreq measObjCDMA2000;
   }t;
} WrMeasObjFreq;

typedef enum wrUtraRatType
{
   WR_UMM_MEAS_DUPLEX_MODE_FDD,
   WR_UMM_MEAS_DUPLEX_MODE_TDD
}WrUtraRatType;
typedef struct wrMeasCellReCfgInfo
{
   LwrActType action;
   U8 numFreq;
   union
   {
      WrMeasObjFreq addNeighFreq[16];
      WrMeasObjFreq modNeighFreq[16];
      U8 measObjIds[16];
   }t;
}WrMeasCellReCfgInfo;

typedef enum wrUmmMeasTyp
{
   WR_UMM_MEAS_TYPE_NONE,
   WR_UMM_MEAS_TYPE_PERD_ANR,
   WR_UMM_MEAS_TYPE_EVENT_ANR,
   WR_UMM_MEAS_TYPE_HO,
   WR_UMM_MEAS_TYPE_CSFB,
   WR_UMM_MEAS_TYPE_CSFB_CCO,
   WR_UMM_MEAS_TYPE_ECSFB,
   WR_UMM_MEAS_TYPE_ABS,
   WR_UMM_MEAS_TYPE_SCELL_ADD,
   WR_UMM_MEAS_TYPE_REDIR
   ,
   WR_UMM_MEAS_TYPE_PERD_STRONG_CELL
}WrUmmMeasTyp;







typedef struct wrMeasIdNode
{
   CmLList lnk;
   WrUmmMeasTyp measIdTyp;
   U8 measID;
   U8 measObjID;
   U8 rptCfgID;
}WrMeasIdNode;





typedef struct wrMeasFreeNode
{
   CmLList lnk;
   U8 val;
}WrMeasFreeNode;
typedef struct wrUmmMeasEutraMeasObjNode
{
   CmLList lnk;
   U32 carrFreq;
   U8 allowedMeasBW;
   U8 presAntPort1;
   U8 neighCellCfg;
   U8 qOffsetFreq;
   Bool wlCellIdxInUse[32];
   CmLListCp wlCellLst;
   Bool blCellIdxInUse[32];
   CmLListCp blCellLst;
}WrUmmMeasEutraMeasObjNode;
typedef struct wrUmmMeasUtraMeasObjNode
{
   CmLList lnk;
   U16 arfcn;
   S8 qOffsetFreq;
   Bool cellIdxInUse[32];
   CmLListCp cellLst;
   U8 duplexMode;
   U8 tddBandIndicator;
   LwrUtraTddMode tddMode;
}WrUmmMeasUtraMeasObjNode;


typedef struct wrUmmMeasGeranMeasObjNode
{
   CmLList lnk;
   U32 arfcnCnt;
   U16 arfcn[16];
   U8 bsic[16];
   U8 nccPermitted[16];
   U8 nccPermittedMeas;
   U8 bandIndicator[16];
   S8 qOffset;
   Bool isBandInd1900Pres;
}WrUmmMeasGeranMeasObjNode;
typedef struct wrUmmMeasCdmaMeasObjNode
{
   CmLList lnk;
   U8 cdmaType;
   U8 bandClass;
   U32 arfcn;
   U8 qOffsetRangeInterRAT;
   U32 searchWindowSize;
   CmLListCp cdmaCellInfo;
   Bool cdmaCellIdxInUse[32];
}WrUmmMeasCdmaMeasObjNode;
typedef struct wrMeasEutraNrUpdtIdNode
{
   U32 arfcn;
   WrUmmMeasEutraMeasObjNode *cellCbMeasObj;
   U8 addWCellCnt;
   U8 addWCellLst[32];
   U8 delWCellCnt;
   U8 delWCellLst [32];
   U8 addBCellCnt;
   U8 addBCellLst[32];
   U8 delBCellCnt;
   U8 delBCellLst[32];
} WrMeasEutraNrUpdtIdNode;
typedef struct wrMeasUtraNrUpdtIdNode
{
   U32 arfcn;
   WrUmmMeasUtraMeasObjNode *cellCbMeasObj;
   U8 addCellCnt;
   U8 addCellLst[32];
   U8 delCellCnt;
   U8 delCellLst[32];
} WrMeasUtraNrUpdtIdNode;
typedef struct wrMeasCdmaNrUpdtIdNode
{
   U8 bandClass;
   U16 arfcn;
   WrUmmMeasCdmaMeasObjNode *cellCbMeasObj;
   U8 addCellCnt;
   U8 addCellLst[32];
   U8 delCellCnt;
   U8 delCellLst[32];
} WrMeasCdmaNrUpdtIdNode;






typedef struct wrMeasCdmaNrDelIdNode
{
   U8 bandClass;
   U16 arfcn;
}WrMeasCdmaNrDelIdNode;
typedef struct wrUmmIntMeasTrans
{
   CmMemListCp memCp;
   U8 numEutra;
   U8 num1xCdma;
   U8 numCdmaHrpd;
   U8 numUtra;
   U8 numUtraDel;
   U8 numCdmaDel;
   U32 *utraNodeDel;
   WrMeasEutraNrUpdtIdNode *eutraNode;
   WrMeasCdmaNrUpdtIdNode *cdma1xNode;
   WrMeasCdmaNrUpdtIdNode *cdmaHrpdNode;
   WrMeasUtraNrUpdtIdNode *utraNode;
   WrMeasCdmaNrDelIdNode *cdma1xDelNode;
}WrUmmIntMeasTrans;
typedef struct wrMeasRptCfgNode
{
   CmLList lnk;
   U8 rptCfgType;
   U8 rptCfgId;
   WrUmmMeasIntRptCfgTyp intRptCfgTyp;
   union {
      NhuReportConfigEUTRA eventA124;
      NhuReportConfigEUTRA eventA3;



      NhuReportConfigEUTRA eventA5;
      NhuReportConfigInterRAT eventB1;
      NhuReportConfigInterRAT eventB2;
      NhuReportConfigEUTRA strgCell;
      NhuReportConfigInterRAT interRatStrgCell;
      NhuReportConfigInterRAT strgCellAnr;
      NhuReportConfigInterRAT utraStrgCellAnr;
      NhuReportConfigEUTRA eutraRptCgi;
      NhuReportConfigInterRAT interRatRptCgi;
      NhuReportConfigInterRAT utraRptCgi;
      NhuReportConfigInterRAT strgCellCsfb;
      NhuReportConfigInterRAT b2Utra;
      NhuReportConfigInterRAT b2Geran;
   } val;
}WrMeasRptCfgNode;
typedef struct wrMeasUeCbEutraMeasObjNode
{
   CmLList lnk;
   U8 measObjId;
   U16 newPci;
   WrUmmMeasEutraMeasObjNode *eutraMeasObj;
}WrMeasUeCbEutraMeasObjNode;
typedef struct wrMeasUeCbUtraMeasObjNode
{
   CmLList lnk;
   U8 measObjId;
   U16 newPsc;
   WrUmmMeasUtraMeasObjNode *utraMeasObj;
}WrMeasUeCbUtraMeasObjNode;






typedef struct wrMeasUeCbGeranMeasObjNode
{
   CmLList lnk;
   U8 measObjId;
   U16 newPsc;
   WrUmmMeasGeranMeasObjNode *geranMeasObj;
}WrMeasUeCbGeranMeasObjNode;
typedef struct wrMeasUeCbCdmaMeasObjNode
{
   CmLList lnk;
   U8 measObjId;
   U16 newPci;
   WrUmmMeasCdmaMeasObjNode *cdmaMeasObj;
}WrMeasUeCbCdmaMeasObjNode;







typedef struct wrMeasNrCdmaCellNode
{
   CmLList lnk;
   U8 cellIndex;
   U16 pci;
}WrMeasNrCdmaCellNode;
typedef struct wrMeasNrBCellNode
{
   CmLList lnk;
   U8 cellIndex;
   U16 startPhyCellID;
   U8 phyCellIdRange;
}WrMeasNrBCellNode;
typedef struct wrMeasNrUtraCellNode
{
   CmLList lnk;
   U8 cellIndex;
   U16 psc;
}WrMeasNrUtraCellNode;
typedef struct wrMeasNrWCellNode
{
   CmLList lnk;
   U8 cellIndex;
   U16 pci;
   U32 cio;
}WrMeasNrWCellNode;
typedef struct wrMeasNrUtraWCellNode
{
   CmLList lnk;
   U8 cellIndex;
   U16 psc;
}WrMeasNrUtraWCellNode;



typedef enum wrThrshldTyp
{
  WR_UMM_MEAS_THRES_TYPE_NONE,
  WR_UMM_MEAS_THRESHOLD_RSRP,
  WR_UMM_MEAS_THRESHOLD_RSRQ,
  WR_UMM_MEAS_THRESHOLD_RSCP,
  WR_UMM_MEAS_THRESHOLD_RSSI
}WrThrshldTyp;



typedef enum wrCdma2kCellTyp
{
  WR_UMM_MEAS_CELL_TYPE_NONE,
  WR_UMM_MEAS_CDMA2K_1XRTT,
  WR_UMM_MEAS_CDMA2K_HRPD
}WrCdma2kCellTyp;



typedef enum wrMeasRptCfgType
{
 WR_UMM_MEAS_EVENT_A1,
 WR_UMM_MEAS_EVENT_A2,
 WR_UMM_MEAS_EVENT_A3,
 WR_UMM_MEAS_EVENT_A4,
 WR_UMM_MEAS_EVENT_A5,
 WR_UMM_MEAS_EVENT_B1,
 WR_UMM_MEAS_EVENT_B2,
 WR_UMM_MEAS_STRONG_CELL,
 WR_UMM_MEAS_CDMA_STRONG_CELL,
 WR_UMM_MEAS_STRONG_CELL_ANR,
 WR_UMM_MEAS_UTRA_STRONG_CELL_ANR,
 WR_UMM_MEAS_REPORT_CGI,
 WR_UMM_MEAS_UTRA_REPORT_CGI,
 WR_UMM_MEAS_CDMA_REPORT_CGI,
 WR_UMM_MEAS_INITIAL_CNTXT_REQ,
 WR_UMM_MEAS_UTRA_STRONG_CELL_CSFB,

 WR_UMM_MEAS_EVENT_A3_ABS,

 WR_UMM_MEAS_UTRA_CSFB,
 WR_UMM_MEAS_EVENT_B2_UTRA,
 WR_UMM_MEAS_EVENT_B2_GERAN,
 WR_UMM_MEAS_EVENT_A3_FOR_ANR,
 WR_UMM_MEAS_GERAN_STRONG_CELL_CSFB
} WrMeasRptCfgType;







typedef struct wrUmmMeasNewPciInfo
{
   CmLList lnk;
   U16 crnti;
   U16 newPci;
   Bool isConfigred;
} WrUmmMeasNewPciInfo;
typedef struct wrMeasNewPciNode
{
   CmLList lnk;
   U32 arfcn;
   WrUmmMeasCellTyp cellTyp;
   CmLListCp newPciLst;
} WrMeasNewPciNode;
typedef struct wrUmmMeasObjInfo
{
   WrUmmMeasCellTyp nrType;
   WrMeasUeCbEutraMeasObjNode *eutraObj;
   WrMeasUeCbCdmaMeasObjNode *cdmaObj;
   WrMeasUeCbUtraMeasObjNode *utraFddObj;
   WrMeasUeCbUtraMeasObjNode *utraTddObj;
   WrMeasUeCbGeranMeasObjNode *geranObj;
} WrUmmMeasObjInfo;
typedef struct wrUmmMeasRptCfgInfo
{
   WrMeasRptCfgType rptCfgTyp;
   WrThrshldTyp thrshldTyp;
   WrCdma2kCellTyp cdma2kCellType;
   WrUmmMeasIntRptCfgTyp intRptCfgType;
} WrUmmMeasRptCfgInfo;
typedef struct wrUmmMeasCellCb
{
   U8 measGapCellCnt;
   U32 csfbTmrVal;
   WrUmmMeasEutraMeasObjNode intraMeasObj;
   CmLListCp interMeasObjLst;
   CmLListCp cdma1xMeasObjLst;
   CmLListCp cdmaHrpdMeasObjLst;
   CmLListCp utraFddMeasObjLst;
   CmLListCp utraTddMeasObjLst;
   CmLListCp geranMeasObjLst;
   WrUmmAnrMeasInfo *anrMeasInfo;
   U8 anrRptCfg;
   U8 hoRptCfg;
   Bool isAnrEnabled;



} WrUmmMeasCellCb;
typedef struct wrMeasUeCb
{
   WrMeasUeCbEutraMeasObjNode intraMeasObj;
   CmLListCp interMeasObjLst;
   CmLListCp interRatMeasObjLst;
   CmLListCp utraFddMeasObjLst;
   CmLListCp utraTddMeasObjLst;
   CmLListCp geranMeasObjLst;
   CmLListCp measIdLst;
   CmLListCp rptCfgLst;
   WrMeasRptCfgNode *eutraRptCgiCfg;
   WrMeasRptCfgNode *utraRptCgiCfg;
   CmLListCp measIDFreeLLst;
   CmLListCp measIDUsedLLst;
   CmLListCp measObjIDFreeLLst;
   CmLListCp measObjIDUsedLLst;
   CmLListCp measRptCfgIDFreeLLst;
   CmLListCp measRptCfgIDUsedLLst;
   WrUmmAnrMeasInfo ueAnrMeasInfo;
   WrMeasNewPciNode intraNewPci;
   CmLListCp interNewPciLst;
   CmLListCp utranNewPscLst;
   WrUmmMeasGapInfo gapMeasInfo;
   U8 rmvAnrMeasId;
   Bool isRptCgiCfg;
   Bool isAnrMeasCfged;
   Bool isQuantityCfged;

   U16 crnti;
   U16 cellId;

   U32 measIdForR1;
} WrMeasUeCb;

extern S16 wrUmmMeasUpdtUtraMeasObjAndIdFromArfcn
(
U32 arfcn,
WrMeasUeCb *measUeCb,
U8 *measObjId,
WrUmmMeasUtraMeasObjNode **cellCbMeasObj
);
typedef enum wrUmmAnrMeasCfgInfo
{
  WR_UMM_NOT_CONFIGED = 1,
  WR_UMM_CONFIGED
}WrUmmAnrMeasCfgInfo;
typedef struct wrUmmAnrMeasTranInfo
{
    WrUmmMeasTransInfo measTransCfg;
    U32 anrPrdRptCnt;
    Bool isDrxReqForRptCgi;
    Bool isDrxCfged;
    Bool isReCfgSent;
    Bool closeTrns;
    WrDrxCfg ueDrxCfg;
    WrDrxCfg *drxCfgPtr;
} WrUmmAnrMeasTransInfo;
typedef struct wrUmmEventAnrTransInfo
{
   WrUmmMeasTransInfo measTransCfg;
   Bool isDrxReqForRptCgi;
   Bool isDrxCfged;
   Bool isReCfgSent;
   Bool closeTrns;
   WrDrxCfg ueDrxCfg;
   WrDrxCfg *drxCfgPtr;
} WrUmmEventAnrTransInfo;
typedef enum wrUmmCsfbTransState
{
   WR_UMM_CSFB_TRANS_STATE_RRC_CONREL = 1,
   WR_UMM_CSFB_TRANS_STATE_MEAS_CFGD,
   WR_UMM_CSFB_TRANS_STATE_CSFB_INIT,
   WR_UMM_CSFB_TRANS_STATE_REDIR_SENT
}WrUmmCsfbTransState;
typedef struct wrUmmMeasRptnfo
{
   WrUmmMeasCellTyp cellTyp;
   U8 duplexTyp;
   WrMeasObjFreq arfcn;
   WrMeasRptCfgType rptCfgType;
} WrUmmMeasRptInfo;
typedef struct wrUmmCsfbTransCb
{
   U8 recvMeasRptCnt;
   WrUmmCsfbTransState csfbState;
   WrUmmTimer csfbCfgTmr;
   TknU32 csFallBackInd;
   WrRegLai regLai;

   WrUmmRedirectInfo *redirectInfo;
   WrUmmMeasTransInfo measTransCb;
   U8 ratPriority;
   WrCdmaRttPilotLst *cdmaRttPilotLst;
} WrUmmCsfbTransCb;
typedef enum wrUmmCsfbGsmUeState
{
   WR_CSFB_GSM_UE_STATE_CSFB_READY,
   WR_CSFB_GSM_UE_STATE_CCO_INIT,
   WR_CSFB_GSM_UE_STATE_CCO_IN_PROGRESS,
   WR_CSFB_GSM_UE_STATE_RRC_REDIR
}WrUmmCsfbGsmUeState;
typedef struct wrUmmGeranFreqCb
{
   CmLList freqLstEnt;

   U16 arfcn;
   TknU8 pMaxGeran;
   U8 bandInd;

   U8 qRxLevMin;

   U8 cellReselPriority;

   U8 threshXLo;


   U8 threshXHi;


   U8 nccPermitted;
}WrUmmGeranFreqCb;
typedef struct wrUmmGeranCellCb
{
   CmLList cellLstEnt;

   WrUmmGeranFreqCb *freqCb;
   WrPlmnId plmnId;
   U32 nrIndex;
   U16 lac;
   U8 rac;
   U16 cId;
   U8 bsic;


   U8 nccPermittedMeas;

   Bool isDtmCapable;
   U8 siPsiType;
   U8 noOfsiPsi;
   WrSiInfoGeran siOrPsi;
   TknStrBSXL nco;
   S8 offsetFreq;
}WrUmmGeranCellCb;

typedef struct wrUmmCsfbCcoTransCb
{
   U8 choice;
   WrUmmCsfbTransState csfbState;
   U8 ratPriority;
   U8 cfgdNeighCnt;
   TknU32 csFallBackInd;
   WrRegLai regLai;
   WrUmmTimer t304WaitTmr;
   WrUmmTimer measWaitTmr;
   WrUmmGeranCellCb *measObjCfgdNeig[16];
   WrUmmMeasTransInfo measCfgInfo;
}WrUmmCsfbCcoTransCb;




typedef struct wrUmmPerdStrongCellMeasTranInfo
{
    WrUmmMeasTransInfo measTransCfg;
    Bool isReCfgSent;
    Bool closeTrns;
} WrUmmPerdStrongCellMeasTransInfo;


typedef struct wrUmmStrongCell
{
    U32 pci;
    U32 rsrp;
    U32 rsrq;
} WrUmmStrongCell;

typedef struct wrUmmPerdStrongCellLst
{
    U8 numComp;
    WrUmmStrongCell strongCell[8];
} WrUmmPerdStrongCellLst;
typedef struct wrUmmRatLst
{
   U8 noComp;
   U32 ratType[6];
} WrUmmRatLst;
typedef struct wrUeCb WrUeCb;
typedef struct wrUeRAB
{
   U8 inUse;
   U8 rabId;
   U8 rbType;
   U8 rbDir;
   U8 rbMode;
   U8 rbId;
   U32 eRABId;
   U8 lchId;
   U8 pdcpId;
   U32 qci;
   Bool isGbrQosPres;
   WrBitRate mbr;
   WrBitRate gbr;
   U8 lcgId;
   U32 priority;
   U32 preempCap;
   U32 preempVul;
   U32 remEgtpTunId;
   U32 locEgtpTunId;
   CmTptAddr sgwAddr;
   Bool isDataFwdAvl;

   Bool isDlSpsEnabled;
   Bool isUlSpsEnabled;

   Bool isEmergencyBearer;

   U8 rejectCause;
} WrUeRAB;
typedef struct wrSrbRlcCfg
{
   U32 tPollRetransmit;
   U32 pollPdu;
   U32 pollByte;
   U32 maxRetxThreshold;
   U32 tReorderingDl;
   U32 tReorderingUl;
   U32 tStatusProhibit;
}WrSrbRlcCfg;
typedef struct wrUeRBInfo
{
   U8 rgrCfgMask;
   U8 numOfSrbCfgd;
   WrUeRAB srb[2];
   U8 numOfRbCfgd;
   WrUeRAB rab[8];
   WrBitRate aggBr;
   WrSrbRlcCfg srbRlcCfg;
   WrLchChnlCfg lchChnlCfg;

} WrUeRBInfo;






typedef struct wrUeHstryEutranInfo
{
   WrEcgi ecgi;
   U32 cellSize;
   U32 timeInCell;

   U32 timeInCellEnhGranularity;
} WrUeHstryEutranInfo;

typedef struct wrUeHstryCellInfo
{
   U8 ratType;
   union
   {
      WrUeHstryEutranInfo eutranInfo;
      TknStrOSXL utranInfo;


   } ratInfo;
} WrUeHstryCellInfo;

typedef struct wrUeHstryInfo
{
   U8 numOfCells;
   WrUeHstryCellInfo cellInfo[16];
} WrUeHstryInfo;



typedef enum
{
   WR_HO_NORMAL = 0,
   WR_HO_INITIATED,
   WR_HO_IN_PROGRESS,
   WR_HO_UE_RELEASE,
   WR_HO_MAX_STATES
} WrHoState;


typedef enum
{
   WR_EVNT_HO_DECISION,
   WR_EVNT_HO_PREP_FAILURE,
   WR_EVNT_HO_PREP_TMR_EXPIRY,
   WR_EVNT_HO_ACK_RCVD,
   WR_EVNT_HO_UE_CNTXT_RLS,
   WR_EVNT_HO_OVERALL_TMR_EXPIRY,
   WR_HO_SRC_MAX_EVENTS
}WrSrcFsmEvnts;

typedef enum
{
   WR_EVNT_HO_PREP_SUCCESS,
   WR_EVNT_HO_ADM_FAILURE,
   WR_EVNT_HO_RECONFIG_CMPL_RCVD,
   WR_EVNT_HO_PATH_SWTH_FAILED,
   WR_EVNT_HO_UE_ATTACH_TMR_EXPIRY,
   WR_EVNT_HO_CANCEL_RCVD,
   WR_HO_TGT_MAX_EVENTS
}WrTgtFsmEvnts;


typedef enum
{
   WR_HO_TYPE_NONE,
   WR_HO_TYPE_INTRA_LTE_S1,
   WR_HO_TYPE_X2,
   WR_HO_TYPE_IRAT_UTRA,
   WR_HO_TYPE_IRAT_GERAN
} WrHoType;

typedef enum wrHov
{
INTRA_LTE_HOV,
LTE_TO_UTRAN_HOV,
LTE_TO_GERAN_HOV,
UTRAN_TO_LTE_HOV,
GERAN_TO_LTE_HOV,
LTE_X2_HOV
}WrHo;

typedef enum wrHovFreqTyp
{
INTRA_FREQ=1,
INTER_FREQ,
INTER_RAT
}WrHovFreqTyp;






typedef enum
{
   WR_HO_DIR_NONE,
   WR_HO_DIR_IN,
   WR_HO_DIR_OUT
} WrHoDir;

typedef enum
{
   WR_UMM_UTRA_PS_SUPPORTED,
   WR_UMM_1xRTT_SUPPORTED,
   WR_UMM_HRPD_SUPPORTED,
   WR_UMM_CCO_SUPPORTED,
   WR_UMM_INTER_FREQ_HO_SUPPORTED,
   WR_UMM_A4_A5_MEAS_SUPPORTED,
   WR_UMM_NON_ANR_PERD_MEAS_SUPPORTED,
   WR_UMM_ANR_PERD_INTRA_MEAS_SUPPORTED,
   WR_UMM_ANR_PERD_INTER_MEAS_SUPPORTED,
   WR_UMM_ANR_PERD_INTERAT_MEAS_SUPPORTED,
   WR_UMM_GERAN_MEAS_SUPPORTED,
   WR_UMM_UTRA_MEAS_SUPPORTED,
   WR_UMM_1xRTT_MEAS_SUPPORTED,
   WR_UMM_HRPD_MEAS_SUPPORTED,
   WR_UMM_INTER_FREQ_MEAS_SUPPORTED,
   WR_UMM_UTRA_CS_SUPPORTED,
   WR_UMM_LONG_DRX_SUPPORTED,
   WR_UMM_SHORT_DRX_SUPPORTED,
   WR_UMM_UTRA_MEAS_RPRT_ECN0_SUPPORTED,
   WR_UMM_UTRA_TDD_PERD_MEAS_SUPPORTED,
   WR_UMM_UTRA_TDD_EVNT_MEAS_SUPPORTED,
   WR_UMM_GERAN_SRVCC_HO_SUPPORTED,
   WR_UMM_DCI_FORMAT_3A_SUPPORTED
} WrUmmFgiType;


typedef enum
{
   WR_UMM_QCI_1,
   WR_UMM_QCI_2,
   WR_UMM_QCI_3,
   WR_UMM_QCI_4,
   WR_UMM_QCI_5,
   WR_UMM_QCI_6,
   WR_UMM_QCI_7,
   WR_UMM_QCI_8,
   WR_UMM_QCI_9
} WrUmmQci;






typedef struct wrUlHarqInfo
{
   U8 ulMaxHarqTx;
   U8 deltaHarqOffset;
}WrUlHarqInfo;




typedef struct wrLcgInfo
{
   U32 effUlGbr;
   U32 effUlMbr;
}WrLcgInfo;






typedef struct wrSrCfg
{
   U16 srCfgIdx;
   U16 srPUCCHResIdx;
   CmRrmDsrTransMax enDsrTransMax;
} WrSrCfg;






typedef struct wrQosCfg
{
   Bool ambrPres;
   U32 dlAmbr;
   U32 ueBr;
} WrQosCfg;






typedef struct wrUeAckNackRepCfg
{
   Bool isAckNackEnabled;
   U16 pucchAckNackRep;
   U32 ackNackRepFactor;
}WrUeAckNackRepCfg;
typedef struct wrUeCapCfg
{
    U8 pwrClass;
    Bool intraSfFeqHop;
    Bool resAloocType1;
    Bool simCqiAckNack;
    Bool txAntSel;
} WrUeCapCfg;





typedef struct wrUeUlHqCfg
{
   U8 maxUlHqTx;
   U8 deltaHqOffst;
} WrUeUlHqCfg;





typedef struct wrUePerBsrTmrCfg
{
   U16 prdBsrTmr;
   U16 retxBsrTmr;
} WrUePerBsrTmrCfg;







typedef struct wrUeMeasGapCfg
{
   Bool isMesGapEnabled;
   U8 gapPrd;
   U8 gapOffst;
} WrUeMeasGapCfg;





typedef struct wrTaTmrCfg
{
   Bool pres;
   U16 taTmr;
}WrTaTmrCfg;






typedef struct wrPdschDedCfg
{
   U32 p_a;
}WrPdschDedCfg;
typedef struct wrPucchDedCfg
{
   U8 pres;
   U32 repeatFactor;
   U16 n1pucchAn;
   U32 tddAckNackFdbkMode;
}WrPucchDedCfg;






typedef struct wrUeUlPwrCfg
{
   Bool pres;
   CmLteRnti tpcRnti;
   U8 idx;
   U8 isFmt3a;
} WrUeUlPwrCfg;







typedef struct wrPuschDedCfg
{
   U8 ackIdx;
   U8 riIdx;
   U8 cqiIdx;
   WrUeUlPwrCfg puschPwrCfg;
}WrPuschDedCfg;
typedef struct wrUlPwrDedCtrl
{
   S8 p0UePusch;
   U32 deltaMcsEnabled;
   Bool accumlationEnabled;
   S8 p0UePucch;
   U8 pSrsOff;
   U32 filterCoeff;
   U8 trgCqi;
}WrUlPwrDedCtrl;
typedef struct wrAntennaInfo
{
      U32 txmode;
      U8 codebookpres;
      U8 codebktype;
      union CodeBkSubsetRestS
      {
       TknStrBSXL n2TxAntenna_tm3;
       TknStrBSXL n4TxAntenna_tm3;
       TknStrBSXL n2TxAntenna_tm4;
       TknStrBSXL n4TxAntenna_tm4;
       TknStrBSXL n2TxAntenna_tm5;
       TknStrBSXL n4TxAntenna_tm5;
       TknStrBSXL n2TxAntenna_tm6;
       TknStrBSXL n4TxAntenna_tm6;
      }CodeBkSubsetRest;
      U32 ueTxAntSel;

}WrAntennaInfo;







typedef struct wrSchReqCfg
{
      U16 srPucchRsrcIdx;
      U16 srCfgIdx;
      U32 dsrTransMax;
}WrSchReqCfg;
typedef struct wrSrsUlDedCfg
{
   U8 pres;
   U32 srsBw;
   U32 srsHoppingBw;
   U8 freqDomPos;
   Bool duration;
   U16 srsCfgIdx;
   U8 transComb;
   U32 cyclicshift;

}WrSrsUlDedCfg;
typedef struct wrX2ConCb
{
   U32 oldEnbUeX2apId;
   U32 newEnbUeX2apId;
   U32 peerId;

   U8 causeType;
   U8 causeVal;
} WrX2ConCb;





typedef struct wrCandCellDb
{
   CmLList lnk;
   WrX2ConCb *x2ConCb;
} WrCandCellDb;





typedef struct wrRntiNode
{
   CmLList lnk;


   U16 rnti;

} WrRntinode;
typedef struct wrRntiDb
{
   U16 rntiStart;
   U16 maxRrmRntis;
   CmLListCp freeRntiLst;
   CmLListCp inUseRntiLst;
} WrRntiDb;





typedef struct wrPrmblNode
{
   CmLList lnk;
   U8 prmblId;
} WrPrmblnode;
typedef struct wrPrmblDb
{
   U16 prmblStart;
   U16 maxPrmbls;
   CmLListCp freePrmblLst;
   CmLListCp inUsePrmblLst;
} WrPrmblDb;






typedef struct wrSnSts
{
  U8 rbId;
  NhuHoPdcpSduInfo nhuHoPdcpSduInfo;
} WrSnSts;





typedef struct wrSnStsInfo
{
  U8 numOfRb;
  WrSnSts wrSnSts[11];
} WrSnStsInfo;
typedef struct wrS1ConCb
{
   UConnId suConnId;
   UConnId spConnId;
   U32 mme_ue_s1ap_id;
   U32 enb_ue_s1ap_id;
   U8 s1apConnState;
   U32 nmbERAB;
   WrUeCb *ueCb;
   SztCause cause;
   TknU32 mmeUeS1apId2;
} WrS1ConCb;
typedef struct wrUeReestInfo
{
   NhuCrnti srcUeCrnti;
   U16 pci;
   Bool isTooLateHO;
   U32 srcIntAlgo;
   U32 srcCiphAlgo;

}WrUeReestInfo;

typedef struct wrUeCsfbInfo
{
   Bool dualRx;
   wrCsfbRatType ratType;
   U8 redirType;
   Bool nwDTMCap;
   Bool ueDTMCap;
   U8 csfbState;
}WrUeCsfbInfo;

typedef NhuCrnti WrCrnti;
WrCrnti wrCliUeCrnti;
extern S16 wrUmmGetRrcTransId(WrUeCb *ueCb, U8 dlDcchMsg, U8 transId, U8 *rrcTransId);
extern S16 wrUmmFreeRrcTransId(WrUeCb *ueCb, U8 transId);
extern S16 wrUmmGetTransId(WrUeCb *ueCb, U8 dlDcchMsg, U8 rrcTransId,
                                                                 U8 *transId);
extern S16 wrUmmRelRrcTransId(WrUeCb *ueCb, U8 dlDcchMsg, U8 rrcTransId);
extern Bool wrUmmUtraTddBandSupported(WrUeCb *ueCb, U8 band, LwrUtraTddMode tddMode);
extern Bool wrUmmUtilFeatureGrpIndRel9(U16 cellId, U16 crnti, WrUmmFgiType isSupported);
extern S16 wrUmmChkUeB2UtraTddCap(U16 cellId, U16 crnti);
extern Bool wrChkUtranTddSupp(WrUeCapInfo *ueCap);
extern Bool wrChkAllRatsForbidden(WrUeCb *ueCb);
extern Bool wrChkSingleRatForbidden(WrUeCb *ueCb, wrCsfbRatType *ratPriority);

extern S16 wrUmmPdcpDatCfm(CmLtePdcpId pdcpId);

extern S16 wrUmmInitUeCb(WrUeCb *ueCb);
extern S16 wrUmmConfigurePeriodicANR(WrUeCb *ueCb);
extern Void wrUmmUpdtUeServType(WrUeCb *ueCb);
extern WrUmmRedirectInfo* wrUmmFillDfltUtraTddRedirectInfo
(
   WrUeCb *ueCb,
   Bool laiCellsTobeSent
);

extern Bool wrChkCdma2000_1xRTTSupp
(
 WrUeCapInfo *ueCap
);
extern Bool wrChkCdma2000_HrpdSupp
(
 WrUeCapInfo *ueCap
);
typedef struct wrUeSecCfg
{
   TknBStr32 encrypCap;
   TknBStr32 integCap;
   U16 ciphAlgo;
   U16 intgAlgo;
   U8 cpCiphKey[16];
   U8 upCiphKey[16];
   U8 intgKey[16];
   U8 kENB[32];
} WrUeSecCfg;


typedef struct _wrAbsUeInfo
{
   CmLListCp cellListCp;
   Bool isAbsUe;
} WrAbsUeInfo;


typedef struct _wrLteAdvUeCb
{
   Bool isUeCellEdge;

   WrAbsUeInfo absInfo;

} WrLteAdvUeCb;



typedef enum
{
   WR_UMM_CSG_MEMBER = 1,
   WR_UMM_CSG_NOT_MEMBER,
   WR_UMM_CSG_MEMBERSHIP_NOT_KNOWN
} WrUmmCsgMmbrStatus;

typedef enum wrUmmCsfbSupport
{
   WR_UMM_CSFB_WITHOUT_MEAS,
   WR_UMM_CSFB_WITH_MEAS
}WrUmmCsfbSupport;

typedef enum wrUmmEcsfbSupport
{
   WR_UMM_ECSFB_NOT_SUPPORTED,
   WR_UMM_ECSFB_WITHOUT_MEAS,
   WR_UMM_ECSFB_WITH_MEAS
}WrUmmEcsfbSupport;
typedef struct wrCsgMbrEntry
{
   CmHashListEnt hashListEnt;
   U32 csgId;
   U8 mbrStatus;
} WrCsgMbrEntry;
typedef struct wrCsgNbrBlLst
{
   CmLList lnk;
   U32 csgId;
   U16 pci;
} WrCsgNbrBlLst;


typedef struct wrUmmUtraRankLst
{
   S16 ecno;
   U16 psc;
}WrUmmUtraRankLst;





typedef enum wrGBRBearerState
{
   NOT_IN_USE,
   RAB_IN_PROGRESS,
   RAB_ESTABLISHED,
   RAB_RELEASED
}WrGBRBearerState;





typedef enum wrUeServiceTyp
{
   WR_UMM_NORMAL_SERV = 0,
   WR_UMM_EMERGENCY_SERV
}WrUeServiceTyp;

typedef struct wrHrlMeasCfg
{
   WrUmmMeasEutraMeasObjNode *intraMeasObj;
   CmLListCp interMeasObjLst;
   CmLListCp utraFddMeasObjLst;
   CmLListCp utraTddMeasObjLst;
   CmLListCp cdmaMeasObjLst;
   CmLListCp geranMeasObjLst;
}WrHrlMeasCfg;


typedef struct wrSCellInfo
{
   U8 sCellIdx;

   WrCellId sCellId;
 U8 bResCfgBitMap;
   Bool isScellAdded;

   WrCqiRptCfg cqiRptCfg;




}WrSCellInfo;
struct wrUeCb
{
   CmLListCp transLst;
   CmLListCp tmrLst;
   CmLList mmeLnk;
   U8 ueCat;
   U8 ueCatV1020;
   U8 lastTransId;
   U8 transIdInUse[256];
   U8 avlTransId;
   U16 rrcTrans[10][4];
   U8 lchs[11];
   U8 drbs[32];
   U16 ueIdx;
   WrCrnti crnti;
   WrCrnti oldCrnti;
   WrCellId cellId;
   WrMmeId mmeId;
   Bool rrcConnState;

   Bool ueAttachedtoMme;
   U32 establishCause;
   WrPlmnId plmnId;
   WrUeRBInfo rbInfo;
   U16 pmiCfgIdx;
   WrUeSecCfg *secCfg;

   WrUeSecCfg *hzSecCfg;

   WrS1ConCb *s1ConCb;
   WrMeasUeCb *measCfg;
   SuId sapId;
   S1apPdu *pdu;
   Bool redirectUe;
   WrSTmsi sTMSI;
   WrGummei gummei;
   WrGummei srcGummei;

   U8 numOfTunnelCreReq;
   U8 lowLyrCfgSts;


   WrHoType hoType;

   WrHoState mobCtrlState;
   WrUeHstryInfo ueHstryInfo;
   CmLListCp candCellList;

   WrX2ConCb x2ConCb;
   NhuEncCfmSdus *trnspContainer;

   U16 dedicatedPrmbl;


   U32 hoTransId;
   U32 anrMeasTransId;
   U32 perdStrongCellMeasTransId;
   U32 eventAnrTransId;
   U32 rrcCsfbTransId;
   U32 src_mme_ue_s1ap_id;



   WrUmmTimer ueHoAttachTmr;

   WrUmmTimer s1TgtEnbRelocTmr;
   WrUmmTimer s1OvrallTmr;
   WrUmmTimer rrcReConfigTmr;
   WrUmmTimer rrcReEstabTmr;
   void *trcStructure;
   WrHoRstrctInfo *hoRstrctInfo;
   U8 nhChainCnt;
   TknU32 subscProfileId;
   U32 csfbRedirTransId;
   WrRegLai regLai;
   S8 cqiOffst;
   WrUeUlPwrCfg uePuschPwr;
   WrUeUlPwrCfg uePucchPwr;
   WrPdschDedCfg pdschDedCfg;
   WrPucchDedCfg pucchDedCfg;
   WrPuschDedCfg puschDedCfg;
   WrUlPwrDedCtrl ulPwrDedCtrl;
   WrSrsUlDedCfg srsUlDedCfg;
   WrCqiRptCfg cqiRptCfg;
   WrAntennaInfo antennaInfo;
   WrSchReqCfg schReqCfg;
   WrPdcpCfg pdcpCfg;
   WrUlHarqInfo harqinfo;
   WrSrCfg srCfg;
   WrQosCfg qosCfg;
   WrTaTmrCfg taTmrCfg;
   WrDrxCfg drxCfg;
   WrUeAckNackRepCfg ueAckNackRepCfg;
   WrUeMeasGapCfg ueMeasGapCfg;
   WrUeCapCfg ueCapCfg;
   WrUeUlHqCfg ueUlHqCfg;
   U32 dlcchTransId;
   WrUeCapInfo *ueCap;
   WrUmmTimer radResModTmr;
   WrUmmTimer intialCntRspTmr;
   TknStrOSXL *rrcContr;
   U8 locReportType;



   WrUmmTimer cqiRprtTmr;
   WrUmmTimer ueCtxRelTmr;

   WrLteAdvUeCb lteAdvCb;

   WrUePerBsrTmrCfg uePerBsrTmrCfg;
   U32 numTtiTicks;

   EpcTime ueAttachTime;


   EpcTime rrcConSetupReqTm;
   EpcTime rrcConSetupCmplTm;
   SztCause hovSztCause;
   CztCause hovCztCause;
   U8 hov;
   Bool measGapUsd ;
   U8 freqTyp;
   Bool s1LogicalConnEst;

   U8 hovDir;
   U8 hoSrcMeasIdLstCnt;
   U32 hoSrcMeasIdLst[32];
   U8 hoSrcRprtIdLstCnt;
   U32 hoSrcRprtIdLst[32];
   U8 hoSrcMeasObjIdLstCnt;
   U32 hoSrcMeasObjIdLst[32];


   WrUeReestInfo hoReestInfo;
   WrUeCsfbInfo csfbInfo;

   TknU32 eCsfbRandNum;
   U8 causeTauRequiredSet;
   U8 bResCfgBitMap;

   CmHashListCp csgMbrLst;
   CmLListCp csgNbrBlLst;

   WrGBRBearerState isGBRBearerExists;

   WrSpsCfg spsCfg;
   Bool isSrMaskEnabled;

   TknU32 mgmtBasedMDTAllowed;
   Bool mobLaiFlag;

   U16 lac;

   WrUeServiceTyp ueServTyp;
   WrPlmnId fnlzdPLMN;
   WrHrlMeasCfg hrlMeasCfg;
   Bool isFullCfgReqd;
   WrLcgInfo mappedLcgInfo[4];
   Bool srvccOperPossible;
   Bool isMeasCfgForPerdStrongCellRptCfg;
   WrUmmMeasAddInfo perdStrongCellMeasInfo;

    U8 idxSrsCfgIdx;
    Bool tobeReleased;
   Bool isUeCaCap;
};







typedef struct wrUmmMmeCb
{
   WrMmeId mmeId;
   U16 mmeCfgd;
   CmLListCp ueLst;
} WrUmmMmeCb;
typedef struct wrMobParamsFields
{
  Bool fldIncl;
  U8 fldSize;
  U32 fldData;
}WrCdma2000Field;



typedef struct mobParams
{
   WrCdma2000Field fields[65];
   TknPres pzHystEnabled;
   TknPres pzHystInfoIncl;
   TknPres pzHystListLen;
   TknPres pzHystActTimer;
   TknPres pzHystTimerMul;
   TknPres pzHystTimerExp;
   U8 fpcFchInitSetptRC3;
   U8 fpcFchInitSetptRC4;
   U8 fpcFchInitSetptRC5;
   U8 fpcFchInitSetptRC11;
   U8 fpcFchInitSetptRC12;
}WrMobParams;


typedef struct wrCdma2000Pdu
{
  U8 pduType;
  union
  {
    WrMobParams mobParams;
  }msgInfo;

}WrCdma2000Pdu;







typedef struct wrLaiLst
{
   Bool pres;
   U16 lac;
   WrPlmnId plmnId;
}WrLaiLst;
typedef struct wrUmmCell
{
   WrCellId cellId;
   WrCellState cellState;
   Bool isFree;
   LwrCsfbSupport measFlagForCsfbUtra;
   LwrCsfbSupport measFlagForCsfbCdma;
   LwrEcsfbSupport measFlagForEcsfb;
   U16 noUeCntxToRel;
   WrPrmblDb prmblDb;
   WrRntiDb rntiDb;
   U16 maxUesPerCell;
   WrUeCb *ueCbs[(32 + 20)];
   CmLListCp ueCbSCellLst;
   WrUmmMeasCellCb *measCellCb;
   LwrCellMeasCfgGrp *measCellCfg;
   WrRabCfgParams wrRabCfgParams[9 + 3];
   WrCqiRptCfg cqiRptCfg;
   LwrMacMainConifg macMainCfg;
   LwrDrbPdcpInfo pdcpInfo;
   WrSchReqCfg schReqCfg;
   WrPuschDedCfg puschDedicated;
   LwrPdschCfgDedicated pdschCfgDedicated;
   LwrUeUlPwrCfg uePucchPwr;
   LwrQosCfg qosCfg;
   TknStrOSXL mobParam1xOct;
   U8 lastDelUeIdx;



   WrRntiDb spsRntiDb;


   U32 csgId;
   U8 csgAccessMode;
   LwrCsfbGeranCfg csfbToGeranCfg;
   WrLaiLst lstLai[32];
   U8 rabArpForEmerServ;
   CmTimer ueCtxRelGuardTmr;
} WrUmmCellCb;
typedef struct wrUeDb
{
   WrUmmCellCb cells[12];
   WrUmmMmeCb mmes[17];
} WrUeDb;
extern WrUeDb wrUeDb;
extern Void wrUmmInit(Void);

extern U8 wrUmmGetLcgIdForQci
(
 U32 cellId,
 U8 qci
);
extern U8 wrUmmPrioIdforQci[9];


extern S16 wrUmmSndCtxtRelReq(U16 crnti, U16 cellId, U8 event);


extern S16 wrUmmGetLch(WrUeCb *ueCb, U8 *lch);
extern S16 wrUmmRelLch(WrUeCb *ueCb, U8 lch);
extern S16 wrUmmGetDrb(WrUeCb *ueCb, U8 *drb);

extern S16 wrUmmSetDrb(WrUeCb *ueCb, U8 drb);
extern S16 wrUmmSetLch(WrUeCb *ueCb, U8 lch);
extern S16 wrUmmRelDrb(WrUeCb *ueCb, U8 drb);
extern S16 wrUmmGetDrbIdFromErabId(WrUeCb *ueCb, U8 erabId, U8 *drbId);

extern S16 wrUmmRelUeCb(WrUeCb *ueCb);
extern Void wrUmmEnbStats (Void);

extern Void wrUmmInitRrcTrans(WrUeCb *ueCb);
extern S16 wrUmmPrcLclCtxtRel(WrUeCb *ueCb, U32 relCause);
extern S16 wrUmmAddUeToMme(WrUeCb *ueCb, WrMmeId mmeId);
extern S16 wrUmmGetUe(WrUeCb **ueCb,WrCellId cellId,U16 crnti);
extern S16 wrUmmGetReestUe(WrUeCb **ueCb,WrCellId cellId,U16 crnti);
extern S16 wrUmmGetUeFrmUeIdx(WrUeCb **ueCb, WrCellId cellId, U8 idx);



extern S16 wrUmmGetUeCbforRabRel(WrUeCb **ueCb,WrCellId cellId);

extern S16 wrUmmStoreUeInHoLst (WrCellId cellId, U16 sourceCrnti,U8 ueIdx, U16 sourcePhyCellId);
extern S16 wrUmmGetUeFrmHoLst (WrUeCb **ueCb, WrCellId cellId,U16 crnti, U16 phyCellId);
extern S16 wrHoHdlMeasRprt (WrUeCb *ueCb, NhuMeasResults *measRprt);
extern S16 wrEmmUpdateStat(U8 moduleType, WrCellId wrCellId, Action updType, S8 incStep, U32 subType);
extern S16 wrEmmUpdateKpiCounter(SztCause *s1cause);
extern S16 wrUmmMeasGapReqdInterRat
(
 WrUeCb *ueCb,
 U8 servingBand,
 U8 targetBand,
 U8 ratType,
 LwrUtraTddMode tddMode,
 Bool *result
 );
extern S16 wrUmmMeasGapReqdInterfreq
(
 WrUeCb *ueCb,
 U8 servingBand,
 U8 targetBand,
 Bool *result
 );
extern S16 wrUmmAnrChkUeCap
(
 WrUeCb *ueCb,
 WrUmmMeasCellTyp cellFreqType,
 WrUmmMeasRptCfgType measAnrType
);

extern S16 wrUmmStartAnr
(
   WrUeCb *ueCb,
   Bool recfgReq
);

extern S16 wrUmmStopAnr
(
   WrUeCb *ueCb
);

extern Bool wrUmmRedirectionUTRA
(
 WrCellId cellId,
 U16 crnti
);
extern S16 wrUmmFndEUTRABand
(
 U32 arfcn,
 U8 *result
);
extern S16 wrUmmFndUTRABandFDD
(
 U32 arfcn,
 U8 *result
);
extern S16 wrUmmFndUTRABandTDD_128
(
 U32 arfcn,
 U8 *result
);
extern S16 wrUmmFndUTRABandTDD_384
(
 U32 arfcn,
 U8 *result
);
extern S16 wrUmmFndUTRABandTDD_768
(
 U32 arfcn,
 U8 *result
);
extern Bool wrUmmUTRAFDDBandSupported
(
 WrUeCb *ueCb,
 U8 band
);
extern Bool wrUmmUTRATDD128BandSupported
(
 WrUeCb *ueCb,
 U8 band
);
extern Bool wrUmmUTRATDD384BandSupported
(
 WrUeCb *ueCb,
 U8 band
);
extern Bool wrUmmUTRATDD768BandSupported
(
 WrUeCb *ueCb,
 U8 band
);
extern Bool wrUmmChk1xRttCdmaBandSupported
(
  WrUeCb *ueCb,
  U8 band
);

extern Bool wrUmmChkCdmaHrpdBandSupported
(
  WrUeCb *ueCb,
  U8 band
);

extern Bool wrUmmEUTRABandSupported
(
  WrUeCb *ueCb,
  U8 band,
  U8 duplexTyp
);

extern Bool wrUmmUtilFeatureGrpInd
(
 U16 cellId,
 U16 crnti,
 WrUmmFgiType isSupported
);
extern Bool wrUmmUtilFeatureGrpIndV1020
(
 WrUeCb *ueCb,
 WrUmmFgiType isSupported
);

extern Void wrUmmCommitUeRadioResDedInfo
(
   WrUeCb *ueCb,
   RmuUeRadioResCfg *stUeRadioResCfg
);
extern Void wrUmmCommitUePhyCfgDedResInfo
(
   WrUeCb *ueCb,
   RmuUeDedPhyCfg *stPhyCfgDed
);
extern Void wrUmmCommitUePhyCfgDedHoResInfo
(
   WrUeCb *ueCb,
   RmuUeHoRsp *ueHoResp
);
extern S16 wrUmmCfgCellMeasTmrs
(
  U16 cellId,
  U32 csfbTransTmrVal
);

extern WrUmmRedirectInfo* wrUmmFillUtraFddRedirectInfo
(
   WrUeCb *ueCb,
 Bool laiCellsTobeSent
);

extern WrUmmRedirectInfo* wrUmmFillEutraRedirectInfo
(
   WrUeCb *ueCb
);
extern S16 wrUmmChkUeNeedMeasGapForInterFreq
(
   WrUeCb *ueCb,
   U32 targetArfcn,
   Bool *output
);



extern S16 wrUmmSecExtractSecKeys1 (WrUeCb *ueCb, U32 transId,
      U8 keyDerType);
extern S16 wrUmmSecExtractSecKeys (WrUeSecCfg *secCfg, TknStrBSXL *secKey,
      Bool *asKeyGenerated, U32 transId);
extern Void wrUmmCqiRptCfg
(
   WrUmmCellCb *cellCb,
  WrCqiRptCfg *cqiRpt
);
extern Void wrUmmMacMainCfg
(
  WrUmmCellCb *cellCb,
  LwrMacMainConifg *macMainCfg
);
extern Void wrUmmPdcpCfg
(
 WrUmmCellCb *cellCb,
 LwrDrbPdcpInfo *pdcpInfo
);
extern Void wrUmmPuschDedCfg
(
 WrUmmCellCb *cellCb,
 LwrPuschDedCfg *puschDedicated
);
extern Void wrUmmSchReqCfg
(
 WrUmmCellCb *cellCb,
 LwrSchReqCfg *schReqCfg
);
extern Void wrUmmPucchPwrCfg
(
 WrUmmCellCb *cellCb,
 LwrUeUlPwrCfg *pucchPwrCfg
);
extern Void wrUmmPdschPwrCfg
(
 WrUmmCellCb *cellCb,
 LwrPdschCfgDedicated *pdschCfgDedicated
);
extern Void wrUmmQosCfg
(
 WrUmmCellCb *cellCb,
 LwrQosCfg *qosCfg
);
extern Void wrUmmCsfbGeranCfg
(
 LwrCsfbGeranCfg *csfbToGeranCfg
);
extern S16 wrUmmCfgCellMeas
(
  U16 cellId,
 LwrCellMeasCfgGrp *measCfgGrp
);
extern S16 wrUmmCfgRabParams
(
  U16 cellId,
 LwrRabPolicyCfgGrp *rabPolicyCfgGrp
);
extern S16 wrUmmReCfgCellMeas
(
  U16 cellId,
 LwrCellMeasCfgGrp *measReCfgGrp
);
extern S16 wrUmmReCfgRabParams
(
  U16 cellId,
 LwrRabPolicyCfgGrp *rabPolicyReCfgGrp
);
extern S16 wrUmmPdcpDatCfm
(
   CmLtePdcpId pdcpId
);
extern S16 wrUmmPrcX2ErrInd(CztLclErrInd *cztLclErrInd);
extern Void wrUmmDeAllocUeCap(WrUeCapInfo *ueCap);
extern S16 wrStartUeTmr(WrUeCb *cb, S16 tmrEvnt, U32 delay);
extern Void wrStopUeTmr(WrUeCb *cb, S16 event);
extern S16 wrUmmPrcErabRelIndctrl(void);
extern S16 wrUmmGetOldUe(WrUeCb **ueCb,WrCellId cellId,U16 oldCrnti);
extern S16 WrIfmX2apRelReq(CztRlsReq *relReq);
extern S16 wrUmmMeasUeCbInit(WrUeCb *ueCb);
extern S16 wrUmmPrcX2BmpInd(CztEvnt *cztInd);
extern S16 wrUmmPrcX2BmpCfm(CztEvnt *cztCfm);
extern S16 wrUmmPrcPdcpSduStaCfm(NhuPdcpSduStaCfm *pdcpSduStaCfm);
extern S16 wrUmmS1apFillCtxtRelReq(WrUeCb *ueCb, S1apPdu **pdu, WrUmmMsgCause *cause);
extern S16 wrUmmX2TmrPrcStaInd(CztStaInd *cztStaInd);
extern S16 wrEmmInitUeCb(WrUeCb *ueCb);
extern Void wrUmmGetRand32(WrUeCb *ueCb);

extern S16 wrUmmEncCdmaPdu( WrUmmCellCb *cellCb, LwrCdma2k1xMobParams *mobParams);

extern S16 wrUmmSchdStaInd (RgrStaIndInfo *staInd);


extern S16 wrUmmGetExistingTransId(U8 transTyp, CmLListCp *transLst, U32 *transId);


extern S16 wrUmmCsgAnrUpdtEutranCsgInfo (WrUeCb *ueCb,
      NhuMeasResults *measRprt, U16 carrFreq);
extern U8 wrUmmCsgIsUeMember (WrUeCb *ueCb, U32 csgId);
extern S16 wrUmmCsgValidateNbrCsgForHo (WrUeCb *ueCb, WrHoNghInfo *nbrInfo,
      U8 *hoStatus, U8 *hoType, U8 *nbrPriority);
extern S16 wrUmmCsgAddCsgIdIntoMbrLst (WrUeCb *ueCb, U32 csgId, U8 mbrShpSts);
extern S16 wrUmmCsgModMbrStsForCsgId (WrUeCb *ueCb, U32 csgId, U8 mbrShpSts);
extern S16 wrUmmCsgDelCsgIdFrmMbrLst (WrUeCb *ueCb, U32 csgId);
extern S16 wrUmmCsgAddCsgIdIntoBlckLst (WrUeCb *ueCb, U32 csgId, U16 pci);
extern S16 wrUmmCsgValidateInbndS1Ho (WrUeCb *ueCb, TknU32 csgId, U8 ueMbrShpSts,
      U8 isEmrgncyCall, U8 *causeType, U8 *causeVal);
extern S16 wrUmmCsgValidateInbndX2Ho (WrUeCb *ueCb, U32 csgId, U8 ueMbrShpSts,
      U8 isEmrgncyCall, U8 *causeType, U8 *causeVal);
extern S16 wrUmmCsgPrntUeMbrShpLst (WrUeCb *ueCb);
extern Bool wrUmmCsgIsNbrBlsted (WrUeCb *ueCb, U32 csgId, U16 pci);
extern S16 wrUmmHoIsEmgncyCall (WrUeSecCfg *secCfg);



extern S16 wrUmmCpyHoRestrnLst(WrUeCb *ueCb, SztHovrRestrnLst *hoRestrnLst);
extern S16 wrUmmCreateIntCsfb(WrUmmCellCb *cellCb, WrUeCb *ueCb, U8 intMsgType);
extern S16 wrUmmChkUeB2UtraCap
(
 U16 cellId,
 U16 crnti
);

extern S16 wrGetCsdomainPLMNNeighFreqs
(
WrUeCb *ueCb,
WrPlmnId csdomainPlmn,
WrUmmRedirectInfo **redirInfo
);
extern Bool wrChkGeranSupp
(
 WrUeCapInfo *ueCap
);
extern Bool wrValidateRegLai
(
 WrHoRstrctInfo *hoRstrctInfo,
 WrRegLai lai
 );
extern Bool wrChkForbiddenRAT
(
 WrUeCb *ueCb
);
extern Bool wrChkGeranBandSup
(
 WrUeCapInfo *ueCap,
 U8 bandInd
);
extern Bool wrChkCsdomainPlmnNeigh
(
  WrPlmnId csdomainPlmn,
   WrCellId cellId
);
extern Void wrFillRatLstRatType
(
 WrUeCapInfo *ueCap,
 WrUmmRatLst *ratLst,
 Bool *handInUeCdma
);
extern S16 wrUmmCsfbSndRedirAftReest
(
 WrUeCb *ueCb
);
extern Bool wrFindNghCellLaiPres
(
   WrUeCb *ueCb,
   WrPlmnId *plmnId,
   U16 lac,
   U16 ratSelAlgo
);
extern Bool wrUtlValNghCellforHrl
(
 WrUeCb *ueCb,
 WrPlmnId *plmnId,
 U16 lac
);

extern Void wrFreeUeHrlMeasCfg
(
 WrUeCb *ueCb
);

extern S16 wrUmmPopltHrlMeasCfgDlNas
(
WrUeCb *ueCb
);

extern S16 wrUmmMeasReCfgAftDlNas
(
WrUeCb *ueCb
);
extern Bool wrUtlGetDedTaTmrVal
(
U8 taTimerDedicated,
U16 *taTmr
);
extern Void wrUtlUpdateUeCatV1020
(
 WrUeCb *ueCb,
 WrUeCapInfo *ueCap
);

extern Bool wrUmmUtilUtraTddMeasChk
(
 WrUeCb *ueCb,
 WrUmmFgiType fgiTyp
 );
extern Void wrUmmFilleRedirUtraSup
(
WrUeCapInfo *ueCap,
WrUmmRedirectInfo *redirInfo
 );
extern S16 wrUmmPopUtraRedirAndRel
(
 WrUeCb *ueCb,
 WrUmmRedirectInfo *redirInfo
 );

extern S16 wrUmmChkOneUtraNeigh
(
 WrUeCb *ueCb,
 U8 ratPriority
);
extern S16 wrEmmChkCsfbToUtraMeasSup
(
WrCellId cellId,
U8 *csfbUtraMeasSup
);

extern S16 wrUmmProcRrmUeRabRelInd
(
 RmuUeERabRelInd *relIndinfo
);

extern S16 wrUmmProcRmUeRecfgInd
(
RmuUeRecfgInd *ueRecfgIndPtr
);

extern Void wrUmmPerdStrongCellMeasCfg
(
WrUeCb *ueCb,
U8 measObjId,
LwrCellMeasCfgGrp *measCellCfg,
WrUmmMeasAddInfo *addMeasInfo
);

extern Void wrUmmUeCtxRelGrdTmrExp
(
WrUmmCellCb *cellCb
);
extern Void wrUmmUeMultiLSapId
(
 NhuUeLLyrSapIdInfo *ueLSapInfo,
 U8 cellId
);


extern S16 wrUmmCommitUeCqiCfgInfo
(
 WrCqiRptCfg *ueCqiRptCfgPtr,
 RmuUeCqiReportCfg *rrmCqiRepCfgPtr,
 WrCellId cellId
);

extern S16 wrEmmGetSCellIdLst
(
 WrCellId cellId,
 U8 *numSCells,
 WrCellId *sCellIdLst
);
typedef struct wrUmmIntCrIntraLteHoTranInfo
{
   WrEcgi ecgi;
   U8 enbType;
   U16 tac;
   U16 pci;
   U32 earfcnDl;
   Bool isX2InterFace;
} WrUmmIntCrIntraLteHoTranInfo;
typedef struct wrUmmIntCrIRatUtraHoTranInfo
{
  U32 arfcnDl;
  U16 psc;
  U16 rncId;
  U16 cId;
  U16 lac;
  WrPlmnId plmnId;
  U8 rac;
  TknU32 srvccHoInd;
} WrUmmIntCrIRatUtraHoTranInfo;

typedef struct wrUmmIntCrIRatGeranHoTranInfo
{
  Bool psSrvcNotAvlbl;
  U8 bsic;
  U16 cId;
  U16 lac;
  U32 rssi;
  WrPlmnId plmnId;
  U8 rac;
  U8 bandIndicator;
  TknU32 srvccHoInd;
} WrUmmIntCrIRatGeranHoTranInfo;
typedef struct wrUmmIntCrHoTran
{
    U16 crnti;
    U32 cellId;
    U32 peerId;
    U8 hoType;
    WrUmmMsgCause hoCause;
    Bool isX2InterFace;

    U32 csgId;
    U8 csgCellAccessMode;

    union
    {
       WrUmmIntCrIntraLteHoTranInfo intraLte;
       WrUmmIntCrIRatUtraHoTranInfo interRatUtra;
       WrUmmIntCrIRatGeranHoTranInfo interRatGeran;
    }t;
}WrUmmIntCrHoTran;

typedef struct wrUmmDamCfgCfm
{
   U32 lclTeId;
   U32 transId;
   U8 status;
} WrUmmDamCfgCfm;







typedef struct wrUmmIntCsfbTransMsg
{
   TknU32 csFallBackInd;
   U8 ratPriority;
   WrRegLai regLai;
} WrUmmIntCsfbTransMsg;

typedef struct wrUmmIntAnrMeasMsg
{
   U8 choice;
   WrMeasObjFreq arfcn;
   WrUmmMeasCellTyp cellTyp;
   WrMeasRptCfgType rptCfgType;
   U16 newPci;
   Bool rrcReCfgRqd;
} WrUmmIntAnrMeasMsg;


typedef enum _wrUmmLteAdvProc
{
   WR_UMM_LTE_ADV_RE_PROC = 1,
   WR_UMM_LTE_ADV_ABS_PROC,
   WR_UMM_LTE_ADV_SFR_PROC,
   WR_UMM_LTE_ADV_DSFR_PROC
} WrUmmLteAdvProc;

typedef enum wrUmmLteAdvPeerType
{
   WR_UMM_LTE_ADV_LCL_UE = 1,
   WR_UMM_LTE_ADV_PEER_UE,
} WrUmmLteAdvPeerType;

typedef struct wrUmmIntLteAdvMsg
{
   Bool isEnabled;
   WrUmmLteAdvProc procType;
   WrUmmLteAdvPeerType peerType;
} WrUmmIntLteAdvMsg;


typedef struct wrUmmRabRls
{
  U8 numrabs;
  U8 erabId[8];
  U8 cause[8];
  U8 causeTyp;
} WrUmmRabRls;

typedef struct wrUmmPhyCfgCfm
{
   S16 status;
   U32 transId;
} WrUmmPhyCfgCfm;


typedef struct wrUmmKdfCfm
{
   S16 status;
   U32 transId;
   CtfKdfCfmInfo *ctfKdfCfm;
} WrUmmKdfCfm;


typedef struct wrUmmSchdCfgCfm
{
   S16 status;
   U32 transId;
} WrUmmSchdCfgCfm;

typedef struct wrUmmDamUeDelCfm
{
   S16 status;
   U32 transId;
   U16 cellId;
   U16 crnti;
} WrUmmDamUeDelCfm;
typedef struct wrUmmRadResMod
{
   U16 bitMsk;
}WrUmmRadResMod;

typedef struct wrUmmIntUeStaInd
{
   CmLteCellId cellId;
   CmLteRnti crnti;
   U8 status;
}WrUmmIntUeStaInd;
typedef struct wrUmmInternalMsg
{
   U8 intMsgType;
   union
   {
      WrUmmIntMeasTrans *measTrans;
      WrMeasCellReCfgInfo *measNewTrans;
      WrUmmIntCrHoTran *hoTrans;
      WrUmmIntCsfbTransMsg *csfbIndMsg;
      WrUmmRadResMod radResMod;
      WrUmmIntAnrMeasMsg *anrMeasMsg;

      WrUmmIntLteAdvMsg *lteAdvMsg;

      WrUmmRedirectInfo *redirInfo;





   }u;
}WrUmmInternalMsg;

typedef struct wrUmmTmrExpiry
{
   U16 timerEvnt;
   U32 transId;
} WrUmmTmrExpiry;

typedef struct wrUmmIncMsg
{
   U8 msgTyp;
   U8 refCnt;
   union
   {
      SztConCfm *cfmPdu;
      SztDatEvntInd *s1Pdu;
      CztEvnt *x2Pdu;
      NhuDatIndSdus *uuIndPdu;
      NhuDatCfmSdus *uuCfmPdu;
      NhuCfgCfmSdus *rrcCfm;
      WrUmmSchdCfgCfm schdCfm;
      NhuPdcpSduStaCfm *pdcpSduCfm;
      WrUmmPhyCfgCfm phyCfm;
      NhuEncCfmSdus *encCfm;
      NhuDecodeSduCfm *decCfm;
      WrUmmRabRls *lcrabrls;
      WrUmmDamCfgCfm damCfm;
      WrUmmDamUeDelCfm damUeDelCfm;
      U32 transId;
      U32 rrcConRelCause;
      NhuDatCfmSdus *rrcDatCfm;
      SztRelInd *relInd;
      NhuErrIndSdus *rrcErrInd;

      SztLclErrInd *sztErrInd;

      WrUmmInternalMsg *internalMsg;
      WrUmmTmrExpiry tmrExpiry;
      SztEncDecEvnt *sztEncCfm;
      SztEncDecEvnt *sztDecCfm;
      CztLclErrInd *cztLclErrInd;
      RmuUeAdmitRsp *rrmUeAdmitResp;
      RmuUeHoRsp *rrmUeHoResp;
      RmuUeRelRsp *rrmUeRelResp;
      RmuUeRecfgRsp *rrmUeRecfgResp;
      RmuUeERabRelInd *rmuUeErabRelInd;
      RmuUeRecfgInd *rrmUeRecfgInd;
      CztStaInd *cztStaInd;
      NhuPdcpDatResumeCfm *pdcpDatResumeCfm;

      WrUmmKdfCfm kdfCfm;

   } u;
} WrUmmIncMsg;

extern S16 wrUmmPrcIncMsg(WrUmmCellCb *cellCb,WrUeCb *ueCb,WrUmmIncMsg *msg);
extern Void wrUmmRlsIncMsg(WrUmmIncMsg **msg);
extern S16 wrUmmBldInternalMsg( WrUmmInternalMsg **intMsg, U8 intMsgType,
      Void *msg);


typedef struct wrUmmRabSetupArpInfo
{
   U32 priorityLvl;
   U32 preemptCapability;
   U32 preemptVulnerability;
} WrUmmRabSetupArpInfo;
typedef struct wrUmmRabSetupRabInfo
{
   U8 qci;
   U8 erabId;
   U8 drbId;
   U8 rabAllowed;
   U8 rlcMode;
   U8 lchId;
   U8 schdCfgState;
   U8 tnlCfgState;
   U32 ulGbr;
   U32 dlGbr;
   U32 ulMbr;
   U32 dlMbr;
   TknStrOSXL *nasPdu;
   CmTptAddr sgwAddr;
   U32 remTeid;
   U32 lclTeid;
   WrUmmRabSetupArpInfo arpInfo;
   WrUmmMsgCause cause;

   EpcTime earbSetupReqTm;
   EpcTime erabEstabTm;


   Bool isDlSpsEnabled;
   Bool isUlSpsEnabled;

} WrUmmRabSetupRabInfo;
typedef struct wrUmmRabSetupTrans
{
   U32 dlAmbr;
   U32 ulAmbr;
   U8 schdUeCfgState;
   U8 transId;
   U8 state;
   U8 curCfgRes;
   U32 numRabs;
   U32 numRabsAllowed;
   WrUmmRabSetupRabInfo *rabs;
   Void *msg;
   U8 schdLchCfgCmpl;
   Bool tnlSetupCmpl;
   Bool isDrbCfgDone;
   Bool rrcUndostate;
   Bool startAnr;
   U8 schdUndoCfgCnt;
   WrUmmIncMsg *rrmUeRecfgRspMsg;
   U8 isUeAggrMaxBitRateRcvd;
   U32 cfgStateMsk;
   U8 lcgCfgStatus[4];
   U8 expectedLcgCfgStatus;
} WrUmmRabSetupTrans;
typedef struct wrUmmRabArpInfo
{
   U32 priorityLvl;
   U32 preemptCapability;
   U32 preemptVulnerability;
} WrUmmRabArpInfo;
typedef struct wrUmmRabModifyRabInfo
{
   U8 qci;
   U8 erabId;
   U8 drbId;
   Bool rabAllowed;
   U8 rlcMode;
   U8 lchId;
   U8 schdCfgState;
   U8 schdRvrtCfgCfmCnt;
   U32 ulGbr;
   U32 dlGbr;
   U32 ulMbr;
   U32 dlMbr;
   TknStrOSXL *nasPdu;
   WrUmmRabArpInfo arpInfo;
   WrUmmMsgCause cause;

   Bool isDlSpsEnabled;
   Bool isUlSpsEnabled;

   Bool isQciChanged;
} WrUmmRabModifyRabInfo;
typedef struct wrUmmRabModifyTransCb
{
   U8 transId;
   U32 dlAmbr;
   U32 ulAmbr;
   U32 state;
   U32 numRabs;
   WrUmmRabModifyRabInfo *rabs;
   Void *msg;
   Bool isDrbCfgDone;
   Bool schdUndoCfgState;
   Bool rrmConfigRvrt;
   U8 numRabsFound;
   WrUmmIncMsg *rrmUeRecfgRspMsg;

   Bool isDlSpsEnabled;
   Bool isUlSpsEnabled;

   U8 isUeAggrMaxBitRateRcvd;
   U32 cfgStateMsk;
   U8 lcgCfgStatus[4];
   U8 expectedLcgCfgStatus;
   Bool allRabsFailed;
} WrUmmRabModifyTransCb;
typedef struct wrUmmRabRelRabInfo
{
   U8 erabId;
   Bool rabfailed;
   U8 drbId;
   U8 lchId;
   U8 schdCfgState;
   U8 cause;
   WrUmmMsgCause relCause;
   U8 qci;

   Bool isDlSpsEnabled;
   Bool isUlSpsEnabled;

} WrUmmRabRelRabInfo;
typedef struct wrUmmRabRelTransCb
{
   U8 transId;
   U32 dlAmbr;
   U32 ulAmbr;
   U32 state;
   U32 numRabs;
   WrUmmRabRelRabInfo *rabs;
   Bool isDrbCfgDone;
   Void *msg;
   TknStrOSXL *nasPdu;
   U8 numRabsFound;
   Bool schdUeCfgCfmRcvd;
   WrUmmIncMsg *rrmUeRecfgRspMsg;

   WrUmmMeasTransInfo measTransCb;
   U8 isUeAggrMaxBitRateRcvd;
   U32 cfgStateMsk;
   U8 lcgCfgStatus[4];
} WrUmmRabRelTransCb;
typedef struct wrUmmLcRabRelInfo
{
   U8 erabId;
   U8 drbId;
   U8 lchId;
   U8 schdCfgState;
   U8 qci;
} WrUmmLcRabRelInfo;
typedef struct wrUmmLcRabRelTransCb
{
   U8 transId;
   U32 state;
   U32 numRabs;
   void *msg;
   WrUmmLcRabRelInfo rabs[8];
   U8 cause[8];
   U8 causeTyp;
   Bool isDrbCfgDone;
   WrUmmIncMsg *rrmUeRecfgRspMsg;
} WrUmmLcRabRelTransCb;
typedef struct wrErabQos
{
   Bool isGbrQosPres;
   U32 priority;
   U32 preempCap;
   U32 preempVul;
   U32 dlMbr;
   U32 ulMbr;
   U32 dlGbr;
   U32 ulGbr;
} WrErabQos;
typedef struct wrErabInfo
{
   U8 erabId;
   Bool erabInit;
   Bool rabAllowed;
   U8 reason;
   U8 drbId;
   U8 lchId;
   U32 qci;
   U8 schdCfgState;
   U32 remTeId;
   U32 lclTeId;
   CmTptAddr sgwAddr;
   TknStrOSXL *nasPdu;
   WrErabQos qos;
   Bool tnlSetup;
   WrUmmMsgCause cause;

   EpcTime earbSetupReqTm;
   EpcTime erabEstabTm;

   Bool isDlSpsEnabled;
   Bool isUlSpsEnabled;


} WrErabInfo;
typedef struct wrInitCntxtSetupTransCb
{
   U8 numErabSucc;
   U8 numErabFail;
   U8 numErabs;
   U8 numErabsAllowed;
   U32 dlAmbr;
   U32 ulAmbr;
   Bool updLai;
   WrRegLai regLai;
   TknU32 csFallBackInd;
   WrErabInfo *erabList;
   WrUeSecCfg *secCfg;


   WrUeSecCfg *hzSecCfg;
   Bool asKeyGenerated;
   Bool asSecModeInit;

   WrUeCapInfo *ueCap;
   CmTptAddr *lclAddr;
   WrUmmIncMsg *msg;
   U8 state;
   Bool schdUeCfgCfmRcvd;
   Bool schdLchCfgCmpl;
   Bool schdSrb2LchCfgCmpl;
   Bool schdLcgCfgCmpl;

   U8 expctLcgCfgCfm;
   U8 numlcgCfgCfm;
   SztUERadioCapblty *ueRadCapIe;
   WrUmmMeasTransInfo measTransCb;
   WrUmmIncMsg *rrmUeRecfgRspMsg;
   WrGummei gummei;
   TknU32 mmeUeS1apId2;
   U8 failCause;
   U8 failCauseType;

   U8 ueMbrShip;
} WrInitCntxtSetupTransCb;

typedef struct wrUmmTxModeChngTransCb
{
   WrUmmIncMsg *msg;
}WrUmmTxModeChngTransCb;
typedef struct wrUmmCtxtRelTrans
{
   U8 schdCfmRcvd;
   U8 l1CfmRcvd;
   U8 damCfmRcvd;
   U8 rrmRespRcvd;
   U32 rrcConRelCause;
} WrUmmCtxtRelTrans;
typedef struct wrRrcReEstabTransCb {
   U8 state;
   U8 rabCfmReceived;
   U8 rabSchCfg[8];
   U16 newRnti;
   TknStrOSXL *nasPdu;
   Bool UeschCfg;
   Bool eRabSchCfg;
   Bool reConfigState;
   U8 schdUeCfgState;
   U8 schdUeRstState;
   U8 curCfgRes;
   U8 reestabCause;
   U8 rejectCause;
   U8 phyCfgState;
   U8 ueRntiUpdtFlg;

   WrUeSecCfg secCfg;

   WrUmmMeasGapStatus measGapStatus;
   U8 isUeCtxtRelDefrd;




}WrRrcReEstabTransCb;

extern S16 wrUmmRrcReestabSchUeReset(U32 transId,U16 cellId,
                      U16 oldRnti);

typedef struct wrUmmCtxtModTrans
{
   Bool secCfg;
   Bool ambrCfg;
   Bool updSecCap;
   Bool updLai;
   Bool schdUeCfgCfmRcvd;
   WrRegLai regLai;
   U32 dlAmbr;
   U32 ulAmbr;
   TknU32 subscProfileId;
   TknU32 csFallBackInd;
   TknU32 csgMembrSta;
   U32 status;
   WrUmmMsgCause cause;
} WrUmmCtxtModTrans;
typedef struct wrUmmDlNasTransCb
{
   WrUmmIncMsg *msg;
   TknStrOSXL *nasPdu;
} WrUmmDlNasTransCb;

enum CmPAsnTknTypes
{
   CM_PASN_TET_BOOL,
   CM_PASN_TET_SINT8,
   CM_PASN_TET_SINT16,
   CM_PASN_TET_SINT32,
   CM_PASN_TET_UINT8,
   CM_PASN_TET_UINT16,
   CM_PASN_TET_UINT32,
   CM_PASN_TET_ENUM,
   CM_PASN_TET_BITSTR,
   CM_PASN_TET_BITSTRXL,
   CM_PASN_TET_OCTSTR,
   CM_PASN_TET_OCTSTRXL,
   CM_PASN_TET_NULL,
   CM_PASN_TET_SEQ,
   CM_PASN_TET_SET,
   CM_PASN_TET_SEQOF,
   CM_PASN_TET_SETOF,
   CM_PASN_TET_CHOICE,
   CM_PASN_TET_OID,
   CM_PASN_TET_IA5STR,
   CM_PASN_TET_IA5STRXL,
   CM_PASN_TET_PRNSTR,
   CM_PASN_TET_PRNSTRXL,
   CM_PASN_TET_NUMSTR,
   CM_PASN_TET_NUMSTRXL,
   CM_PASN_TET_VISSTR,
   CM_PASN_TET_VISSTRXL,
   CM_PASN_TET_GENSTR,
   CM_PASN_TET_GENSTRXL,
   CM_PASN_TET_BMPSTR,
   CM_PASN_TET_BMPSTRXL,
   CM_PASN_TET_UNISTR,
   CM_PASN_TET_UNISTRXL,
   CM_PASN_TET_OCTSTRBUF,
   CM_PASN_TET_SETSEQ_TERM,
   CM_PASN_TET_EXT_MKR,
   CM_PASN_TET_TKNBUF,
   CM_PASN_TET_CLASSIE,
   CM_PASN_TET_SEQNULL,
   CM_PASN_TET_UINTXL
};
typedef struct cmPAsnMsgCp CmPAsnMsgCp;


typedef U8 CmPAsnTknEnum;







typedef struct cmPAsnEnumDef
{



  CmPAsnTknEnum *enumLst;
  CmPAsnTknEnum *enumExtLst;
} CmPAsnEnumDef;



typedef struct cmPAsnBitStrDef
{



  U32 min;
  U32 max;
} CmPAsnBitStrDef;


typedef struct cmPAsnOctStrDef
{



  U32 min;
  U32 max;
} CmPAsnOctStrDef;


typedef struct cmPAsnSIntDef
{



  S32 min;
  S32 max;
} CmPAsnSIntDef;


typedef struct cmPAsnUIntXLDef
{



  struct
  {
     U32 len;
     U8 val[8];
  }min;

  struct
  {
     U32 len;
     U8 val[8];
  }max;
} CmPAsnUIntXLDef;


typedef struct cmPAsnUIntDef
{



  U32 min;
  U32 max;
} CmPAsnUIntDef;

typedef struct cmPAsnElmDef
{



   U8 type;
   Bool extMkr;
   U32 evSize;
   U32 *flagp;
   S16 (*func) (CmPAsnMsgCp *msgCp);

   U8 *typeSpecDef;
   void *defVal;
} CmPAsnElmDef;


typedef struct cmPAsnSetSeqOfDef
{



  U32 min;
  U32 max;
  U8 dbSize;
} CmPAsnSetSeqOfDef;


typedef struct cmPAsnSetSeqDef
{



  U32 preAmLen;
  U32 nmbExtMkrs;
  U32 extMkrEvOff;
  U16 extMkrDbOff;
  CmPAsnElmDef **ft;

  Bool allocEvnt;
} CmPAsnSetSeqDef;


typedef struct cmPAsnChoiceDef
{



 U16 nmbAltRoot;
 U16 nmbAltExt;
 CmPAsnElmDef **ft;

} CmPAsnChoiceDef;


typedef struct cmPAsnMulStrDef
{



  U32 *effAlp;
  U32 max;
  U32 min;
  U32 ub;
  U32 lb;
} CmPAsnMulStrDef;


typedef struct cmPAsnClassInfo
{

  U16 maxInstances;
  U32 *instIDs;
} CmPAsnClassInfo;


typedef struct cmPAsnClassIEDef
{



  CmPAsnClassInfo *classInf;

  U16 idEvntOffSet;
  CmPAsnElmDef **ieInst;



} CmPAsnClassIEDef;






typedef struct cmPAsnErrIeInfo
{
   U16 errType;
   U16 criticality;
   U32 ieId;
}CmPAsnErrIeInfo;







typedef struct cmPAsnErr
{
   S16 errCode;


   U16 errCause;
   U16 ieCount;
   CmPAsnErrIeInfo ieInfo[15];


} CmPAsnErr;





typedef struct cmPAsnFBufInfo
{
   Data *bufP;
   U32 crntIdx;
   Size size;
} CmPAsnFBufInfo;






typedef struct cmPAsnBitHldr
{
   U8 byte;
   U8 nxtBitPos;
} CmPAsnBitHldr;





struct cmPAsnMsgCp
{
   U8 protType;
   U8 mMgmt;
   U8 perType;
   U8 cfg;
   Buffer *mBuf;
   CmPAsnFBufInfo fBuf;
   CmPAsnBitHldr bhldr;
   TknU8 *evntStr;
   CmPAsnElmDef **elmDef;
   Bool updEvnt;
   CmPAsnErr *err;
   CmMemListCp *memCp;





   Bool igExtMand;
   Buffer *unknownBuf;
};



extern S16 cmPAsnEncMsg (Void *event, U8 mMgmt, Void *outMPtr, U8 protocol, CmPAsnElmDef **msgDef, CmPAsnErr *err, U32 *fLen,Bool dbgFlag, Bool igExtMand)


                                               ;

extern S16 cmPAsnDecMsg (Void *event, U8 mMgmt, Void **inMPtr, U32 *numDecOct, U8 protocol, CmPAsnElmDef **msgDef, U8 cfg, CmPAsnErr *err, U32 fLen, CmMemListCp *lcp,Bool dbgFlag)



                                                              ;

extern S16 cmPAsnEncMsgUalign (Void *event, U8 mMgmt, Void *outMPtr, U8 protocol, CmPAsnElmDef **msgDef, CmPAsnErr *err, U32 *fLen,Bool dbgFlag, Bool igExtMand)


                                               ;

extern S16 cmPAsnDecMsgUalign (Void *event, U8 mMgmt, Void **inMPtr, U32 *numDecOct, U8 protocol, CmPAsnElmDef **msgDef, U8 cfg, CmPAsnErr *err, U32 fLen, CmMemListCp *lcp,Bool dbgFlag)



                                                              ;


extern S16 cmPAsnEncBitField (CmPAsnMsgCp *msgCp, U8 value, U8 size);

extern S16 cmPAsnRepAndEncBitField (CmPAsnMsgCp *msgCp, MsgLen lenIdx, U8 bitPos, U8 value)
                                                        ;

extern Void cmPAsnUpdDefVal ( TknU8 *evntStr, CmPAsnElmDef *temp_elm);
extern S16 wrUmmS1HoFillCause(SztCause *transCause, SztCause *cause);
extern S16 wrUmmS1SrcHoOvrallTmrExp(WrUeCb *ueCb);
extern S16 wrUmmS1SrcHoFillPLMNId(S1apPdu *pdu,WrPlmnId *plmnId, SztPLMNidentity *plmnIe);
extern S16 wrEmmMmeSztFillLAC(U16 lac, SztLAC *lAC);


typedef struct wrUmmS1SrcHoRabInfo
{
   U8 erabId;
   U8 rbId;
   U8 rbDir;
   U8 qci;
   U8 tnlCfgState;
   U8 expectedTnlRsp;

   Bool dlFwding;

   CmTptAddr peerAddr;
   U32 locTunId;
   U32 datFwdUlRemTunId;
   U32 datFwdDlRemTunId;
   U32 datFwdUlLclTunId;
   U32 datFwdDlLclTunId;
   Bool isULDatFwdReq;
} WrUmmS1SrcHoRabInfo;

typedef struct wrUmmIntraLteHoInfo
{
   U16 eNBType;
   WrEcgi ecgi;
   U16 tac;
   Bool isDirectPathAvl;
} WrUmmIntraLteHoInfo;

typedef struct wrUmmIRatGeranHoInfo
{
  Bool psSrvcNotAvlbl;
  U8 bsic;
  U16 cId;
  U16 lac;
  U8 rac;
  U8 rxLev;
  U8 bandIndicator;
} WrUmmIRatGeranInfo;

typedef struct wrUmmIRatUtraHoInfo
{
  U16 psc;
  U16 rncId;
  U16 cId;
  U16 lac;
  U8 rac;
  TknStrOSXL utraUeCapContainer;
} WrUmmIRatUtraInfo;

typedef struct wrUmmS1SrcHoTrans
{
  U8 X2Presence;
 U8 state;
   U32 crnti;
   U32 cellId;





   U8 numOfRbInfo;
   SztCause *sztCause;
   WrUmmMsgCause *Cause;
   SztHovrTyp *sztHovrTyp;
   WrPlmnId plmnId;
   WrUmmS1SrcHoRabInfo *rbInfo;
   SztE_RABLst sztE_RABLst;
   TknStrOSXL srcToTgtCntr;
   TknStrOSXL rrcCont;
   TknStrOSXL *tgtToSrcCont;
   WrUmmTimer s1RelocTmr;
   WrUmmTimer s1CancelTmr;
   Buffer *hoCmd;

   U32 csgId;
   U8 csgCellAccessMode;
   U16 tgtPci;
   TknStrOSXL nasSecParamFrmEutran;
   TknU32 srvccHoInd;

   union {
     WrUmmIntraLteHoInfo intraLteInfo;
     WrUmmIRatUtraInfo interRatInfo;
     WrUmmIRatGeranInfo interRatGeranInfo;
   }t;
} WrUmmS1SrcHoTrans;

extern S16 wrUmmS1SrcHoOvrallTmrExp(WrUeCb *ueCb);
extern S16 wrUmmS1SrcHoRelocTmrExp(WrUeCb *ueCb);
typedef enum
{
   WR_UMM_HO_NBR_PRIORITY_HIGHEST = 1,
   WR_UMM_HO_NBR_PRIORITY_MORE,
   WR_UMM_HO_NBR_PRIORITY_LOW,
   WR_UMM_HO_NBR_PRIORITY_MAYBE,
   WR_UMM_HO_NBR_PRIORITY_MAX
} WrUmmHoNbrPriority;
typedef struct wrHoDecType
{
   U16 hoType;
}WrHoDecType;





typedef struct wrHoDecFailCause
{
   U16 cause;
}WrHoDecFailCause;


typedef struct wrUmmEutraHoTgtInfo
{
   Bool isRlfTmrConstR9Pres;
   Bool isMeasSubFrPatPCellR10Pres;
   Bool needToFillSCellToRlsLstR10;
   NhuSCellToRlsLst_r10 sourceSCellRelLst_r10;
} WrUmmEutraHoTgtInfo;


typedef struct wrUmmHoSpsInfo
{
   Bool isDlSpsPresent;
   Bool isUlSpsPresent;
} WrUmmHoSpsInfo;






typedef struct wrHoDecRslt
{
   U16 pci;
   U8 status;
   union
   {
      WrHoDecFailCause cause;
      WrHoDecType typeOfHo;
   }val;
}WrHoDecRslt;

extern S16 wrUmmHoUpdUeHist (WrUeCb *ueCb);
extern S16 wrUmmHoIsDatFwdRqrd (WrUeRAB *rbInfo, Bool *datFwdReq);
extern S16 wrUtlFillMeasRptCfgMeasObjIDRmvLst(WrUeCb *ueCb,NhuEncReqSdus *dcchEncReq,
                  NhuMeasConfig *nhuMeasCfg);
extern S16 wrUmmHoHdlMeasRprt (WrUeCb *ueCb, WrMeasRptCfgType event, NhuMeasResults *measRprt, U32 earfcn);
extern S16 wrUmmHoCopyRadioResCfg(RmuUeRadioResCfg *rmuUeRadioResCfg, RmuUeRadioResCfg *txsUeRadioResCfga);
extern S16 wrUmmHoFillRadioResCfg (RmuUeRadioResCfg *ueRadioResCfg, NhuHovrPrepInfo *nhuHovrPrepInfo);

extern S16 wrUmmTgtHoGetLchIdDrbId (WrUeCb *ueCb, NhuDecodeSduCfm *decCfm,
      U32 eRABId, U8 *drbId, U8 *lchId,WrRabCfgParams *srcPdcpRlcCfgParams);
extern S16 wrUmmHoTgtSndHoFail ( U32 spConnId, U32 mme_ue_s1ap_id,
                                                U32 cause_Type,U32 cause_Val);
extern S16 wrUmmHoUeCapStoreCapInfo( WrUeCb *ueCb, NhuUECapInfo *ueCapInfo);
extern U16 wrUmmX2TgtHoInitUeCb(WrUeCb *ueCb);
typedef struct _wrUmmSnSts
{
  U8 rbId;
  NhuHoPdcpSduInfo nhuHoPdcpSduInfo;
} WrUmmSnSts;
typedef struct _wrUmmSnStsInfo
{
  U8 numOfRb;
  WrUmmSnSts wrSnSts[8];
} WrUmmSnStsInfo;
typedef struct wrUmmX2TgtHoRabInfo
{
   U8 rabAllowed;
   U8 rlcMode;
   U8 lchId;
   U8 schdCfgState;
   U8 tnlCfgState;
   U8 expectedTnlRsp;
   Bool dlFwding;
   WrUeRAB drbInfo;
   U32 datFwdUlLocEgtpTunId;
   U32 datFwdDlLocEgtpTunId;
   CmTptAddr newSgwAddr;
   U32 newRemTnlId;


   WrRabCfgParams srcPdcpRlcCfgParams;

   Bool isDlSpsEnabled;
   Bool isUlSpsEnabled;

} WrUmmX2TgtHoRabInfo;
typedef struct wrUmmX2TgtHoTrans
{
   U32 state;
   U32 peerId;
   U8 phyCfg;
   U8 schdUeCfgCfmRcvd;
   U8 schdSrb1LchCfgCmpl;
   U8 schdSrb2LchCfgCmpl;
   U8 schdLchCfgCmpl;
   U8 lcgCfgCmpl;

   U8 numlcgCfgCfm;
   U8 expctLcgCfgCfm;
   U16 crnti;
   U32 old_eNB_UE_X2ap_Id;
   U32 new_eNB_UE_X2ap_Id;
   U8 noOfAdmitdBearers;
   CztCause *cztCause;
   U16 pci;
   U32 cellId;
   WrPlmnId plmnId;
   WrMmeId mmeId;
   U16 tac;
   WrGummei gummei;
   U32 mme_ue_s1ap_id;
   WrUeSecCfg *secCfg;


   WrUeSecCfg *hzSecCfg;
   Bool asKeyGenerated;
   Bool asSecModeInit;

   U8 numOfRbCfgd;
   WrUmmX2TgtHoRabInfo *rbInfo;
   WrBitRate ambr;
   TknStrOSXL kenb_Star;
   U32 nextHopChainingCount;
   U32 new_nextHopChainingCount;
   CztHovrRestrnLst *hovrRestrnLst;



   RmuUeRadioResCfg ueRadioResCfg;
   WrUmmSnStsInfo *snStsInfo;
   U8 numBufferedMsg;
   WrUmmMeasTransInfo measTransCb;
   CmTptAddr peerAddr;
   WrUeCapInfo *ueCap;
   TknU32 mmeUeS1apId2;
   U8 snStatusInfoFlag;
   Bool isUeAttached;
   Bool handInUeCdma;
   WrUmmIncMsg *rrmUeRecfgRspMsg;

   U8 ueMbrShpSts;
   U8 isEmrgncyCall;

   U8 errCause;
   WrUmmMsgCause hoPrepFailCause;

   WrUmmHoSpsInfo srcToTgtSpsInfo;


   WrUmmRabRls erabsToRejectLst;
   WrUmmEutraHoTgtInfo eutraTgtInfo;
   Bool isRrcReEstRcvd;

} WrUmmX2TgtHoTrans;
typedef struct wrUmmX2SrcHoRabInfo
{
   U8 erabId;
   U8 rbId;
   U8 rbDir;
   U8 qci;
   U8 tnlCfgState;
   U8 expectedTnlRsp;
   Bool dlFwding;
   CmTptAddr peerAddr;
   U32 datFwdUlRemTunId;
   U32 datFwdDlRemTunId;
   U32 datFwdUlLclTunId;
   U32 datFwdDlLclTunId;
   Bool isULDatFwdReq;
} WrUmmX2SrcHoRabInfo;
typedef struct wrUmmX2SrcHoTrans
{
   U32 state;
   U32 crnti;
   U32 cellId;
   U32 peerId;
   U32 old_eNB_UE_X2ap_Id;
   U32 new_eNB_UE_X2ap_Id;
   WrUmmMsgCause cztCause;
   WrEcgi ecgi;

   U16 targetPci;
   U32 targetEarfcnDl;
   U8 enbType;
   U8 numOfRbInfo;
   WrUmmX2SrcHoRabInfo *rbInfo;
   TknStrOSXL srcToTgtCntr;
   CztE_RAB_Lst *cztE_RAB_Lst;
   CztTgeteNBtoSrc_eNBTprntCont *tgetToSrcTprntCont;
   WrUmmIncMsg *msg;

   Buffer *hoCmd;


   U8 kEnbStar[32];


   Bool isKenbKeyGenerated;
   Bool isRrcContrPrepared;

   WrUmmIncMsg *rrcContrMsg;

   U32 csgId;
   U8 csgCellAccessMode;

   U8 henbGwCtxtRelRequired;
} WrUmmX2SrcHoTrans;
typedef struct wrUmmS1TgtHoRabInfo
{
   U8 rabAllowed;
   U8 rlcMode;
   U8 lchId;
   U8 schdCfgState;
   U8 tnlCfgState;
   U8 expectedTnlRsp;

   Bool dlFwding;
   WrUeRAB drbInfo;

   U32 datFwdUlLocEgtpTunId;
   U32 datFwdDlLocEgtpTunId;


   WrRabCfgParams srcPdcpRlcCfgParams;

   Bool isDlSpsEnabled;
   Bool isUlSpsEnabled;

} WrUmmS1TgtHoRabInfo;


typedef struct wrUmmIRatHoTgtInfo
{
  TknStrOSXL nasSecParamToEutran;
} WrUmmIRatHoTgtInfo;

typedef struct wrUmmS1TgtHoTrans
{
  U32 state;
  U8 hovrPrepFailState;
  U8 hovrFailFlag;
  U16 crnti;
  U8 phyCfg;
  U8 schdUeCfgCfmRcvd;
  U8 schdSrb1LchCfgCmpl;
  U8 schdSrb2LchCfgCmpl;
  U8 schdLchCfgCmpl;

  U8 lcgCfgCmpl;
  U8 expctLcgCfgCfm;
  U8 numlcgCfgCfm;
  U8 noOfAdmitdBearers;
  SztCause *sztCause;
  U32 cellId;
  WrPlmnId plmnId;
  SztGUMMEI *sztGUMMEI;
  U32 mme_ue_s1ap_id;
  U32 enb_ue_s1ap_id;
  U32 sztHovrTyp;
  U8 numOfRbCfgd;
  WrBitRate ambr;
  WrUeSecCfg *secCfg;


  WrUeSecCfg *hzSecCfg;
  Bool asKeyGenerated;

  Bool isNewKenbGenerated;

  Bool asSecModeInit;

  WrUmmS1TgtHoRabInfo *rbInfo;
  TknBStr32 *kenb_Star;
  U32 nextHopChainingCount;
  TknStrOSXL nextHop_NH;
  U32 new_nextHopChainingCount;
  SztUE_HistoryInform *ueHistoryInfo;
  SztHovrRestrnLst *hovrRestrnLst;
  TknStrOSXL *srcToTgtCont;



  RmuUeRadioResCfg ueRadioResCfg;
  WrUmmSnStsInfo *snStsInfo;
  WrUmmMeasTransInfo measTransCb;
  U16 l1CfmRcvd;
  U16 damCfmRcvd;
  U16 schdCfmRcvd;
  WrUeCapInfo *ueCap;
  U8 snStatusInfoFlag;
  Bool isUeAttached;
  Bool handInUeCdma;
  U8 locReptReqTyp;
  WrGummei gummei;
  TknU32 mmeUeS1apId2;
  U8 numBufferedMsg;

  WrUmmIncMsg *rrmUeRecfgRspMsg;

  TknU32 csgId;
  U8 ueMbrShpSts;
  U8 isEmrgncyCall;


  WrUmmMsgCause hoPrepFailCause;

  WrUmmHoSpsInfo srcToTgtSpsInfo;
  Bool isRrcReEstRcvd;



  WrUmmRabRls erabsToRejectLst;

  union
  {
     WrUmmIRatHoTgtInfo iRatHoInfo;
     WrUmmEutraHoTgtInfo eutraTgtInfo;
  }u;
} WrUmmS1TgtHoTrans;


typedef struct wrUmmDlCdmaTransCb
{
   U8 transId;
   U8 state;
   WrUmmIncMsg *msg;
   TknStrOSXL *cdmaPdu;
   U32 ratTyp;
   U32 numOfDlTxCnt;
   U8 datCfmState;
} WrUmmDlCdmaTransCb;
typedef enum wrUmmEcsfbTransState
{
   WR_UMM_ECSFB_TRANS_REL,
   WR_UMM_ECSFB_TRANS_ERROR,



   WR_UMM_WAIT_AFTER_HOPREP_REQ,
   WR_UMM_DAT_CFM_WAIT_DL_CDMA_INFO,
   WR_UMM_DL_CDMA_RECV_HO_WAIT,
   WR_UMM_ECSFB_HO_EXEC,


   WR_UMM_ECSFB_RRC_DAT_CFM_RECVD_FOR_HOPREP_REQ,
   WR_UMM_MEAS_CFGD
} WrUmmEcsfbTransState;

typedef enum ecsfbMsgTransId
{
   WR_UMM_ECSFB_HO_FROM_EUTRA_TRANSID = 1,
   WR_UMM_ECSFB_DL_CDMA_INFO_TRANSID,
   WR_UMM_ECSFB_MOB_EUTRA_CMD_TRANSID
}EcsfbMsgTransId;
typedef struct wrummEcsfbTransCb
{
   WrUmmEcsfbTransState ecsfbState;
   U32 cdmaType;
   Bool isConCurrHoHrpd;
   U32 numOfDlTxCnt;
   WrUmmIncMsg *s1DlCdmaTunnMsg;
   TknStrOSXL *cdmaS1Pdu;
   TknStrOSXL *encMobilityParamsInfo;

   U8 eCsfbMeasEnbFlag;
   WrUmmTimer measRptTmr;
   WrUmmMeasTransInfo measTransCb;
   U8 recvMeasRptCnt;
   U8 ratPriority;
   U8 numOfPilotLst;
   WrCdmaRttPilotLst *cdmaRttPilotLst[24];
   TknStrBSXL *meId;
}WrUmmEcsfbTransCb;
typedef struct _wrLteAdvTransCb
{
   WrUmmLteAdvProc procType;
   union
   {
      WrUmmMeasTransInfo measInfo;
   } u;
} WrLteAdvTransCb;


extern S16 wrUmmHdlLteAdvRecfg (U32 cellId, RgrFeature feature,
                                      RgrFeatureStatus status);

extern S16 wrUmmHdlLteAdvRecfgForUe (WrUmmCellCb *cellCb, WrUeCb *ueCb, RgrFeatureStatus status,
                                 WrUmmLteAdvProc procType, WrUmmLteAdvPeerType peerType);



extern S16 wrUmmAbsPrcHdlMeasRpt (WrUeCb *ueCb,
                                  NhuMeasResults *measRprt, U32 earfcn);


extern S16 wrUmmIntraMeasCfgForLteAdvAddEvntA3 (WrUeCb *ueCb,
                                        WrUmmMeasAddInfo *addMeasInfo,
                                        WrUmmCellCb *cellCb, WrMeasRptCfgType rptCfgTyp);

extern S16 wrUmmIntraMeasCfgForLteAdvDelEvntA3 (WrMeasUeCb *measUeCb,
                                        WrUmmMeasRmvInfo *rmvMeasInfo,
                                        WrUmmCellCb *cellCb, WrMeasRptCfgType rptCfgTyp);
typedef enum enTransactionType {
 WR_UMM_RRC_SETUP_TRANS=0,
 WR_UMM_INIT_CTXT_TRANS,
 WR_UMM_ERAB_SETUP_TRANS,
 WR_UMM_UL_NAS_TRANS,
 WR_UMM_DL_NAS_TRANS,
 WR_UMM_LC_RAB_RLS_TRANS,
 WR_UMM_RRC_REESTAB_TRANS,
 WR_UMM_CTXT_REL_TRANS,
 WR_UMM_RAB_REL_TRANS,
 WR_UMM_ERAB_MOD_TRANS,
 WR_UMM_UE_CTXT_MOD_TRANS,
 WR_UMM_MEAS_TRANS,
 WR_UMM_S1_SRC_HO_TRANS,
 WR_UMM_S1_TGT_HO_TRANS,
 WR_UMM_X2_SRC_HO_TRANS,
 WR_UMM_X2_TGT_HO_TRANS,
 WR_UMM_CSFB_REDIR_TRANS,
   WR_UMM_ECSFB_TRANS,
   WR_UMM_DL_CDMA_TRANS,
 WR_UMM_RAD_RES_MOD_TRANS,
 WR_UMM_LOCATION_REPORT_TRANS,
 WR_UMM_ANR_MEAS_TRANS,
   WR_UMM_EVENT_ANR_TRANS,
   WR_UMM_RRC_CSFB_TRANS,
   WR_UMM_LTE_ADV_TRANS,
   WR_UMM_CSFB_CCO_TRANS,
   WR_UMM_TX_MODE_CHNG_TRANS,
   WR_UMM_PERD_STRONG_CELL_MEAS_TRANS,



 WR_UMM_TRANS_UKNW,
 WR_UMM_MAX_TRANS_TYPE
} enUmmTransactionType;





typedef enum
{
 WR_UMM_TRANS_INUSE=0,
 WR_UMM_TRANS_DONE,
 WR_UMM_TRANS_STATE_ROLLBACK,
 WR_UMM_TRANS_CALL_DONE,
 WR_UMM_TRANS_DELETE_UE,
 WR_UMM_TRANS_DEFFERED,
 WR_UMM_TRANS_RELEASE_CALL
} enUmmTransactionState;


typedef struct {
   Bool isUeUlSpsEnabled;
   Bool isUeDlSpsEnabled;
   WrSpsCfg spsCfg;
} WrSpsCfgTransCb;
typedef struct wrUmmTransCb
{
   CmLList lnk;
   WrUmmTimer timer;
   WrUmmTimer timerGrd;
   CmLListCp tmrLst;
   CmLListCp deferredTrans;
   U32 transId;
   U8 transTyp;
   U8 state;
   U8 errorCause;
   WrUmmIncMsg *msg;
   U32 event;
   WrUeCb *ueCb;
   U16 numDefMsgCount;
   U16 transRefCount;
   WrUmmIncMsg *defList[10];

   WrSpsCfgTransCb spsCfgTransCb;

   union
   {
      WrRrcConTransCb rrcContranscb;
      WrUmmRabSetupTrans rabSetupTrans;
      WrInitCntxtSetupTransCb initCtxtCb;
      WrUmmRabRelTransCb rabRelTransCb;
      WrUmmLcRabRelTransCb lcRabRelTransCb;
      WrUmmCtxtRelTrans ctxtRelTrans;
      WrRrcReEstabTransCb rrcReEstabTransCb;
      WrUmmRabModifyTransCb rabModifyTransCb;
      WrUmmCtxtModTrans ctxtModTrans;
      WrUmmDlNasTransCb dlNasTrans;
      WrUmmMeasTransInfo measTransCb;
      WrUmmS1SrcHoTrans s1SrcHoTrans;
      WrUmmS1TgtHoTrans s1TgtHoTrans;
      WrUmmX2TgtHoTrans x2TgtHoTrans;
      WrUmmX2SrcHoTrans x2SrcHoTrans;
      WrUmmCsfbTransCb csfbTrans;
      WrUmmCsfbCcoTransCb csfbGeranTrans;
      WrUmmEcsfbTransCb ecsfbTransCb;
      WrUmmAnrMeasTransInfo anrMeasTrans;
      WrUmmEventAnrTransInfo eventAnrTrans;
      WrUmmRadResMod radResMod;
      WrUmmDlCdmaTransCb dlCdmaTrans;
      WrUmmTxModeChngTransCb txModeChngTrans;
      WrLteAdvTransCb lteAdvTransCb;
      WrUmmPerdStrongCellMeasTransInfo perdStrongCellMeasTrans;



   } u;
} WrUmmTransCb;

extern S16 wrUmmCsfbRelUe(WrUmmTransCb *transCb);
extern Void wrUmmTransComplete(WrUmmTransCb *transCb);
typedef S16 (*WrUmmTransProcessor)(WrUmmTransCb *transCb);
typedef S16 (*WrUmmTransMsgPrcr)(WrUmmTransCb *transCb,WrUmmTransCb *defTransCb);
typedef S16 (*WrUmmTransAllowMsg)(WrUmmTransCb *tranCb, WrUmmIncMsg *msg);
typedef S16 (*WrUmmStopTransPrcr)(WrUmmTransCb *tranCb, WrUmmTransCb *defTrans);
typedef S16 (*WrUmmNewTransPrcr)(WrUmmTransCb *tranCb, WrUmmTransCb *incTrans);
typedef S16 (*WrUmmTransRelease)(WrUmmTransCb *tranCb);
extern void wrUmmRlsIncMsg(WrUmmIncMsg **msg);
extern S16 wrUmmS1GetTransIdFromMsg(WrUeCb *ueCb, WrUmmIncMsg *s1Pdu,
                                                               U32 *transId);
extern S16 wrUmmUuGetTransIdFromMsg(WrUeCb *ueCb, WrUmmIncMsg *uuPdu,
                                                               U32 *transId);


extern S16 wrUmmRabSetupProcessor(WrUmmTransCb *transCb);
extern S16 wrUmmRabModifyProcessor(WrUmmTransCb *transCb);
extern S16 wrUmmInitCtxtProcessor(WrUmmTransCb *transCb);
extern S16 wrUmmUlNasProcessor(WrUmmTransCb *transCb);
extern S16 wrUmmDlNasProcessor(WrUmmTransCb *transCb);
extern S16 wrUmmCtxtRelProcessor(WrUmmTransCb *transCb);
extern S16 wrUmmLcRabRelProcessor(WrUmmTransCb *transCb);
extern S16 wrUmmRabRelProcessor (WrUmmTransCb *transCb);
extern S16 wrUmmRrcSetupProcessor (WrUmmTransCb *transCb);
extern S16 wrUmmRrcReEstabTransProcessor(WrUmmTransCb *transCb);
extern S16 wrUmmX2TgtHoProcessor(WrUmmTransCb *transCb);
extern S16 wrUmmX2SrcHoProcessor(WrUmmTransCb *transCb);
extern S16 wrUmmS1TgtHoProcessor(WrUmmTransCb *transCb);
extern S16 wrUmmS1SrcHoProcessor(WrUmmTransCb *transCb);
extern S16 wrUmmCsfbProcessor(WrUmmTransCb *transCb);
extern S16 wrUmmRrcCsfbProcessor(WrUmmTransCb *transCb);

extern S16 wrUmmEcsfbProcessor(WrUmmTransCb *transCb);
extern S16 wrUmmLocReptProcessor(WrUmmTransCb *transCb);

extern S16 wrUmmMeasTransRel(WrUmmTransCb *measTransCb);
extern S16 wrUmmAnrMeasTransRel(WrUmmTransCb *measTransCb);
extern S16 wrUmmEventAnrTransRel(WrUmmTransCb *measTransCb);
extern S16 wrUmmPerdStrongCellMeasTransRel(WrUmmTransCb *measTransCb);


extern S16 wrUmmDlCdmaTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmTxModeChngTransRel(WrUmmTransCb *transCb);

extern S16 wrUmmRrcConTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmInitCtxtTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmRabSetupTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmRabModifyTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmUlNasTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmDlNasTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmCtxtRelTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmRabRelTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmLcRabRelTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmRrcReestabTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmCtxtModTransRel(WrUmmTransCb *transCb);

extern S16 wrUmmCtxtModSndCtxtModRsp(WrUmmTransCb *transCb);
extern S16 wrUmmS1SrcHoTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmS1TgtHoTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmX2SrcHoTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmX2TgtHoTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmPrcTgtEnbRelocTmrExpiry(WrUeCb *ueCb);
extern S16 wrUmmCsfbTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmRrcCsfbTransRel(WrUmmTransCb *transCb);

extern S16 wrUmmEcsfbTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmLocReptTransRel (WrUmmTransCb *transCb);
extern S16 wrUmmDefIncTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmDefIncNewTrans(WrUmmTransCb *transCb, WrUmmTransCb *defTransCb);
extern S16 wrUmmDefIncTransMsg(WrUmmTransCb *transCb, WrUmmTransCb *defTransCb);
extern S16 wrUmmDefIncStopTrans(WrUmmTransCb *transCb, WrUmmTransCb *defTransCb);
extern Void wrUmmBldSndLocRept (WrUmmTransCb *transCb);


extern S16 wrUmmGetUuTransType(WrUeCb *ueCb, WrUmmIncMsg *msg, U32 *transTyp);
extern S16 wrUmmGetS1TransType(S1apPdu *msg, U32 *transTyp);


extern S16 wrUmmS1GetTransIdFromMsg(WrUeCb *ueCb, WrUmmIncMsg *msg,
                                    U32 *transId);
extern S16 wrUmmMeasProcessor (WrUmmTransCb *transCb);
extern S16 wrUmmAnrMeasProcessor (WrUmmTransCb *transCb);
extern S16 wrUmmEventAnrProcessor (WrUmmTransCb *transCb);
extern S16 wrUmmPerdStrongCellMeasProcessor (WrUmmTransCb *transCb);


extern S16 wrUmmDlCdmaProcessor (WrUmmTransCb *transCb);

extern S16 wrUmmGetX2TransType(WrUmmIncMsg *msg, U32 *transTyp);
extern S16 wrUmmX2GetTransIdFromMsg(WrUeCb *ueCb, WrUmmIncMsg *msg,
                                    U32 *transId);

 S16 wrUmmCtxtModProcessor(WrUmmTransCb *transCb);


extern S16 wrUmmDefIncTrans (WrUmmTransCb *tranCb);
extern S16 wrUmmIncNewTransProcessor(WrUmmTransCb *tranCb,
      WrUmmTransCb *defTransCb);
extern S16 wrUmmRabSetupNewTransProcessor(WrUmmTransCb *tranCb,
                                          WrUmmTransCb *incTrans);
extern S16 wrUmmRabRelNewTransProcessor(WrUmmTransCb *tranCb,
                                          WrUmmTransCb *incTrans);
extern S16 wrUmmRabModNewTransProcessor(WrUmmTransCb *tranCb,
                                          WrUmmTransCb *incTrans);
extern S16 wrUmmRrcConnNewTransProcessor(WrUmmTransCb *transCb,
                                          WrUmmTransCb *incTrans);

extern S16 wrUmmInitCtxtNewTransProcessor(WrUmmTransCb *tranCb,
                                          WrUmmTransCb *incTrans);
extern S16 wrUmmReestabNewTransProcessor(WrUmmTransCb *tranCb,
                                          WrUmmTransCb *incTrans);
extern S16 wrUmmCtxtRelNewTransProcessor(WrUmmTransCb *transCb,
                WrUmmTransCb *incTrans);
extern S16 wrUmmCsfbPrcDeferTrans(WrUmmTransCb *tranCb,
                                          WrUmmTransCb *deferTrans);
extern S16 wrUmmRrcCsfbPrcDeferTrans(WrUmmTransCb *tranCb,
                                          WrUmmTransCb *deferTrans);
extern S16 wrUmmEcsfbPrcDeferTrans(WrUmmTransCb *tranCb,
                                          WrUmmTransCb *deferTrans);
extern S16 wrUmmDlCdmaPrcDeferTrans(WrUmmTransCb *tranCb,
                                          WrUmmTransCb *deferTrans);
extern S16 wrUmmRrcCsfbNewTransProcessor(WrUmmTransCb *tranCb,
                                          WrUmmTransCb *incTrans);

extern S16 wrUmmCsfbNewTransProcessor(WrUmmTransCb *tranCb,
                                          WrUmmTransCb *incTrans);

extern S16 wrUmmEcsfbNewTransProcessor(WrUmmTransCb *transCb,
                                WrUmmTransCb *incTrans);
extern S16 wrUmmEventAnrNewTransProcessor(WrUmmTransCb *tranCb,
            WrUmmTransCb *incTrans);


extern S16 wrUmmDlCdmaNewTransProcessor(WrUmmTransCb *tranCb,
            WrUmmTransCb *incTrans);

extern S16 wrUmmAnrMeasNewTransProcessor(WrUmmTransCb *tranCb,
            WrUmmTransCb *incTrans);
extern S16 wrUmmMeasNewTransProcessor(WrUmmTransCb *tranCb,
            WrUmmTransCb *incTrans);
extern S16 wrUmmPerdStrongCellMeasNewTransProcessor(WrUmmTransCb *tranCb,
            WrUmmTransCb *incTrans);

extern S16 wrUmmDlNasNewTransProcessor(WrUmmTransCb *tranCb,
                                         WrUmmTransCb *incTrans);

extern S16 wrUmmStopReEstabTransPrcs(WrUmmTransCb *tranCb,
                                          WrUmmTransCb *deferTrans);
extern S16 wrUmmRadResConfModProcessor(WrUmmTransCb *transCb);
extern S16 wrUmmRadResConfModTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmCqiReptTmrExp(WrUeCb *ueCb);
extern S16 wrUmmRadResModNewTransProcessor(WrUmmTransCb *transCb,
                                      WrUmmTransCb *incTransCb);
extern S16 wrUmmIncTxModeChngNewTransProcessor(WrUmmTransCb *transCb,
                                      WrUmmTransCb *incTransCb);
extern S16 wrUmmTxModeChngProcessor(WrUmmTransCb *transCb);

extern S16 wrUmmS1SrcHoNewTransProcessor(WrUmmTransCb *tranCb,
      WrUmmTransCb *incTrans );
extern S16 wrUmmX2SrcHoNewTransProcessor(WrUmmTransCb *tranCb,
      WrUmmTransCb *incTrans);
extern S16 wrUmmS1TgtHoNewTransProcessor(WrUmmTransCb *tranCb,
      WrUmmTransCb *incTrans);
extern S16 wrUmmX2TgtHoNewTransProcessor(WrUmmTransCb *tranCb,
      WrUmmTransCb *incTrans);
extern S16 wrUmmFwdUuIndPdu (WrUmmTransCb *transCb);
extern WrUmmTransCb* wrUmmGetHoTransCb (WrUeCb *ueCb);

extern S16 wrStartTransTmr(WrUmmTransCb *cb, S16 tmrEvnt, U32 delay);
extern Void wrStopTransTmr(WrUmmTransCb *cb, S16 event);
extern void wrUmmStopTransTimers(WrUmmTransCb *transCb);
extern void wrUmmStopUeTimers(WrUeCb *cb);
extern S16 wrUmmDefRabRelIncCtxtRelProcessor(WrUmmTransCb *transCb,
                WrUmmTransCb *incTrans);
extern S16 wrUmmUtlUpdateSRBsInfo (WrUmmTransCb *transCb);
extern S16 wrUmmRelCall (WrUmmTransCb *transCb);
extern S16 wrUmmCreatCsfbTrans (WrUmmTransCb *transCb);
extern S16 wrUmmStopTransaction (WrUmmTransCb *transCb);
extern S16 wrUmmGetIntMsgTransType (WrUmmIncMsg *msg, U32 *transTyp);
extern S16 wrUmmSchdUeStaInd (RgrUeStaIndInfo *ueStaInd);
extern S16 wrUmmGetOnGoingRrcTransId
(
WrUeCb *ueCb,
U8 dlDcchMsg,
U8 transId,
U32 *rrcTransId
);
extern S16 wrUmmDefRabModIncHoProcessor
(
WrUmmTransCb *transCb,
WrUmmTransCb *incTrans
);
extern S16 wrUmmDefRabModIncCtxtRelProcessor
(
WrUmmTransCb *transCb,
WrUmmTransCb *incTrans
);
extern S16 wrUmmDefRabModIncReestProcessor
(
WrUmmTransCb *transCb,
WrUmmTransCb *incTrans
);
extern S16 wrUmmCtxtRelPrcTmrExpiry
(
WrUmmTransCb *transCb
);
extern S16 wrUmmCreateIntCsfb
 (
   WrUmmCellCb *cellCb,
   WrUeCb *ueCb,
   U8 intMsgType
 );
extern S16 wrUmmCsfbCdmaHdlMeasRpt
(
 WrUmmTransCb *ummTransCb,
 NhuMeasResults *measRpt,
 WrUmmMeasRptInfo *measRptInfo
);
extern S16 wrUmmEcsfbCdmaHdlMeasRpt
(
 WrUmmTransCb *ummTransCb,
 NhuMeasResults *measRpt,
 WrUmmMeasRptInfo *measRptInfo
);
 S16 wrUmmDefRabRelIncReestProcessor(WrUmmTransCb *transCb,
                      WrUmmTransCb *incTrans);
 S16 wrUmmDefInitCtxtIncCtxtRelProcessor(WrUmmTransCb *transCb,
                WrUmmTransCb *incTrans);
 S16 wrUmmDefInitCtxtIncReestProcessor(WrUmmTransCb *transCb,
                WrUmmTransCb *incTrans);
 S16 wrUmmDefRrcConnIncReestProcessor
(
 WrUmmTransCb *transCb,
 WrUmmTransCb *incTrans
);


extern S16 wrUmmLteAdvProcessor (WrUmmTransCb *transCb);
extern S16 wrUmmLteAdvTransRel (WrUmmTransCb *transCb);

extern S16 wrUmmRabSetupSndS1apRsp(WrUmmTransCb *transCb);
extern S16 wrUmmRabModSndS1apRsp(WrUmmTransCb *transCb);
extern S16 wrUmmRabRelSndS1apRsp(WrUmmTransCb *transCb);
extern S16 wrUmmAddDefTransToUeTransLst(WrUmmTransCb *transCb, WrUmmTransCb *defTransCb);

extern S16 wrUmmCsfbGeranCcoProcessor(WrUmmTransCb *transCb);
extern S16 wrUmmCsfbGeranCcoTransRel(WrUmmTransCb *transCb);
extern S16 wrUmmCsfbGeranCcoNewTransProcessor
(
 WrUmmTransCb *transCb,
 WrUmmTransCb *incTrans
 );
extern S16 wrUmmCsfbGeranFillArfcnSndRrcRelToUe
(
 WrUmmTransCb *transCb
);
extern S16 wrUmmCsfbGeranBuildSndRedir
(
  WrUmmTransCb *transCb
);
extern S16 wrUmmCsfbGeranBldSendCco
(
  WrUmmGeranCellCb *geranCell,
  WrUmmTransCb *transCb
);
extern S16 wrUmmCsfbGeranSendCco
(
 WrUmmTransCb *transCb
);
extern S16 wrUmmCsfbGeranPrcRrcMsg
(
 WrUmmTransCb *transCb
);
extern S16 wrUmmCsfbGeranSndRrcConRelMsg
(
  WrUmmTransCb *transCb
);
extern WrUmmRedirectInfo* wrUmmFillGeranRedirectInfo
(
    WrUmmTransCb *transCb
);
extern Bool wrFndCandidateNeighs
(
  WrUmmTransCb *transCb
);

extern WrUmmRedirectInfo* wrUmmFillRedirectInfo
(
  WrUmmTransCb *transCb
);


extern S16 wrUmmMeasGapSchdUeRecfgReq
(
 WrUmmTransCb *transCb
 );


extern S16 wrUmmUeCapSndUeCapEnq(WrUmmTransCb *transCb, WrUmmRatLst *ratLst);
extern S16 wrUmmRrcDecReqHdl(WrUmmTransCb *transCb,TknStrOSXL *str,U16 sduType);
extern S16 wrUmmUeCapHdlUeCapEncCfm(WrUeCb *ueCb,NhuEncCfmSdus *cfmSdu, U32 transId);
extern S16 wrUmmUeCapHdlUeRaCapEncCfm(WrUeCb *ueCb, NhuEncCfmSdus *cfmSdu);
extern S16 wrUmmSndUeCapEncReq(WrUeCb *ueCb,U32 transId,NhuUECapInfo *ueCapInfo);

extern S16 wrUmmHdlAndPrcRabMsg(WrUmmTransCb *incTrans, WrUmmMsgCause *cause);
extern S16 wrUmmCsfbFillDfltArfcnSndRrcRelToUe ( WrUmmTransCb *transCb);


 Void wrUmmInitCtxtSchdUlSpsLchCfgReq(RmuUeRecfgRsp *rrmUeRecfgResp, U32 numErabs, Void *pErabList, RgrUeSpsCfg *ueSpsCfg);
 Void wrUmmRabSetupSchdUlSpsLchCfgReq(RmuUeRecfgRsp *rrmUeRecfgResp, U32 numErabs, Void *pErabList, RgrUeSpsCfg *ueSpsCfg);
 Void wrUmmRabRelSchdUlSpsLchCfgReq(RmuUeRecfgRsp *rrmUeRecfgResp, U32 numErabs, Void *pErabList, RgrUeSpsCfg *ueSpsCfg);
 Void wrUmmRabModifySchdUlSpsLchCfgReq(RmuUeRecfgRsp *rrmUeRecfgResp, U32 numErabs, Void *pErabList, RgrUeSpsCfg *ueSpsCfg, WrUeCb *ueCb);
 Void wrUmmS1TgtHoSchdUlSpsLchCfgReq(RmuUeRecfgRsp *rrmUeRecfgResp, U32 numErabs, Void *pErabList, RgrUeSpsCfg *ueSpsCfg);
 Void wrUmmX2TgtHoSchdUlSpsLchCfgReq(RmuUeRecfgRsp *rrmUeRecfgResp, U32 numErabs, Void *pErabList, RgrUeSpsCfg *ueSpsCfg);


extern S16 wrUmmHoTgtPrcRrcDecCfm(WrUmmTransCb *transCb, WrUeCapInfo **ueCap);
extern S16 wrUtlFillHoCmdTrnspCntrWthMobility
(
WrUmmTransCb *transCb,
NhuEncReqSdus *dcchEncReq,
WrUmmMeasTransInfo *measTransCb,
RmuUeHoRsp *rrmUeHoResp,
WrUmmHoSpsInfo *srcToTgtSpsInfo,
WrSpsCfg *pSpsCfg,
Bool isUeUlSpsEnabled
);

extern S16 wrUmmCheckGBRBearer
(
WrUmmIncMsg *msg
);

extern S16 wrRatSelectionAlgorithm (WrUmmTransCb *transCb, wrCsfbRatType *ratType);




typedef enum wrMeasInitCause
{
   WR_MEAS_CONFIG_EVT_ANR = 1,
   WR_MEAS_CONFIG_NO_EVT_ANR,
}MeasInitCause;


 extern S16 wrUmmMeasProcNrUpdt
   (
    U16 cellId,
    Bool isNewFreq,
    WrNrUpdtInfo *nrUpdtInfo
   );

 extern S16 wrUmmMeasUeCbInit
   (
    WrUeCb *ueCb
   );
 extern S16 wrUmmMeasUeCbDeInit
   (
    WrUeCb *ueCb
   );
extern S16 wrUmmMeasAllocNrGeranObj
(
 WrUmmCellCb *cellCb,
 U8 numFreq,
 WrUmmMeasGeranMeasInfo *cellFreqCfg
);
 extern S16 wrUmmMeasAllocNrFreqCfg
   (
    WrUmmCellCb *cellCb,
    U8 numFreq,
    LwrNeighFreqAddModCfg *cellFreqCfg
   );
extern S16 wrUmmMeasAllocRecfgMsg
(
 NhuDatReqSdus **rrcReCfgMsg,
 WrUmmMeasTransInfo *measTransCb,
 WrUeCb *ueCb,
 U32 transId
);
 extern S16 wrUmmHoHdlMeasRprt
   (
    WrUeCb *ueCb,
    WrMeasRptCfgType event,
    NhuMeasResults *measRprt,
    U32 earfcn
   );
 extern S16 wrUmmMeasAllocCellCfg
   (
    WrUmmCellCb *cellCb,
    LwrCellMeasCfgGrp *measCfgParams
   );
 extern S16 wrUmmMeasCellReCfg
   (
    U16 cellId,
    LwrNeighFreqCfg *cellFreqCfg
   );
 extern S16 wrUmmMeasIntraCellReCfg
   (
    U16 cellId
   );
 extern S16 wrUmmMeasDeAllocCellCfgReq
   (
    U16 cellId
   );
 extern S16 wrUmmMeasInitialUeCfg
   (
    CmMemListCp *memCp,
    WrUeCb *ueCb,
    WrUmmMeasTransInfo *measTransCb,
    NhuMeasConfig *nhuMeasCfg,
    WrUmmTransCb *transCb,
    MeasInitCause cause
   );
 extern S16 wrUmmMeasCellReCfgParams
   (
    LwrCellMeasCfgGrp *cellCfgParams,
    LwrCellMeasCfgGrp *measReCfg
   );
 extern S16 wrUmmMeasNrFreqReCfgMod
   (
    WrUmmCellCb *cellCb,
    U8 numFreq,
    LwrNeighFreqAddModCfg *modMeasCfg
   );
 extern S16 wrUmmMeasNrFreqReCfgDel
   (
    WrUmmCellCb *cellCb,
    U8 numFreq,
    LwrNeighFreqDelCfg *delMeasCfg
   );
 extern S16 wrUmmMeasCsfbUtraFddCfg
   (
    WrUeCb *ueCb,
    WrUmmTransCb *transCb
   );
  extern S16 wrUmmMeasCsfbUtraTddCfg
   (
    WrUeCb *ueCb,
    WrUmmTransCb *transCb
   );
 extern S16 wrUmmMeasCsfbCdmaCfg
   (
    WrUeCb *ueCb,
    WrUmmTransCb *transCb
   );
 extern S16 wrUmmMeasGetArfcnAndRptType
  (
    U16 ueIdx,
    WrCellId cellId,
    NhuMeasResults *measRpt,
    WrUmmMeasRptInfo *measRptInfo
  );

extern Void wrUmmMeasGetNhuMeasCfgFrmReCfg
(
  NhuDatReqSdus *rrcReCfgMsg,
  NhuMeasConfig **nhuMeasCfg
);

extern Void wrUmmMeasGetNhuMeasCfgFrmReCfg
(
  NhuDatReqSdus *rrcReCfgMsg,
  NhuMeasConfig **nhuMeasCfg
);
extern S16 wrUmmMeasFillMeasIdObj
(
 U8 measID,
 NhuMeasIdToAddMod *measIdAddMod,
 CmLListCp *measIdLst
);
extern S16 wrUmmMeasFindMeasObjAndTyp
(
 WrUmmMeasObjInfo *measObjInfo,
 U8 measObjId,
 WrMeasUeCb *measUeCb
);
extern S16 wrUmmMeasFindRptCfgTyp
(
 U8 rptCfgId,
 WrMeasRptCfgType *rptCfgTyp,
 CmLListCp *rptCfgLst
);
extern S16 wrUmmMeasCfgDelNewPciObj
(
 WrUmmMeasObjInfo *measObjInfo,
 WrMeasUeCb *measUeCb
);
extern S16 wrUmmMeasCfgReCfgReqCompHand
(
 WrUmmMeasTyp measTyp,
 WrUmmTransCb *transCb
);
extern S16 wrUmmMeasSetFreeMeasIds
(
 WrUmmMeasTyp measTyp,
 WrUmmTransCb *transCb
);
extern S16 wrUmmMeasFindRptCfgID
(
 U8 *rptCfgId,
 WrUmmMeasRptCfgInfo *rptCfgInfo,
 CmLListCp *rptCfgLst
);
extern U8 wrUmmMeasCreatRptCfgObjInUeCb
(
 WrUmmMeasRptCfgInfo *rptCfgInfo,
 WrUeCb *ueCb,
 LwrCellMeasCfgGrp *measCellCfg
);
extern U8 wrUmmMeasCreatMeasIdNode
(
 WrUmmMeasTyp measIdTyp,
 U8 measObjId,
 U8 rptCfgId,
 WrMeasUeCb *measUeCb
);
extern S16 wrUmmMeasGetFreeMeasObjId
(
 WrMeasUeCb *measUeCb,
 U8 *measObjId
);
extern S16 wrUmmMeasSetFreeRptCfgId
(
 WrMeasUeCb *measUeCb,
 U8 rptCfgId
);
extern S16 wrUmmMeasCreateRptCfg
(
 U8 rptCfgId,
 WrUmmMeasRptCfgInfo *intRptCfg,
 WrMeasRptCfgNode *rptCfg,
 LwrCellMeasCfgGrp *measCellCfg,
 WrUeCb *ueCb
);
extern S16 wrUmmMeasUpdtEutraMeasObjAndIdFromArfcn
(
 U32 arfcn,
 WrMeasUeCb *measUeCb,
 U8 *measObjId,
 WrUmmMeasEutraMeasObjNode **cellCbMeasObj
);

extern U8 wrUmmMeasAddInterMeasObjToUeCb
(
 WrMeasUeCb *measUeCb,
 WrUmmMeasEutraMeasObjNode *cellCbMeasObj,
 U16 newPci
 );
extern S16 wrMeasFillNhuMsg
(
 CmMemListCp *memCp,
 NhuMeasConfig *nhuMeasCfg,
 WrUeCb *ueCb,
 WrUmmMeasTransInfo *measTransCb,
 LwrCellMeasCfgGrp *measCellCfg,
 U32 transId
);
extern S16 wrUmmMeasGetFreeRptCfgId
(
 WrMeasUeCb *measUeCb,
 U8 *rptCfgId
);
extern S16 wrUmmMeasUpdtCellEutraMeasObjFrmArfcn
(
 U32 arfcn,
 CmLListCp *interMeasObjLst,
 WrUmmMeasEutraMeasObjNode **enbMeasObj
);

extern S16 wrUmmMeasFillNhuRmvIdLst
(
CmMemListCp *memCp,
NhuMeasConfig *nhuMeasCfg,
WrUmmMeasRmvInfo *measTransCb
);
extern S16 wrUmmMeasFillNhuAddIdLst
(
CmMemListCp *memCp,
NhuMeasConfig *nhuMeasCfg,
WrUeCb *ueCb,
WrUmmMeasAddInfo *measTransCb
);
extern S16 wrUmmMeasFillRptCfgObj
(
U8 rptCfgId,
NhuReportConfigToAddModreportConfig *nhuRptCfgObj,
CmLListCp *rptCfgLst
);
extern S16 wrUmmMeasFillMeasGapCfg
(
WrUmmMeasGapStatus measGapStatus,
WrMeasUeCb *measUeCb,
NhuMeasGapConfig *nhuMeasGap
);
extern Void wrUmmMeasAddMeasGap
(
U32 reqModule,
WrUmmCellCb *cellCb,
WrUeCb *ueCb,
WrUmmMeasGapStatus *measGapStatus,
U32 reqModuleTransId
);

extern Void wrUmmMeasRelMeasGap
(
U32 reqModule,
WrUmmCellCb *cellCb,
WrUeCb *ueCb,
WrUmmMeasGapStatus *measGapStatus,
U32 reqModuleTransId
);

extern S16 wrUmmMeasUpdtCellUtraMeasObjFrmArfcn
(
U32 arfcn,
CmLListCp *utraMeasObjLst,
WrUmmMeasUtraMeasObjNode **utraMeasObj
);
extern U8 wrUmmMeasAddUtraMeasObjToUeCb
   (
    WrMeasUeCb *measUeCb,
    WrUmmMeasUtraMeasObjNode *cellCbMeasObj,
    U16 newPsc
   );
extern S16 wrUmmMeasGetMeasIdObj
    (
     U32 measID,
     WrMeasIdNode **measIdObj,
     CmLListCp *measIdLst
    );
extern S16 wrUmmFindNewPciFrmAnrMeasRpt
   (
    WrUmmMeasObjInfo *measObjInfo,
    NhuMeasResults *measRprt,
    WrUmmTransCb *transCb,
    U8 isEvntAnr
   );

extern U8 wrUmmMeasRptAndMeasIdCfg
   (
    WrUmmMeasTyp measIdTyp,
    U8 measObjId,
    WrUmmMeasRptCfgInfo *rptCfgInfo,
    WrUeCb *ueCb,
    LwrCellMeasCfgGrp *measCellCfg,
    WrUmmMeasAddInfo *measTransCb
   );
extern WrUmmIntAnrMeasMsg* wrUmmAnrMeasIntraNewPciCfg
   (
    WrUeCb *ueCb
   );
extern WrUmmIntAnrMeasMsg* wrUmmAnrMeasInterNewPciCfg
(
 CmLListCp *interNewPciLst
);

extern U16 wrUmmMeasGetRptAmtFrmEnum
   (
    U8 rptAmt
   );
extern S16 wrUmmAnrPrcRrcTmrExpiry
(
  WrUmmTransCb *transCb
);
extern S16 wrUmmStartPeriodicAnrTrans
(
   WrUeCb *ueCb
);
extern S16 wrUmmStopPeriodicAnr
(
   WrUeCb *ueCb
);
extern S16 wrUmmStartEventAnrTrans
(
   Bool reCfgReq,
   WrUeCb *ueCb
);
extern S16 wrUmmStopEventAnrTrans
(
   WrUeCb *ueCb
);
extern Void wrUmmMeasGetNhuMacMainCfgFrmReCfg
   (
    NhuDatReqSdus *rrcReCfgMsg,
    NhuMAC_MainConfig **macCfg
   );
extern Void wrUmmMeasResetTransCb
   (
    WrUmmMeasTransInfo *measTransCfg
   );

extern S16 wrUmmMeasDelPerdCfgInUeCb
   (
    WrMeasUeCb *measUeCb
   );
extern Void wrUmmMeasDeAllocMemForNewPciObj
   (
    CmLListCp *newPciLst
   );


 extern S16 wrUmmMeasRmvMeaIdInUeCb
      (
       U8 measId,
       CmLListCp *measIdLst
      );

 extern S16 wrUmmMeasSetFreeMeasId
      (
       WrMeasUeCb *measUeCb,
       U8 measId
      );

extern S16 wrUmmConfigurePeriodicANR(WrUeCb *ueCb);

extern S16 wrUmmMeasPrepareSendRrcRecfg
(
   U16 cellId,
   WrUeCb *ueCb,
   WrUmmMeasTransInfo *measTransCb,
   U32 transId
);

extern Void wrUmmDelIntraFreqNonCfgNewPciObj
(
  CmLListCp *newPciLLst
);

extern Void wrUmmDelInterFreqNonCfgNewPciObj
(
 CmLListCp *newPciFreqNode
);
extern S16 wrUmmCsfbGeranHdlMeasRpt
(
 WrUmmTransCb *transCb,
 NhuMeasResults *measRpt
);

extern S16 wrUmmGetUtraRscp
(
  NhuMeasResultUTRAmeasResult *utraMeasResult
);
extern U8 wrUmmGetUtraEcno
(
  NhuMeasResultUTRAmeasResult *utraMeasResult
);
extern U32 wrUmmGetUtraPscId
(
  NhuMeasResultUTRAphysCellId *phyCell
);
extern U8 wrUmmMeasAddGeranMeasObjToUeCb
(
 WrUmmMeasAddInfo *measTransInfo,
 WrUeCb *ueCb,
 WrUmmMeasGeranMeasObjNode *cellCbMeasObj,
 U16 newPsc
);
extern S16 wrUmmMeasUpdtGeranMeasObjAndIdFromArfcn
(
WrMeasUeCb *measUeCb,
U8 *measObjId,
WrMeasUeCbGeranMeasObjNode **cellCbMeasObj
);

extern Bool wrUmmChkIRATBndLstNeedFrGaps
(
 WrUeCb *ueCb,
 U8 *tgtBnd,
 U8 nghCnt
);

extern S16 wrUmmIRatGeranRedirHdlMeasRpt
(
 WrUeCb *ueCb,
 U8 event,
 NhuMeasResults *measRprt
);
typedef struct _wrGuGrupCbList
{
   CmHashListEnt guGrupHashEnt;
   WrGuGrpIdLst grupId;
   U8 guGrupIdArr[8];

   CmLListCp mmeList;
}WrGuGrupCbList;





typedef struct _wrGummeiMmeInfo
{
   CmLList lnk;
   Bool isLoaded;
   WrMmeCb *mmePtr;
}WrGummeiMmeInfo;



typedef struct _wrGummeiCbList
{
   CmHashListEnt gummeiHashEnt;
   U8 gummeiId[9];

   CmLListCp mmeIdList;
}WrGummeicbList;

typedef struct _wrGuGrupMmeInfo
{
   CmLList lnk;
   WrMmeCb *mmePtr;
}WrGuGrupMmeInfo;


extern S16 wrIncKpiFrRrcConAttmptd(U32 estabCause);



extern S16 wrIncKpiFrRrcConSuccd(U32 estabCause);




extern S16 wrIncKpiFrRrcCnFailDuToNoUuRsrc(U32 estabCause);

extern S16 wrIncKpiFrRrcConFaildEstabSum(Void);



extern S16 wrIncKpiFrRrcCnFailDuToDgrdRdio(U32 estabCause);



extern S16 wrIncKpiFrReestbAtmptdPrEtbCaus(U32 estabCause);



extern S16 wrIncKpiFrReestbSuccdPrEtabCaus(U32 estabCause);



extern S16 wrIncKpiFrReestbFaildPrEtabCaus(U32 estabCause);




extern S16 wrIncKpiFrERABEstbInitAttPrQci(U8 qciVal);



extern S16 wrIncKpiFrERABEstbIntSuccPrQci(U8 qciVal);



extern S16 wrIncKpiFrERABEstbInitFailSum(U16 numFailedErabs);



extern S16 wrIncKpiFrERABEstabAttPrQci(U8 qciVal);



extern S16 wrIncKpiFrERABEstabSuccPrQci(U8 qciVal);



extern S16 wrIncKpiFrERABFailPrCause(WrUmmMsgCause *cause);



extern S16 wrIncKpiFrERABReqToRelPrCause(WrUmmMsgCause *cause,U32 numRabs);


extern S16 wrIncKpiFrERABReqToRelPrQci(U8 qciVal);



extern S16 wrIncKpiFrERABRelAttPrQci(U8 qciVal);



extern S16 wrIncKpiFrERABRelSuccPrQci(U8 qciVal);



extern S16 wrIncKpiFrERABRelCmdPrCause(WrUmmMsgCause *cause);



extern S16 wrIncKpiFrERABModQoSAttPrQci(U8 qciVal);



extern S16 wrIncKpiFrERABMdQoSSuccNbrPrQci(U8 qciVal);



extern S16 wrIncKpiFrERABModFailPrCause(WrUmmMsgCause *cause);




extern S16 wrIncKpiUeCtxRelReqAttmptd(Void);



extern S16 wrIncKpiUeCtxRelReqSuccd(Void);



extern S16 wrIncKpiFrHovrAttmptd(U8 hovInf,U32 hovType,U8 hoDir,Void *hovCause,Void *kpiInfo);
extern S16 wrIncKpiFrHovrSuccd(U8 hovInf,U32 hovType,U8 hoDir,Void *hovCause,Void *kpiInfo);
extern S16 wrIncKpiFrHovrFaild(U8 hovType,U32 hov,U8 dir,Void *hovCause);


extern S16 wrIncKpiFrSrvccAttmptd(U32 hovType,U8 hoDir,Void *hovCause);
extern S16 wrIncKpiFrSrvccSucc(U32 hovType,U8 hoDir,Void *hovCause);
extern S16 wrIncKpiFrSrvccFail(U32 hovType,U8 hoDir,Void *hovCause);



extern S16 wrIncKpiFrOutX2BsdHovrAttmptd(WrUmmMsgCause *cztCause, WrEcgi *info);

extern S16 wrIncKpiFrOutS1BsdLTEHovAttmptd(SztCause *sztCause, WrEcgi *info);



extern S16 wrIncKpiFrOutX2BsdHovrSuccd(WrUmmMsgCause *cztCause, WrEcgi *info);

extern S16 wrIncKpiFrOutS1BsdLTEHovSuccd(SztCause *sztCause, WrEcgi *info);



extern S16 wrIncKpiFrOutX2BsdLTEHovFaild(CztCause *cztCause);

extern S16 wrIncKpiFrOutS1BsdLTEHovFaild(SztCause *sztCause);



extern S16 wrIncKpiFrIncX2BsdLTEHovAttmptd(WrUmmMsgCause *cztCause);

extern S16 wrIncKpiFrIncS1BsdLTEHovAttmptd(SztCause *sztCause);



extern S16 wrIncKpiFrIncX2BsdLTEHovSuccd(CztCause *cztCause);

extern S16 wrIncKpiFrIncS1BsdLTEHovSuccd(SztCause *sztCause);



extern S16 wrIncKpiFrIncX2BsdLTEHovFaild(CztCause *cztCause);

extern S16 wrIncKpiFrIncS1BsdLTEHovFaild(SztCause *sztCause);



extern S16 wrIncKpiFrS1BsdLTEtoUtrnHoAtmpt(SztCause *sztCause);



extern S16 wrIncKpiFrS1BsdLTEtoUtrnHoSuccd(SztCause *sztCause);



extern S16 wrIncKpiFrS1BsdLTEtoUtrnHoFaild(SztCause *sztCause);



extern S16 wrIncKpiFrS1BsdLTEtoGernHoAtmpt(SztCause *sztCause);



extern S16 wrIncKpiFrS1BsdLTEtoGernHoSuccd(SztCause *sztCause);



extern S16 wrIncKpiFrS1BsdLTEtoGernHoFaild(SztCause *sztCause);



extern S16 wrIncKpiFrOutIntrEnbHoPrpAtmpt(Void);

extern S16 wrIncKpiFrOutHoAtmptBsdOnFrqTyp(U8 freqTyp,Bool measGapUsd);
extern S16 wrIncKpiFrOutHoSuccdBsdOnFrqTyp(U8 freqTyp,Bool measGapUsd);


extern S16 wrIncKpiFrOutIntraFrqHoAttmptd(Void);



extern S16 wrIncKpiFrOutIntraFrqHoSuccd(Void);



extern S16 wrIncKpiFrHONoDrxOutAttmptd(Bool drxStatus);



extern S16 wrIncKpiFrHONoDrxOutSuccd(Bool drxStatus);



extern S16 wrIncKpiFrInterFrqHOGpAsstAtmpt(Bool measGapSetUp);



extern S16 wrIncKpiFrInterFrqHOGpAsstSuccd(Bool measGapSetUp);


extern S16 wrIncKpiCsfbAtt(U8 redirTyp);
extern S16 wrIncKpiCsfbSucc(U32 ratType, U8 redirType);
extern S16 wrIncKpiCsfbFail(U8 redirTyp);
extern S16 wrIncKpiCsfbWithSi(U8 redirTyp);
extern S16 wrIncKpiFrRimAttmptd(Void);
extern S16 wrIncKpiFrRimSuccd(Void);
extern S16 wrIncKpiFrRimFaild(Void);
extern S16 wrIncKpiFullRecfgHo(Void);
extern S16 wrIncKpiFullReCfgReestb(Void);





extern S16 wrIncKpiFrS1SIGConnEstabSucc(Void);




extern S16 wrIncKpiFrS1SIGConnEstabAttmptd(Void);






extern S16 wrIncKpiFrInboundCsgMobilityAttmptd(Void);



extern S16 wrIncKpiFrInboundCsgMobilitySuccd(Void);



extern S16 wrIncKpiFrInboundCsgMobilityFaild(Void);



extern S16 wrIncKpiFrCsgUeAttachSuccd (Void);



extern S16 wrIncKpiFrS1apFailCause(U32 causeType, U32 causeVal, U32 val);

extern S16 wrIncKpiFrS1apFailCauseForRadioNW(U32 causeVal, U32 val);

extern S16 wrIncKpiFrS1apFailCauseForTransport(U32 causeVal, U32 val);

extern S16 wrIncKpiFrS1apFailCauseForNas(U32 causeVal, U32 val);

extern S16 wrIncKpiFrS1apFailCauseForProtocol(U32 causeVal, U32 val);

extern S16 wrIncKpiFrS1apFailCauseForMisc(U32 causeVal, U32 val);





extern S16 wrIncKpiFrEgtpFailure(U32 causeVal);

extern S16 wrIncKpiFrRlcFailure(Void);





extern S16 wrIncKpiFrRrcSecFailCause(Void);

extern S16 wrIncKpiFrRrcS1apFailCause(Void);

extern S16 wrIncKpiFrRrcPdcpFailCause(Void);

extern S16 wrIncKpiFrRrcRlcFailCause(Void);

extern S16 wrIncKpiFrRrcMacFailCause(Void);

extern S16 wrIncKpiFrRrcRrcFailCause(Void);

extern S16 wrIncKpiFrRrcConReject(U8 cause);

extern S16 wrUpdateRrcConnEstabTimeMeanMax(U32 estabCause,EpcTime rrcConReqRcvdTm,EpcTime rrcConCmplRcvdTm);
extern S16 wrUpdateErabEstabTimeMeanMax(U32 qciType,EpcTime ErabReqRcvdTm,EpcTime ErabEstabTm);
extern S16 wrIncKpiPredfndIntrvlTmrExpiry(Void);
extern S16 wrKpiResetKpiInfo(S16 evnt);
extern Void IncFapKpiByIntVal(U16 Id, U32 incVal);
extern Void IncFapKpiByRealVal(U16 Id,F32 incVal);
extern Void KpisInfoSentNotification(Void);
extern S16 wrSendKpisInfo(Void);

extern S16 wrKpiStopKpiCollecPrcCfm(Void);
extern S16 wrKpiStopKpiCollecPrc(Void);
extern S16 wrKpiInitKpiInfo(S16 evnt, Bool l2CollecEna);
extern S16 wrKpiStartKpiCollecPrc(Bool l2CollecEna);
extern S16 wrKpiDInitKpiInfo(Void);
extern S16 wrIncKpiIncHoSuccAftrReEst(Void);
extern Void wrIncIratMobLai
(
 WrCellId cellId,
 WrPlmnId plmnId,
 U16 lac
);
typedef enum __kpiValueType
{
   KPI_VALUE_TYPE_INTEGER,
   KPI_VALUE_TYPE_REAL,
   KPI_VALUE_TYPE_INVALID
}KpiValueType;
typedef struct rrcConMeanInfo
{
   U32 numOfRrcCon;
   U32 numOfRrcConEmergency;
   U32 numOfRrcConHighPriorAcc;
   U32 numOfRrcConMtAcc;
   U32 numOfRrcConMoSig;
   U32 numOfRrcConMoData;
   U32 numOfRrcConDelTolAcc;
   U32 meanOfNumOfRrcCon;
}RrcConMeanInfo;

typedef struct rrcConnEstabTimeMeanInfo
{
   U32 emergency;
   U32 highPriorityAccess;
   U32 mtAccess;
   U32 moSignalling;
   U32 moData;
   U32 delayTolAccess;
}RrcConnEstabTimeMeanInfo;


typedef struct erabMeanInfo{
   U32 numOfEarb;
   U32 meanOfNumOfErab;
}ErabMeanInfo;




typedef struct csgUeMeanInfo{
   U32 numOfCsgUe;
   U32 meanOfNumOfCsgUe;
}CsgUeMeanInfo;



typedef struct wrKpiMeanInfo
{
   RrcConMeanInfo rrcConnMean;
   RrcConnEstabTimeMeanInfo rrcConnEstabTimeSum;
   U32 erabEstabTimeMeanPrQci[9];

   U32 noOfSuccEstERabs[9];

   ErabMeanInfo erabMean;
   CsgUeMeanInfo csgUeMean;
}WrKpiMeanInfo;


typedef struct rrcConMaxInfo
{
   U32 numOfRrcCon;
   U32 maxNmOfRrcCon;
}RrcConMaxInfo;


typedef struct rrcConnEstabTimeMaxInfo
{
   U32 emergency;
   U32 highPriorityAccess;
   U32 mtAccess;
   U32 moSignalling;
   U32 moData;
   U32 delayTolAccess;
}RrcConnEstabTimeMaxInfo;

typedef struct erabMaxInfo
{
   U32 numOfErab;
   U32 maxOfNumOfErab;
}ErabMaxInfo;


typedef struct wrKpiMaxInfo
{
   RrcConMaxInfo rrcConnMax;
   RrcConnEstabTimeMaxInfo rrcConnEstabTimeMax;
   U32 erabEstabTimeMaxPrQci[9];
   ErabMaxInfo erabMax;
}WrKpiMaxInfo;
typedef struct wrKpiInfo
{
   Bool startCollec;
   U32 kpiMeasPrd;
   EpcTime startTime;
   EpcTime endTime;
   WrKpiMeanInfo kpiMeanInfo;
   WrKpiMaxInfo kpiMaxInfo;
   CmTimer kpiPredfndIntrvlTmr;
   U32 kpiPredfndIntrvlTmrVal;
   Bool kpiCollectionTmrExpry;
   Bool l2CollecEna;
}WrKpiInfo;

extern WrKpiInfo kpiInfo;



typedef enum
{
   KP_INST_TYPE_NONE =0,
   KP_INST_TYPE_ECGI,
   KP_INST_TYPE_NONE_INVALID
}KpiInstType;


typedef struct kpiInstTypeeCgi
{
   U8 numMncDigs;
   U8 mcc[3];
   U8 mnc[3];
   U32 cellId;
}KpiInstTypeeCgi;

typedef struct kpiInstInfo
{
   KpiInstType kpiInstType;
   union
   {
      KpiInstTypeeCgi eCgi;
   } u;

}KpiInstInfo;


extern Void IncFapKpiByIntValMInst(U32 Id, U32 incVal, KpiInstInfo mInfoVal);
extern Void IncFapKpiByRealValMInst(U32 Id, F32 incVal, KpiInstInfo mInfoVal);
typedef struct tipPacket
{
   uint16_t srcModId;
   uint16_t dstModId;
   uint16_t cellId;
   uint16_t msgId;
   uint32_t transId;
   uint16_t pktLen;
   uint8_t spare[2];
   uint8_t message[1];
} TipPacket;




typedef struct initInd
{
   int8_t l2IpAddr[16];
} InitInd;




typedef struct initReq
{
   int8_t l2uIpAddr[16];
   int8_t l2lIpAddr[16];
} InitReq;





typedef struct initRsp
{
   uint8_t spare[4];
} InitRsp;
void rlSetLogPath(const char* logDir);





void rlInitLog(U8 type);







void rlSetLogFile(const char* fileName);





void rlSetLogPort(U32 port);




void rlSetLogLevel(R_LOG_LEVEL logLevel);





void rlSetModuleMask(U32 modMask);



void rlSetLogFileSizeLimit(U32 maxFileSize);




void rlSetNumOfLogFiles(U8 nMaxFiles);





void rlSetCircularBufferSize(U32 bufSize);




void rlSetRemoteLoggingFlag(S32 flag);




int rlHandleConInput(char ch);




void rlEnableDisableCore(S32 enable_core);



void rlEnaBleBufferedIO(void);



extern void rlUpdateRlogTti(void);



extern void rlResetLogRateLmt(void);



extern void rlResetLogRateLmt(void);




extern void rlStartLogCountLimit(void);



extern void rlStopLogCountLimit(void);
typedef enum tipModName
{
   TIP_MOD_RRC,
   TIP_MOD_DATARELAY,
   TIP_MOD_RLC,
   TIP_MOD_PDCP,
   TIP_MOD_MAC,
   TIP_MOD_PHY,
   TIP_MOD_END
} TipModId;

typedef enum tipIntfMsgId
{
   TIP_MSG_MAC_INIT_IND,
   TIP_MSG_MAC_INIT_REQ,
   TIP_MSG_MAC_INIT_RSP,
   TIP_MSG_RLC_INIT_IND,
   TIP_MSG_RLC_INIT_REQ,
   TIP_MSG_RLC_INIT_RSP,
   TIP_MSG_PDCP_INIT_IND,
   TIP_MSG_PDCP_INIT_REQ,
   TIP_MSG_PDCP_INIT_RSP,
   TIP_MSG_HEARTBEAT_REQ,
   TIP_MSG_HEARTBEAT_RSP,
   TIP_MSG_MAC_CELLCONFIG_REQ,
   TIP_MSG_MAC_CELLCONFIG_RSP,
   TIP_MSG_MAC_CELLRECONFIG_REQ,
   TIP_MSG_MAC_CELLRECONFIG_RSP,
   TIP_MSG_MAC_CELLDELETE_REQ,
   TIP_MSG_MAC_CELLDELETE_RSP,
   TIP_MSG_MAC_BROADCASTMSG_REQ,
   TIP_MSG_MAC_BROADCASTMSG_RSP,
   TIP_MSG_MAC_UECONFIG_REQ,
   TIP_MSG_MAC_UECONFIG_RSP,
   TIP_MSG_MAC_UERECONFIG_REQ,
   TIP_MSG_MAC_UERECONFIG_RSP,
   TIP_MSG_MAC_UEDELETE_REQ,
   TIP_MSG_MAC_UEDELETE_RSP,
   TIP_MSG_MAC_CELLSTART_IND,
   TIP_MSG_RLC_CMNCHNL_CONFIG_REQ,
   TIP_MSG_RLC_CMNCHNL_CONFIG_RSP,
   TIP_MSG_RLC_CMNCHNL_DELETE_REQ,
   TIP_MSG_RLC_CMNCHNL_DELETE_RSP,
   TIP_MSG_RLC_UECONFIG_REQ,
   TIP_MSG_RLC_UECONFIG_RSP,
   TIP_MSG_RLC_UERECONFIG_REQ,
   TIP_MSG_RLC_UERECONFIG_RSP,
   TIP_MSG_RLC_UEDELETE_REQ,
   TIP_MSG_RLC_UEDELETE_RSP,
   TIP_MSG_RRC_CCCHMSG_IND,
   TIP_MSG_RLC_CCCHMSG_REQ,
   TIP_MSG_RLC_PCCHMSG_REQ,
   TIP_MSG_PHY_CELLCONFIG_REQ,
   TIP_MSG_PHY_CELLCONFIG_RSP,
   TIP_MSG_PHY_CELLDELETE_REQ,
   TIP_MSG_PHY_CELLDELETE_RSP,
   TIP_MSG_L3_TTI_IND,
   TIP_MSG_L2_UERELEASE_IND,
   TIP_MSG_RLC_SDU_STATUS_IND,
   TIP_MSG_PDCP_MSG_IND,
   TIP_MSG_RLC_DATAMSG_REQ,
   TIP_MSG_RLC_DATADISCARD_REQ,
   TIP_MSG_END
} TipIntfMsgId;

extern char *tipModName[TIP_MOD_END];
extern char *tipIntfMsgName[TIP_MSG_END];
extern S16 tipUnpkAppMacMsg(Pst* pst,Buffer* mBuf);
extern S16 tipUnpkMacAppMsg(Pst* pst,Buffer* mBuf);
extern S16 tipUnpkL1AppMsg(Pst* pst,Buffer* mBuf);
extern S16 tipL3ProcessInitMsg(Buffer* mBuf);

extern S16 tipUnpkAppL1Msg(Pst* pst,Buffer* mBuf);
extern S16 tipUnpkAppRlcMsg(Pst* pst,Buffer* mBuf);
extern S16 tipUnpkRlcAppMsg(Pst* pst,Buffer* mBuf);
extern S16 tipUnpkRlcPdcpMsg(Pst* pst,Buffer* mBuf);

extern S16 tipBldSendInitInd( U32 srcModId, U32 msgId);
extern S16 tipSendToL3(U32 msgLen, U8* buf);
extern S16 tipSendToCLL2(U32 msgLen, U8* buf);
extern S16 tipSendToDLL2(U32 msgLen, U8* buf);
extern S16 tipSendToCUL2(U32 msgLen, U8* buf);
extern S16 tipSendToDUL2(U32 msgLen, U8* buf);
extern S16 InitUL2DrvrTsk (Void);
extern S16 InitUL2TipSockTsk (Void);
extern S16 InitL3DrvrTsk (Void);
extern S16 InitL3TipSockTsk (Void);
extern S16 InitLL2TipSockTsk (Void);
extern S16 tipBldSendInitReq( U32 dstModId, U8 cellIdx);
extern S16 tipModuleInitDone(U8 cellIdx);
extern S16 tipHdlInitReq( TipPacket *pkt);
extern S16 tipCheckIsL2Ready();
extern S16 tipSendCtfUeCfgReq(TipPacket *hdr,Pst *nPst);
extern S16 tipSendCtfUeDelReq(TipPacket *hdr,Pst *nPst);
typedef enum tipVmAssocState
{
   TIP_NO_ASSOCIATION,
   TIP_INIT_IND_RECEIVED,
   TIP_INIT_REQ_SENT,
   TIP_INIT_RSP_RECEIVED
} TipVmAssocState;





typedef enum tipVMOverallState
{
   TIP_INIT_PENDING,
   TIP_INIT_SYNC_SUCCESSFUL
} TipVMOverallState;

typedef struct tipVmAssocInfo
{
  U16 cellId;
  CmTptAddr l2uIpAddr;
  CmTptAddr l2uEgtpIpAddr;
  CmTptAddr l2lIpAddr;
  TipVmAssocState pdcpAssocState;
  TipVmAssocState rlcAssocState;
  TipVmAssocState macAssocState;
  U32 pdcpInitReqTransId;
  U32 rlcInitReqTransId;
  U32 macInitReqTransId;
  TipVMOverallState vmOverallState;
} TipVmAssocInfo;

typedef struct tipDrvrTskIpProcIdInfo
{
  U16 cellId;
  U32 ul2ProcId;
  U32 ll2ProcId;
  CmTptAddr l2uIpAddr;
  CmTptAddr l2lIpAddr;
} TipDrvrTskIpProcIdInfo;
U16 wrPciRange[14] = {4, 8, 12, 16, 24, 32, 48, 64,84, 96, 128,
                        168, 252, 504};


CmTptAddr upperL2Addr;


extern U32 numTtiTicks;
 WrCb wrCb;
 WrEmmCb wrEmmCb;
extern U32 wrUmmNumUeCnt;

extern U32 tipFetchUl2EgtpIpAddrFromCellId (U16 cellId);
extern S16 wrEmmS1FlexInitS1FlexVarForEmmCb(void);
 U32 wrEmmGetS1PrepTmrVal(void);
 U32 wrEmmGetS1OvrAllTmrVal(void);
 WrNrUtranFreqCb* wrEmmAnrGetFreqNode
(
U16 arfcnDl,
WrNrUtranCb *utranCb
);

 S16 wrEmmGetDatAppAddr
(
U16 cellId,
CmTptAddr **addr,
U8 type
)
{


     upperL2Addr.type = 4;
     upperL2Addr.u.ipv4TptAddr.address = tipFetchUl2EgtpIpAddrFromCellId(cellId);
     upperL2Addr.u.ipv4TptAddr.port = 2152;
     *addr = &upperL2Addr;
   return(0);
}
extern S16 wrEmmGetTai
(
WrUeCb *ueCb,
WrTai *tai
);
extern S16 wrEmmGetCgiFromUeCb
(
 WrUeCb *ueCb,
 WrCgi *cgi
);
extern S16 wrEmmInitUeGetCgi
(
 WrUeCb *ueCb,
 WrCgi *cgi
);

 S16 wrEmmGetNeighUtraSIInfo
(
WrUmmRedirectInfo *redirectInfo
);

 const S8* wrEmmPrintCellState
(
 U8 state
);
extern S16 wrEmmSendSchedEnbCfg
(
 LwrSchedEnbCfg *schedEnbCfg
);
 S16 wrEmmCheckPRem
(
)
{
   if(smCb.prem == 1)
   {
      if (wrUmmNumUeCnt == 1)
      {
         smBuildShutRestart();
      }
   }
   return(0);
}
 S16 wrEmmSetupS1
(
WrMmeId mmeId
)
{
   wrEmmMmeSetup (mmeId);
   return(0);
}
 S16 wrEmmUpdateCellState
(
WrCellId cellId,
WrCellState state
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if (cellCb == 0L)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30001,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0,                                     "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                                     222      , "Invalid CellId received for" "updating cell state", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                      ;
      return(1);
   }
   cellCb->cellState = state;
   return(0);
}
 S16 wrEmmResetCell
(
WrCellId cellId
)
{

   WrCellCb *cellCb;
   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if (cellCb == 0L)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30002,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0,                       "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                       259      , "Invalid CellId received for Cell" "reset", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                        ;
      return(1);
   }

   if((WR_CELL_STATE_RESET == cellCb->cellState) || (WR_CELL_STATE_INIT == cellCb->cellState))
   {
      if( L_INFO < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevS(0x30003, L_INFO,wrEmmPrintCellState(cellCb->cellState), "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",265, "Cell State is %s", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(0);
   }

   cellCb->cellState = WR_CELL_STATE_RESET;

   if(0 != wrUmmUpdateCellState(cellId,WR_CELL_STATE_RESET))
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30004,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",273, "Updation of Cell State to WR_CELL_STATE_RESET Failed", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }
   if (0 != wrEmmMmeEnbRst(cellCb))
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30005, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",278, "Failed to send eNB reset to MME", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }

   return(0);
}
 S16 wrEmmGetCgiFromUeCb
(
WrUeCb *ueCb,
WrCgi *cgi
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == ueCb->cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30006,L_ERROR,DBG_CELLID, ueCb->cellId, 0, 0, 0, 0,                                "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                                306      , "Invalid CellId while getting" "CGI from UE CB", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                 ;
      return(1);
   }

   cgi->plmnId = ueCb->plmnId;
   cgi->cellId = cellCb->sib1.cellIdentity;
   return(0);
}

 S16 wrEmmGetCgi
(
WrCellId cellId,
WrCgi *cgi
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30007,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",326, "Invalid cellId received while getting CGI", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }

   cgi->plmnId = cellCb->sib1.plmns[0].plmnId;
   cgi->cellId = cellCb->sib1.cellIdentity;
   return(0);
}
 S16 wrEmmGetTai
(
WrUeCb *ueCb,
WrTai *tai
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == ueCb->cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30008,L_ERROR,DBG_CELLID, ueCb->cellId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",355, "Invalid CellId received while getting TAI", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }

   tai->plmnId = ueCb->plmnId;
   tai->tac = cellCb->sib1.tac;
   return(0);
}
 S16 wrEmmGetCellSizeType
(
WrCellId cellId,
U8 *cellSizeType
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x30009, L_ERROR, cellId, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",385, "Invalid CellId[%d] received while getting Cell Size Type", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }

   *cellSizeType = cellCb->cellSizeType;
   return(0);
}
 LwrSchedEnbCfg *wrGetSchedEnbCfg
(
)
{
   return(&wrEmmCb.schedEnbCfg);
}
 S16 wrEmmRrcCellCfgCfm
(
U16 cellId
)
{

   wrIfmSchMacCellStartReq(cellId);
   return(0);
}
 S16 wrEmmRrcCellDelCfgCfm
(
U16 cellId
)
{
   U16 mmeIdx = 0;
   U8 cfgLyr = 0;
   S16 retVal = 0;
   U8 idx = 0;
   WrCellCb *cellCb = 
                     ((void *)0)
                         ;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if (cellCb == 0L)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x3000a,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",466, "Invalid cellId received for RRC cell delete confirmation", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }
   if(0 != wrEmmAnrProcessIntraFreqChg(cellId))
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x3000b, L_ERROR, cellId, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",485, "RRC cell delete confirmation failed due to failure in changing intra frequency %d", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }
   if (0 != wrEmmPbmCellDel(cellCb))
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x3000c, L_ERROR,cellId, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      , 491      , "RRC cell delete confirmation failed due to failure received from PBM for cell deletion." "CellId =%d", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                ;
      return(1);
   }

   if (0 != wrEmmPbmCellCfg(cellCb))
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x3000d, L_ERROR,cellId, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      , 498      , "RRC cell delete confirmation failed due to failure received from PBM for cell deletion." "CellId =%d", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                ;
      return(1);
   }

   if(0 != wrEmmUmmMeasReCfg(cellId))
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x3000e, L_ERROR, cellId, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      , 505      , "RRC cell delete confirmation failed due to failure received" "from UMM for cell reconfiguration.CellId is %d", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                                     ;
      return(1);

   }

   if( L_INFO < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x3000f,L_INFO,DBG_CELLID, cellCb->cellId, 0, 0, 0, 0,                                                                     "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"   ,                                                                     511   , "Cell state = INIT, Reason = Cell delete confirmation", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                                      ;

   cellCb->cellState = WR_CELL_STATE_INIT;

   if(0 != wrUmmUpdateCellState(cellId,WR_CELL_STATE_INIT))
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30010,L_ERROR,DBG_CELLID, cellCb->cellId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",517, "Updation of cell state to WR_CELL_STATE_INIT failed", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }

   while (mmeIdx < wrEmmCb.mmeCont.numMmes)
   {
      if(wrEmmCb.mmeCont.mmes[idx])
      {
         if(wrEmmCb.mmeCont.mmes[idx]->state == 2)
         {
            cfgLyr = 1;
            break;
         }
         mmeIdx++;
      }
      idx++;
   }

   if(cfgLyr == 1)
   {
      retVal = wrFillNhuCellCfgReq(cellCb);
   }
   else
   {
      if( L_WARNING < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30011,L_WARNING,DBG_CELLID, cellId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",541, "No MME association is present", RLOG_FILE_ID, RLOG_MODULE_NAME); };
   }

   return(retVal);
}
 S16 wrEmmUmmMeasReCfg
(
WrCellId cellId
)
{
   return(wrUmmMeasIntraCellReCfg(cellId));
}
 S16 wrEmmSchdEnbCfgCfm
(
U32 transId,
U8 status
)
{
   if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30012, L_DEBUG,                                                                      "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"   ,                                                                      580   , "wrEmmSchdEnbCfgCfm: EnodeB Scheduler Configuration Received", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                                       ;
   if (status != 1)
   {

      if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30013, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",584, "ALARM!! EnodeB Scheduler Configuration Failed", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }
   return(0);
}
 S16 wrEmmSchdCellCfgCfm
(
U32 transId,
U8 status
)
{
   WrCellCb *cellCb = 0L;


   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == transId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30014,L_ERROR,DBG_CELLID, transId, 0, 0, 0, 0,                                              "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                                              611      , "Failed to process cell confirmation received from scheduler." "Invalid cell id is received.", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                               ;
      return(1);
   }


   if (status != 1)
   {

      if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30015, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",619, "ALARM!! Scheduler cell configuration failed", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }


   if (wrEmmPbmSibConfig((U16)transId) != 0)
   {
      if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30016, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",626, "ALARM!! Scheduler SI configuration error", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }
   if (wrEmmCellCfgDam(cellCb) != 0)
   {
      if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30017, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",642, "ALARM!! Data application configuration error", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }

   if ((smCb.reCfg == 1)&&(smCb.prem == 0))
   {
      if( L_EVENT < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30018, L_EVENT, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",648, "CTF cell reconfiguration", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      if (wrFillCtfCellReCfgReq(cellCb->cellId) != 0)
      {
         if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30019, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",651, "Cell reconfiguration request failed", RLOG_FILE_ID, RLOG_MODULE_NAME); };
         return(1);
      }
      else
      {
         if( L_INFO < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x3001a, L_INFO, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",656, "Cell reconfiguration request successful", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      }
      return(0);
   }
   smCb.prem = 0;
   return(0);
}
 S16 wrEmmTrigUtraRirProc
(
 CmLListCp *lst,
 U8 reptType,
 U8 *status,
 WrRimReqInfo *rimReqInfo
)
{
   CmLList *lnk = 0L;
   CmLListCp *nrLst = 0L;
   CmLList *link = 0L;
   WrNrUtranFreqCb *utranFreqNode = 0L;
   WrUtraNeighCellCb *utraCellCb = 0L;


   lnk = lst->first;

   while( 0L != lnk)
   {
      utranFreqNode = (WrNrUtranFreqCb*)lnk->node;
      nrLst = &utranFreqNode->nrWlLst;
      link = nrLst->first;
      while( 0L != link)
      {
         utraCellCb = (WrUtraNeighCellCb*)link->node;
         link = link->next;
         if(( 1 == utraCellCb->isRimSupported ) &&
               ((( WR_RIM_RIR_MULTI == reptType) &&
                 ( 0 == utraCellCb->rimState )) ||
                (( WR_RIM_RIR_STOP == reptType) &&
                 ( 1 == utraCellCb->rimState ))))
         {

            rimReqInfo->appId = WR_RIM_APP_UTRA_SI;
            rimReqInfo->rptCellId.ratChoice = 1 ;
            rimReqInfo->rptCellId.t.utraCell.cId = utraCellCb->cId;
            rimReqInfo->rptCellId.t.utraCell.rncId = utraCellCb->rncId;
            wrUtlCopyPlmnId(&(utraCellCb->plmnId[0]),
                  &(rimReqInfo->rptCellId.t.utraCell.plmnId));



            rimReqInfo->dstAddr.ratChoice = 1;
            rimReqInfo->dstAddr.t.rncIdentity.lac = utraCellCb->lac;
            rimReqInfo->dstAddr.t.rncIdentity.rncId = utraCellCb->rncId;
            rimReqInfo->dstAddr.t.rncIdentity.rac = utraCellCb->rac;
            wrUtlCopyPlmnId(&(utraCellCb->plmnId[0]),
                  &(rimReqInfo->dstAddr.t.rncIdentity.plmnId));


            if(0 == wrEmmRimInfoReq(rimReqInfo))
            {
               if( WR_RIM_RIR_MULTI == reptType)
               {
                  utraCellCb->rimState = 1;
                  *status = 1;

                  wrIncKpiFrRimAttmptd();
               }
               else if ( WR_RIM_RIR_STOP == reptType)
               {
                  utraCellCb->rimState = 0;
               }
               if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev3(0x3001b, L_DEBUG,utraCellCb->lac, utraCellCb->rncId, utraCellCb->rac, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"               , 759               , "Rim Info request has been initiated for Utra Cell" "with lac [%d] rncId[%ld] rac[%ld]", RLOG_FILE_ID, RLOG_MODULE_NAME); }

                                                       ;
            }
            else
            {
               if( L_WARNING < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev3(0x3001c, L_WARNING,utraCellCb->lac, utraCellCb->rncId, utraCellCb->rac, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"               , 765               , "Rim Info request has been failed for Utra Cell" "with lac [%d] rncId[%ld] rac[%ld]", RLOG_FILE_ID, RLOG_MODULE_NAME); }

                                                       ;
            }
         }
      }
      lnk = lnk->next;
   }

   return(0);
}
 S16 wrEmmTrigRirProc
(
 WrCellCb *cellCb,
 U8 reptType
)
{
   WrRimReqInfo rimReqInfo;
   CmLListCp *lst = 0L;
   WrGeranCellCb *geranCellCb = 0L;
   CmLList *listNode = 0L;
   U8 status = 0;



   rimReqInfo.reptType = reptType;
   rimReqInfo.srcAddr.ratChoice = 2;
   rimReqInfo.srcAddr.t.eutraIdentity.enbId = wrEmmCb.enbId;
   rimReqInfo.srcAddr.t.eutraIdentity.enbType = wrEmmCb.enbType;
   rimReqInfo.srcAddr.t.eutraIdentity.tac = cellCb->sib1.tac;
   wrUtlCopyPlmnId(&(cellCb->sib1.plmns[0].plmnId),
         &(rimReqInfo.srcAddr.t.eutraIdentity.plmnId));




   geranCellCb = (WrGeranCellCb *)
      ((((listNode) = ((&cellCb->nrCb->geranCb.geranNrCellLst)->crnt = (&cellCb->nrCb->geranCb.geranNrCellLst)->first)) != 0L) ? (listNode)->node : 0L)
                     ;
   while(geranCellCb != 0L)
   {
      if(( 1 == geranCellCb->isRimSupported ) &&
            ((( WR_RIM_RIR_MULTI == reptType) &&
              ( 0 == geranCellCb->rimState )) ||
             (( WR_RIM_RIR_STOP == reptType) &&
              ( 1 == geranCellCb->rimState ))))
      {

         rimReqInfo.appId = WR_RIM_APP_NACC;
         rimReqInfo.rptCellId.ratChoice = 0;
         rimReqInfo.rptCellId.t.geranCell.ci = geranCellCb->cId;
         rimReqInfo.rptCellId.t.geranCell.lac = geranCellCb->lac;
         rimReqInfo.rptCellId.t.geranCell.rac = geranCellCb->rac;
         wrUtlCopyPlmnId(&(geranCellCb->plmnId),
               &(rimReqInfo.rptCellId.t.geranCell.plmnId));


         rimReqInfo.dstAddr.ratChoice = 0;
         rimReqInfo.dstAddr.t.geranCellId.ci = geranCellCb->cId;
         rimReqInfo.dstAddr.t.geranCellId.lac = geranCellCb->lac;
         rimReqInfo.dstAddr.t.geranCellId.rac = geranCellCb->rac;
         wrUtlCopyPlmnId(&(geranCellCb->plmnId),
               &(rimReqInfo.dstAddr.t.geranCellId.plmnId));


         if(0 == wrEmmRimInfoReq(&rimReqInfo))
         {
            if( WR_RIM_RIR_MULTI == reptType)
            {
               geranCellCb->rimState = 1;
               status = 1;

               wrIncKpiFrRimAttmptd();
            }
            else if( WR_RIM_RIR_STOP == reptType)
            {
               geranCellCb->rimState = 0;
            }
            if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev3(0x3001d, L_DEBUG,geranCellCb->cId, geranCellCb->lac, geranCellCb->rac, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"            , 863            , "Rim Info request has been initiated for GERAN Cell" "with ci [%d] lac[%ld] rac[%ld]", RLOG_FILE_ID, RLOG_MODULE_NAME); }

                                                    ;
         }
         else
         {
            if( L_WARNING < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev3(0x3001e, L_WARNING,geranCellCb->cId, geranCellCb->lac, geranCellCb->rac, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"            , 869            , "Rim Info request has been failed for GERAN Cell" "with ci [%d] lac[%ld] rac[%ld]", RLOG_FILE_ID, RLOG_MODULE_NAME); }

                                                    ;
         }
      }
      geranCellCb = (WrGeranCellCb *)
         ((((listNode) = ((&cellCb->nrCb->geranCb.geranNrCellLst)->crnt = ((&cellCb->nrCb->geranCb.geranNrCellLst)->crnt ? (&cellCb->nrCb->geranCb.geranNrCellLst)->crnt->next : (&cellCb->nrCb->geranCb.geranNrCellLst)->first)))!= 0L) ? (listNode)->node : 0L)
                        ;
   }





   lst = &cellCb->nrCb->utranCb.utranFreqList;
   wrEmmTrigUtraRirProc(lst, reptType, &status, &rimReqInfo);





   lst = &cellCb->nrCb->utranTddCb.utranFreqList;
   wrEmmTrigUtraRirProc(lst, reptType, &status, &rimReqInfo);



   if( 1 == status)
   {
      wrStartTmr((U32)cellCb, WR_TMR_RIM_OVERALL, wrEmmCb.tmrCfg.rimOvrlTmr);
      if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x3001f, L_DEBUG, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",896, "RIM overall timer has been started.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
   }

   return(0);

}
static WrUtraNeighCellCb* wrEmmGetUtraCellCb
(
 WrCellCb *cellCb,
 WrRimRptCell *rptCellId
)
{
   CmLListCp *lst = 0L;
   CmLList *lnk = 0L;
   CmLListCp *nrLst = 0L;
   CmLList *link = 0L;
   WrNrUtranFreqCb *utranFreqNode = 0L;
   WrUtraNeighCellCb *utraCellCb = 0L;


   lst = &cellCb->nrCb->utranCb.utranFreqList;
   lnk = lst->first;

   while( 0L != lnk)
   {
      utranFreqNode = (WrNrUtranFreqCb*)lnk->node;
      nrLst = &utranFreqNode->nrWlLst;
      link = nrLst->first;
      while( 0L != link)
      {
         utraCellCb = (WrUtraNeighCellCb*)link->node;
         if( (utraCellCb->cId == rptCellId->t.utraCell.cId) &&
             (utraCellCb->rncId == rptCellId->t.utraCell.rncId) &&
             (wrEmmPlmnPlmnsEqual(&(utraCellCb->plmnId[0]),
                                  &(rptCellId->t.utraCell.plmnId))))
         {
            return(utraCellCb);
         }
         link = link->next;
      }
      lnk = lnk->next;
   }


   lst = &cellCb->nrCb->utranTddCb.utranFreqList;
   lnk = lst->first;

   while( 0L != lnk)
   {
      utranFreqNode = (WrNrUtranFreqCb*)lnk->node;
      nrLst = &utranFreqNode->nrWlLst;
      link = nrLst->first;
      while( 0L != link)
      {
         utraCellCb = (WrUtraNeighCellCb*)link->node;
         if( (utraCellCb->cId == rptCellId->t.utraCell.cId) &&
             (utraCellCb->rncId == rptCellId->t.utraCell.rncId) &&
             (wrEmmPlmnPlmnsEqual(&(utraCellCb->plmnId[0]),
                                  &(rptCellId->t.utraCell.plmnId))))
         {
            return(utraCellCb);
         }
         link = link->next;
      }
      lnk = lnk->next;
   }

   return(0L);
}
static WrGeranCellCb* wrEmmGetGeranCellCb
(
 WrCellCb *cellCb,
 WrRimRptCell *rptCellId
)
{
   WrGeranCellCb *geranCellCb = 0L;
   CmLList *listNode = 0L;

   geranCellCb = (WrGeranCellCb *)
      ((((listNode) = ((&cellCb->nrCb->geranCb.geranNrCellLst)->crnt = (&cellCb->nrCb->geranCb.geranNrCellLst)->first)) != 0L) ? (listNode)->node : 0L)
                     ;
   while(geranCellCb != 0L)
   {
      if(( geranCellCb->cId == rptCellId->t.geranCell.ci) &&
         ( geranCellCb->lac == rptCellId->t.geranCell.lac) &&
         ( geranCellCb->rac == rptCellId->t.geranCell.rac) &&
         ( wrEmmPlmnPlmnsEqual(&(geranCellCb->plmnId),
                                 &(rptCellId->t.geranCell.plmnId))))
      {
         return(geranCellCb);
      }
      geranCellCb = (WrGeranCellCb *)
         ((((listNode) = ((&cellCb->nrCb->geranCb.geranNrCellLst)->crnt = ((&cellCb->nrCb->geranCb.geranNrCellLst)->crnt ? (&cellCb->nrCb->geranCb.geranNrCellLst)->crnt->next : (&cellCb->nrCb->geranCb.geranNrCellLst)->first)))!= 0L) ? (listNode)->node : 0L)
                        ;
   }

   return(0L);
}
 Void wrEmmDelGeranSi
(
 WrGeranCellCb *geranCellCb
)
{
   U8 idx = 0;
   U8 siLen = 0;

   siLen =((WR_RIM_SI == geranCellCb->siPsiType)?
            21 : 22);
   for(idx = 0;idx < geranCellCb->noOfsiPsi;idx++)
   {
      if(0L != geranCellCb->siOrPsi[idx])
      {
         if(0L != geranCellCb->siOrPsi[idx]->val)
         {
            { (Void) SPutSBuf(0, 0, (Data *) geranCellCb->siOrPsi[idx]->val, (Size) siLen); (geranCellCb->siOrPsi[idx]->val) = 0L;}
                        ;
         }
         { (Void) SPutSBuf(0, 0, (Data *) geranCellCb->siOrPsi[idx], (Size) sizeof(TknStrOSXL)); (geranCellCb->siOrPsi[idx]) = 0L;}
                                  ;
      }
   }
   return;
}
 S16 wrEmmRimErrInd
(
 WrRimErrInd *rimErrInd
)
{

   WrCellCb *cellCb = wrEmmCb.cellCb[0];
   WrUtraNeighCellCb *utraCellCb = 0L;
   WrGeranCellCb *geranCellCb = 0L;

 switch(rimErrInd->appId)
   {
      case WR_RIM_APP_UTRA_SI:
         {
            utraCellCb = wrEmmGetUtraCellCb(cellCb,&(rimErrInd->rptCellId));
            if(0L == utraCellCb)
            {

               if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev2(0x30020, L_ERROR,rimErrInd->rptCellId.t.utraCell.cId, rimErrInd->rptCellId.t.utraCell.rncId, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"               , 1101               , "Unable to fetch the UtraCellCb" "from the received rptCellId(cid = %d,rncId =%d)", RLOG_FILE_ID, RLOG_MODULE_NAME); }


                                                           ;
               return(1);
            }
            utraCellCb->rimState = 0;
            if(( 0L == utraCellCb->utraSI.val) &&
               (( 1 == rimErrInd->errType) ||
                ( 2 == rimErrInd->errType) ||
                ( 3 == rimErrInd->errType)))
            {

                  wrIncKpiFrRimFaild();
            }

            if(0L != utraCellCb->utraSI.val)
            {
               { (Void) SPutSBuf(0, 0, (Data *) utraCellCb->utraSI.val, (Size) utraCellCb->utraSI.len); (utraCellCb->utraSI.val) = 0L;};
            }
            break;
         }
      case WR_RIM_APP_NACC:
         {
            geranCellCb = wrEmmGetGeranCellCb(cellCb,&(rimErrInd->rptCellId));
            if(0L == geranCellCb)
            {

               if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev3(0x30021, L_ERROR, rimErrInd->rptCellId.t.geranCell.ci, rimErrInd->rptCellId.t.geranCell.lac, rimErrInd->rptCellId.t.geranCell.rac, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"               , 1130               , "Unable to fetch the geranCellCb" "from the received rptCellId(cellId =%d,lac =%d,rac = %d)", RLOG_FILE_ID, RLOG_MODULE_NAME); }



                                                          ;
               return(1);
            }
            geranCellCb->rimState = 0;
            if(( 0 == geranCellCb->noOfsiPsi) &&
               (( 1 == rimErrInd->errType) ||
                ( 2 == rimErrInd->errType) ||
                ( 3 == rimErrInd->errType)))
            {

                  wrIncKpiFrRimFaild();
            }
            if(geranCellCb->noOfsiPsi)
            {
                 wrEmmDelGeranSi(geranCellCb);
            }
            break;
         }
      default:
            break;
   }
   return(0);
}
 S16 wrEmmRimInfoRsp
(
 WrEmmRimRspInfo *riInfo
)
{
   WrCellCb *cellCb = wrEmmCb.cellCb[0];
   WrUtraNeighCellCb *utraCellCb = 0L;
   WrGeranCellCb *geranCellCb = 0L;
   U8 siLen = 0;
   U8 idx = 0;
   S16 ret = 0;

   switch(riInfo->appId)
   {
      case WR_RIM_APP_UTRA_SI:
         {
            utraCellCb = wrEmmGetUtraCellCb(cellCb,&(riInfo->rptCellId));
            if( 0L == utraCellCb)
            {

               if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev2(0x30022, L_ERROR,riInfo->rptCellId.t.utraCell.cId, riInfo->rptCellId.t.utraCell.rncId, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"               , 1193               , "Unable to fetch the UtraCellCb" "from the received rptCellId(cid =%d,rncId =%d)", RLOG_FILE_ID, RLOG_MODULE_NAME); }


                                                        ;
               if( 0L != riInfo->app.utraSI.val)
               {
                  { (Void) SPutSBuf(0, 0, (Data *) riInfo->app.utraSI.val, (Size) riInfo->app.utraSI.len); (riInfo->app.utraSI.val) = 0L;};
               }
               return(1);
            }
            if(( WR_RIM_RI_END == riInfo->rptType) ||
                  ( WR_RIM_RI_STOP == riInfo->rptType) ||
                  ( 1 == riInfo->appErrCause.pres))
            {
               utraCellCb->rimState = 0;
               if( 0L != utraCellCb->utraSI.val)
               {
                  { (Void) SPutSBuf(0, 0, (Data *) utraCellCb->utraSI.val, (Size) utraCellCb->utraSI.len); (utraCellCb->utraSI.val) = 0L;};
               }
               if( 1 == riInfo->appErrCause.pres)
               {

                  wrIncKpiFrRimFaild();
               }
            }
            else
            {
               if( WR_RIM_RI_INIT_MULTI == riInfo->rptType)
               {

                  wrIncKpiFrRimSuccd();
               }

               if( 0L != utraCellCb->utraSI.val)
               {
                  { (Void) SPutSBuf(0, 0, (Data *) utraCellCb->utraSI.val, (Size) utraCellCb->utraSI.len); (utraCellCb->utraSI.val) = 0L;};
               }
               utraCellCb->utraSI = riInfo->app.utraSI;
            }
            break;
         }
      case WR_RIM_APP_NACC:
         {
            geranCellCb = wrEmmGetGeranCellCb(cellCb,&(riInfo->rptCellId));
            if( 0L == geranCellCb)
            {
               if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev3(0x30023, L_ERROR, riInfo->rptCellId.t.geranCell.ci, riInfo->rptCellId.t.geranCell.lac, riInfo->rptCellId.t.geranCell.rac, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"               , 1240               , "Unable to fetch the geranCellCb" "from the received rptCellId(ci =%d,lac =%d,rac = %d)", RLOG_FILE_ID, RLOG_MODULE_NAME); }



                                                       ;
               if( 0L != riInfo->app.nacc.si.val)
               {
                  siLen =( WR_RIM_SI ==riInfo->app.nacc.siType)?
                     21 : 22 ;
                  { (Void) SPutSBuf(0, 0, (Data *) riInfo->app.nacc.si.val, (Size) (riInfo->app.nacc.noOfSi * siLen)); (riInfo->app.nacc.si.val) = 0L;}
                                                          ;
               }
               return(1);
            }
            if(( WR_RIM_RI_END == riInfo->rptType) ||
                  ( WR_RIM_RI_STOP == riInfo->rptType) ||
                  ( 1 == riInfo->appErrCause.pres))
            {
               geranCellCb->rimState = 0;

               if(geranCellCb->noOfsiPsi)
               {
                  wrEmmDelGeranSi(geranCellCb);
               }
               if( 1 == riInfo->appErrCause.pres)
               {

                  wrIncKpiFrRimFaild();
               }
            }
            else
            {
               if( WR_RIM_RI_INIT_MULTI == riInfo->rptType)
               {

                  wrIncKpiFrRimSuccd();
               }


               if(geranCellCb->noOfsiPsi)
               {
                  wrEmmDelGeranSi(geranCellCb);
               }

               geranCellCb->siPsiType = riInfo->app.nacc.siType;
               geranCellCb->noOfsiPsi = riInfo->app.nacc.noOfSi;
               siLen = ( WR_RIM_SI == riInfo->app.nacc.siType)?
                  21 : 22 ;
               for(idx = 0 ;(( idx < geranCellCb->noOfsiPsi) &&
                        ( idx < 10)) ; idx++)
               {

                  { if (SGetSBuf(0, 0, (Data **)(&(geranCellCb->siOrPsi[idx])), sizeof(TknStrOSXL)) == 0) { { cmMemset((U8 *)((*&(geranCellCb->siOrPsi[idx]))), 0, sizeof(TknStrOSXL));}; } else { (*&(geranCellCb->siOrPsi[idx])) = 0L; } }
                                           ;
                  if( 0L == geranCellCb->siOrPsi[idx])
                  {
                     if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30024, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",1292, "Memory allocation failed for geranCellCb->siOrPsi.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
                     ret = 1;
                     break;
                  }
                  { if (SGetSBuf(0, 0, (Data **)(&(geranCellCb->siOrPsi[idx]->val)), siLen) == 0) { { cmMemset((U8 *)((*&(geranCellCb->siOrPsi[idx]->val))), 0, siLen);}; } else { (*&(geranCellCb->siOrPsi[idx]->val)) = 0L; } }
                              ;
                  if( 0L == geranCellCb->siOrPsi[idx]->val)
                  {
                     if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30025, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",1300, "Memory allocation failed for geranCellCb->siOrPsi[idx]->val.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
                     ret = 1;
                     break;
                  }
                  else
                  {
                     cmMemcpy((U8 *)(geranCellCb->siOrPsi[idx]->val),
                           (U8 *)&(riInfo->app.nacc.si.val[idx * siLen]),
                           siLen);
                  }
               }

               { (Void) SPutSBuf(0, 0, (Data *) riInfo->app.nacc.si.val, (Size) (riInfo->app.nacc.noOfSi * siLen)); (riInfo->app.nacc.si.val) = 0L;}
                                                       ;
               if( 1 == ret)
               {
                  wrEmmDelGeranSi(geranCellCb);
                  geranCellCb->rimState = 0;
               }
            }
            break;
         }
      default:
            break;
   }
   return(0);
}
 S16 wrEmmRimTrigRirStop
(
 WrCellCb *cellCb
)
{

   wrStopTmr((U32)cellCb, WR_TMR_RIM_OVERALL);
   if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30026, L_DEBUG, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",1350, "Stopping RIM overall timer", RLOG_FILE_ID, RLOG_MODULE_NAME); };


   wrEmmTrigRirProc(cellCb,WR_RIM_RIR_STOP);

   return(0);
}
 S16 wrEmmRimNghStateChange
(
 WrCellCb *cellCb
)
{

   CmLListCp *lst = 0L;
   CmLList *lnk = 0L;
   CmLListCp *nrLst = 0L;
   CmLList *link = 0L;
   WrNrUtranFreqCb *utranFreqNode = 0L;
   WrUtraNeighCellCb *utraCellCb = 0L;
   WrGeranCellCb *geranCellCb = 0L;
   CmLList *listNode = 0L;



   geranCellCb = (WrGeranCellCb *)
      ((((listNode) = ((&cellCb->nrCb->geranCb.geranNrCellLst)->crnt = (&cellCb->nrCb->geranCb.geranNrCellLst)->first)) != 0L) ? (listNode)->node : 0L)
                     ;
   while(geranCellCb != 0L)
   {
      if(( 1 == geranCellCb->isRimSupported ) &&
         ( 1 == geranCellCb->rimState))
      {
         geranCellCb->rimState = 0;
         if(geranCellCb->noOfsiPsi)
         {
            wrEmmDelGeranSi(geranCellCb);
         }
      }
      geranCellCb = (WrGeranCellCb *)
         ((((listNode) = ((&cellCb->nrCb->geranCb.geranNrCellLst)->crnt = ((&cellCb->nrCb->geranCb.geranNrCellLst)->crnt ? (&cellCb->nrCb->geranCb.geranNrCellLst)->crnt->next : (&cellCb->nrCb->geranCb.geranNrCellLst)->first)))!= 0L) ? (listNode)->node : 0L)
                        ;
   }



   lst = &cellCb->nrCb->utranCb.utranFreqList;
   lnk = lst->first;
   while( 0L != lnk)
   {
      utranFreqNode = (WrNrUtranFreqCb*)lnk->node;
      nrLst = &utranFreqNode->nrWlLst;
      link = nrLst->first;
      while( 0L != link)
      {
         utraCellCb = (WrUtraNeighCellCb*)link->node;
         link = link->next;
         if(( 1 == utraCellCb->isRimSupported ) &&
            ( 1 == utraCellCb->rimState))
         {
            utraCellCb->rimState = 0;
            if( 0L != utraCellCb->utraSI.val)
            {
               { (Void) SPutSBuf(0, 0, (Data *) utraCellCb->utraSI.val, (Size) utraCellCb->utraSI.len); (utraCellCb->utraSI.val) = 0L;};
            }
         }
      }
      lnk = lnk->next;
   }



   lst = &cellCb->nrCb->utranTddCb.utranFreqList;
   lnk = lst->first;
   while( 0L != lnk)
   {
      utranFreqNode = (WrNrUtranFreqCb*)lnk->node;
      nrLst = &utranFreqNode->nrWlLst;
      link = nrLst->first;
      while( 0L != link)
      {
         utraCellCb = (WrUtraNeighCellCb*)link->node;
         link = link->next;
         if(( 1 == utraCellCb->isRimSupported ) &&
            ( 1 == utraCellCb->rimState))
         {
            utraCellCb->rimState = 0;
            if( 0L != utraCellCb->utraSI.val)
            {
               { (Void) SPutSBuf(0, 0, (Data *) utraCellCb->utraSI.val, (Size) utraCellCb->utraSI.len); (utraCellCb->utraSI.val) = 0L;};
            }
         }
      }
      lnk = lnk->next;
   }

   return(0);
}




 S16 wrEmmSchdCellReCfgCfm
(
U32 transId,
U8 status
)
{
   WrCellCb *cellCb = 0L;

   if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30027, L_DEBUG,                                                                          "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"   ,                                                                          1479   , "Scheduler reconfiguration confirm is recived and filling SIs", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                                           ;
   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == transId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30028,L_ERROR,DBG_CELLID, transId, 0, 0, 0, 0,                                               "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                                               1484      , "Invalid CellId received in cell" "reconfiguration confirmation.", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                ;
      return(1);
   }

   if (status != 1)
   {

      if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30029, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",1491, "ALARM!! Scheduler cell re-configuration failed", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(0);
   }

   if (wrEmmCb.cellCb[0]->pendReCfgPres)
   {
      cellCb->pendReCfgPres = 0;
      if( wrEmmPbmSibConfig((U16)transId) != 0)
      {
         if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x3002a, L_ERROR,transId, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",1500, "ALARM!! Scheduler SI configuration error.TransId[%ld]", RLOG_FILE_ID, RLOG_MODULE_NAME); };
         return(0);
      }
   }
   return(0);
}


 S16 wrEmmSendEnbConfigTransfer
(
Void
)
{
   return(0);
}

 S16 wrEmmPrcPhyCfgCfm
(
U32 transId,
U8 status
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == transId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if (cellCb == 0L)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x3002b,L_ERROR,DBG_CELLID, transId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",1536, "Failed to send phy confirmation.Invalid cellid received", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }

   if (status == 1)
   {
      if( L_INFO < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x3002c, L_INFO,transId, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",1542, "ALARM!! Cell is UP Cell Id %ld", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      if (WR_CELL_STATE_INIT == cellCb->cellState)
      {
         if( L_INFO < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x3002d,L_INFO,DBG_CELLID, cellCb->cellId, 0, 0, 0, 0,                                                                    "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"         ,                                                                    1546         , "Cell state = UP, Reason = PHY Configuration Confirm", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                                     ;

         cellCb->cellState = WR_CELL_STATE_UP;
      }

      if(0 != wrUmmUpdateCellState(transId,WR_CELL_STATE_UP))
      {
         if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x3002e,L_ERROR,DBG_CELLID, transId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",1564, "Updation of cell state to WR_CELL_STATE_UP failed", RLOG_FILE_ID, RLOG_MODULE_NAME); };
         return(1);

      }


      wrEmmTrigRirProc(cellCb, WR_RIM_RIR_MULTI);






   }
   else if((status != 1) && (WR_CELL_STATE_UP != cellCb->cellState))
   {
      if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x3002f, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",1580, "ALARM!! Cell UP failed at PHY", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }
   return(0);
}
 S16 wrEmmS1apProcPdu
(
SztUDatEvnt *uDatEvnt
)
{
   wrEmmMmePrcRcvdPdu (uDatEvnt->peerId.val, uDatEvnt->pdu);
   return(0);
}
 S16 wrEmmGetMmeByPlmn
(
WrPlmnId *plmnId,
WrMmeId *mme
)
{
   return(wrEmmPlmnGetMmeByPlmn(plmnId, mme));
}
 S16 wrEmmGetMmeByMmec
(
U8 mmeCode,
WrMmeId *mmeId
)
{
   return(wrEmmMmeGetMmeByMmec(mmeCode, mmeId));
}


 S16 wrEmmInit
(
Void
)
{
   U32 idx;
   S16 ret;

   wrEmmCb.numCells = 12;
   { if (SGetSBuf(0, 0, (Data **)(&wrEmmCb.cellCb), wrEmmCb.numCells * sizeof(WrCellCb *)) == 0) { { cmMemset((U8 *)((*&wrEmmCb.cellCb)), 0, wrEmmCb.numCells * sizeof(WrCellCb *));}; } else { (*&wrEmmCb.cellCb) = 0L; } };
   if (wrEmmCb.cellCb == 0L)
   {
      if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30030, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",1654, "Memory allocation failed while initialising EMM.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }
   for(idx = 0; idx < wrEmmCb.numCells; idx++)
   {
      wrEmmCb.cellCb[idx] = 0L;
   }
   cmInitTimers(&(wrEmmCb.enbCfgWaitTmr), 1);
   cmInitTimers(&(wrEmmCb.enbCfgRspTmr), 1);
   cmInitTimers(&(wrEmmCb.enbResetRspTmr), 1);
   cmInitTimers(&(wrEmmCb.sib8Tmr), 1);
   cmInitTimers(&(wrEmmCb.rimOvrlTmr), 1);


   ret = cmHashListInit(&wrEmmCb.neighEnbLstCp, 32 ,
                           0 , 0,
                           4,
                           wrEmmCb.init.region, wrEmmCb.init.pool);
   if (0!= ret)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30031, L_ERROR,                                                                                            "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                                                                                            1675      , "Initialisation of EMM failed due to failure in the hash list initilization ", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                                                             ;
      return(1);
   }
   wrEmmS1FlexInitS1FlexVarForEmmCb();
   wrEmmCb.numGuGrpIds = 1;
   wrEmmCb.guGrpIdLst[0].mmeGrpId = 1;

   return(0);
}

 S16 wrEmmSchdTtiInd
(
RgrTtiIndInfo *ttiInd
)
{

   wrPbmTTIInd(ttiInd);

   { (Void) SPutSBuf(0, 0, (Data *) ttiInd, (Size) sizeof(RgrTtiIndInfo)); (ttiInd) = 0L;};
   return(0);
}

 S16 wrEmmSchdSiCfgCfm
(
U32 transId,
U8 status
)
{
  U16 Id;
  WrCellId cellId;
  WrCellCb *cellCb;

  S16 retVal;



  Id = transId & 0xffff;
  cellId = transId >> 16;

  if (status != 0x00 )
  {
     if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30032, L_ERROR,                                     "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"     ,                                     1717     , "SI CFG CFM is FAILED!!!! ", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                      ;
     return(1);
  }

  { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
  if (cellCb == 0L)
  {
     if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30033,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",1724, "Failed to get the cellCb.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
     return(1);
  }


  if(WR_CELL_STATE_UP != cellCb->cellState)
  {
     retVal = wrFillNhuCellCfgReq(cellCb);
     if(retVal != 0)
     {
        if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30034, L_ERROR,                                               "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"        ,                                               1735        , "NHU Cell CFG Req is FAILED!!!! ", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                ;
        return(1);
     }
  }
   return(0);
}



 S16 wrEmmSchdWrngSiCfgCfm
(
U32 transId,
U8 status
)
{
  U16 Id;
  WrCellId cellId;


  Id = transId & 0xffff;
  cellId = transId >> 16;

    if(status == 0x01)
    {
         if( L_INFO < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30035, L_INFO, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",1829, "Warning SI's CFG CFM is success", RLOG_FILE_ID, RLOG_MODULE_NAME); };
         wrPwsHndlSchdCfgCfm(cellId, transId);
    }
    else if(status == 0x0F)
    {
           if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30036, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",1834, "Warning SI's CFG CFM failed.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
           wrPwsHndlSchdCfgFail(cellId, transId);
    }

   return(0);
}





 S16 wrEmmSchdStopWrngSiCfgCfm
(
U32 transId,
U8 status
)
{
  U16 Id;
  WrCellId cellId;


  Id = transId & 0xffff;
  cellId = transId >> 16;

    if(status == 0x00)
    {
         if( L_INFO < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30037, L_INFO,                                                          "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"         ,                                                          1861         , "Stop Warning SI's CFG CFM is success", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                           ;
         wrPwsHndlStopWrngSiCfgCfm(cellId, transId);
    }
    else if(status == 0x0F)
    {
           if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30038, L_ERROR,                                                           "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"           ,                                                           1867           , "Stop Warning SI's CFG CFM failed.", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                            ;

    }

   return(0);
}







 S16 wrEmmPrcS1StaInd
(
SztStaInd *sztSta
)
{

   wrEmmMmePrcStaInd(sztSta);
   return(0);
}
 U16 wrEmmGetServCarrierFreq
(
U16 cellId
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }}
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30039,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",1914, "Invalid cell id received while getting serving carrier frequency", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }

   return(cellCb->dlCarrierFreq);
}
 U16 wrEmmGetPhyCellId
(
U16 cellId
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }}
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x3003a,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",1944, "Invalid CellId received for getting PCI", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }
   return(cellCb->physCellId);
}
 S16 wrEmmGetMaxUeSupport
(
U16 cellId,
U16 *pMaxUeSupp
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }}
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x3003b,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0,                                             "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                                             1976      , "Invalid cellId received for" " getting max UEs supported.", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                              ;
      return(1);
   }
   *pMaxUeSupp = (U16)cellCb->maxUeSupp;
   return(0);
}
 U16 wrEmmGetDuplexMode
(
U16 cellId
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }}
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x3003c,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",2006, "Invalid cellId received while getting duplex mode.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return((U16)(-1));


   }
   return(cellCb->duplexMode);
}


 S16 wrEmmGetIntraLteHoNghInfo
(
U16 cellId,
WrHoNghInfo *hoNghInfo
)
{
   S16 ret = 0;
   WrCellCb *cellCb = 0L;
   WrEutranNeighCellCb *neighCellCb = 0L;
   WrNeighEnbCb *neighEnbCb = 0L;
   WrEutranNbrCellInfo nrInfo;
   WrUmmIntraLteHoNghInfo *intraLteHoNghInfo =
                                 &(hoNghInfo->t.intraLteNghInfo);

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x3003d,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0,                                           "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                                           2033      , "Invalid cellId for getting intra Lte" "HO neighbour information.", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                            ;
      return(1);
   }
   nrInfo.phyCellId = intraLteHoNghInfo->pci;
   nrInfo.earfcn = intraLteHoNghInfo->earfcn;
   neighCellCb = wrEmmAnrGetEutranNr(&cellCb->nrCb->eutranCb, &nrInfo);

   if(neighCellCb == 0L)
   {
      if( L_WARNING < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x3003e, L_WARNING, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",2042, "Failed to get neighbor cell control block", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }
   neighCellCb->numTtiTicks = numTtiTicks;


   ret = cmHashListFind(&(wrEmmCb.neighEnbLstCp),
         (U8 *)&neighCellCb->enbId,sizeof(neighCellCb->enbId),0,(U32 *)&neighEnbCb);
   if( ret != 0)
   {
      if( L_WARNING < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x3003f, L_WARNING, neighCellCb->enbId, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      , 2053      , "Failed To get neighbor eNodeB control block [enbId : %ld]", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                 ;
      return(1);
   }

   hoNghInfo->peerId = neighEnbCb->peerId;
   intraLteHoNghInfo->enbType = neighEnbCb->enbType;


   intraLteHoNghInfo->eutranCellId = neighCellCb->eCgi.eutranCellId;
   cmMemcpy((U8 *)&hoNghInfo->plmnId,
        (U8 *)&neighCellCb->enbPlmn, sizeof(neighCellCb->enbPlmn));
   intraLteHoNghInfo->neighEnbAddr = neighEnbCb->neighEnbAddr;

   intraLteHoNghInfo->neighEnbCb = (U32)neighEnbCb;
   hoNghInfo->neighCellCb = (U32)neighCellCb;

   intraLteHoNghInfo->isX2Connected = neighEnbCb->x2Connection;
   intraLteHoNghInfo->tac = neighCellCb->tac;

   intraLteHoNghInfo->pci = neighCellCb->pci;
   intraLteHoNghInfo->earfcn = neighCellCb->earfcnDl;

   hoNghInfo->csgId = neighCellCb->csgId;
   hoNghInfo->isCsgInfoDiscovered = neighCellCb->isCsgIdResolved;
   hoNghInfo->csgCellAccessMode = neighCellCb->csgAccessMode;


   return(0);
}
 U8 wrEmmGetNumTxAnt
(
 U16 cellId
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }}
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30040,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",2105, "Invalid cellId received", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }
   if( L_INFO < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x30041, L_INFO,cellCb->numTxAntenna, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",2108, "Number of TX antenna = %d", RLOG_FILE_ID, RLOG_MODULE_NAME); };
   return(cellCb->numTxAntenna);
}
 U32 wrEmmGetRrcUeCapTmrVal
(
U16 cellId
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }}
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30042,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",2134, "Failed to get RRC UE capability timer value.Invalid cellId received", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }
   return(cellCb->tmrCfg.rrcUeCapabilityEnquiryTmr);
}
 U32 wrEmmGetRrcSecModTmrVal
(
U16 cellId
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }}
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30043,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0,                                               "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                                               2166      , "Invalid CellId received for getting" "RRC security mode timer value", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                ;
      return(1);
   }
   return(cellCb->tmrCfg.rrcSecurityModeCommandTmr);
}
 U32 wrEmmGetRrcConTmrVal
(
U16 cellId
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }}
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x30044, L_ERROR,cellId, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      , 2198      , "Invalid cell id [%d] received for getting RRC connection timer" "Value.", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                    ;
      return(1);
   }
   return(cellCb->tmrCfg.rrcConnectionSetupTmr);
}
 U32 wrEmmGetRrcReestabTmrVal
(
U16 cellId
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }}
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30045,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0,                                                          "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                                                          2229      , "Invalid cellId received for getting RRC" "connection re-establishment timer value.", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                           ;
      return(1);
   }
   return(cellCb->tmrCfg.rrcConnectionReEstablishTmr);
}
 U32 wrEmmGetRrcConRelTmrVal
(
U16 cellId
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }}
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30046,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0,                                                            "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                                                            2260      , "Invalid CellId received for" "getting RRC connection release timer value", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                             ;
      return(1);
   }
   return(cellCb->tmrCfg.rrcConnectionReleaseTmr);
}
 U32 wrEmmGetRrcReCfgTmrVal
(
U16 cellId
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }}
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30047,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0,                                                         "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                                                         2289      , "Invalid CellId received for getting RRC" "connection reconfiguration timer value.", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                          ;
      return(1);
   }
   return(cellCb->tmrCfg.rrcConnectionReconfigTmr);
}
 S16 wrEmmGetT304IRATTmrVal
(
U16 cellId,
U32 *val
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }}
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30048,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0,                                       "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                                       2319      , "Invalid CellId received for getting" "T304 IRAT timer value", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                        ;
      return(1);
   }
   *val = cellCb->ueTmrConstants.ccoT304;
   return(0);
}
 S16 wrEmmGetT301TmrVal
(
 U16 cellId,
 U32 *val
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }}
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30049,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0,                                   "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                                   2350      , "Invalid cellId received for getting" "T301 timer value.", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                    ;
      return(1);
   }


   switch(cellCb->sib2.t301)
   {
      case NhuUE_TmrsAndConstst301ms100Enum:
         *val = 100;
         break;
      case NhuUE_TmrsAndConstst301ms200Enum:
         *val = 200;
         break;
      case NhuUE_TmrsAndConstst301ms300Enum:
         *val = 300;
         break;
      case NhuUE_TmrsAndConstst301ms400Enum:
         *val = 400;
         break;
      case NhuUE_TmrsAndConstst301ms600Enum:
         *val = 600;
         break;
      case NhuUE_TmrsAndConstst301ms1000Enum:
         *val = 1000;
         break;
      case NhuUE_TmrsAndConstst301ms1500Enum:
         *val = 1500;
         break;
      case NhuUE_TmrsAndConstst301ms2000Enum:
         *val = 2000;
         break;
   }

   return(0);
}
 S16 wrEmmGetTmrVal
(
 U16 cellId,
 U32 tmr,
 U32 *tmrval
 )
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x3004a,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0,                              "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                              2414      , "Invalid CellId received for getting" "timer value.", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                               ;
      return(1);
   }
   *tmrval = 0;
   switch (tmr)
   {
      case WR_UMM_INT_LTE_S1_PREP_TMR:
         {
            *tmrval = cellCb->tmrCfg.s1HandoverPrepTmr;
         }
         break;
      case WR_UMM_IRAT_S1_PREP_TMR:
         {
            *tmrval = cellCb->tmrCfg.s1IRatHandoverPrepTmr;
         }
         break;

      case WR_UMM_INT_LTE_S1_OVRL_TMR:
         {
            *tmrval = cellCb->tmrCfg.s1RelocOverallTmr;
         }
         break;

      case WR_UMM_IRAT_S1_OVRL_TMR:
         {
            *tmrval = cellCb->tmrCfg.s1IRatRelocOverallTmr;
         }
         break;



      case WR_TMR_SRC_HO_CANCEL:
         {
            *tmrval = cellCb->tmrCfg.s1HandoverCancelTmr;
         }
         break;

      default:
         {
            if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x3004b, L_ERROR,tmr, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",2453, "Invalid or *UNDEFINED* timer [%d]", RLOG_FILE_ID, RLOG_MODULE_NAME); };
            return(1);
         }
   }
   return(0);
}
 S16 wrEmmGetOffsetFreqFrmArfcn
(
 U16 cellId,
 U16 arfcn,
 U8 *offsetFreq
)
{
   WrEutranFreqCb *neighFreqCb = 0L;
   CmLList *neighFreqLnk = 0L;
   WrCellCb *cellCb;

   ;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }}
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x3004c,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0,                                               "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                                               2490      , "Invalid cellId received for getting" " offset frequency from ArFcn.", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                ;
      return(1);
   }

   neighFreqLnk = cellCb->eutranNbrFreqLst.first;
   while(neighFreqLnk != 0L)
   {
      neighFreqCb = (WrEutranFreqCb*)neighFreqLnk->node;
      if(neighFreqCb->dlEarfcn == arfcn)
      {
         *offsetFreq = neighFreqCb->offsetFreq;
         return(0);
      }
      neighFreqLnk = neighFreqLnk->next;
   }
   return(1);
}
 WrNrUtranFreqCb* wrEmmAnrGetFreqNode
(
   U16 arfcnDl,
   WrNrUtranCb *utranCb
)
{
   CmLListCp *lst = 0L;
   CmLList *lnk = 0L;
   WrNrUtranFreqCb *lnkFreqNode = 0L;

   ;;

   lst = &utranCb->utranFreqList;

   lnk = lst->first;

   while(lnk != 0L)
   {
      lnkFreqNode = (WrNrUtranFreqCb*)lnk->node;

      if(lnkFreqNode->arfcn == arfcnDl)
      {
         return(lnkFreqNode);
      }
      lnk = lnk->next;
   }

   return(0L);

}
 S16 wrEmmGetNeighUtraSIInfo
(
WrUmmRedirectInfo *redirectInfo
)
{

   WrNrUtranFreqCb *freqNode = 0L;
   WrUtraNeighCellCb *nbrUtraCellNode = 0L;
   WrUmmUtraRedirectInfo *utraRedirectInfo = &redirectInfo->val.utraInfo;
   WrCellCb *emmCellCb = 0L;
   CmLListCp *utraCellLst = 0L;
   CmLList *nbrUtraCelllnk = 0L;
   U8 index1 = 0;
   U8 index2 = 0;

   ;;
   { U32 _idx; emmCellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == redirectInfo->cellId) { emmCellCb = wrEmmCb.cellCb[_idx]; } } }};
   if (0L == emmCellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x3004d,L_ERROR,DBG_CELLID, redirectInfo->cellId, 0, 0, 0, 0,                                                                    "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                                                                    2579      , "Invalid CellId" "received for getting neighbour Utra SI information", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                                     ;
      return(1);
   }

   freqNode = wrEmmAnrGetFreqNode(utraRedirectInfo->arfcn,
         &emmCellCb->nrCb->utranCb);

   if (0L == freqNode)
   {
      if( L_WARNING < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x3004e, L_WARNING,utraRedirectInfo->arfcn, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      , 2589      , "Failed to get neighbour Utra SI information.ArfcnDl is invalid [%d]", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                     ;
      return(1);
   }

   utraCellLst = &freqNode->nrWlLst;
   if (0L == utraCellLst)
   {
      if( L_WARNING < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x3004f, L_WARNING, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",2596, "Failed to get neighbour Utra SI information.UtraCellLst is NULL", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }

   for(index1 = 0, index2 = 0;
         index1 < utraRedirectInfo->noOfPscs; index1++)
   {



      nbrUtraCelllnk = utraCellLst->first;
      while (nbrUtraCelllnk != 0L)
      {
         nbrUtraCellNode = (WrUtraNeighCellCb*) nbrUtraCelllnk->node;
         if (nbrUtraCellNode != 0L)
         {
            if(nbrUtraCellNode->t.utraFdd.psc ==
                  utraRedirectInfo->utraCellRedirInfo[index1].pscId)
            {




               if(nbrUtraCellNode->utraSI.pres == 1 )
               {
                  utraRedirectInfo->utraCellRedirInfo[index2].utraSI =
                     nbrUtraCellNode->utraSI;
                  utraRedirectInfo->utraCellRedirInfo[index2].pscId =
                     nbrUtraCellNode->t.utraFdd.psc;



                  index2++;
               }
               break;
            }
         }
         nbrUtraCelllnk = nbrUtraCelllnk->next;
      }
   }


   utraRedirectInfo->noOfPscs = index2;

   return(0);
}
 Bool wrEmmGetNeighUtraTddSIInfo
(
 U16 psc,
 U16 arfcn,
 U16 cellId,
 TknStrOSXL *utraSI
 )
{
   WrUtraNeighCellCb *utraNeighCellCb = 0L;

   utraNeighCellCb = (WrUtraNeighCellCb *) wrEmmGetNeighUtraCell(cellId,
         arfcn, psc, 1);

   if(0L == utraNeighCellCb)
   {
      return(0);
   }

   if(utraNeighCellCb->utraSI.pres == 1)
   {
      (*utraSI) = utraNeighCellCb->utraSI;
      return(1);
   }

   return(0);
}
 WrNrUtranCb* wrEmmGetUtranCb
(
 WrCellId cellId,
 U8 duplexMode
)
{
   WrCellCb *cellCb = 0L;

   ;;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30050,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0,                           "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                           2709      , "Invalid CellId received for getting" "Utran Cb.", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                            ;
      return(0L);
   }


 if (duplexMode == 0)
   {
    return (&cellCb->nrCb->utranCb);
 }
   else if (duplexMode == 1)
   {

      return (&cellCb->nrCb->utranTddCb);
   }

   return(0L);
}
 WrGeranCellCb* wrEmmGetNeighGeranCell
(
 U16 cellId,
 U16 arfcn,
 U16 bsic
)
{
   WrGeranCellCb *lnkCellNode =0L;
   WrCellCb *cellCb = 0L;
   CmLListCp *lst = 0L;
   CmLList *lnk = 0L;

   ;;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x30051, L_ERROR,cellId, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",2756, "Invalid cellId [%d] received for getting neighbour geran cell.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(0L);
   }


   lst= &cellCb->nrCb->geranCb.geranNrCellLst;
   lnk = lst->first;

   while(lnk != 0L)
   {
      lnkCellNode = (WrGeranCellCb*)lnk->node;

      if(((lnkCellNode->freqCb != 0L) &&
          (lnkCellNode->freqCb->arfcn == arfcn)) && (lnkCellNode->bsic == bsic))
      {
         return(lnkCellNode);
      }
      lnk = lnk->next;
   }

   return(0L);
}
 WrUtraNeighCellCb* wrEmmGetNeighUtraCell
(
 U16 cellId,
 U16 arfcn,
 U16 psc,
 U8 duplexMode
)
{
   WrNrUtranFreqCb *freqNode = 0L;
   WrUtraNeighCellCb *lnkCellNode =0L;
   WrCellCb *cellCb = 0L;
   CmLListCp *lst = 0L;
   CmLList *lnk = 0L;

   ;;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x30052, L_ERROR,cellId, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",2811, "Invalid CellId [%d] received for getting neighbour Utra cell.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(0L);
   }


 if (duplexMode == 0)
 {
    freqNode = wrEmmAnrGetFreqNode(arfcn,
          &cellCb->nrCb->utranCb);

    if(freqNode != 0L)
    {

       lst = &freqNode->nrWlLst;
       lnk = lst->first;
       while(lnk != 0L)
       {
          lnkCellNode = (WrUtraNeighCellCb*)lnk->node;

          if(lnkCellNode->t.utraFdd.psc== psc)
          {
             return(lnkCellNode);
          }
          lnk = lnk->next;
       }
    }
 }
   else if (duplexMode == 1)
   {

      freqNode = wrEmmAnrGetFreqNode(arfcn,
            &cellCb->nrCb->utranTddCb);
      if(freqNode != 0L)
      {

         lst = &freqNode->nrWlLst;
         lnk = lst->first;
         while(lnk != 0L)
         {
            lnkCellNode = (WrUtraNeighCellCb*)lnk->node;

            if(lnkCellNode->t.utraTdd.psc== psc)
            {
               return(lnkCellNode);
            }
            lnk = lnk->next;
         }
      }
   }

   return(0L);
}
 U16 wrEmmGetNeighIpFrmPeerId
(
U32 peerId,
U8 cellId,
CmTptAddr *peerAddr
)
{
   U16 retVal;
   U32 prevEntry = 0L;
   WrNeighEnbCb *nghEnbCb;

   while ((retVal = cmHashListGetNext(&(wrEmmCb.neighEnbLstCp), prevEntry, (U32 *) &nghEnbCb)) == 0)
   {
      if (nghEnbCb->peerId == peerId)
      {
         wrCpyCmTptAddr(peerAddr, &(nghEnbCb->neighEnbAddr));
         return(0);
      }
      prevEntry = (U32) nghEnbCb;
   }
   if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x30053, L_DEBUG,peerId, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",2896, "No matching PeerId found for %d", RLOG_FILE_ID, RLOG_MODULE_NAME); };
   return(1);
}
 S16 wrEmmStartTriceTmr
(
 WrCellCb *cellCb
)
{
   U64 epochTmrVal = 0;
   U16 epochTmrCnt = 0;
   U32 trcCount = 0;
   U32 triceTmrVal = 0;
   U32 triceCntPerEpocIntv = 0;

   ;
   epochTmrCnt = cellCb->nrCb->epochCnt;
   epochTmrVal = cellCb->nrCb->epochTmrVal;
   triceCntPerEpocIntv = cellCb->nrCb->tricePeriodIntvCnt;

   if(epochTmrCnt == 1)
   {
      trcCount = 4;
   }
   else if((epochTmrCnt > 1) && (epochTmrCnt <= 5))
   {
      trcCount = 2;
   }
   else
   {
      trcCount = 1;
   }
   triceTmrVal = (epochTmrVal/triceCntPerEpocIntv) * trcCount;

   wrStartTmr((U32)cellCb, WR_TMR_ANR_MEAS_TRICE_TMR, triceTmrVal);
   if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x30054, L_DEBUG,cellCb->nrCb->epochCnt, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"   , 2941   , "Current Epoch Timer Count is = %u while starting the trice timer", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                                                                 ;
   if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x30055, L_DEBUG,triceTmrVal, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"   , 2943   , "Started Trice timer with value = %u", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                         ;
   wrEmmCfgAnrMeasFreqInfo(cellCb);
   return(0);
}
 S16 wrEmmIsPrdAnrTmrsRunning
(
   WrCellId cellId,
   Bool *running
)
{
   WrCellCb *cellCb = 0L;


   *running = 0;


   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if(cellCb == 0L)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30056,L_ERROR,DBG_CELLID, (U32)cellId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",2975, "Invalid cell id received to check timers running or not", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }





   if(wrIsTmrRunning(&cellCb->nrCb->epochTmr,
                                 WR_TMR_ANR_MEAS_EPOCH_TMR) == 0)

   {

      wrStartTmr((U32)cellCb, WR_TMR_ANR_MEAS_EPOCH_TMR,
                 cellCb->nrCb->epochTmrVal);


      wrEmmStartTriceTmr(cellCb);


      *running = 1;
   }
   else
   {

      if(wrEmmAnrIsTriceTmrRunning(cellId) == 1)
      {

         *running = 1;
      }
   }
   return(0);
}
 S16 wrEmmPrcEpochTimerExp
(
Void *cb,
U8 wrUmmTmrExpEvnt
)
{
   WrCellCb *cellCb;
   U32 temp;
   U32 epochTmrVal = 0;
   ;

   cellCb = cb;
   cellCb->nrCb->epochCnt++;

   epochTmrVal = cellCb->nrCb->epochTmrVal;
   temp = 86400000/epochTmrVal;
   if(cellCb->nrCb->epochCnt >= temp)
   {
      cellCb->nrCb->epochCnt = 1;
   }
   wrStartTmr((U32)cellCb, WR_TMR_ANR_MEAS_EPOCH_TMR, epochTmrVal);
   wrEmmStartTriceTmr(cellCb);
   wrUmmAnrStartMeasurements(cellCb->cellId);

   return(0);
}
 S16 wrEmmPrcTriceTimerExp
(
Void *cb,
U8 wrUmmTmrExpEvnt
)
{
   WrCellCb *cellCb;

   ;
   cellCb = (WrCellCb *)cb;
   wrUmmAnrDelMeasCfgForAllUe(cellCb->cellId);
   return(0);
}
 S16 wrEmmPrcCellMaxAgeTmrExp
(
Void *cb
)
{
   WrCellCb *cellCb;
   WrNrEutranFreqCb *intraFreqCb = 0L;
   CmLListCp *interFreqLst = 0L;
   CmLList *interFreqNodeLnk = 0L;
   WrNrEutranFreqCb *interFreqNode = 0L;

   CmLListCp *nbrCellLst = 0L;
   CmLList *nbrCellLnk = 0L;
   WrEutranNeighCellCb *nbrCellNode = 0L;
   U32 actualTmrVal;

   ;

   cellCb = (WrCellCb *)cb;


   interFreqLst = &cellCb->nrCb->eutranCb.interFreqList;
   interFreqNodeLnk = interFreqLst->first;

   while (interFreqNodeLnk != 0L)
   {
      interFreqNode = (WrNrEutranFreqCb *)interFreqNodeLnk->node;


      nbrCellLst = &interFreqNode->nrWlLst;
      nbrCellLnk = nbrCellLst->first;

      while(nbrCellLnk != 0L)
      {
         nbrCellNode = (WrEutranNeighCellCb *)nbrCellLnk->node;
         nbrCellLnk = nbrCellLnk->next;
         if(nbrCellNode != 0L)
         {
            wrEmmCheckAgeAndDeleteCell(cellCb,nbrCellNode);
         }
      }


      nbrCellLst = &interFreqNode->nrBlLst;
      nbrCellLnk = nbrCellLst->first;

      while(nbrCellLnk != 0L)
      {
         nbrCellNode = (WrEutranNeighCellCb *)nbrCellLnk->node;
         nbrCellLnk = nbrCellLnk->next;
         if(nbrCellNode != 0L)
         {
            wrEmmCheckAgeAndDeleteCell(cellCb,nbrCellNode);
         }
      }
      interFreqNodeLnk = interFreqNodeLnk->next;
   }


   intraFreqCb = &cellCb->nrCb->eutranCb.intraFreqCb;


   nbrCellLst = &intraFreqCb->nrWlLst;
   nbrCellLnk = nbrCellLst->first;

   while(nbrCellLnk != 0L)
   {
      nbrCellNode = (WrEutranNeighCellCb *)nbrCellLnk->node;
      nbrCellLnk = nbrCellLnk->next;
      if(nbrCellNode != 0L)
      {
         wrEmmCheckAgeAndDeleteCell(cellCb,nbrCellNode);
      }
   }


   nbrCellLst = &intraFreqCb->nrBlLst;
   nbrCellLnk = nbrCellLst->first;

   while(nbrCellLnk != 0L)
   {
      nbrCellNode = (WrEutranNeighCellCb *)nbrCellLnk->node;
      nbrCellLnk = nbrCellLnk->next;
      if(nbrCellNode != 0L)
      {
         wrEmmCheckAgeAndDeleteCell(cellCb,nbrCellNode);
      }
   }

   if (cellCb->nrCb->cellValidAgeTmrVal >= 10)
   {
      actualTmrVal = (10 * 60 * 1000);
   }
   else
   {
      actualTmrVal = (cellCb->nrCb->cellValidAgeTmrVal * 60 * 1000);
   }

   wrStartTmr((U32)cellCb, WR_TMR_ANR_CELL_MAX_AGE_TMR,actualTmrVal);
   if( L_INFO < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x30057, L_INFO, actualTmrVal, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"   , 3178   , "Started cell valid age timer with value = %llu", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                 ;

   return(0);
}
 Bool wrEmmAnrIsTriceTmrRunning
(
  U16 cellId
)
{
   Bool isTmrRunning = 0;
   WrCellCb *cellCb = 0L;

   ;

      { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30058,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",3207, "Invalid cellId received for checking trice timer is running or not", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }

   isTmrRunning = wrIsTmrRunning(&cellCb->nrCb->triceTmr,
         WR_TMR_ANR_MEAS_TRICE_TMR);
   return(isTmrRunning);
}
 U16 wrEmmGetAnrDrxOnDur
(
WrCellId cellId
)
{
   WrCellCb *cellCb;
   U16 drxOnDur;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30059,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",3239, "Invalid cellId received for getting DRX ON duration timer.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }

   drxOnDur = cellCb->ueAnrDrxCfg.drxOnDurTmr;
   return(drxOnDur);
}
 U16 wrEmmGetAnrDrxLongCycle
(
WrCellId cellId
)
{
   WrCellCb *cellCb;
   U16 drxLongCycle;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x3005a,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",3268, "Invalid CellId received for getting DRX long cycle value.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }

   drxLongCycle = cellCb->ueAnrDrxCfg.longDrxCycle;
   return(drxLongCycle);
}
 U8 wrEmmGetAnrDrxInActivTmrVal
(
WrCellId cellId
)
{
   WrCellCb *cellCb;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x3005b,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0,                                              "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"      ,                                              3296      , "Invalid CellId received for getting" "ANR DRX inactive timer value", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                               ;
      return(1);
   }

   return(cellCb->ueAnrDrxCfg.inActivTmr);
}
 WrHrlDecisionRet wrChkForFrbRat
(
 WrForbRatTyp forbRatTyp,
 WrHoRstrctInfo *hoRstrctInfo
 )
{
   U32 forbRat;
   WrHrlDecisionRet ret = WR_MEAS_MBLTY_APPL_TO_RAT;

   if (hoRstrctInfo->frbdnInterRATs.pres == 0)
   {
      ret = WR_MEAS_MBLTY_APPL_TO_RAT;
   }

   if(hoRstrctInfo->frbdnInterRATs.val == SztForbiddenInterRATsallEnum)
   {
      ret = WR_MEAS_MBLTY_NOT_APPL_TO_RAT;
   }

   forbRat = hoRstrctInfo->frbdnInterRATs.val;
   switch(forbRatTyp)
   {
      case WR_FORB_RAT_UTRA:
         {
            if((forbRat == SztForbiddenInterRATsutranEnum)
                  || (forbRat == SztForbiddenInterRATsgeranandutranEnum)
                  || (forbRat == SztForbiddenInterRATscdma2000andutranEnum))
            {
               ret = WR_MEAS_MBLTY_NOT_APPL_TO_RAT;
            }
            else
            {
               ret = WR_MEAS_MBLTY_APPL_TO_RAT;
            }
         }
         break;
      case WR_FORB_RAT_CDMA:
         {
            if((forbRat == SztForbiddenInterRATscdma2000Enum)
                  || forbRat == SztForbiddenInterRATscdma2000andutranEnum)
            {
               ret = WR_MEAS_MBLTY_NOT_APPL_TO_RAT;
            }
            else
            {
               ret = WR_MEAS_MBLTY_APPL_TO_RAT;
            }
         }
         break;
      case WR_FORB_RAT_GERAN:
         {
            if((forbRat == SztForbiddenInterRATsgeranEnum)
                  || (forbRat == SztForbiddenInterRATsgeranandutranEnum))
            {
               ret = WR_MEAS_MBLTY_NOT_APPL_TO_RAT;
            }
            else
            {
               ret = WR_MEAS_MBLTY_APPL_TO_RAT;
            }
         }
         break;
      default:
         {
            if( L_WARNING < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x3005c, L_WARNING,forbRatTyp, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",3382, "Invalid RAT type received while checking forbidden RAT[%d].", RLOG_FILE_ID, RLOG_MODULE_NAME); };
            ret = WR_MEAS_MBLTY_NOT_APPL_TO_RAT;
         }
         break;
   }
   return(ret);
}
static U8 wrChkForFrbPLMN
(
 WrHoRstrctInfo *hoRstrctInfo,
 WrSelctdPLMN *selctdPlmn,
 WrHrlCb hrlCb
 )
{
   U8 idx = 0;
   U8 ePlmnIdx = 0;


   for(idx = 0; idx < 6; idx++)
   {
      if(wrUtlPlmnsEqual(&hoRstrctInfo->srvngPlmn, &hrlCb.plmnToVldt[idx]))
      {
         selctdPlmn->selectdPLMN[0].plmnId = hoRstrctInfo->srvngPlmn;
         selctdPlmn->selectdPLMN[0].isPLMNForb = 0;
         selctdPlmn->nosOfPlmns++;
         return(WR_MEAS_MBLTY_APPL_TO_CELL);
      }
   }


   for(ePlmnIdx = 0; ePlmnIdx < hoRstrctInfo->noOfEplmn; ePlmnIdx++)
   {
      for(idx = 0; idx < hrlCb.nosOfPlmns; idx++)
      {
         if(wrUtlPlmnsEqual(&hoRstrctInfo->ePlmn[ePlmnIdx], &hrlCb.plmnToVldt[idx]))
         {
            selctdPlmn->selectdPLMN[selctdPlmn->nosOfPlmns].plmnId =
                                                       hoRstrctInfo->ePlmn[ePlmnIdx];
            selctdPlmn->selectdPLMN[selctdPlmn->nosOfPlmns].isPLMNForb = 0;
            selctdPlmn->nosOfPlmns++;
         }
      }
   }

   if(selctdPlmn->nosOfPlmns != 0)
   {
      return(WR_MEAS_MBLTY_APPL_TO_CELL);
   }
   return(WR_MEAS_MBLTY_NOT_APPL_TO_CELL);
}
static U8 wrChkForFrbTa
(
 WrHoRstrctInfo *hoRstrctInfo,
 WrSelctdPLMN *selctdPlmn,
 WrHrlCb hrlCb
 )
{
   U8 idx;
   U8 taIdx;
   U8 tacIdx;
   U8 nosOfTAsFrb = 0;


   for(idx = 0; idx < 6; idx++)
   {
      for(taIdx = 0; taIdx < hoRstrctInfo->noOfTAs; taIdx++)
      {
         if(wrUtlPlmnsEqual(&selctdPlmn->selectdPLMN[idx].plmnId,
                  &hoRstrctInfo->frbdnTAs[taIdx].plmnId))
         {

            for(tacIdx = 0; tacIdx < hoRstrctInfo->frbdnTAs[taIdx].noOfTac; tacIdx++)
            {
               if(hrlCb.tacOrLacToVldt == hoRstrctInfo->frbdnTAs[taIdx].tac[tacIdx])
               {
                  selctdPlmn->selectdPLMN[idx].isPLMNForb = 1;
                  nosOfTAsFrb++;
                  break;
               }
            }
         }
      }
   }



   if(nosOfTAsFrb == selctdPlmn->nosOfPlmns)
   {

      return(WR_MEAS_MBLTY_NOT_APPL_TO_CELL);
   }
   else
   {


      return(WR_MEAS_MBLTY_APPL_TO_CELL);
   }
}
static U8 wrChkForFrbLa
(
 WrHoRstrctInfo *hoRstrctInfo,
 WrSelctdPLMN *selctdPlmn,
 WrHrlCb hrlCb
 )
{
   U8 idx;
   U8 laIdx;
   U8 lacIdx;
   U8 nosOfLAsFrb = 0;


   for(idx = 0; idx < 6; idx++)
   {
      for(laIdx = 0; laIdx < hoRstrctInfo->noOfLAs; laIdx++)
      {
         if(wrUtlPlmnsEqual(&selctdPlmn->selectdPLMN[idx].plmnId,
                  &hoRstrctInfo->frbdnLAs[laIdx].plmnId))
         {

            for(lacIdx = 0; lacIdx < hoRstrctInfo->frbdnLAs[laIdx].noOfLac; lacIdx++)
            {
               if(hrlCb.tacOrLacToVldt == hoRstrctInfo->frbdnLAs[laIdx].lac[lacIdx])
               {
                  selctdPlmn->selectdPLMN[idx].isPLMNForb = 1;
                  nosOfLAsFrb++;
                  break;
               }
            }
         }
      }
   }



   if(nosOfLAsFrb == selctdPlmn->nosOfPlmns)
   {

      return(WR_MEAS_MBLTY_NOT_APPL_TO_CELL);
   }
   else
   {


      return(WR_MEAS_MBLTY_APPL_TO_CELL);
   }
}
static Void wrChkForGuGrpId
(
 WrSelctdPLMN *selctdPlmn,
 WrNeighEnbCb *neighEnbCb,
 U8 *hoTyp
 )
{
   U8 idx = 0;
   U8 guIdx = 0;
   U8 guGrupIdArr[8] = {0};
   U8 guGrpIdExst = 0;

   for(idx = 0; idx < 6; idx++)
   {
      if(selctdPlmn->selectdPLMN[idx].isPLMNForb == 0)
      {

         for(guIdx = 0; guIdx < neighEnbCb->numGuGrpIds; guIdx++)
         {

            if(wrUtlPlmnsEqual(&selctdPlmn->selectdPLMN[idx].plmnId,
                     &neighEnbCb->guGrpIdLst[guIdx].plmnId))
            {



               WrGuGrupCbList *ptrGuGrupCbLst = 0L;
               { guGrupIdArr[0]= (neighEnbCb->guGrpIdLst[guIdx].mmeGrpId & 0xFF); guGrupIdArr[1]= ((neighEnbCb->guGrpIdLst[guIdx].mmeGrpId >> 8) & 0xFF); guGrupIdArr[2]= neighEnbCb->guGrpIdLst[guIdx].plmnId.mcc[0]; guGrupIdArr[3]= neighEnbCb->guGrpIdLst[guIdx].plmnId.mcc[1]; guGrupIdArr[4]= neighEnbCb->guGrpIdLst[guIdx].plmnId.mcc[2]; guGrupIdArr[5]= neighEnbCb->guGrpIdLst[guIdx].plmnId.mnc[0]; guGrupIdArr[6]= neighEnbCb->guGrpIdLst[guIdx].plmnId.mnc[1]; if(neighEnbCb->guGrpIdLst[guIdx].plmnId.numMncDigits == 3) guGrupIdArr[7]= neighEnbCb->guGrpIdLst[guIdx].plmnId.mnc[2]; };
               if(0 == cmHashListFind(&(wrEmmCb.guGrupIdLst),
                        (U8 *)guGrupIdArr, 8, 0,
                        (U32 *)&ptrGuGrupCbLst))
               {
                  guGrpIdExst++;
                  break;
               }
            }
         }
      }
   }

   if(guGrpIdExst == 0)
   {



      *hoTyp = WR_HO_TYPE_INTRA_LTE_S1;
   }
}
 WrHrlDecisionRet wrMbltyRestrc
(
WrMobilityType mbltyTyp,
U32 *neighCellCb,
U32 *neighEnbCb,
U8 *hoTyp,
WrPlmnId *fnlzdPLMN,
WrHoRstrctInfo *hoRstrctInfo
 )
{
   WrSelctdPLMN selctdPlmn;
   WrHrlCb hrlCb;
   WrForbRatTyp forbRatTyp;
   U8 idx;
   WrHrlDecisionRet ret;

   { cmMemset((U8 *)(&hrlCb), 0, (U16)sizeof(WrHrlCb));};
   { cmMemset((U8 *)(&selctdPlmn), 0, (U16)sizeof(WrSelctdPLMN));};
   switch(mbltyTyp)
   {
      case WR_INTRA_SYS_MEAS:
      case WR_INTRA_SYS_MBLTY:
         {
            WrEutranNeighCellCb *eutraNeighCell;
            forbRatTyp = WR_RAT_EUTRA;

            eutraNeighCell = (WrEutranNeighCellCb*) neighCellCb;
            if(eutraNeighCell->numPlmn <= 1)
            {
               hrlCb.nosOfPlmns = 1;
               hrlCb.plmnToVldt[0] = eutraNeighCell->enbPlmn;
            }
            else
            {
               hrlCb.nosOfPlmns = eutraNeighCell->numPlmn;
               for (idx = 0; idx < hrlCb.nosOfPlmns; idx++)
               {
                  hrlCb.plmnToVldt[idx] = eutraNeighCell->plmn[idx];
               }
            }
            hrlCb.tacOrLacToVldt = eutraNeighCell->tac;
         }
         break;
      case WR_INTER_SYS_UTRA_MBLTY:
         {
            WrUtraNeighCellCb *utraNeighCell;
            forbRatTyp = WR_FORB_RAT_UTRA;

            utraNeighCell = (WrUtraNeighCellCb*) neighCellCb;
            hrlCb.nosOfPlmns = utraNeighCell->numPlmn;
            for (idx = 0; idx < hrlCb.nosOfPlmns; idx++)
            {
               hrlCb.plmnToVldt[idx] = utraNeighCell->plmnId[idx];
            }
            hrlCb.tacOrLacToVldt = utraNeighCell->lac;
         }
         break;
      case WR_INTER_SYS_GERAN_MBLTY:
         {
            WrGeranCellCb *geranCell;
            forbRatTyp = WR_FORB_RAT_GERAN;

            geranCell = (WrGeranCellCb*) neighCellCb;
            hrlCb.nosOfPlmns = 1;
            hrlCb.plmnToVldt[0] = geranCell->plmnId;
            hrlCb.tacOrLacToVldt = geranCell->lac;
         }
         break;
      default:
         {
            if( L_INFO < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x3005d, L_INFO,mbltyTyp, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c"            , 3735            , "Invalid mobilty type received [%d] to check" "mobility restriction for a UE", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                                           ;
            return(WR_MEAS_MBLTY_NOT_APPL_TO_CELL);
         }
   }


   if(forbRatTyp != WR_RAT_EUTRA)
   {
      ret = wrChkForFrbRat(forbRatTyp, hoRstrctInfo);
      if(ret == WR_MEAS_MBLTY_NOT_APPL_TO_RAT)
      {
         return(WR_MEAS_MBLTY_NOT_APPL_TO_RAT);
      }
   }


   ret = wrChkForFrbPLMN(hoRstrctInfo, &selctdPlmn, hrlCb);
   if(ret == WR_MEAS_MBLTY_NOT_APPL_TO_CELL)
   {
      return(WR_MEAS_MBLTY_NOT_APPL_TO_CELL);
   }


   if((mbltyTyp == WR_INTRA_SYS_MBLTY) || (mbltyTyp == WR_INTRA_SYS_MEAS))
   {
      ret = wrChkForFrbTa(hoRstrctInfo, &selctdPlmn, hrlCb);
      if(ret == WR_MEAS_MBLTY_NOT_APPL_TO_CELL)
      {
         return(WR_MEAS_MBLTY_NOT_APPL_TO_CELL);
      }
   }


   if((mbltyTyp == WR_INTER_SYS_UTRA_MBLTY) || (mbltyTyp == WR_INTER_SYS_GERAN_MBLTY))
   {
      ret = wrChkForFrbLa(hoRstrctInfo, &selctdPlmn, hrlCb);
      if(ret == WR_MEAS_MBLTY_NOT_APPL_TO_CELL)
      {
         return(WR_MEAS_MBLTY_NOT_APPL_TO_CELL);
      }
   }




   if((mbltyTyp == WR_INTRA_SYS_MBLTY) && (neighEnbCb != 0L)
         && (*hoTyp == WR_HO_TYPE_X2))
   {
      WrNeighEnbCb *eutraNeighEnbCb = 0L;
      eutraNeighEnbCb = (WrNeighEnbCb *)neighEnbCb;
      wrChkForGuGrpId(&selctdPlmn, eutraNeighEnbCb, hoTyp);
   }



   if(fnlzdPLMN != 0L)
   {
      for(idx = 0; idx < 6; idx++)
      {
         if(selctdPlmn.selectdPLMN[idx].isPLMNForb == 0)
         {
            wrUtlCopyPlmnId(&selctdPlmn.selectdPLMN[idx].plmnId, fnlzdPLMN);
            break;
         }
      }
   }

   return(WR_MEAS_MBLTY_APPL_TO_CELL);
}
 Bool wrFindRegLaiPlmnCell
(
WrRegLai *regLai,
WrUtraNeighCellCb *neighCellCb,
WrHoRstrctInfo *hoRstrctInfo
)
{
   U8 idx;
 U32 cnt;
   U32 cnt1;

   for (idx = 0; idx < neighCellCb->numPlmn; idx++)
   {
      if (1 == wrEmmPlmnPlmnsEqual(&neighCellCb->plmnId[idx], &regLai->plmnId))
      {
         if( L_INFO < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x3005e, L_INFO, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",3840, "Neighbour cell plmn found matching with RegLAI plmn while finding RegLaiPlmn cell", RLOG_FILE_ID, RLOG_MODULE_NAME); };
         break;
      }
   }

   if (idx == neighCellCb->numPlmn)
   {
      if( L_WARNING < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x3005f, L_WARNING, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",3847, "Unable to find RegLaiPlmn cell", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(0);
   }


   for(cnt1 = 0; (hoRstrctInfo != 0L && cnt1 < hoRstrctInfo->noOfLAs); cnt1++)
   {
      if(1 == wrEmmPlmnPlmnsEqual(&regLai->plmnId,&hoRstrctInfo->frbdnLAs[cnt1].plmnId))
      {

         for(cnt = 0; cnt < hoRstrctInfo->frbdnLAs[cnt1].noOfLac; cnt++)
         {
            if(neighCellCb->lac == hoRstrctInfo->frbdnLAs[cnt1].lac[cnt])
            {
               if( L_INFO < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30060, L_INFO, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",3861, "Neighbor cell LAI is present in Forbidden LAs", RLOG_FILE_ID, RLOG_MODULE_NAME); };
               return(0);
            }
         }
      }
   }
   return(1);
}
 CmLListCp* wrEmmGetUtraFddFreqLst
(
WrCellId cellId
)
{
   WrCellCb *cellCb = 0L;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if (0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30061,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",3891, "Invalid cellId received for getting Utra FDD frequency list", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(0L);
   }

   return(&cellCb->utraFddNbrFreqLst);
}
 CmLListCp* wrEmmGetUtraTddFreqLst
(
WrCellId cellId
)
{
   WrCellCb *cellCb = 0L;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if (0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLevE(0x30062,L_ERROR,DBG_CELLID, cellId, 0, 0, 0, 0, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",3918, "Invalid cellId received for getting Utra TDD frequency list", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(0L);
   }

   return(&cellCb->utraTddNbrFreqLst);
}
 S16 wrEmmGetPlmnRedirSupport
(
WrPlmnId *plmn,
Bool *isRedirSupport,
WrCellId cellId
)
{
   WrPlmnId plmnId ={0};
   WrCellCb *cellCb;
   U8 numOfPlmn =0;
   U8 idx =0;
   S16 ret = 1;

   { U32 _idx; cellCb = 0L; for(_idx = 0; _idx < 12; _idx++) { if (wrEmmCb.cellCb[_idx] != 0L) { if (wrEmmCb.cellCb[_idx]->cellId == cellId) { cellCb = wrEmmCb.cellCb[_idx]; } } }};
   if(0L == cellCb)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(0x30063, L_ERROR,cellId, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",4174, "Invalid CellId received for getting redirection support for PLMN [%d].", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }


   numOfPlmn = wrEmmCb.plmns.numPlmns;

   for(idx = 0; idx < numOfPlmn ; idx ++)
   {
      plmnId = wrEmmCb.plmns.plmns[idx].plmnInfo.plmnId;
      if (wrEmmPlmnPlmnsEqual(&plmnId, plmn) == 1)
      {

         *isRedirSupport = wrEmmCb.plmns.plmns[idx].plmnInfo.isRedirSupport;
         ret = 0;
         break;
      }
   }
   return(ret);
}
 const S8* wrEmmPrintCellState
(
 U8 cellState
)
{
   const S8* stateStr;

   switch(cellState)
   {
      case WR_CELL_STATE_INIT:
      {
         stateStr = "WR_CELL_STATE_INIT";
         break;
      }

      case WR_CELL_STATE_RESET:
      {
         stateStr = "WR_CELL_STATE_RESET";
         break;
      }

      case WR_CELL_STATE_UP:
      {
         stateStr = "WR_CELL_STATE_UP";
         break;
      }

      case WR_CELL_STATE_PWR_DOWN:
      {
         stateStr = "WR_CELL_STATE_PWR_DOWN";
         break;
      }

      case WR_CELL_STATE_RECFG:
      {
         stateStr = "WR_CELL_STATE_RECFG";
         break;
      }
      default:
      {
         stateStr = "INVALID STATE";
         break;
      }
  }
  return stateStr;
}
 S16 wrEmmStopNRTAgeTimer
(
)
{
   if( L_INFO < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(0x30064, L_INFO, "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_emm.c",4268, "Stopping NRT Age Timer", RLOG_FILE_ID, RLOG_MODULE_NAME); };
   wrStopTmr((U32)wrEmmCb.cellCb[0],WR_TMR_ANR_CELL_MAX_AGE_TMR);
   return(0);
}
