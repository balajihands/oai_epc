# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
# 20 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/envopt.h" 1
# 21 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/envdep.h" 1
# 172 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/envdep.h"
typedef void *Ptr;
# 773 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/envdep.h"
typedef unsigned char Bool;


typedef char S8;




typedef unsigned char U8;

typedef short S16;
typedef unsigned short U16;


typedef long S32;
typedef unsigned long U32;





__extension__ typedef long long S64;
__extension__ typedef unsigned long long U64;
# 814 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/envdep.h"
typedef float F32;
typedef double F64;
# 831 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/envdep.h"
typedef void Void;



typedef S8 (*PFS8) (void );
typedef S16 (*PFS16) (void );
typedef S32 (*PFS32) (void );
typedef Void (*PFVOID) (void );
typedef Void ( *PIF) (void );
# 1850 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/envdep.h"
typedef U32 MFTYPE;




typedef S8 *ARGTYPE;
# 22 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/envind.h" 1
# 23 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.h" 1
# 24 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.h" 1
# 1918 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.h"
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h" 1
# 46 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h"
# 1 "/usr/include/pthread.h" 1 3 4
# 21 "/usr/include/pthread.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 364 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 415 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 416 "/usr/include/sys/cdefs.h" 2 3 4
# 365 "/usr/include/features.h" 2 3 4
# 388 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 389 "/usr/include/features.h" 2 3 4
# 22 "/usr/include/pthread.h" 2 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 36 "/usr/include/endian.h" 3 4
# 1 "/usr/include/bits/endian.h" 1 3 4
# 37 "/usr/include/endian.h" 2 3 4
# 60 "/usr/include/endian.h" 3 4
# 1 "/usr/include/bits/byteswap.h" 1 3 4
# 27 "/usr/include/bits/byteswap.h" 3 4
# 1 "/usr/include/bits/types.h" 1 3 4
# 27 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 28 "/usr/include/bits/types.h" 2 3 4



# 30 "/usr/include/bits/types.h" 3 4
typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 121 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 122 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 28 "/usr/include/bits/byteswap.h" 2 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 29 "/usr/include/bits/byteswap.h" 2 3 4






# 1 "/usr/include/bits/byteswap-16.h" 1 3 4
# 36 "/usr/include/bits/byteswap.h" 2 3 4
# 44 "/usr/include/bits/byteswap.h" 3 4
static __inline unsigned int
__bswap_32 (unsigned int __bsx)
{
  return __builtin_bswap32 (__bsx);
}
# 108 "/usr/include/bits/byteswap.h" 3 4
static __inline __uint64_t
__bswap_64 (__uint64_t __bsx)
{
  return __builtin_bswap64 (__bsx);
}
# 61 "/usr/include/endian.h" 2 3 4
# 23 "/usr/include/pthread.h" 2 3 4
# 1 "/usr/include/sched.h" 1 3 4
# 28 "/usr/include/sched.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 216 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 3 4
typedef unsigned int size_t;
# 29 "/usr/include/sched.h" 2 3 4





# 1 "/usr/include/time.h" 1 3 4
# 73 "/usr/include/time.h" 3 4


typedef __time_t time_t;



# 120 "/usr/include/time.h" 3 4
struct timespec
  {
    __time_t tv_sec;
    __syscall_slong_t tv_nsec;
  };
# 35 "/usr/include/sched.h" 2 3 4


typedef __pid_t pid_t;





# 1 "/usr/include/bits/sched.h" 1 3 4
# 73 "/usr/include/bits/sched.h" 3 4
struct sched_param
  {
    int __sched_priority;
  };





extern int clone (int (*__fn) (void *__arg), void *__child_stack,
    int __flags, void *__arg, ...) __attribute__ ((__nothrow__ , __leaf__));


extern int unshare (int __flags) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_getcpu (void) __attribute__ ((__nothrow__ , __leaf__));


extern int setns (int __fd, int __nstype) __attribute__ ((__nothrow__ , __leaf__));











struct __sched_param
  {
    int __sched_priority;
  };
# 119 "/usr/include/bits/sched.h" 3 4
typedef unsigned long int __cpu_mask;






typedef struct
{
  __cpu_mask __bits[1024 / (8 * sizeof (__cpu_mask))];
} cpu_set_t;
# 202 "/usr/include/bits/sched.h" 3 4


extern int __sched_cpucount (size_t __setsize, const cpu_set_t *__setp)
  __attribute__ ((__nothrow__ , __leaf__));
extern cpu_set_t *__sched_cpualloc (size_t __count) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern void __sched_cpufree (cpu_set_t *__set) __attribute__ ((__nothrow__ , __leaf__));


# 44 "/usr/include/sched.h" 2 3 4







extern int sched_setparam (__pid_t __pid, const struct sched_param *__param)
     __attribute__ ((__nothrow__ , __leaf__));


extern int sched_getparam (__pid_t __pid, struct sched_param *__param) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_setscheduler (__pid_t __pid, int __policy,
          const struct sched_param *__param) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_getscheduler (__pid_t __pid) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_yield (void) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_get_priority_max (int __algorithm) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_get_priority_min (int __algorithm) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_rr_get_interval (__pid_t __pid, struct timespec *__t) __attribute__ ((__nothrow__ , __leaf__));
# 118 "/usr/include/sched.h" 3 4
extern int sched_setaffinity (__pid_t __pid, size_t __cpusetsize,
         const cpu_set_t *__cpuset) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_getaffinity (__pid_t __pid, size_t __cpusetsize,
         cpu_set_t *__cpuset) __attribute__ ((__nothrow__ , __leaf__));



# 24 "/usr/include/pthread.h" 2 3 4
# 1 "/usr/include/time.h" 1 3 4
# 29 "/usr/include/time.h" 3 4








# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 38 "/usr/include/time.h" 2 3 4



# 1 "/usr/include/bits/time.h" 1 3 4
# 30 "/usr/include/bits/time.h" 3 4
struct timeval
  {
    __time_t tv_sec;
    __suseconds_t tv_usec;
  };
# 88 "/usr/include/bits/time.h" 3 4
# 1 "/usr/include/bits/timex.h" 1 3 4
# 25 "/usr/include/bits/timex.h" 3 4
struct timex
{
  unsigned int modes;
  __syscall_slong_t offset;
  __syscall_slong_t freq;
  __syscall_slong_t maxerror;
  __syscall_slong_t esterror;
  int status;
  __syscall_slong_t constant;
  __syscall_slong_t precision;
  __syscall_slong_t tolerance;
  struct timeval time;
  __syscall_slong_t tick;
  __syscall_slong_t ppsfreq;
  __syscall_slong_t jitter;
  int shift;
  __syscall_slong_t stabil;
  __syscall_slong_t jitcnt;
  __syscall_slong_t calcnt;
  __syscall_slong_t errcnt;
  __syscall_slong_t stbcnt;

  int tai;


  int :32; int :32; int :32; int :32;
  int :32; int :32; int :32; int :32;
  int :32; int :32; int :32;
};
# 89 "/usr/include/bits/time.h" 2 3 4




extern int clock_adjtime (__clockid_t __clock_id, struct timex *__utx) __attribute__ ((__nothrow__ , __leaf__));


# 42 "/usr/include/time.h" 2 3 4
# 57 "/usr/include/time.h" 3 4


typedef __clock_t clock_t;



# 91 "/usr/include/time.h" 3 4
typedef __clockid_t clockid_t;
# 103 "/usr/include/time.h" 3 4
typedef __timer_t timer_t;
# 131 "/usr/include/time.h" 3 4


struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;


  long int tm_gmtoff;
  const char *tm_zone;




};








struct itimerspec
  {
    struct timespec it_interval;
    struct timespec it_value;
  };


struct sigevent;
# 186 "/usr/include/time.h" 3 4



extern clock_t clock (void) __attribute__ ((__nothrow__ , __leaf__));


extern time_t time (time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));


extern double difftime (time_t __time1, time_t __time0)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern time_t mktime (struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));





extern size_t strftime (char *__restrict __s, size_t __maxsize,
   const char *__restrict __format,
   const struct tm *__restrict __tp) __attribute__ ((__nothrow__ , __leaf__));





extern char *strptime (const char *__restrict __s,
         const char *__restrict __fmt, struct tm *__tp)
     __attribute__ ((__nothrow__ , __leaf__));





# 1 "/usr/include/xlocale.h" 1 3 4
# 27 "/usr/include/xlocale.h" 3 4
typedef struct __locale_struct
{

  struct __locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
} *__locale_t;


typedef __locale_t locale_t;
# 222 "/usr/include/time.h" 2 3 4

extern size_t strftime_l (char *__restrict __s, size_t __maxsize,
     const char *__restrict __format,
     const struct tm *__restrict __tp,
     __locale_t __loc) __attribute__ ((__nothrow__ , __leaf__));



extern char *strptime_l (const char *__restrict __s,
    const char *__restrict __fmt, struct tm *__tp,
    __locale_t __loc) __attribute__ ((__nothrow__ , __leaf__));






extern struct tm *gmtime (const time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));



extern struct tm *localtime (const time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));





extern struct tm *gmtime_r (const time_t *__restrict __timer,
       struct tm *__restrict __tp) __attribute__ ((__nothrow__ , __leaf__));



extern struct tm *localtime_r (const time_t *__restrict __timer,
          struct tm *__restrict __tp) __attribute__ ((__nothrow__ , __leaf__));





extern char *asctime (const struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));


extern char *ctime (const time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));







extern char *asctime_r (const struct tm *__restrict __tp,
   char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));


extern char *ctime_r (const time_t *__restrict __timer,
        char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));




extern char *__tzname[2];
extern int __daylight;
extern long int __timezone;




extern char *tzname[2];



extern void tzset (void) __attribute__ ((__nothrow__ , __leaf__));



extern int daylight;
extern long int timezone;





extern int stime (const time_t *__when) __attribute__ ((__nothrow__ , __leaf__));
# 319 "/usr/include/time.h" 3 4
extern time_t timegm (struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));


extern time_t timelocal (struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));


extern int dysize (int __year) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
# 334 "/usr/include/time.h" 3 4
extern int nanosleep (const struct timespec *__requested_time,
        struct timespec *__remaining);



extern int clock_getres (clockid_t __clock_id, struct timespec *__res) __attribute__ ((__nothrow__ , __leaf__));


extern int clock_gettime (clockid_t __clock_id, struct timespec *__tp) __attribute__ ((__nothrow__ , __leaf__));


extern int clock_settime (clockid_t __clock_id, const struct timespec *__tp)
     __attribute__ ((__nothrow__ , __leaf__));






extern int clock_nanosleep (clockid_t __clock_id, int __flags,
       const struct timespec *__req,
       struct timespec *__rem);


extern int clock_getcpuclockid (pid_t __pid, clockid_t *__clock_id) __attribute__ ((__nothrow__ , __leaf__));




extern int timer_create (clockid_t __clock_id,
    struct sigevent *__restrict __evp,
    timer_t *__restrict __timerid) __attribute__ ((__nothrow__ , __leaf__));


extern int timer_delete (timer_t __timerid) __attribute__ ((__nothrow__ , __leaf__));


extern int timer_settime (timer_t __timerid, int __flags,
     const struct itimerspec *__restrict __value,
     struct itimerspec *__restrict __ovalue) __attribute__ ((__nothrow__ , __leaf__));


extern int timer_gettime (timer_t __timerid, struct itimerspec *__value)
     __attribute__ ((__nothrow__ , __leaf__));


extern int timer_getoverrun (timer_t __timerid) __attribute__ ((__nothrow__ , __leaf__));





extern int timespec_get (struct timespec *__ts, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 403 "/usr/include/time.h" 3 4
extern int getdate_err;
# 412 "/usr/include/time.h" 3 4
extern struct tm *getdate (const char *__string);
# 426 "/usr/include/time.h" 3 4
extern int getdate_r (const char *__restrict __string,
        struct tm *__restrict __resbufp);



# 25 "/usr/include/pthread.h" 2 3 4

# 1 "/usr/include/bits/pthreadtypes.h" 1 3 4
# 21 "/usr/include/bits/pthreadtypes.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 22 "/usr/include/bits/pthreadtypes.h" 2 3 4
# 60 "/usr/include/bits/pthreadtypes.h" 3 4
typedef unsigned long int pthread_t;


union pthread_attr_t
{
  char __size[36];
  long int __align;
};

typedef union pthread_attr_t pthread_attr_t;
# 81 "/usr/include/bits/pthreadtypes.h" 3 4
typedef struct __pthread_internal_slist
{
  struct __pthread_internal_slist *__next;
} __pthread_slist_t;





typedef union
{
  struct __pthread_mutex_s
  {
    int __lock;
    unsigned int __count;
    int __owner;





    int __kind;
# 111 "/usr/include/bits/pthreadtypes.h" 3 4
    unsigned int __nusers;
    __extension__ union
    {
      struct
      {
 short __espins;
 short __elision;



      } __elision_data;
      __pthread_slist_t __list;
    };

  } __data;
  char __size[24];
  long int __align;
} pthread_mutex_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  struct
  {
    int __lock;
    unsigned int __futex;
    __extension__ unsigned long long int __total_seq;
    __extension__ unsigned long long int __wakeup_seq;
    __extension__ unsigned long long int __woken_seq;
    void *__mutex;
    unsigned int __nwaiters;
    unsigned int __broadcast_seq;
  } __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;





typedef union
{
# 202 "/usr/include/bits/pthreadtypes.h" 3 4
  struct
  {
    int __lock;
    unsigned int __nr_readers;
    unsigned int __readers_wakeup;
    unsigned int __writer_wakeup;
    unsigned int __nr_readers_queued;
    unsigned int __nr_writers_queued;


    unsigned char __flags;
    unsigned char __shared;
    signed char __rwelision;

    unsigned char __pad2;
    int __writer;
  } __data;

  char __size[32];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[20];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 27 "/usr/include/pthread.h" 2 3 4
# 1 "/usr/include/bits/setjmp.h" 1 3 4
# 26 "/usr/include/bits/setjmp.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 27 "/usr/include/bits/setjmp.h" 2 3 4
# 35 "/usr/include/bits/setjmp.h" 3 4
typedef int __jmp_buf[6];
# 28 "/usr/include/pthread.h" 2 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 29 "/usr/include/pthread.h" 2 3 4



enum
{
  PTHREAD_CREATE_JOINABLE,

  PTHREAD_CREATE_DETACHED

};



enum
{
  PTHREAD_MUTEX_TIMED_NP,
  PTHREAD_MUTEX_RECURSIVE_NP,
  PTHREAD_MUTEX_ERRORCHECK_NP,
  PTHREAD_MUTEX_ADAPTIVE_NP

  ,
  PTHREAD_MUTEX_NORMAL = PTHREAD_MUTEX_TIMED_NP,
  PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,
  PTHREAD_MUTEX_ERRORCHECK = PTHREAD_MUTEX_ERRORCHECK_NP,
  PTHREAD_MUTEX_DEFAULT = PTHREAD_MUTEX_NORMAL



  , PTHREAD_MUTEX_FAST_NP = PTHREAD_MUTEX_TIMED_NP

};




enum
{
  PTHREAD_MUTEX_STALLED,
  PTHREAD_MUTEX_STALLED_NP = PTHREAD_MUTEX_STALLED,
  PTHREAD_MUTEX_ROBUST,
  PTHREAD_MUTEX_ROBUST_NP = PTHREAD_MUTEX_ROBUST
};





enum
{
  PTHREAD_PRIO_NONE,
  PTHREAD_PRIO_INHERIT,
  PTHREAD_PRIO_PROTECT
};
# 114 "/usr/include/pthread.h" 3 4
enum
{
  PTHREAD_RWLOCK_PREFER_READER_NP,
  PTHREAD_RWLOCK_PREFER_WRITER_NP,
  PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
  PTHREAD_RWLOCK_DEFAULT_NP = PTHREAD_RWLOCK_PREFER_READER_NP
};
# 155 "/usr/include/pthread.h" 3 4
enum
{
  PTHREAD_INHERIT_SCHED,

  PTHREAD_EXPLICIT_SCHED

};



enum
{
  PTHREAD_SCOPE_SYSTEM,

  PTHREAD_SCOPE_PROCESS

};



enum
{
  PTHREAD_PROCESS_PRIVATE,

  PTHREAD_PROCESS_SHARED

};
# 190 "/usr/include/pthread.h" 3 4
struct _pthread_cleanup_buffer
{
  void (*__routine) (void *);
  void *__arg;
  int __canceltype;
  struct _pthread_cleanup_buffer *__prev;
};


enum
{
  PTHREAD_CANCEL_ENABLE,

  PTHREAD_CANCEL_DISABLE

};
enum
{
  PTHREAD_CANCEL_DEFERRED,

  PTHREAD_CANCEL_ASYNCHRONOUS

};
# 228 "/usr/include/pthread.h" 3 4





extern int pthread_create (pthread_t *__restrict __newthread,
      const pthread_attr_t *__restrict __attr,
      void *(*__start_routine) (void *),
      void *__restrict __arg) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));





extern void pthread_exit (void *__retval) __attribute__ ((__noreturn__));







extern int pthread_join (pthread_t __th, void **__thread_return);




extern int pthread_tryjoin_np (pthread_t __th, void **__thread_return) __attribute__ ((__nothrow__ , __leaf__));







extern int pthread_timedjoin_np (pthread_t __th, void **__thread_return,
     const struct timespec *__abstime);






extern int pthread_detach (pthread_t __th) __attribute__ ((__nothrow__ , __leaf__));



extern pthread_t pthread_self (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern int pthread_equal (pthread_t __thread1, pthread_t __thread2)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));







extern int pthread_attr_init (pthread_attr_t *__attr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_destroy (pthread_attr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_getdetachstate (const pthread_attr_t *__attr,
     int *__detachstate)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setdetachstate (pthread_attr_t *__attr,
     int __detachstate)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getguardsize (const pthread_attr_t *__attr,
          size_t *__guardsize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setguardsize (pthread_attr_t *__attr,
          size_t __guardsize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getschedparam (const pthread_attr_t *__restrict __attr,
           struct sched_param *__restrict __param)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setschedparam (pthread_attr_t *__restrict __attr,
           const struct sched_param *__restrict
           __param) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_getschedpolicy (const pthread_attr_t *__restrict
     __attr, int *__restrict __policy)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setschedpolicy (pthread_attr_t *__attr, int __policy)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_getinheritsched (const pthread_attr_t *__restrict
      __attr, int *__restrict __inherit)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setinheritsched (pthread_attr_t *__attr,
      int __inherit)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getscope (const pthread_attr_t *__restrict __attr,
      int *__restrict __scope)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setscope (pthread_attr_t *__attr, int __scope)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_getstackaddr (const pthread_attr_t *__restrict
          __attr, void **__restrict __stackaddr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2))) __attribute__ ((__deprecated__));





extern int pthread_attr_setstackaddr (pthread_attr_t *__attr,
          void *__stackaddr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__deprecated__));


extern int pthread_attr_getstacksize (const pthread_attr_t *__restrict
          __attr, size_t *__restrict __stacksize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int pthread_attr_setstacksize (pthread_attr_t *__attr,
          size_t __stacksize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getstack (const pthread_attr_t *__restrict __attr,
      void **__restrict __stackaddr,
      size_t *__restrict __stacksize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2, 3)));




extern int pthread_attr_setstack (pthread_attr_t *__attr, void *__stackaddr,
      size_t __stacksize) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int pthread_attr_setaffinity_np (pthread_attr_t *__attr,
     size_t __cpusetsize,
     const cpu_set_t *__cpuset)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 3)));



extern int pthread_attr_getaffinity_np (const pthread_attr_t *__attr,
     size_t __cpusetsize,
     cpu_set_t *__cpuset)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 3)));


extern int pthread_getattr_default_np (pthread_attr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_setattr_default_np (const pthread_attr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));




extern int pthread_getattr_np (pthread_t __th, pthread_attr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));







extern int pthread_setschedparam (pthread_t __target_thread, int __policy,
      const struct sched_param *__param)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3)));


extern int pthread_getschedparam (pthread_t __target_thread,
      int *__restrict __policy,
      struct sched_param *__restrict __param)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));


extern int pthread_setschedprio (pthread_t __target_thread, int __prio)
     __attribute__ ((__nothrow__ , __leaf__));




extern int pthread_getname_np (pthread_t __target_thread, char *__buf,
          size_t __buflen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));


extern int pthread_setname_np (pthread_t __target_thread, const char *__name)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));





extern int pthread_getconcurrency (void) __attribute__ ((__nothrow__ , __leaf__));


extern int pthread_setconcurrency (int __level) __attribute__ ((__nothrow__ , __leaf__));







extern int pthread_yield (void) __attribute__ ((__nothrow__ , __leaf__));




extern int pthread_setaffinity_np (pthread_t __th, size_t __cpusetsize,
       const cpu_set_t *__cpuset)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3)));


extern int pthread_getaffinity_np (pthread_t __th, size_t __cpusetsize,
       cpu_set_t *__cpuset)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3)));
# 494 "/usr/include/pthread.h" 3 4
extern int pthread_once (pthread_once_t *__once_control,
    void (*__init_routine) (void)) __attribute__ ((__nonnull__ (1, 2)));
# 506 "/usr/include/pthread.h" 3 4
extern int pthread_setcancelstate (int __state, int *__oldstate);



extern int pthread_setcanceltype (int __type, int *__oldtype);


extern int pthread_cancel (pthread_t __th);




extern void pthread_testcancel (void);




typedef struct
{
  struct
  {
    __jmp_buf __cancel_jmp_buf;
    int __mask_was_saved;
  } __cancel_jmp_buf[1];
  void *__pad[4];
} __pthread_unwind_buf_t __attribute__ ((__aligned__));
# 540 "/usr/include/pthread.h" 3 4
struct __pthread_cleanup_frame
{
  void (*__cancel_routine) (void *);
  void *__cancel_arg;
  int __do_it;
  int __cancel_type;
};
# 680 "/usr/include/pthread.h" 3 4
extern void __pthread_register_cancel (__pthread_unwind_buf_t *__buf)
     __attribute__ ((__regparm__ (1)));
# 692 "/usr/include/pthread.h" 3 4
extern void __pthread_unregister_cancel (__pthread_unwind_buf_t *__buf)
  __attribute__ ((__regparm__ (1)));
# 715 "/usr/include/pthread.h" 3 4
extern void __pthread_register_cancel_defer (__pthread_unwind_buf_t *__buf)
     __attribute__ ((__regparm__ (1)));
# 728 "/usr/include/pthread.h" 3 4
extern void __pthread_unregister_cancel_restore (__pthread_unwind_buf_t *__buf)
  __attribute__ ((__regparm__ (1)));



extern void __pthread_unwind_next (__pthread_unwind_buf_t *__buf)
     __attribute__ ((__regparm__ (1))) __attribute__ ((__noreturn__))

     __attribute__ ((__weak__))

     ;



struct __jmp_buf_tag;
extern int __sigsetjmp (struct __jmp_buf_tag *__env, int __savemask) __attribute__ ((__nothrow__));





extern int pthread_mutex_init (pthread_mutex_t *__mutex,
          const pthread_mutexattr_t *__mutexattr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutex_destroy (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutex_trylock (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutex_lock (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutex_timedlock (pthread_mutex_t *__restrict __mutex,
        const struct timespec *__restrict
        __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_mutex_unlock (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutex_getprioceiling (const pthread_mutex_t *
      __restrict __mutex,
      int *__restrict __prioceiling)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_mutex_setprioceiling (pthread_mutex_t *__restrict __mutex,
      int __prioceiling,
      int *__restrict __old_ceiling)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 3)));




extern int pthread_mutex_consistent (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern int pthread_mutex_consistent_np (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 806 "/usr/include/pthread.h" 3 4
extern int pthread_mutexattr_init (pthread_mutexattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutexattr_destroy (pthread_mutexattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutexattr_getpshared (const pthread_mutexattr_t *
      __restrict __attr,
      int *__restrict __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_mutexattr_setpshared (pthread_mutexattr_t *__attr,
      int __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutexattr_gettype (const pthread_mutexattr_t *__restrict
          __attr, int *__restrict __kind)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int pthread_mutexattr_settype (pthread_mutexattr_t *__attr, int __kind)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutexattr_getprotocol (const pthread_mutexattr_t *
       __restrict __attr,
       int *__restrict __protocol)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_mutexattr_setprotocol (pthread_mutexattr_t *__attr,
       int __protocol)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutexattr_getprioceiling (const pthread_mutexattr_t *
          __restrict __attr,
          int *__restrict __prioceiling)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_mutexattr_setprioceiling (pthread_mutexattr_t *__attr,
          int __prioceiling)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutexattr_getrobust (const pthread_mutexattr_t *__attr,
     int *__robustness)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int pthread_mutexattr_getrobust_np (const pthread_mutexattr_t *__attr,
        int *__robustness)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_mutexattr_setrobust (pthread_mutexattr_t *__attr,
     int __robustness)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern int pthread_mutexattr_setrobust_np (pthread_mutexattr_t *__attr,
        int __robustness)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 888 "/usr/include/pthread.h" 3 4
extern int pthread_rwlock_init (pthread_rwlock_t *__restrict __rwlock,
    const pthread_rwlockattr_t *__restrict
    __attr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_destroy (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_rdlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_tryrdlock (pthread_rwlock_t *__rwlock)
  __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_rwlock_timedrdlock (pthread_rwlock_t *__restrict __rwlock,
           const struct timespec *__restrict
           __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_rwlock_wrlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_trywrlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_rwlock_timedwrlock (pthread_rwlock_t *__restrict __rwlock,
           const struct timespec *__restrict
           __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_rwlock_unlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));





extern int pthread_rwlockattr_init (pthread_rwlockattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlockattr_destroy (pthread_rwlockattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlockattr_getpshared (const pthread_rwlockattr_t *
       __restrict __attr,
       int *__restrict __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_rwlockattr_setpshared (pthread_rwlockattr_t *__attr,
       int __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlockattr_getkind_np (const pthread_rwlockattr_t *
       __restrict __attr,
       int *__restrict __pref)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_rwlockattr_setkind_np (pthread_rwlockattr_t *__attr,
       int __pref) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







extern int pthread_cond_init (pthread_cond_t *__restrict __cond,
         const pthread_condattr_t *__restrict __cond_attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_cond_destroy (pthread_cond_t *__cond)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_cond_signal (pthread_cond_t *__cond)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_cond_broadcast (pthread_cond_t *__cond)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));






extern int pthread_cond_wait (pthread_cond_t *__restrict __cond,
         pthread_mutex_t *__restrict __mutex)
     __attribute__ ((__nonnull__ (1, 2)));
# 1000 "/usr/include/pthread.h" 3 4
extern int pthread_cond_timedwait (pthread_cond_t *__restrict __cond,
       pthread_mutex_t *__restrict __mutex,
       const struct timespec *__restrict __abstime)
     __attribute__ ((__nonnull__ (1, 2, 3)));




extern int pthread_condattr_init (pthread_condattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_condattr_destroy (pthread_condattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_condattr_getpshared (const pthread_condattr_t *
     __restrict __attr,
     int *__restrict __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_condattr_setpshared (pthread_condattr_t *__attr,
     int __pshared) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_condattr_getclock (const pthread_condattr_t *
          __restrict __attr,
          __clockid_t *__restrict __clock_id)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_condattr_setclock (pthread_condattr_t *__attr,
          __clockid_t __clock_id)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 1044 "/usr/include/pthread.h" 3 4
extern int pthread_spin_init (pthread_spinlock_t *__lock, int __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_destroy (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_lock (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_trylock (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_unlock (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));






extern int pthread_barrier_init (pthread_barrier_t *__restrict __barrier,
     const pthread_barrierattr_t *__restrict
     __attr, unsigned int __count)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrier_destroy (pthread_barrier_t *__barrier)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrier_wait (pthread_barrier_t *__barrier)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_barrierattr_init (pthread_barrierattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrierattr_destroy (pthread_barrierattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrierattr_getpshared (const pthread_barrierattr_t *
        __restrict __attr,
        int *__restrict __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_barrierattr_setpshared (pthread_barrierattr_t *__attr,
        int __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 1111 "/usr/include/pthread.h" 3 4
extern int pthread_key_create (pthread_key_t *__key,
          void (*__destr_function) (void *))
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_key_delete (pthread_key_t __key) __attribute__ ((__nothrow__ , __leaf__));


extern void *pthread_getspecific (pthread_key_t __key) __attribute__ ((__nothrow__ , __leaf__));


extern int pthread_setspecific (pthread_key_t __key,
    const void *__pointer) __attribute__ ((__nothrow__ , __leaf__)) ;




extern int pthread_getcpuclockid (pthread_t __thread_id,
      __clockid_t *__clock_id)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
# 1145 "/usr/include/pthread.h" 3 4
extern int pthread_atfork (void (*__prepare) (void),
      void (*__parent) (void),
      void (*__child) (void)) __attribute__ ((__nothrow__ , __leaf__));




extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) pthread_equal (pthread_t __thread1, pthread_t __thread2)
{
  return __thread1 == __thread2;
}



# 47 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h" 2
# 1 "/usr/include/semaphore.h" 1 3 4
# 22 "/usr/include/semaphore.h" 3 4
# 1 "/usr/include/sys/types.h" 1 3 4
# 27 "/usr/include/sys/types.h" 3 4






typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;




typedef __loff_t loff_t;



typedef __ino_t ino_t;






typedef __ino64_t ino64_t;




typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;





typedef __off_t off_t;






typedef __off64_t off64_t;
# 104 "/usr/include/sys/types.h" 3 4
typedef __id_t id_t;




typedef __ssize_t ssize_t;





typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;
# 136 "/usr/include/sys/types.h" 3 4
typedef __useconds_t useconds_t;



typedef __suseconds_t suseconds_t;





# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 147 "/usr/include/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;
# 194 "/usr/include/sys/types.h" 3 4
typedef int int8_t __attribute__ ((__mode__ (__QI__)));
typedef int int16_t __attribute__ ((__mode__ (__HI__)));
typedef int int32_t __attribute__ ((__mode__ (__SI__)));
typedef int int64_t __attribute__ ((__mode__ (__DI__)));


typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));
# 219 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/sys/select.h" 1 3 4
# 30 "/usr/include/sys/select.h" 3 4
# 1 "/usr/include/bits/select.h" 1 3 4
# 22 "/usr/include/bits/select.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 23 "/usr/include/bits/select.h" 2 3 4
# 31 "/usr/include/sys/select.h" 2 3 4


# 1 "/usr/include/bits/sigset.h" 1 3 4
# 22 "/usr/include/bits/sigset.h" 3 4
typedef int __sig_atomic_t;




typedef struct
  {
    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
  } __sigset_t;
# 34 "/usr/include/sys/select.h" 2 3 4



typedef __sigset_t sigset_t;
# 47 "/usr/include/sys/select.h" 3 4
# 1 "/usr/include/bits/time.h" 1 3 4
# 48 "/usr/include/sys/select.h" 2 3 4
# 56 "/usr/include/sys/select.h" 3 4
typedef long int __fd_mask;
# 66 "/usr/include/sys/select.h" 3 4
typedef struct
  {



    __fd_mask fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];





  } fd_set;






typedef __fd_mask fd_mask;
# 98 "/usr/include/sys/select.h" 3 4

# 108 "/usr/include/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 120 "/usr/include/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);





# 1 "/usr/include/bits/select2.h" 1 3 4
# 24 "/usr/include/bits/select2.h" 3 4
extern long int __fdelt_chk (long int __d);
extern long int __fdelt_warn (long int __d)
  __attribute__((__warning__ ("bit outside of fd_set selected")));
# 131 "/usr/include/sys/select.h" 2 3 4



# 220 "/usr/include/sys/types.h" 2 3 4


# 1 "/usr/include/sys/sysmacros.h" 1 3 4
# 24 "/usr/include/sys/sysmacros.h" 3 4


__extension__
extern unsigned int gnu_dev_major (unsigned long long int __dev)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__
extern unsigned int gnu_dev_minor (unsigned long long int __dev)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__
extern unsigned long long int gnu_dev_makedev (unsigned int __major,
            unsigned int __minor)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


__extension__ extern __inline __attribute__ ((__gnu_inline__)) __attribute__ ((__const__)) unsigned int
__attribute__ ((__nothrow__ , __leaf__)) gnu_dev_major (unsigned long long int __dev)
{
  return ((__dev >> 8) & 0xfff) | ((unsigned int) (__dev >> 32) & ~0xfff);
}

__extension__ extern __inline __attribute__ ((__gnu_inline__)) __attribute__ ((__const__)) unsigned int
__attribute__ ((__nothrow__ , __leaf__)) gnu_dev_minor (unsigned long long int __dev)
{
  return (__dev & 0xff) | ((unsigned int) (__dev >> 12) & ~0xff);
}

__extension__ extern __inline __attribute__ ((__gnu_inline__)) __attribute__ ((__const__)) unsigned long long int
__attribute__ ((__nothrow__ , __leaf__)) gnu_dev_makedev (unsigned int __major, unsigned int __minor)
{
  return ((__minor & 0xff) | ((__major & 0xfff) << 8)
   | (((unsigned long long int) (__minor & ~0xff)) << 12)
   | (((unsigned long long int) (__major & ~0xfff)) << 32));
}


# 223 "/usr/include/sys/types.h" 2 3 4





typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 262 "/usr/include/sys/types.h" 3 4
typedef __blkcnt64_t blkcnt64_t;
typedef __fsblkcnt64_t fsblkcnt64_t;
typedef __fsfilcnt64_t fsfilcnt64_t;
# 273 "/usr/include/sys/types.h" 3 4

# 23 "/usr/include/semaphore.h" 2 3 4






# 1 "/usr/include/bits/semaphore.h" 1 3 4
# 23 "/usr/include/bits/semaphore.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 24 "/usr/include/bits/semaphore.h" 2 3 4
# 36 "/usr/include/bits/semaphore.h" 3 4
typedef union
{
  char __size[16];
  long int __align;
} sem_t;
# 30 "/usr/include/semaphore.h" 2 3 4






extern int sem_init (sem_t *__sem, int __pshared, unsigned int __value)
     __attribute__ ((__nothrow__ , __leaf__));

extern int sem_destroy (sem_t *__sem) __attribute__ ((__nothrow__ , __leaf__));


extern sem_t *sem_open (const char *__name, int __oflag, ...) __attribute__ ((__nothrow__ , __leaf__));


extern int sem_close (sem_t *__sem) __attribute__ ((__nothrow__ , __leaf__));


extern int sem_unlink (const char *__name) __attribute__ ((__nothrow__ , __leaf__));





extern int sem_wait (sem_t *__sem);






extern int sem_timedwait (sem_t *__restrict __sem,
     const struct timespec *__restrict __abstime);



extern int sem_trywait (sem_t *__sem) __attribute__ ((__nothrow__));


extern int sem_post (sem_t *__sem) __attribute__ ((__nothrow__));


extern int sem_getvalue (sem_t *__restrict __sem, int *__restrict __sval)
     __attribute__ ((__nothrow__ , __leaf__));



# 48 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h" 2
# 1 "/usr/include/stdio.h" 1 3 4
# 29 "/usr/include/stdio.h" 3 4




# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 34 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 31 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 32 "/usr/include/libio.h" 2 3 4
# 49 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 50 "/usr/include/libio.h" 2 3 4
# 144 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;





typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 173 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 241 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 289 "/usr/include/libio.h" 3 4
  __off64_t _offset;







  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;

  size_t __pad5;
  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 333 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);




typedef __io_read_fn cookie_read_function_t;
typedef __io_write_fn cookie_write_function_t;
typedef __io_seek_fn cookie_seek_function_t;
typedef __io_close_fn cookie_close_function_t;


typedef struct
{
  __io_read_fn *read;
  __io_write_fn *write;
  __io_seek_fn *seek;
  __io_close_fn *close;
} _IO_cookie_io_functions_t;
typedef _IO_cookie_io_functions_t cookie_io_functions_t;

struct _IO_cookie_file;


extern void _IO_cookie_init (struct _IO_cookie_file *__cfile, int __read_write,
        void *__cookie, _IO_cookie_io_functions_t __fns);







extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 429 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 459 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 75 "/usr/include/stdio.h" 2 3 4




typedef __gnuc_va_list va_list;
# 110 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;





typedef _G_fpos64_t fpos64_t;
# 166 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 167 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));




extern int renameat (int __oldfd, const char *__old, int __newfd,
       const char *__new) __attribute__ ((__nothrow__ , __leaf__));








extern FILE *tmpfile (void) __attribute__ ((__warn_unused_result__));
# 207 "/usr/include/stdio.h" 3 4
extern FILE *tmpfile64 (void) __attribute__ ((__warn_unused_result__));



extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));





extern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
# 229 "/usr/include/stdio.h" 3 4
extern char *tempnam (const char *__dir, const char *__pfx)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));








extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 254 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 264 "/usr/include/stdio.h" 3 4
extern int fcloseall (void);









extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) __attribute__ ((__warn_unused_result__));




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
# 297 "/usr/include/stdio.h" 3 4


extern FILE *fopen64 (const char *__restrict __filename,
        const char *__restrict __modes) __attribute__ ((__warn_unused_result__));
extern FILE *freopen64 (const char *__restrict __filename,
   const char *__restrict __modes,
   FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));




extern FILE *fdopen (int __fd, const char *__modes) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));





extern FILE *fopencookie (void *__restrict __magic_cookie,
     const char *__restrict __modes,
     _IO_cookie_io_functions_t __io_funcs) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));






extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));





extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) __attribute__ ((__nothrow__ , __leaf__));


extern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));








extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));






extern int vasprintf (char **__restrict __ptr, const char *__restrict __f,
        __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 0))) __attribute__ ((__warn_unused_result__));
extern int __asprintf (char **__restrict __ptr,
         const char *__restrict __fmt, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3))) __attribute__ ((__warn_unused_result__));
extern int asprintf (char **__restrict __ptr,
       const char *__restrict __fmt, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3))) __attribute__ ((__warn_unused_result__));




extern int vdprintf (int __fd, const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));








extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) __attribute__ ((__warn_unused_result__));




extern int scanf (const char *__restrict __format, ...) __attribute__ ((__warn_unused_result__));

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 465 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) __attribute__ ((__warn_unused_result__));





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) __attribute__ ((__warn_unused_result__));


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 524 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 552 "/usr/include/stdio.h" 3 4
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 563 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);











extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 596 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);








extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     __attribute__ ((__warn_unused_result__));
# 642 "/usr/include/stdio.h" 3 4

# 651 "/usr/include/stdio.h" 3 4
extern char *fgets_unlocked (char *__restrict __s, int __n,
        FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
# 667 "/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
          size_t *__restrict __n, int __delimiter,
          FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern __ssize_t getdelim (char **__restrict __lineptr,
        size_t *__restrict __n, int __delimiter,
        FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));







extern __ssize_t getline (char **__restrict __lineptr,
       size_t *__restrict __n,
       FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));








extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 728 "/usr/include/stdio.h" 3 4
extern int fputs_unlocked (const char *__restrict __s,
      FILE *__restrict __stream);
# 739 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);








extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) __attribute__ ((__warn_unused_result__));




extern void rewind (FILE *__stream);

# 775 "/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off_t __off, int __whence);




extern __off_t ftello (FILE *__stream) __attribute__ ((__warn_unused_result__));
# 794 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 817 "/usr/include/stdio.h" 3 4



extern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);
extern __off64_t ftello64 (FILE *__stream) __attribute__ ((__warn_unused_result__));
extern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);
extern int fsetpos64 (FILE *__stream, const fpos64_t *__pos);




extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
extern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));








extern void perror (const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 26 "/usr/include/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern const char *const sys_errlist[];


extern int _sys_nerr;
extern const char *const _sys_errlist[];
# 856 "/usr/include/stdio.h" 2 3 4




extern int fileno (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
# 874 "/usr/include/stdio.h" 3 4
extern FILE *popen (const char *__command, const char *__modes) __attribute__ ((__warn_unused_result__));





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) __attribute__ ((__nothrow__ , __leaf__));





extern char *cuserid (char *__s);




struct obstack;


extern int obstack_printf (struct obstack *__restrict __obstack,
      const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3)));
extern int obstack_vprintf (struct obstack *__restrict __obstack,
       const char *__restrict __format,
       __gnuc_va_list __args)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 0)));







extern void flockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));



extern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));


extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
# 935 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio.h" 1 3 4
# 43 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return _IO_getc (stdin);
}




extern __inline __attribute__ ((__gnu_inline__)) int
fgetc_unlocked (FILE *__fp)
{
  return (__builtin_expect (((__fp)->_IO_read_ptr >= (__fp)->_IO_read_end), 0) ? __uflow (__fp) : *(unsigned char *) (__fp)->_IO_read_ptr++);
}





extern __inline __attribute__ ((__gnu_inline__)) int
getc_unlocked (FILE *__fp)
{
  return (__builtin_expect (((__fp)->_IO_read_ptr >= (__fp)->_IO_read_end), 0) ? __uflow (__fp) : *(unsigned char *) (__fp)->_IO_read_ptr++);
}


extern __inline __attribute__ ((__gnu_inline__)) int
getchar_unlocked (void)
{
  return (__builtin_expect (((stdin)->_IO_read_ptr >= (stdin)->_IO_read_end), 0) ? __uflow (stdin) : *(unsigned char *) (stdin)->_IO_read_ptr++);
}




extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return _IO_putc (__c, stdout);
}




extern __inline __attribute__ ((__gnu_inline__)) int
fputc_unlocked (int __c, FILE *__stream)
{
  return (__builtin_expect (((__stream)->_IO_write_ptr >= (__stream)->_IO_write_end), 0) ? __overflow (__stream, (unsigned char) (__c)) : (unsigned char) (*(__stream)->_IO_write_ptr++ = (__c)));
}





extern __inline __attribute__ ((__gnu_inline__)) int
putc_unlocked (int __c, FILE *__stream)
{
  return (__builtin_expect (((__stream)->_IO_write_ptr >= (__stream)->_IO_write_end), 0) ? __overflow (__stream, (unsigned char) (__c)) : (unsigned char) (*(__stream)->_IO_write_ptr++ = (__c)));
}


extern __inline __attribute__ ((__gnu_inline__)) int
putchar_unlocked (int __c)
{
  return (__builtin_expect (((stdout)->_IO_write_ptr >= (stdout)->_IO_write_end), 0) ? __overflow (stdout, (unsigned char) (__c)) : (unsigned char) (*(stdout)->_IO_write_ptr++ = (__c)));
}





extern __inline __attribute__ ((__gnu_inline__)) __ssize_t
getline (char **__lineptr, size_t *__n, FILE *__stream)
{
  return __getdelim (__lineptr, __n, '\n', __stream);
}





extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) feof_unlocked (FILE *__stream)
{
  return (((__stream)->_flags & 0x10) != 0);
}


extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) ferror_unlocked (FILE *__stream)
{
  return (((__stream)->_flags & 0x20) != 0);
}
# 936 "/usr/include/stdio.h" 2 3 4


# 1 "/usr/include/bits/stdio2.h" 1 3 4
# 23 "/usr/include/bits/stdio2.h" 3 4
extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
      const char *__restrict __format,
      __gnuc_va_list __ap) __attribute__ ((__nothrow__ , __leaf__));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) sprintf (char *__restrict __s, const char *__restrict __fmt, ...)
{
  return __builtin___sprintf_chk (__s, 2 - 1,
      __builtin_object_size (__s, 2 > 1), __fmt, __builtin_va_arg_pack ());
}






extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) vsprintf (char *__restrict __s, const char *__restrict __fmt, __gnuc_va_list __ap)

{
  return __builtin___vsprintf_chk (__s, 2 - 1,
       __builtin_object_size (__s, 2 > 1), __fmt, __ap);
}



extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
      size_t __slen, const char *__restrict __format,
      ...) __attribute__ ((__nothrow__ , __leaf__));
extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
       size_t __slen, const char *__restrict __format,
       __gnuc_va_list __ap) __attribute__ ((__nothrow__ , __leaf__));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) snprintf (char *__restrict __s, size_t __n, const char *__restrict __fmt, ...)

{
  return __builtin___snprintf_chk (__s, __n, 2 - 1,
       __builtin_object_size (__s, 2 > 1), __fmt, __builtin_va_arg_pack ());
}






extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) vsnprintf (char *__restrict __s, size_t __n, const char *__restrict __fmt, __gnuc_va_list __ap)

{
  return __builtin___vsnprintf_chk (__s, __n, 2 - 1,
        __builtin_object_size (__s, 2 > 1), __fmt, __ap);
}





extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
     const char *__restrict __format, ...);
extern int __printf_chk (int __flag, const char *__restrict __format, ...);
extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
      const char *__restrict __format, __gnuc_va_list __ap);
extern int __vprintf_chk (int __flag, const char *__restrict __format,
     __gnuc_va_list __ap);


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
{
  return __fprintf_chk (__stream, 2 - 1, __fmt,
   __builtin_va_arg_pack ());
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
printf (const char *__restrict __fmt, ...)
{
  return __printf_chk (2 - 1, __fmt, __builtin_va_arg_pack ());
}







extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __ap)
{

  return __vfprintf_chk (stdout, 2 - 1, __fmt, __ap);



}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
vfprintf (FILE *__restrict __stream,
   const char *__restrict __fmt, __gnuc_va_list __ap)
{
  return __vfprintf_chk (__stream, 2 - 1, __fmt, __ap);
}


extern int __dprintf_chk (int __fd, int __flag, const char *__restrict __fmt,
     ...) __attribute__ ((__format__ (__printf__, 3, 4)));
extern int __vdprintf_chk (int __fd, int __flag,
      const char *__restrict __fmt, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 3, 0)));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
dprintf (int __fd, const char *__restrict __fmt, ...)
{
  return __dprintf_chk (__fd, 2 - 1, __fmt,
   __builtin_va_arg_pack ());
}





extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
vdprintf (int __fd, const char *__restrict __fmt, __gnuc_va_list __ap)
{
  return __vdprintf_chk (__fd, 2 - 1, __fmt, __ap);
}




extern int __asprintf_chk (char **__restrict __ptr, int __flag,
      const char *__restrict __fmt, ...)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__printf__, 3, 4))) __attribute__ ((__warn_unused_result__));
extern int __vasprintf_chk (char **__restrict __ptr, int __flag,
       const char *__restrict __fmt, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__printf__, 3, 0))) __attribute__ ((__warn_unused_result__));
extern int __obstack_printf_chk (struct obstack *__restrict __obstack,
     int __flag, const char *__restrict __format,
     ...)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__printf__, 3, 4)));
extern int __obstack_vprintf_chk (struct obstack *__restrict __obstack,
      int __flag,
      const char *__restrict __format,
      __gnuc_va_list __args)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__printf__, 3, 0)));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) asprintf (char **__restrict __ptr, const char *__restrict __fmt, ...)
{
  return __asprintf_chk (__ptr, 2 - 1, __fmt,
    __builtin_va_arg_pack ());
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) __asprintf (char **__restrict __ptr, const char *__restrict __fmt, ...)

{
  return __asprintf_chk (__ptr, 2 - 1, __fmt,
    __builtin_va_arg_pack ());
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) obstack_printf (struct obstack *__restrict __obstack, const char *__restrict __fmt, ...)

{
  return __obstack_printf_chk (__obstack, 2 - 1, __fmt,
          __builtin_va_arg_pack ());
}
# 206 "/usr/include/bits/stdio2.h" 3 4
extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) vasprintf (char **__restrict __ptr, const char *__restrict __fmt, __gnuc_va_list __ap)

{
  return __vasprintf_chk (__ptr, 2 - 1, __fmt, __ap);
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) obstack_vprintf (struct obstack *__restrict __obstack, const char *__restrict __fmt, __gnuc_va_list __ap)

{
  return __obstack_vprintf_chk (__obstack, 2 - 1, __fmt,
    __ap);
}
# 241 "/usr/include/bits/stdio2.h" 3 4
extern char *__fgets_chk (char *__restrict __s, size_t __size, int __n,
     FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern char *__fgets_alias (char *__restrict __s, int __n, FILE *__restrict __stream) __asm__ ("" "fgets")

                                        __attribute__ ((__warn_unused_result__));
extern char *__fgets_chk_warn (char *__restrict __s, size_t __size, int __n, FILE *__restrict __stream) __asm__ ("" "__fgets_chk")


     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("fgets called with bigger size than length " "of destination buffer")))
                                 ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) char *
fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
{
  if (__builtin_object_size (__s, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__n) || __n <= 0)
 return __fgets_chk (__s, __builtin_object_size (__s, 2 > 1), __n, __stream);

      if ((size_t) __n > __builtin_object_size (__s, 2 > 1))
 return __fgets_chk_warn (__s, __builtin_object_size (__s, 2 > 1), __n, __stream);
    }
  return __fgets_alias (__s, __n, __stream);
}

extern size_t __fread_chk (void *__restrict __ptr, size_t __ptrlen,
      size_t __size, size_t __n,
      FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern size_t __fread_alias (void *__restrict __ptr, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "fread")


            __attribute__ ((__warn_unused_result__));
extern size_t __fread_chk_warn (void *__restrict __ptr, size_t __ptrlen, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "__fread_chk")




     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("fread called with bigger size * nmemb than length " "of destination buffer")))
                                 ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) size_t
fread (void *__restrict __ptr, size_t __size, size_t __n,
       FILE *__restrict __stream)
{
  if (__builtin_object_size (__ptr, 0) != (size_t) -1)
    {
      if (!__builtin_constant_p (__size)
   || !__builtin_constant_p (__n)
   || (__size | __n) >= (((size_t) 1) << (8 * sizeof (size_t) / 2)))
 return __fread_chk (__ptr, __builtin_object_size (__ptr, 0), __size, __n, __stream);

      if (__size * __n > __builtin_object_size (__ptr, 0))
 return __fread_chk_warn (__ptr, __builtin_object_size (__ptr, 0), __size, __n, __stream);
    }
  return __fread_alias (__ptr, __size, __n, __stream);
}


extern char *__fgets_unlocked_chk (char *__restrict __s, size_t __size,
       int __n, FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern char *__fgets_unlocked_alias (char *__restrict __s, int __n, FILE *__restrict __stream) __asm__ ("" "fgets_unlocked")

                                                 __attribute__ ((__warn_unused_result__));
extern char *__fgets_unlocked_chk_warn (char *__restrict __s, size_t __size, int __n, FILE *__restrict __stream) __asm__ ("" "__fgets_unlocked_chk")


     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("fgets_unlocked called with bigger size than length " "of destination buffer")))
                                 ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) char *
fgets_unlocked (char *__restrict __s, int __n, FILE *__restrict __stream)
{
  if (__builtin_object_size (__s, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__n) || __n <= 0)
 return __fgets_unlocked_chk (__s, __builtin_object_size (__s, 2 > 1), __n, __stream);

      if ((size_t) __n > __builtin_object_size (__s, 2 > 1))
 return __fgets_unlocked_chk_warn (__s, __builtin_object_size (__s, 2 > 1), __n, __stream);
    }
  return __fgets_unlocked_alias (__s, __n, __stream);
}




extern size_t __fread_unlocked_chk (void *__restrict __ptr, size_t __ptrlen,
        size_t __size, size_t __n,
        FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern size_t __fread_unlocked_alias (void *__restrict __ptr, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "fread_unlocked")


                     __attribute__ ((__warn_unused_result__));
extern size_t __fread_unlocked_chk_warn (void *__restrict __ptr, size_t __ptrlen, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "__fread_unlocked_chk")




     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("fread_unlocked called with bigger size * nmemb than " "length of destination buffer")))
                                        ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) size_t
fread_unlocked (void *__restrict __ptr, size_t __size, size_t __n,
  FILE *__restrict __stream)
{
  if (__builtin_object_size (__ptr, 0) != (size_t) -1)
    {
      if (!__builtin_constant_p (__size)
   || !__builtin_constant_p (__n)
   || (__size | __n) >= (((size_t) 1) << (8 * sizeof (size_t) / 2)))
 return __fread_unlocked_chk (__ptr, __builtin_object_size (__ptr, 0), __size, __n,
         __stream);

      if (__size * __n > __builtin_object_size (__ptr, 0))
 return __fread_unlocked_chk_warn (__ptr, __builtin_object_size (__ptr, 0), __size, __n,
       __stream);
    }


  if (__builtin_constant_p (__size)
      && __builtin_constant_p (__n)
      && (__size | __n) < (((size_t) 1) << (8 * sizeof (size_t) / 2))
      && __size * __n <= 8)
    {
      size_t __cnt = __size * __n;
      char *__cptr = (char *) __ptr;
      if (__cnt == 0)
 return 0;

      for (; __cnt > 0; --__cnt)
 {
   int __c = (__builtin_expect (((__stream)->_IO_read_ptr >= (__stream)->_IO_read_end), 0) ? __uflow (__stream) : *(unsigned char *) (__stream)->_IO_read_ptr++);
   if (__c == 
# 373 "/usr/include/bits/stdio2.h"
             (-1)
# 373 "/usr/include/bits/stdio2.h" 3 4
                )
     break;
   *__cptr++ = __c;
 }
      return (__cptr - (char *) __ptr) / __size;
    }

  return __fread_unlocked_alias (__ptr, __size, __n, __stream);
}
# 939 "/usr/include/stdio.h" 2 3 4






# 49 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm5.h" 1
# 50 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/mt_ss.h" 1
# 51 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h" 2

# 1 "/usr/include/string.h" 1 3 4
# 27 "/usr/include/string.h" 3 4





# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 33 "/usr/include/string.h" 2 3 4









extern void *memcpy (void *__restrict __dest, const void *__restrict __src,
       size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern void *memmove (void *__dest, const void *__src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));






extern void *memccpy (void *__restrict __dest, const void *__restrict __src,
        int __c, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int memcmp (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 92 "/usr/include/string.h" 3 4
extern void *memchr (const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


# 106 "/usr/include/string.h" 3 4
extern void *rawmemchr (const void *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 117 "/usr/include/string.h" 3 4
extern void *memrchr (const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));






extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strcat (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncat (char *__restrict __dest, const char *__restrict __src,
        size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern int strncmp (const char *__s1, const char *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcoll (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern size_t strxfrm (char *__restrict __dest,
         const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

# 162 "/usr/include/string.h" 3 4
extern int strcoll_l (const char *__s1, const char *__s2, __locale_t __l)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));

extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
    __locale_t __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));




extern char *strdup (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));






extern char *strndup (const char *__string, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));
# 206 "/usr/include/string.h" 3 4

# 231 "/usr/include/string.h" 3 4
extern char *strchr (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 258 "/usr/include/string.h" 3 4
extern char *strrchr (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


# 272 "/usr/include/string.h" 3 4
extern char *strchrnul (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));






extern size_t strcspn (const char *__s, const char *__reject)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern size_t strspn (const char *__s, const char *__accept)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 310 "/usr/include/string.h" 3 4
extern char *strpbrk (const char *__s, const char *__accept)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 337 "/usr/include/string.h" 3 4
extern char *strstr (const char *__haystack, const char *__needle)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strtok (char *__restrict __s, const char *__restrict __delim)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));




extern char *__strtok_r (char *__restrict __s,
    const char *__restrict __delim,
    char **__restrict __save_ptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, const char *__restrict __delim,
         char **__restrict __save_ptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
# 368 "/usr/include/string.h" 3 4
extern char *strcasestr (const char *__haystack, const char *__needle)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));







extern void *memmem (const void *__haystack, size_t __haystacklen,
       const void *__needle, size_t __needlelen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 3)));



extern void *__mempcpy (void *__restrict __dest,
   const void *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern void *mempcpy (void *__restrict __dest,
        const void *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern size_t strlen (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern size_t strnlen (const char *__string, size_t __maxlen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern char *strerror (int __errnum) __attribute__ ((__nothrow__ , __leaf__));

# 433 "/usr/include/string.h" 3 4
extern char *strerror_r (int __errnum, char *__buf, size_t __buflen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2))) __attribute__ ((__warn_unused_result__));





extern char *strerror_l (int __errnum, __locale_t __l) __attribute__ ((__nothrow__ , __leaf__));





extern void __bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern void bcopy (const void *__src, void *__dest, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern void bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int bcmp (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 484 "/usr/include/string.h" 3 4
extern char *index (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 512 "/usr/include/string.h" 3 4
extern char *rindex (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




extern int ffs (int __i) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




extern int ffsl (long int __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__ extern int ffsll (long long int __ll)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern int strcasecmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));





extern int strcasecmp_l (const char *__s1, const char *__s2,
    __locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));

extern int strncasecmp_l (const char *__s1, const char *__s2,
     size_t __n, __locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 4)));





extern char *strsep (char **__restrict __stringp,
       const char *__restrict __delim)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strsignal (int __sig) __attribute__ ((__nothrow__ , __leaf__));


extern char *__stpcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern char *__stpncpy (char *__restrict __dest,
   const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int strverscmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strfry (char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern void *memfrob (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 599 "/usr/include/string.h" 3 4
extern char *basename (const char *__filename) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 627 "/usr/include/string.h" 3 4
# 1 "/usr/include/bits/string.h" 1 3 4
# 628 "/usr/include/string.h" 2 3 4


# 1 "/usr/include/bits/string2.h" 1 3 4
# 62 "/usr/include/bits/string2.h" 3 4
extern void *__rawmemchr (const void *__s, int __c);
# 193 "/usr/include/bits/string2.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) char *__strtok_r_1c (char *__s, char __sep, char **__nextp);
extern __inline __attribute__ ((__gnu_inline__)) char *
__strtok_r_1c (char *__s, char __sep, char **__nextp)
{
  char *__result;
  if (__s == ((void *)0))
    __s = *__nextp;
  while (*__s == __sep)
    ++__s;
  __result = ((void *)0);
  if (*__s != '\0')
    {
      __result = __s++;
      while (*__s != '\0')
 if (*__s++ == __sep)
   {
     __s[-1] = '\0';
     break;
   }
    }
  *__nextp = __s;
  return __result;
}
# 225 "/usr/include/bits/string2.h" 3 4
extern char *__strsep_g (char **__stringp, const char *__delim);
# 243 "/usr/include/bits/string2.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) char *__strsep_1c (char **__s, char __reject);
extern __inline __attribute__ ((__gnu_inline__)) char *
__strsep_1c (char **__s, char __reject)
{
  char *__retval = *__s;
  if (__retval != ((void *)0) && (*__s = (__extension__ (__builtin_constant_p (__reject) && !__builtin_constant_p (__retval) && (__reject) == '\0' ? (char *) __rawmemchr (__retval, __reject) : __builtin_strchr (__retval, __reject)))) != ((void *)0))
    *(*__s)++ = '\0';
  return __retval;
}

extern __inline __attribute__ ((__gnu_inline__)) char *__strsep_2c (char **__s, char __reject1, char __reject2);
extern __inline __attribute__ ((__gnu_inline__)) char *
__strsep_2c (char **__s, char __reject1, char __reject2)
{
  char *__retval = *__s;
  if (__retval != ((void *)0))
    {
      char *__cp = __retval;
      while (1)
 {
   if (*__cp == '\0')
     {
       __cp = ((void *)0);
   break;
     }
   if (*__cp == __reject1 || *__cp == __reject2)
     {
       *__cp++ = '\0';
       break;
     }
   ++__cp;
 }
      *__s = __cp;
    }
  return __retval;
}

extern __inline __attribute__ ((__gnu_inline__)) char *__strsep_3c (char **__s, char __reject1, char __reject2,
       char __reject3);
extern __inline __attribute__ ((__gnu_inline__)) char *
__strsep_3c (char **__s, char __reject1, char __reject2, char __reject3)
{
  char *__retval = *__s;
  if (__retval != ((void *)0))
    {
      char *__cp = __retval;
      while (1)
 {
   if (*__cp == '\0')
     {
       __cp = ((void *)0);
   break;
     }
   if (*__cp == __reject1 || *__cp == __reject2 || *__cp == __reject3)
     {
       *__cp++ = '\0';
       break;
     }
   ++__cp;
 }
      *__s = __cp;
    }
  return __retval;
}
# 319 "/usr/include/bits/string2.h" 3 4
# 1 "/usr/include/stdlib.h" 1 3 4
# 32 "/usr/include/stdlib.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 33 "/usr/include/stdlib.h" 2 3 4


# 425 "/usr/include/stdlib.h" 3 4


extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));

# 934 "/usr/include/stdlib.h" 3 4

# 320 "/usr/include/bits/string2.h" 2 3 4




extern char *__strdup (const char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__));
# 343 "/usr/include/bits/string2.h" 3 4
extern char *__strndup (const char *__string, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__));
# 631 "/usr/include/string.h" 2 3 4




# 1 "/usr/include/bits/string3.h" 1 3 4
# 49 "/usr/include/bits/string3.h" 3 4
extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
__attribute__ ((__nothrow__ , __leaf__)) memcpy (void *__restrict __dest, const void *__restrict __src, size_t __len)

{
  return __builtin___memcpy_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
__attribute__ ((__nothrow__ , __leaf__)) memmove (void *__dest, const void *__src, size_t __len)
{
  return __builtin___memmove_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
__attribute__ ((__nothrow__ , __leaf__)) mempcpy (void *__restrict __dest, const void *__restrict __src, size_t __len)

{
  return __builtin___mempcpy_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
}
# 77 "/usr/include/bits/string3.h" 3 4
extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
__attribute__ ((__nothrow__ , __leaf__)) memset (void *__dest, int __ch, size_t __len)
{
# 90 "/usr/include/bits/string3.h" 3 4
  return __builtin___memset_chk (__dest, __ch, __len, __builtin_object_size (__dest, 0));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void
__attribute__ ((__nothrow__ , __leaf__)) bcopy (const void *__src, void *__dest, size_t __len)
{
  (void) __builtin___memmove_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void
__attribute__ ((__nothrow__ , __leaf__)) bzero (void *__dest, size_t __len)
{
  (void) __builtin___memset_chk (__dest, '\0', __len, __builtin_object_size (__dest, 0));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strcpy (char *__restrict __dest, const char *__restrict __src)
{
  return __builtin___strcpy_chk (__dest, __src, __builtin_object_size (__dest, 2 > 1));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) stpcpy (char *__restrict __dest, const char *__restrict __src)
{
  return __builtin___stpcpy_chk (__dest, __src, __builtin_object_size (__dest, 2 > 1));
}



extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strncpy (char *__restrict __dest, const char *__restrict __src, size_t __len)

{
  return __builtin___strncpy_chk (__dest, __src, __len, __builtin_object_size (__dest, 2 > 1));
}


extern char *__stpncpy_chk (char *__dest, const char *__src, size_t __n,
       size_t __destlen) __attribute__ ((__nothrow__ , __leaf__));
extern char *__stpncpy_alias (char *__dest, const char *__src, size_t __n) __asm__ ("" "stpncpy") __attribute__ ((__nothrow__ , __leaf__))
                                 ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) stpncpy (char *__dest, const char *__src, size_t __n)
{
  if (__builtin_object_size (__dest, 2 > 1) != (size_t) -1
      && (!__builtin_constant_p (__n) || __n > __builtin_object_size (__dest, 2 > 1)))
    return __stpncpy_chk (__dest, __src, __n, __builtin_object_size (__dest, 2 > 1));
  return __stpncpy_alias (__dest, __src, __n);
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strcat (char *__restrict __dest, const char *__restrict __src)
{
  return __builtin___strcat_chk (__dest, __src, __builtin_object_size (__dest, 2 > 1));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strncat (char *__restrict __dest, const char *__restrict __src, size_t __len)

{
  return __builtin___strncat_chk (__dest, __src, __len, __builtin_object_size (__dest, 2 > 1));
}
# 636 "/usr/include/string.h" 2 3 4
# 656 "/usr/include/string.h" 3 4

# 53 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h" 2

# 1 "/usr/include/sys/socket.h" 1 3 4
# 24 "/usr/include/sys/socket.h" 3 4


# 1 "/usr/include/sys/uio.h" 1 3 4
# 25 "/usr/include/sys/uio.h" 3 4



# 1 "/usr/include/bits/uio.h" 1 3 4
# 43 "/usr/include/bits/uio.h" 3 4
struct iovec
  {
    void *iov_base;
    size_t iov_len;
  };
# 56 "/usr/include/bits/uio.h" 3 4



extern ssize_t process_vm_readv (pid_t __pid, const struct iovec *__lvec,
     unsigned long int __liovcnt,
     const struct iovec *__rvec,
     unsigned long int __riovcnt,
     unsigned long int __flags)
  __attribute__ ((__nothrow__ , __leaf__));


extern ssize_t process_vm_writev (pid_t __pid, const struct iovec *__lvec,
      unsigned long int __liovcnt,
      const struct iovec *__rvec,
      unsigned long int __riovcnt,
      unsigned long int __flags)
  __attribute__ ((__nothrow__ , __leaf__));


# 29 "/usr/include/sys/uio.h" 2 3 4
# 39 "/usr/include/sys/uio.h" 3 4
extern ssize_t readv (int __fd, const struct iovec *__iovec, int __count)
  __attribute__ ((__warn_unused_result__));
# 50 "/usr/include/sys/uio.h" 3 4
extern ssize_t writev (int __fd, const struct iovec *__iovec, int __count)
  __attribute__ ((__warn_unused_result__));
# 65 "/usr/include/sys/uio.h" 3 4
extern ssize_t preadv (int __fd, const struct iovec *__iovec, int __count,
         __off_t __offset) __attribute__ ((__warn_unused_result__));
# 77 "/usr/include/sys/uio.h" 3 4
extern ssize_t pwritev (int __fd, const struct iovec *__iovec, int __count,
   __off_t __offset) __attribute__ ((__warn_unused_result__));
# 103 "/usr/include/sys/uio.h" 3 4
extern ssize_t preadv64 (int __fd, const struct iovec *__iovec, int __count,
    __off64_t __offset) __attribute__ ((__warn_unused_result__));
# 115 "/usr/include/sys/uio.h" 3 4
extern ssize_t pwritev64 (int __fd, const struct iovec *__iovec, int __count,
     __off64_t __offset) __attribute__ ((__warn_unused_result__));




# 27 "/usr/include/sys/socket.h" 2 3 4

# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 29 "/usr/include/sys/socket.h" 2 3 4


# 1 "/usr/include/bits/sigset.h" 1 3 4
# 32 "/usr/include/sys/socket.h" 2 3 4






# 1 "/usr/include/bits/socket.h" 1 3 4
# 27 "/usr/include/bits/socket.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 28 "/usr/include/bits/socket.h" 2 3 4





typedef __socklen_t socklen_t;




# 1 "/usr/include/bits/socket_type.h" 1 3 4
# 24 "/usr/include/bits/socket_type.h" 3 4
enum __socket_type
{
  SOCK_STREAM = 1,


  SOCK_DGRAM = 2,


  SOCK_RAW = 3,

  SOCK_RDM = 4,

  SOCK_SEQPACKET = 5,


  SOCK_DCCP = 6,

  SOCK_PACKET = 10,







  SOCK_CLOEXEC = 02000000,


  SOCK_NONBLOCK = 00004000


};
# 39 "/usr/include/bits/socket.h" 2 3 4
# 167 "/usr/include/bits/socket.h" 3 4
# 1 "/usr/include/bits/sockaddr.h" 1 3 4
# 28 "/usr/include/bits/sockaddr.h" 3 4
typedef unsigned short int sa_family_t;
# 168 "/usr/include/bits/socket.h" 2 3 4


struct sockaddr
  {
    sa_family_t sa_family;
    char sa_data[14];
  };
# 183 "/usr/include/bits/socket.h" 3 4
struct sockaddr_storage
  {
    sa_family_t ss_family;
    char __ss_padding[(128 - (sizeof (unsigned short int)) - sizeof (unsigned long int))];
    unsigned long int __ss_align;
  };



enum
  {
    MSG_OOB = 0x01,

    MSG_PEEK = 0x02,

    MSG_DONTROUTE = 0x04,



    MSG_TRYHARD = MSG_DONTROUTE,


    MSG_CTRUNC = 0x08,

    MSG_PROXY = 0x10,

    MSG_TRUNC = 0x20,

    MSG_DONTWAIT = 0x40,

    MSG_EOR = 0x80,

    MSG_WAITALL = 0x100,

    MSG_FIN = 0x200,

    MSG_SYN = 0x400,

    MSG_CONFIRM = 0x800,

    MSG_RST = 0x1000,

    MSG_ERRQUEUE = 0x2000,

    MSG_NOSIGNAL = 0x4000,

    MSG_MORE = 0x8000,

    MSG_WAITFORONE = 0x10000,

    MSG_BATCH = 0x40000,

    MSG_FASTOPEN = 0x20000000,


    MSG_CMSG_CLOEXEC = 0x40000000



  };




struct msghdr
  {
    void *msg_name;
    socklen_t msg_namelen;

    struct iovec *msg_iov;
    size_t msg_iovlen;

    void *msg_control;
    size_t msg_controllen;




    int msg_flags;
  };


struct cmsghdr
  {
    size_t cmsg_len;




    int cmsg_level;
    int cmsg_type;

    __extension__ unsigned char __cmsg_data [];

  };
# 295 "/usr/include/bits/socket.h" 3 4
extern struct cmsghdr *__cmsg_nxthdr (struct msghdr *__mhdr,
          struct cmsghdr *__cmsg) __attribute__ ((__nothrow__ , __leaf__));




extern __inline __attribute__ ((__gnu_inline__)) struct cmsghdr *
__attribute__ ((__nothrow__ , __leaf__)) __cmsg_nxthdr (struct msghdr *__mhdr, struct cmsghdr *__cmsg)
{
  if ((size_t) __cmsg->cmsg_len < sizeof (struct cmsghdr))

    return (struct cmsghdr *) 0;

  __cmsg = (struct cmsghdr *) ((unsigned char *) __cmsg
          + (((__cmsg->cmsg_len) + sizeof (size_t) - 1) & (size_t) ~(sizeof (size_t) - 1)));
  if ((unsigned char *) (__cmsg + 1) > ((unsigned char *) __mhdr->msg_control
     + __mhdr->msg_controllen)
      || ((unsigned char *) __cmsg + (((__cmsg->cmsg_len) + sizeof (size_t) - 1) & (size_t) ~(sizeof (size_t) - 1))
   > ((unsigned char *) __mhdr->msg_control + __mhdr->msg_controllen)))

    return (struct cmsghdr *) 0;
  return __cmsg;
}




enum
  {
    SCM_RIGHTS = 0x01


    , SCM_CREDENTIALS = 0x02


  };



struct ucred
{
  pid_t pid;
  uid_t uid;
  gid_t gid;
};
# 368 "/usr/include/bits/socket.h" 3 4
# 1 "/usr/include/asm/socket.h" 1 3 4
# 1 "/usr/include/asm-generic/socket.h" 1 3 4



# 1 "/usr/include/asm/sockios.h" 1 3 4
# 1 "/usr/include/asm-generic/sockios.h" 1 3 4
# 1 "/usr/include/asm/sockios.h" 2 3 4
# 5 "/usr/include/asm-generic/socket.h" 2 3 4
# 1 "/usr/include/asm/socket.h" 2 3 4
# 369 "/usr/include/bits/socket.h" 2 3 4
# 402 "/usr/include/bits/socket.h" 3 4
struct linger
  {
    int l_onoff;
    int l_linger;
  };
# 39 "/usr/include/sys/socket.h" 2 3 4




struct osockaddr
  {
    unsigned short int sa_family;
    unsigned char sa_data[14];
  };




enum
{
  SHUT_RD = 0,

  SHUT_WR,

  SHUT_RDWR

};
# 90 "/usr/include/sys/socket.h" 3 4
typedef union { struct sockaddr *__restrict __sockaddr__; struct sockaddr_at *__restrict __sockaddr_at__; struct sockaddr_ax25 *__restrict __sockaddr_ax25__; struct sockaddr_dl *__restrict __sockaddr_dl__; struct sockaddr_eon *__restrict __sockaddr_eon__; struct sockaddr_in *__restrict __sockaddr_in__; struct sockaddr_in6 *__restrict __sockaddr_in6__; struct sockaddr_inarp *__restrict __sockaddr_inarp__; struct sockaddr_ipx *__restrict __sockaddr_ipx__; struct sockaddr_iso *__restrict __sockaddr_iso__; struct sockaddr_ns *__restrict __sockaddr_ns__; struct sockaddr_un *__restrict __sockaddr_un__; struct sockaddr_x25 *__restrict __sockaddr_x25__;
       } __SOCKADDR_ARG __attribute__ ((__transparent_union__));


typedef union { const struct sockaddr *__restrict __sockaddr__; const struct sockaddr_at *__restrict __sockaddr_at__; const struct sockaddr_ax25 *__restrict __sockaddr_ax25__; const struct sockaddr_dl *__restrict __sockaddr_dl__; const struct sockaddr_eon *__restrict __sockaddr_eon__; const struct sockaddr_in *__restrict __sockaddr_in__; const struct sockaddr_in6 *__restrict __sockaddr_in6__; const struct sockaddr_inarp *__restrict __sockaddr_inarp__; const struct sockaddr_ipx *__restrict __sockaddr_ipx__; const struct sockaddr_iso *__restrict __sockaddr_iso__; const struct sockaddr_ns *__restrict __sockaddr_ns__; const struct sockaddr_un *__restrict __sockaddr_un__; const struct sockaddr_x25 *__restrict __sockaddr_x25__;
       } __CONST_SOCKADDR_ARG __attribute__ ((__transparent_union__));





struct mmsghdr
  {
    struct msghdr msg_hdr;
    unsigned int msg_len;

  };






extern int socket (int __domain, int __type, int __protocol) __attribute__ ((__nothrow__ , __leaf__));





extern int socketpair (int __domain, int __type, int __protocol,
         int __fds[2]) __attribute__ ((__nothrow__ , __leaf__));


extern int bind (int __fd, __CONST_SOCKADDR_ARG __addr, socklen_t __len)
     __attribute__ ((__nothrow__ , __leaf__));


extern int getsockname (int __fd, __SOCKADDR_ARG __addr,
   socklen_t *__restrict __len) __attribute__ ((__nothrow__ , __leaf__));
# 137 "/usr/include/sys/socket.h" 3 4
extern int connect (int __fd, __CONST_SOCKADDR_ARG __addr, socklen_t __len);



extern int getpeername (int __fd, __SOCKADDR_ARG __addr,
   socklen_t *__restrict __len) __attribute__ ((__nothrow__ , __leaf__));






extern ssize_t send (int __fd, const void *__buf, size_t __n, int __flags);






extern ssize_t recv (int __fd, void *__buf, size_t __n, int __flags);






extern ssize_t sendto (int __fd, const void *__buf, size_t __n,
         int __flags, __CONST_SOCKADDR_ARG __addr,
         socklen_t __addr_len);
# 174 "/usr/include/sys/socket.h" 3 4
extern ssize_t recvfrom (int __fd, void *__restrict __buf, size_t __n,
    int __flags, __SOCKADDR_ARG __addr,
    socklen_t *__restrict __addr_len);







extern ssize_t sendmsg (int __fd, const struct msghdr *__message,
   int __flags);







extern int sendmmsg (int __fd, struct mmsghdr *__vmessages,
       unsigned int __vlen, int __flags);







extern ssize_t recvmsg (int __fd, struct msghdr *__message, int __flags);







extern int recvmmsg (int __fd, struct mmsghdr *__vmessages,
       unsigned int __vlen, int __flags,
       struct timespec *__tmo);






extern int getsockopt (int __fd, int __level, int __optname,
         void *__restrict __optval,
         socklen_t *__restrict __optlen) __attribute__ ((__nothrow__ , __leaf__));




extern int setsockopt (int __fd, int __level, int __optname,
         const void *__optval, socklen_t __optlen) __attribute__ ((__nothrow__ , __leaf__));





extern int listen (int __fd, int __n) __attribute__ ((__nothrow__ , __leaf__));
# 243 "/usr/include/sys/socket.h" 3 4
extern int accept (int __fd, __SOCKADDR_ARG __addr,
     socklen_t *__restrict __addr_len);






extern int accept4 (int __fd, __SOCKADDR_ARG __addr,
      socklen_t *__restrict __addr_len, int __flags);
# 261 "/usr/include/sys/socket.h" 3 4
extern int shutdown (int __fd, int __how) __attribute__ ((__nothrow__ , __leaf__));




extern int sockatmark (int __fd) __attribute__ ((__nothrow__ , __leaf__));







extern int isfdtype (int __fd, int __fdtype) __attribute__ ((__nothrow__ , __leaf__));





# 1 "/usr/include/bits/socket2.h" 1 3 4
# 23 "/usr/include/bits/socket2.h" 3 4
extern ssize_t __recv_chk (int __fd, void *__buf, size_t __n, size_t __buflen,
      int __flags);
extern ssize_t __recv_alias (int __fd, void *__buf, size_t __n, int __flags) __asm__ ("" "recv")
                          ;
extern ssize_t __recv_chk_warn (int __fd, void *__buf, size_t __n, size_t __buflen, int __flags) __asm__ ("" "__recv_chk")


     __attribute__((__warning__ ("recv called with bigger length than size of destination " "buffer")))
            ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) ssize_t
recv (int __fd, void *__buf, size_t __n, int __flags)
{
  if (__builtin_object_size (__buf, 0) != (size_t) -1)
    {
      if (!__builtin_constant_p (__n))
 return __recv_chk (__fd, __buf, __n, __builtin_object_size (__buf, 0), __flags);

      if (__n > __builtin_object_size (__buf, 0))
 return __recv_chk_warn (__fd, __buf, __n, __builtin_object_size (__buf, 0), __flags);
    }
  return __recv_alias (__fd, __buf, __n, __flags);
}

extern ssize_t __recvfrom_chk (int __fd, void *__restrict __buf, size_t __n,
          size_t __buflen, int __flags,
          __SOCKADDR_ARG __addr,
          socklen_t *__restrict __addr_len);
extern ssize_t __recvfrom_alias (int __fd, void *__restrict __buf, size_t __n, int __flags, __SOCKADDR_ARG __addr, socklen_t *__restrict __addr_len) __asm__ ("" "recvfrom")


                                                   ;
extern ssize_t __recvfrom_chk_warn (int __fd, void *__restrict __buf, size_t __n, size_t __buflen, int __flags, __SOCKADDR_ARG __addr, socklen_t *__restrict __addr_len) __asm__ ("" "__recvfrom_chk")




     __attribute__((__warning__ ("recvfrom called with bigger length than size of " "destination buffer")))
                        ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) ssize_t
recvfrom (int __fd, void *__restrict __buf, size_t __n, int __flags,
   __SOCKADDR_ARG __addr, socklen_t *__restrict __addr_len)
{
  if (__builtin_object_size (__buf, 0) != (size_t) -1)
    {
      if (!__builtin_constant_p (__n))
 return __recvfrom_chk (__fd, __buf, __n, __builtin_object_size (__buf, 0), __flags,
          __addr, __addr_len);
      if (__n > __builtin_object_size (__buf, 0))
 return __recvfrom_chk_warn (__fd, __buf, __n, __builtin_object_size (__buf, 0), __flags,
        __addr, __addr_len);
    }
  return __recvfrom_alias (__fd, __buf, __n, __flags, __addr, __addr_len);
}
# 281 "/usr/include/sys/socket.h" 2 3 4



# 55 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h" 2
# 1 "/usr/include/netinet/in.h" 1 3 4
# 22 "/usr/include/netinet/in.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stdint.h" 1 3 4
# 9 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stdint.h" 3 4
# 1 "/usr/include/stdint.h" 1 3 4
# 26 "/usr/include/stdint.h" 3 4
# 1 "/usr/include/bits/wchar.h" 1 3 4
# 27 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 28 "/usr/include/stdint.h" 2 3 4
# 48 "/usr/include/stdint.h" 3 4
typedef unsigned char uint8_t;
typedef unsigned short int uint16_t;

typedef unsigned int uint32_t;





__extension__
typedef unsigned long long int uint64_t;






typedef signed char int_least8_t;
typedef short int int_least16_t;
typedef int int_least32_t;



__extension__
typedef long long int int_least64_t;



typedef unsigned char uint_least8_t;
typedef unsigned short int uint_least16_t;
typedef unsigned int uint_least32_t;



__extension__
typedef unsigned long long int uint_least64_t;






typedef signed char int_fast8_t;





typedef int int_fast16_t;
typedef int int_fast32_t;
__extension__
typedef long long int int_fast64_t;



typedef unsigned char uint_fast8_t;





typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
__extension__
typedef unsigned long long int uint_fast64_t;
# 125 "/usr/include/stdint.h" 3 4
typedef int intptr_t;


typedef unsigned int uintptr_t;
# 137 "/usr/include/stdint.h" 3 4
__extension__
typedef long long int intmax_t;
__extension__
typedef unsigned long long int uintmax_t;
# 10 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stdint.h" 2 3 4
# 23 "/usr/include/netinet/in.h" 2 3 4







typedef uint32_t in_addr_t;
struct in_addr
  {
    in_addr_t s_addr;
  };


# 1 "/usr/include/bits/in.h" 1 3 4
# 141 "/usr/include/bits/in.h" 3 4
struct ip_opts
  {
    struct in_addr ip_dst;
    char ip_opts[40];
  };


struct ip_mreqn
  {
    struct in_addr imr_multiaddr;
    struct in_addr imr_address;
    int imr_ifindex;
  };


struct in_pktinfo
  {
    int ipi_ifindex;
    struct in_addr ipi_spec_dst;
    struct in_addr ipi_addr;
  };
# 38 "/usr/include/netinet/in.h" 2 3 4


enum
  {
    IPPROTO_IP = 0,

    IPPROTO_ICMP = 1,

    IPPROTO_IGMP = 2,

    IPPROTO_IPIP = 4,

    IPPROTO_TCP = 6,

    IPPROTO_EGP = 8,

    IPPROTO_PUP = 12,

    IPPROTO_UDP = 17,

    IPPROTO_IDP = 22,

    IPPROTO_TP = 29,

    IPPROTO_DCCP = 33,

    IPPROTO_IPV6 = 41,

    IPPROTO_RSVP = 46,

    IPPROTO_GRE = 47,

    IPPROTO_ESP = 50,

    IPPROTO_AH = 51,

    IPPROTO_MTP = 92,

    IPPROTO_BEETPH = 94,

    IPPROTO_ENCAP = 98,

    IPPROTO_PIM = 103,

    IPPROTO_COMP = 108,

    IPPROTO_SCTP = 132,

    IPPROTO_UDPLITE = 136,

    IPPROTO_MPLS = 137,

    IPPROTO_RAW = 255,

    IPPROTO_MAX
  };





enum
  {
    IPPROTO_HOPOPTS = 0,

    IPPROTO_ROUTING = 43,

    IPPROTO_FRAGMENT = 44,

    IPPROTO_ICMPV6 = 58,

    IPPROTO_NONE = 59,

    IPPROTO_DSTOPTS = 60,

    IPPROTO_MH = 135

  };



typedef uint16_t in_port_t;


enum
  {
    IPPORT_ECHO = 7,
    IPPORT_DISCARD = 9,
    IPPORT_SYSTAT = 11,
    IPPORT_DAYTIME = 13,
    IPPORT_NETSTAT = 15,
    IPPORT_FTP = 21,
    IPPORT_TELNET = 23,
    IPPORT_SMTP = 25,
    IPPORT_TIMESERVER = 37,
    IPPORT_NAMESERVER = 42,
    IPPORT_WHOIS = 43,
    IPPORT_MTP = 57,

    IPPORT_TFTP = 69,
    IPPORT_RJE = 77,
    IPPORT_FINGER = 79,
    IPPORT_TTYLINK = 87,
    IPPORT_SUPDUP = 95,


    IPPORT_EXECSERVER = 512,
    IPPORT_LOGINSERVER = 513,
    IPPORT_CMDSERVER = 514,
    IPPORT_EFSSERVER = 520,


    IPPORT_BIFFUDP = 512,
    IPPORT_WHOSERVER = 513,
    IPPORT_ROUTESERVER = 520,


    IPPORT_RESERVED = 1024,


    IPPORT_USERRESERVED = 5000
  };
# 211 "/usr/include/netinet/in.h" 3 4
struct in6_addr
  {
    union
      {
 uint8_t __u6_addr8[16];

 uint16_t __u6_addr16[8];
 uint32_t __u6_addr32[4];

      } __in6_u;





  };


extern const struct in6_addr in6addr_any;
extern const struct in6_addr in6addr_loopback;
# 239 "/usr/include/netinet/in.h" 3 4
struct sockaddr_in
  {
    sa_family_t sin_family;
    in_port_t sin_port;
    struct in_addr sin_addr;


    unsigned char sin_zero[sizeof (struct sockaddr) -
      (sizeof (unsigned short int)) -
      sizeof (in_port_t) -
      sizeof (struct in_addr)];
  };



struct sockaddr_in6
  {
    sa_family_t sin6_family;
    in_port_t sin6_port;
    uint32_t sin6_flowinfo;
    struct in6_addr sin6_addr;
    uint32_t sin6_scope_id;
  };




struct ip_mreq
  {

    struct in_addr imr_multiaddr;


    struct in_addr imr_interface;
  };

struct ip_mreq_source
  {

    struct in_addr imr_multiaddr;


    struct in_addr imr_interface;


    struct in_addr imr_sourceaddr;
  };




struct ipv6_mreq
  {

    struct in6_addr ipv6mr_multiaddr;


    unsigned int ipv6mr_interface;
  };




struct group_req
  {

    uint32_t gr_interface;


    struct sockaddr_storage gr_group;
  };

struct group_source_req
  {

    uint32_t gsr_interface;


    struct sockaddr_storage gsr_group;


    struct sockaddr_storage gsr_source;
  };



struct ip_msfilter
  {

    struct in_addr imsf_multiaddr;


    struct in_addr imsf_interface;


    uint32_t imsf_fmode;


    uint32_t imsf_numsrc;

    struct in_addr imsf_slist[1];
  };





struct group_filter
  {

    uint32_t gf_interface;


    struct sockaddr_storage gf_group;


    uint32_t gf_fmode;


    uint32_t gf_numsrc;

    struct sockaddr_storage gf_slist[1];
};
# 376 "/usr/include/netinet/in.h" 3 4
extern uint32_t ntohl (uint32_t __netlong) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
extern uint16_t ntohs (uint16_t __netshort)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
extern uint32_t htonl (uint32_t __hostlong)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
extern uint16_t htons (uint16_t __hostshort)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




# 1 "/usr/include/bits/byteswap.h" 1 3 4
# 388 "/usr/include/netinet/in.h" 2 3 4
# 503 "/usr/include/netinet/in.h" 3 4
extern int bindresvport (int __sockfd, struct sockaddr_in *__sock_in) __attribute__ ((__nothrow__ , __leaf__));


extern int bindresvport6 (int __sockfd, struct sockaddr_in6 *__sock_in)
     __attribute__ ((__nothrow__ , __leaf__));
# 533 "/usr/include/netinet/in.h" 3 4
struct cmsghdr;



struct in6_pktinfo
  {
    struct in6_addr ipi6_addr;
    unsigned int ipi6_ifindex;
  };


struct ip6_mtuinfo
  {
    struct sockaddr_in6 ip6m_addr;
    uint32_t ip6m_mtu;
  };



extern int inet6_option_space (int __nbytes)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));
extern int inet6_option_init (void *__bp, struct cmsghdr **__cmsgp,
         int __type) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));
extern int inet6_option_append (struct cmsghdr *__cmsg,
    const uint8_t *__typep, int __multx,
    int __plusy) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));
extern uint8_t *inet6_option_alloc (struct cmsghdr *__cmsg, int __datalen,
        int __multx, int __plusy)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));
extern int inet6_option_next (const struct cmsghdr *__cmsg,
         uint8_t **__tptrp)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));
extern int inet6_option_find (const struct cmsghdr *__cmsg,
         uint8_t **__tptrp, int __type)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));



extern int inet6_opt_init (void *__extbuf, socklen_t __extlen) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_opt_append (void *__extbuf, socklen_t __extlen, int __offset,
        uint8_t __type, socklen_t __len, uint8_t __align,
        void **__databufp) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_opt_finish (void *__extbuf, socklen_t __extlen, int __offset)
     __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_opt_set_val (void *__databuf, int __offset, void *__val,
         socklen_t __vallen) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_opt_next (void *__extbuf, socklen_t __extlen, int __offset,
      uint8_t *__typep, socklen_t *__lenp,
      void **__databufp) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_opt_find (void *__extbuf, socklen_t __extlen, int __offset,
      uint8_t __type, socklen_t *__lenp,
      void **__databufp) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_opt_get_val (void *__databuf, int __offset, void *__val,
         socklen_t __vallen) __attribute__ ((__nothrow__ , __leaf__));



extern socklen_t inet6_rth_space (int __type, int __segments) __attribute__ ((__nothrow__ , __leaf__));
extern void *inet6_rth_init (void *__bp, socklen_t __bp_len, int __type,
        int __segments) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_rth_add (void *__bp, const struct in6_addr *__addr) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_rth_reverse (const void *__in, void *__out) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_rth_segments (const void *__bp) __attribute__ ((__nothrow__ , __leaf__));
extern struct in6_addr *inet6_rth_getaddr (const void *__bp, int __index)
     __attribute__ ((__nothrow__ , __leaf__));





extern int getipv4sourcefilter (int __s, struct in_addr __interface_addr,
    struct in_addr __group, uint32_t *__fmode,
    uint32_t *__numsrc, struct in_addr *__slist)
     __attribute__ ((__nothrow__ , __leaf__));


extern int setipv4sourcefilter (int __s, struct in_addr __interface_addr,
    struct in_addr __group, uint32_t __fmode,
    uint32_t __numsrc,
    const struct in_addr *__slist)
     __attribute__ ((__nothrow__ , __leaf__));



extern int getsourcefilter (int __s, uint32_t __interface_addr,
       const struct sockaddr *__group,
       socklen_t __grouplen, uint32_t *__fmode,
       uint32_t *__numsrc,
       struct sockaddr_storage *__slist) __attribute__ ((__nothrow__ , __leaf__));


extern int setsourcefilter (int __s, uint32_t __interface_addr,
       const struct sockaddr *__group,
       socklen_t __grouplen, uint32_t __fmode,
       uint32_t __numsrc,
       const struct sockaddr_storage *__slist) __attribute__ ((__nothrow__ , __leaf__));



# 56 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h" 2
# 1919 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.h" 2
# 25 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c" 2

# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_hash.h" 1
# 27 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_llist.h" 1
# 28 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.h" 1
# 29 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_tpt.h" 1
# 21 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_tpt.h"
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.h" 1
# 22 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_tpt.h" 2
# 30 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_tkns.h" 1
# 31 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_mblk.h" 1
# 32 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c" 2

# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nlu.h" 1
# 34 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/rmu.h" 1
# 35 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x" 1
# 115 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"

# 115 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"
typedef S8 Txt;

typedef U8 Ent;

typedef U8 Inst;

typedef struct entityId
{
   Ent ent;
   Inst inst;
} EntityId;



typedef S16 Elmnt;

typedef S16 ElmntInst1;

typedef S16 ElmntInst2;

typedef S16 ElmntInst3;

typedef struct elmntId
{
   Elmnt elmnt;
   ElmntInst1 elmntInst1;
   ElmntInst2 elmntInst2;
   ElmntInst3 elmntInst3;
} ElmntId;

typedef U8 Region;

typedef U8 Pool;

typedef U8 Prior;

typedef Prior Priority;

typedef U8 Route;

typedef U8 Data;

typedef U8 Selector;

typedef S16 Reason;

typedef U16 ProcId;

typedef U8 Event;

typedef U32 TranId;

typedef S16 IntNum;

typedef U16 TranNum;

typedef U16 CmIntfId;
typedef U16 CmIntfVer;
# 183 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"
typedef struct pst
{
   ProcId dstProcId;
   ProcId srcProcId;

   Ent dstEnt;
   Inst dstInst;
   Ent srcEnt;
   Inst srcInst;

   Prior prior;
   Route route;
   Event event;
   Region region;

   Pool pool;
   Selector selector;
   CmIntfVer intfVer;
} Pst;



typedef struct systemId
{
   S16 mVer;
   S16 mRev;
   S16 bVer;
   S16 bRev;
   Txt *ptNmb;
} SystemId;





typedef struct protAddr
{
   U16 protType;
   U8 len;
   U8 preLen;
   U8 address[16];





}ProtAddr;

typedef struct protAddrTbl
{
   U8 count;
   ProtAddr addr[4];
}ProtAddrTbl;



typedef struct addrs
{
   U8 length;
   U8 strg[20];
} Addrs;

typedef struct shrtAddr
{
   U8 length;
   U8 strg[32];
} ShrtAddrs;

typedef struct lngAddr
{
   U8 length;
   U8 strg[64];
} LngAddrs;



typedef struct bndCfg
{
   Txt *usrId;
   U8 bufOwnshp;
   U8 flcTyp;
   U8 wdw;
   Ent ent;
   Inst inst;
   Region region;
   Pool pool;
   Prior prior;
   Route route;
   Addrs sapAdr;
   Selector selector;
} BndCfg;
# 288 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"
typedef struct tskInit
{



   Ent ent;
   Inst inst;
   Region region;
   Pool pool;
   Reason reason;
   Bool cfgDone;
   Bool acnt;
   Bool usta;
   Bool trc;

   U32 dbgMask;
   Txt prntBuf[255];

   Txt *prntCirBuf;




   BndCfg lmBnd;
   ProcId procId;
   Pst lmPst;
# 325 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"
} TskInit;


typedef S32 Cntr;

typedef U32 StsCntr;

typedef S16 LnkNmb;

typedef S8 VBit;

typedef S16 SuId;

typedef S16 SpId;

typedef S16 SuInstId;

typedef S16 SpInstId;

typedef U16 PortId;

typedef U8 Sapi;

typedef U8 Tei;

typedef U8 Ces;

typedef U32 Dlci;

typedef U16 CalRef;

typedef S16 Origin;

typedef U16 NwId;

typedef S16 Swtch;

typedef U8 Cause;

typedef U8 Dgn;

typedef S16 Action;

typedef S16 SeqS16;

typedef U16 SeqU16;

typedef S32 SeqS24;

typedef U32 SeqU24;

typedef U8 SetUpArb;

typedef U8 EvntType;

typedef U8 State;

typedef U8 Mode;

typedef S32 ConnId;

typedef U32 UConnId;

typedef U16 ProtId;

typedef U16 ChannelId;

typedef U8 Arr64U8[64];

typedef U16 Efa;

typedef U32 BitState;

typedef U8 CChanId;

typedef U16 MibOpCode;


typedef U16 MibStatus;

typedef U16 MibTblType;

typedef S32 MibReqId;

typedef U8 UstaType;
typedef S8 ChannelNo;
# 501 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"
typedef S16 Baud;

typedef S16 PhysIntType;

typedef S16 PathConnType;

typedef S16 Parity;

typedef S16 CharLength;

typedef S16 StopBits;



typedef U32 IpAddr;

typedef U16 Port;

typedef U8 Cmd;

typedef U8 Flags;

typedef U8 Ttl;

typedef U8 Prec;

typedef U32 Window;

typedef U8 MtpStatus;

typedef U8 Credit;



typedef U32 CirId;

typedef U16 Cic;

typedef U32 SiInstId;



typedef U32 BiInstId;



typedef U32 TpInstId;



typedef U32 Oui;
typedef U16 Pid;
typedef U32 LlcId;
# 716 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"
typedef struct octStrg
{
   S32 length;
   U8 val[132];
} OctStrg;

typedef struct tknHdr
{
   U8 pres;
   U8 spare1;
   U16 spare2;



} TknHdr;

typedef struct elmtHdr
{
   U8 pres;
   U8 actnInd;
   U16 compInd;



} ElmtHdr;



typedef struct tknU8
{
   U8 pres;
   U8 val;
   U16 spare1;



} TknU8;

typedef struct tknS8
{
   U8 pres;
   S8 val;
   U16 spare1;



} TknS8;

typedef struct tknU16
{
   U8 pres;
   U8 spare1;
   U16 val;



} TknU16;

typedef struct tknU32
{
   U8 pres;
   U8 spare1;
   U16 spare2;
   U32 val;
} TknU32;

typedef struct tknS32
{
   U8 pres;
   U8 spare1;
   U16 spare2;
   S32 val;
} TknS32;

typedef struct tknStrS
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(22 + 3) & 0xffc];

} TknStrS;

typedef struct tknStrM
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(32 + 3) & 0xffc];

} TknStrM;

typedef struct tknStr
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(132 + 3) & 0xffc];

} TknStr;

typedef struct tknStrE
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(255 + 3) & 0xffc];

} TknStrE;

typedef struct tknStrXL
{
   U16 len;
   U8 pres;
   U8 spare1;



   U8 *val;
} TknStrXL;

typedef struct tknStr4
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[4];

} TknStr4;

typedef struct tknStr12
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[12];

} TknStr12;

typedef struct tknStr32
{
   U8 pres;
   U8 len;
   U16 spare1;



   U8 val[32];
} TknStr32;

typedef struct tknStr64
{
   U8 pres;
   U8 len;
   U16 spare1;



   U8 val[64];
} TknStr64;

typedef struct tknStr132
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[132];

} TknStr132;

typedef struct tknStr256
{
   U8 pres;
   U8 len;
   U16 spare1;



   U8 val[256];
} TknStr256;

typedef struct tknOid
{
   U8 pres;
   U8 len;
   U16 spare1;






   U32 val[32];



} TknOid;

typedef struct tknBits
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(7 + 3) & 0xffc];

} TknBits;

typedef struct elmtStr
{
   ElmtHdr eh;
   TknStr str;
} ElmtStr;

typedef struct cdPtyNmb
{
   ElmtHdr eh;
   TknU8 nmbPlanId;
   TknU8 typeNmb0;



   TknStrS nmbDigits;

} CdPtyNmb;

typedef struct redirNmb
{
   ElmtHdr eh;
   TknU8 nmbPlanId;
   TknU8 typeNmb;
   TknU8 screenInd;
   TknU8 presInd;
   TknU8 rsnRedirect;
   TknStrS nmbDigits;
} RedirNmb;

typedef struct srvClass
{
   U8 type;
   union
   {
      struct
      {
         Bool cr;
         Bool de;
      } fr;
      struct
      {
         Prior prior;
      } ma;
   } s;
} SrvClass;



typedef struct _ip
{
   U8 ip_hl;
   Prec ip_tos;
   U16 ip_len;
   U16 ip_id;
   U16 ip_off;
   Ttl ip_ttl;
   U8 ip_p;
   U16 ip_sum;
   IpAddr ip_src;
   IpAddr ip_dst;
} Ip;
# 1518 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"
typedef struct smCfg
{
   Ent ent;
   Inst inst;
   Region region;
   Pool pool;
   Priority prior;
   Route route;
   Selector selector;
} SmCfg;

typedef struct mem
{
   Region region;
   Pool pool;
   U16 spare;
} Mem;

typedef Mem MemoryId;


typedef struct resp
{
   Selector selector;
   Priority prior;
   Route route;
   MemoryId mem;
}Resp;

typedef struct tds_header
{
   U16 msgLen;
   U8 msgType;
   U8 version;
   U16 seqNmb;
   EntityId entId;
   ElmntId elmId;

   TranId transId;
   Resp response;

} Header;

typedef struct tmrCfg
{
   Bool enb;
   U16 val;
} TmrCfg;

typedef struct asyncCfg
{
   StopBits stopBits;
   CharLength charLength;
   Parity rxParity;
   Parity txParity;
} AsyncCfg;




typedef struct dateTime
{
   U8 month;
   U8 day;
   U8 year;
   U8 hour;
   U8 min;
   U8 sec;
   U8 tenths;




} DateTime;


typedef U64 EpcTime;


typedef struct cmStatus
{
   U16 status;
   U16 reason;
}CmStatus;


typedef struct cmAlarm
{
   DateTime dt;
   U16 category;
   U16 event;
   U16 cause;
}CmAlarm;



typedef struct duration
{
   U8 days;
   U8 hours;
   U8 mins;
   U8 secs;
   U8 tenths;
} Duration;
# 1630 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"
typedef struct ssmsgb Buffer;
# 1655 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"
typedef struct tknBuf
{
   U8 pres;
   U8 spare1;
   U16 spare2;



   Buffer *val;
} TknBuf;



typedef U32 CmIpAddr;







extern S16 cmPkDateTime (DateTime *dateTime, Buffer *mBuf);
extern S16 cmPkDuration (Duration *duration, Buffer *mBuf);
extern S16 cmPkPtr (U32 ptr, Buffer *mBuf);
extern S16 cmPkEntityId (EntityId *entityId, Buffer *mBuf);
extern S16 cmPkElmntId (ElmntId *elmntId, Buffer *mBuf);
extern S16 cmPkMemoryId (MemoryId *memoryId, Buffer *mBuf);


extern S16 cmPkSystemId (SystemId *systemId, Buffer *mBuf);
extern S16 cmPkAddrs (Addrs *addrs, Buffer *mBuf);
extern S16 cmPkProtAddr (ProtAddr *protAddr, Buffer *mBuf);
extern S16 cmPkProtAddrTbl (ProtAddrTbl *protAddr, Buffer *mBuf);
extern S16 cmPkShrtAddrs (ShrtAddrs *addrs, Buffer *mBuf);
extern S16 cmPkAddrMask (U8 *mask, Buffer *mBuf);
extern S16 cmPkBndCfg (BndCfg *bndCfg, Buffer *mBuf);
extern S16 cmPkPst (Pst *pst, Buffer *mBuf);
extern S16 cmPkElmtHdr (ElmtHdr *m, Buffer *mBuf);
extern S16 cmPkTknU8 (TknU8 *tknU8, Buffer *mBuf);
extern S16 cmPkTknS8 (TknS8 *tknS8, Buffer *mBuf);
extern S16 cmPkTknU16 (TknU16 *tknU16, Buffer *mBuf);
extern S16 cmPkTknU32 (TknU32 *tknU32, Buffer *mBuf);
extern S16 cmPkTknStr (TknStr *tknStr, Buffer *mBuf);
extern S16 cmPkTknStrM (TknStrM *tknStr, Buffer *mBuf);
extern S16 cmPkTknStrS (TknStrS *tknStr, Buffer *mBuf);
extern S16 cmPkTknStrE (TknStrE *tknStr, Buffer *mBuf);

extern S16 cmPkTknStr4 (TknStr4 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr12 (TknStr12 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr32 (TknStr32 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr64 (TknStr64 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr132 (TknStr132 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr256 (TknStr256 *tknStr, Buffer *mBuf);

 S16 cmPkTknS32 (TknS32 *tknS32, Buffer *mBuf);
 S16 cmPkTknOid (TknOid *tknOid, Buffer *mBuf);
 S16 cmPkTknBuf (TknBuf *tknBuf, Buffer *mBuf);






extern S16 cmPkHeader (Header *header, Buffer *mBuf);
extern S16 cmPkSmCfg (SmCfg *smCfg, Buffer *mBuf);
extern S16 cmPkTmrCfg (TmrCfg *tmrCfg, Buffer *mBuf);
extern S16 cmPkCmStatus (CmStatus *status, Buffer *mBuf);
extern S16 cmPkCmAlarm (CmAlarm *alrm, Buffer *mBuf);





extern S16 cmUnpkDateTime (DateTime *dateTime, Buffer *mBuf);
extern S16 cmUnpkDuration (Duration *duration, Buffer *mBuf);
extern S16 cmUnpkPtr (U32 *ptr, Buffer *mBuf);
extern S16 cmUnpkEntityId (EntityId *entityId, Buffer *mBuf);
extern S16 cmUnpkElmntId (ElmntId *elmntId, Buffer *mBuf);
extern S16 cmUnpkMemoryId (MemoryId *memoryId, Buffer *mBuf);


extern S16 cmUnpkSystemId (SystemId *systemId, Buffer *mBuf);
extern S16 cmUnpkAddrs (Addrs *addrs, Buffer *mBuf);
extern S16 cmUnpkProtAddr (ProtAddr *protAddr, Buffer *mBuf);
extern S16 cmUnpkProtAddrTbl (ProtAddrTbl *protAddr, Buffer *mBuf);
extern S16 cmUnpkShrtAddrs (ShrtAddrs *addrs, Buffer *mBuf);
extern S16 cmUnpkAddrMask (U8 *mask, Buffer *mBuf);
extern S16 cmUnpkBndCfg (BndCfg *bndCfg, Buffer *mBuf);
extern S16 cmUnpkPst (Pst *pst, Buffer *mBuf);
extern S16 cmUnpkElmtHdr (ElmtHdr *m, Buffer *mBuf);
extern S16 cmUnpkTknU8 (TknU8 *tknU8, Buffer *mBuf);
extern S16 cmUnpkTknS8 (TknS8 *tknS8, Buffer *mBuf);
extern S16 cmUnpkTknU16 (TknU16 *tknU16, Buffer *mBuf);
extern S16 cmUnpkTknU32 (TknU32 *tknU32, Buffer *mBuf);
extern S16 cmUnpkTknStr (TknStr *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStrM (TknStrM *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStrS (TknStrS *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStrE (TknStrE *tknStr, Buffer *mBuf);

extern S16 cmUnpkTknStr4 (TknStr4 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr12 (TknStr12 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr32 (TknStr32 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr64 (TknStr64 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr132 (TknStr132 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr256 (TknStr256 *tknStr, Buffer *mBuf);

 S16 cmUnpkTknS32 (TknS32 *tknS32, Buffer *mBuf);
 S16 cmUnpkTknOid (TknOid *tknOid, Buffer *mBuf);
 S16 cmUnpkTknBuf (TknBuf *tknBuf, Buffer **mBuf);






extern S16 cmUnpkHeader (Header *header, Buffer *mBuf);
extern S16 cmUnpkSmCfg (SmCfg *smCfg, Buffer *mBuf);
extern S16 cmUnpkTmrCfg (TmrCfg *tmrCfg, Buffer *mBuf);
extern S16 cmUnpkCmStatus (CmStatus *status, Buffer *mBuf);
extern S16 cmUnpkCmAlarm (CmAlarm *alrm, Buffer *mBuf);
# 36 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lte.x" 1
# 22 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lte.x"
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lte.h" 1
# 23 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lte.x" 2
# 63 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lte.x"
typedef U8 CmLteRbId;


typedef U16 CmLteCellId;


typedef U16 CmLteRnti;


typedef U8 CmLteRlcMode;


typedef U8 CmLteLcId;


typedef U8 CmLteLcType;


typedef U8 CmLteTrchType;


typedef U8 CmLteContResId[6];


typedef struct cmLteRlcId
{
  CmLteRbId rbId;
  U8 rbType;
  CmLteRnti ueId;
  CmLteCellId cellId;
}CmLteRlcId;


typedef struct cmLteTimingInfo
{
   U16 sfn;
   U8 subframe;
} CmLteTimingInfo;


typedef struct cmLtePdcpId
{
   CmLteCellId cellId;
   CmLteRnti ueId;
   CmLteRbId rbId;
   U8 rbType;
} CmLtePdcpId;


typedef struct cmLtePoolInfo
{
   U32 poolSize;
   U32 totAvailable;
   U32 crntUsed;
   U32 maxUsed;
} CmLtePoolInfo;

typedef struct cmLteRegionInfo
{
   U8 regionType;
   U8 regionId;
   U8 numPools;
   U8 isGenMemInfoUpdated;
   CmLtePoolInfo poolInfo[6];
}CmLteRegionInfo;

typedef struct cmLteMemInfo
{
   U8 numRegions;
   U8 idx;
   CmLteRegionInfo regInfo[5];
}CmLteMemInfo;


typedef struct cmLteCpuUtilInfo
{
   U32 avgCpuUtil;
   U32 maxCpuUtil;
}CmLteCpuUtilInfo;


typedef struct cmLteCpuInfo
{
   U8 numCores;
   CmLteCpuUtilInfo cpuUtil[10];
}CmLteCpuInfo;

typedef struct cmCpuUtilStatsInfo
{
   U32 numSamples;
   U32 maxCpuUtil;
   U32 totCpuUtil;
}CmCpuUtilStatsInfo;


typedef struct cmCpuStatsInfo
{
   U8 numCores;
   CmCpuUtilStatsInfo cpuUtil[10];
}CmCpuStatsInfo;





typedef U32 CntrSts;


typedef enum cmLteAggrLvl
{
   CM_LTE_AGGR_LVL1 = 1,
   CM_LTE_AGGR_LVL2 = 2,
   CM_LTE_AGGR_LVL4 = 3,
   CM_LTE_AGGR_LVL8 = 4
} CmLteAggrLvl;


typedef enum cmLteUeCategory
{
   CM_LTE_UE_CAT_1 = 1,
   CM_LTE_UE_CAT_2,
   CM_LTE_UE_CAT_3,
   CM_LTE_UE_CAT_4,
   CM_LTE_UE_CAT_5,
   CM_LTE_UE_CAT_6,
   CM_LTE_UE_CAT_7,
   CM_LTE_UE_CAT_8
} CmLteUeCategory;





extern S16 cmUpdateSsiMemInfo(CmLteMemInfo *mInfo);

extern S16 cmFillMemUtilizationMeas(CmLteMemInfo *memoryInfo,CmLteMemInfo *memInfo);

extern S16 cmClearMemUtilizationCounter(CmLteMemInfo *memInfo);
extern S16 UpdateSocMemInfo(U8 area , CmLteMemInfo *mInfo);

extern S16 cmFillCpuUtilizationMeas(CmLteCpuInfo *cpuMeasInfo,CmCpuStatsInfo *cpuInfo);

extern S16 cmClearCpuUtilizationCounter(CmCpuStatsInfo *cpuInfo);
extern Void UpdateSocCpuInfo(CmCpuStatsInfo *cpuInfo,U8 Idx);

extern S16 SGetRegPoolInfo(U8* numRegion, U8* numPool);


extern S16 cmPkLteRlcId ( CmLteRlcId *param, Buffer *mBuf )


  ;

extern S16 cmPkLteTimingInfo ( CmLteTimingInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkLtePdcpId ( CmLtePdcpId *param, Buffer *mBuf )


  ;


extern S16 cmUnpkLteRlcId ( CmLteRlcId *param, Buffer *mBuf )


  ;

extern S16 cmUnpkLteTimingInfo ( CmLteTimingInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkLtePdcpId ( CmLtePdcpId *param, Buffer *mBuf )


  ;



typedef struct cmTtiProc
{
 U32 totTtiProcessingTime;
 U32 numOfTti;
 U32 maxTtiProcessingTime;
 U32 ttiStretchCount;
 U32 ttiThresholdExceedCount;

 U32 phyReptTtiStretchCount;
}CmTtiProc;

extern CmTtiProc ttiProc;

extern Void cmUpdateTtiCounters(U32 ttiProcessingTime);
extern Void cmResetTtiCounters(Void);
# 37 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lte_rrm.x" 1
# 28 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lte_rrm.x"
typedef enum cmRrmDsrTransMax
{
   DSR_TRANS_N4,
   DSR_TRANS_N8,
   DSR_TRANS_N16,
   DSR_TRANS_N32,
   DSR_TRANS_N64,
   DSR_TRANS_MAX
}CmRrmDsrTransMax;







typedef struct cmRrmDrxLongCycleOffst
{
   U16 usLongDrxCycle;
   U16 usDrxStartOffst;
} CmRrmDrxLongCycleOffst;
# 57 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lte_rrm.x"
typedef struct cmRrmDrxShortDrx
{
   Bool bPres;
   U16 usShortDrxCycle;
   U8 bDrxShortCycleTmr;
} CmRrmDrxShortDrx;
# 73 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lte_rrm.x"
typedef struct cmRrmDrxCfg
{
   Bool bIsDrxEnabled;
   TknS32 stCqiMask;
   U8 bDrxOnDurTmr;
   U16 usDrxInactvTmr;
   U8 bDrxRetxTmr;
   CmRrmDrxLongCycleOffst stDrxLongCycleOffst;
   CmRrmDrxShortDrx stDrxShortDrx;
} CmRrmDrxCfg;

typedef struct cmRrmCellDrxCfg
{
   Bool bIsGbrDrxDis;
   Bool bIsDrxEnabled;
   U8 bDrxRetxTmr;
   U16 usDrxInactvTmr;
   U16 usLongDrxCycleGbr;
   U16 usLongDrxCycleNonGbr;
} CmRrmCellDrxCfg;
# 108 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lte_rrm.x"
typedef enum cmRrmAcBarringTime
{
 RM_ACB_TIME_S4,
 RM_ACB_TIME_S8,
 RM_ACB_TIME_S16,
 RM_ACB_TIME_S32,
 RM_ACB_TIME_S64,
 RM_ACB_TIME_S128,
 RM_ACB_TIME_S256,
 RM_ACB_TIME_S512
} CmRrmAcBarringTime;
# 142 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lte_rrm.x"
typedef enum cmRrmAcBarringFactor
{
 RM_ACB_FACTOR_P00,
 RM_ACB_FACTOR_P05,
 RM_ACB_FACTOR_P10,
 RM_ACB_FACTOR_P15,
 RM_ACB_FACTOR_P20,
 RM_ACB_FACTOR_P25,
 RM_ACB_FACTOR_P30,
 RM_ACB_FACTOR_P40,
 RM_ACB_FACTOR_P50,
 RM_ACB_FACTOR_P60,
 RM_ACB_FACTOR_P70,
 RM_ACB_FACTOR_P75,
 RM_ACB_FACTOR_P80,
 RM_ACB_FACTOR_P85,
 RM_ACB_FACTOR_P90,
 RM_ACB_FACTOR_P95,
 RM_ACB_FACTOR_NA
} CmRrmAcBarringFactor;
# 174 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lte_rrm.x"
typedef struct cmRrmAcb
{
 CmRrmAcBarringTime enAcbTime;
   CmRrmAcBarringFactor enAcbFactor;
   U8 bAcbForSpac;
} CmRrmAcb;

typedef struct cmRrmAcbInfo
{
   CmRrmAcb stAcBarringMoData;
   CmRrmAcb stAcBarringMoSig;
   U8 bAcBarringEmergency;


   U8 bIsacBarringMoSig;

   U8 bIsacBarringMoData;

} CmRrmAcbInfo;
# 38 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/rmu.x" 1
# 21 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/rmu.x"
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lte_rrm.x" 1
# 22 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/rmu.x" 2






typedef enum rmuS1apCause
{
   RMU_CAUSE_UNSPECIFIED,
   RMU_CAUSE_TX2_RELOC_OVERALL_EXP,
   RMU_CAUSE_SUCC_HANDOVER,
   RMU_CAUSE_REL_EUTRAN_REASON,
   RMU_CAUSE_HANDOVER_CANCELLED,
   RMU_CAUSE_PARTIAL_HANDOVER,
   RMU_CAUSE_HANDOVER_FAILURE_TRGT_SYS,
   RMU_CAUSE_HANDOVER_TRGT_NOT_ALLOWED,
   RMU_CAUSE_TS1_RELOCOVERALL_EXP,
   RMU_CAUSE_TS1_RELOCPREP_EXP,
   RMU_CAUSE_CELL_NOTAVAILABLE,
   RMU_CAUSE_UNKNOWN_TRGT_ID,
   RMU_CAUSE_NO_RESOURCES_IN_TRGT_CELL,
   RMU_CAUSE_UNKNOWN_ALLOC_MME_UE_S1AP_ID,
   RMU_CAUSE_UNKNOWN_ALLOC_ENB_UE_S1AP_ID,
   RMU_CAUSE_UNKNOWN_INCONSIST_PAIR_UE_S1AP_ID,
   RMU_CAUSE_HANDOVER_DESIRABLE_RADIO_REASON,
   RMU_CAUSE_TIME_CRITICAL_HANDOVER,
   RMU_CAUSE_RESOURCE_OPTIMIZE_HANDOVER,
   RMU_CAUSE_REDUCE_LOAD_IN_SERV_CELL,
   RMU_CAUSE_USR_INACTIVITY,
   RMU_CAUSE_RADIO_CON_UE_LOST,
   RMU_CAUSE_LOAD_BLNC_TAU_REQD,
   RMU_CAUSE_CS_FALLBACK_TRIGGERED,
   RMU_CAUSE_UE_NOTAVAILABLE_PS_SER,
   RMU_CAUSE_RADIO_RESOURCE_NOT_AVAIL,
   RMU_CAUSE_FAIL_RADIO_INTF_PROC,
   RMU_CAUSE_INVALID_QOS_COMB,
   RMU_CAUSE_INTER_RAT_REDIRECT,
   RMU_CAUSE_INTERACT_ITHER_PROC,
   RMU_CAUSE_UNKNOWN_ERAB_ID,
   RMU_CAUSE_MULT_ERAB_ID_INSTANCES,
   RMU_CAUSE_ENCRYPT_INTEGRITY_NOT_SUPPORT,
   RMU_CAUSE_S1_INTRA_SYS_HANDOVER_TRIGGERED,
   RMU_CAUSE_S1_INTER_SYS_HANDOVER_TRIGGERED,
   RMU_CAUSE_X2_HANDOVER_TRIGGERED,
   RMU_CAUSE_REDIRECT_1XRTT,
   RMU_CAUSE_NOT_SUPPORT_QCI,
   RMU_CAUSE_INVALID_CSG_ID,
   RMU_CAUSE_BH_BW_NOT_AVAILABLE,
   RMU_CAUSE_MAX_QCI_REACHED,
   RMU_CAUSE_CHECK_PRB_REQ
}RmuS1apCause;




typedef enum rmuAccessStratumRls
{
   RMU_ACCESS_STRATUM_REL8,
   RMU_ACCESS_STRATUM_REL9,
   RMU_ACCESS_STRATUM_REL9HIGHER
} RmuAccessStratumRls;


typedef struct rmuAcbParamInd
{
  CmRrmAcbInfo stAcbInfo;
} RmuAcbParamInd;

typedef enum rmuCellRecfgType
{
   RMU_CELL_RECFG_ACB_IND
}RmuCellRecfgType;

typedef struct rmuCellRecfgInd
{
   RmuAcbParamInd stAcbParamInd;
   RmuCellRecfgType enCellRecfgType;
   U8 bCellId;
} RmuCellRecfgInd;



typedef enum rmuEnbStatus
{
   RMU_ENB_STATUS_UP,
   RMU_ENB_STATUS_DOWN
}RmuEnbStatus;

typedef enum rmuMmeStatus
{
   RMU_MME_STATUS_UP = 0,
   RMU_MME_STATUS_DOWN
}RmuMmeStatus;

typedef struct rmuMmeStatusInd
{
  RmuMmeStatus enMmeStatus;
  U16 usMmeId;
} RmuMmeStatusInd;

typedef struct rmuEnbStatusInd
{
  U8 bCellId;
  RmuEnbStatus enEnbStatus;
} RmuEnbStatusInd;



typedef enum rmuFsmStatusType
{
   RMU_FSM_STATUS_MME,
   RMU_FSM_STATUS_ENB
}RmuFsmStatusType;

typedef struct rmuFsmStatusInd
{
  RmuFsmStatusType enStatusType;
  union {
      RmuMmeStatusInd stMmeStatusInd;
      RmuEnbStatusInd stEnbStatusInd;
  }u;
} RmuFsmStatusInd;



typedef enum rmuMmeOvldStatus
{
   RMU_MME_REJECT_MODATA,
   RMU_MME_REJECT_MOSIG_MODATA,
   RMU_MME_PERMITONLY_EMG_MTACCESS,
   RMU_MME_PERMITONLY_HIGHPRI_MTACCESS,
   RMU_MME_REJECT_DELAY_TOLERNT_ACCESS,
   RMU_MME_OVLD_STATUS_NORMAL
}RmuMmeOvldStatus;

typedef struct rmuMmeOvldStartInd
{
   RmuMmeOvldStatus enMmeOvldStatus;
   U16 usMmeId;
} RmuMmeOvldStartInd;


typedef struct rmuMmeOvldStopInd
{
   U16 usMmeId;
} RmuMmeOvldStopInd;


typedef enum rmuConEstCause
{
   RMU_EST_CAUSE_EMERGENCY,
   RMU_EST_CAUSE_HIGH_PRIORTY_ACCESS,
   RMU_EST_CAUSE_MT_ACCESS,
   RMU_EST_CAUSE_MO_SIGNALLING,
   RMU_EST_CAUSE_MO_DATA,
   RMU_EST_CAUSE_DELAY_TOLERANT,
   RMU_EST_CAUSE_HO_REQ,
   RMU_MAX_EST_CAUSE
} RmuConEstCause;

typedef struct rmuUeAdmitReq
{
   RmuConEstCause enConEstabCause;
   U32 uiTransId;
   U16 usCrnti;
   U8 bCellId;
} RmuUeAdmitReq;


typedef enum rmuRrcCause
{
   RMU_CAUSE_CELLID_UNKNOWN,
   RMU_CAUSE_MMEID_UNKNOWN,
   RMU_CAUSE_UEID_UNKNOWN,
   RMU_CAUSE_OUT_OF_RESOURCE,
   RMU_CAUSE_MAX_UE_REACHED,
   RMU_CAUSE_CELL_ALREADY_EXISTS,
   RMU_CAUSE_MME_ALREADY_EXISTS,
   RMU_CAUSE_UEID_ALREADY_EXISTS,
   RMU_CAUSE_ENB_ALREADY_UP,
   RMU_CAUSE_NOT_APP,
   RMU_CAUSE_MAX_CSG_UE_REACHED,
   RMU_CAUSE_MAX_NON_CSG_UE_REACHED,
   RMU_CAUSE_MAX_EXTRA_UE_REACHED,
   RMU_CAUSE_OTHER
} RmuRrcCause;

typedef enum rmuStatus
{
   RMU_FAILURE,
   RMU_SUCCESS,
   RMU_REDIRECT
} RmuStatus;

typedef struct rmuStatusInfo
{
   RmuRrcCause enCause;
   RmuStatus enStatus;
} RmuStatusInfo;



typedef enum rmuHandOverType
{
   RMU_HO_TYPE_IntraLTE,
   RMU_HO_TYPE_LTEtoUTRAN,
   RMU_HO_TYPE_LTEtoGERAN,
   RMU_HO_TYPE_UTRANtoLTE,
   RMU_HO_TYPE_GERANtoLTE,
   RMU_HO_TYPE_S1,
   RMU_HO_TYPE_X2
} RmuHandOverType;

typedef enum rmuErabAction
{
   RMU_ADD_ERAB,
   RMU_MOD_ERAB,
   RMU_DEL_ERAB
} RmuErabAction;


typedef struct rmuPst
{
  U16 usDstProcId;
  U16 usSrcProcId;
  U8 bDstEnt;
  U8 bSstInst;
  U8 bSrcEnt;
  U8 bSrcInst;
  U8 bPrior;
  U8 bRoute;
  U8 bEvent;
} RmuPst;

typedef struct rmuUEAggreMaxBitRateIe
{
   U32 uiAggUEMaxBitRateUL;
   U32 uiAggUEMaxBitRateDL;
} RmuUEAggreMaxBitRateIe;

typedef struct rmuErabGbrInfoIe
{
   U32 uiErabDlMbr;
   U32 uiErabUlMbr;
   U32 uiErabDlGbr;
   U32 uiErabUlGbr;
} RmuErabGbrInfoIe;

typedef struct rmuErabArpInfoIe
{
   U8 bErabPrioLvl;
   Bool bErabPreemptCap;
   Bool bErabPreemptVul;
} RmuErabArpInfoIe;

typedef struct rmuErabQosInfoIe
{
   RmuErabArpInfoIe stErabArpInfo;
   RmuErabGbrInfoIe stErabGbrInfo;
   U8 bErabQCI;

} RmuUErabQosInfoIe;

typedef struct rmuErabAddModIe
{
   RmuUErabQosInfoIe stErabQosInfo;

   U8 bErabId;

} RmuUErabAddModIe;

typedef struct rmuErabRelIe
{
   RmuS1apCause enErabRelCause;
   U8 bErabId;

} RmuErabRelIe;

typedef struct rmuErabConfigIe
{
   RmuUErabAddModIe stErabAddModLst[8];
   RmuErabRelIe stErabRelLst[8];
   RmuUEAggreMaxBitRateIe stUeAmbrInfo;
   RmuErabAction enErabAction;
   U16 usNoErabsToAddMod;
   U8 bNoErabsToRel;
   U8 bIsUeAmbrPres;

} RmuErabConfigIe;
# 319 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/rmu.x"
typedef struct rmuErabRelLst
{
   RmuErabRelIe stErabRelLst[8];
   U8 bNoErabsToRel;
} RmuErabRelLst;
typedef enum rmuPcqiFormatInd
{
   RMU_PCQI_FMT_WIDEBAND,
   RMU_PCQI_FMT_SUBBAND
} RmuPcqiFormatInd;

typedef enum rmuPucchReportMode
{
   RMU_CQI_MODE10,
   RMU_CQI_MODE11,
   RMU_CQI_MODE20,
   RMU_CQI_MODE21
} RmuPucchReportMode;

typedef enum rmuPuschReportMode
{
   RMU_APRD_CQI_MODE12,
   RMU_APRD_CQI_MODE20,
   RMU_APRD_CQI_MODE22,
   RMU_APRD_CQI_MODE30,
   RMU_APRD_CQI_MODE31
} RmuPuschReportMode;

typedef struct rmuRiConfigIndex
{
   Bool bPres;
   U16 usRiConfigIndex;
} RmuRiConfigIndex;

typedef enum rmuSubbandCqiPeriodicityFactor
{
 RMU_PERIODICITY_FACTOR_N2,
 RMU_PERIODICITY_FACTOR_N4
}RmuSubbandCqiPeriodicityFactor;

typedef struct rmuPCqiReportCfg
{
   U8 type;
   RmuPcqiFormatInd enCqiFormatInd;
   RmuPucchReportMode enPucchReportMode;
   U16 usCqiResourceIndex;
   U16 usCqiConfigIndex;

   RmuRiConfigIndex riConfigIndex;
   U8 bFactorK;


 RmuSubbandCqiPeriodicityFactor sBCqiPeriodicityFactor;
   U8 bSimulAckNackCqi;

   U16 srCfgIdx;
} RmuPCqiReportCfg;

typedef struct rmuApCqiReportCfg
{
   Bool enbld;
   RmuPuschReportMode enPuschReportMode;
} RmuApCqiReportCfg;

typedef struct rmuUeCqiReportCfg
{
   RmuPCqiReportCfg stPrdCqiRepCfg;
   RmuApCqiReportCfg stAPrdCqiRepCfg;
} RmuUeCqiReportCfg;

typedef struct rmuUeSrCfg
{
   U16 usSrIdx;
   U16 usSrResIdx;
   CmRrmDsrTransMax enDsrTransMax;
} RmuUeSrCfg;

typedef enum
{
   RMU_TXN_MODE1,
   RMU_TXN_MODE2,
   RMU_TXN_MODE3,
   RMU_TXN_MODE4,
   RMU_TXN_MODE5,
   RMU_TXN_MODE6,
   RMU_TXN_MODE7
} RmuTxnMode;

typedef struct rmuAntInfo
{
   RmuTxnMode eTxnMode;
   U16 stcodebookSubset;
   U8 ueTxnAntSel;
} RmuAntInfo;
# 423 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/rmu.x"
typedef struct rmuUeDedPhyCfg
{
   U8 bPhyCfgDedResBitMap;
   RmuUeCqiReportCfg stCqiRepCfg;
   RmuAntInfo stAntInfo;
 RmuUeSrCfg stSrCfg;





} RmuUeDedPhyCfg;


typedef struct rmuUeMacMainCfg
{
   U8 bMacMainCfgBitMap;
   CmRrmDrxCfg stRmDrxCfg;
} RmuUeMacMainCfg;


typedef struct rmuSpsP0Persistent
{
      S8 sP0NominalPUSCHPersistent;
      S8 sP0UEPuschPersistent;
} RmuSpsP0Persistent;

typedef enum
{
   RMU_SPS_E2,
   RMU_SPS_E3,
   RMU_SPS_E4,
   RMU_SPS_E8
} RmuSpsImplctRelAftr;

typedef enum
{
   RMU_SPS_UL_INTERVAL_E10,
   RMU_SPS_UL_INTERVAL_E20,
   RMU_SPS_UL_INTERVAL_E32,
   RMU_SPS_UL_INTERVAL_E40,
   RMU_SPS_UL_INTERVAL_E64,
   RMU_SPS_UL_INTERVAL_E80,
   RMU_SPS_UL_INTERVAL_E128,
   RMU_SPS_UL_INTERVAL_E160,
   RMU_SPS_UL_INTERVAL_E320,
   RMU_SPS_UL_INTERVAL_E640,
   RMU_SPS_UL_INTERVAL_SPARE6,
   RMU_SPS_UL_INTERVAL_SPARE5,
   RMU_SPS_UL_INTERVAL_SPARE4,
   RMU_SPS_UL_INTERVAL_SPARE3,
   RMU_SPS_UL_INTERVAL_SPARE2,
   RMU_SPS_UL_INTERVAL_SPARE1
}RmuSpsIntervalUl;

typedef enum
{
   RMU_SPS_DL_INTERVAL_E10,
   RMU_SPS_DL_INTERVAL_E20,
   RMU_SPS_DL_INTERVAL_E32,
   RMU_SPS_DL_INTERVAL_E40,
   RMU_SPS_DL_INTERVAL_E64,
   RMU_SPS_DL_INTERVAL_E80,
   RMU_SPS_DL_INTERVAL_E128,
   RMU_SPS_DL_INTERVAL_E160,
   RMU_SPS_DL_INTERVAL_E320,
   RMU_SPS_DL_INTERVAL_E640,
   RMU_SPS_DL_INTERVAL_SPARE6,
   RMU_SPS_DL_INTERVAL_SPARE5,
   RMU_SPS_DL_INTERVAL_SPARE4,
   RMU_SPS_DL_INTERVAL_SPARE3,
   RMU_SPS_DL_INTERVAL_SPARE2,
   RMU_SPS_DL_INTERVAL_SPARE1
}RmuSpsIntervalDl;

typedef struct rmuSpsConfigUl
{
    Bool bIsSpsEnabled;
    RmuSpsIntervalUl eSpsIntervalUl;
    RmuSpsImplctRelAftr eImplctRelAftr;
    Bool bTwoIntervalCfg;
    Bool bP0PersistentPres;
    RmuSpsP0Persistent stP0Persistent;
} RmuSpsConfigUl;

typedef struct rmuSpsConfigDl
{
    Bool bIsSpsEnabled;
    RmuSpsIntervalDl eSpsIntervalDl;
    U16 usExplctRelAftr;
    U8 usNumOfConfSpsProc;
    U8 usNumN1Pucch;
    U16 usN1Pucch[4];
} RmuSpsConfigDl;

typedef struct rmuUeSpsCfg
{
    RmuSpsConfigDl stSpsConfigDl;
    RmuSpsConfigUl stSpsConfigUl;
} RmuUeSpsCfg;


typedef struct rmuUeRadioResCfg
{
   U8 bRadioResDedBitMap;
   RmuUeDedPhyCfg stPhyCfgDed;
   RmuUeMacMainCfg stMacMainCfg;

   RmuUeSpsCfg stSpsCfg;

} RmuUeRadioResCfg;

typedef struct rmuUeAdmitRsp
{
   RmuStatusInfo stStatusInfo;
   RmuUeRadioResCfg stUeRadioResCfg;
   U32 uiTransId;
   U16 usCrnti;
   U8 bCellId;
   U8 bWaitTime;

} RmuUeAdmitRsp;



typedef enum rmuScellAction
{
   RMU_SCELL_ADD,
   RMU_SCELL_MOD_COMMON,
   RMU_SCELL_MOD_DEDICATED,
   RMU_SCELL_RELEASE
} RmuScellAction;

typedef struct rmuSCellInfo
{

   RmuScellAction action;
   CmLteCellId sCellId;
   U8 sCellIdx;

}RmuSCellInfo;
typedef struct rmuUeScellInfoReq
{
   U32 uiTransId;
   U8 pCellId;
   U8 numOfScell;
   RmuSCellInfo sCellIInfo[7];
} RmuUeScellInfoReq;

typedef struct rmuUeSCellDedInfo
{
   RmuStatusInfo stStatusInfo;
   U8 sCellIdx;
   RmuUeCqiReportCfg stCqiRepCfg;
} RmuUeSCellDedInfo;

typedef struct rmuUeSCellInfoRsp
{
   U8 numSCells;
   RmuUeSCellDedInfo sCellDedInfo[7];
} RmuUeSCellInfoRsp;

typedef struct rmuEutraCapInfo
{
   U32 uiFeatureGrpIndicator;

   U32 uiUeCategory;

   RmuAccessStratumRls uiUeAccessStratumRls;

} RmuEutraCapInfo;

typedef struct rmuUeCapInfoIe
{
   RmuEutraCapInfo stEutraCapInfo;
} RmuUeCapInfoIe;

typedef struct rmuUeHoReq
{
   RmuErabConfigIe stErabConfInfo;
   RmuUeCapInfoIe stUeCapInfo;
   RmuUeRadioResCfg stUeRadioResCfg;
   RmuHandOverType enHoType;
   RmuS1apCause enHoS1apCause;
   U32 uiTransId;
   U16 usCrnti;
   U8 bCellId;
   Bool isEmrgncyBrersPsnt;
   U8 isMember;
} RmuUeHoReq;


typedef struct rmuErabAdmitted
{
   U8 bErabId;

   Bool bIsDlSpsEnabled;
   Bool bIsUlSpsEnabled;

} RmuErabAdmitted;

typedef struct rmuErabRejected
{
   RmuS1apCause enCause;
   U8 bErabId;
} RmuErabRejected;

typedef struct rmuUeHoRsp
{
   RmuErabAdmitted stErabAdmitLst[8];
   RmuErabRejected stErabRejectLst[8];
   RmuUeRadioResCfg stUeRadioResCfg;
   RmuStatusInfo stStatusInfo;
   U32 uiTransId;
   U16 usCrnti;
   U8 bCellId;
   U8 bNoErabsAdmitted;
   U8 bNoErabsRejected;
   Bool isGBRBearerExists;
} RmuUeHoRsp;


typedef struct rmuUeRelReq
{
   U32 uiTransId;
   U16 usCrnti;
   U8 bCellId;
} RmuUeRelReq;


typedef struct rmuUeRelRsp
{
   RmuStatusInfo stStatusInfo;
   U32 uiTransId;
   U16 usCrnti;
   U8 bCellId;
} RmuUeRelRsp;


typedef struct rmuUeRelInd
{
   RmuRrcCause enRelCause;
   U16 usCrnti;
   U8 bCellId;
} RmuUeRelInd;
# 679 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/rmu.x"
typedef struct rmuUeERabRelInd
{
   RmuErabRelLst stErabRelInfo;
   U16 usCrnti;
   U8 bCellId;
} RmuUeERabRelInd;


typedef struct rmuUeRecfgReq
{
   RmuErabConfigIe stErabConfInfo;
   RmuUeCapInfoIe stUeCapInfo;
   RmuUeScellInfoReq stSCellInfoReq;
   U32 uiTransId;
   U16 usCrnti;
   U16 usUeNewCrnti;
   U8 bCellId;
   U8 bRecfgBitMap;

   U8 isMember;





} RmuUeRecfgReq;


typedef struct rmuUeInactInd
{
   CmLteRnti uiCrnti;
   CmLteCellId uiCellId;
   U8 uiInactEvt;
} RmuUeInactInd;


typedef struct rmuUeRecfgRsp
{
   RmuErabAdmitted stErabAcceptLst[8];
   RmuErabRejected stErabRejectLst[8];
   RmuUeRadioResCfg stUeRadioResCfg;
   RmuUeSCellInfoRsp stUeSCellResCfg;
   RmuStatusInfo stStatusInfo;
   U32 uiTransId;
   U16 usCrnti;
   U8 bCellId;
   U8 bRecfgBitMap;

   U8 bNoErabsAccepted;
   U8 bNoErabsRejected;
   Bool isGBRBearerExists;
} RmuUeRecfgRsp;

typedef RmuUeRecfgRsp RmuUeRecfgInd;


typedef struct rmuUeSpsDisInd
{
   U8 cellId;
   U16 usCrnti;
} RmuUeSpsDisInd;


typedef union
{
 RmuUeAdmitReq stRmuUeAdmitReq;
 RmuUeAdmitRsp stRmuUeAdmitRsp;
 RmuUeRecfgReq stRmuUeRecfgReq;
 RmuUeRecfgRsp stRmuUeRecfgRsp;
 RmuUeRelReq stRmuUeRelReq;
 RmuUeRelRsp stRmuUeRelRsp;
 RmuUeHoReq stRmuUeHoReq;
 RmuUeHoRsp stRmuUeHoRsp;
 RmuCellRecfgInd stRmuCellRecfgInd;
 RmuFsmStatusInd stRmuFsmStatusInd;
 RmuUeRelInd stRmuUeRelInd;
   RmuUeERabRelInd stRmuUeERabRelInd;
   RmuMmeOvldStartInd stRmuOverLoadStartInd;
   RmuMmeOvldStopInd stRmuOverLoadStopInd;

   RmuUeSpsDisInd stRmuSpsDisInd;


   RmuUeInactInd stRmuUeInactInd;
   RmuUeRecfgInd stRmuUeReCfgInd;
} RmuCommonMsg;



typedef S16 (*RmuFsmStatusIndFPtr) ( Pst *pst, SuId suId, RmuFsmStatusInd *statusInd )



          ;

typedef S16 (*RmuMmeOvldStartIndFPtr) ( Pst *pst, SuId suId, RmuMmeOvldStartInd *startInfo )



          ;

typedef S16 (*RmuMmeOvldStopIndFPtr) ( Pst *pst, SuId suId, RmuMmeOvldStopInd *stopInfo )



          ;
typedef S16 (*RmuUeAdmitReqFPtr) ( Pst *pst, SuId suId, RmuUeAdmitReq *admitInfo )



          ;
typedef S16 (*RmuUeHoReqFPtr) ( Pst *pst, SuId suId, RmuUeHoReq *hoInfo )



          ;
typedef S16 (*RmuUeRelReqFPtr) ( Pst *pst, SuId suId, RmuUeRelReq *relInfo )



          ;
typedef S16 (*RmuUeRecfgReqFPtr) ( Pst *pst, SuId suId, RmuUeRecfgReq *reconfiginfo )



          ;

typedef S16 (*RmuUeInactIndFPtr) ( Pst *pst, SuId suId, RmuUeInactInd *rrmUeInactInd )



          ;

typedef S16 (*RmuUeSpsDisIndFPtr) ( Pst *pst, SuId suId, RmuUeSpsDisInd *ueSpsDisInd )



          ;


typedef S16 (*RmuBndReqFPtr) ( Pst *pst, SuId suId, SpId spId )



          ;

typedef S16 (*RmuCellRecfgIndFPtr) ( Pst *pst, SuId suId, RmuCellRecfgInd *cellRecfgInfo )



          ;

typedef S16 (*RmuUeRecfgIndFPtr) ( Pst *pst, SuId suId, RmuUeRecfgInd *ueRecfgInfo )



          ;
typedef S16 (*RmuUeAdmitRspFPtr) ( Pst *pst, SuId suId, RmuUeAdmitRsp *admitRspinfo )



          ;
typedef S16 (*RmuUeHoRspFPtr) ( Pst *pst, SuId suId, RmuUeHoRsp *hoRspinfo )



          ;
typedef S16 (*RmuUeRelRspFPtr) ( Pst *pst, SuId suId, RmuUeRelRsp *relrspinfo )



          ;
typedef S16 (*RmuUeRelIndFPtr) ( Pst *pst, SuId suId, RmuUeRelInd *relIndinfo )



          ;


typedef S16 (*RmuUeERabRelIndFPtr) ( Pst *pst, SuId suId, RmuUeERabRelInd *relIndinfo )



          ;
typedef S16 (*RmuUeRecfgRspFPtr) ( Pst *pst, SuId suId, RmuUeRecfgRsp *recfgRspinfo )



          ;
typedef S16 (*RmuBndCfmFPtr) ( Pst *pst, SuId suId, U8 status )



          ;


extern S16 cmPkRmuFsmStatusInd (Pst *pst, SuId suId, RmuFsmStatusInd *statusInd);
extern S16 cmPkRmuMmeOverloadStartInd (Pst *pst, SuId suId, RmuMmeOvldStartInd *startInfo);
extern S16 cmPkRmuMmeOverloadStopInd (Pst *pst, SuId suId, RmuMmeOvldStopInd *stopinfo);
extern S16 cmPkRmuUeAdmitReq (Pst *pst, SuId suId, RmuUeAdmitReq *admitinfo);
extern S16 cmPkRmuUeHoReq (Pst *pst, SuId suId, RmuUeHoReq *hoinfo);
extern S16 cmPkRmuUeRelReq (Pst *pst, SuId suId, RmuUeRelReq *relinfo);
extern S16 cmPkRmuUeRecfgReq (Pst *pst, SuId suId, RmuUeRecfgReq *reconfiginfo);

extern S16 cmPkRmuUeSpsDisInd (Pst *pst, SuId suId, RmuUeSpsDisInd *ueSpsDisInd);



extern S16 cmPkRmuUeInactInd (Pst *pst, SuId suId, RmuUeInactInd *rrmUeInactInd)
                                                   ;

extern S16 cmPkRmuBndReq (Pst *pst, SuId suId, SpId spId);

extern S16 cmUnpkRmuCellRecfgInd (RmuCellRecfgIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkRmuUeRecfgInd (RmuUeRecfgIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkRmuUeAdmitRsp (RmuUeAdmitRspFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkRmuUeHoRsp (RmuUeHoRspFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkRmuUeRelRsp (RmuUeRelRspFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkRmuUeRelInd (RmuUeRelIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkRmuUeERabRelInd (RmuUeERabRelIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkRmuUeRecfgRsp (RmuUeRecfgRspFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkRmuBndCfm (RmuBndCfmFPtr func, Pst* pst, Buffer* mBuf);


extern S16 cmPkLwLcRmuFsmStatusInd (Pst *pst, SuId suId, RmuFsmStatusInd *statusInd);
extern S16 cmPkLwLcRmuMmeOverloadStartInd (Pst *pst, SuId suId, RmuMmeOvldStartInd *startInfo);
extern S16 cmPkLwLcRmuMmeOverloadStopInd (Pst *pst, SuId suId, RmuMmeOvldStopInd *stopinfo);
extern S16 cmPkLwLcRmuUeAdmitReq (Pst *pst, SuId suId, RmuUeAdmitReq *admitinfo);
extern S16 cmPkLwLcRmuUeHoReq (Pst *pst, SuId suId, RmuUeHoReq *hoinfo);
extern S16 cmPkLwLcRmuUeRelReq (Pst *pst, SuId suId, RmuUeRelReq *relinfo);
extern S16 cmPkLwLcRmuUeRecfgReq (Pst *pst, SuId suId, RmuUeRecfgReq *reconfiginfo);

extern S16 cmPkLwLcRmuUeSpsDisInd (Pst *pst, SuId suId, RmuUeSpsDisInd *ueSpsDisInd);



extern S16 cmPkLwLcRmuUeInactInd (Pst *pst, SuId suId, RmuUeInactInd *rrmUeInactInd)
                                                       ;

extern S16 cmPkLwLcRmuBndReq (Pst *pst, SuId suId, SpId spId);

extern S16 cmUnpkLwLcRmuCellReCfgInd (RmuCellRecfgIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeReCfgInd (RmuUeRecfgIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeAdmitRsp (RmuUeAdmitRspFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeHoRsp (RmuUeHoRspFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeRelRsp (RmuUeRelRspFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeRelInd (RmuUeRelIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeERabRelInd (RmuUeERabRelIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeRecfgRsp (RmuUeRecfgRspFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuBndCfm (RmuBndCfmFPtr func, Pst* pst, Buffer* mBuf);

extern S16 cmPkLwLcRmuUeAdmitRsp (Pst *pst, SuId suId, RmuUeAdmitRsp *admitRspInfo);
extern S16 cmPkLwLcRmuUeHoRsp (Pst *pst, SuId suId, RmuUeHoRsp *hoRspInfo);
extern S16 cmPkLwLcRmuUeRelRsp (Pst *pst, SuId suId, RmuUeRelRsp *ueRelRspInfo);
extern S16 cmPkLwLcRmuUeRelInd (Pst *pst, SuId suId, RmuUeRelInd *ueRelIndInfo);
extern S16 cmPkLwLcRmuUeERabRelInd (Pst *pst, SuId suId, RmuUeERabRelInd *rabRelIndInfo);
extern S16 cmPkLwLcRmuUeRecfgRsp (Pst *pst, SuId suId, RmuUeRecfgRsp *ueRecfgRspInfo);
extern S16 cmPkLwLcRmuCellRecfgInd (Pst *pst, SuId suId, RmuCellRecfgInd *cellRecfgInd);
extern S16 cmPkLwLcRmuUeRecfgInd (Pst *pst, SuId suId, RmuUeRecfgInd *ueRecfgInd);
extern S16 cmPkLwLcRmuBndCfm (Pst *pst, SuId suId, U8 status);

extern S16 cmUnpkLwLcRmuBndReq (RmuBndReqFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeAdmitReq (RmuUeAdmitReqFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeHoReq (RmuUeHoReqFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeRelReq (RmuUeRelReqFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeRelReq (RmuUeRelReqFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuUeRecfgReq (RmuUeRecfgReqFPtr func, Pst* pst, Buffer* mBuf);

extern S16 cmUnpkLwLcRmuUeSpsDisInd (RmuUeSpsDisIndFPtr func, Pst* pst, Buffer* mBuf);


extern S16 cmUnpkLwLcRmuUeInactInd (RmuUeInactIndFPtr func,Pst* pst,Buffer* mBuf);
extern S16 cmUnpkLwLcRmuMmeOvldStartInd (RmuMmeOvldStartIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuMmeOvldStopInd (RmuMmeOvldStopIndFPtr func, Pst* pst, Buffer* mBuf);
extern S16 cmUnpkLwLcRmuFsmStatusInd (RmuFsmStatusIndFPtr func, Pst* pst, Buffer* mBuf);
# 1010 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/rmu.x"
extern S16 WrLiRmuFsmStatusInd (Pst *pst, SuId suId, RmuFsmStatusInd *statusInd);
extern S16 WrLiRmuMmeOverloadStartInd (Pst *pst, SuId suId, RmuMmeOvldStartInd *startInfo);
extern S16 WrLiRmuMmeOverloadStopInd (Pst *pst, SuId suId, RmuMmeOvldStopInd *stopinfo);
extern S16 WrLiRmuUeAdmitReq (Pst *pst, SuId suId, RmuUeAdmitReq *admitinfo);
extern S16 WrLiRmuUeHoReq (Pst *pst, SuId suId, RmuUeHoReq *hoinfo);
extern S16 WrLiRmuUeRelReq (Pst *pst, SuId suId, RmuUeRelReq *relinfo);
extern S16 WrLiRmuUeRecfgReq (Pst *pst, SuId suId, RmuUeRecfgReq *reconfiginfo);

extern S16 WrLiRmuUeSpsDisInd (Pst *pst, SuId suId, RmuUeSpsDisInd *ueSpsDisInd);


extern S16 WrLiRmuUeInactInd (Pst *pst, SuId suId,RmuUeInactInd *rrmUeInactInd);

extern S16 WrLiRmuBndReq (Pst *pst, SuId suId, SpId spId);

extern S16 WrLiRmuCellRecfgInd (Pst *pst, SuId suId, RmuCellRecfgInd *cellRecfgInfo);
extern S16 WrLiRmuUeRecfgInd (Pst *pst, SuId suId, RmuUeRecfgInd *ueRecfgInfo);
extern S16 WrLiRmuUeAdmitRsp (Pst *pst, SuId suId, RmuUeAdmitRsp *admitRspinfo);
extern S16 WrLiRmuUeHoRsp (Pst *pst, SuId suId, RmuUeHoRsp *hoRspinfo);
extern S16 WrLiRmuUeRelRsp (Pst *pst, SuId suId, RmuUeRelRsp *relrspinfo);
extern S16 WrLiRmuUeRelInd (Pst *pst, SuId suId, RmuUeRelInd *relIndinfo);
extern S16 WrLiRmuUeERabRelInd (Pst *pst, SuId suId, RmuUeERabRelInd *relIndinfo);
extern S16 WrLiRmuUeRecfgRsp (Pst *pst, SuId suId, RmuUeRecfgRsp *recfgRspinfo);
extern S16 WrLiRmuBndCfm (Pst *pst, SuId suId, U8 status);


extern S16 RmUiRmuBndReq (Pst *pst, SuId suId, SpId spId);
extern S16 RmUiRmuFsmStatusInd (Pst *pst, SuId suId, RmuFsmStatusInd *statusInd);
extern S16 RmUiRmuUeAdmitReq (Pst *pst, SuId suId, RmuUeAdmitReq *admitinfo);
extern S16 RmUiRmuUeHoReq (Pst *pst, SuId suId, RmuUeHoReq *hoinfo);
extern S16 RmUiRmuUeRelReq (Pst *pst, SuId suId, RmuUeRelReq *relinfo);
extern S16 RmUiRmuUeRecfgReq (Pst *pst, SuId suId, RmuUeRecfgReq *reconfiginfo);

extern S16 RmUiRmuUeSpsDisInd (Pst *pst, SuId suId, RmuUeSpsDisInd *ueSpsDisInd);


extern S16 RmUiRmuUeInactInd (Pst *pst, SuId suId, RmuUeInactInd *rrmUeInactInd)
                                                   ;

extern S16 RmUiRmuMmeOvldStartInd (Pst *pst, SuId suId, RmuMmeOvldStartInd *startInfo);
extern S16 RmUiRmuMmeOvldStopInd (Pst *pst, SuId suId,RmuMmeOvldStopInd *stopinfo);

extern S16 RmUiRmuCellRecfgInd (Pst *pst, SuId suId, RmuCellRecfgInd *cellRecfgInfo);
extern S16 RmUiRmuUeRecfgInd (Pst *pst, SuId suId, RmuUeRecfgInd *pstUeRecfgInd);
extern S16 RmUiRmuUeAdmitRsp (Pst *pst, SuId suId, RmuUeAdmitRsp *admitRspinfo);
extern S16 RmUiRmuUeHoRsp (Pst *pst, SuId suId, RmuUeHoRsp *hoRspinfo);
extern S16 RmUiRmuUeRelRsp (Pst *pst, SuId suId, RmuUeRelRsp *relrspinfo);
extern S16 RmUiRmuUeRelInd (Pst *pst, SuId suId, RmuUeRelInd *relIndinfo);
extern S16 RmUiRmuUeERabRelInd (Pst *pst, SuId suId, RmuUeERabRelInd *relIndinfo);
extern S16 RmUiRmuUeRecfgRsp (Pst *pst, SuId suId, RmuUeRecfgRsp *recfgRspinfo);
extern S16 RmUiRmuBndCfm (Pst *pst, SuId suId, U8 status);
# 1085 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/rmu.x"
extern S16 PtPkRmuUeAdmitRsp (Pst *pst, SuId suId, RmuUeAdmitRsp *admitRspInfo);
extern S16 PtPkRmuUeHoRsp (Pst *pst, SuId suId, RmuUeHoRsp *hoRspInfo);
extern S16 PtPkRmuUeRelRsp (Pst *pst, SuId suId, RmuUeRelRsp *ueRelRspInfo);
extern S16 PtPkRmuUeRelInd (Pst *pst, SuId suId, RmuUeRelInd *ueRelIndInfo);
extern S16 PtPkRmuUeERabRelInd (Pst *pst, SuId suId, RmuUeERabRelInd *rabRelIndInfo);
extern S16 PtPkRmuUeRecfgRsp (Pst *pst, SuId suId, RmuUeRecfgRsp *ueRecfgRspInfo);
extern S16 PtPkRmuCellRecfgInd (Pst *pst, SuId suId, RmuCellRecfgInd *cellRecfgInd);
extern S16 PtPkRmuUeRecfgInd (Pst *pst, SuId suId, RmuUeRecfgInd *ueRecfgInd);
extern S16 PtPkRmuBndCfm (Pst *pst, SuId suId, U8 status);
# 39 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nlu.x" 1
# 28 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nlu.x"
typedef struct nluPlmnId
{
   U8 numMncDigits;
   U8 mcc[3];
   U8 mnc[3];
}NluPlmnId;



typedef struct nluEcgi
{
   NluPlmnId plmn;
   U32 cellId;
}NluEcgi;





typedef struct nluPciModIndCfm
{
   NluEcgi ecgi;
   U16 pci;
}NluPciModIndCfm;



typedef struct nluNghCellInfo
{
   NluEcgi ecgi;
   U16 pci;
   U16 dlEarfcn;
   U16 ulEarfcn;
}NluNghCellInfo;

typedef struct nluNghCellModInfo
{
   NluEcgi oldEcgi;
   NluNghCellInfo nghCellInfo;
   U8 numNghNgh;
   NluNghCellInfo nghNghCellInfo[16];

}NluNghCellModInfo;

typedef struct nluNghCellMod
{
   U8 numNgh;
   NluNghCellModInfo nghCellModInfo[16];

}NluNghCellMod;

typedef struct nluNghCellDel
{
   U8 numNgh;
   NluEcgi ecgi[16];
}NluNghCellDel;

typedef struct nluNghCellAddInfo
{
   NluNghCellInfo nghCellInfo;
   U8 numNghNgh;
   NluNghCellInfo nghNghCellInfo[16];
}NluNghCellAddInfo;

typedef struct nluNghCellAdd
{
   U8 numNgh;
   NluNghCellAddInfo nghCellAddInfo[16];

}NluNghCellAdd;

typedef enum nluNghCfgType
{
   NLU_NGH_ADD,
   NLU_NGH_DEL,
   NLU_NGH_MOD
}NluNghCfgType;

typedef struct nluNghCellCfgParam
{
   NluNghCfgType cfgType;
   union
   {
      NluNghCellAdd nghCellAdd;
      NluNghCellDel nghCellDel;
      NluNghCellMod nghCellMod;
   }u;

}NluNghCellCfgParam;

typedef struct nluNghEnbCellCfg
{
   U32 nghEnbId;
   NluNghCellCfgParam nghCellParam;
}NluNghEnbCellCfg;

typedef enum nluNghMsgType
{
   NLU_X2SETUP_REQ_NGH_RPT,
   NLU_X2SETUP_RSP_NGH_RPT,
   NLU_ENB_CFG_UPD_NGH_RPT,
   NLU_ENB_ANR_NGH_RPT,
   NLU_ENB_DEL_NGH_RPT
}NluNghMsgType;



typedef struct nluNeighborReport
{
   NluNghMsgType msgType;
   U32 servCellId;
   U8 numNghEnb;
   NluNghEnbCellCfg nghEnbCellCfg[16];
}NluNeighborReport;


typedef struct nluPeriodicRemCellInfo {
   U16 pci;
   U8 rsrp;
   U8 dlBw;
   U8 numTx;
}NluPeriodicRemCellInfo;

typedef struct nluPeriodicRemCellSearchRsp {
   U8 numCells;
   NluPeriodicRemCellInfo cellInfo[16];
}NluPeriodicRemCellSearchRsp;







typedef enum nluUeEvent
{
   NLU_UE_ADDED,
   NLU_UE_DELETED,
   NLU_UE_CRNTI_CHANGED

}NluUeEvent;



typedef struct nluUeInfo
{
   NluUeEvent event;

   NluEcgi ecgi;
   U16 crnti;
   U16 oldCrnti;
}NluUeInfo;

extern S16 NlUiNluUeInd ( Pst *pst, SuId suId, NluUeInfo *ueInfo )



  ;
# 195 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nlu.x"
typedef struct nluNghCellMeasRpt
{
   NluEcgi ecgi;
   S16 nghCellRsrp;
   S16 nghCellRsrq;
   U16 pci;
   U32 dlEarfcn;
}NluNghCellMeasRpt;




typedef struct nluUeMeasRpt
{
   NluEcgi ecgi;
   U16 crnti;





   U32 noNghCell;
   NluNghCellMeasRpt nghCellMeasRpt[16];
   U32 servCellRsrp;
   U32 servCellRsrq;

}NluUeMeasRpt;

extern S16 NlUiNluUeMeasReportInd ( Pst *pst, SuId suId, NluUeMeasRpt *measRpt )



  ;





typedef struct rgrStaIndInfo NluUeCqiRpt;


extern S16 NlUiNluUeCqiReportInd ( Pst *pst, SuId suId, NluUeCqiRpt *cqiRpt )



  ;




typedef S16 (*NluBndReq) ( Pst *pst, SuId suId, SpId spId )



  ;




typedef S16 (*NluBndCfm) ( Pst *pst, SuId suId, SpId spId, U8 status )




  ;




typedef S16 (*NluNeighborReq) ( Pst *pst, SuId suId, NluNeighborReport *nhbr )



  ;




typedef S16 (*NluPciModCfm) ( Pst *pst, SuId suId, NluPciModIndCfm *pciMod )



  ;





typedef S16 (*NluUeMeasRptInd) ( Pst *pst, SuId suId, NluUeMeasRpt *measRpt )



  ;





typedef S16 (*NluUeInd) ( Pst *pst, SuId suId, NluUeInfo *ueInfo )



  ;




typedef S16 (*NluUeCqiRptInd) ( Pst *pst, SuId suId, NluUeCqiRpt *cqiRpt )



  ;
# 315 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nlu.x"
extern S16 WrLiNluBndReq ( Pst *pst, SuId suId, SpId spId )



  ;




extern S16 WrLiNluPciModIndCfm ( Pst *pst, SuId suId, NluPciModIndCfm *pciMod )



  ;

extern S16 WrLiNluUeCqiRptInd ( Pst *pst, SuId suId, NluUeCqiRpt *cqiRpt )



  ;

extern S16 WrLiNluUeMeasRptInd ( Pst *pst, SuId suId, NluUeMeasRpt *measRpt )



  ;






extern S16 WrLiNluNeighborReq ( Pst *pst, SuId suId, NluNeighborReport *ueRep )



  ;

extern S16 WrLiNluUeInd ( Pst *pst, SuId suId, NluUeInfo *ueInfo )



  ;







extern S16 cmPkNluBndReq ( Pst *pst, SuId suId, SpId spId )



  ;






extern S16 cmUnpkNluBndReq ( NluBndReq func, Pst *pst, Buffer *mBuf )



  ;






extern S16 ptUiNluBndReq ( Pst *pst, SuId suId, SpId spId )



  ;

extern S16 cmPkNluBndCfm ( Pst *pst, SuId suId, SpId spId, U8 status )




  ;







extern S16 cmUnpkNluBndCfm ( NluBndCfm func, Pst *pst, Buffer *mBuf )



  ;





extern S16 cmPkNluNeighborReq ( Pst *pst, SuId suId, NluNeighborReport *nhbr )



  ;





extern S16 ptUiNluNeighborReq ( Pst *pst, SuId suId, NluNeighborReport *nhbr )



  ;





extern S16 cmUnpkNluNeighborReq ( NluNeighborReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmPkNluPciModIndCfm ( Pst *pst, SuId suId, NluPciModIndCfm *pciMod )



  ;


extern S16 ptUiNluPciModIndCfm ( Pst *pst, SuId suId, NluPciModIndCfm *pciMod )



  ;







extern S16 WrLiNluBndCfm ( Pst *pst, SuId suId, SpId spId, U8 status )




  ;






extern S16 NlUiNluBndReq ( Pst *pst, SuId suId, SpId spId )



  ;






extern S16 NlUiNluBndCfm ( Pst *pst, SuId suId, SpId spId, U8 status )




  ;






extern S16 PtLiNluBndCfm ( Pst *pst, SuId suId, SpId spId, U8 status )




  ;







extern S16 NlUiNluNeighborReq ( Pst *pst, SuId suId, NluNeighborReport *newNhbr )



  ;





extern S16 cmUnpkNluPciModIndCfm ( NluPciModCfm func, Pst *pst, Buffer *mBuf )



  ;




extern S16 NlUiNluPciModIndCfm ( Pst *pst, SuId suId, NluPciModIndCfm *pciMod )



  ;

extern S16 cmPkNluUeMeasReportInd ( Pst *pst, SuId suId, NluUeMeasRpt *measRpt )



  ;

extern S16 cmUnpkNluUeMeasReportInd ( NluUeMeasRptInd func, Pst *pst, Buffer *mBuf )



  ;


extern S16 ptUiNluUeMeasReportInd ( Pst *pst, SuId suId, NluUeMeasRpt *measRpt )



  ;

extern S16 cmPkNluUeInd ( Pst *pst, SuId suId, NluUeInfo *ueInfo )



  ;

extern S16 cmUnpkNluUeInd ( NluUeInd func, Pst *pst, Buffer *mBuf )



  ;


extern S16 ptUiNluUeInd ( Pst *pst, SuId suId, NluUeInfo *ueInfo )



  ;

extern S16 cmPkNluUeCqiReportInd ( Pst *pst, SuId suId, NluUeCqiRpt *cqiRpt )



  ;

extern S16 cmUnpkNluUeCqiReportInd ( NluUeCqiRptInd func, Pst *pst, Buffer *mBuf )



  ;


extern S16 ptUiNluUeCqiReportInd ( Pst *pst, SuId suId, NluUeCqiRpt *cqiRpt )



  ;
# 608 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nlu.x"
typedef S16 (*NluPerCellSrchRsp) ( Pst *pst, SuId suId, NluPeriodicRemCellSearchRsp *cellSrchRsp )



  ;

extern S16 cmUnpkNluPerCellSrchRsp ( NluPerCellSrchRsp func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmPkNluPerCellSrchRsp ( Pst *pst, SuId suId, NluPeriodicRemCellSearchRsp *cellInfo )



  ;

extern S16 WrLiNluPerCellSrchRsp ( Pst *pst, SuId suId, NluPeriodicRemCellSearchRsp *cellSrchRsp )



  ;

extern S16 ptUiNluPerCellSrchRsp ( Pst *pst, SuId suId, NluPeriodicRemCellSearchRsp *cellInfo )



  ;

extern S16 NlUiNluPerdCellSrchRsp ( Pst *pst, SuId suId, NluPeriodicRemCellSearchRsp *cellSrchRsp )



  ;
# 40 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c" 2
# 48 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
 RmuFsmStatusIndFPtr wrLiRmuFsmStatusIndMt[5] =
{
   cmPkRmuFsmStatusInd,

   cmPkLwLcRmuFsmStatusInd,
# 66 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
};

 RmuMmeOvldStartIndFPtr wrLiRmuMmeOverloadStartIndMt[5] =
{
   cmPkRmuMmeOverloadStartInd,

   cmPkLwLcRmuMmeOverloadStartInd,
# 86 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
};


 RmuMmeOvldStopIndFPtr wrLiRmuMmeOverloadStopIndMt[5] =
{
   cmPkRmuMmeOverloadStopInd,

   cmPkLwLcRmuMmeOverloadStopInd,
# 107 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
};


 RmuUeAdmitReqFPtr wrLiRmuUeAdmitReqMt[5] =
{
   cmPkRmuUeAdmitReq,

   cmPkLwLcRmuUeAdmitReq,
# 128 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
};


 RmuUeInactIndFPtr wrLiRmuUeInactIndMt[5] =
{
   cmPkRmuUeInactInd,

   cmPkLwLcRmuUeInactInd,
# 149 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
};


 RmuUeHoReqFPtr wrLiRmuUeHoReqMt[5] =
{
   cmPkRmuUeHoReq,

   cmPkLwLcRmuUeHoReq,
# 170 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
};


 RmuUeRelReqFPtr wrLiRmuUeRelReqMt[5] =
{
   cmPkRmuUeRelReq,

   cmPkLwLcRmuUeRelReq,
# 191 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
};


 RmuUeRecfgReqFPtr wrLiRmuUeRecfgReqMt[5] =
{
   cmPkRmuUeRecfgReq,

   cmPkLwLcRmuUeRecfgReq,
# 212 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
};


 RmuUeSpsDisIndFPtr wrLiRmuUeSpsDisIndMt[5] =
{
   cmPkRmuUeSpsDisInd,

   cmPkLwLcRmuUeSpsDisInd,
# 233 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
};


 RmuBndReqFPtr wrLiRmuBndReqMt[5] =
{
   cmPkRmuBndReq,

   cmPkLwLcRmuBndReq,
# 254 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
};

 NluBndReq wrLiNluBndReqMt[3]=
{

   cmPkNluBndReq,




   NlUiNluBndReq,




   cmPkNluBndReq,



};

 NluNeighborReq wrLiNluNeighborReqMt[3]=
{

   cmPkNluNeighborReq,




   NlUiNluNeighborReq,




   cmPkNluNeighborReq,



};

 NluPciModCfm wrLiNluPciModIndCfmMt[3]=
{

   cmPkNluPciModIndCfm,




   NlUiNluPciModIndCfm,



   cmPkNluPciModIndCfm,
};


 NluUeCqiRptInd wrLiNluUeCqiRptIndMt[3]=
{

   cmPkNluUeCqiReportInd,




   NlUiNluUeCqiReportInd,



   cmPkNluUeCqiReportInd,
};


 NluUeMeasRptInd wrLiNluUeMeasRptIndMt[3]=
{

   cmPkNluUeMeasReportInd,




   NlUiNluUeMeasReportInd,



   cmPkNluUeMeasReportInd,
};

 NluUeInd wrLiNluUeIndMt[3]=
{

   cmPkNluUeInd,




   NlUiNluUeInd,



   cmPkNluUeInd,
};



 NluPerCellSrchRsp wrLiNluPerCellSrchRspMt[3]=
{

   cmPkNluPerCellSrchRsp,





   cmPkNluPerCellSrchRsp,





   cmPkNluPerCellSrchRsp,
};
# 396 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
 S16 WrLiRmuFsmStatusInd
(
Pst *pst,
SuId suId,
RmuFsmStatusInd *statusInd
)






{
   ;

   (*wrLiRmuFsmStatusIndMt[pst->selector])
      (pst, suId, statusInd);

   return(0);
}
# 432 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
 S16 WrLiRmuMmeOverloadStartInd
(
Pst *pst,
SuId suId,
RmuMmeOvldStartInd *startInfo
)






{
   ;

   (*wrLiRmuMmeOverloadStartIndMt[pst->selector])
      (pst, suId, startInfo);

   return(0);
}
# 468 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
 S16 WrLiRmuMmeOverloadStopInd
(
Pst *pst,
SuId suId,
RmuMmeOvldStopInd *stopinfo
)






{
   ;

   (*wrLiRmuMmeOverloadStopIndMt[pst->selector])
      (pst, suId, stopinfo);

   return(0);
}
# 503 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
 S16 WrLiRmuUeAdmitReq
(
Pst *pst,
SuId suId,
RmuUeAdmitReq *admitinfo
)






{
   ;

   (*wrLiRmuUeAdmitReqMt[pst->selector])
      (pst, suId, admitinfo);

   return(0);
}
# 540 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
 S16 WrLiRmuUeInactInd
(
Pst *pst,
SuId suId,
RmuUeInactInd *rrmUeInactInd
)







{
   ;

   (*wrLiRmuUeInactIndMt[pst->selector]) (pst, suId, rrmUeInactInd);

   return(0);
}
# 575 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
 S16 WrLiRmuUeHoReq
(
Pst *pst,
SuId suId,
RmuUeHoReq *hoinfo
)






{
   ;

   (*wrLiRmuUeHoReqMt[pst->selector])
      (pst, suId, hoinfo);

   return(0);
}
# 610 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
 S16 WrLiRmuUeRelReq
(
Pst *pst,
SuId suId,
RmuUeRelReq *relinfo
)






{
   ;

   (*wrLiRmuUeRelReqMt[pst->selector])
      (pst, suId, relinfo);

   return(0);
}
# 645 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
 S16 WrLiRmuUeRecfgReq
(
Pst *pst,
SuId suId,
RmuUeRecfgReq *reconfiginfo
)






{
   ;

   (*wrLiRmuUeRecfgReqMt[pst->selector])
      (pst, suId, reconfiginfo);

   return(0);
}
# 681 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
 S16 WrLiRmuUeSpsDisInd
(
Pst *pst,
SuId suId,
RmuUeSpsDisInd *ueSpsDisInd
)






{
   ;

   (*wrLiRmuUeSpsDisIndMt[pst->selector])
      (pst, suId, ueSpsDisInd);

   return(0);
}
# 716 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
 S16 WrLiRmuBndReq
(
Pst *pst,
SuId suId,
SpId spId
)






{
   ;

   (*wrLiRmuBndReqMt[pst->selector])
      (pst, suId, spId);

   return(0);
}
# 751 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
 S16 WrLiNluBndReq
(
Pst *pst,
SuId suId,
SpId spId
)






{
   ;

   (*wrLiNluBndReqMt[pst->selector])
      (pst, suId, spId);

   return(0);
}
# 786 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
 S16 WrLiNluPciModIndCfm
(
Pst *pst,
SuId suId,
NluPciModIndCfm *pciMod
)






{
   ;

   (*wrLiNluPciModIndCfmMt[pst->selector])
      (pst,suId, pciMod);
   return(0);
}
# 822 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
 S16 WrLiNluUeCqiRptInd
(
Pst *pst,
SuId suId,
NluUeCqiRpt *cqiRpt
)






{
   S16 ret = 0;
   ret = (*wrLiNluUeCqiRptIndMt[pst->selector])
      (pst,suId, cqiRpt);
   return(ret);
}
# 857 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
 S16 WrLiNluUeMeasRptInd
(
Pst *pst,
SuId suId,
NluUeMeasRpt *measRpt
)






{
   S16 ret = 0;
   ret = (*wrLiNluUeMeasRptIndMt[pst->selector])
      (pst,suId, measRpt);
   return(ret);
}
# 891 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
 S16 WrLiNluUeInd
(
Pst *pst,
SuId suId,
NluUeInfo *ueInfo
)






{
   S16 ret = 0;
   ret = (*wrLiNluUeIndMt[pst->selector])
      (pst,suId, ueInfo);
   return(ret);
}
# 925 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
 S16 WrLiNluNeighborReq
(
Pst *pst,
SuId suId,
NluNeighborReport *nghRpt
)






{
   ;

   (*wrLiNluNeighborReqMt[pst->selector])
      (pst,suId, nghRpt);

   return(0);
}
# 961 "/home/mrehwald/Desktop/Radisys/lte_enb/src/enbapp//wr_ptli.c"
 S16 WrLiNluPerCellSrchRsp
(
Pst *pst,
SuId suId,
NluPeriodicRemCellSearchRsp *cellSrchRsp
)






{
   ;

   (*wrLiNluPerCellSrchRspMt[pst->selector])
      (pst,suId, cellSrchRsp);
   return(0);
}
