# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 23 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
static const char* RLOG_MODULE_NAME="RRC";
static int RLOG_MODULE_ID=512;
static int RLOG_FILE_ID=90;
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/envopt.h" 1
# 27 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/envdep.h" 1
# 172 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/envdep.h"
typedef void *Ptr;
# 773 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/envdep.h"
typedef unsigned char Bool;


typedef char S8;




typedef unsigned char U8;

typedef short S16;
typedef unsigned short U16;


typedef long S32;
typedef unsigned long U32;





__extension__ typedef long long S64;
__extension__ typedef unsigned long long U64;
# 814 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/envdep.h"
typedef float F32;
typedef double F64;
# 831 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/envdep.h"
typedef void Void;



typedef S8 (*PFS8) (void );
typedef S16 (*PFS16) (void );
typedef S32 (*PFS32) (void );
typedef Void (*PFVOID) (void );
typedef Void ( *PIF) (void );
# 1850 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/envdep.h"
typedef U32 MFTYPE;




typedef S8 *ARGTYPE;
# 28 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/envind.h" 1
# 29 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.h" 1
# 30 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.h" 1
# 1918 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.h"
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h" 1
# 46 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h"
# 1 "/usr/include/pthread.h" 1 3 4
# 21 "/usr/include/pthread.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 364 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 415 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 416 "/usr/include/sys/cdefs.h" 2 3 4
# 365 "/usr/include/features.h" 2 3 4
# 388 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4






# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 389 "/usr/include/features.h" 2 3 4
# 22 "/usr/include/pthread.h" 2 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 36 "/usr/include/endian.h" 3 4
# 1 "/usr/include/bits/endian.h" 1 3 4
# 37 "/usr/include/endian.h" 2 3 4
# 60 "/usr/include/endian.h" 3 4
# 1 "/usr/include/bits/byteswap.h" 1 3 4
# 27 "/usr/include/bits/byteswap.h" 3 4
# 1 "/usr/include/bits/types.h" 1 3 4
# 27 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 28 "/usr/include/bits/types.h" 2 3 4



# 30 "/usr/include/bits/types.h" 3 4
typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 121 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 122 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 28 "/usr/include/bits/byteswap.h" 2 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 29 "/usr/include/bits/byteswap.h" 2 3 4






# 1 "/usr/include/bits/byteswap-16.h" 1 3 4
# 36 "/usr/include/bits/byteswap.h" 2 3 4
# 44 "/usr/include/bits/byteswap.h" 3 4
static __inline unsigned int
__bswap_32 (unsigned int __bsx)
{
  return __builtin_bswap32 (__bsx);
}
# 108 "/usr/include/bits/byteswap.h" 3 4
static __inline __uint64_t
__bswap_64 (__uint64_t __bsx)
{
  return __builtin_bswap64 (__bsx);
}
# 61 "/usr/include/endian.h" 2 3 4
# 23 "/usr/include/pthread.h" 2 3 4
# 1 "/usr/include/sched.h" 1 3 4
# 28 "/usr/include/sched.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 216 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 3 4
typedef unsigned int size_t;
# 29 "/usr/include/sched.h" 2 3 4





# 1 "/usr/include/time.h" 1 3 4
# 73 "/usr/include/time.h" 3 4


typedef __time_t time_t;



# 120 "/usr/include/time.h" 3 4
struct timespec
  {
    __time_t tv_sec;
    __syscall_slong_t tv_nsec;
  };
# 35 "/usr/include/sched.h" 2 3 4


typedef __pid_t pid_t;





# 1 "/usr/include/bits/sched.h" 1 3 4
# 73 "/usr/include/bits/sched.h" 3 4
struct sched_param
  {
    int __sched_priority;
  };





extern int clone (int (*__fn) (void *__arg), void *__child_stack,
    int __flags, void *__arg, ...) __attribute__ ((__nothrow__ , __leaf__));


extern int unshare (int __flags) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_getcpu (void) __attribute__ ((__nothrow__ , __leaf__));


extern int setns (int __fd, int __nstype) __attribute__ ((__nothrow__ , __leaf__));











struct __sched_param
  {
    int __sched_priority;
  };
# 119 "/usr/include/bits/sched.h" 3 4
typedef unsigned long int __cpu_mask;






typedef struct
{
  __cpu_mask __bits[1024 / (8 * sizeof (__cpu_mask))];
} cpu_set_t;
# 202 "/usr/include/bits/sched.h" 3 4


extern int __sched_cpucount (size_t __setsize, const cpu_set_t *__setp)
  __attribute__ ((__nothrow__ , __leaf__));
extern cpu_set_t *__sched_cpualloc (size_t __count) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern void __sched_cpufree (cpu_set_t *__set) __attribute__ ((__nothrow__ , __leaf__));


# 44 "/usr/include/sched.h" 2 3 4







extern int sched_setparam (__pid_t __pid, const struct sched_param *__param)
     __attribute__ ((__nothrow__ , __leaf__));


extern int sched_getparam (__pid_t __pid, struct sched_param *__param) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_setscheduler (__pid_t __pid, int __policy,
          const struct sched_param *__param) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_getscheduler (__pid_t __pid) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_yield (void) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_get_priority_max (int __algorithm) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_get_priority_min (int __algorithm) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_rr_get_interval (__pid_t __pid, struct timespec *__t) __attribute__ ((__nothrow__ , __leaf__));
# 118 "/usr/include/sched.h" 3 4
extern int sched_setaffinity (__pid_t __pid, size_t __cpusetsize,
         const cpu_set_t *__cpuset) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_getaffinity (__pid_t __pid, size_t __cpusetsize,
         cpu_set_t *__cpuset) __attribute__ ((__nothrow__ , __leaf__));



# 24 "/usr/include/pthread.h" 2 3 4
# 1 "/usr/include/time.h" 1 3 4
# 29 "/usr/include/time.h" 3 4








# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 38 "/usr/include/time.h" 2 3 4



# 1 "/usr/include/bits/time.h" 1 3 4
# 30 "/usr/include/bits/time.h" 3 4
struct timeval
  {
    __time_t tv_sec;
    __suseconds_t tv_usec;
  };
# 88 "/usr/include/bits/time.h" 3 4
# 1 "/usr/include/bits/timex.h" 1 3 4
# 25 "/usr/include/bits/timex.h" 3 4
struct timex
{
  unsigned int modes;
  __syscall_slong_t offset;
  __syscall_slong_t freq;
  __syscall_slong_t maxerror;
  __syscall_slong_t esterror;
  int status;
  __syscall_slong_t constant;
  __syscall_slong_t precision;
  __syscall_slong_t tolerance;
  struct timeval time;
  __syscall_slong_t tick;
  __syscall_slong_t ppsfreq;
  __syscall_slong_t jitter;
  int shift;
  __syscall_slong_t stabil;
  __syscall_slong_t jitcnt;
  __syscall_slong_t calcnt;
  __syscall_slong_t errcnt;
  __syscall_slong_t stbcnt;

  int tai;


  int :32; int :32; int :32; int :32;
  int :32; int :32; int :32; int :32;
  int :32; int :32; int :32;
};
# 89 "/usr/include/bits/time.h" 2 3 4




extern int clock_adjtime (__clockid_t __clock_id, struct timex *__utx) __attribute__ ((__nothrow__ , __leaf__));


# 42 "/usr/include/time.h" 2 3 4
# 57 "/usr/include/time.h" 3 4


typedef __clock_t clock_t;



# 91 "/usr/include/time.h" 3 4
typedef __clockid_t clockid_t;
# 103 "/usr/include/time.h" 3 4
typedef __timer_t timer_t;
# 131 "/usr/include/time.h" 3 4


struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;


  long int tm_gmtoff;
  const char *tm_zone;




};








struct itimerspec
  {
    struct timespec it_interval;
    struct timespec it_value;
  };


struct sigevent;
# 186 "/usr/include/time.h" 3 4



extern clock_t clock (void) __attribute__ ((__nothrow__ , __leaf__));


extern time_t time (time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));


extern double difftime (time_t __time1, time_t __time0)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern time_t mktime (struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));





extern size_t strftime (char *__restrict __s, size_t __maxsize,
   const char *__restrict __format,
   const struct tm *__restrict __tp) __attribute__ ((__nothrow__ , __leaf__));





extern char *strptime (const char *__restrict __s,
         const char *__restrict __fmt, struct tm *__tp)
     __attribute__ ((__nothrow__ , __leaf__));





# 1 "/usr/include/xlocale.h" 1 3 4
# 27 "/usr/include/xlocale.h" 3 4
typedef struct __locale_struct
{

  struct __locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
} *__locale_t;


typedef __locale_t locale_t;
# 222 "/usr/include/time.h" 2 3 4

extern size_t strftime_l (char *__restrict __s, size_t __maxsize,
     const char *__restrict __format,
     const struct tm *__restrict __tp,
     __locale_t __loc) __attribute__ ((__nothrow__ , __leaf__));



extern char *strptime_l (const char *__restrict __s,
    const char *__restrict __fmt, struct tm *__tp,
    __locale_t __loc) __attribute__ ((__nothrow__ , __leaf__));






extern struct tm *gmtime (const time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));



extern struct tm *localtime (const time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));





extern struct tm *gmtime_r (const time_t *__restrict __timer,
       struct tm *__restrict __tp) __attribute__ ((__nothrow__ , __leaf__));



extern struct tm *localtime_r (const time_t *__restrict __timer,
          struct tm *__restrict __tp) __attribute__ ((__nothrow__ , __leaf__));





extern char *asctime (const struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));


extern char *ctime (const time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));







extern char *asctime_r (const struct tm *__restrict __tp,
   char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));


extern char *ctime_r (const time_t *__restrict __timer,
        char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));




extern char *__tzname[2];
extern int __daylight;
extern long int __timezone;




extern char *tzname[2];



extern void tzset (void) __attribute__ ((__nothrow__ , __leaf__));



extern int daylight;
extern long int timezone;





extern int stime (const time_t *__when) __attribute__ ((__nothrow__ , __leaf__));
# 319 "/usr/include/time.h" 3 4
extern time_t timegm (struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));


extern time_t timelocal (struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));


extern int dysize (int __year) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
# 334 "/usr/include/time.h" 3 4
extern int nanosleep (const struct timespec *__requested_time,
        struct timespec *__remaining);



extern int clock_getres (clockid_t __clock_id, struct timespec *__res) __attribute__ ((__nothrow__ , __leaf__));


extern int clock_gettime (clockid_t __clock_id, struct timespec *__tp) __attribute__ ((__nothrow__ , __leaf__));


extern int clock_settime (clockid_t __clock_id, const struct timespec *__tp)
     __attribute__ ((__nothrow__ , __leaf__));






extern int clock_nanosleep (clockid_t __clock_id, int __flags,
       const struct timespec *__req,
       struct timespec *__rem);


extern int clock_getcpuclockid (pid_t __pid, clockid_t *__clock_id) __attribute__ ((__nothrow__ , __leaf__));




extern int timer_create (clockid_t __clock_id,
    struct sigevent *__restrict __evp,
    timer_t *__restrict __timerid) __attribute__ ((__nothrow__ , __leaf__));


extern int timer_delete (timer_t __timerid) __attribute__ ((__nothrow__ , __leaf__));


extern int timer_settime (timer_t __timerid, int __flags,
     const struct itimerspec *__restrict __value,
     struct itimerspec *__restrict __ovalue) __attribute__ ((__nothrow__ , __leaf__));


extern int timer_gettime (timer_t __timerid, struct itimerspec *__value)
     __attribute__ ((__nothrow__ , __leaf__));


extern int timer_getoverrun (timer_t __timerid) __attribute__ ((__nothrow__ , __leaf__));





extern int timespec_get (struct timespec *__ts, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 403 "/usr/include/time.h" 3 4
extern int getdate_err;
# 412 "/usr/include/time.h" 3 4
extern struct tm *getdate (const char *__string);
# 426 "/usr/include/time.h" 3 4
extern int getdate_r (const char *__restrict __string,
        struct tm *__restrict __resbufp);



# 25 "/usr/include/pthread.h" 2 3 4

# 1 "/usr/include/bits/pthreadtypes.h" 1 3 4
# 21 "/usr/include/bits/pthreadtypes.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 22 "/usr/include/bits/pthreadtypes.h" 2 3 4
# 60 "/usr/include/bits/pthreadtypes.h" 3 4
typedef unsigned long int pthread_t;


union pthread_attr_t
{
  char __size[36];
  long int __align;
};

typedef union pthread_attr_t pthread_attr_t;
# 81 "/usr/include/bits/pthreadtypes.h" 3 4
typedef struct __pthread_internal_slist
{
  struct __pthread_internal_slist *__next;
} __pthread_slist_t;





typedef union
{
  struct __pthread_mutex_s
  {
    int __lock;
    unsigned int __count;
    int __owner;





    int __kind;
# 111 "/usr/include/bits/pthreadtypes.h" 3 4
    unsigned int __nusers;
    __extension__ union
    {
      struct
      {
 short __espins;
 short __elision;



      } __elision_data;
      __pthread_slist_t __list;
    };

  } __data;
  char __size[24];
  long int __align;
} pthread_mutex_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  struct
  {
    int __lock;
    unsigned int __futex;
    __extension__ unsigned long long int __total_seq;
    __extension__ unsigned long long int __wakeup_seq;
    __extension__ unsigned long long int __woken_seq;
    void *__mutex;
    unsigned int __nwaiters;
    unsigned int __broadcast_seq;
  } __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;





typedef union
{
# 202 "/usr/include/bits/pthreadtypes.h" 3 4
  struct
  {
    int __lock;
    unsigned int __nr_readers;
    unsigned int __readers_wakeup;
    unsigned int __writer_wakeup;
    unsigned int __nr_readers_queued;
    unsigned int __nr_writers_queued;


    unsigned char __flags;
    unsigned char __shared;
    signed char __rwelision;

    unsigned char __pad2;
    int __writer;
  } __data;

  char __size[32];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[20];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 27 "/usr/include/pthread.h" 2 3 4
# 1 "/usr/include/bits/setjmp.h" 1 3 4
# 26 "/usr/include/bits/setjmp.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 27 "/usr/include/bits/setjmp.h" 2 3 4
# 35 "/usr/include/bits/setjmp.h" 3 4
typedef int __jmp_buf[6];
# 28 "/usr/include/pthread.h" 2 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 29 "/usr/include/pthread.h" 2 3 4



enum
{
  PTHREAD_CREATE_JOINABLE,

  PTHREAD_CREATE_DETACHED

};



enum
{
  PTHREAD_MUTEX_TIMED_NP,
  PTHREAD_MUTEX_RECURSIVE_NP,
  PTHREAD_MUTEX_ERRORCHECK_NP,
  PTHREAD_MUTEX_ADAPTIVE_NP

  ,
  PTHREAD_MUTEX_NORMAL = PTHREAD_MUTEX_TIMED_NP,
  PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,
  PTHREAD_MUTEX_ERRORCHECK = PTHREAD_MUTEX_ERRORCHECK_NP,
  PTHREAD_MUTEX_DEFAULT = PTHREAD_MUTEX_NORMAL



  , PTHREAD_MUTEX_FAST_NP = PTHREAD_MUTEX_TIMED_NP

};




enum
{
  PTHREAD_MUTEX_STALLED,
  PTHREAD_MUTEX_STALLED_NP = PTHREAD_MUTEX_STALLED,
  PTHREAD_MUTEX_ROBUST,
  PTHREAD_MUTEX_ROBUST_NP = PTHREAD_MUTEX_ROBUST
};





enum
{
  PTHREAD_PRIO_NONE,
  PTHREAD_PRIO_INHERIT,
  PTHREAD_PRIO_PROTECT
};
# 114 "/usr/include/pthread.h" 3 4
enum
{
  PTHREAD_RWLOCK_PREFER_READER_NP,
  PTHREAD_RWLOCK_PREFER_WRITER_NP,
  PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
  PTHREAD_RWLOCK_DEFAULT_NP = PTHREAD_RWLOCK_PREFER_READER_NP
};
# 155 "/usr/include/pthread.h" 3 4
enum
{
  PTHREAD_INHERIT_SCHED,

  PTHREAD_EXPLICIT_SCHED

};



enum
{
  PTHREAD_SCOPE_SYSTEM,

  PTHREAD_SCOPE_PROCESS

};



enum
{
  PTHREAD_PROCESS_PRIVATE,

  PTHREAD_PROCESS_SHARED

};
# 190 "/usr/include/pthread.h" 3 4
struct _pthread_cleanup_buffer
{
  void (*__routine) (void *);
  void *__arg;
  int __canceltype;
  struct _pthread_cleanup_buffer *__prev;
};


enum
{
  PTHREAD_CANCEL_ENABLE,

  PTHREAD_CANCEL_DISABLE

};
enum
{
  PTHREAD_CANCEL_DEFERRED,

  PTHREAD_CANCEL_ASYNCHRONOUS

};
# 228 "/usr/include/pthread.h" 3 4





extern int pthread_create (pthread_t *__restrict __newthread,
      const pthread_attr_t *__restrict __attr,
      void *(*__start_routine) (void *),
      void *__restrict __arg) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));





extern void pthread_exit (void *__retval) __attribute__ ((__noreturn__));







extern int pthread_join (pthread_t __th, void **__thread_return);




extern int pthread_tryjoin_np (pthread_t __th, void **__thread_return) __attribute__ ((__nothrow__ , __leaf__));







extern int pthread_timedjoin_np (pthread_t __th, void **__thread_return,
     const struct timespec *__abstime);






extern int pthread_detach (pthread_t __th) __attribute__ ((__nothrow__ , __leaf__));



extern pthread_t pthread_self (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern int pthread_equal (pthread_t __thread1, pthread_t __thread2)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));







extern int pthread_attr_init (pthread_attr_t *__attr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_destroy (pthread_attr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_getdetachstate (const pthread_attr_t *__attr,
     int *__detachstate)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setdetachstate (pthread_attr_t *__attr,
     int __detachstate)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getguardsize (const pthread_attr_t *__attr,
          size_t *__guardsize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setguardsize (pthread_attr_t *__attr,
          size_t __guardsize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getschedparam (const pthread_attr_t *__restrict __attr,
           struct sched_param *__restrict __param)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setschedparam (pthread_attr_t *__restrict __attr,
           const struct sched_param *__restrict
           __param) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_getschedpolicy (const pthread_attr_t *__restrict
     __attr, int *__restrict __policy)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setschedpolicy (pthread_attr_t *__attr, int __policy)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_getinheritsched (const pthread_attr_t *__restrict
      __attr, int *__restrict __inherit)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setinheritsched (pthread_attr_t *__attr,
      int __inherit)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getscope (const pthread_attr_t *__restrict __attr,
      int *__restrict __scope)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setscope (pthread_attr_t *__attr, int __scope)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_getstackaddr (const pthread_attr_t *__restrict
          __attr, void **__restrict __stackaddr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2))) __attribute__ ((__deprecated__));





extern int pthread_attr_setstackaddr (pthread_attr_t *__attr,
          void *__stackaddr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__deprecated__));


extern int pthread_attr_getstacksize (const pthread_attr_t *__restrict
          __attr, size_t *__restrict __stacksize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int pthread_attr_setstacksize (pthread_attr_t *__attr,
          size_t __stacksize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getstack (const pthread_attr_t *__restrict __attr,
      void **__restrict __stackaddr,
      size_t *__restrict __stacksize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2, 3)));




extern int pthread_attr_setstack (pthread_attr_t *__attr, void *__stackaddr,
      size_t __stacksize) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int pthread_attr_setaffinity_np (pthread_attr_t *__attr,
     size_t __cpusetsize,
     const cpu_set_t *__cpuset)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 3)));



extern int pthread_attr_getaffinity_np (const pthread_attr_t *__attr,
     size_t __cpusetsize,
     cpu_set_t *__cpuset)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 3)));


extern int pthread_getattr_default_np (pthread_attr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_setattr_default_np (const pthread_attr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));




extern int pthread_getattr_np (pthread_t __th, pthread_attr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));







extern int pthread_setschedparam (pthread_t __target_thread, int __policy,
      const struct sched_param *__param)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3)));


extern int pthread_getschedparam (pthread_t __target_thread,
      int *__restrict __policy,
      struct sched_param *__restrict __param)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));


extern int pthread_setschedprio (pthread_t __target_thread, int __prio)
     __attribute__ ((__nothrow__ , __leaf__));




extern int pthread_getname_np (pthread_t __target_thread, char *__buf,
          size_t __buflen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));


extern int pthread_setname_np (pthread_t __target_thread, const char *__name)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));





extern int pthread_getconcurrency (void) __attribute__ ((__nothrow__ , __leaf__));


extern int pthread_setconcurrency (int __level) __attribute__ ((__nothrow__ , __leaf__));







extern int pthread_yield (void) __attribute__ ((__nothrow__ , __leaf__));




extern int pthread_setaffinity_np (pthread_t __th, size_t __cpusetsize,
       const cpu_set_t *__cpuset)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3)));


extern int pthread_getaffinity_np (pthread_t __th, size_t __cpusetsize,
       cpu_set_t *__cpuset)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3)));
# 494 "/usr/include/pthread.h" 3 4
extern int pthread_once (pthread_once_t *__once_control,
    void (*__init_routine) (void)) __attribute__ ((__nonnull__ (1, 2)));
# 506 "/usr/include/pthread.h" 3 4
extern int pthread_setcancelstate (int __state, int *__oldstate);



extern int pthread_setcanceltype (int __type, int *__oldtype);


extern int pthread_cancel (pthread_t __th);




extern void pthread_testcancel (void);




typedef struct
{
  struct
  {
    __jmp_buf __cancel_jmp_buf;
    int __mask_was_saved;
  } __cancel_jmp_buf[1];
  void *__pad[4];
} __pthread_unwind_buf_t __attribute__ ((__aligned__));
# 540 "/usr/include/pthread.h" 3 4
struct __pthread_cleanup_frame
{
  void (*__cancel_routine) (void *);
  void *__cancel_arg;
  int __do_it;
  int __cancel_type;
};
# 680 "/usr/include/pthread.h" 3 4
extern void __pthread_register_cancel (__pthread_unwind_buf_t *__buf)
     __attribute__ ((__regparm__ (1)));
# 692 "/usr/include/pthread.h" 3 4
extern void __pthread_unregister_cancel (__pthread_unwind_buf_t *__buf)
  __attribute__ ((__regparm__ (1)));
# 715 "/usr/include/pthread.h" 3 4
extern void __pthread_register_cancel_defer (__pthread_unwind_buf_t *__buf)
     __attribute__ ((__regparm__ (1)));
# 728 "/usr/include/pthread.h" 3 4
extern void __pthread_unregister_cancel_restore (__pthread_unwind_buf_t *__buf)
  __attribute__ ((__regparm__ (1)));



extern void __pthread_unwind_next (__pthread_unwind_buf_t *__buf)
     __attribute__ ((__regparm__ (1))) __attribute__ ((__noreturn__))

     __attribute__ ((__weak__))

     ;



struct __jmp_buf_tag;
extern int __sigsetjmp (struct __jmp_buf_tag *__env, int __savemask) __attribute__ ((__nothrow__));





extern int pthread_mutex_init (pthread_mutex_t *__mutex,
          const pthread_mutexattr_t *__mutexattr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutex_destroy (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutex_trylock (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutex_lock (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutex_timedlock (pthread_mutex_t *__restrict __mutex,
        const struct timespec *__restrict
        __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_mutex_unlock (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutex_getprioceiling (const pthread_mutex_t *
      __restrict __mutex,
      int *__restrict __prioceiling)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_mutex_setprioceiling (pthread_mutex_t *__restrict __mutex,
      int __prioceiling,
      int *__restrict __old_ceiling)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 3)));




extern int pthread_mutex_consistent (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern int pthread_mutex_consistent_np (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 806 "/usr/include/pthread.h" 3 4
extern int pthread_mutexattr_init (pthread_mutexattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutexattr_destroy (pthread_mutexattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutexattr_getpshared (const pthread_mutexattr_t *
      __restrict __attr,
      int *__restrict __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_mutexattr_setpshared (pthread_mutexattr_t *__attr,
      int __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutexattr_gettype (const pthread_mutexattr_t *__restrict
          __attr, int *__restrict __kind)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int pthread_mutexattr_settype (pthread_mutexattr_t *__attr, int __kind)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutexattr_getprotocol (const pthread_mutexattr_t *
       __restrict __attr,
       int *__restrict __protocol)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_mutexattr_setprotocol (pthread_mutexattr_t *__attr,
       int __protocol)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutexattr_getprioceiling (const pthread_mutexattr_t *
          __restrict __attr,
          int *__restrict __prioceiling)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_mutexattr_setprioceiling (pthread_mutexattr_t *__attr,
          int __prioceiling)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutexattr_getrobust (const pthread_mutexattr_t *__attr,
     int *__robustness)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int pthread_mutexattr_getrobust_np (const pthread_mutexattr_t *__attr,
        int *__robustness)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_mutexattr_setrobust (pthread_mutexattr_t *__attr,
     int __robustness)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern int pthread_mutexattr_setrobust_np (pthread_mutexattr_t *__attr,
        int __robustness)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 888 "/usr/include/pthread.h" 3 4
extern int pthread_rwlock_init (pthread_rwlock_t *__restrict __rwlock,
    const pthread_rwlockattr_t *__restrict
    __attr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_destroy (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_rdlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_tryrdlock (pthread_rwlock_t *__rwlock)
  __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_rwlock_timedrdlock (pthread_rwlock_t *__restrict __rwlock,
           const struct timespec *__restrict
           __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_rwlock_wrlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_trywrlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_rwlock_timedwrlock (pthread_rwlock_t *__restrict __rwlock,
           const struct timespec *__restrict
           __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_rwlock_unlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));





extern int pthread_rwlockattr_init (pthread_rwlockattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlockattr_destroy (pthread_rwlockattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlockattr_getpshared (const pthread_rwlockattr_t *
       __restrict __attr,
       int *__restrict __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_rwlockattr_setpshared (pthread_rwlockattr_t *__attr,
       int __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlockattr_getkind_np (const pthread_rwlockattr_t *
       __restrict __attr,
       int *__restrict __pref)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_rwlockattr_setkind_np (pthread_rwlockattr_t *__attr,
       int __pref) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







extern int pthread_cond_init (pthread_cond_t *__restrict __cond,
         const pthread_condattr_t *__restrict __cond_attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_cond_destroy (pthread_cond_t *__cond)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_cond_signal (pthread_cond_t *__cond)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_cond_broadcast (pthread_cond_t *__cond)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));






extern int pthread_cond_wait (pthread_cond_t *__restrict __cond,
         pthread_mutex_t *__restrict __mutex)
     __attribute__ ((__nonnull__ (1, 2)));
# 1000 "/usr/include/pthread.h" 3 4
extern int pthread_cond_timedwait (pthread_cond_t *__restrict __cond,
       pthread_mutex_t *__restrict __mutex,
       const struct timespec *__restrict __abstime)
     __attribute__ ((__nonnull__ (1, 2, 3)));




extern int pthread_condattr_init (pthread_condattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_condattr_destroy (pthread_condattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_condattr_getpshared (const pthread_condattr_t *
     __restrict __attr,
     int *__restrict __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_condattr_setpshared (pthread_condattr_t *__attr,
     int __pshared) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_condattr_getclock (const pthread_condattr_t *
          __restrict __attr,
          __clockid_t *__restrict __clock_id)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_condattr_setclock (pthread_condattr_t *__attr,
          __clockid_t __clock_id)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 1044 "/usr/include/pthread.h" 3 4
extern int pthread_spin_init (pthread_spinlock_t *__lock, int __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_destroy (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_lock (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_trylock (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_unlock (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));






extern int pthread_barrier_init (pthread_barrier_t *__restrict __barrier,
     const pthread_barrierattr_t *__restrict
     __attr, unsigned int __count)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrier_destroy (pthread_barrier_t *__barrier)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrier_wait (pthread_barrier_t *__barrier)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_barrierattr_init (pthread_barrierattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrierattr_destroy (pthread_barrierattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrierattr_getpshared (const pthread_barrierattr_t *
        __restrict __attr,
        int *__restrict __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_barrierattr_setpshared (pthread_barrierattr_t *__attr,
        int __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 1111 "/usr/include/pthread.h" 3 4
extern int pthread_key_create (pthread_key_t *__key,
          void (*__destr_function) (void *))
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_key_delete (pthread_key_t __key) __attribute__ ((__nothrow__ , __leaf__));


extern void *pthread_getspecific (pthread_key_t __key) __attribute__ ((__nothrow__ , __leaf__));


extern int pthread_setspecific (pthread_key_t __key,
    const void *__pointer) __attribute__ ((__nothrow__ , __leaf__)) ;




extern int pthread_getcpuclockid (pthread_t __thread_id,
      __clockid_t *__clock_id)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
# 1145 "/usr/include/pthread.h" 3 4
extern int pthread_atfork (void (*__prepare) (void),
      void (*__parent) (void),
      void (*__child) (void)) __attribute__ ((__nothrow__ , __leaf__));




extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) pthread_equal (pthread_t __thread1, pthread_t __thread2)
{
  return __thread1 == __thread2;
}



# 47 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h" 2
# 1 "/usr/include/semaphore.h" 1 3 4
# 22 "/usr/include/semaphore.h" 3 4
# 1 "/usr/include/sys/types.h" 1 3 4
# 27 "/usr/include/sys/types.h" 3 4






typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;




typedef __loff_t loff_t;



typedef __ino_t ino_t;






typedef __ino64_t ino64_t;




typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;





typedef __off_t off_t;






typedef __off64_t off64_t;
# 104 "/usr/include/sys/types.h" 3 4
typedef __id_t id_t;




typedef __ssize_t ssize_t;





typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;
# 136 "/usr/include/sys/types.h" 3 4
typedef __useconds_t useconds_t;



typedef __suseconds_t suseconds_t;





# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 147 "/usr/include/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;
# 194 "/usr/include/sys/types.h" 3 4
typedef int int8_t __attribute__ ((__mode__ (__QI__)));
typedef int int16_t __attribute__ ((__mode__ (__HI__)));
typedef int int32_t __attribute__ ((__mode__ (__SI__)));
typedef int int64_t __attribute__ ((__mode__ (__DI__)));


typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));
# 219 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/sys/select.h" 1 3 4
# 30 "/usr/include/sys/select.h" 3 4
# 1 "/usr/include/bits/select.h" 1 3 4
# 22 "/usr/include/bits/select.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 23 "/usr/include/bits/select.h" 2 3 4
# 31 "/usr/include/sys/select.h" 2 3 4


# 1 "/usr/include/bits/sigset.h" 1 3 4
# 22 "/usr/include/bits/sigset.h" 3 4
typedef int __sig_atomic_t;




typedef struct
  {
    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
  } __sigset_t;
# 34 "/usr/include/sys/select.h" 2 3 4



typedef __sigset_t sigset_t;
# 47 "/usr/include/sys/select.h" 3 4
# 1 "/usr/include/bits/time.h" 1 3 4
# 48 "/usr/include/sys/select.h" 2 3 4
# 56 "/usr/include/sys/select.h" 3 4
typedef long int __fd_mask;
# 66 "/usr/include/sys/select.h" 3 4
typedef struct
  {



    __fd_mask fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];





  } fd_set;






typedef __fd_mask fd_mask;
# 98 "/usr/include/sys/select.h" 3 4

# 108 "/usr/include/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 120 "/usr/include/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);





# 1 "/usr/include/bits/select2.h" 1 3 4
# 24 "/usr/include/bits/select2.h" 3 4
extern long int __fdelt_chk (long int __d);
extern long int __fdelt_warn (long int __d)
  __attribute__((__warning__ ("bit outside of fd_set selected")));
# 131 "/usr/include/sys/select.h" 2 3 4



# 220 "/usr/include/sys/types.h" 2 3 4


# 1 "/usr/include/sys/sysmacros.h" 1 3 4
# 24 "/usr/include/sys/sysmacros.h" 3 4


__extension__
extern unsigned int gnu_dev_major (unsigned long long int __dev)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__
extern unsigned int gnu_dev_minor (unsigned long long int __dev)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__
extern unsigned long long int gnu_dev_makedev (unsigned int __major,
            unsigned int __minor)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


__extension__ extern __inline __attribute__ ((__gnu_inline__)) __attribute__ ((__const__)) unsigned int
__attribute__ ((__nothrow__ , __leaf__)) gnu_dev_major (unsigned long long int __dev)
{
  return ((__dev >> 8) & 0xfff) | ((unsigned int) (__dev >> 32) & ~0xfff);
}

__extension__ extern __inline __attribute__ ((__gnu_inline__)) __attribute__ ((__const__)) unsigned int
__attribute__ ((__nothrow__ , __leaf__)) gnu_dev_minor (unsigned long long int __dev)
{
  return (__dev & 0xff) | ((unsigned int) (__dev >> 12) & ~0xff);
}

__extension__ extern __inline __attribute__ ((__gnu_inline__)) __attribute__ ((__const__)) unsigned long long int
__attribute__ ((__nothrow__ , __leaf__)) gnu_dev_makedev (unsigned int __major, unsigned int __minor)
{
  return ((__minor & 0xff) | ((__major & 0xfff) << 8)
   | (((unsigned long long int) (__minor & ~0xff)) << 12)
   | (((unsigned long long int) (__major & ~0xfff)) << 32));
}


# 223 "/usr/include/sys/types.h" 2 3 4





typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 262 "/usr/include/sys/types.h" 3 4
typedef __blkcnt64_t blkcnt64_t;
typedef __fsblkcnt64_t fsblkcnt64_t;
typedef __fsfilcnt64_t fsfilcnt64_t;
# 273 "/usr/include/sys/types.h" 3 4

# 23 "/usr/include/semaphore.h" 2 3 4






# 1 "/usr/include/bits/semaphore.h" 1 3 4
# 23 "/usr/include/bits/semaphore.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 24 "/usr/include/bits/semaphore.h" 2 3 4
# 36 "/usr/include/bits/semaphore.h" 3 4
typedef union
{
  char __size[16];
  long int __align;
} sem_t;
# 30 "/usr/include/semaphore.h" 2 3 4






extern int sem_init (sem_t *__sem, int __pshared, unsigned int __value)
     __attribute__ ((__nothrow__ , __leaf__));

extern int sem_destroy (sem_t *__sem) __attribute__ ((__nothrow__ , __leaf__));


extern sem_t *sem_open (const char *__name, int __oflag, ...) __attribute__ ((__nothrow__ , __leaf__));


extern int sem_close (sem_t *__sem) __attribute__ ((__nothrow__ , __leaf__));


extern int sem_unlink (const char *__name) __attribute__ ((__nothrow__ , __leaf__));





extern int sem_wait (sem_t *__sem);






extern int sem_timedwait (sem_t *__restrict __sem,
     const struct timespec *__restrict __abstime);



extern int sem_trywait (sem_t *__sem) __attribute__ ((__nothrow__));


extern int sem_post (sem_t *__sem) __attribute__ ((__nothrow__));


extern int sem_getvalue (sem_t *__restrict __sem, int *__restrict __sval)
     __attribute__ ((__nothrow__ , __leaf__));



# 48 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h" 2
# 1 "/usr/include/stdio.h" 1 3 4
# 29 "/usr/include/stdio.h" 3 4




# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 34 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 31 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 32 "/usr/include/libio.h" 2 3 4
# 49 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 50 "/usr/include/libio.h" 2 3 4
# 144 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;





typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 173 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 241 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 289 "/usr/include/libio.h" 3 4
  __off64_t _offset;







  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;

  size_t __pad5;
  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 333 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);




typedef __io_read_fn cookie_read_function_t;
typedef __io_write_fn cookie_write_function_t;
typedef __io_seek_fn cookie_seek_function_t;
typedef __io_close_fn cookie_close_function_t;


typedef struct
{
  __io_read_fn *read;
  __io_write_fn *write;
  __io_seek_fn *seek;
  __io_close_fn *close;
} _IO_cookie_io_functions_t;
typedef _IO_cookie_io_functions_t cookie_io_functions_t;

struct _IO_cookie_file;


extern void _IO_cookie_init (struct _IO_cookie_file *__cfile, int __read_write,
        void *__cookie, _IO_cookie_io_functions_t __fns);







extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 429 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 459 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 75 "/usr/include/stdio.h" 2 3 4




typedef __gnuc_va_list va_list;
# 110 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;





typedef _G_fpos64_t fpos64_t;
# 166 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 167 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));




extern int renameat (int __oldfd, const char *__old, int __newfd,
       const char *__new) __attribute__ ((__nothrow__ , __leaf__));








extern FILE *tmpfile (void) __attribute__ ((__warn_unused_result__));
# 207 "/usr/include/stdio.h" 3 4
extern FILE *tmpfile64 (void) __attribute__ ((__warn_unused_result__));



extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));





extern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
# 229 "/usr/include/stdio.h" 3 4
extern char *tempnam (const char *__dir, const char *__pfx)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));








extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 254 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 264 "/usr/include/stdio.h" 3 4
extern int fcloseall (void);









extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) __attribute__ ((__warn_unused_result__));




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
# 297 "/usr/include/stdio.h" 3 4


extern FILE *fopen64 (const char *__restrict __filename,
        const char *__restrict __modes) __attribute__ ((__warn_unused_result__));
extern FILE *freopen64 (const char *__restrict __filename,
   const char *__restrict __modes,
   FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));




extern FILE *fdopen (int __fd, const char *__modes) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));





extern FILE *fopencookie (void *__restrict __magic_cookie,
     const char *__restrict __modes,
     _IO_cookie_io_functions_t __io_funcs) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));






extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));





extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) __attribute__ ((__nothrow__ , __leaf__));


extern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));








extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));






extern int vasprintf (char **__restrict __ptr, const char *__restrict __f,
        __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 0))) __attribute__ ((__warn_unused_result__));
extern int __asprintf (char **__restrict __ptr,
         const char *__restrict __fmt, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3))) __attribute__ ((__warn_unused_result__));
extern int asprintf (char **__restrict __ptr,
       const char *__restrict __fmt, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3))) __attribute__ ((__warn_unused_result__));




extern int vdprintf (int __fd, const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));








extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) __attribute__ ((__warn_unused_result__));




extern int scanf (const char *__restrict __format, ...) __attribute__ ((__warn_unused_result__));

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 465 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) __attribute__ ((__warn_unused_result__));





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) __attribute__ ((__warn_unused_result__));


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 524 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 552 "/usr/include/stdio.h" 3 4
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 563 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);











extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 596 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);








extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     __attribute__ ((__warn_unused_result__));
# 642 "/usr/include/stdio.h" 3 4

# 651 "/usr/include/stdio.h" 3 4
extern char *fgets_unlocked (char *__restrict __s, int __n,
        FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
# 667 "/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
          size_t *__restrict __n, int __delimiter,
          FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern __ssize_t getdelim (char **__restrict __lineptr,
        size_t *__restrict __n, int __delimiter,
        FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));







extern __ssize_t getline (char **__restrict __lineptr,
       size_t *__restrict __n,
       FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));








extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 728 "/usr/include/stdio.h" 3 4
extern int fputs_unlocked (const char *__restrict __s,
      FILE *__restrict __stream);
# 739 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);








extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) __attribute__ ((__warn_unused_result__));




extern void rewind (FILE *__stream);

# 775 "/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off_t __off, int __whence);




extern __off_t ftello (FILE *__stream) __attribute__ ((__warn_unused_result__));
# 794 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 817 "/usr/include/stdio.h" 3 4



extern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);
extern __off64_t ftello64 (FILE *__stream) __attribute__ ((__warn_unused_result__));
extern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);
extern int fsetpos64 (FILE *__stream, const fpos64_t *__pos);




extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
extern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));








extern void perror (const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 26 "/usr/include/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern const char *const sys_errlist[];


extern int _sys_nerr;
extern const char *const _sys_errlist[];
# 856 "/usr/include/stdio.h" 2 3 4




extern int fileno (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
# 874 "/usr/include/stdio.h" 3 4
extern FILE *popen (const char *__command, const char *__modes) __attribute__ ((__warn_unused_result__));





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) __attribute__ ((__nothrow__ , __leaf__));





extern char *cuserid (char *__s);




struct obstack;


extern int obstack_printf (struct obstack *__restrict __obstack,
      const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3)));
extern int obstack_vprintf (struct obstack *__restrict __obstack,
       const char *__restrict __format,
       __gnuc_va_list __args)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 0)));







extern void flockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));



extern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));


extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
# 935 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio.h" 1 3 4
# 43 "/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return _IO_getc (stdin);
}




extern __inline __attribute__ ((__gnu_inline__)) int
fgetc_unlocked (FILE *__fp)
{
  return (__builtin_expect (((__fp)->_IO_read_ptr >= (__fp)->_IO_read_end), 0) ? __uflow (__fp) : *(unsigned char *) (__fp)->_IO_read_ptr++);
}





extern __inline __attribute__ ((__gnu_inline__)) int
getc_unlocked (FILE *__fp)
{
  return (__builtin_expect (((__fp)->_IO_read_ptr >= (__fp)->_IO_read_end), 0) ? __uflow (__fp) : *(unsigned char *) (__fp)->_IO_read_ptr++);
}


extern __inline __attribute__ ((__gnu_inline__)) int
getchar_unlocked (void)
{
  return (__builtin_expect (((stdin)->_IO_read_ptr >= (stdin)->_IO_read_end), 0) ? __uflow (stdin) : *(unsigned char *) (stdin)->_IO_read_ptr++);
}




extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return _IO_putc (__c, stdout);
}




extern __inline __attribute__ ((__gnu_inline__)) int
fputc_unlocked (int __c, FILE *__stream)
{
  return (__builtin_expect (((__stream)->_IO_write_ptr >= (__stream)->_IO_write_end), 0) ? __overflow (__stream, (unsigned char) (__c)) : (unsigned char) (*(__stream)->_IO_write_ptr++ = (__c)));
}





extern __inline __attribute__ ((__gnu_inline__)) int
putc_unlocked (int __c, FILE *__stream)
{
  return (__builtin_expect (((__stream)->_IO_write_ptr >= (__stream)->_IO_write_end), 0) ? __overflow (__stream, (unsigned char) (__c)) : (unsigned char) (*(__stream)->_IO_write_ptr++ = (__c)));
}


extern __inline __attribute__ ((__gnu_inline__)) int
putchar_unlocked (int __c)
{
  return (__builtin_expect (((stdout)->_IO_write_ptr >= (stdout)->_IO_write_end), 0) ? __overflow (stdout, (unsigned char) (__c)) : (unsigned char) (*(stdout)->_IO_write_ptr++ = (__c)));
}





extern __inline __attribute__ ((__gnu_inline__)) __ssize_t
getline (char **__lineptr, size_t *__n, FILE *__stream)
{
  return __getdelim (__lineptr, __n, '\n', __stream);
}





extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) feof_unlocked (FILE *__stream)
{
  return (((__stream)->_flags & 0x10) != 0);
}


extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) ferror_unlocked (FILE *__stream)
{
  return (((__stream)->_flags & 0x20) != 0);
}
# 936 "/usr/include/stdio.h" 2 3 4


# 1 "/usr/include/bits/stdio2.h" 1 3 4
# 23 "/usr/include/bits/stdio2.h" 3 4
extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
      const char *__restrict __format,
      __gnuc_va_list __ap) __attribute__ ((__nothrow__ , __leaf__));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) sprintf (char *__restrict __s, const char *__restrict __fmt, ...)
{
  return __builtin___sprintf_chk (__s, 2 - 1,
      __builtin_object_size (__s, 2 > 1), __fmt, __builtin_va_arg_pack ());
}






extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) vsprintf (char *__restrict __s, const char *__restrict __fmt, __gnuc_va_list __ap)

{
  return __builtin___vsprintf_chk (__s, 2 - 1,
       __builtin_object_size (__s, 2 > 1), __fmt, __ap);
}



extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
      size_t __slen, const char *__restrict __format,
      ...) __attribute__ ((__nothrow__ , __leaf__));
extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
       size_t __slen, const char *__restrict __format,
       __gnuc_va_list __ap) __attribute__ ((__nothrow__ , __leaf__));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) snprintf (char *__restrict __s, size_t __n, const char *__restrict __fmt, ...)

{
  return __builtin___snprintf_chk (__s, __n, 2 - 1,
       __builtin_object_size (__s, 2 > 1), __fmt, __builtin_va_arg_pack ());
}






extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) vsnprintf (char *__restrict __s, size_t __n, const char *__restrict __fmt, __gnuc_va_list __ap)

{
  return __builtin___vsnprintf_chk (__s, __n, 2 - 1,
        __builtin_object_size (__s, 2 > 1), __fmt, __ap);
}





extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
     const char *__restrict __format, ...);
extern int __printf_chk (int __flag, const char *__restrict __format, ...);
extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
      const char *__restrict __format, __gnuc_va_list __ap);
extern int __vprintf_chk (int __flag, const char *__restrict __format,
     __gnuc_va_list __ap);


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
{
  return __fprintf_chk (__stream, 2 - 1, __fmt,
   __builtin_va_arg_pack ());
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
printf (const char *__restrict __fmt, ...)
{
  return __printf_chk (2 - 1, __fmt, __builtin_va_arg_pack ());
}







extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __ap)
{

  return __vfprintf_chk (stdout, 2 - 1, __fmt, __ap);



}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
vfprintf (FILE *__restrict __stream,
   const char *__restrict __fmt, __gnuc_va_list __ap)
{
  return __vfprintf_chk (__stream, 2 - 1, __fmt, __ap);
}


extern int __dprintf_chk (int __fd, int __flag, const char *__restrict __fmt,
     ...) __attribute__ ((__format__ (__printf__, 3, 4)));
extern int __vdprintf_chk (int __fd, int __flag,
      const char *__restrict __fmt, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 3, 0)));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
dprintf (int __fd, const char *__restrict __fmt, ...)
{
  return __dprintf_chk (__fd, 2 - 1, __fmt,
   __builtin_va_arg_pack ());
}





extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
vdprintf (int __fd, const char *__restrict __fmt, __gnuc_va_list __ap)
{
  return __vdprintf_chk (__fd, 2 - 1, __fmt, __ap);
}




extern int __asprintf_chk (char **__restrict __ptr, int __flag,
      const char *__restrict __fmt, ...)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__printf__, 3, 4))) __attribute__ ((__warn_unused_result__));
extern int __vasprintf_chk (char **__restrict __ptr, int __flag,
       const char *__restrict __fmt, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__printf__, 3, 0))) __attribute__ ((__warn_unused_result__));
extern int __obstack_printf_chk (struct obstack *__restrict __obstack,
     int __flag, const char *__restrict __format,
     ...)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__printf__, 3, 4)));
extern int __obstack_vprintf_chk (struct obstack *__restrict __obstack,
      int __flag,
      const char *__restrict __format,
      __gnuc_va_list __args)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__printf__, 3, 0)));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) asprintf (char **__restrict __ptr, const char *__restrict __fmt, ...)
{
  return __asprintf_chk (__ptr, 2 - 1, __fmt,
    __builtin_va_arg_pack ());
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) __asprintf (char **__restrict __ptr, const char *__restrict __fmt, ...)

{
  return __asprintf_chk (__ptr, 2 - 1, __fmt,
    __builtin_va_arg_pack ());
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) obstack_printf (struct obstack *__restrict __obstack, const char *__restrict __fmt, ...)

{
  return __obstack_printf_chk (__obstack, 2 - 1, __fmt,
          __builtin_va_arg_pack ());
}
# 206 "/usr/include/bits/stdio2.h" 3 4
extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) vasprintf (char **__restrict __ptr, const char *__restrict __fmt, __gnuc_va_list __ap)

{
  return __vasprintf_chk (__ptr, 2 - 1, __fmt, __ap);
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) obstack_vprintf (struct obstack *__restrict __obstack, const char *__restrict __fmt, __gnuc_va_list __ap)

{
  return __obstack_vprintf_chk (__obstack, 2 - 1, __fmt,
    __ap);
}
# 241 "/usr/include/bits/stdio2.h" 3 4
extern char *__fgets_chk (char *__restrict __s, size_t __size, int __n,
     FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern char *__fgets_alias (char *__restrict __s, int __n, FILE *__restrict __stream) __asm__ ("" "fgets")

                                        __attribute__ ((__warn_unused_result__));
extern char *__fgets_chk_warn (char *__restrict __s, size_t __size, int __n, FILE *__restrict __stream) __asm__ ("" "__fgets_chk")


     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("fgets called with bigger size than length " "of destination buffer")))
                                 ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) char *
fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
{
  if (__builtin_object_size (__s, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__n) || __n <= 0)
 return __fgets_chk (__s, __builtin_object_size (__s, 2 > 1), __n, __stream);

      if ((size_t) __n > __builtin_object_size (__s, 2 > 1))
 return __fgets_chk_warn (__s, __builtin_object_size (__s, 2 > 1), __n, __stream);
    }
  return __fgets_alias (__s, __n, __stream);
}

extern size_t __fread_chk (void *__restrict __ptr, size_t __ptrlen,
      size_t __size, size_t __n,
      FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern size_t __fread_alias (void *__restrict __ptr, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "fread")


            __attribute__ ((__warn_unused_result__));
extern size_t __fread_chk_warn (void *__restrict __ptr, size_t __ptrlen, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "__fread_chk")




     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("fread called with bigger size * nmemb than length " "of destination buffer")))
                                 ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) size_t
fread (void *__restrict __ptr, size_t __size, size_t __n,
       FILE *__restrict __stream)
{
  if (__builtin_object_size (__ptr, 0) != (size_t) -1)
    {
      if (!__builtin_constant_p (__size)
   || !__builtin_constant_p (__n)
   || (__size | __n) >= (((size_t) 1) << (8 * sizeof (size_t) / 2)))
 return __fread_chk (__ptr, __builtin_object_size (__ptr, 0), __size, __n, __stream);

      if (__size * __n > __builtin_object_size (__ptr, 0))
 return __fread_chk_warn (__ptr, __builtin_object_size (__ptr, 0), __size, __n, __stream);
    }
  return __fread_alias (__ptr, __size, __n, __stream);
}


extern char *__fgets_unlocked_chk (char *__restrict __s, size_t __size,
       int __n, FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern char *__fgets_unlocked_alias (char *__restrict __s, int __n, FILE *__restrict __stream) __asm__ ("" "fgets_unlocked")

                                                 __attribute__ ((__warn_unused_result__));
extern char *__fgets_unlocked_chk_warn (char *__restrict __s, size_t __size, int __n, FILE *__restrict __stream) __asm__ ("" "__fgets_unlocked_chk")


     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("fgets_unlocked called with bigger size than length " "of destination buffer")))
                                 ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) char *
fgets_unlocked (char *__restrict __s, int __n, FILE *__restrict __stream)
{
  if (__builtin_object_size (__s, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__n) || __n <= 0)
 return __fgets_unlocked_chk (__s, __builtin_object_size (__s, 2 > 1), __n, __stream);

      if ((size_t) __n > __builtin_object_size (__s, 2 > 1))
 return __fgets_unlocked_chk_warn (__s, __builtin_object_size (__s, 2 > 1), __n, __stream);
    }
  return __fgets_unlocked_alias (__s, __n, __stream);
}




extern size_t __fread_unlocked_chk (void *__restrict __ptr, size_t __ptrlen,
        size_t __size, size_t __n,
        FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern size_t __fread_unlocked_alias (void *__restrict __ptr, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "fread_unlocked")


                     __attribute__ ((__warn_unused_result__));
extern size_t __fread_unlocked_chk_warn (void *__restrict __ptr, size_t __ptrlen, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "__fread_unlocked_chk")




     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("fread_unlocked called with bigger size * nmemb than " "length of destination buffer")))
                                        ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) size_t
fread_unlocked (void *__restrict __ptr, size_t __size, size_t __n,
  FILE *__restrict __stream)
{
  if (__builtin_object_size (__ptr, 0) != (size_t) -1)
    {
      if (!__builtin_constant_p (__size)
   || !__builtin_constant_p (__n)
   || (__size | __n) >= (((size_t) 1) << (8 * sizeof (size_t) / 2)))
 return __fread_unlocked_chk (__ptr, __builtin_object_size (__ptr, 0), __size, __n,
         __stream);

      if (__size * __n > __builtin_object_size (__ptr, 0))
 return __fread_unlocked_chk_warn (__ptr, __builtin_object_size (__ptr, 0), __size, __n,
       __stream);
    }


  if (__builtin_constant_p (__size)
      && __builtin_constant_p (__n)
      && (__size | __n) < (((size_t) 1) << (8 * sizeof (size_t) / 2))
      && __size * __n <= 8)
    {
      size_t __cnt = __size * __n;
      char *__cptr = (char *) __ptr;
      if (__cnt == 0)
 return 0;

      for (; __cnt > 0; --__cnt)
 {
   int __c = (__builtin_expect (((__stream)->_IO_read_ptr >= (__stream)->_IO_read_end), 0) ? __uflow (__stream) : *(unsigned char *) (__stream)->_IO_read_ptr++);
   if (__c == 
# 373 "/usr/include/bits/stdio2.h"
             (-1)
# 373 "/usr/include/bits/stdio2.h" 3 4
                )
     break;
   *__cptr++ = __c;
 }
      return (__cptr - (char *) __ptr) / __size;
    }

  return __fread_unlocked_alias (__ptr, __size, __n, __stream);
}
# 939 "/usr/include/stdio.h" 2 3 4






# 49 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm5.h" 1
# 50 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/mt_ss.h" 1
# 51 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h" 2

# 1 "/usr/include/string.h" 1 3 4
# 27 "/usr/include/string.h" 3 4





# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 33 "/usr/include/string.h" 2 3 4









extern void *memcpy (void *__restrict __dest, const void *__restrict __src,
       size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern void *memmove (void *__dest, const void *__src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));






extern void *memccpy (void *__restrict __dest, const void *__restrict __src,
        int __c, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int memcmp (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 92 "/usr/include/string.h" 3 4
extern void *memchr (const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


# 106 "/usr/include/string.h" 3 4
extern void *rawmemchr (const void *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 117 "/usr/include/string.h" 3 4
extern void *memrchr (const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));






extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strcat (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncat (char *__restrict __dest, const char *__restrict __src,
        size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern int strncmp (const char *__s1, const char *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcoll (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern size_t strxfrm (char *__restrict __dest,
         const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

# 162 "/usr/include/string.h" 3 4
extern int strcoll_l (const char *__s1, const char *__s2, __locale_t __l)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));

extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
    __locale_t __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));




extern char *strdup (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));






extern char *strndup (const char *__string, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));
# 206 "/usr/include/string.h" 3 4

# 231 "/usr/include/string.h" 3 4
extern char *strchr (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 258 "/usr/include/string.h" 3 4
extern char *strrchr (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


# 272 "/usr/include/string.h" 3 4
extern char *strchrnul (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));






extern size_t strcspn (const char *__s, const char *__reject)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern size_t strspn (const char *__s, const char *__accept)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 310 "/usr/include/string.h" 3 4
extern char *strpbrk (const char *__s, const char *__accept)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 337 "/usr/include/string.h" 3 4
extern char *strstr (const char *__haystack, const char *__needle)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strtok (char *__restrict __s, const char *__restrict __delim)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));




extern char *__strtok_r (char *__restrict __s,
    const char *__restrict __delim,
    char **__restrict __save_ptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, const char *__restrict __delim,
         char **__restrict __save_ptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
# 368 "/usr/include/string.h" 3 4
extern char *strcasestr (const char *__haystack, const char *__needle)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));







extern void *memmem (const void *__haystack, size_t __haystacklen,
       const void *__needle, size_t __needlelen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 3)));



extern void *__mempcpy (void *__restrict __dest,
   const void *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern void *mempcpy (void *__restrict __dest,
        const void *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern size_t strlen (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern size_t strnlen (const char *__string, size_t __maxlen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern char *strerror (int __errnum) __attribute__ ((__nothrow__ , __leaf__));

# 433 "/usr/include/string.h" 3 4
extern char *strerror_r (int __errnum, char *__buf, size_t __buflen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2))) __attribute__ ((__warn_unused_result__));





extern char *strerror_l (int __errnum, __locale_t __l) __attribute__ ((__nothrow__ , __leaf__));





extern void __bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern void bcopy (const void *__src, void *__dest, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern void bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int bcmp (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 484 "/usr/include/string.h" 3 4
extern char *index (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 512 "/usr/include/string.h" 3 4
extern char *rindex (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




extern int ffs (int __i) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




extern int ffsl (long int __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__ extern int ffsll (long long int __ll)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern int strcasecmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));





extern int strcasecmp_l (const char *__s1, const char *__s2,
    __locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));

extern int strncasecmp_l (const char *__s1, const char *__s2,
     size_t __n, __locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 4)));





extern char *strsep (char **__restrict __stringp,
       const char *__restrict __delim)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strsignal (int __sig) __attribute__ ((__nothrow__ , __leaf__));


extern char *__stpcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern char *__stpncpy (char *__restrict __dest,
   const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int strverscmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strfry (char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern void *memfrob (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 599 "/usr/include/string.h" 3 4
extern char *basename (const char *__filename) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 627 "/usr/include/string.h" 3 4
# 1 "/usr/include/bits/string.h" 1 3 4
# 628 "/usr/include/string.h" 2 3 4


# 1 "/usr/include/bits/string2.h" 1 3 4
# 62 "/usr/include/bits/string2.h" 3 4
extern void *__rawmemchr (const void *__s, int __c);
# 193 "/usr/include/bits/string2.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) char *__strtok_r_1c (char *__s, char __sep, char **__nextp);
extern __inline __attribute__ ((__gnu_inline__)) char *
__strtok_r_1c (char *__s, char __sep, char **__nextp)
{
  char *__result;
  if (__s == ((void *)0))
    __s = *__nextp;
  while (*__s == __sep)
    ++__s;
  __result = ((void *)0);
  if (*__s != '\0')
    {
      __result = __s++;
      while (*__s != '\0')
 if (*__s++ == __sep)
   {
     __s[-1] = '\0';
     break;
   }
    }
  *__nextp = __s;
  return __result;
}
# 225 "/usr/include/bits/string2.h" 3 4
extern char *__strsep_g (char **__stringp, const char *__delim);
# 243 "/usr/include/bits/string2.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) char *__strsep_1c (char **__s, char __reject);
extern __inline __attribute__ ((__gnu_inline__)) char *
__strsep_1c (char **__s, char __reject)
{
  char *__retval = *__s;
  if (__retval != ((void *)0) && (*__s = (__extension__ (__builtin_constant_p (__reject) && !__builtin_constant_p (__retval) && (__reject) == '\0' ? (char *) __rawmemchr (__retval, __reject) : __builtin_strchr (__retval, __reject)))) != ((void *)0))
    *(*__s)++ = '\0';
  return __retval;
}

extern __inline __attribute__ ((__gnu_inline__)) char *__strsep_2c (char **__s, char __reject1, char __reject2);
extern __inline __attribute__ ((__gnu_inline__)) char *
__strsep_2c (char **__s, char __reject1, char __reject2)
{
  char *__retval = *__s;
  if (__retval != ((void *)0))
    {
      char *__cp = __retval;
      while (1)
 {
   if (*__cp == '\0')
     {
       __cp = ((void *)0);
   break;
     }
   if (*__cp == __reject1 || *__cp == __reject2)
     {
       *__cp++ = '\0';
       break;
     }
   ++__cp;
 }
      *__s = __cp;
    }
  return __retval;
}

extern __inline __attribute__ ((__gnu_inline__)) char *__strsep_3c (char **__s, char __reject1, char __reject2,
       char __reject3);
extern __inline __attribute__ ((__gnu_inline__)) char *
__strsep_3c (char **__s, char __reject1, char __reject2, char __reject3)
{
  char *__retval = *__s;
  if (__retval != ((void *)0))
    {
      char *__cp = __retval;
      while (1)
 {
   if (*__cp == '\0')
     {
       __cp = ((void *)0);
   break;
     }
   if (*__cp == __reject1 || *__cp == __reject2 || *__cp == __reject3)
     {
       *__cp++ = '\0';
       break;
     }
   ++__cp;
 }
      *__s = __cp;
    }
  return __retval;
}
# 319 "/usr/include/bits/string2.h" 3 4
# 1 "/usr/include/stdlib.h" 1 3 4
# 32 "/usr/include/stdlib.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 33 "/usr/include/stdlib.h" 2 3 4


# 425 "/usr/include/stdlib.h" 3 4


extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));

# 934 "/usr/include/stdlib.h" 3 4

# 320 "/usr/include/bits/string2.h" 2 3 4




extern char *__strdup (const char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__));
# 343 "/usr/include/bits/string2.h" 3 4
extern char *__strndup (const char *__string, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__));
# 631 "/usr/include/string.h" 2 3 4




# 1 "/usr/include/bits/string3.h" 1 3 4
# 49 "/usr/include/bits/string3.h" 3 4
extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
__attribute__ ((__nothrow__ , __leaf__)) memcpy (void *__restrict __dest, const void *__restrict __src, size_t __len)

{
  return __builtin___memcpy_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
__attribute__ ((__nothrow__ , __leaf__)) memmove (void *__dest, const void *__src, size_t __len)
{
  return __builtin___memmove_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
__attribute__ ((__nothrow__ , __leaf__)) mempcpy (void *__restrict __dest, const void *__restrict __src, size_t __len)

{
  return __builtin___mempcpy_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
}
# 77 "/usr/include/bits/string3.h" 3 4
extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
__attribute__ ((__nothrow__ , __leaf__)) memset (void *__dest, int __ch, size_t __len)
{
# 90 "/usr/include/bits/string3.h" 3 4
  return __builtin___memset_chk (__dest, __ch, __len, __builtin_object_size (__dest, 0));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void
__attribute__ ((__nothrow__ , __leaf__)) bcopy (const void *__src, void *__dest, size_t __len)
{
  (void) __builtin___memmove_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void
__attribute__ ((__nothrow__ , __leaf__)) bzero (void *__dest, size_t __len)
{
  (void) __builtin___memset_chk (__dest, '\0', __len, __builtin_object_size (__dest, 0));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strcpy (char *__restrict __dest, const char *__restrict __src)
{
  return __builtin___strcpy_chk (__dest, __src, __builtin_object_size (__dest, 2 > 1));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) stpcpy (char *__restrict __dest, const char *__restrict __src)
{
  return __builtin___stpcpy_chk (__dest, __src, __builtin_object_size (__dest, 2 > 1));
}



extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strncpy (char *__restrict __dest, const char *__restrict __src, size_t __len)

{
  return __builtin___strncpy_chk (__dest, __src, __len, __builtin_object_size (__dest, 2 > 1));
}


extern char *__stpncpy_chk (char *__dest, const char *__src, size_t __n,
       size_t __destlen) __attribute__ ((__nothrow__ , __leaf__));
extern char *__stpncpy_alias (char *__dest, const char *__src, size_t __n) __asm__ ("" "stpncpy") __attribute__ ((__nothrow__ , __leaf__))
                                 ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) stpncpy (char *__dest, const char *__src, size_t __n)
{
  if (__builtin_object_size (__dest, 2 > 1) != (size_t) -1
      && (!__builtin_constant_p (__n) || __n > __builtin_object_size (__dest, 2 > 1)))
    return __stpncpy_chk (__dest, __src, __n, __builtin_object_size (__dest, 2 > 1));
  return __stpncpy_alias (__dest, __src, __n);
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strcat (char *__restrict __dest, const char *__restrict __src)
{
  return __builtin___strcat_chk (__dest, __src, __builtin_object_size (__dest, 2 > 1));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strncat (char *__restrict __dest, const char *__restrict __src, size_t __len)

{
  return __builtin___strncat_chk (__dest, __src, __len, __builtin_object_size (__dest, 2 > 1));
}
# 636 "/usr/include/string.h" 2 3 4
# 656 "/usr/include/string.h" 3 4

# 53 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h" 2

# 1 "/usr/include/sys/socket.h" 1 3 4
# 24 "/usr/include/sys/socket.h" 3 4


# 1 "/usr/include/sys/uio.h" 1 3 4
# 25 "/usr/include/sys/uio.h" 3 4



# 1 "/usr/include/bits/uio.h" 1 3 4
# 43 "/usr/include/bits/uio.h" 3 4
struct iovec
  {
    void *iov_base;
    size_t iov_len;
  };
# 56 "/usr/include/bits/uio.h" 3 4



extern ssize_t process_vm_readv (pid_t __pid, const struct iovec *__lvec,
     unsigned long int __liovcnt,
     const struct iovec *__rvec,
     unsigned long int __riovcnt,
     unsigned long int __flags)
  __attribute__ ((__nothrow__ , __leaf__));


extern ssize_t process_vm_writev (pid_t __pid, const struct iovec *__lvec,
      unsigned long int __liovcnt,
      const struct iovec *__rvec,
      unsigned long int __riovcnt,
      unsigned long int __flags)
  __attribute__ ((__nothrow__ , __leaf__));


# 29 "/usr/include/sys/uio.h" 2 3 4
# 39 "/usr/include/sys/uio.h" 3 4
extern ssize_t readv (int __fd, const struct iovec *__iovec, int __count)
  __attribute__ ((__warn_unused_result__));
# 50 "/usr/include/sys/uio.h" 3 4
extern ssize_t writev (int __fd, const struct iovec *__iovec, int __count)
  __attribute__ ((__warn_unused_result__));
# 65 "/usr/include/sys/uio.h" 3 4
extern ssize_t preadv (int __fd, const struct iovec *__iovec, int __count,
         __off_t __offset) __attribute__ ((__warn_unused_result__));
# 77 "/usr/include/sys/uio.h" 3 4
extern ssize_t pwritev (int __fd, const struct iovec *__iovec, int __count,
   __off_t __offset) __attribute__ ((__warn_unused_result__));
# 103 "/usr/include/sys/uio.h" 3 4
extern ssize_t preadv64 (int __fd, const struct iovec *__iovec, int __count,
    __off64_t __offset) __attribute__ ((__warn_unused_result__));
# 115 "/usr/include/sys/uio.h" 3 4
extern ssize_t pwritev64 (int __fd, const struct iovec *__iovec, int __count,
     __off64_t __offset) __attribute__ ((__warn_unused_result__));




# 27 "/usr/include/sys/socket.h" 2 3 4

# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 29 "/usr/include/sys/socket.h" 2 3 4


# 1 "/usr/include/bits/sigset.h" 1 3 4
# 32 "/usr/include/sys/socket.h" 2 3 4






# 1 "/usr/include/bits/socket.h" 1 3 4
# 27 "/usr/include/bits/socket.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 28 "/usr/include/bits/socket.h" 2 3 4





typedef __socklen_t socklen_t;




# 1 "/usr/include/bits/socket_type.h" 1 3 4
# 24 "/usr/include/bits/socket_type.h" 3 4
enum __socket_type
{
  SOCK_STREAM = 1,


  SOCK_DGRAM = 2,


  SOCK_RAW = 3,

  SOCK_RDM = 4,

  SOCK_SEQPACKET = 5,


  SOCK_DCCP = 6,

  SOCK_PACKET = 10,







  SOCK_CLOEXEC = 02000000,


  SOCK_NONBLOCK = 00004000


};
# 39 "/usr/include/bits/socket.h" 2 3 4
# 167 "/usr/include/bits/socket.h" 3 4
# 1 "/usr/include/bits/sockaddr.h" 1 3 4
# 28 "/usr/include/bits/sockaddr.h" 3 4
typedef unsigned short int sa_family_t;
# 168 "/usr/include/bits/socket.h" 2 3 4


struct sockaddr
  {
    sa_family_t sa_family;
    char sa_data[14];
  };
# 183 "/usr/include/bits/socket.h" 3 4
struct sockaddr_storage
  {
    sa_family_t ss_family;
    char __ss_padding[(128 - (sizeof (unsigned short int)) - sizeof (unsigned long int))];
    unsigned long int __ss_align;
  };



enum
  {
    MSG_OOB = 0x01,

    MSG_PEEK = 0x02,

    MSG_DONTROUTE = 0x04,



    MSG_TRYHARD = MSG_DONTROUTE,


    MSG_CTRUNC = 0x08,

    MSG_PROXY = 0x10,

    MSG_TRUNC = 0x20,

    MSG_DONTWAIT = 0x40,

    MSG_EOR = 0x80,

    MSG_WAITALL = 0x100,

    MSG_FIN = 0x200,

    MSG_SYN = 0x400,

    MSG_CONFIRM = 0x800,

    MSG_RST = 0x1000,

    MSG_ERRQUEUE = 0x2000,

    MSG_NOSIGNAL = 0x4000,

    MSG_MORE = 0x8000,

    MSG_WAITFORONE = 0x10000,

    MSG_BATCH = 0x40000,

    MSG_FASTOPEN = 0x20000000,


    MSG_CMSG_CLOEXEC = 0x40000000



  };




struct msghdr
  {
    void *msg_name;
    socklen_t msg_namelen;

    struct iovec *msg_iov;
    size_t msg_iovlen;

    void *msg_control;
    size_t msg_controllen;




    int msg_flags;
  };


struct cmsghdr
  {
    size_t cmsg_len;




    int cmsg_level;
    int cmsg_type;

    __extension__ unsigned char __cmsg_data [];

  };
# 295 "/usr/include/bits/socket.h" 3 4
extern struct cmsghdr *__cmsg_nxthdr (struct msghdr *__mhdr,
          struct cmsghdr *__cmsg) __attribute__ ((__nothrow__ , __leaf__));




extern __inline __attribute__ ((__gnu_inline__)) struct cmsghdr *
__attribute__ ((__nothrow__ , __leaf__)) __cmsg_nxthdr (struct msghdr *__mhdr, struct cmsghdr *__cmsg)
{
  if ((size_t) __cmsg->cmsg_len < sizeof (struct cmsghdr))

    return (struct cmsghdr *) 0;

  __cmsg = (struct cmsghdr *) ((unsigned char *) __cmsg
          + (((__cmsg->cmsg_len) + sizeof (size_t) - 1) & (size_t) ~(sizeof (size_t) - 1)));
  if ((unsigned char *) (__cmsg + 1) > ((unsigned char *) __mhdr->msg_control
     + __mhdr->msg_controllen)
      || ((unsigned char *) __cmsg + (((__cmsg->cmsg_len) + sizeof (size_t) - 1) & (size_t) ~(sizeof (size_t) - 1))
   > ((unsigned char *) __mhdr->msg_control + __mhdr->msg_controllen)))

    return (struct cmsghdr *) 0;
  return __cmsg;
}




enum
  {
    SCM_RIGHTS = 0x01


    , SCM_CREDENTIALS = 0x02


  };



struct ucred
{
  pid_t pid;
  uid_t uid;
  gid_t gid;
};
# 368 "/usr/include/bits/socket.h" 3 4
# 1 "/usr/include/asm/socket.h" 1 3 4
# 1 "/usr/include/asm-generic/socket.h" 1 3 4



# 1 "/usr/include/asm/sockios.h" 1 3 4
# 1 "/usr/include/asm-generic/sockios.h" 1 3 4
# 1 "/usr/include/asm/sockios.h" 2 3 4
# 5 "/usr/include/asm-generic/socket.h" 2 3 4
# 1 "/usr/include/asm/socket.h" 2 3 4
# 369 "/usr/include/bits/socket.h" 2 3 4
# 402 "/usr/include/bits/socket.h" 3 4
struct linger
  {
    int l_onoff;
    int l_linger;
  };
# 39 "/usr/include/sys/socket.h" 2 3 4




struct osockaddr
  {
    unsigned short int sa_family;
    unsigned char sa_data[14];
  };




enum
{
  SHUT_RD = 0,

  SHUT_WR,

  SHUT_RDWR

};
# 90 "/usr/include/sys/socket.h" 3 4
typedef union { struct sockaddr *__restrict __sockaddr__; struct sockaddr_at *__restrict __sockaddr_at__; struct sockaddr_ax25 *__restrict __sockaddr_ax25__; struct sockaddr_dl *__restrict __sockaddr_dl__; struct sockaddr_eon *__restrict __sockaddr_eon__; struct sockaddr_in *__restrict __sockaddr_in__; struct sockaddr_in6 *__restrict __sockaddr_in6__; struct sockaddr_inarp *__restrict __sockaddr_inarp__; struct sockaddr_ipx *__restrict __sockaddr_ipx__; struct sockaddr_iso *__restrict __sockaddr_iso__; struct sockaddr_ns *__restrict __sockaddr_ns__; struct sockaddr_un *__restrict __sockaddr_un__; struct sockaddr_x25 *__restrict __sockaddr_x25__;
       } __SOCKADDR_ARG __attribute__ ((__transparent_union__));


typedef union { const struct sockaddr *__restrict __sockaddr__; const struct sockaddr_at *__restrict __sockaddr_at__; const struct sockaddr_ax25 *__restrict __sockaddr_ax25__; const struct sockaddr_dl *__restrict __sockaddr_dl__; const struct sockaddr_eon *__restrict __sockaddr_eon__; const struct sockaddr_in *__restrict __sockaddr_in__; const struct sockaddr_in6 *__restrict __sockaddr_in6__; const struct sockaddr_inarp *__restrict __sockaddr_inarp__; const struct sockaddr_ipx *__restrict __sockaddr_ipx__; const struct sockaddr_iso *__restrict __sockaddr_iso__; const struct sockaddr_ns *__restrict __sockaddr_ns__; const struct sockaddr_un *__restrict __sockaddr_un__; const struct sockaddr_x25 *__restrict __sockaddr_x25__;
       } __CONST_SOCKADDR_ARG __attribute__ ((__transparent_union__));





struct mmsghdr
  {
    struct msghdr msg_hdr;
    unsigned int msg_len;

  };






extern int socket (int __domain, int __type, int __protocol) __attribute__ ((__nothrow__ , __leaf__));





extern int socketpair (int __domain, int __type, int __protocol,
         int __fds[2]) __attribute__ ((__nothrow__ , __leaf__));


extern int bind (int __fd, __CONST_SOCKADDR_ARG __addr, socklen_t __len)
     __attribute__ ((__nothrow__ , __leaf__));


extern int getsockname (int __fd, __SOCKADDR_ARG __addr,
   socklen_t *__restrict __len) __attribute__ ((__nothrow__ , __leaf__));
# 137 "/usr/include/sys/socket.h" 3 4
extern int connect (int __fd, __CONST_SOCKADDR_ARG __addr, socklen_t __len);



extern int getpeername (int __fd, __SOCKADDR_ARG __addr,
   socklen_t *__restrict __len) __attribute__ ((__nothrow__ , __leaf__));






extern ssize_t send (int __fd, const void *__buf, size_t __n, int __flags);






extern ssize_t recv (int __fd, void *__buf, size_t __n, int __flags);






extern ssize_t sendto (int __fd, const void *__buf, size_t __n,
         int __flags, __CONST_SOCKADDR_ARG __addr,
         socklen_t __addr_len);
# 174 "/usr/include/sys/socket.h" 3 4
extern ssize_t recvfrom (int __fd, void *__restrict __buf, size_t __n,
    int __flags, __SOCKADDR_ARG __addr,
    socklen_t *__restrict __addr_len);







extern ssize_t sendmsg (int __fd, const struct msghdr *__message,
   int __flags);







extern int sendmmsg (int __fd, struct mmsghdr *__vmessages,
       unsigned int __vlen, int __flags);







extern ssize_t recvmsg (int __fd, struct msghdr *__message, int __flags);







extern int recvmmsg (int __fd, struct mmsghdr *__vmessages,
       unsigned int __vlen, int __flags,
       struct timespec *__tmo);






extern int getsockopt (int __fd, int __level, int __optname,
         void *__restrict __optval,
         socklen_t *__restrict __optlen) __attribute__ ((__nothrow__ , __leaf__));




extern int setsockopt (int __fd, int __level, int __optname,
         const void *__optval, socklen_t __optlen) __attribute__ ((__nothrow__ , __leaf__));





extern int listen (int __fd, int __n) __attribute__ ((__nothrow__ , __leaf__));
# 243 "/usr/include/sys/socket.h" 3 4
extern int accept (int __fd, __SOCKADDR_ARG __addr,
     socklen_t *__restrict __addr_len);






extern int accept4 (int __fd, __SOCKADDR_ARG __addr,
      socklen_t *__restrict __addr_len, int __flags);
# 261 "/usr/include/sys/socket.h" 3 4
extern int shutdown (int __fd, int __how) __attribute__ ((__nothrow__ , __leaf__));




extern int sockatmark (int __fd) __attribute__ ((__nothrow__ , __leaf__));







extern int isfdtype (int __fd, int __fdtype) __attribute__ ((__nothrow__ , __leaf__));





# 1 "/usr/include/bits/socket2.h" 1 3 4
# 23 "/usr/include/bits/socket2.h" 3 4
extern ssize_t __recv_chk (int __fd, void *__buf, size_t __n, size_t __buflen,
      int __flags);
extern ssize_t __recv_alias (int __fd, void *__buf, size_t __n, int __flags) __asm__ ("" "recv")
                          ;
extern ssize_t __recv_chk_warn (int __fd, void *__buf, size_t __n, size_t __buflen, int __flags) __asm__ ("" "__recv_chk")


     __attribute__((__warning__ ("recv called with bigger length than size of destination " "buffer")))
            ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) ssize_t
recv (int __fd, void *__buf, size_t __n, int __flags)
{
  if (__builtin_object_size (__buf, 0) != (size_t) -1)
    {
      if (!__builtin_constant_p (__n))
 return __recv_chk (__fd, __buf, __n, __builtin_object_size (__buf, 0), __flags);

      if (__n > __builtin_object_size (__buf, 0))
 return __recv_chk_warn (__fd, __buf, __n, __builtin_object_size (__buf, 0), __flags);
    }
  return __recv_alias (__fd, __buf, __n, __flags);
}

extern ssize_t __recvfrom_chk (int __fd, void *__restrict __buf, size_t __n,
          size_t __buflen, int __flags,
          __SOCKADDR_ARG __addr,
          socklen_t *__restrict __addr_len);
extern ssize_t __recvfrom_alias (int __fd, void *__restrict __buf, size_t __n, int __flags, __SOCKADDR_ARG __addr, socklen_t *__restrict __addr_len) __asm__ ("" "recvfrom")


                                                   ;
extern ssize_t __recvfrom_chk_warn (int __fd, void *__restrict __buf, size_t __n, size_t __buflen, int __flags, __SOCKADDR_ARG __addr, socklen_t *__restrict __addr_len) __asm__ ("" "__recvfrom_chk")




     __attribute__((__warning__ ("recvfrom called with bigger length than size of " "destination buffer")))
                        ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) ssize_t
recvfrom (int __fd, void *__restrict __buf, size_t __n, int __flags,
   __SOCKADDR_ARG __addr, socklen_t *__restrict __addr_len)
{
  if (__builtin_object_size (__buf, 0) != (size_t) -1)
    {
      if (!__builtin_constant_p (__n))
 return __recvfrom_chk (__fd, __buf, __n, __builtin_object_size (__buf, 0), __flags,
          __addr, __addr_len);
      if (__n > __builtin_object_size (__buf, 0))
 return __recvfrom_chk_warn (__fd, __buf, __n, __builtin_object_size (__buf, 0), __flags,
        __addr, __addr_len);
    }
  return __recvfrom_alias (__fd, __buf, __n, __flags, __addr, __addr_len);
}
# 281 "/usr/include/sys/socket.h" 2 3 4



# 55 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h" 2
# 1 "/usr/include/netinet/in.h" 1 3 4
# 22 "/usr/include/netinet/in.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stdint.h" 1 3 4
# 9 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stdint.h" 3 4
# 1 "/usr/include/stdint.h" 1 3 4
# 26 "/usr/include/stdint.h" 3 4
# 1 "/usr/include/bits/wchar.h" 1 3 4
# 27 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 28 "/usr/include/stdint.h" 2 3 4
# 48 "/usr/include/stdint.h" 3 4
typedef unsigned char uint8_t;
typedef unsigned short int uint16_t;

typedef unsigned int uint32_t;





__extension__
typedef unsigned long long int uint64_t;






typedef signed char int_least8_t;
typedef short int int_least16_t;
typedef int int_least32_t;



__extension__
typedef long long int int_least64_t;



typedef unsigned char uint_least8_t;
typedef unsigned short int uint_least16_t;
typedef unsigned int uint_least32_t;



__extension__
typedef unsigned long long int uint_least64_t;






typedef signed char int_fast8_t;





typedef int int_fast16_t;
typedef int int_fast32_t;
__extension__
typedef long long int int_fast64_t;



typedef unsigned char uint_fast8_t;





typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
__extension__
typedef unsigned long long int uint_fast64_t;
# 125 "/usr/include/stdint.h" 3 4
typedef int intptr_t;


typedef unsigned int uintptr_t;
# 137 "/usr/include/stdint.h" 3 4
__extension__
typedef long long int intmax_t;
__extension__
typedef unsigned long long int uintmax_t;
# 10 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stdint.h" 2 3 4
# 23 "/usr/include/netinet/in.h" 2 3 4







typedef uint32_t in_addr_t;
struct in_addr
  {
    in_addr_t s_addr;
  };


# 1 "/usr/include/bits/in.h" 1 3 4
# 141 "/usr/include/bits/in.h" 3 4
struct ip_opts
  {
    struct in_addr ip_dst;
    char ip_opts[40];
  };


struct ip_mreqn
  {
    struct in_addr imr_multiaddr;
    struct in_addr imr_address;
    int imr_ifindex;
  };


struct in_pktinfo
  {
    int ipi_ifindex;
    struct in_addr ipi_spec_dst;
    struct in_addr ipi_addr;
  };
# 38 "/usr/include/netinet/in.h" 2 3 4


enum
  {
    IPPROTO_IP = 0,

    IPPROTO_ICMP = 1,

    IPPROTO_IGMP = 2,

    IPPROTO_IPIP = 4,

    IPPROTO_TCP = 6,

    IPPROTO_EGP = 8,

    IPPROTO_PUP = 12,

    IPPROTO_UDP = 17,

    IPPROTO_IDP = 22,

    IPPROTO_TP = 29,

    IPPROTO_DCCP = 33,

    IPPROTO_IPV6 = 41,

    IPPROTO_RSVP = 46,

    IPPROTO_GRE = 47,

    IPPROTO_ESP = 50,

    IPPROTO_AH = 51,

    IPPROTO_MTP = 92,

    IPPROTO_BEETPH = 94,

    IPPROTO_ENCAP = 98,

    IPPROTO_PIM = 103,

    IPPROTO_COMP = 108,

    IPPROTO_SCTP = 132,

    IPPROTO_UDPLITE = 136,

    IPPROTO_MPLS = 137,

    IPPROTO_RAW = 255,

    IPPROTO_MAX
  };





enum
  {
    IPPROTO_HOPOPTS = 0,

    IPPROTO_ROUTING = 43,

    IPPROTO_FRAGMENT = 44,

    IPPROTO_ICMPV6 = 58,

    IPPROTO_NONE = 59,

    IPPROTO_DSTOPTS = 60,

    IPPROTO_MH = 135

  };



typedef uint16_t in_port_t;


enum
  {
    IPPORT_ECHO = 7,
    IPPORT_DISCARD = 9,
    IPPORT_SYSTAT = 11,
    IPPORT_DAYTIME = 13,
    IPPORT_NETSTAT = 15,
    IPPORT_FTP = 21,
    IPPORT_TELNET = 23,
    IPPORT_SMTP = 25,
    IPPORT_TIMESERVER = 37,
    IPPORT_NAMESERVER = 42,
    IPPORT_WHOIS = 43,
    IPPORT_MTP = 57,

    IPPORT_TFTP = 69,
    IPPORT_RJE = 77,
    IPPORT_FINGER = 79,
    IPPORT_TTYLINK = 87,
    IPPORT_SUPDUP = 95,


    IPPORT_EXECSERVER = 512,
    IPPORT_LOGINSERVER = 513,
    IPPORT_CMDSERVER = 514,
    IPPORT_EFSSERVER = 520,


    IPPORT_BIFFUDP = 512,
    IPPORT_WHOSERVER = 513,
    IPPORT_ROUTESERVER = 520,


    IPPORT_RESERVED = 1024,


    IPPORT_USERRESERVED = 5000
  };
# 211 "/usr/include/netinet/in.h" 3 4
struct in6_addr
  {
    union
      {
 uint8_t __u6_addr8[16];

 uint16_t __u6_addr16[8];
 uint32_t __u6_addr32[4];

      } __in6_u;





  };


extern const struct in6_addr in6addr_any;
extern const struct in6_addr in6addr_loopback;
# 239 "/usr/include/netinet/in.h" 3 4
struct sockaddr_in
  {
    sa_family_t sin_family;
    in_port_t sin_port;
    struct in_addr sin_addr;


    unsigned char sin_zero[sizeof (struct sockaddr) -
      (sizeof (unsigned short int)) -
      sizeof (in_port_t) -
      sizeof (struct in_addr)];
  };



struct sockaddr_in6
  {
    sa_family_t sin6_family;
    in_port_t sin6_port;
    uint32_t sin6_flowinfo;
    struct in6_addr sin6_addr;
    uint32_t sin6_scope_id;
  };




struct ip_mreq
  {

    struct in_addr imr_multiaddr;


    struct in_addr imr_interface;
  };

struct ip_mreq_source
  {

    struct in_addr imr_multiaddr;


    struct in_addr imr_interface;


    struct in_addr imr_sourceaddr;
  };




struct ipv6_mreq
  {

    struct in6_addr ipv6mr_multiaddr;


    unsigned int ipv6mr_interface;
  };




struct group_req
  {

    uint32_t gr_interface;


    struct sockaddr_storage gr_group;
  };

struct group_source_req
  {

    uint32_t gsr_interface;


    struct sockaddr_storage gsr_group;


    struct sockaddr_storage gsr_source;
  };



struct ip_msfilter
  {

    struct in_addr imsf_multiaddr;


    struct in_addr imsf_interface;


    uint32_t imsf_fmode;


    uint32_t imsf_numsrc;

    struct in_addr imsf_slist[1];
  };





struct group_filter
  {

    uint32_t gf_interface;


    struct sockaddr_storage gf_group;


    uint32_t gf_fmode;


    uint32_t gf_numsrc;

    struct sockaddr_storage gf_slist[1];
};
# 376 "/usr/include/netinet/in.h" 3 4
extern uint32_t ntohl (uint32_t __netlong) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
extern uint16_t ntohs (uint16_t __netshort)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
extern uint32_t htonl (uint32_t __hostlong)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
extern uint16_t htons (uint16_t __hostshort)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




# 1 "/usr/include/bits/byteswap.h" 1 3 4
# 388 "/usr/include/netinet/in.h" 2 3 4
# 503 "/usr/include/netinet/in.h" 3 4
extern int bindresvport (int __sockfd, struct sockaddr_in *__sock_in) __attribute__ ((__nothrow__ , __leaf__));


extern int bindresvport6 (int __sockfd, struct sockaddr_in6 *__sock_in)
     __attribute__ ((__nothrow__ , __leaf__));
# 533 "/usr/include/netinet/in.h" 3 4
struct cmsghdr;



struct in6_pktinfo
  {
    struct in6_addr ipi6_addr;
    unsigned int ipi6_ifindex;
  };


struct ip6_mtuinfo
  {
    struct sockaddr_in6 ip6m_addr;
    uint32_t ip6m_mtu;
  };



extern int inet6_option_space (int __nbytes)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));
extern int inet6_option_init (void *__bp, struct cmsghdr **__cmsgp,
         int __type) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));
extern int inet6_option_append (struct cmsghdr *__cmsg,
    const uint8_t *__typep, int __multx,
    int __plusy) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));
extern uint8_t *inet6_option_alloc (struct cmsghdr *__cmsg, int __datalen,
        int __multx, int __plusy)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));
extern int inet6_option_next (const struct cmsghdr *__cmsg,
         uint8_t **__tptrp)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));
extern int inet6_option_find (const struct cmsghdr *__cmsg,
         uint8_t **__tptrp, int __type)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));



extern int inet6_opt_init (void *__extbuf, socklen_t __extlen) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_opt_append (void *__extbuf, socklen_t __extlen, int __offset,
        uint8_t __type, socklen_t __len, uint8_t __align,
        void **__databufp) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_opt_finish (void *__extbuf, socklen_t __extlen, int __offset)
     __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_opt_set_val (void *__databuf, int __offset, void *__val,
         socklen_t __vallen) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_opt_next (void *__extbuf, socklen_t __extlen, int __offset,
      uint8_t *__typep, socklen_t *__lenp,
      void **__databufp) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_opt_find (void *__extbuf, socklen_t __extlen, int __offset,
      uint8_t __type, socklen_t *__lenp,
      void **__databufp) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_opt_get_val (void *__databuf, int __offset, void *__val,
         socklen_t __vallen) __attribute__ ((__nothrow__ , __leaf__));



extern socklen_t inet6_rth_space (int __type, int __segments) __attribute__ ((__nothrow__ , __leaf__));
extern void *inet6_rth_init (void *__bp, socklen_t __bp_len, int __type,
        int __segments) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_rth_add (void *__bp, const struct in6_addr *__addr) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_rth_reverse (const void *__in, void *__out) __attribute__ ((__nothrow__ , __leaf__));
extern int inet6_rth_segments (const void *__bp) __attribute__ ((__nothrow__ , __leaf__));
extern struct in6_addr *inet6_rth_getaddr (const void *__bp, int __index)
     __attribute__ ((__nothrow__ , __leaf__));





extern int getipv4sourcefilter (int __s, struct in_addr __interface_addr,
    struct in_addr __group, uint32_t *__fmode,
    uint32_t *__numsrc, struct in_addr *__slist)
     __attribute__ ((__nothrow__ , __leaf__));


extern int setipv4sourcefilter (int __s, struct in_addr __interface_addr,
    struct in_addr __group, uint32_t __fmode,
    uint32_t __numsrc,
    const struct in_addr *__slist)
     __attribute__ ((__nothrow__ , __leaf__));



extern int getsourcefilter (int __s, uint32_t __interface_addr,
       const struct sockaddr *__group,
       socklen_t __grouplen, uint32_t *__fmode,
       uint32_t *__numsrc,
       struct sockaddr_storage *__slist) __attribute__ ((__nothrow__ , __leaf__));


extern int setsourcefilter (int __s, uint32_t __interface_addr,
       const struct sockaddr *__group,
       socklen_t __grouplen, uint32_t __fmode,
       uint32_t __numsrc,
       const struct sockaddr_storage *__slist) __attribute__ ((__nothrow__ , __leaf__));



# 56 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.h" 2
# 1919 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.h" 2
# 31 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2

# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_hash.h" 1
# 33 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_tkns.h" 1
# 34 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.h" 1
# 35 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_mblk.h" 1
# 36 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_llist.h" 1
# 37 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lte.h" 1
# 38 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ckw.h" 1
# 39 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/kwu.h" 1
# 40 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/crg.h" 1
# 41 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.h" 1
# 42 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.h" 1
# 43 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.h" 1
# 33 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.h"
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu_asn.h" 1
# 34 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.h" 2
# 44 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh.h" 1
# 39 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh.h"
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/rlog/rl_interface.h" 1
# 23 "/home/mrehwald/Desktop/Radisys/lte_enb/src/rlog/rl_interface.h"
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/rlog/rl_common.h" 1
# 27 "/home/mrehwald/Desktop/Radisys/lte_enb/src/rlog/rl_common.h"

# 27 "/home/mrehwald/Desktop/Radisys/lte_enb/src/rlog/rl_common.h"
typedef enum {
 L_ALWAYS=0,
 L_FATAL,
 L_ERROR,
 L_WARNING,
 L_EVENT,
 L_INFO,
 L_DEBUG,
 L_UNUSED,
 L_MAX_LOG_LEVEL
} R_LOG_LEVEL;

typedef enum {
 DBG_CELLID,
   DBG_PEERID,
   DBG_ENBID,
  DBG_MMEID,
  DBG_CRNTI,
   DBG_UEIDX,
  DBG_UEID,
  DBG_RBID,
  DBG_LCID,
  DBG_LCGID,
 DBG_TRNSID,
   DBG_INSTID,
 DBG_MAX_IDs
} R_SPL_ARG;
# 64 "/home/mrehwald/Desktop/Radisys/lte_enb/src/rlog/rl_common.h"
typedef const char* PSTR;


typedef U32 LOGID;
# 83 "/home/mrehwald/Desktop/Radisys/lte_enb/src/rlog/rl_common.h"
void logLevH( LOGID logId, R_LOG_LEVEL logLevel, PSTR hex, int hexlen, ...);
void logLev0( LOGID logId, R_LOG_LEVEL logLevel, ...);
void logLev1( LOGID logId, R_LOG_LEVEL logLevel, U32 arg1, ...);
void logLev2( LOGID logId, R_LOG_LEVEL logLevel, U32 arg1, U32 arg2, ...);
void logLev3( LOGID logId, R_LOG_LEVEL logLevel, U32 arg1, U32 arg2, U32 arg3, ...);
void logLev4( LOGID logId, R_LOG_LEVEL logLevel, U32 arg1, U32 arg2, U32 arg3, U32 arg4, ...);
void logLevE(LOGID logId, R_LOG_LEVEL logLevel, R_SPL_ARG splType, U32 splVal,
U32 arg1, U32 arg2, U32 arg3, U32 arg4, ...);
void logLevS( LOGID logId, R_LOG_LEVEL logLevel, const char* str, ...);


void hextostr(char* p, PSTR h, int hexlen);

extern int g_logLevel;
extern U32 g_modMask;
extern const char* g_logStr[L_MAX_LOG_LEVEL];
extern const char* g_splStr[DBG_MAX_IDs];
# 24 "/home/mrehwald/Desktop/Radisys/lte_enb/src/rlog/rl_interface.h" 2




void rlSetLogPath(const char* logDir);





void rlInitLog(U8 type);







void rlSetLogFile(const char* fileName);





void rlSetLogPort(U32 port);




void rlSetLogLevel(R_LOG_LEVEL logLevel);





void rlSetModuleMask(U32 modMask);



void rlSetLogFileSizeLimit(U32 maxFileSize);




void rlSetNumOfLogFiles(U8 nMaxFiles);





void rlSetCircularBufferSize(U32 bufSize);




void rlSetRemoteLoggingFlag(S32 flag);




int rlHandleConInput(char ch);




void rlEnableDisableCore(S32 enable_core);



void rlEnaBleBufferedIO(void);



extern void rlUpdateRlogTti(void);



extern void rlResetLogRateLmt(void);



extern void rlResetLogRateLmt(void);




extern void rlStartLogCountLimit(void);



extern void rlStopLogCountLimit(void);
# 40 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh.h" 2
# 1655 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh.h"
typedef enum
{
   NH_DIAG_SPID,
   NH_DIAG_SUID,
   NH_DIAG_UEID,
   NH_DIAG_CRNTI,
   NH_DIAG_NA
} NhDiagSplArg;
# 45 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/lnh.h" 1
# 46 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2



# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x" 1
# 115 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"
typedef S8 Txt;

typedef U8 Ent;

typedef U8 Inst;

typedef struct entityId
{
   Ent ent;
   Inst inst;
} EntityId;



typedef S16 Elmnt;

typedef S16 ElmntInst1;

typedef S16 ElmntInst2;

typedef S16 ElmntInst3;

typedef struct elmntId
{
   Elmnt elmnt;
   ElmntInst1 elmntInst1;
   ElmntInst2 elmntInst2;
   ElmntInst3 elmntInst3;
} ElmntId;

typedef U8 Region;

typedef U8 Pool;

typedef U8 Prior;

typedef Prior Priority;

typedef U8 Route;

typedef U8 Data;

typedef U8 Selector;

typedef S16 Reason;

typedef U16 ProcId;

typedef U8 Event;

typedef U32 TranId;

typedef S16 IntNum;

typedef U16 TranNum;

typedef U16 CmIntfId;
typedef U16 CmIntfVer;
# 183 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"
typedef struct pst
{
   ProcId dstProcId;
   ProcId srcProcId;

   Ent dstEnt;
   Inst dstInst;
   Ent srcEnt;
   Inst srcInst;

   Prior prior;
   Route route;
   Event event;
   Region region;

   Pool pool;
   Selector selector;
   CmIntfVer intfVer;
} Pst;



typedef struct systemId
{
   S16 mVer;
   S16 mRev;
   S16 bVer;
   S16 bRev;
   Txt *ptNmb;
} SystemId;





typedef struct protAddr
{
   U16 protType;
   U8 len;
   U8 preLen;
   U8 address[16];





}ProtAddr;

typedef struct protAddrTbl
{
   U8 count;
   ProtAddr addr[4];
}ProtAddrTbl;



typedef struct addrs
{
   U8 length;
   U8 strg[20];
} Addrs;

typedef struct shrtAddr
{
   U8 length;
   U8 strg[32];
} ShrtAddrs;

typedef struct lngAddr
{
   U8 length;
   U8 strg[64];
} LngAddrs;



typedef struct bndCfg
{
   Txt *usrId;
   U8 bufOwnshp;
   U8 flcTyp;
   U8 wdw;
   Ent ent;
   Inst inst;
   Region region;
   Pool pool;
   Prior prior;
   Route route;
   Addrs sapAdr;
   Selector selector;
} BndCfg;
# 288 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"
typedef struct tskInit
{



   Ent ent;
   Inst inst;
   Region region;
   Pool pool;
   Reason reason;
   Bool cfgDone;
   Bool acnt;
   Bool usta;
   Bool trc;

   U32 dbgMask;
   Txt prntBuf[255];

   Txt *prntCirBuf;




   BndCfg lmBnd;
   ProcId procId;
   Pst lmPst;
# 325 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"
} TskInit;


typedef S32 Cntr;

typedef U32 StsCntr;

typedef S16 LnkNmb;

typedef S8 VBit;

typedef S16 SuId;

typedef S16 SpId;

typedef S16 SuInstId;

typedef S16 SpInstId;

typedef U16 PortId;

typedef U8 Sapi;

typedef U8 Tei;

typedef U8 Ces;

typedef U32 Dlci;

typedef U16 CalRef;

typedef S16 Origin;

typedef U16 NwId;

typedef S16 Swtch;

typedef U8 Cause;

typedef U8 Dgn;

typedef S16 Action;

typedef S16 SeqS16;

typedef U16 SeqU16;

typedef S32 SeqS24;

typedef U32 SeqU24;

typedef U8 SetUpArb;

typedef U8 EvntType;

typedef U8 State;

typedef U8 Mode;

typedef S32 ConnId;

typedef U32 UConnId;

typedef U16 ProtId;

typedef U16 ChannelId;

typedef U8 Arr64U8[64];

typedef U16 Efa;

typedef U32 BitState;

typedef U8 CChanId;

typedef U16 MibOpCode;


typedef U16 MibStatus;

typedef U16 MibTblType;

typedef S32 MibReqId;

typedef U8 UstaType;
typedef S8 ChannelNo;
# 501 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"
typedef S16 Baud;

typedef S16 PhysIntType;

typedef S16 PathConnType;

typedef S16 Parity;

typedef S16 CharLength;

typedef S16 StopBits;



typedef U32 IpAddr;

typedef U16 Port;

typedef U8 Cmd;

typedef U8 Flags;

typedef U8 Ttl;

typedef U8 Prec;

typedef U32 Window;

typedef U8 MtpStatus;

typedef U8 Credit;



typedef U32 CirId;

typedef U16 Cic;

typedef U32 SiInstId;



typedef U32 BiInstId;



typedef U32 TpInstId;



typedef U32 Oui;
typedef U16 Pid;
typedef U32 LlcId;
# 716 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"
typedef struct octStrg
{
   S32 length;
   U8 val[132];
} OctStrg;

typedef struct tknHdr
{
   U8 pres;
   U8 spare1;
   U16 spare2;



} TknHdr;

typedef struct elmtHdr
{
   U8 pres;
   U8 actnInd;
   U16 compInd;



} ElmtHdr;



typedef struct tknU8
{
   U8 pres;
   U8 val;
   U16 spare1;



} TknU8;

typedef struct tknS8
{
   U8 pres;
   S8 val;
   U16 spare1;



} TknS8;

typedef struct tknU16
{
   U8 pres;
   U8 spare1;
   U16 val;



} TknU16;

typedef struct tknU32
{
   U8 pres;
   U8 spare1;
   U16 spare2;
   U32 val;
} TknU32;

typedef struct tknS32
{
   U8 pres;
   U8 spare1;
   U16 spare2;
   S32 val;
} TknS32;

typedef struct tknStrS
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(22 + 3) & 0xffc];

} TknStrS;

typedef struct tknStrM
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(32 + 3) & 0xffc];

} TknStrM;

typedef struct tknStr
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(132 + 3) & 0xffc];

} TknStr;

typedef struct tknStrE
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(255 + 3) & 0xffc];

} TknStrE;

typedef struct tknStrXL
{
   U16 len;
   U8 pres;
   U8 spare1;



   U8 *val;
} TknStrXL;

typedef struct tknStr4
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[4];

} TknStr4;

typedef struct tknStr12
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[12];

} TknStr12;

typedef struct tknStr32
{
   U8 pres;
   U8 len;
   U16 spare1;



   U8 val[32];
} TknStr32;

typedef struct tknStr64
{
   U8 pres;
   U8 len;
   U16 spare1;



   U8 val[64];
} TknStr64;

typedef struct tknStr132
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[132];

} TknStr132;

typedef struct tknStr256
{
   U8 pres;
   U8 len;
   U16 spare1;



   U8 val[256];
} TknStr256;

typedef struct tknOid
{
   U8 pres;
   U8 len;
   U16 spare1;






   U32 val[32];



} TknOid;

typedef struct tknBits
{
   U8 pres;
   U8 len;
   U16 spare1;




   U8 val[(7 + 3) & 0xffc];

} TknBits;

typedef struct elmtStr
{
   ElmtHdr eh;
   TknStr str;
} ElmtStr;

typedef struct cdPtyNmb
{
   ElmtHdr eh;
   TknU8 nmbPlanId;
   TknU8 typeNmb0;



   TknStrS nmbDigits;

} CdPtyNmb;

typedef struct redirNmb
{
   ElmtHdr eh;
   TknU8 nmbPlanId;
   TknU8 typeNmb;
   TknU8 screenInd;
   TknU8 presInd;
   TknU8 rsnRedirect;
   TknStrS nmbDigits;
} RedirNmb;

typedef struct srvClass
{
   U8 type;
   union
   {
      struct
      {
         Bool cr;
         Bool de;
      } fr;
      struct
      {
         Prior prior;
      } ma;
   } s;
} SrvClass;



typedef struct _ip
{
   U8 ip_hl;
   Prec ip_tos;
   U16 ip_len;
   U16 ip_id;
   U16 ip_off;
   Ttl ip_ttl;
   U8 ip_p;
   U16 ip_sum;
   IpAddr ip_src;
   IpAddr ip_dst;
} Ip;
# 1518 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"
typedef struct smCfg
{
   Ent ent;
   Inst inst;
   Region region;
   Pool pool;
   Priority prior;
   Route route;
   Selector selector;
} SmCfg;

typedef struct mem
{
   Region region;
   Pool pool;
   U16 spare;
} Mem;

typedef Mem MemoryId;


typedef struct resp
{
   Selector selector;
   Priority prior;
   Route route;
   MemoryId mem;
}Resp;

typedef struct tds_header
{
   U16 msgLen;
   U8 msgType;
   U8 version;
   U16 seqNmb;
   EntityId entId;
   ElmntId elmId;

   TranId transId;
   Resp response;

} Header;

typedef struct tmrCfg
{
   Bool enb;
   U16 val;
} TmrCfg;

typedef struct asyncCfg
{
   StopBits stopBits;
   CharLength charLength;
   Parity rxParity;
   Parity txParity;
} AsyncCfg;




typedef struct dateTime
{
   U8 month;
   U8 day;
   U8 year;
   U8 hour;
   U8 min;
   U8 sec;
   U8 tenths;




} DateTime;


typedef U64 EpcTime;


typedef struct cmStatus
{
   U16 status;
   U16 reason;
}CmStatus;


typedef struct cmAlarm
{
   DateTime dt;
   U16 category;
   U16 event;
   U16 cause;
}CmAlarm;



typedef struct duration
{
   U8 days;
   U8 hours;
   U8 mins;
   U8 secs;
   U8 tenths;
} Duration;
# 1630 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"
typedef struct ssmsgb Buffer;
# 1655 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/gen.x"
typedef struct tknBuf
{
   U8 pres;
   U8 spare1;
   U16 spare2;



   Buffer *val;
} TknBuf;



typedef U32 CmIpAddr;







extern S16 cmPkDateTime (DateTime *dateTime, Buffer *mBuf);
extern S16 cmPkDuration (Duration *duration, Buffer *mBuf);
extern S16 cmPkPtr (U32 ptr, Buffer *mBuf);
extern S16 cmPkEntityId (EntityId *entityId, Buffer *mBuf);
extern S16 cmPkElmntId (ElmntId *elmntId, Buffer *mBuf);
extern S16 cmPkMemoryId (MemoryId *memoryId, Buffer *mBuf);


extern S16 cmPkSystemId (SystemId *systemId, Buffer *mBuf);
extern S16 cmPkAddrs (Addrs *addrs, Buffer *mBuf);
extern S16 cmPkProtAddr (ProtAddr *protAddr, Buffer *mBuf);
extern S16 cmPkProtAddrTbl (ProtAddrTbl *protAddr, Buffer *mBuf);
extern S16 cmPkShrtAddrs (ShrtAddrs *addrs, Buffer *mBuf);
extern S16 cmPkAddrMask (U8 *mask, Buffer *mBuf);
extern S16 cmPkBndCfg (BndCfg *bndCfg, Buffer *mBuf);
extern S16 cmPkPst (Pst *pst, Buffer *mBuf);
extern S16 cmPkElmtHdr (ElmtHdr *m, Buffer *mBuf);
extern S16 cmPkTknU8 (TknU8 *tknU8, Buffer *mBuf);
extern S16 cmPkTknS8 (TknS8 *tknS8, Buffer *mBuf);
extern S16 cmPkTknU16 (TknU16 *tknU16, Buffer *mBuf);
extern S16 cmPkTknU32 (TknU32 *tknU32, Buffer *mBuf);
extern S16 cmPkTknStr (TknStr *tknStr, Buffer *mBuf);
extern S16 cmPkTknStrM (TknStrM *tknStr, Buffer *mBuf);
extern S16 cmPkTknStrS (TknStrS *tknStr, Buffer *mBuf);
extern S16 cmPkTknStrE (TknStrE *tknStr, Buffer *mBuf);

extern S16 cmPkTknStr4 (TknStr4 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr12 (TknStr12 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr32 (TknStr32 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr64 (TknStr64 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr132 (TknStr132 *tknStr, Buffer *mBuf);
extern S16 cmPkTknStr256 (TknStr256 *tknStr, Buffer *mBuf);

 S16 cmPkTknS32 (TknS32 *tknS32, Buffer *mBuf);
 S16 cmPkTknOid (TknOid *tknOid, Buffer *mBuf);
 S16 cmPkTknBuf (TknBuf *tknBuf, Buffer *mBuf);






extern S16 cmPkHeader (Header *header, Buffer *mBuf);
extern S16 cmPkSmCfg (SmCfg *smCfg, Buffer *mBuf);
extern S16 cmPkTmrCfg (TmrCfg *tmrCfg, Buffer *mBuf);
extern S16 cmPkCmStatus (CmStatus *status, Buffer *mBuf);
extern S16 cmPkCmAlarm (CmAlarm *alrm, Buffer *mBuf);





extern S16 cmUnpkDateTime (DateTime *dateTime, Buffer *mBuf);
extern S16 cmUnpkDuration (Duration *duration, Buffer *mBuf);
extern S16 cmUnpkPtr (U32 *ptr, Buffer *mBuf);
extern S16 cmUnpkEntityId (EntityId *entityId, Buffer *mBuf);
extern S16 cmUnpkElmntId (ElmntId *elmntId, Buffer *mBuf);
extern S16 cmUnpkMemoryId (MemoryId *memoryId, Buffer *mBuf);


extern S16 cmUnpkSystemId (SystemId *systemId, Buffer *mBuf);
extern S16 cmUnpkAddrs (Addrs *addrs, Buffer *mBuf);
extern S16 cmUnpkProtAddr (ProtAddr *protAddr, Buffer *mBuf);
extern S16 cmUnpkProtAddrTbl (ProtAddrTbl *protAddr, Buffer *mBuf);
extern S16 cmUnpkShrtAddrs (ShrtAddrs *addrs, Buffer *mBuf);
extern S16 cmUnpkAddrMask (U8 *mask, Buffer *mBuf);
extern S16 cmUnpkBndCfg (BndCfg *bndCfg, Buffer *mBuf);
extern S16 cmUnpkPst (Pst *pst, Buffer *mBuf);
extern S16 cmUnpkElmtHdr (ElmtHdr *m, Buffer *mBuf);
extern S16 cmUnpkTknU8 (TknU8 *tknU8, Buffer *mBuf);
extern S16 cmUnpkTknS8 (TknS8 *tknS8, Buffer *mBuf);
extern S16 cmUnpkTknU16 (TknU16 *tknU16, Buffer *mBuf);
extern S16 cmUnpkTknU32 (TknU32 *tknU32, Buffer *mBuf);
extern S16 cmUnpkTknStr (TknStr *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStrM (TknStrM *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStrS (TknStrS *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStrE (TknStrE *tknStr, Buffer *mBuf);

extern S16 cmUnpkTknStr4 (TknStr4 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr12 (TknStr12 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr32 (TknStr32 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr64 (TknStr64 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr132 (TknStr132 *tknStr, Buffer *mBuf);
extern S16 cmUnpkTknStr256 (TknStr256 *tknStr, Buffer *mBuf);

 S16 cmUnpkTknS32 (TknS32 *tknS32, Buffer *mBuf);
 S16 cmUnpkTknOid (TknOid *tknOid, Buffer *mBuf);
 S16 cmUnpkTknBuf (TknBuf *tknBuf, Buffer **mBuf);






extern S16 cmUnpkHeader (Header *header, Buffer *mBuf);
extern S16 cmUnpkSmCfg (SmCfg *smCfg, Buffer *mBuf);
extern S16 cmUnpkTmrCfg (TmrCfg *tmrCfg, Buffer *mBuf);
extern S16 cmUnpkCmStatus (CmStatus *status, Buffer *mBuf);
extern S16 cmUnpkCmAlarm (CmAlarm *alrm, Buffer *mBuf);
# 50 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x" 1
# 81 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
typedef S16 Status;

typedef U32 Ticks;




typedef S16 MsgLen;


typedef S16 Order;




typedef U32 Size;
typedef S32 PtrOff;


typedef U32 QLen;

typedef QLen BufQLen;

typedef S16 RegSize;

typedef S16 DPoolSize;

typedef U16 Random;

typedef S16 Seq;

typedef U32 CoreId;


typedef U32 ErrCls;

typedef U32 ErrCode;

typedef U32 ErrVal;

typedef S16 VectNmb;

typedef S16 Ttype;

typedef S8 Sema;
# 742 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern S16 msOptInd;
extern S8 *msOptArg;
extern Txt **msArgv;
extern S16 msArgc;




typedef U8 SSTskId;




typedef S32 SSTskPrior;
# 765 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
struct ssmsgb
{
   S8 refCnt;
   struct ssmsgb *b_next;
   struct ssmsgb *b_prev;
   struct ssmsgb *b_cont;
   U8 *b_rptr;
   U8 *b_wptr;
   struct ssdatab *b_datap;
};


typedef struct ssQueue
{
   Buffer *head;
   Buffer *tail;
   QLen crntSize;

} Queue;



typedef struct sMemCtl
{
   U8 op;

   union
   {
      struct
      {
         Data *vaddr;
         Data **paddr;
      } vtop;

      struct
      {
         Size size;
         Status *status;
      } chkres;
   } u;

} SMemCtl;
# 831 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
typedef S16 (*SsAlloc) (Void *, Size *, U32, Data **);





typedef S16 (*SsFree) (Void *, Data *, Size);

typedef S16 (*SsCtl) (Void *, Event, SMemCtl *);




typedef struct sRegInfo
{
   Void *regCb;
   U32 flags;




   Data *start;
   Size size;
   SsAlloc alloc;
   SsFree free;
   SsCtl ctl;

} SRegInfo;
# 879 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.x" 1
# 39 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.x"
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm5.x" 1
# 29 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm5.x"
typedef struct cmTimer
{
   S16 tmrEvnt;
   U32 tqExpire;
   U32 cb;
   struct cmTimer *next;
   struct cmTimer *prev;
   U8 ent2bUpd;

   U16 entIdx;
} CmTimer;

typedef struct cmTqCp
{
   U32 nxtEnt;
   U32 tmrLen;
   CmTimer *tmp;
} CmTqCp;

typedef struct cmTqType
{
   CmTimer *first;
   CmTimer *tail;
} CmTqType;

typedef struct cmTmrArg
{
   CmTqCp *tqCp;
   CmTqType *tq;
   CmTimer *timers;
   U32 cb;
   S16 evnt;
   U32 wait;
   U8 tNum;
   U8 max;
} CmTmrArg;




typedef Void (*PFV) (U32, S16);

extern Void cmInitTimers (CmTimer* timers, U8 max);
extern Void cmPlcCbTq (CmTmrArg* arg);
extern Void cmRmvCbTq (CmTmrArg* arg);
extern Void cmPrcTmr (CmTqCp* tqCp, CmTqType* tq, PFV func);
extern Void cmRstCbTq (CmTmrArg* arg);
# 40 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.x" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/mt_ss.x" 1
# 32 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/mt_ss.x"
typedef S8 SsdTTskEntry;



typedef struct ssdSTskEntry
{
   pthread_t tId;
   Ent ent;
   Inst inst;
   pthread_mutex_t lock;


   U32 lwpId;

} SsdSTskEntry;




typedef struct ssdDrvrTskEntry
{
   Bool flag;

} SsdDrvrTskEntry;




typedef struct ssdTmrEntry
{
   CmTimer timers[1];

} SsdTmrEntry;



typedef S8 SsdDPoolEntry;



typedef S8 SsdSPoolEntry;



typedef S8 SsdPoolEntry;



typedef S8 SsdRegionEntry;





typedef struct ssdOs
{
   unsigned randSeed;

   Ticks sysTicks;

   pthread_t tmrHdlrTID;
   CmTqCp tmrTqCp;
   CmTqType tmrTq[45];

   sem_t ssStarted;

   FILE *conInFp;
   FILE *conOutFp;
   pthread_t conHdlrTID;



   FILE *fileOutFp;



   pthread_t isTskHdlrTID;
   int isFildes[2];

   Bool sigEvnt;

} SsdOs;


typedef struct mtBktCfg
{
   Size blkSize;
   U32 numBlks;
} MtBktCfg;

typedef struct mtRegCfg
{
   Region regionId;
   U16 numBkts;
   Size heapsize;
   MtBktCfg bkt[5];
} MtRegCfg;

typedef struct mtMemCfg
{
   U8 numRegions;
   MtRegCfg region[8];
} MtMemCfg;
# 153 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/mt_ss.x"
extern U32 gt[128];
# 41 "/home/mrehwald/Desktop/Radisys/lte_enb/src/mt/ss_dep.x" 2
# 880 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x" 2
# 918 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
typedef S16 (*PAIFS16) (Ent ent,Inst inst,Region region,Reason reason );





typedef S16 (*PAIFTMRS16) (Ent ent, Inst inst);
# 940 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
typedef S16 (*PATFS16) (Prior prior,Route route,Ent ent,Inst inst,Buffer *mBuf);



typedef S16 (*ActvTsk) (Pst *pst, Buffer *mBuf);

typedef struct uProc UProc;

typedef void (*ISTsk) (Inst inst);




struct uProc
{
   Inst inst;
   ProcId low;
   ProcId high;
   ActvTsk actvTsk;
   U16 isFlag;
   ISTsk isTsk;
};






extern S16 SChekMemUtilization (Region region,Bool *memAlarm);

extern Void prntMem (Data *strtAdr,S16 len);
extern Void prntMsg (Buffer *mBuf);
extern Void prntMsg1 (Buffer *mBuf,S16 src,S16 dst);
extern S16 tst (void );
extern S16 rdConQ (Data data);

extern S16 SPkS8 (S8 val,Buffer *mBuf);
extern S16 SPkU8 (U8 val,Buffer *mBuf);
extern S16 SPkS16 (S16 val,Buffer *mBuf);
extern S16 SPkU16 (U16 val,Buffer *mBuf);
extern S16 SPkS32 (S32 val,Buffer *mBuf);
extern S16 SPkU32 (U32 val,Buffer *mBuf);


extern S16 SPkF32 (F32 val,Buffer *mBuf);
extern S16 SPkF64 (F64 val,Buffer *mBuf);

extern S16 SUnpkS8 (S8 *val,Buffer *mBuf);
extern S16 SUnpkU8 (U8 *val,Buffer *mBuf);
extern S16 SUnpkS16 (S16 *val,Buffer *mBuf);
extern S16 SUnpkU16 (U16 *val,Buffer *mBuf);
extern S16 SUnpkS32 (S32 *val,Buffer *mBuf);
extern S16 SUnpkU32 (U32 *val,Buffer *mBuf);


extern S16 SUnpkF32 (F32 *val,Buffer *mBuf);
extern S16 SUnpkF64 (F64 *val,Buffer *mBuf);

extern S16 SPrint (Txt *buf);
extern S16 SDisplay (S16 chan,Txt *buf);
extern S16 SPrntMsg (Buffer *mBuf,S16 src,S16 dst);
extern S16 SInitQueue (Queue *q);

extern S16 SQueueFirst (Buffer *buf,Queue *q);
extern S16 SQueueLast (Buffer *buf,Queue *q);
extern S16 SDequeueFirst (Buffer * *bufPtr,Queue *q);
extern S16 SDequeueLast (Buffer * *bufPtr,Queue *q);

extern S16 SFlushQueue (Queue *q);
extern S16 SCatQueue (Queue *q1,Queue *q2,Order order);
extern S16 SFndLenQueue (Queue *q,QLen *lngPtr);
extern S16 SExamQueue (Buffer **bufPtr,Queue *q,QLen idx);
extern S16 SAddQueue (Buffer *buf,Queue *q,QLen idx);
extern S16 SRemQueue (Buffer **bufPtr,Queue *q,QLen idx);
# 1029 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern S16 SGetDBuf (Region region,Pool pool,Buffer * *bufPtr);
extern S16 SPutDBuf (Region region,Pool pool,Buffer *buf);
# 1046 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern S16 SPutMsgToRegion (Region region, Buffer *buf);
# 1073 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern S16 SPutMsg (Buffer *mBuf);
extern S16 SGetMsg (Region region, Pool pool, Buffer * *mBufPtr);
# 1090 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern S16 SGetSBuf (Region region,Pool pool, Data * *bufPtr, Size size);
extern S16 SPutSBuf (Region region, Pool pool, Data *buf, Size size);
# 1101 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern S16 SGetStaticBuffer (Region region,Pool pool, Data * *bufPtr, Size size, U8 memType);
extern S16 SPutStaticBuffer (Region region, Pool pool, Data *buf, Size size, U8 memType);
# 1114 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern S16 SGetSMem (Region region,Size size,Pool *poolPtr);
extern S16 SPutSMem (Region region,Pool pool);
extern S16 SInitMsg (Buffer *mBuf);
extern S16 SAddPreMsg (Data data,Buffer *mBuf);
extern S16 SAddPstMsg (Data data,Buffer *mBuf);

extern S16 SAddPreMsgMultInOrder (Data *src,MsgLen cnt,Buffer *mBuf);
extern S16 SRemPreMsg (Data *dataPtr,Buffer *mBuf);
extern S16 SRemPreMsgRegion (Region region, Data *dataPtr,Buffer *mBuf);
extern S16 SCatMsgRegion (Region region, Buffer *mBuf1,Buffer *mBuf2,Order order);
extern S16 SSegMsgRegion (Region region, Buffer *mBuf1,MsgLen idx,Buffer **mBuf2);
extern int SCreatePThread (pthread_t* tid, pthread_attr_t* attr, void *(*start_routine) (void *), void* arg);
extern S16 SRemPstMsg (Data *dataPtr,Buffer *mBuf);







extern S16 SAddPreMsgMult (Data *src,MsgLen cnt,Buffer *mBuf);
extern S16 SAddPstMsgMult (Data *src,MsgLen cnt,Buffer *mBuf);

extern S16 SGetPstMsgMult (MsgLen cnt,Buffer *mBuf);
extern S16 SRemPreMsgMult (Data *dst,MsgLen cnt,Buffer *mBuf);
extern S16 SRemPstMsgMult (Data *dst,MsgLen cnt,Buffer *mBuf);
extern S16 SRepMsg (Data data,Buffer *mBuf,MsgLen idx);
extern S16 SExamMsg (Data *dataPtr,Buffer *mBuf,MsgLen idx);

extern S16 SGetDataFrmMsg (Buffer *mBuf, Data *dataPtr, MsgLen idx, MsgLen dataLen);
extern S16 SFndLenMsg (Buffer *mBuf,MsgLen *lngPtr);
extern S16 SCatMsg (Buffer *mBuf1,Buffer *mBuf2,Order order);




extern S16 SSegMsg (Buffer *mBuf1,MsgLen idx,Buffer **mBuf2);

extern S16 SSwapMsg (Buffer *mBuf1, Buffer *mBuf2);
extern S16 SCpyMsgFix (Buffer *srcMbuf,MsgLen srcIdx,MsgLen cnt, Data *dstBuf,MsgLen *cCnt)
                                       ;
extern S16 SCpyFixMsg (Data *srcBuf,Buffer *dstMbuf, MsgLen dstIdx,MsgLen cnt,MsgLen *cCnt)
                                                   ;
extern S16 SCompressMsg (Buffer *mBuf);
# 1166 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern S16 SCpyMsgMsg (Buffer *mBuf, Region region, Pool pool, Buffer **dstBuf)
                             ;
extern S16 SAddMsgRef (Buffer *mBuf, Region region, Pool pool, Buffer **dstBuf)
                             ;
extern S16 SIncMsgRef(Buffer *srcBuf, Region dstRegion, Pool dstPool, Buffer **dstBuf);






extern S16 SChkRes (Region region,Pool pool,Status *status);
extern S16 SChkResUtl (Region region,U8 *wSum);
extern S16 SSetDateTime (DateTime *dt);
extern S16 SGetDateTime (DateTime *dt);






extern S16 SGetEpcTime (EpcTime *et);

extern S16 SGetTimeStamp ( S8 *ts);
extern S16 SGetSysTime (Ticks *sysTime);
extern S16 SGetRefTime (U32 refTime, U32 *sec, U32 *usec);
extern S16 SRandom (Random *value);
extern S16 SError (Seq seq,Reason reason);
extern Void SLogError (Ent ent, Inst inst, ProcId procId, Txt *file, S32 line, ErrCls errCls, ErrCode errCode, ErrVal errVal, Txt *errDesc)

                                                    ;

extern U32 SGetSystemTsk (Void);




extern S16 SRegInit (Ent ent,Inst inst,PAIFS16 initFnct);
extern S16 SRegActvTsk (Ent ent,Inst inst,Ttype ttype,Prior prior, ActvTsk actvTsk)
                                               ;




extern S16 SRegCfgTmr (Ent ent, Inst inst, S16 period, S16 units, PFS16 tmrFnct)



                                            ;


extern S16 SRegCfgTmrMt (Ent ent, Inst inst, S16 period, S16 units, PAIFTMRS16 tmrFnctMt)



                                                     ;

extern S16 SDeregCfgTmr (Ent ent, Inst inst, S16 period, S16 units, PFS16 tmrFnct)



                                              ;


extern S16 SDeregCfgTmrMt (Ent ent, Inst inst, S16 period, S16 units, PAIFTMRS16 tmrFnctMt)



                                                       ;
# 1251 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern S16 SPstTsk (Pst *pst, Buffer *mBuf);






extern S16 SRegDrvrTsk (Inst inst, ProcId low, ProcId high, ActvTsk actvTsk, ISTsk isTsk)
                                                            ;

extern S16 SDeregDrvrTsk (Inst channel);



extern S16 SRegRtrTsk (Route *, Cntr, ActvTsk);
extern S16 SDeregRtrTsk (Route *, Cntr);



extern S16 SAttachPtrToBuf ( Region region, Pool pool, Data *ptr, MsgLen totalLen, Buffer** mBuf )





  ;





typedef S8 SsAffinityMode;


typedef struct {
  U32 numCores;
  U32 threadsPerCore;
  U32 threadRegister[64];
} SCpuInfo;

extern S16 SRegCpuInfo (SCpuInfo *cpuInfo);
extern S16 SSetAffinity (SSTskId *tskId, SsAffinityMode mode, U32 coreId, SSTskId *tskAssociatedTskId);
extern S16 SGetAffinity (SSTskId *tskId, U32 *coreId);







extern S16 SAddDBufPst (Buffer *mBuf, Buffer *dBuf);
extern S16 SAddDBufPre (Buffer *mBuf, Buffer *dBuf);
extern S16 SRemDBufPst (Buffer *mBuf, Buffer **dBuf);
extern S16 SRemDBufPre (Buffer *mBuf, Buffer **dBuf);
extern S16 SGetDataRx (Buffer *dBuf, MsgLen pad, Data **dat, MsgLen *mLen);
extern S16 SGetDataTx (Buffer *dBuf, Data **dat, MsgLen *mLen);
extern S16 SUpdMsg (Buffer *mBuf, Buffer *dBuf, MsgLen mLen);
extern S16 SCacheFlush (U16 cache_type, Data *addr, Size size);
extern S16 SCacheInvalidate (U16 cache_type, Data *addr, Size size);
extern S16 SAlignDBufEven (Buffer *dBuf);
extern S16 SAlignDBuf (Buffer *dBuf, U32 align);
extern S16 SInitNxtDBuf (Buffer *mBuf);
extern S16 SGetNxtDBuf (Buffer *mBuf, Buffer **dBuf);
extern S16 SChkNxtDBuf (Buffer *mBuf);
extern S16 SSetIntPend (U16 id, Bool flag);
extern S16 SChkMsg (Buffer *mBuf);
extern S16 SDeregInitTskTmr (Ent ent,Inst inst);
extern S16 SExitTsk (void );
extern S16 SExitInt (void );
extern S16 SHoldInt (void );
extern S16 SRelInt (void );
extern S16 SEnbInt (void );
extern S16 SDisInt (void );
extern S16 SGetVect (VectNmb vectNmb,PIF *vectFnct);
extern S16 SPutVect (VectNmb vectNmb,PIF vectFnct);






extern S16 SInitSema (Region region, Sema *sema);
extern S16 SRelSema (Region region, Sema sema);
extern S16 SGetSema (Region region, Sema sema);
extern S16 SActvInit (Ent ent,Inst inst,Region region,Reason reason);
extern S16 SActvTsk (Prior prior,Route route,Ent srcEnt, Inst srcInst,Buffer *mBuf)
                                       ;
extern S16 SActvTmr (void );
extern S16 SGetOpt (int argc,char **argv,char *opts);



extern S16 SGetEntInst (Ent *ent, Inst *inst);
extern S16 SSetEntInst (Ent ent, Inst inst);
extern ProcId SFndProcId (void);
extern Void SSetProcId (ProcId pId);


extern S16 SGetDBufSiz (Region region, Pool pool, S16 *size);
extern S16 SGetStrtIdx (Region region, Pool pool, S16 *idx);
extern S16 SGetEndIdx (Region region, Pool pool, S16 *idx);
extern S16 SGetStrtPad (Region region, Pool pool, S16 *pad);
# 1381 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern Void SExit (Void);




extern S16 SRegTTsk (Ent ent, Inst inst, Ttype type, Prior prior, PAIFS16 initTsk, ActvTsk actvTsk)




                                           ;

extern S16 SRegCbTsk (Ent ent, Inst inst, ActvTsk actvTsk)

                                           ;
extern S16 SDeregTTsk (Ent ent, Inst inst);
# 1415 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern S16 SCreateSTsk (SSTskPrior tskPrior, SSTskId *tskId);
extern S16 SDestroySTsk (SSTskId tskId);



extern S16 SAttachTTsk (Ent ent, Inst inst, SSTskId tskId);
extern S16 SDetachTTsk (Ent ent, Inst inst);







extern S16 SRegRegion (Region region, SRegInfo *regInfo);
extern S16 SDeregRegion (Region region);
extern S16 SRegDynRegion (Region region, SRegInfo *regInfo);
# 1448 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern S16 SAlloc (Region region, Size *size, U32 flags, Data **ptr);
extern S16 SFree (Region region, Data *ptr, Size size);


extern S16 SGetBufRegionPool (Buffer *mBuf, Region *region, Pool *pool);
# 1474 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern S16 SThreadYield (void);


extern S16 SInitLock (pthread_mutex_t *lock,U8 type);
extern S16 SLock (pthread_mutex_t *lock);
extern S16 SUnlock (pthread_mutex_t *lock);
extern S16 SDestroyLock (pthread_mutex_t *lock);


extern S16 SInitSemaphore (sem_t *sem, U8 value);
extern S16 SWaitSemaphore (sem_t *sem);
extern S16 SPostSemaphore (sem_t *sem);
extern S16 SDestroySemaphore (sem_t *sem);
# 1569 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern S16 smActvInit (Ent ent, Inst inst, Region region, Reason reason);
# 1580 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern S16 smInitExt (void);


extern S16 smActvTsk (Pst *pst, Buffer *mBuf);
# 1632 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern S8* SGetConfigPath (Void);


extern S16 SCpyPartMsg (Buffer *srcBuf, MsgLen idx, MsgLen cnt, Buffer *dstBuf);
extern S16 SRepPartMsg (Buffer *srcBuf, MsgLen idx, MsgLen cnt, Buffer *dstBuf);
extern S16 SMovPartMsg (Buffer *srcBuf, MsgLen idx, Buffer *dstBuf);
extern S16 SPkMsgMult (Data *src, MsgLen cnt, Buffer *mBuf);
extern S16 SGetReadPtr (Buffer *mBuf, U8** data, MsgLen *len);

typedef enum
{
   SS_SHARABLE_MEMORY,
   SS_NON_SHARABLE_MEMORY
}ssMemoryType;
# 1661 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern S16 SStartTask (volatile U32 *startTime, U32 tarkId);
extern S16 SStopTask (volatile U32 startTime,U32 taskId);
# 1717 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern Void SIncrementTtiCount(Void);
extern Ticks SGetTtiCount(Void);
# 1732 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ssi.x"
extern Void ysPrntBkTrace(Void);
extern Void ssMlogInit(Void);
extern Void ssMlogIncrCounter(Void);


extern Void ssRegMainThread(Void);






extern S16 ssGetDBufOfSize(Region region,Size size,Buffer **dBuf);
# 51 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2

# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lib.x" 1
# 29 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lib.x"
 U8 *cmMemcpy (U8 *tgt, const U8 *src, U32 len);
 S16 cmMemcmp (const U8 *s1, const U8 *s2, U32 len);
 U8 *cmMemset (U8 *src, U8 val, U32 len);

 S16 cmStrcmp (const U8 *s1, const U8 *s2);

 S16 cmStrncmp (const U8 *s1, const U8 *s2, MsgLen len);
 MsgLen cmStrlen (const U8 *s);
# 53 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_hash.x" 1
# 31 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_hash.x"
typedef struct cmHashListCp CmHashListCp;




typedef S16 (* CmHashFunc) (CmHashListCp *hashListCp, U8 *key, U16 keyLen, U16 *idx)
                                                        ;


typedef struct cmListEnt CmListEnt;

struct cmListEnt
{
   CmListEnt *next;
   CmListEnt *prev;
};
# 62 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_hash.x"
typedef struct cmHashListEnt
{
   CmListEnt list;
   U8 *key;
   U16 keyLen;
   U16 hashVal;
} CmHashListEnt;



struct cmHashListCp
{

   CmListEnt *hl;



   Region region;
   Pool pool;
   U16 nmbBins;
   U16 binBitMask;
   U8 nmbBinBits;

   U16 nmbEnt;

   U16 offset;
   Bool dupFlg;
   U16 keyType;
   CmHashFunc hashFunc;
};




extern S16 cmHashListInit ( CmHashListCp *hashListCp, U16 nmbBins, U16 offset, Bool dupFlg, U16 keyType, Region region, Pool pool)






                                 ;

extern S16 cmHashListDeinit ( CmHashListCp *hashListCp)
                                        ;

extern S16 cmHashListInsert ( CmHashListCp *hashListCp, U32 entry, U8 *key, U16 keyLen)



                                   ;

extern S16 cmHashListDelete ( CmHashListCp *hashListCp, U32 entry)

                                  ;

extern S16 cmHashListFind ( CmHashListCp *hashListCp, U8 *key, U16 keyLen, U16 seqNmb, U32 *entry)




                                   ;

extern S16 cmHashListGetNext ( CmHashListCp *hashListCp, U32 prevEnt, U32 *entry)


                                   ;
# 140 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_hash.x"
extern S16 cmHashListQuery ( CmHashListCp *hashListCp, U8 queryType, U16 *result)


                                    ;



extern S16 cmHashListOAInsert ( CmHashListCp *hashListCp, U32 entry, U8 *key, U16 keyLen)



                                   ;
# 54 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_tkns.x" 1
# 50 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_tkns.x"
typedef TknU8 TknPres;


typedef TknU8 TknBool;

typedef struct tknS16
{
   U8 pres;
   U8 spare1;
   S16 val;



} TknS16;


typedef struct tknStr8
{
   U8 pres;
   U8 len;
   U16 spare1;



   U8 val[8];
} TknStr8;


typedef struct tknStr16
{
   U8 pres;
   U8 len;
   U16 spare1;



   U8 val[16];
} TknStr16;

typedef struct tknStrOSXL
{
   U8 pres;
   U8 spare1;
   U16 len;



   U8 *val;
} TknStrOSXL;


typedef TknStr4 TknBStr32;


typedef TknStrOSXL TknStrBSXL;







typedef struct tknStrBMP4
{
   U8 pres;
   U8 len;
   U16 spare1;



   U16 val[4];
} TknStrBMP4;


typedef struct tknStrBMPXL
{
   U8 pres;
   U8 spare1;
   U16 len;



   U16 *val;
} TknStrBMPXL;







typedef struct tknStrUNI4
{
   U8 pres;
   U8 len;
   U16 spare1;



   U32 val[4];
} TknStrUNI4;

typedef struct tknStrUNIXL
{
   U8 pres;
   U8 spare1;
   U16 len;



   U32 *val;
} TknStrUNIXL;


extern S16 cmPkTknPres (TknPres *tknPres, Buffer *mBuf);
extern S16 cmPkTknS16 (TknS16 *tknS16, Buffer *mBuf);
extern S16 cmPkTknBStr32 (TknBStr32 *tknbStr32, Buffer *mBuf);
extern S16 cmPkTknStr8 (TknStr8 *tknStr8, Buffer *mBuf);
extern S16 cmPkTknStr16 (TknStr16 *tknStr16, Buffer *mBuf);
extern S16 cmPkTknStrOSXL (TknStrOSXL *tknStrOSXL, Buffer *mBuf);
extern S16 cmPkTknStrBSXL (TknStrBSXL *tknStrBSXL, Buffer *mBuf);
extern S16 cmPkTknStrBMP4 (TknStrBMP4 *tknStrBMP4, Buffer *mBuf);
extern S16 cmPkTknStrBMPXL (TknStrBMPXL *tknStrBMPXL, Buffer *mBuf);
extern S16 cmPkTknStrUNI4 (TknStrUNI4 *tknStrUNI4, Buffer *mBuf);
extern S16 cmPkTknStrUNIXL (TknStrUNIXL *tknStrUNIXL, Buffer *mBuf);




extern S16 cmUnpkTknPres (TknPres *tknPres, Buffer *mBuf);
extern S16 cmUnpkTknS16 (TknS16 *tknS16, Buffer *mBuf);
extern S16 cmUnpkTknBStr32 (TknBStr32 *tknBStr32, Buffer *mBuf);
extern S16 cmUnpkTknStr8 (TknStr8 *tknStr8, Buffer *mBuf);
extern S16 cmUnpkTknStr16 (TknStr16 *tknStr16, Buffer *mBuf);
extern S16 cmUnpkTknStrOSXL (TknStrOSXL *tknStrOSXL, Buffer *mBuf, Ptr ptr)
                                                ;
extern S16 cmUnpkTknStrBSXL (TknStrBSXL *tknStrBSXL, Ptr ptr, Buffer *mBuf)
                                                     ;
extern S16 cmUnpkTknStrBMP4 (TknStrBMP4 *tknStrBMP4, Buffer *mBuf);
extern S16 cmUnpkTknStrBMPXL (TknStrBMPXL *tknStrBMPXL, Buffer *mBuf, Ptr ptr)
                                                ;
extern S16 cmUnpkTknStrUNI4 (TknStrUNI4 *tknStrUNI4, Buffer *mBuf);
extern S16 cmUnpkTknStrUNIXL (TknStrUNIXL *tknStrUNIXL, Buffer *mBuf, Ptr ptr)
                                                ;
# 55 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_mblk.x" 1
# 30 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_mblk.x"
typedef struct cmMemCb
{
   Size maxSize;
   Mem sMem;
   U32 memAllocated;
   U32 initPtr;
   U32 runPtr;
} CmMemCb;




typedef struct cmMemList CmMemList;

struct cmMemList
{
   CmMemList *next;
   CmMemList *prev;

   Size size;
};





typedef struct cmMemListCp
{
   CmMemList *first;
   CmMemList *last;
   U32 count;
   CmMemCb memCb;
}CmMemListCp;




typedef struct cmMemStatus
{
   Mem sMem;
   U32 memBlkCnt;
   Size maxBlkSize;
   Size memAllocated;
} CmMemStatus;
# 93 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_mblk.x"
extern S16 cmAllocEvnt ( Size evntSize, Size maxBlkSize, Mem *sMem, Ptr *ptr)



                                              ;

extern Void cmInitMemCp ( CmMemListCp *memCp, Size maxBlkSize, Mem *sMem )


                                                 ;







extern S16 cmGetMem ( Ptr memPtr, Size size, Ptr *allocPtr)


                                               ;

extern Void cmFreeMem ( Ptr memPtr)
                                            ;

extern Void cmGetMemStatus ( Ptr memPtr, CmMemStatus *status)

                                                       ;
# 56 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.x" 1
# 62 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.x"
# 1 "/usr/include/sys/poll.h" 1 3 4
# 25 "/usr/include/sys/poll.h" 3 4
# 1 "/usr/include/bits/poll.h" 1 3 4
# 26 "/usr/include/sys/poll.h" 2 3 4


# 1 "/usr/include/bits/sigset.h" 1 3 4
# 29 "/usr/include/sys/poll.h" 2 3 4








# 36 "/usr/include/sys/poll.h" 3 4
typedef unsigned long int nfds_t;


struct pollfd
  {
    int fd;
    short int events;
    short int revents;
  };



# 57 "/usr/include/sys/poll.h" 3 4
extern int poll (struct pollfd *__fds, nfds_t __nfds, int __timeout);
# 66 "/usr/include/sys/poll.h" 3 4
extern int ppoll (struct pollfd *__fds, nfds_t __nfds,
    const struct timespec *__timeout,
    const __sigset_t *__ss);







# 1 "/usr/include/bits/poll2.h" 1 3 4
# 24 "/usr/include/bits/poll2.h" 3 4


extern int __poll_alias (struct pollfd *__fds, nfds_t __nfds, int __timeout) __asm__ ("" "poll")
                               ;
extern int __poll_chk (struct pollfd *__fds, nfds_t __nfds, int __timeout,
         unsigned int __fdslen);
extern int __poll_chk_warn (struct pollfd *__fds, nfds_t __nfds, int __timeout, unsigned int __fdslen) __asm__ ("" "__poll_chk")


  __attribute__((__warning__ ("poll called with fds buffer too small file nfds entries")));

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
poll (struct pollfd *__fds, nfds_t __nfds, int __timeout)
{
  if (__builtin_object_size (__fds, 2 > 1) != (unsigned int) -1)
    {
      if (! __builtin_constant_p (__nfds))
 return __poll_chk (__fds, __nfds, __timeout, __builtin_object_size (__fds, 2 > 1));
      else if (__builtin_object_size (__fds, 2 > 1) / sizeof (*__fds) < __nfds)
 return __poll_chk_warn (__fds, __nfds, __timeout, __builtin_object_size (__fds, 2 > 1));
    }

  return __poll_alias (__fds, __nfds, __timeout);
}



extern int __ppoll_alias (struct pollfd *__fds, nfds_t __nfds, const struct timespec *__timeout, const __sigset_t *__ss) __asm__ ("" "ppoll")

                                          ;
extern int __ppoll_chk (struct pollfd *__fds, nfds_t __nfds,
   const struct timespec *__timeout,
   const __sigset_t *__ss, unsigned int __fdslen);
extern int __ppoll_chk_warn (struct pollfd *__fds, nfds_t __nfds, const struct timespec *__timeout, const __sigset_t *__ss, unsigned int __fdslen) __asm__ ("" "__ppoll_chk")




  __attribute__((__warning__ ("ppoll called with fds buffer too small file nfds entries")));

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
ppoll (struct pollfd *__fds, nfds_t __nfds, const struct timespec *__timeout,
       const __sigset_t *__ss)
{
  if (__builtin_object_size (__fds, 2 > 1) != (unsigned int) -1)
    {
      if (! __builtin_constant_p (__nfds))
 return __ppoll_chk (__fds, __nfds, __timeout, __ss, __builtin_object_size (__fds, 2 > 1));
      else if (__builtin_object_size (__fds, 2 > 1) / sizeof (*__fds) < __nfds)
 return __ppoll_chk_warn (__fds, __nfds, __timeout, __ss,
     __builtin_object_size (__fds, 2 > 1));
    }

  return __ppoll_alias (__fds, __nfds, __timeout, __ss);
}



# 77 "/usr/include/sys/poll.h" 2 3 4
# 63 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.x" 2
# 88 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.x"
# 1 "/usr/include/netdb.h" 1 3 4
# 32 "/usr/include/netdb.h" 3 4
# 1 "/usr/include/rpc/netdb.h" 1 3 4
# 42 "/usr/include/rpc/netdb.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h" 1 3 4
# 43 "/usr/include/rpc/netdb.h" 2 3 4



struct rpcent
{
  char *r_name;
  char **r_aliases;
  int r_number;
};

extern void setrpcent (int __stayopen) __attribute__ ((__nothrow__ , __leaf__));
extern void endrpcent (void) __attribute__ ((__nothrow__ , __leaf__));
extern struct rpcent *getrpcbyname (const char *__name) __attribute__ ((__nothrow__ , __leaf__));
extern struct rpcent *getrpcbynumber (int __number) __attribute__ ((__nothrow__ , __leaf__));
extern struct rpcent *getrpcent (void) __attribute__ ((__nothrow__ , __leaf__));


extern int getrpcbyname_r (const char *__name, struct rpcent *__result_buf,
      char *__buffer, size_t __buflen,
      struct rpcent **__result) __attribute__ ((__nothrow__ , __leaf__));

extern int getrpcbynumber_r (int __number, struct rpcent *__result_buf,
        char *__buffer, size_t __buflen,
        struct rpcent **__result) __attribute__ ((__nothrow__ , __leaf__));

extern int getrpcent_r (struct rpcent *__result_buf, char *__buffer,
   size_t __buflen, struct rpcent **__result) __attribute__ ((__nothrow__ , __leaf__));



# 33 "/usr/include/netdb.h" 2 3 4




# 1 "/usr/include/bits/siginfo.h" 1 3 4
# 24 "/usr/include/bits/siginfo.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 25 "/usr/include/bits/siginfo.h" 2 3 4







typedef union sigval
  {
    int sival_int;
    void *sival_ptr;
  } sigval_t;
# 320 "/usr/include/bits/siginfo.h" 3 4
typedef struct sigevent
  {
    sigval_t sigev_value;
    int sigev_signo;
    int sigev_notify;

    union
      {
 int _pad[((64 / sizeof (int)) - 3)];



 __pid_t _tid;

 struct
   {
     void (*_function) (sigval_t);
     pthread_attr_t *_attribute;
   } _sigev_thread;
      } _sigev_un;
  } sigevent_t;






enum
{
  SIGEV_SIGNAL = 0,

  SIGEV_NONE,

  SIGEV_THREAD,


  SIGEV_THREAD_ID = 4

};
# 38 "/usr/include/netdb.h" 2 3 4




# 1 "/usr/include/bits/netdb.h" 1 3 4
# 26 "/usr/include/bits/netdb.h" 3 4
struct netent
{
  char *n_name;
  char **n_aliases;
  int n_addrtype;
  uint32_t n_net;
};
# 43 "/usr/include/netdb.h" 2 3 4
# 53 "/usr/include/netdb.h" 3 4








extern int *__h_errno_location (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
# 92 "/usr/include/netdb.h" 3 4
extern void herror (const char *__str) __attribute__ ((__nothrow__ , __leaf__));


extern const char *hstrerror (int __err_num) __attribute__ ((__nothrow__ , __leaf__));




struct hostent
{
  char *h_name;
  char **h_aliases;
  int h_addrtype;
  int h_length;
  char **h_addr_list;



};






extern void sethostent (int __stay_open);





extern void endhostent (void);






extern struct hostent *gethostent (void);






extern struct hostent *gethostbyaddr (const void *__addr, __socklen_t __len,
          int __type);





extern struct hostent *gethostbyname (const char *__name);
# 155 "/usr/include/netdb.h" 3 4
extern struct hostent *gethostbyname2 (const char *__name, int __af);
# 167 "/usr/include/netdb.h" 3 4
extern int gethostent_r (struct hostent *__restrict __result_buf,
    char *__restrict __buf, size_t __buflen,
    struct hostent **__restrict __result,
    int *__restrict __h_errnop);

extern int gethostbyaddr_r (const void *__restrict __addr, __socklen_t __len,
       int __type,
       struct hostent *__restrict __result_buf,
       char *__restrict __buf, size_t __buflen,
       struct hostent **__restrict __result,
       int *__restrict __h_errnop);

extern int gethostbyname_r (const char *__restrict __name,
       struct hostent *__restrict __result_buf,
       char *__restrict __buf, size_t __buflen,
       struct hostent **__restrict __result,
       int *__restrict __h_errnop);

extern int gethostbyname2_r (const char *__restrict __name, int __af,
        struct hostent *__restrict __result_buf,
        char *__restrict __buf, size_t __buflen,
        struct hostent **__restrict __result,
        int *__restrict __h_errnop);
# 198 "/usr/include/netdb.h" 3 4
extern void setnetent (int __stay_open);





extern void endnetent (void);






extern struct netent *getnetent (void);






extern struct netent *getnetbyaddr (uint32_t __net, int __type);





extern struct netent *getnetbyname (const char *__name);
# 237 "/usr/include/netdb.h" 3 4
extern int getnetent_r (struct netent *__restrict __result_buf,
   char *__restrict __buf, size_t __buflen,
   struct netent **__restrict __result,
   int *__restrict __h_errnop);

extern int getnetbyaddr_r (uint32_t __net, int __type,
      struct netent *__restrict __result_buf,
      char *__restrict __buf, size_t __buflen,
      struct netent **__restrict __result,
      int *__restrict __h_errnop);

extern int getnetbyname_r (const char *__restrict __name,
      struct netent *__restrict __result_buf,
      char *__restrict __buf, size_t __buflen,
      struct netent **__restrict __result,
      int *__restrict __h_errnop);




struct servent
{
  char *s_name;
  char **s_aliases;
  int s_port;
  char *s_proto;
};






extern void setservent (int __stay_open);





extern void endservent (void);






extern struct servent *getservent (void);






extern struct servent *getservbyname (const char *__name, const char *__proto);






extern struct servent *getservbyport (int __port, const char *__proto);
# 308 "/usr/include/netdb.h" 3 4
extern int getservent_r (struct servent *__restrict __result_buf,
    char *__restrict __buf, size_t __buflen,
    struct servent **__restrict __result);

extern int getservbyname_r (const char *__restrict __name,
       const char *__restrict __proto,
       struct servent *__restrict __result_buf,
       char *__restrict __buf, size_t __buflen,
       struct servent **__restrict __result);

extern int getservbyport_r (int __port, const char *__restrict __proto,
       struct servent *__restrict __result_buf,
       char *__restrict __buf, size_t __buflen,
       struct servent **__restrict __result);




struct protoent
{
  char *p_name;
  char **p_aliases;
  int p_proto;
};






extern void setprotoent (int __stay_open);





extern void endprotoent (void);






extern struct protoent *getprotoent (void);





extern struct protoent *getprotobyname (const char *__name);





extern struct protoent *getprotobynumber (int __proto);
# 374 "/usr/include/netdb.h" 3 4
extern int getprotoent_r (struct protoent *__restrict __result_buf,
     char *__restrict __buf, size_t __buflen,
     struct protoent **__restrict __result);

extern int getprotobyname_r (const char *__restrict __name,
        struct protoent *__restrict __result_buf,
        char *__restrict __buf, size_t __buflen,
        struct protoent **__restrict __result);

extern int getprotobynumber_r (int __proto,
          struct protoent *__restrict __result_buf,
          char *__restrict __buf, size_t __buflen,
          struct protoent **__restrict __result);
# 395 "/usr/include/netdb.h" 3 4
extern int setnetgrent (const char *__netgroup);







extern void endnetgrent (void);
# 412 "/usr/include/netdb.h" 3 4
extern int getnetgrent (char **__restrict __hostp,
   char **__restrict __userp,
   char **__restrict __domainp);
# 423 "/usr/include/netdb.h" 3 4
extern int innetgr (const char *__netgroup, const char *__host,
      const char *__user, const char *__domain);







extern int getnetgrent_r (char **__restrict __hostp,
     char **__restrict __userp,
     char **__restrict __domainp,
     char *__restrict __buffer, size_t __buflen);
# 451 "/usr/include/netdb.h" 3 4
extern int rcmd (char **__restrict __ahost, unsigned short int __rport,
   const char *__restrict __locuser,
   const char *__restrict __remuser,
   const char *__restrict __cmd, int *__restrict __fd2p);
# 463 "/usr/include/netdb.h" 3 4
extern int rcmd_af (char **__restrict __ahost, unsigned short int __rport,
      const char *__restrict __locuser,
      const char *__restrict __remuser,
      const char *__restrict __cmd, int *__restrict __fd2p,
      sa_family_t __af);
# 479 "/usr/include/netdb.h" 3 4
extern int rexec (char **__restrict __ahost, int __rport,
    const char *__restrict __name,
    const char *__restrict __pass,
    const char *__restrict __cmd, int *__restrict __fd2p);
# 491 "/usr/include/netdb.h" 3 4
extern int rexec_af (char **__restrict __ahost, int __rport,
       const char *__restrict __name,
       const char *__restrict __pass,
       const char *__restrict __cmd, int *__restrict __fd2p,
       sa_family_t __af);
# 505 "/usr/include/netdb.h" 3 4
extern int ruserok (const char *__rhost, int __suser,
      const char *__remuser, const char *__locuser);
# 515 "/usr/include/netdb.h" 3 4
extern int ruserok_af (const char *__rhost, int __suser,
         const char *__remuser, const char *__locuser,
         sa_family_t __af);
# 528 "/usr/include/netdb.h" 3 4
extern int iruserok (uint32_t __raddr, int __suser,
       const char *__remuser, const char *__locuser);
# 539 "/usr/include/netdb.h" 3 4
extern int iruserok_af (const void *__raddr, int __suser,
   const char *__remuser, const char *__locuser,
   sa_family_t __af);
# 551 "/usr/include/netdb.h" 3 4
extern int rresvport (int *__alport);
# 560 "/usr/include/netdb.h" 3 4
extern int rresvport_af (int *__alport, sa_family_t __af);






struct addrinfo
{
  int ai_flags;
  int ai_family;
  int ai_socktype;
  int ai_protocol;
  socklen_t ai_addrlen;
  struct sockaddr *ai_addr;
  char *ai_canonname;
  struct addrinfo *ai_next;
};



struct gaicb
{
  const char *ar_name;
  const char *ar_service;
  const struct addrinfo *ar_request;
  struct addrinfo *ar_result;

  int __return;
  int __glibc_reserved[5];
};
# 662 "/usr/include/netdb.h" 3 4
extern int getaddrinfo (const char *__restrict __name,
   const char *__restrict __service,
   const struct addrinfo *__restrict __req,
   struct addrinfo **__restrict __pai);


extern void freeaddrinfo (struct addrinfo *__ai) __attribute__ ((__nothrow__ , __leaf__));


extern const char *gai_strerror (int __ecode) __attribute__ ((__nothrow__ , __leaf__));





extern int getnameinfo (const struct sockaddr *__restrict __sa,
   socklen_t __salen, char *__restrict __host,
   socklen_t __hostlen, char *__restrict __serv,
   socklen_t __servlen, int __flags);
# 692 "/usr/include/netdb.h" 3 4
extern int getaddrinfo_a (int __mode, struct gaicb *__list[__restrict],
     int __ent, struct sigevent *__restrict __sig);
# 703 "/usr/include/netdb.h" 3 4
extern int gai_suspend (const struct gaicb *const __list[], int __ent,
   const struct timespec *__timeout);


extern int gai_error (struct gaicb *__req) __attribute__ ((__nothrow__ , __leaf__));


extern int gai_cancel (struct gaicb *__gaicbp) __attribute__ ((__nothrow__ , __leaf__));



# 89 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.x" 2




# 92 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.x"
typedef CmIpAddr CmInetIpAddr;




typedef struct cmInetIpAddrTbl
{
   U16 count;
   CmInetIpAddr netAddr[16];
}CmInetIpAddrTbl;

typedef CmInetIpAddrTbl CmInetIpv4AddrArr;
# 113 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.x"
typedef struct cmInetIpAddrArr
{
   U8 type;
   union
   {
      CmInetIpv4AddrArr ipv4AddrArr;



   } u;

} CmInetIpAddrArr;



typedef struct cmInetCmnSockAddr
{
   U32 type;
   U32 len;
   union
   {
      struct sockaddr_in addr;



   }u;
}CmInetCmnSockAddr;
# 148 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.x"
typedef S32 CmInetFdType;
# 158 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.x"
typedef struct pollfd CmInetPollFd;

typedef struct cmInetFd
{
   CmInetFdType fd;
   U8 blocking;
   U8 type;




}CmInetFd;

typedef fd_set CmInetFdSet;
# 205 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.x"
typedef struct cmInetAddr1
{
   U16 port;
   CmInetIpAddr address;
} CmInetAddr;
typedef CmInetAddr CmInetIpv4Addr;


typedef struct cmInetMemInfo
{
   Region region;
   Pool pool;
} CmInetMemInfo;

typedef struct cmInetMCastInf
{
   CmInetIpAddr mCastAddr;
   CmInetIpAddr localAddr;
}CmInetMCastInf;



typedef struct cmInetNetAddr
{
   U8 type;
   union
   {
      CmInetIpAddr ipv4NetAddr;



   }u;
} CmInetNetAddr;
# 339 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.x"
typedef struct cmInetIpv4HdrParm
{
   TknU8 proto;
   TknU8 dfBit;
   TknU8 tos;
   TknU8 ttl;




} CmInetIpv4HdrParm;
typedef struct cmInetIpHdrParm
{
   U8 type;
   union
   {
      CmInetIpv4HdrParm hdrParmIpv4;



   } u;
} CmInetIpHdrParm;
# 372 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.x"
typedef struct cmInetFdSetInfo
{
   Bool initDone;
   Bool bigEndian;
   U16 arIdx;
   U32 numArElems;
   U8 ar[256];
} CmInetFdSetInfo;
# 556 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.x"
typedef struct iovec CmInetIovec;



typedef struct sockaddr CmInetSockAddr;
# 583 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.x"
typedef struct sockaddr_in6 CmInet6SockAddr;
typedef struct sockaddr_in CmInet4SockAddr;




typedef struct addrinfo CmInetAddrInfo;
# 599 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.x"
extern S16 cmInetSocket (U8 type, CmInetFd *sockFd, U8 protocol);
# 613 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.x"
extern S16 cmInetBind (CmInetFd *sockFd, CmInetAddr *myAddr);
extern S16 cmInetConnect (CmInetFd *sockFd, CmInetAddr *servAddr);
extern S16 cmInetListen (CmInetFd *sockFd, S16 backLog);
extern S16 cmInetAccept (CmInetFd *sockFd, CmInetAddr *fromAddr, CmInetFd *newSockFd)
                                                   ;
# 637 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_inet.x"
extern S16 cmInetRecvMsg (CmInetFd *sockFd, CmInetAddr *dstAddr, CmInetMemInfo *info, Buffer **mPtr, MsgLen *len, S32 flags)

                                                       ;


extern S16 cmInetSendDscpMsg (CmInetFd *sockFd, CmInetAddr *dstAddr, CmInetMemInfo *info, Buffer *mBuf, MsgLen *len, CmInetIpHdrParm *ipHdrParams, S16 flags)

                                                                        ;






extern S16 cmInetSendMsg (CmInetFd *sockFd, CmInetAddr *dstAddr, CmInetMemInfo *info, Buffer *mBuf, MsgLen *len, S16 flags)

                                          ;

extern S16 cmInetPeek (CmInetFd *sockFd, CmInetAddr *fromAddr, CmInetMemInfo *info, MsgLen dataPos, MsgLen dataLen, U8 *data)

                                                      ;

extern S16 cmInetPeekNew (CmInetFd *sockFd, CmInetAddr *fromAddr, CmInetMemInfo *info, MsgLen dataPos, MsgLen dataLen, U8 *data)

                                                      ;
extern S16 cmInetClose (CmInetFd *sockFd);
extern S16 cmInetShutdown (CmInetFd *sockFd, S32 howTo);
extern S16 cmInetSelect (CmInetFdSet *readFdS, CmInetFdSet *writeFdS, U32 *mSecTimeout, S16 *numFdS)
                                                             ;
extern S16 cmInetSetOpt (CmInetFd *sockFd, U32 level, U32 type, Ptr value)
                                        ;
extern S16 cmInetGetNumRead (CmInetFd *sockFd, U32 *dataLen);

extern S16 cmInetGetHostByName (S8 *hostName, CmInetIpAddrTbl *addrTbl);
extern S16 cmInetGetIpNodeByName (S8 *hostName, CmInetIpAddrArr *addrArr);
extern S16 cmInetAddr (S8 *asciiAddr, CmInetIpAddr *address);
extern S16 cmInetNtoa (CmInetIpAddr address, S8 **asciiAddr);
extern S16 cmInetPton (CmInetIpAddr *address, S8 *asciiAddr);







extern S16 cmInetFdSetInfoInit (CmInetFdSetInfo *fdSetInfo);
extern S16 cmInetGetFd (CmInetFdSetInfo *fdSetInfo, CmInetFdSet *fdSet, CmInetFdType *sockFd)
                                                   ;


extern S16 cmInetGetMemSize (S32 *size);
extern S16 cmInetInit (Void);
extern S16 cmInetDeInit (Void);
extern S16 cmInetGetSockName (CmInetFd *sockFd, CmInetAddr *locAddr);

extern S16 cmInetConvertStrToIpAddr (U16 len, U8 *val, CmInetNetAddr *address)
                                                                  ;
extern S16 cmInetAsciiToIpv4 (U8 numBytes, U8 *ipv4Addr, U16 len, U8 *val)
                                                     ;



extern S16 cmInetPoll (CmInetPollFd *pollFdArr,U32 idx,S16 *numFdS,U32 timeout);
extern S16 cmInetPollSetFd (CmInetFd *sockFd,CmInetPollFd *pollFdArr,S16 idx, U16 eventMask);
extern S16 cmInetPollFdIsSet (CmInetPollFd *pollFdArr, S16 idx, U16 eventMask);
extern S16 cmInetPollClearFdREvent (CmInetPollFd *pollFdArr, S16 idx, U16 eventMask);
extern S16 cmInetPollClearFdEvent (CmInetPollFd *pollFdArr,S16 idx, U16 eventMask);
extern S16 cmInetPollDelFd (CmInetPollFd *pollFdArr, S16 delIdx, S16 crntIdx);
extern S16 cmInetPollInitFdArr (CmInetPollFd *pollFdArr);
extern S16 cmInetNtop (U8 type,Void *address,S8 *asciiAddr,U32 len);





extern S32 cmInetGetAddrInfo (const S8* node, const S8* service, const CmInetAddrInfo *hints, CmInetAddrInfo **res)
                                                                                         ;
extern Void cmInetFreeAddrInfo (CmInetAddrInfo *res);
# 57 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_llist.x" 1
# 27 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_llist.x"
typedef struct cmLList CmLList;
typedef struct cmLListCp CmLListCp;


struct cmLList
{
   CmLList *next;
   CmLList *prev;
   U32 node;
};

struct cmLListCp
{
   CmLList *first;
   CmLList *last;
   CmLList *crnt;
   U32 count;
};

extern Void cmLListInit (CmLListCp *lList);
extern Void cmLListAdd2Head (CmLListCp *lList, CmLList *node);
extern Void cmLListAdd2Tail (CmLListCp *lList, CmLList *node);
extern Void cmLListInsCrnt (CmLListCp *lList, CmLList *node);

extern Void cmLListInsAfterCrnt (CmLListCp *lList, CmLList *node);
extern CmLList *cmLListDelFrm (CmLListCp *lList, CmLList *node);
extern Void cmLListCatLList ( CmLListCp *list1, CmLListCp *list2);
# 58 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lte.x" 1
# 63 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lte.x"
typedef U8 CmLteRbId;


typedef U16 CmLteCellId;


typedef U16 CmLteRnti;


typedef U8 CmLteRlcMode;


typedef U8 CmLteLcId;


typedef U8 CmLteLcType;


typedef U8 CmLteTrchType;


typedef U8 CmLteContResId[6];


typedef struct cmLteRlcId
{
  CmLteRbId rbId;
  U8 rbType;
  CmLteRnti ueId;
  CmLteCellId cellId;
}CmLteRlcId;


typedef struct cmLteTimingInfo
{
   U16 sfn;
   U8 subframe;
} CmLteTimingInfo;


typedef struct cmLtePdcpId
{
   CmLteCellId cellId;
   CmLteRnti ueId;
   CmLteRbId rbId;
   U8 rbType;
} CmLtePdcpId;


typedef struct cmLtePoolInfo
{
   U32 poolSize;
   U32 totAvailable;
   U32 crntUsed;
   U32 maxUsed;
} CmLtePoolInfo;

typedef struct cmLteRegionInfo
{
   U8 regionType;
   U8 regionId;
   U8 numPools;
   U8 isGenMemInfoUpdated;
   CmLtePoolInfo poolInfo[6];
}CmLteRegionInfo;

typedef struct cmLteMemInfo
{
   U8 numRegions;
   U8 idx;
   CmLteRegionInfo regInfo[5];
}CmLteMemInfo;


typedef struct cmLteCpuUtilInfo
{
   U32 avgCpuUtil;
   U32 maxCpuUtil;
}CmLteCpuUtilInfo;


typedef struct cmLteCpuInfo
{
   U8 numCores;
   CmLteCpuUtilInfo cpuUtil[10];
}CmLteCpuInfo;

typedef struct cmCpuUtilStatsInfo
{
   U32 numSamples;
   U32 maxCpuUtil;
   U32 totCpuUtil;
}CmCpuUtilStatsInfo;


typedef struct cmCpuStatsInfo
{
   U8 numCores;
   CmCpuUtilStatsInfo cpuUtil[10];
}CmCpuStatsInfo;





typedef U32 CntrSts;


typedef enum cmLteAggrLvl
{
   CM_LTE_AGGR_LVL1 = 1,
   CM_LTE_AGGR_LVL2 = 2,
   CM_LTE_AGGR_LVL4 = 3,
   CM_LTE_AGGR_LVL8 = 4
} CmLteAggrLvl;


typedef enum cmLteUeCategory
{
   CM_LTE_UE_CAT_1 = 1,
   CM_LTE_UE_CAT_2,
   CM_LTE_UE_CAT_3,
   CM_LTE_UE_CAT_4,
   CM_LTE_UE_CAT_5,
   CM_LTE_UE_CAT_6,
   CM_LTE_UE_CAT_7,
   CM_LTE_UE_CAT_8
} CmLteUeCategory;





extern S16 cmUpdateSsiMemInfo(CmLteMemInfo *mInfo);

extern S16 cmFillMemUtilizationMeas(CmLteMemInfo *memoryInfo,CmLteMemInfo *memInfo);

extern S16 cmClearMemUtilizationCounter(CmLteMemInfo *memInfo);
extern S16 UpdateSocMemInfo(U8 area , CmLteMemInfo *mInfo);

extern S16 cmFillCpuUtilizationMeas(CmLteCpuInfo *cpuMeasInfo,CmCpuStatsInfo *cpuInfo);

extern S16 cmClearCpuUtilizationCounter(CmCpuStatsInfo *cpuInfo);
extern Void UpdateSocCpuInfo(CmCpuStatsInfo *cpuInfo,U8 Idx);

extern S16 SGetRegPoolInfo(U8* numRegion, U8* numPool);


extern S16 cmPkLteRlcId ( CmLteRlcId *param, Buffer *mBuf )


  ;

extern S16 cmPkLteTimingInfo ( CmLteTimingInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkLtePdcpId ( CmLtePdcpId *param, Buffer *mBuf )


  ;


extern S16 cmUnpkLteRlcId ( CmLteRlcId *param, Buffer *mBuf )


  ;

extern S16 cmUnpkLteTimingInfo ( CmLteTimingInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkLtePdcpId ( CmLtePdcpId *param, Buffer *mBuf )


  ;



typedef struct cmTtiProc
{
 U32 totTtiProcessingTime;
 U32 numOfTti;
 U32 maxTtiProcessingTime;
 U32 ttiStretchCount;
 U32 ttiThresholdExceedCount;

 U32 phyReptTtiStretchCount;
}CmTtiProc;

extern CmTtiProc ttiProc;

extern Void cmUpdateTtiCounters(U32 ttiProcessingTime);
extern Void cmResetTtiCounters(Void);
# 59 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ckw.x" 1
# 37 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ckw.x"
typedef struct ckwLChInfo
{
   U8 lChId;

   U8 type;

}CkwLChInfo;



typedef struct ckwUmInfo
{
   struct _umDl
   {
      U8 snLen;
   }dl;
   struct _umUl
   {
      U8 snLen;

      U8 reOrdTmr;
   }ul;
}CkwUmInfo;



typedef struct ckwAmInfo
{
   struct _amDl
   {
      U16 pollRetxTmr;
      S16 pollPdu;



      S32 pollByte;

      U8 maxRetx;
   }dl;
   struct _amUl
   {
      U16 staProhTmr;
      U8 reOrdTmr;
   }ul;
}CkwAmInfo;



typedef union ckwTmInfo
{
   struct _tmDl
   {
      U32 buffSize;
   }dl;
}CkwTmInfo;



typedef struct ckwEntCfgInfo
{
   U8 cfgType;


   U8 rbId;

   U8 rbType;
   U8 qci;
   CkwLChInfo lCh[2];






   CmLteRlcMode entMode;
   U8 dir;





   S16 discardTmr;


   SpId rguSapId;

   union
   {
      CkwUmInfo umInfo;
      CkwAmInfo amInfo;
      CkwTmInfo tmInfo;
   }m;
}CkwEntCfgInfo;



typedef struct ckwCfgInfo
{
   U32 transId;
   CmLteRnti ueId;
   CmLteCellId cellId;
   U8 numEnt;

   CkwEntCfgInfo entCfg[24];

}CkwCfgInfo;



typedef struct ckwEntCfgCfmInfo
{
   U8 rbId;
   U8 rbType;
   CmStatus status;



}CkwEntCfgCfmInfo;



typedef struct ckwCfgCfmInfo
{
   U32 transId;
   CmLteRnti ueId;
   CmLteCellId cellId;
   U8 numEnt;
   CkwEntCfgCfmInfo entCfgCfm[24];

}CkwCfgCfmInfo;



typedef struct ckwUeInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
}CkwUeInfo;



typedef S16 (*CkwCfgReq) (Pst *pst, SpId spId, CkwCfgInfo *cfgInfo);
typedef S16 (*CkwCfgCfm) (Pst *pst, SuId suId, CkwCfgCfmInfo *cfmInfo);

typedef S16 (*CkwUeIdChgReq) (Pst *pst, SpId spId, U32 transId, CkwUeInfo *ueInfo, CkwUeInfo *newUeInfo)
                                                                            ;
typedef S16 (*CkwUeIdChgCfm) (Pst *pst, SuId suId, U32 transId, CkwUeInfo *ueInfo, CmStatus status)
                                                                       ;

typedef S16 (*CkwBndReq) (Pst *pst, SuId suId, SpId spId);
typedef S16 (*CkwBndCfm) (Pst *pst, SuId suId, U8 status);
typedef S16 (*CkwUbndReq) (Pst *pst, SpId spId, Reason reason);
# 206 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ckw.x"
extern S16 KwUiCkwBndReq (Pst *pst, SuId suId, SpId spId);
# 225 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ckw.x"
extern S16 KwUiCkwBndCfm (Pst *pst, SuId suId, U8 status);
# 242 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ckw.x"
extern S16 KwUiCkwUbndReq (Pst *pst, SpId spId, Reason reason);
# 263 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ckw.x"
extern S16 KwUiCkwCfgReq (Pst *pst, SpId spId, CkwCfgInfo *cfgInfo);
# 284 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ckw.x"
extern S16 KwUiCkwCfgCfm (Pst *pst, SuId suId, CkwCfgCfmInfo *cfmInfo);
# 298 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ckw.x"
extern S16 KwUiCkwUeIdChgReq (Pst *pst, SpId spId, U32 transId, CkwUeInfo *ueInfo, CkwUeInfo *newUeInfo)
                                                                            ;
# 323 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ckw.x"
extern S16 KwUiCkwUeIdChgCfm (Pst *pst, SuId suId, U32 transId, CkwUeInfo *ueInfo, CmStatus status)
                                                                       ;



extern S16 NhLiCkwBndReq ( Pst *pst, SuId suId, SpId spId)


                    ;

extern S16 NhLiCkwUbndReq ( Pst *pst, SpId spId, Reason reason)


                        ;

extern S16 NhLiCkwBndCfm (Pst *pst, SuId suId, U8 status)

                    ;

extern S16 NhLiCkwCfgReq ( Pst *pst, SpId spId, CkwCfgInfo *cfgInfo)


                              ;

extern S16 NhLiCkwCfgCfm (Pst *pst, SuId suId, CkwCfgCfmInfo* cfmInfo)

                                 ;

extern S16 NhLiCkwUeIdChgReq (Pst *pst, SpId spId, U32 transId, CkwUeInfo *ueInfo, CkwUeInfo *newUeInfo)

                                                  ;

extern S16 NhLiCkwUeIdChgCfm (Pst *pst, SuId suId, U32 transId, CkwUeInfo *ueInfo, CmStatus status)

                                             ;
# 401 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/ckw.x"
extern S16 cmPkCkwTmInfo ( CkwTmInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkCkwUmInfo ( CkwEntCfgInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkCkwAmInfo ( CkwAmInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkCkwLChInfo ( CkwLChInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkCkwEntCfgInfo ( CkwEntCfgInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkCkwCfgInfo ( CkwCfgInfo *param, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmPkCkwEntCfgCfmInfo ( CkwEntCfgCfmInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkCkwCfgCfmInfo ( CkwCfgCfmInfo *param, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmPkCkwUeInfo ( CkwUeInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkCkwBndReq ( Pst *pst, SuId suId, SpId spId )



  ;

extern S16 cmPkCkwUbndReq ( Pst *pst, SpId spId, Reason reason )



  ;

extern S16 cmPkCkwBndCfm ( Pst *pst, SuId suId, U8 status )



  ;

extern S16 cmPkCkwCfgReq ( Pst *pst, SpId spId, CkwCfgInfo *cfgInfo )



  ;

extern S16 cmPkCkwCfgCfm ( Pst *pst, SuId suId, CkwCfgCfmInfo *cfgCfmInfo )



  ;

extern S16 cmPkCkwUeIdChgReq ( Pst *pst, SpId spId, U32 transId, CkwUeInfo *ueInfo, CkwUeInfo *newUeInfo )





  ;

extern S16 cmPkCkwUeIdChgCfm ( Pst *pst, SuId suId, U32 transId, CkwUeInfo *ueInfo, CmStatus status )





  ;


extern S16 cmUnpkCkwTmInfo ( CkwTmInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCkwUmInfo ( CkwEntCfgInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCkwAmInfo ( CkwAmInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCkwLInfo ( CkwLChInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCkwCfgCfmInfo ( CkwCfgCfmInfo *param, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkCkwBndReq ( CkwBndReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkCkwLChInfo ( CkwLChInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCkwEntCfgInfo ( CkwEntCfgInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCkwCfgInfo ( CkwCfgInfo *param, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkCkwUeInfo ( CkwUeInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCkwCfgCfm ( CkwCfgCfm func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkCkwUbndReq ( CkwUbndReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkCkwBndCfm ( CkwBndCfm func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkCkwCfgReq ( CkwCfgReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkCkwEntCfgCfmInfo ( CkwEntCfgCfmInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkCkwUeIdChgReq ( CkwUeIdChgReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkCkwUeIdChgCfm ( CkwUeIdChgCfm func, Pst *pst, Buffer *mBuf )



  ;
# 60 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/kwu.x" 1
# 36 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/kwu.x"
typedef struct kwuDatReqInfo
{
   CmLteRlcId rlcId;
   U32 sduId;

   CmLteLcType lcType;
   union
   {
      CmLteTimingInfo tmg;
      CmLteRnti rnti;
   }tm;

}KwuDatReqInfo;


typedef struct kwuDatIndInfo
{
   CmLteRlcId rlcId;

   CmLteRnti tCrnti;

   Bool isOutOfSeq;
}KwuDatIndInfo;



typedef struct kwuDatCfmInfo
{
  CmLteRlcId rlcId;
  U32 numSduIds;
  U32 sduIds[1024];
}KwuDatCfmInfo;


typedef KwuDatCfmInfo KwuDiscSduInfo;


typedef struct kwuStaIndInfo
{
   CmLteRlcId rlcId;
   U32 numSdu;
   U32 sduId[100];
}KwuStaIndInfo;

typedef struct kwuFlowCntrlIndInfo
{
   CmLteRlcId rlcId;
   U32 pktAdmitCnt;
}KwuFlowCntrlIndInfo;
# 108 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/kwu.x"
typedef S16 (*KwuBndReq) (Pst *pst, SuId suId, SpId spId);
typedef S16 (*KwuBndCfm) (Pst *pst, SuId suId, U8 status);
typedef S16 (*KwuUbndReq) (Pst *pst, SuId suId, Reason reason);

typedef S16 (*KwuDatReq) (Pst *pst, SpId spId, KwuDatReqInfo* datReq, Buffer *mBuf)
                       ;
typedef S16 (*KwuDatInd) (Pst *pst, SuId suId, KwuDatIndInfo* datInd, Buffer *mBuf)
                       ;
typedef S16 (*KwuDatCfm) (Pst *pst, SuId suId, KwuDatCfmInfo* datCfm);
typedef S16 (*KwuDiscSduReq) (Pst *pst, SpId spId, KwuDiscSduInfo* discSdu);
typedef S16 (*KwuStaInd) (Pst *pst, SuId suId, KwuStaIndInfo* staInd);
typedef S16 (*KwuFlowCntrlInd)(Pst *pst, SuId suId, KwuFlowCntrlIndInfo* flowCntrlInd);
typedef S16 (*KwuReEstCmpInd) (Pst *pst, SuId suId, CmLteRlcId rlcId);





typedef S16 (*KwuDiscSduCfm) (Pst *pst, SuId suId, KwuDiscSduInfo *discCfmInfo);
# 144 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/kwu.x"
extern S16 KwUiKwuBndReq (Pst *pst, SuId suId, SpId spId)

                    ;
# 166 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/kwu.x"
extern S16 KwUiKwuBndCfm (Pst *pst, SuId suId, U8 status)

                    ;
# 184 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/kwu.x"
extern S16 KwUiKwuUbndReq (Pst *pst, SpId spId, Reason reason)

                        ;
# 202 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/kwu.x"
extern S16 KwUiKwuDatReq (Pst *pst, SpId spId, KwuDatReqInfo* datReq, Buffer *buf)


                      ;
# 220 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/kwu.x"
extern S16 KwUiKwuDatInd (Pst *pst, SuId suId, KwuDatIndInfo* datInd, Buffer *mBuf)


                       ;
# 237 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/kwu.x"
extern S16 KwUiKwuDatCfm (Pst *pst, SuId suId, KwuDatCfmInfo* datCfm)

                                ;
# 253 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/kwu.x"
extern S16 KwUiKwuDiscSduReq (Pst *pst, SpId spId, KwuDiscSduInfo* discSdu)

                                  ;
# 269 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/kwu.x"
extern S16 KwUiKwuStaInd (Pst *pst, SuId suId, KwuStaIndInfo* staInd)

                                ;
# 285 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/kwu.x"
extern S16 KwUiKwuDiscSduCfm (Pst *pst, SpId spId, KwuDiscSduInfo* discCfmSdu)

                                     ;
# 300 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/kwu.x"
extern S16 KwUiKwuFlowCntrlInd (Pst *pst, SuId suId, KwuFlowCntrlIndInfo* flowCntrlIndInfo)

                                                ;
# 321 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/kwu.x"
extern S16 KwUiKwuReEstCmpInd (Pst *pst, SuId suId, CmLteRlcId rlcId )


  ;



extern S16 NhLiKwuBndReq (Pst *pst, SuId suId, SpId spId)

                    ;

extern S16 NhLiKwuBndCfm (Pst *pst, SuId suId, U8 status)

                    ;

extern S16 NhLiKwuUbndReq (Pst *pst, SpId spId, Reason reason)

                        ;

extern S16 NhLiKwuDatReq (Pst *pst, SpId spId, KwuDatReqInfo* datReq, Buffer *buf)


                      ;

extern S16 NhLiKwuDatInd (Pst *pst, SuId suId, KwuDatIndInfo* datInd, Buffer *buf)


                      ;
# 442 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/kwu.x"
extern S16 cmPkKwuDatReqInfo ( KwuDatReqInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkKwuDatIndInfo ( KwuDatIndInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkKwuDatCfmInfo ( KwuDatCfmInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkKwuStaIndInfo ( KwuStaIndInfo *param, Buffer *mBuf )


  ;

extern S16 cmPkKwuBndReq ( Pst * pst, SuId suId, SpId spId )



  ;

extern S16 cmPkKwuUbndReq ( Pst * pst, SuId suId, Reason reason )



  ;

extern S16 cmPkKwuBndCfm ( Pst * pst, SuId suId, U8 status )



  ;

extern S16 cmPkKwuDatReq ( Pst * pst, SpId spId, KwuDatReqInfo* datReq, Buffer * mBuf )




  ;

extern S16 cmPkKwuDatInd ( Pst * pst, SuId suId, KwuDatIndInfo* datInd, Buffer * mBuf )




  ;

extern S16 cmPkKwuDatCfm ( Pst * pst, SuId suId, KwuDatCfmInfo* datCfm )



  ;

extern S16 cmPkKwuStaInd ( Pst * pst, SuId suId, KwuStaIndInfo* staInd )



  ;

extern S16 cmPkKwuReEstCmpInd ( Pst * pst, SuId suId, CmLteRlcId rlcId )



  ;

extern S16 cmPkKwuDiscSduReq ( Pst * pst, SpId spId, KwuDiscSduInfo* discSdu )



  ;
# 532 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/kwu.x"
extern S16 cmPkKwuDiscSduCfm ( Pst * pst, SpId spId, KwuDiscSduInfo* cfmSdu )



  ;

extern S16 cmPkKwuFlowCntrlInd ( Pst *pst, SuId suId, KwuFlowCntrlIndInfo *flowCntrlIndInfo )



  ;


extern S16 cmUnpkKwuDatReqInfo ( KwuDatReqInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkKwuDatIndInfo ( KwuDatIndInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkKwuDatCfmInfo ( KwuDatCfmInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkKwuStaIndInfo ( KwuStaIndInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkKwuBndReq ( KwuBndReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkKwuUbndReq ( KwuUbndReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkKwuBndCfm ( KwuBndCfm func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkKwuDatReq ( KwuDatReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkKwuDatInd ( KwuDatInd func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkKwuDatCfm ( KwuDatCfm func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkKwuStaInd ( KwuStaInd func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkKwuReEstCmpInd ( KwuReEstCmpInd func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkKwuDiscSduReq ( KwuDiscSduReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkKwuFlowCntrlInd ( KwuFlowCntrlInd func, Pst *pst, Buffer *mBuf )



  ;
# 638 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/kwu.x"
extern S16 cmUnpkKwuDiscSduCfm ( KwuDiscSduCfm func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmPkKwuFlowCntrlIndInfo ( KwuFlowCntrlIndInfo *param, Buffer *mBuf )


  ;

extern S16 cmUnpkKwuFlowCntrlIndInfo ( KwuFlowCntrlIndInfo *param, Buffer *mBuf )


  ;
# 61 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/crg.x" 1
# 37 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/crg.x"
typedef struct crgCfgTransId
{
   U8 trans[12];
} CrgCfgTransId;



typedef struct crgBwCfg
{
   U8 dlTotalBw;
   U8 ulTotalBw;
} CrgBwCfg;



typedef struct crgRachCfg
{
   U8 maxMsg3Tx;
} CrgRachCfg;
# 83 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/crg.x"
typedef struct crgCellCfg
{
   CmLteCellId cellId;
   CrgRachCfg rachCfg;
   CrgBwCfg bwCfg;

   SpId rguUlSapId;
   SpId rguDlSapId;

} CrgCellCfg;



typedef struct crgUeUlHqCfg
{
   U8 maxUlHqTx;
} CrgUeUlHqCfg;





typedef enum crgTxMode
{
   CRG_UE_TM_1 = 1,
   CRG_UE_TM_2,
   CRG_UE_TM_3,
   CRG_UE_TM_4,
   CRG_UE_TM_5,
   CRG_UE_TM_6,
   CRG_UE_TM_7
} CrgTxMode;



typedef struct crgTxModeCfg
{
   Bool pres;
   CrgTxMode tm;
}CrgTxModeCfg;


typedef struct crgUeCfg
{
   CmLteCellId cellId;
   CmLteRnti crnti;
   CrgUeUlHqCfg ueUlHqCfg;
   CrgTxModeCfg txMode;

   SpId rguUlSapId;
   SpId rguDlSapId;







} CrgUeCfg;



typedef struct crgDlLchCfg
{
   U8 dlTrchType;





} CrgDlLchCfg;



typedef struct crgUlLchCfg
{
   U8 ulTrchType;




   U8 lcgId;
} CrgUlLchCfg;




typedef struct crgLchCfg
{
   CmLteCellId cellId;
   CmLteRnti crnti;
   CmLteLcId lcId;
   CmLteLcType lcType;






   U8 dir;





   CrgDlLchCfg dlInfo;
   CrgUlLchCfg ulInfo;






} CrgLchCfg;



typedef struct crgCfg
{
   U8 cfgType;
   union crgCfgU
   {
      CrgCellCfg cellCfg;
      CrgUeCfg ueCfg;
      CrgLchCfg lchCfg;
   } u;
} CrgCfg;




typedef struct crgActvTime
{
   Bool pres;
   CmLteTimingInfo actvTime;
} CrgActvTime;




typedef struct crgCellRecfg
{
   CmLteCellId cellId;
   CrgRachCfg rachRecfg;
} CrgCellRecfg;



typedef struct crgUeRecfg
{
   CmLteCellId cellId;
   CmLteRnti oldCrnti;
   CmLteRnti newCrnti;


   CrgUeUlHqCfg ueUlHqRecfg;
   CrgTxModeCfg txMode;




} CrgUeRecfg;



typedef struct crgLchRecfg
{
   CmLteCellId cellId;
   CmLteRnti crnti;
   CmLteLcId lcId;

   struct ulRecfgS
   {
      U8 lcgId;
   } ulRecfg;

} CrgLchRecfg;



typedef struct crgRecfg
{
   U8 recfgType;
   union crgRecfgU
   {
      CrgCellRecfg cellRecfg;
      CrgUeRecfg ueRecfg;
      CrgLchRecfg lchRecfg;
   } u;

} CrgRecfg;



typedef struct crgDel
{
   U8 delType;
   union crgDelU
   {
      struct cellDelS
      {
         CmLteCellId cellId;
      } cellDel;

      struct ueDelS
      {
         CmLteCellId cellId;
         CmLteRnti crnti;
      } ueDel;

      struct lchDelS
      {
         CmLteCellId cellId;
         CmLteRnti crnti;
         CmLteLcId lcId;
         U8 dir;




      } lchDel;
   } u;
} CrgDel;



typedef struct crgRst
{
   CmLteCellId cellId;
   CmLteRnti crnti;
} CrgRst;


typedef struct crgCfgReqInfo
{
   U8 action;
   union cfgReqInfoU
   {
      CrgCfg cfgInfo;
      CrgRecfg recfgInfo;
      CrgDel delInfo;
      CrgRst rstInfo;
   } u;
} CrgCfgReqInfo;





typedef S16 (*CrgBndReq) ( Pst* pst, SuId suId, SpId spId)


                              ;


typedef S16 (*CrgBndCfm) ( Pst* pst, SuId suId, U8 status)


                                ;

typedef S16 (*CrgUbndReq) ( Pst* pst, SpId spId, Reason reason)


                                ;


typedef S16 (*CrgCfgReq) ( Pst* pst, SpId spId, CrgCfgTransId transId, CrgCfgReqInfo * cfgReqInfo)



                                    ;

typedef S16 (*CrgCfgCfm) ( Pst* pst, SuId suId, CrgCfgTransId transId, U8 status)



                                ;


extern S16 RgUiCrgBndReq ( Pst* pst, SuId suId, SpId spId )



  ;


extern S16 RgUiCrgBndCfm ( Pst* pst, SuId suId, U8 status )



  ;

extern S16 RgUiCrgUbndReq ( Pst* pst, SpId spId, Reason reason )



  ;


extern S16 RgUiCrgCfgReq ( Pst* pst, SpId spId, CrgCfgTransId transId, CrgCfgReqInfo * cfgReqInfo )




  ;

extern S16 RgUiCrgCfgCfm ( Pst* pst, SuId suId, CrgCfgTransId transId, U8 status )




  ;



extern S16 NhLiCrgBndReq ( Pst* pst, SuId suId, SpId spId )



  ;


extern S16 NhLiCrgBndCfm ( Pst* pst, SuId suId, U8 status )



  ;

extern S16 NhLiCrgUbndReq ( Pst* pst, SpId spId, Reason reason )



  ;


extern S16 NhLiCrgCfgReq ( Pst* pst, SpId spId, CrgCfgTransId transId, CrgCfgReqInfo * cfgReqInfo )




  ;

extern S16 NhLiCrgCfgCfm ( Pst* pst, SuId suId, CrgCfgTransId transId, U8 status )




  ;




extern S16 cmPkCrgBndReq ( Pst* pst, SuId suId, SpId spId )



  ;

extern S16 cmUnpkCrgBndReq ( CrgBndReq func, Pst* pst, Buffer *mBuf )



  ;


extern S16 cmPkCrgBndCfm ( Pst* pst, SuId suId, U8 status )



  ;


extern S16 cmUnpkCrgBndCfm ( CrgBndCfm func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmPkCrgUbndReq ( Pst* pst, SpId spId, Reason reason )



  ;

extern S16 cmUnpkCrgUbndReq ( CrgUbndReq func, Pst* pst, Buffer *mBuf )



  ;


extern S16 cmPkCrgCfgReq ( Pst* pst, SpId spId, CrgCfgTransId transId, CrgCfgReqInfo * cfgReqInfo )




  ;


extern S16 cmUnpkCrgCfgReq ( CrgCfgReq func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmPkCrgCfgCfm ( Pst* pst, SuId suId, CrgCfgTransId transId, U8 status )




  ;

extern S16 cmUnpkCrgCfgCfm ( CrgCfgCfm func, Pst* pst, Buffer *mBuf )



  ;
extern S16 cmPkCrgCfgTransId ( CrgCfgTransId *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCrgCfgTransId ( CrgCfgTransId *param, Buffer *mBuf )


  ;
extern S16 cmPkCrgBwCfg ( CrgBwCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCrgBwCfg ( CrgBwCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkCrgRachCfg ( CrgRachCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCrgRachCfg ( CrgRachCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkCrgCellCfg ( CrgCellCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCrgCellCfg ( CrgCellCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkCrgUeUlHqCfg ( CrgUeUlHqCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCrgUeUlHqCfg ( CrgUeUlHqCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkCrgUeCfg ( CrgUeCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCrgUeCfg ( CrgUeCfg *param, Buffer *mBuf )


  ;
# 561 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/crg.x"
extern S16 cmPkCrgDlLchCfg ( CrgDlLchCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCrgDlLchCfg ( CrgDlLchCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkCrgUlLchCfg ( CrgUlLchCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCrgUlLchCfg ( CrgUlLchCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkCrgLchCfg ( CrgLchCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCrgLchCfg ( CrgLchCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkCrgCfg ( CrgCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCrgCfg ( CrgCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkCrgActvTime ( CrgActvTime *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCrgActvTime ( CrgActvTime *param, Buffer *mBuf )


  ;
extern S16 cmPkCrgCellRecfg ( CrgCellRecfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCrgCellRecfg ( CrgCellRecfg *param, Buffer *mBuf )


  ;
extern S16 cmPkCrgUeRecfg ( CrgUeRecfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCrgUeRecfg ( CrgUeRecfg *param, Buffer *mBuf )


  ;
extern S16 cmPkCrgLchRecfg ( CrgLchRecfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCrgLchRecfg ( CrgLchRecfg *param, Buffer *mBuf )


  ;
extern S16 cmPkCrgRecfg ( CrgRecfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCrgRecfg ( CrgRecfg *param, Buffer *mBuf )


  ;
extern S16 cmPkCrgDel ( CrgDel *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCrgDel ( CrgDel *param, Buffer *mBuf )


  ;
extern S16 cmPkCrgRst ( CrgRst *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCrgRst ( CrgRst *param, Buffer *mBuf )


  ;
extern S16 cmPkCrgCfgReqInfo ( CrgCfgReqInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkCrgCfgReqInfo ( CrgCfgReqInfo *param, Buffer *mBuf )


  ;
# 62 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x" 1
# 35 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
typedef U8 CpjCipherKey;





typedef U8 CpjIntegrityKey;





typedef struct cpjRlcAm
{
   Bool statusRepReqd;
   U8 pdcpSNSize;
}CpjRlcAm;





typedef struct cpjRlcUm
{
   U8 pdcpSNSize;
}CpjRlcUm;





typedef struct cpjRlcInfo
{
   U8 dir;
   U8 mode;
   union
   {
      CpjRlcAm rlcAm;
      CpjRlcUm rlcUm;
   }m;
}CpjRlcInfo;






typedef struct cpjCipherInfo
{
   CpjCipherKey ctrlplnKey[16];

   CpjCipherKey usrplnKey[16];

   U8 algoType;





}CpjCipherInfo;





typedef struct cpjIntegInfo
{
   U8 algoType;




   CpjIntegrityKey intKey[16];
} CpjIntegInfo;





typedef struct cpjSecCfg
{
   Bool selSecAct;







   U8 isHo;
   CpjIntegInfo integInfo;
   CpjCipherInfo cipherInfo;
} CpjSecCfg;





typedef struct cpjRohcInfo
{
   U16 maxCid;
   Bool profLst[9];

}CpjRohcInfo;





typedef struct cpjHdrCompCfg
{
   Bool hdrCompUsed;
   CpjRohcInfo rohcInfo;
}CpjHdrCompCfg;





typedef struct cpjHoInfo
{
   U8 isHoPres;





   U8 snLen;
   U32 dlCount;
   U32 ulCount;
   U16 numBits;
   U8 *ulBitMap;

} CpjHoInfo;





typedef struct cpjAddCfgEnt
{
   Bool discReqd;

   Bool cfmReqd;






   CpjRlcInfo rlcInfo;
   S16 discardTmr;



   CpjHdrCompCfg hdrCompCfg;
}CpjAddCfgEnt;





typedef struct cpjModCfgEnt
{

   U8 bitFlag;


   Bool discReqd;


   Bool cfmReqd;


   CpjHdrCompCfg hdrCompCfg;
   CpjHoInfo hoInfo;
}CpjModCfgEnt;






typedef struct cpjCfgEnt
{
   U8 rbId;
   U8 cfgType;





   U8 rbType;



   union{
        CpjAddCfgEnt addCfg;

        CpjModCfgEnt modCfg;

   }m;
}CpjCfgEnt;
# 246 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
typedef struct cpjCfgReqInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   U8 numEnt;

   U8 isHo;

   SpId rlcUlSapId;
   SpId rlcDlSapId;

   CpjCfgEnt cfgEnt[10];

}CpjCfgReqInfo;





typedef struct cpjCfmEnt
{
   U8 rbId;
   U8 rbType;
   Status status;
   Reason reason;
}CpjCfmEnt;





typedef struct cpjCfgCfmInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   U8 numEnt;
   CpjCfmEnt cfmEnt[10];

}CpjCfgCfmInfo;





typedef struct cpjReEstReqInfo
{
   CmLtePdcpId pdcpId;
   U32 transId;
   U8 intKey[16];
   CpjCipherKey ctrlplnKey[16];

   CpjCipherKey usrplnKey[16];

}CpjReEstReqInfo;





typedef struct cpjDataFwdReqInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   Bool isUlDatFwdReq;
}CpjDataFwdReqInfo;






typedef struct cpjDatResumeReqInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
}CpjDatResumeReqInfo;




typedef struct cpjReEstCfmInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   Status status;




}CpjReEstCfmInfo;






typedef struct cpjSecCfgReqInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   CpjSecCfg secCfg;
}CpjSecCfgReqInfo;





typedef struct cpjSecCfgCfmInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   Status status;
   Reason reason;
}CpjSecCfgCfmInfo;





typedef struct cpjUeInfo
{
   CmLteCellId cellId;
   CmLteRnti ueId;
}CpjUeInfo;





typedef struct cpjCountReqInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
} CpjCountReqInfo;





typedef struct cpjCountInfo
{
   U8 rbId;
   U8 dir;
   U32 ulCount;
   U32 dlCount;
} CpjCountInfo;




typedef struct cpjCountCfmInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   U8 numRb;
   CpjCountInfo countInfo[12];
   Status status;
   Reason reason;
} CpjCountCfmInfo;






typedef struct cpjSduStaReqInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
} CpjSduStaReqInfo;





typedef struct cpjUlSduStaInfo
{
   U16 numBits;
   U8 *ulBitMap;
# 444 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
   U32 count;

} CpjUlSduStaInfo;





typedef struct cpjDlSduStaInfo
{
   U32 count;

} CpjDlSduStaInfo;





typedef struct cpjSduStaInfo
{
   U8 rbId;
   U8 dir;
   U8 snLen;
   CpjUlSduStaInfo ulSduStaInfo;
   CpjDlSduStaInfo dlSduStaInfo;
} CpjSduStaInfo;





typedef struct cpjSduStaCfmInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   U8 numRb;
   CpjSduStaInfo sduStaInfo[12];

   Status status;
   Reason reason;
} CpjSduStaCfmInfo;





typedef struct cpjDatResumeCfmInfo
{
   CmLteRnti ueId;
   CmLteCellId cellId;
   U32 transId;
   Status status;
   Reason reason;
} CpjDatResumeCfmInfo;





typedef struct cpjAsKeyInfo{
           U8 intgAlgoType;

           U8 ciphAlgoType;

           U8 secKey[32];

}CpjAsKeyInfo;


typedef struct cpjKenbStarInfo{
           U16 dlCarrFreq;
           U16 physCellId;
           U8 secKey[32];

}CpjKenbStarInfo;


typedef struct cpjNhKeyInfo{
           U16 dlCarrFreq;
           U16 physCellId;
           U8 secKey[32];

}CpjNhKeyInfo;

typedef struct cpjKdfReqInfo {
   U8 keyDerType;


   union
   {
      CpjAsKeyInfo kEnbInf;

      CpjKenbStarInfo kEnbStarInf;


      CpjNhKeyInfo nhKeyInf;


   } u;
} CpjKdfReqInfo;



typedef struct cpjCfgTransId {
   U8 trans[9];
} CpjCfgTransId;
# 563 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
typedef struct cpjAskeyCfmInfo{
          U8 intKey[32];

          U8 upCiphKey[32];

          U8 cpCiphKey[32];

}CpjAskeyCfmInfo;


typedef struct cpjKenbStarCfmInfo{
           U8 secKey[32];

}CpjKenbStarCfmInfo;


typedef struct cpjNhKeyCfmInfo{
           U8 secKey[32];

}CpjNhKeyCfmInfo;

typedef struct cpjKdfCfmInfo {
   U8 keyDerType;


   union
   {
      CpjAskeyCfmInfo kEnbInf;
      CpjKenbStarCfmInfo kEnbStarInf;

      CpjNhKeyCfmInfo nhKeyInf;

   } u;
} CpjKdfCfmInfo;
# 605 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
typedef S16 (*CpjBndReq) (Pst *pst, SuId suId, SpId spId);
typedef S16 (*CpjBndCfm) (Pst *pst, SuId suId, U8 status);
typedef S16 (*CpjUbndReq) (Pst *pst, SpId spId, Reason reason);
typedef S16 (*CpjCfgReq) (Pst *pst, SpId spId, CpjCfgReqInfo *cfgReq);
typedef S16 (*CpjCfgCfm) (Pst *pst, SuId suId, CpjCfgCfmInfo *cfgCfm);
typedef S16 (*CpjReEstReq) (Pst *pst, SpId spId, CpjReEstReqInfo *reEstReq);
typedef S16 (*CpjReEstCfm) (Pst *pst, SuId suId, CpjReEstCfmInfo *reEstCfm);
typedef S16 (*CpjSecCfgReq) (Pst *pst, SpId spId, CpjSecCfgReqInfo *secCfgReq);
typedef S16 (*CpjSecCfgCfm) (Pst *pst, SuId suId, CpjSecCfgCfmInfo *secCfgCfm);
typedef S16 (*CpjUeIdChgReq) (Pst *pst, SpId spId, U32 transId, CpjUeInfo *oldUeInfo, CpjUeInfo *newUeInfo)

                                                          ;
typedef S16 (*CpjUeIdChgCfm) (Pst *pst, SuId suId, U32 transId, CpjUeInfo *ueInfo, CmStatus status)
                                                                         ;
typedef S16 (*CpjCountReq) (Pst *pst, SpId spId, CpjCountReqInfo *countReq);
typedef S16 (*CpjCountCfm) (Pst *pst, SuId suId, CpjCountCfmInfo *countCfm);
typedef S16 (*CpjSduStaReq) (Pst *pst, SpId spId, CpjSduStaReqInfo *staReq);
typedef S16 (*CpjSduStaCfm) (Pst *pst, SuId suId, CpjSduStaCfmInfo *staCfm);
typedef S16 (*CpjDataFwdReq) (Pst *pst, SpId spId, CpjDataFwdReqInfo *dataFwdReq);
typedef S16 (*CpjDatResumeReq) (Pst *pst, SpId spId, CpjDatResumeReqInfo *DatResumeReq)
                        ;
typedef S16 (*CpjDatResumeCfm) (Pst *pst, SuId suId, CpjDatResumeCfmInfo *dataResCfm);
typedef S16 (*CpjKdfReq) ( Pst* pst, SpId spId, CpjCfgTransId transId, CpjKdfReqInfo* cfgReqInfo)



                                    ;


typedef S16 (*CpjKdfCfm) ( Pst* pst, SuId suId, CpjCfgTransId transId, CpjKdfCfmInfo* kdfCfmInfo, U8 status)




                                ;
# 666 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
extern S16 PjUiCpjBndReq (Pst *pst, SuId suId, SpId spId);
# 687 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
extern S16 PjUiCpjBndCfm (Pst *pst, SuId suId, U8 status);
# 704 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
extern S16 PjUiCpjUbndReq (Pst *pst, SpId spId, Reason reason);
# 721 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
extern S16 PjUiCpjCfgReq (Pst *pst, SpId spId, CpjCfgReqInfo *cfgReq);
# 736 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
extern S16 PjUiCpjCfgCfm (Pst *pst, SuId suId, CpjCfgCfmInfo *cfgCfm);
# 752 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
extern S16 PjUiCpjReEstReq (Pst *pst, SpId spId, CpjReEstReqInfo *reEstReq);
# 766 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
extern S16 PjUiCpjReEstCfm (Pst *pst, SuId suId, CpjReEstCfmInfo *reEstCfm);
# 784 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
extern S16 PjUiCpjSecCfgReq (Pst *pst, SpId spId, CpjSecCfgReqInfo *secCfgReq)
                                      ;
# 800 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
extern S16 PjUiCpjSecCfgCfm (Pst *pst, SuId suId, CpjSecCfgCfmInfo *secCfgCfm)
                                      ;
# 817 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
extern S16 PjUiCpjUeIdChgReq (Pst *pst, SpId spId, U32 transId, CpjUeInfo *oldUeInfo, CpjUeInfo *newUeInfo)
                                                                               ;
# 842 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
extern S16 PjUiCpjUeIdChgCfm (Pst *pst, SuId suId, U32 transId, CpjUeInfo *ueInfo, CmStatus status)
                                                                      ;
# 858 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
extern S16 PjUiCpjCountReq (Pst *pst, SpId spId, CpjCountReqInfo *countReq);
# 874 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
extern S16 PjUiCpjCountCfm (Pst *pst, SuId suId, CpjCountCfmInfo *countCfm);
# 891 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
extern S16 PjUiCpjSduStaReq (Pst *pst, SpId spId, CpjSduStaReqInfo *staReq);
# 907 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
extern S16 PjUiCpjSduStaCfm (Pst *pst, SuId suId, CpjSduStaCfmInfo *staCfm);
# 918 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
extern S16 PjUiCpjDatResumeReq (Pst *pst, SpId spId, CpjDatResumeReqInfo *dataResReq)
                      ;

extern S16 PjUiCpjDatForwardReq ( Pst *pst, SpId spId, CpjDataFwdReqInfo *dataFwdReq)
                                        ;

extern S16 PjUiCpjDatResumeCfm ( Pst *pst, SuId suId, CpjDatResumeCfmInfo *datResCfm)
                     ;
# 939 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
extern S16 PjUiCpjKdfCfm ( Pst* pst, SuId suId, CpjCfgTransId transId, CpjKdfCfmInfo *kdfCfmInf, U8 status )





  ;

extern S16 PjUiCpjKdfReq ( Pst* pst, SpId spId, CpjCfgTransId transId, CpjKdfReqInfo *kdfReqInfo )




  ;

extern S16 cmPkCpjKdfReq ( Pst* pst, SpId spId, CpjCfgTransId transId, CpjKdfReqInfo *kdfReqInfo )




  ;



extern S16 cmUnpkCpjKdfReq ( CpjKdfReq func, Pst* pst, Buffer *mBuf )



  ;

extern S16 cmPkCpjKdfCfm ( Pst* pst, SuId suId, CpjCfgTransId transId, CpjKdfCfmInfo *kdfCfmInfo, U8 status )





  ;

extern S16 cmUnpkCpjKdfCfm ( CpjKdfCfm func, Pst* pst, Buffer *mBuf )



  ;
# 1027 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
extern S16 NhLiCpjBndReq (Pst *, SuId, SpId);

extern S16 NhLiCpjUbndReq (Pst *, SpId, Reason);

extern S16 NhLiCpjBndCfm (Pst *, SuId, U8);

extern S16 NhLiCpjCfgReq (Pst *, SpId , CpjCfgReqInfo *);

extern S16 NhLiCpjCfgCfm (Pst *, SuId , CpjCfgCfmInfo *);

extern S16 NhLiCpjSecCfgReq (Pst *, SpId , CpjSecCfgReqInfo *);

extern S16 NhLiCpjSecCfgCfm (Pst *, SuId , CpjSecCfgCfmInfo *);

extern S16 NhLiCpjUeIdChgReq (Pst *, SpId , U32 , CpjUeInfo *, CpjUeInfo *);

extern S16 NhLiCpjUeIdChgCfm (Pst *, SuId , U32, CpjUeInfo *, CmStatus);

extern S16 NhLiCpjReEstReq (Pst *pst, SpId spId, CpjReEstReqInfo *reEstReq);

extern S16 NhLiCpjReEstCfm ( Pst *pst, SuId suId, CpjReEstCfmInfo *cfmInfo);

extern S16 NhLiCpjCountReq (Pst *, SpId , CpjCountReqInfo *);

extern S16 NhLiCpjCountCfm (Pst *, SuId , CpjCountCfmInfo *);

extern S16 NhLiCpjSduStaReq (Pst *, SpId , CpjSduStaReqInfo *);

extern S16 NhLiCpjSduStaCfm (Pst *, SuId , CpjSduStaCfmInfo *);

extern S16 NhLiCpjDatResumeCfm (Pst *, SuId , CpjDatResumeCfmInfo *);

extern S16 NhLiCpjStartDataFwdReq (Pst *post, SpId spId, CpjDataFwdReqInfo *pdcpDataFwdReq )
                           ;
extern S16 NhLiCpjDatResumeReq (Pst *post, SpId spId, CpjDatResumeReqInfo *pdcpDatResumeReq )
                             ;
# 1073 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cpj.x"
 S16 cmPkCpjBndReq ( Pst * pst, SuId suId, SpId spId )



  ;
 S16 cmUnpkCpjBndReq ( CpjBndReq func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjBndCfm ( Pst * pst, SuId suId, U8 status )



  ;
 S16 cmUnpkCpjBndCfm ( CpjBndCfm func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjUbndReq ( Pst * pst, SpId spId, Reason reason )



  ;
 S16 cmUnpkCpjUbndReq ( CpjUbndReq func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjCfgReq ( Pst * pst, SpId spId, CpjCfgReqInfo * cfgReq )



  ;
 S16 cmUnpkCpjCfgReq ( CpjCfgReq func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjCfgCfm ( Pst * pst, SuId suId, CpjCfgCfmInfo * cfgCfm )



  ;
 S16 cmUnpkCpjCfgCfm ( CpjCfgCfm func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjReEstReq ( Pst * pst, SpId spId, CpjReEstReqInfo * reEstReq )



  ;
 S16 cmUnpkCpjReEstReq ( CpjReEstReq func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjReEstCfm ( Pst * pst, SuId suId, CpjReEstCfmInfo * reEstCfm )



  ;
 S16 cmUnpkCpjReEstCfm ( CpjReEstCfm func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjSecCfgReq ( Pst * pst, SpId spId, CpjSecCfgReqInfo * secCfgReq )



  ;
 S16 cmUnpkCpjSecCfgReq ( CpjSecCfgReq func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjSecCfgCfm ( Pst * pst, SuId suId, CpjSecCfgCfmInfo * secCfgCfm )



  ;
 S16 cmUnpkCpjSecCfgCfm ( CpjSecCfgCfm func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjUeIdChgReq ( Pst * pst, SpId spId, U32 transId, CpjUeInfo * oldUeInfo, CpjUeInfo * newUeInfo )





  ;
 S16 cmUnpkCpjUeIdChgReq ( CpjUeIdChgReq func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjUeIdChgCfm ( Pst * pst, SuId suId, U32 transId, CpjUeInfo * ueInfo, CmStatus status )





  ;
 S16 cmUnpkCpjUeIdChgCfm ( CpjUeIdChgCfm func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjCountReq ( Pst * pst, SpId spId, CpjCountReqInfo * countReq )



  ;
 S16 cmUnpkCpjCountReq ( CpjCountReq func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjCountCfm ( Pst * pst, SuId suId, CpjCountCfmInfo * countCfm )



  ;
 S16 cmUnpkCpjCountCfm ( CpjCountCfm func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjSduStaReq ( Pst * pst, SpId spId, CpjSduStaReqInfo * staReq )



  ;
 S16 cmUnpkCpjSduStaReq ( CpjSduStaReq func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjStartDataFwdReq ( Pst * pst, SpId spId, CpjDataFwdReqInfo * dataFwdReq )



  ;
 S16 cmUnpkCpjStartDataFwdReq ( CpjDataFwdReq func, Pst *pst, Buffer *mBuf )



  ;

 S16 cmPkCpjDatResumeReq ( Pst * pst, SpId spId, CpjDatResumeReqInfo * dataFwdReq )



  ;

 S16 cmUnpkCpjDatResumeReq ( CpjDatResumeReq func, Pst *pst, Buffer *mBuf )



  ;

 S16 cmPkCpjSduStaCfm ( Pst * pst, SuId suId, CpjSduStaCfmInfo * staCfm )



  ;
 S16 cmUnpkCpjSduStaCfm ( CpjSduStaCfm func, Pst *pst, Buffer *mBuf )



  ;
 S16 cmPkCpjRlcAm ( CpjRlcAm *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjRlcAm ( CpjRlcAm *param, Buffer *mBuf )


  ;
 S16 cmPkCpjRlcUm ( CpjRlcUm *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjRlcUm ( CpjRlcUm *param, Buffer *mBuf )


  ;
 S16 cmPkCpjRlcInfo ( CpjRlcInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjRlcInfo ( CpjRlcInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjCipherInfo ( CpjCipherInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjCipherInfo ( CpjCipherInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjIntegInfo ( CpjIntegInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjIntegInfo ( CpjIntegInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjSecCfg ( CpjSecCfg *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjSecCfg ( CpjSecCfg *param, Buffer *mBuf )


  ;
 S16 cmPkCpjRohcInfo ( CpjRohcInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjRohcInfo ( CpjRohcInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjHdrCompCfg ( CpjHdrCompCfg *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjHdrCompCfg ( CpjHdrCompCfg *param, Buffer *mBuf )


  ;
 S16 cmPkCpjHoInfo ( Pst *pst, CpjHoInfo *param, Buffer *mBuf )



  ;
 S16 cmUnpkCpjHoInfo ( Pst *pst, CpjHoInfo *param, Buffer *mBuf )



  ;
 S16 cmPkCpjCfgEnt ( Pst *pst, CpjCfgEnt *param, Buffer *mBuf )



  ;
 S16 cmUnpkCpjCfgEnt ( Pst *pst, CpjCfgEnt *param, Buffer *mBuf )



  ;
 S16 cmPkCpjAddCfgEnt ( CpjAddCfgEnt *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjAddCfgEnt ( CpjAddCfgEnt *param, Buffer *mBuf )


  ;
 S16 cmPkCpjModCfgEnt ( Pst *pst, CpjModCfgEnt *param, Buffer *mBuf )



  ;
 S16 cmUnpkCpjModCfgEnt ( Pst *pst, CpjModCfgEnt *param, Buffer *mBuf )



  ;
 S16 cmPkCpjCfgReqInfo ( Pst *pst, CpjCfgReqInfo *param, Buffer *mBuf )



  ;
 S16 cmUnpkCpjCfgReqInfo ( Pst *pst, CpjCfgReqInfo *param, Buffer *mBuf )



  ;
 S16 cmPkCpjCfmEnt ( CpjCfmEnt *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjCfmEnt ( CpjCfmEnt *param, Buffer *mBuf )


  ;
 S16 cmPkCpjCfgCfmInfo ( CpjCfgCfmInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjCfgCfmInfo ( CpjCfgCfmInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjReEstReqInfo ( CpjReEstReqInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjReEstReqInfo ( CpjReEstReqInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjReEstCfmInfo ( CpjReEstCfmInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjReEstCfmInfo ( CpjReEstCfmInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjSecCfgReqInfo ( CpjSecCfgReqInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjSecCfgReqInfo ( CpjSecCfgReqInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjSecCfgCfmInfo ( CpjSecCfgCfmInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjSecCfgCfmInfo ( CpjSecCfgCfmInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjUeInfo ( CpjUeInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjUeInfo ( CpjUeInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjCountReqInfo ( CpjCountReqInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjCountReqInfo ( CpjCountReqInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjCountInfo ( CpjCountInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjCountInfo ( CpjCountInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjCountCfmInfo ( CpjCountCfmInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjCountCfmInfo ( CpjCountCfmInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjSduStaReqInfo ( CpjSduStaReqInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjSduStaReqInfo ( CpjSduStaReqInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjStartDataFwdReqInfo ( CpjDataFwdReqInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjStartDataFwdReqInfo ( CpjDataFwdReqInfo *param, Buffer *mBuf )


  ;

 S16 cmPkCpjDatResumeReqInfo ( CpjDatResumeReqInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjDatResumeReqInfo ( CpjDatResumeReqInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjUlSduStaInfo ( Pst *pst, CpjUlSduStaInfo *param, Buffer *mBuf )



  ;
 S16 cmUnpkCpjUlSduStaInfo ( Pst *pst, CpjUlSduStaInfo *param, Buffer *mBuf )



  ;
 S16 cmPkCpjDlSduStaInfo ( CpjDlSduStaInfo *param, Buffer *mBuf )


  ;
 S16 cmUnpkCpjDlSduStaInfo ( CpjDlSduStaInfo *param, Buffer *mBuf )


  ;
 S16 cmPkCpjSduStaInfo ( Pst *pst, CpjSduStaInfo *param, Buffer *mBuf )



  ;
 S16 cmUnpkCpjSduStaInfo ( Pst *pst, CpjSduStaInfo *param, Buffer *mBuf )



  ;
 S16 cmPkCpjSduStaCfmInfo ( Pst *pst, CpjSduStaCfmInfo *param, Buffer *mBuf )



  ;
 S16 cmUnpkCpjSduStaCfmInfo ( Pst *pst, CpjSduStaCfmInfo *param, Buffer *mBuf )



  ;
 S16 cmUnpkCpjDatResumeCfmInfo ( Pst *pst, CpjDatResumeCfmInfo *param, Buffer *mBuf )



  ;

 S16 cmPkCpjDataResCfmInfo ( Pst *pst, CpjDatResumeCfmInfo *param, Buffer *mBuf )



  ;

 S16 cmUnpkCpjDatResumeCfm ( CpjDatResumeCfm func, Pst *pst, Buffer *mBuf )



  ;

 S16 cmPkCpjDatResumeCfm ( Pst * pst, SuId suId, CpjDatResumeCfmInfo * dataResCfm )



  ;

 S16 cmUnpkCpjDatResumeCfm ( CpjDatResumeCfm func, Pst *pst, Buffer *mBuf )



  ;

 S16 cmUnpkCpjNhKeyCfmInfo ( CpjNhKeyCfmInfo *param, Buffer *mBuf )


  ;

 S16 cmUnpkCpjKenbStarCfmInfo ( CpjKenbStarCfmInfo *param, Buffer *mBuf )


  ;

 S16 cmUnpkCpjAskeyCfmInfo ( CpjAskeyCfmInfo *param, Buffer *mBuf )


  ;

 S16 cmUnpkCpjKdfCfmInfo ( CpjKdfCfmInfo *param, Buffer *mBuf )


  ;

 S16 cmUnpkCpjCfgTransId ( CpjCfgTransId *param, Buffer *mBuf )


  ;

 S16 cmPkCpjNhKeyInfo ( CpjNhKeyInfo *param, Buffer *mBuf )


  ;

 S16 cmPkCpjKenbStarInfo ( CpjKenbStarInfo *param, Buffer *mBuf )


  ;

 S16 cmPkCpjAskeyInfo ( CpjAsKeyInfo *param, Buffer *mBuf )


  ;

 S16 cmPkCpjKdfReqInfo ( CpjKdfReqInfo *param, Buffer *mBuf )


  ;

 S16 cmPkCpjCfgTransId ( CpjCfgTransId *param, Buffer *mBuf )


  ;

 S16 cmUnpkCpjNhKeyInfo ( CpjNhKeyInfo *param, Buffer *mBuf )


  ;

 S16 cmUnpkCpjKenbStarInfo ( CpjKenbStarInfo *param, Buffer *mBuf )


  ;

 S16 cmUnpkCpjAskeyInfo ( CpjAsKeyInfo *param, Buffer *mBuf )


  ;

 S16 cmUnpkCpjKdfReqInfo ( CpjKdfReqInfo *param, Buffer *mBuf )


  ;

 S16 cmPkCpjNhKeyCfmInfo ( CpjNhKeyCfmInfo *param, Buffer *mBuf )


  ;

 S16 cmPkCpjKenbStarCfmInfo ( CpjKenbStarCfmInfo *param, Buffer *mBuf )


  ;

 S16 cmPkCpjAskeyCfmInfo ( CpjAskeyCfmInfo *param, Buffer *mBuf )


  ;

 S16 cmPkCpjKdfCfmInfo ( CpjKdfCfmInfo *param, Buffer *mBuf )


  ;
# 63 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.x" 1
# 31 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.x"
typedef U32 PjuSduId;
typedef U32 PjuSduLen;





typedef struct pjuDatCfmSta
{
   PjuSduId sduId;
   U8 status;




}PjuDatCfmSta;





typedef struct pjuDatCfmInfo
{
   U16 numSdus;
   PjuDatCfmSta cfmSta[1024];
}PjuDatCfmInfo;




typedef struct pjuStaIndInfo
{
   U8 cause;
}PjuStaIndInfo;




typedef struct pjuDatFwdInfo
{
   PjuSduId sduId;
   U16 sn;
   Buffer *sdu;

}PjuDatFwdInfo;






typedef struct pjuDatFwdReqInfo
{
   U8 dir;

   U16 numSdus;
   PjuDatFwdInfo *datFwdInfo;
   Bool isLastDatFwdInd;
}PjuDatFwdReqInfo;





typedef PjuDatFwdReqInfo PjuDatFwdIndInfo;
typedef struct pjuDatReqInfo
{
  SpId spId;
  CmLtePdcpId pdcpId;
  PjuSduId sduId;
}PjuDatReqInfo;
typedef struct pjuDatIndInfo
{
  SuId suId;
  CmLtePdcpId pdcpId;
}PjuDatIndInfo;
# 116 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.x"
typedef S16 (*PjuBndReq) ( Pst *, SuId, SpId )



          ;

typedef S16 (*PjuBndCfm) ( Pst *, SuId, U8 )



          ;

typedef S16 (*PjuUbndReq) ( Pst *, SpId, Reason )



          ;

typedef S16 (*PjuDatReq) ( Pst *, SpId, CmLtePdcpId *, PjuSduId, Buffer * )





          ;
# 153 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.x"
typedef S16 (*PjuDatCfm) ( Pst *, SuId, CmLtePdcpId *, PjuDatCfmInfo * )




          ;

typedef S16 (*PjuDatInd) ( Pst *, SuId, CmLtePdcpId *, Buffer * )




          ;

typedef S16 (*PjuStaInd) ( Pst *, SuId, CmLtePdcpId *, PjuStaIndInfo *, Buffer * )





          ;

typedef S16 (*PjuDatFwdReq) ( Pst *, SpId, CmLtePdcpId *, PjuDatFwdReqInfo * )




          ;

typedef S16 (*PjuDatFwdInd) ( Pst *, SuId, CmLtePdcpId *, PjuDatFwdIndInfo * )




          ;
# 212 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.x"
extern S16 PjUiPjuBndReq ( Pst* , SuId , SpId);
# 233 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.x"
extern S16 PjUiPjuBndCfm ( Pst*, SuId, U8);
# 252 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.x"
extern S16 PjUiPjuUbndReq ( Pst*, SpId, Reason);
# 272 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.x"
extern S16 PjUiPjuDatReq ( Pst*, SpId, CmLtePdcpId *, PjuSduId, Buffer*);
# 292 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.x"
extern S16 PjUiPjuDatCfm (Pst*, SuId, CmLtePdcpId *, PjuDatCfmInfo *);
# 309 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.x"
extern S16 PjUiPjuDatInd (Pst*, SuId, CmLtePdcpId *, Buffer*);
# 327 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.x"
extern S16 PjUiPjuStaInd (Pst*, SuId, CmLtePdcpId *, PjuStaIndInfo *, Buffer *);
# 348 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.x"
extern S16 PjUiPjuDatFwdReq (Pst*, SpId, CmLtePdcpId *, PjuDatFwdReqInfo *);
# 367 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.x"
extern S16 PjUiPjuDatFwdInd (Pst*, SuId, CmLtePdcpId *, PjuDatFwdIndInfo *);
# 444 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.x"
extern S16 PxLiPjuBndReq ( Pst *, SuId, SpId )



         ;

extern S16 PxLiPjuUbndReq ( Pst *, SuId, Reason )



         ;

extern S16 PxLiPjuDatReq ( Pst *, SpId, CmLtePdcpId *, PjuSduId, Buffer * )





         ;

extern S16 PxLiPjuBndCfm ( Pst *, SuId, U8 )



         ;

extern S16 PxLiPjuDatInd ( Pst *, SuId, CmLtePdcpId *, Buffer * )




         ;

extern S16 PxLiPjuDatCfm ( Pst *, SuId , CmLtePdcpId *, PjuDatCfmInfo * )




         ;

extern S16 PxLiPjuStaInd ( Pst*, SuId, CmLtePdcpId *, PjuStaIndInfo * , Buffer * )





         ;

extern S16 PxLiPjuDatFwdReq ( Pst *, SpId, CmLtePdcpId *, PjuDatFwdReqInfo * )




         ;


extern S16 PxLiPjuDatFwdInd ( Pst *, SuId, CmLtePdcpId *, PjuDatFwdIndInfo * )




         ;





extern S16 NhLiPjuBndReq ( Pst *, SuId, SpId )



         ;

extern S16 NhLiPjuUbndReq ( Pst *, SuId, Reason )



         ;

extern S16 NhLiPjuDatReq ( Pst *, SpId, CmLtePdcpId *, PjuSduId, Buffer * )





         ;

extern S16 NhLiPjuBndCfm ( Pst *, SuId, U8 )



         ;

extern S16 NhLiPjuDatInd ( Pst *, SuId, CmLtePdcpId *, Buffer * )




         ;

extern S16 NhLiPjuDatCfm ( Pst *, SuId , CmLtePdcpId *, PjuDatCfmInfo * )




         ;

extern S16 NhLiPjuStaInd ( Pst*, SuId, CmLtePdcpId *, PjuStaIndInfo * , Buffer * )





         ;

extern S16 NhLiPjuDatFwdReq ( Pst *, SpId, CmLtePdcpId *, PjuDatFwdReqInfo * )




         ;


extern S16 NhLiPjuDatFwdInd ( Pst *, SuId, CmLtePdcpId *, PjuDatFwdIndInfo * )




         ;
# 582 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.x"
extern S16 cmPkPjuBndReq ( Pst* pst, SpId suId, SuId spId )



  ;
extern S16 cmUnpkPjuBndReq ( PjuBndReq func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmPkPjuBndCfm ( Pst* pst, SuId suId, U8 status )



  ;
extern S16 cmUnpkPjuBndCfm ( PjuBndCfm func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmPkPjuUbndReq ( Pst* pst, SpId spId, Reason reason )



  ;
extern S16 cmUnpkPjuUbndReq ( PjuUbndReq func, Pst *pst, Buffer *mBuf )



  ;
# 621 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.x"
extern S16 cmPkPjuDatReq ( Pst* pst, SpId spId, CmLtePdcpId * pdcpId, PjuSduId sduId, Buffer * mBuf )





  ;
# 645 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.x"
extern S16 cmUnpkPjuDatReq ( PjuDatReq func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmPkPjuDatCfm ( Pst* pst, SuId suId, CmLtePdcpId * pdcpId, PjuDatCfmInfo * datCfm )




  ;
extern S16 cmUnpkPjuDatCfm ( PjuDatCfm func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmPkPjuDatInd ( Pst* pst, SuId suId, CmLtePdcpId * pdcpId, Buffer * mBuf )




  ;
extern S16 cmUnpkPjuDatInd ( PjuDatInd func, Pst *pst, Buffer *mBuf )



  ;
# 688 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/pju.x"
extern S16 cmPkPjuStaInd ( Pst* pst, SuId suId, CmLtePdcpId * pdcpId, PjuStaIndInfo * staInd, Buffer *buff )





  ;
extern S16 cmUnpkPjuStaInd ( PjuStaInd func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmPkPjuDatFwdReq ( Pst* pst, SpId spId, CmLtePdcpId * pdcpId, PjuDatFwdReqInfo * datFwdReq )




  ;
extern S16 cmUnpkPjuDatFwdReq ( PjuDatFwdReq func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmPkPjuDatFwdInd ( Pst* pst, SuId suId, CmLtePdcpId * pdcpId, PjuDatFwdIndInfo * datFwdInd )




  ;
extern S16 cmUnpkPjuDatFwdInd ( PjuDatFwdInd func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmPkPjuDatCfmInfoSta ( PjuDatCfmSta *param, Buffer *mBuf )


  ;
extern S16 cmUnpkPjuDatCfmInfoSta ( PjuDatCfmSta *param, Buffer *mBuf )


  ;
extern S16 cmPkPjuDatCfmInfo ( PjuDatCfmInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkPjuDatCfmInfo ( PjuDatCfmInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkPjuStaIndInfo ( PjuStaIndInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkPjuStaIndInfo ( PjuStaIndInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkPjuDatFwdReqInfo ( PjuDatFwdReqInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkPjuDatFwdReqInfo ( Pst *pst, PjuDatFwdReqInfo *param, Buffer *mBuf )



  ;
extern S16 cmPkPjuDatFwdInfo ( PjuDatFwdInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkPjuDatFwdInfo ( PjuDatFwdInfo *param, Buffer *mBuf )


  ;
# 64 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x" 1
# 42 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu_asn.x" 1
# 21 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu_asn.x"
typedef enum enumNhuPHICH_Configphich_Duration
{
 NhuPHICH_Configphich_DurationnormalEnum,
 NhuPHICH_Configphich_DurationextendedEnum
} EnumNhuPHICH_Configphich_Duration;
typedef TknU32 NhuPHICH_Configphich_Duration;


typedef enum enumNhuPHICH_Configphich_Resource
{
 NhuPHICH_Configphich_ResourceoneSixthEnum,
 NhuPHICH_Configphich_ResourcehalfEnum,
 NhuPHICH_Configphich_ResourceoneEnum,
 NhuPHICH_Configphich_ResourcetwoEnum
} EnumNhuPHICH_Configphich_Resource;
typedef TknU32 NhuPHICH_Configphich_Resource;

typedef struct NhuPHICH_Config
{
 TknPres pres;
 NhuPHICH_Configphich_Duration phich_Duration;
 NhuPHICH_Configphich_Resource phich_Resource;
} NhuPHICH_Config;


typedef enum enumNhuMasterInfoBlockdl_Bandwidth
{
 NhuMasterInfoBlockdl_Bandwidthn6Enum,
 NhuMasterInfoBlockdl_Bandwidthn15Enum,
 NhuMasterInfoBlockdl_Bandwidthn25Enum,
 NhuMasterInfoBlockdl_Bandwidthn50Enum,
 NhuMasterInfoBlockdl_Bandwidthn75Enum,
 NhuMasterInfoBlockdl_Bandwidthn100Enum
} EnumNhuMasterInfoBlockdl_Bandwidth;
typedef TknU32 NhuMasterInfoBlockdl_Bandwidth;


typedef TknStrBSXL NhuMasterInfoBlocksystemFrameNumber;

typedef TknStrBSXL NhuMasterInfoBlockspare;
typedef struct NhuMasterInfoBlock
{
 TknPres pres;
 NhuMasterInfoBlockdl_Bandwidth dl_Bandwidth;
 NhuPHICH_Config phich_Config;
 NhuMasterInfoBlocksystemFrameNumber systemFrameNumber;
 NhuMasterInfoBlockspare spare;
} NhuMasterInfoBlock;


typedef NhuMasterInfoBlock NhuBCCH_BCH_MsgTyp;
typedef struct NhuBCCH_BCH_Msg
{
 TknPres pres;
 NhuBCCH_BCH_MsgTyp message;
} NhuBCCH_BCH_Msg;


typedef enum enumNhuAC_BarringConfigac_BarringFactor
{
 NhuAC_BarringConfigac_BarringFactorp00Enum,
 NhuAC_BarringConfigac_BarringFactorp05Enum,
 NhuAC_BarringConfigac_BarringFactorp10Enum,
 NhuAC_BarringConfigac_BarringFactorp15Enum,
 NhuAC_BarringConfigac_BarringFactorp20Enum,
 NhuAC_BarringConfigac_BarringFactorp25Enum,
 NhuAC_BarringConfigac_BarringFactorp30Enum,
 NhuAC_BarringConfigac_BarringFactorp40Enum,
 NhuAC_BarringConfigac_BarringFactorp50Enum,
 NhuAC_BarringConfigac_BarringFactorp60Enum,
 NhuAC_BarringConfigac_BarringFactorp70Enum,
 NhuAC_BarringConfigac_BarringFactorp75Enum,
 NhuAC_BarringConfigac_BarringFactorp80Enum,
 NhuAC_BarringConfigac_BarringFactorp85Enum,
 NhuAC_BarringConfigac_BarringFactorp90Enum,
 NhuAC_BarringConfigac_BarringFactorp95Enum
} EnumNhuAC_BarringConfigac_BarringFactor;
typedef TknU32 NhuAC_BarringConfigac_BarringFactor;


typedef enum enumNhuAC_BarringConfigac_BarringTime
{
 NhuAC_BarringConfigac_BarringTimes4Enum,
 NhuAC_BarringConfigac_BarringTimes8Enum,
 NhuAC_BarringConfigac_BarringTimes16Enum,
 NhuAC_BarringConfigac_BarringTimes32Enum,
 NhuAC_BarringConfigac_BarringTimes64Enum,
 NhuAC_BarringConfigac_BarringTimes128Enum,
 NhuAC_BarringConfigac_BarringTimes256Enum,
 NhuAC_BarringConfigac_BarringTimes512Enum
} EnumNhuAC_BarringConfigac_BarringTime;
typedef TknU32 NhuAC_BarringConfigac_BarringTime;


typedef TknStrBSXL NhuAC_BarringConfigac_BarringForSpecialAC;
typedef struct NhuAC_BarringConfig
{
 TknPres pres;
 NhuAC_BarringConfigac_BarringFactor ac_BarringFactor;
 NhuAC_BarringConfigac_BarringTime ac_BarringTime;
 NhuAC_BarringConfigac_BarringForSpecialAC ac_BarringForSpecialAC;
} NhuAC_BarringConfig;


typedef enum enumNhuPowerRampingParamspowerRampingStep
{
 NhuPowerRampingParamspowerRampingStepdB0Enum,
 NhuPowerRampingParamspowerRampingStepdB2Enum,
 NhuPowerRampingParamspowerRampingStepdB4Enum,
 NhuPowerRampingParamspowerRampingStepdB6Enum
} EnumNhuPowerRampingParamspowerRampingStep;
typedef TknU32 NhuPowerRampingParamspowerRampingStep;


typedef enum enumNhuPowerRampingParamspreambleInitReceivedTgtPower
{
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_120Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_118Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_116Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_114Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_112Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_110Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_108Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_106Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_104Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_102Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_100Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_98Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_96Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_94Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_92Enum,
 NhuPowerRampingParamspreambleInitReceivedTgtPowerdBm_90Enum
} EnumNhuPowerRampingParamspreambleInitReceivedTgtPower;
typedef TknU32 NhuPowerRampingParamspreambleInitReceivedTgtPower;

typedef struct NhuPowerRampingParams
{
 TknPres pres;
 NhuPowerRampingParamspowerRampingStep powerRampingStep;
 NhuPowerRampingParamspreambleInitReceivedTgtPower preambleInitReceivedTgtPower;
} NhuPowerRampingParams;


typedef enum enumNhuPreambleTransMax
{
 NhuPreambleTransMaxn3Enum,
 NhuPreambleTransMaxn4Enum,
 NhuPreambleTransMaxn5Enum,
 NhuPreambleTransMaxn6Enum,
 NhuPreambleTransMaxn7Enum,
 NhuPreambleTransMaxn8Enum,
 NhuPreambleTransMaxn10Enum,
 NhuPreambleTransMaxn20Enum,
 NhuPreambleTransMaxn50Enum,
 NhuPreambleTransMaxn100Enum,
 NhuPreambleTransMaxn200Enum
} EnumNhuPreambleTransMax;
typedef TknU32 NhuPreambleTransMax;


typedef enum enumNhuRACH_ConfigCmnpreambleInfonumberOfRA_Preambles
{
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn4Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn8Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn12Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn16Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn20Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn24Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn28Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn32Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn36Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn40Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn44Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn48Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn52Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn56Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn60Enum,
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preamblesn64Enum
} EnumNhuRACH_ConfigCmnpreambleInfonumberOfRA_Preambles;
typedef TknU32 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preambles;


typedef enum enumNhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupA
{
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn4Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn8Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn12Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn16Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn20Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn24Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn28Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn32Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn36Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn40Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn44Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn48Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn52Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn56Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupAn60Enum
} EnumNhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupA;
typedef TknU32 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupA;


typedef enum enumNhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupA
{
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupAb56Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupAb144Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupAb208Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupAb256Enum
} EnumNhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupA;
typedef TknU32 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupA;


typedef enum enumNhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupB
{
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBminusinfinityEnum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB0Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB5Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB8Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB10Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB12Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB15Enum,
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupBdB18Enum
} EnumNhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupB;
typedef TknU32 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupB;

typedef struct NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfig
{
 TknPres pres;
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigsizeOfRA_PreamblesGroupA sizeOfRA_PreamblesGroupA;
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessageSizeGroupA messageSizeGroupA;
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfigmessagePowerOffsetGroupB messagePowerOffsetGroupB;
} NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfig;

typedef struct NhuRACH_ConfigCmnpreambleInfo
{
 TknPres pres;
 NhuRACH_ConfigCmnpreambleInfonumberOfRA_Preambles numberOfRA_Preambles;
 NhuRACH_ConfigCmnpreambleInfopreamblesGroupAConfig preamblesGroupAConfig;
} NhuRACH_ConfigCmnpreambleInfo;


typedef enum enumNhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSize
{
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf2Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf3Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf4Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf5Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf6Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf7Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf8Enum,
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSizesf10Enum
} EnumNhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSize;
typedef TknU32 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSize;


typedef enum enumNhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimer
{
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf8Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf16Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf24Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf32Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf40Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf48Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf56Enum,
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimersf64Enum
} EnumNhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimer;
typedef TknU32 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimer;

typedef struct NhuRACH_ConfigCmnra_SupervisionInfo
{
 TknPres pres;
 NhuPreambleTransMax preambleTransMax;
 NhuRACH_ConfigCmnra_SupervisionInfora_RspWindowSize ra_RspWindowSize;
 NhuRACH_ConfigCmnra_SupervisionInfomac_ContentionResolutionTimer mac_ContentionResolutionTimer;
} NhuRACH_ConfigCmnra_SupervisionInfo;


typedef TknU32 NhuRACH_ConfigCmnmaxHARQ_Msg3Tx;

typedef struct NhuRACH_ConfigCmn
{
 TknPres pres;
 NhuRACH_ConfigCmnpreambleInfo preambleInfo;
 NhuPowerRampingParams powerRampingParams;
 NhuRACH_ConfigCmnra_SupervisionInfo ra_SupervisionInfo;
 NhuRACH_ConfigCmnmaxHARQ_Msg3Tx maxHARQ_Msg3Tx;
} NhuRACH_ConfigCmn;


typedef enum enumNhuBCCH_ConfigmodificationPeriodCoeff
{
 NhuBCCH_ConfigmodificationPeriodCoeffn2Enum,
 NhuBCCH_ConfigmodificationPeriodCoeffn4Enum,
 NhuBCCH_ConfigmodificationPeriodCoeffn8Enum,
 NhuBCCH_ConfigmodificationPeriodCoeffn16Enum
} EnumNhuBCCH_ConfigmodificationPeriodCoeff;
typedef TknU32 NhuBCCH_ConfigmodificationPeriodCoeff;

typedef struct NhuBCCH_Config
{
 TknPres pres;
 NhuBCCH_ConfigmodificationPeriodCoeff modificationPeriodCoeff;
} NhuBCCH_Config;


typedef enum enumNhuPCCH_ConfigdefaultPagCycle
{
 NhuPCCH_ConfigdefaultPagCyclerf32Enum,
 NhuPCCH_ConfigdefaultPagCyclerf64Enum,
 NhuPCCH_ConfigdefaultPagCyclerf128Enum,
 NhuPCCH_ConfigdefaultPagCyclerf256Enum
} EnumNhuPCCH_ConfigdefaultPagCycle;
typedef TknU32 NhuPCCH_ConfigdefaultPagCycle;


typedef enum enumNhuPCCH_ConfignB
{
 NhuPCCH_ConfignBfourTEnum,
 NhuPCCH_ConfignBtwoTEnum,
 NhuPCCH_ConfignBoneTEnum,
 NhuPCCH_ConfignBhalfTEnum,
 NhuPCCH_ConfignBquarterTEnum,
 NhuPCCH_ConfignBoneEighthTEnum,
 NhuPCCH_ConfignBoneSixteenthTEnum,
 NhuPCCH_ConfignBoneThirtySecondTEnum
} EnumNhuPCCH_ConfignB;
typedef TknU32 NhuPCCH_ConfignB;

typedef struct NhuPCCH_Config
{
 TknPres pres;
 NhuPCCH_ConfigdefaultPagCycle defaultPagCycle;
 NhuPCCH_ConfignB nB;
} NhuPCCH_Config;


typedef TknU32 NhuPRACH_ConfigInfoprach_ConfigIdx;


typedef TknU8 NhuPRACH_ConfigInfohighSpeedFlag;


typedef TknU32 NhuPRACH_ConfigInfozeroCorrelationZoneConfig;


typedef TknU32 NhuPRACH_ConfigInfoprach_FreqOffset;

typedef struct NhuPRACH_ConfigInfo
{
 TknPres pres;
 NhuPRACH_ConfigInfoprach_ConfigIdx prach_ConfigIdx;
 NhuPRACH_ConfigInfohighSpeedFlag highSpeedFlag;
 NhuPRACH_ConfigInfozeroCorrelationZoneConfig zeroCorrelationZoneConfig;
 NhuPRACH_ConfigInfoprach_FreqOffset prach_FreqOffset;
} NhuPRACH_ConfigInfo;


typedef TknU32 NhuPRACH_ConfigSIBrootSequenceIdx;

typedef struct NhuPRACH_ConfigSIB
{
 TknPres pres;
 NhuPRACH_ConfigSIBrootSequenceIdx rootSequenceIdx;
 NhuPRACH_ConfigInfo prach_ConfigInfo;
} NhuPRACH_ConfigSIB;


typedef TknS32 NhuPDSCH_ConfigCmnreferenceSignalPower;


typedef TknU32 NhuPDSCH_ConfigCmnp_b;

typedef struct NhuPDSCH_ConfigCmn
{
 TknPres pres;
 NhuPDSCH_ConfigCmnreferenceSignalPower referenceSignalPower;
 NhuPDSCH_ConfigCmnp_b p_b;
} NhuPDSCH_ConfigCmn;


typedef TknU8 NhuUL_ReferenceSignalsPUSCHgroupHoppingEnabled;


typedef TknU32 NhuUL_ReferenceSignalsPUSCHgroupAssignmentPUSCH;


typedef TknU8 NhuUL_ReferenceSignalsPUSCHsequenceHoppingEnabled;


typedef TknU32 NhuUL_ReferenceSignalsPUSCHcyclicShift;

typedef struct NhuUL_ReferenceSignalsPUSCH
{
 TknPres pres;
 NhuUL_ReferenceSignalsPUSCHgroupHoppingEnabled groupHoppingEnabled;
 NhuUL_ReferenceSignalsPUSCHgroupAssignmentPUSCH groupAssignmentPUSCH;
 NhuUL_ReferenceSignalsPUSCHsequenceHoppingEnabled sequenceHoppingEnabled;
 NhuUL_ReferenceSignalsPUSCHcyclicShift cyclicShift;
} NhuUL_ReferenceSignalsPUSCH;


typedef TknU32 NhuPUSCH_ConfigCmnpusch_ConfigBasicn_SB;


typedef enum enumNhuPUSCH_ConfigCmnpusch_ConfigBasichoppingMode
{
 NhuPUSCH_ConfigCmnpusch_ConfigBasichoppingModeinterSubFrameEnum,
 NhuPUSCH_ConfigCmnpusch_ConfigBasichoppingModeintraAndInterSubFrameEnum
} EnumNhuPUSCH_ConfigCmnpusch_ConfigBasichoppingMode;
typedef TknU32 NhuPUSCH_ConfigCmnpusch_ConfigBasichoppingMode;


typedef TknU32 NhuPUSCH_ConfigCmnpusch_ConfigBasicpusch_HoppingOffset;


typedef TknU8 NhuPUSCH_ConfigCmnpusch_ConfigBasicenable64QAM;

typedef struct NhuPUSCH_ConfigCmnpusch_ConfigBasic
{
 TknPres pres;
 NhuPUSCH_ConfigCmnpusch_ConfigBasicn_SB n_SB;
 NhuPUSCH_ConfigCmnpusch_ConfigBasichoppingMode hoppingMode;
 NhuPUSCH_ConfigCmnpusch_ConfigBasicpusch_HoppingOffset pusch_HoppingOffset;
 NhuPUSCH_ConfigCmnpusch_ConfigBasicenable64QAM enable64QAM;
} NhuPUSCH_ConfigCmnpusch_ConfigBasic;

typedef struct NhuPUSCH_ConfigCmn
{
 TknPres pres;
 NhuPUSCH_ConfigCmnpusch_ConfigBasic pusch_ConfigBasic;
 NhuUL_ReferenceSignalsPUSCH ul_ReferenceSignalsPUSCH;
} NhuPUSCH_ConfigCmn;


typedef enum enumNhuPUCCH_ConfigCmndeltaPUCCH_Shift
{
 NhuPUCCH_ConfigCmndeltaPUCCH_Shiftds1Enum,
 NhuPUCCH_ConfigCmndeltaPUCCH_Shiftds2Enum,
 NhuPUCCH_ConfigCmndeltaPUCCH_Shiftds3Enum
} EnumNhuPUCCH_ConfigCmndeltaPUCCH_Shift;
typedef TknU32 NhuPUCCH_ConfigCmndeltaPUCCH_Shift;


typedef TknU32 NhuPUCCH_ConfigCmnnRB_CQI;


typedef TknU32 NhuPUCCH_ConfigCmnnCS_AN;


typedef TknU32 NhuPUCCH_ConfigCmnn1PUCCH_AN;

typedef struct NhuPUCCH_ConfigCmn
{
 TknPres pres;
 NhuPUCCH_ConfigCmndeltaPUCCH_Shift deltaPUCCH_Shift;
 NhuPUCCH_ConfigCmnnRB_CQI nRB_CQI;
 NhuPUCCH_ConfigCmnnCS_AN nCS_AN;
 NhuPUCCH_ConfigCmnn1PUCCH_AN n1PUCCH_AN;
} NhuPUCCH_ConfigCmn;


typedef enum enumNhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfig
{
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw0Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw1Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw2Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw3Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw4Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw5Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw6Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfigbw7Enum
} EnumNhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfig;
typedef TknU32 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfig;


typedef enum enumNhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfig
{
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc0Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc1Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc2Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc3Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc4Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc5Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc6Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc7Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc8Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc9Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc10Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc11Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc12Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc13Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc14Enum,
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfigsc15Enum
} EnumNhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfig;
typedef TknU32 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfig;


typedef TknU8 NhuSoundingRS_UL_ConfigCmnsetupackNackSRS_SimultaneousTransmission;


typedef enum enumNhuSoundingRS_UL_ConfigCmnsetupsrs_MaxUpPts
{
 NhuSoundingRS_UL_ConfigCmnsetupsrs_MaxUpPtstrueEnum
} EnumNhuSoundingRS_UL_ConfigCmnsetupsrs_MaxUpPts;
typedef TknU32 NhuSoundingRS_UL_ConfigCmnsetupsrs_MaxUpPts;

typedef struct NhuSoundingRS_UL_ConfigCmnsetup
{
 TknPres pres;
 NhuSoundingRS_UL_ConfigCmnsetupsrs_BandwidthConfig srs_BandwidthConfig;
 NhuSoundingRS_UL_ConfigCmnsetupsrs_SubfrmConfig srs_SubfrmConfig;
 NhuSoundingRS_UL_ConfigCmnsetupackNackSRS_SimultaneousTransmission ackNackSRS_SimultaneousTransmission;
 NhuSoundingRS_UL_ConfigCmnsetupsrs_MaxUpPts srs_MaxUpPts;
} NhuSoundingRS_UL_ConfigCmnsetup;

typedef struct NhuSoundingRS_UL_ConfigCmn
{
 TknU8 choice;
 union {
  NhuSoundingRS_UL_ConfigCmnsetup setup;
 } val;
} NhuSoundingRS_UL_ConfigCmn;


typedef enum enumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1
{
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1deltaF_2Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1deltaF0Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1deltaF2Enum
} EnumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1;
typedef TknU32 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1;


typedef enum enumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1b
{
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1bdeltaF1Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1bdeltaF3Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1bdeltaF5Enum
} EnumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1b;
typedef TknU32 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1b;


typedef enum enumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2
{
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2deltaF_2Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2deltaF0Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2deltaF1Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2deltaF2Enum
} EnumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2;
typedef TknU32 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2;


typedef enum enumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2a
{
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2adeltaF_2Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2adeltaF0Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2adeltaF2Enum
} EnumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2a;
typedef TknU32 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2a;


typedef enum enumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2b
{
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2bdeltaF_2Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2bdeltaF0Enum,
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2bdeltaF2Enum
} EnumNhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2b;
typedef TknU32 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2b;

typedef struct NhuDeltaFLst_PUCCH
{
 TknPres pres;
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1 deltaF_PUCCH_Format1;
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format1b deltaF_PUCCH_Format1b;
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2 deltaF_PUCCH_Format2;
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2a deltaF_PUCCH_Format2a;
 NhuDeltaFLst_PUCCHdeltaF_PUCCH_Format2b deltaF_PUCCH_Format2b;
} NhuDeltaFLst_PUCCH;


typedef TknS32 NhuUlnkPowerCntrlCmnp0_NominalPUSCH;


typedef enum enumNhuUlnkPowerCntrlCmnalpha
{
 NhuUlnkPowerCntrlCmnalphaal0Enum,
 NhuUlnkPowerCntrlCmnalphaal04Enum,
 NhuUlnkPowerCntrlCmnalphaal05Enum,
 NhuUlnkPowerCntrlCmnalphaal06Enum,
 NhuUlnkPowerCntrlCmnalphaal07Enum,
 NhuUlnkPowerCntrlCmnalphaal08Enum,
 NhuUlnkPowerCntrlCmnalphaal09Enum,
 NhuUlnkPowerCntrlCmnalphaal1Enum
} EnumNhuUlnkPowerCntrlCmnalpha;
typedef TknU32 NhuUlnkPowerCntrlCmnalpha;


typedef TknS32 NhuUlnkPowerCntrlCmnp0_NominalPUCCH;


typedef TknS32 NhuUlnkPowerCntrlCmndeltaPreambleMsg3;

typedef struct NhuUlnkPowerCntrlCmn
{
 TknPres pres;
 NhuUlnkPowerCntrlCmnp0_NominalPUSCH p0_NominalPUSCH;
 NhuUlnkPowerCntrlCmnalpha alpha;
 NhuUlnkPowerCntrlCmnp0_NominalPUCCH p0_NominalPUCCH;
 NhuDeltaFLst_PUCCH deltaFLst_PUCCH;
 NhuUlnkPowerCntrlCmndeltaPreambleMsg3 deltaPreambleMsg3;
} NhuUlnkPowerCntrlCmn;


typedef enum enumNhuUL_CyclicPrefixLength
{
 NhuUL_CyclicPrefixLengthlen1Enum,
 NhuUL_CyclicPrefixLengthlen2Enum
} EnumNhuUL_CyclicPrefixLength;
typedef TknU32 NhuUL_CyclicPrefixLength;


typedef enum enumNhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10
{
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10deltaF_1Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10deltaF0Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10deltaF1Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10deltaF2Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10deltaF3Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10deltaF4Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10deltaF5Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10deltaF6Enum
} EnumNhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10;
typedef TknU32 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10;


typedef enum enumNhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format1bCS_r10
{
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format1bCS_r10deltaF1Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format1bCS_r10deltaF2Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format1bCS_r10spare2Enum,
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format1bCS_r10spare1Enum
} EnumNhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format1bCS_r10;
typedef TknU32 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format1bCS_r10;

typedef struct NhuUlnkPowerCntrlCmn_v1020
{
 TknPres pres;
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format3_r10 deltaF_PUCCH_Format3_r10;
 NhuUlnkPowerCntrlCmn_v1020deltaF_PUCCH_Format1bCS_r10 deltaF_PUCCH_Format1bCS_r10;
} NhuUlnkPowerCntrlCmn_v1020;

typedef struct NhuRadioResourceConfigCmnSIBextaddgrp_1
{
 TknPres pres;
 NhuUlnkPowerCntrlCmn_v1020 uplinkPowerCntrlCmn_v1020;
} NhuRadioResourceConfigCmnSIBextaddgrp_1;

typedef struct NhuRadioResourceConfigCmnSIB
{
 TknPres pres;
 NhuRACH_ConfigCmn rach_ConfigCmn;
 NhuBCCH_Config bcch_Config;
 NhuPCCH_Config pcch_Config;
 NhuPRACH_ConfigSIB prach_Config;
 NhuPDSCH_ConfigCmn pdsch_ConfigCmn;
 NhuPUSCH_ConfigCmn pusch_ConfigCmn;
 NhuPUCCH_ConfigCmn pucch_ConfigCmn;
 NhuSoundingRS_UL_ConfigCmn soundingRS_UL_ConfigCmn;
 NhuUlnkPowerCntrlCmn uplinkPowerCntrlCmn;
 NhuUL_CyclicPrefixLength ul_CyclicPrefixLength;
 NhuRadioResourceConfigCmnSIBextaddgrp_1 extaddgrp_1;
} NhuRadioResourceConfigCmnSIB;


typedef enum enumNhuUE_TmrsAndConstst300
{
 NhuUE_TmrsAndConstst300ms100Enum,
 NhuUE_TmrsAndConstst300ms200Enum,
 NhuUE_TmrsAndConstst300ms300Enum,
 NhuUE_TmrsAndConstst300ms400Enum,
 NhuUE_TmrsAndConstst300ms600Enum,
 NhuUE_TmrsAndConstst300ms1000Enum,
 NhuUE_TmrsAndConstst300ms1500Enum,
 NhuUE_TmrsAndConstst300ms2000Enum
} EnumNhuUE_TmrsAndConstst300;
typedef TknU32 NhuUE_TmrsAndConstst300;


typedef enum enumNhuUE_TmrsAndConstst301
{
 NhuUE_TmrsAndConstst301ms100Enum,
 NhuUE_TmrsAndConstst301ms200Enum,
 NhuUE_TmrsAndConstst301ms300Enum,
 NhuUE_TmrsAndConstst301ms400Enum,
 NhuUE_TmrsAndConstst301ms600Enum,
 NhuUE_TmrsAndConstst301ms1000Enum,
 NhuUE_TmrsAndConstst301ms1500Enum,
 NhuUE_TmrsAndConstst301ms2000Enum
} EnumNhuUE_TmrsAndConstst301;
typedef TknU32 NhuUE_TmrsAndConstst301;


typedef enum enumNhuUE_TmrsAndConstst310
{
 NhuUE_TmrsAndConstst310ms0Enum,
 NhuUE_TmrsAndConstst310ms50Enum,
 NhuUE_TmrsAndConstst310ms100Enum,
 NhuUE_TmrsAndConstst310ms200Enum,
 NhuUE_TmrsAndConstst310ms500Enum,
 NhuUE_TmrsAndConstst310ms1000Enum,
 NhuUE_TmrsAndConstst310ms2000Enum
} EnumNhuUE_TmrsAndConstst310;
typedef TknU32 NhuUE_TmrsAndConstst310;


typedef enum enumNhuUE_TmrsAndConstsn310
{
 NhuUE_TmrsAndConstsn310n1Enum,
 NhuUE_TmrsAndConstsn310n2Enum,
 NhuUE_TmrsAndConstsn310n3Enum,
 NhuUE_TmrsAndConstsn310n4Enum,
 NhuUE_TmrsAndConstsn310n6Enum,
 NhuUE_TmrsAndConstsn310n8Enum,
 NhuUE_TmrsAndConstsn310n10Enum,
 NhuUE_TmrsAndConstsn310n20Enum
} EnumNhuUE_TmrsAndConstsn310;
typedef TknU32 NhuUE_TmrsAndConstsn310;


typedef enum enumNhuUE_TmrsAndConstst311
{
 NhuUE_TmrsAndConstst311ms1000Enum,
 NhuUE_TmrsAndConstst311ms3000Enum,
 NhuUE_TmrsAndConstst311ms5000Enum,
 NhuUE_TmrsAndConstst311ms10000Enum,
 NhuUE_TmrsAndConstst311ms15000Enum,
 NhuUE_TmrsAndConstst311ms20000Enum,
 NhuUE_TmrsAndConstst311ms30000Enum
} EnumNhuUE_TmrsAndConstst311;
typedef TknU32 NhuUE_TmrsAndConstst311;


typedef enum enumNhuUE_TmrsAndConstsn311
{
 NhuUE_TmrsAndConstsn311n1Enum,
 NhuUE_TmrsAndConstsn311n2Enum,
 NhuUE_TmrsAndConstsn311n3Enum,
 NhuUE_TmrsAndConstsn311n4Enum,
 NhuUE_TmrsAndConstsn311n5Enum,
 NhuUE_TmrsAndConstsn311n6Enum,
 NhuUE_TmrsAndConstsn311n8Enum,
 NhuUE_TmrsAndConstsn311n10Enum
} EnumNhuUE_TmrsAndConstsn311;
typedef TknU32 NhuUE_TmrsAndConstsn311;

typedef struct NhuUE_TmrsAndConsts
{
 TknPres pres;
 NhuUE_TmrsAndConstst300 t300;
 NhuUE_TmrsAndConstst301 t301;
 NhuUE_TmrsAndConstst310 t310;
 NhuUE_TmrsAndConstsn310 n310;
 NhuUE_TmrsAndConstst311 t311;
 NhuUE_TmrsAndConstsn311 n311;
} NhuUE_TmrsAndConsts;


typedef TknU32 NhuARFCN_ValueEUTRA;


typedef TknU32 NhuAdditionalSpectrumEmission;


typedef enum enumNhuMBSFN_SubfrmConfigradioframeAllocnPeriod
{
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriodn1Enum,
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriodn2Enum,
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriodn4Enum,
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriodn8Enum,
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriodn16Enum,
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriodn32Enum
} EnumNhuMBSFN_SubfrmConfigradioframeAllocnPeriod;
typedef TknU32 NhuMBSFN_SubfrmConfigradioframeAllocnPeriod;


typedef TknU32 NhuMBSFN_SubfrmConfigradioframeAllocnOffset;


typedef TknStrBSXL NhuMBSFN_SubfrmConfigsubframeAllocnoneFrame;

typedef TknStrBSXL NhuMBSFN_SubfrmConfigsubframeAllocnfourFrames;
typedef struct NhuMBSFN_SubfrmConfigsubframeAllocn
{
 TknU8 choice;
 union {
  NhuMBSFN_SubfrmConfigsubframeAllocnoneFrame oneFrame;
  NhuMBSFN_SubfrmConfigsubframeAllocnfourFrames fourFrames;
 } val;
} NhuMBSFN_SubfrmConfigsubframeAllocn;

typedef struct NhuMBSFN_SubfrmConfig
{
 TknPres pres;
 NhuMBSFN_SubfrmConfigradioframeAllocnPeriod radioframeAllocnPeriod;
 NhuMBSFN_SubfrmConfigradioframeAllocnOffset radioframeAllocnOffset;
 NhuMBSFN_SubfrmConfigsubframeAllocn subframeAllocn;
} NhuMBSFN_SubfrmConfig;

typedef struct NhuMBSFN_SubfrmConfigLst
{
 TknU16 noComp;
 NhuMBSFN_SubfrmConfig *member;
}NhuMBSFN_SubfrmConfigLst;


typedef enum enumNhuTimeAlignmentTimer
{
 NhuTimeAlignmentTimersf500Enum,
 NhuTimeAlignmentTimersf750Enum,
 NhuTimeAlignmentTimersf1280Enum,
 NhuTimeAlignmentTimersf1920Enum,
 NhuTimeAlignmentTimersf2560Enum,
 NhuTimeAlignmentTimersf5120Enum,
 NhuTimeAlignmentTimersf10240Enum,
 NhuTimeAlignmentTimerinfinityEnum
} EnumNhuTimeAlignmentTimer;
typedef TknU32 NhuTimeAlignmentTimer;


typedef TknU8 NhuSysInfoBlockTyp2ac_BarringInfoac_BarringForEmergency;

typedef struct NhuSysInfoBlockTyp2ac_BarringInfo
{
 TknPres pres;
 NhuSysInfoBlockTyp2ac_BarringInfoac_BarringForEmergency ac_BarringForEmergency;
 NhuAC_BarringConfig ac_BarringForMO_Signalling;
 NhuAC_BarringConfig ac_BarringForMO_Data;
} NhuSysInfoBlockTyp2ac_BarringInfo;


typedef enum enumNhuSysInfoBlockTyp2freqInfoul_Bandwidth
{
 NhuSysInfoBlockTyp2freqInfoul_Bandwidthn6Enum,
 NhuSysInfoBlockTyp2freqInfoul_Bandwidthn15Enum,
 NhuSysInfoBlockTyp2freqInfoul_Bandwidthn25Enum,
 NhuSysInfoBlockTyp2freqInfoul_Bandwidthn50Enum,
 NhuSysInfoBlockTyp2freqInfoul_Bandwidthn75Enum,
 NhuSysInfoBlockTyp2freqInfoul_Bandwidthn100Enum
} EnumNhuSysInfoBlockTyp2freqInfoul_Bandwidth;
typedef TknU32 NhuSysInfoBlockTyp2freqInfoul_Bandwidth;

typedef struct NhuSysInfoBlockTyp2freqInfo
{
 TknPres pres;
 NhuARFCN_ValueEUTRA ul_CarrierFreq;
 NhuSysInfoBlockTyp2freqInfoul_Bandwidth ul_Bandwidth;
 NhuAdditionalSpectrumEmission additionalSpectrumEmission;
} NhuSysInfoBlockTyp2freqInfo;


typedef TknStrOSXL NhuSysInfoBlockTyp2lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp2extaddgrp_1
{
 TknPres pres;
 NhuAC_BarringConfig ssac_BarringForMMTEL_Voice_r9;
 NhuAC_BarringConfig ssac_BarringForMMTEL_Video_r9;
} NhuSysInfoBlockTyp2extaddgrp_1;

typedef struct NhuSysInfoBlockTyp2extaddgrp_2
{
 TknPres pres;
 NhuAC_BarringConfig ac_BarringForCSFB_r10;
} NhuSysInfoBlockTyp2extaddgrp_2;

typedef struct NhuSysInfoBlockTyp2
{
 TknPres pres;
 NhuSysInfoBlockTyp2ac_BarringInfo ac_BarringInfo;
 NhuRadioResourceConfigCmnSIB radioResourceConfigCmn;
 NhuUE_TmrsAndConsts ue_TmrsAndConsts;
 NhuSysInfoBlockTyp2freqInfo freqInfo;
 NhuMBSFN_SubfrmConfigLst mbsfn_SubfrmConfigLst;
 NhuTimeAlignmentTimer timeAlignmentTimerCmn;
 NhuSysInfoBlockTyp2lateNonCriticalExtn lateNonCriticalExtn;
 NhuSysInfoBlockTyp2extaddgrp_1 extaddgrp_1;
 NhuSysInfoBlockTyp2extaddgrp_2 extaddgrp_2;
} NhuSysInfoBlockTyp2;


typedef enum enumNhuMobilityStateParamst_Evaluation
{
 NhuMobilityStateParamst_Evaluations30Enum,
 NhuMobilityStateParamst_Evaluations60Enum,
 NhuMobilityStateParamst_Evaluations120Enum,
 NhuMobilityStateParamst_Evaluations180Enum,
 NhuMobilityStateParamst_Evaluations240Enum,
 NhuMobilityStateParamst_Evaluationspare3Enum,
 NhuMobilityStateParamst_Evaluationspare2Enum,
 NhuMobilityStateParamst_Evaluationspare1Enum
} EnumNhuMobilityStateParamst_Evaluation;
typedef TknU32 NhuMobilityStateParamst_Evaluation;


typedef enum enumNhuMobilityStateParamst_HystNormal
{
 NhuMobilityStateParamst_HystNormals30Enum,
 NhuMobilityStateParamst_HystNormals60Enum,
 NhuMobilityStateParamst_HystNormals120Enum,
 NhuMobilityStateParamst_HystNormals180Enum,
 NhuMobilityStateParamst_HystNormals240Enum,
 NhuMobilityStateParamst_HystNormalspare3Enum,
 NhuMobilityStateParamst_HystNormalspare2Enum,
 NhuMobilityStateParamst_HystNormalspare1Enum
} EnumNhuMobilityStateParamst_HystNormal;
typedef TknU32 NhuMobilityStateParamst_HystNormal;


typedef TknU32 NhuMobilityStateParamsn_CellChangeMedium;


typedef TknU32 NhuMobilityStateParamsn_CellChangeHigh;

typedef struct NhuMobilityStateParams
{
 TknPres pres;
 NhuMobilityStateParamst_Evaluation t_Evaluation;
 NhuMobilityStateParamst_HystNormal t_HystNormal;
 NhuMobilityStateParamsn_CellChangeMedium n_CellChangeMedium;
 NhuMobilityStateParamsn_CellChangeHigh n_CellChangeHigh;
} NhuMobilityStateParams;


typedef TknU32 NhuReselectionThreshold;


typedef TknU32 NhuCellReselectionPriority;


typedef TknS32 NhuQ_RxLevMin;


typedef TknS32 NhuP_Max;


typedef enum enumNhuAllowedMeasBandwidth
{
 NhuAllowedMeasBandwidthmbw6Enum,
 NhuAllowedMeasBandwidthmbw15Enum,
 NhuAllowedMeasBandwidthmbw25Enum,
 NhuAllowedMeasBandwidthmbw50Enum,
 NhuAllowedMeasBandwidthmbw75Enum,
 NhuAllowedMeasBandwidthmbw100Enum
} EnumNhuAllowedMeasBandwidth;
typedef TknU32 NhuAllowedMeasBandwidth;


typedef TknU8 NhuPresenceAntennaPort1;


typedef TknStrBSXL NhuNeighCellConfig;

typedef TknU32 NhuT_Reselection;


typedef enum enumNhuSpeedStateScaleFactorssf_Medium
{
 NhuSpeedStateScaleFactorssf_MediumoDot25Enum,
 NhuSpeedStateScaleFactorssf_MediumoDot5Enum,
 NhuSpeedStateScaleFactorssf_MediumoDot75Enum,
 NhuSpeedStateScaleFactorssf_MediumlDot0Enum
} EnumNhuSpeedStateScaleFactorssf_Medium;
typedef TknU32 NhuSpeedStateScaleFactorssf_Medium;


typedef enum enumNhuSpeedStateScaleFactorssf_High
{
 NhuSpeedStateScaleFactorssf_HighoDot25Enum,
 NhuSpeedStateScaleFactorssf_HighoDot5Enum,
 NhuSpeedStateScaleFactorssf_HighoDot75Enum,
 NhuSpeedStateScaleFactorssf_HighlDot0Enum
} EnumNhuSpeedStateScaleFactorssf_High;
typedef TknU32 NhuSpeedStateScaleFactorssf_High;

typedef struct NhuSpeedStateScaleFactors
{
 TknPres pres;
 NhuSpeedStateScaleFactorssf_Medium sf_Medium;
 NhuSpeedStateScaleFactorssf_High sf_High;
} NhuSpeedStateScaleFactors;


typedef TknU32 NhuReselectionThresholdQ_r9;


typedef TknS32 NhuQ_QualMin_r9;


typedef enum enumNhuSysInfoBlockTyp3cellReselectionInfoCmnq_Hyst
{
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB0Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB1Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB2Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB3Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB4Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB5Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB6Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB8Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB10Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB12Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB14Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB16Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB18Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB20Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB22Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_HystdB24Enum
} EnumNhuSysInfoBlockTyp3cellReselectionInfoCmnq_Hyst;
typedef TknU32 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_Hyst;


typedef enum enumNhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_Medium
{
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_MediumdB_6Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_MediumdB_4Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_MediumdB_2Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_MediumdB0Enum
} EnumNhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_Medium;
typedef TknU32 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_Medium;


typedef enum enumNhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_High
{
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_HighdB_6Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_HighdB_4Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_HighdB_2Enum,
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_HighdB0Enum
} EnumNhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_High;
typedef TknU32 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_High;

typedef struct NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSF
{
 TknPres pres;
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_Medium sf_Medium;
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSFsf_High sf_High;
} NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSF;

typedef struct NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionPars
{
 TknPres pres;
 NhuMobilityStateParams mobilityStateParams;
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionParsq_HystSF q_HystSF;
} NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionPars;

typedef struct NhuSysInfoBlockTyp3cellReselectionInfoCmn
{
 TknPres pres;
 NhuSysInfoBlockTyp3cellReselectionInfoCmnq_Hyst q_Hyst;
 NhuSysInfoBlockTyp3cellReselectionInfoCmnspeedStateReselectionPars speedStateReselectionPars;
} NhuSysInfoBlockTyp3cellReselectionInfoCmn;

typedef struct NhuSysInfoBlockTyp3cellReselectionServingFreqInfo
{
 TknPres pres;
 NhuReselectionThreshold s_NonIntraSearch;
 NhuReselectionThreshold threshServingLow;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuSysInfoBlockTyp3cellReselectionServingFreqInfo;

typedef struct NhuSysInfoBlockTyp3intraFreqCellReselectionInfo
{
 TknPres pres;
 NhuQ_RxLevMin q_RxLevMin;
 NhuP_Max p_Max;
 NhuReselectionThreshold s_IntraSearch;
 NhuAllowedMeasBandwidth allowedMeasBandwidth;
 NhuPresenceAntennaPort1 presenceAntennaPort1;
 NhuNeighCellConfig neighCellConfig;
 NhuT_Reselection t_ReselectionEUTRA;
 NhuSpeedStateScaleFactors t_ReselectionEUTRA_SF;
} NhuSysInfoBlockTyp3intraFreqCellReselectionInfo;


typedef TknStrOSXL NhuSysInfoBlockTyp3lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp3extaddgrp_1s_IntraSearch_v920
{
 TknPres pres;
 NhuReselectionThreshold s_IntraSearchP_r9;
 NhuReselectionThresholdQ_r9 s_IntraSearchQ_r9;
} NhuSysInfoBlockTyp3extaddgrp_1s_IntraSearch_v920;

typedef struct NhuSysInfoBlockTyp3extaddgrp_1s_NonIntraSearch_v920
{
 TknPres pres;
 NhuReselectionThreshold s_NonIntraSearchP_r9;
 NhuReselectionThresholdQ_r9 s_NonIntraSearchQ_r9;
} NhuSysInfoBlockTyp3extaddgrp_1s_NonIntraSearch_v920;

typedef struct NhuSysInfoBlockTyp3extaddgrp_1
{
 TknPres pres;
 NhuSysInfoBlockTyp3extaddgrp_1s_IntraSearch_v920 s_IntraSearch_v920;
 NhuSysInfoBlockTyp3extaddgrp_1s_NonIntraSearch_v920 s_NonIntraSearch_v920;
 NhuQ_QualMin_r9 q_QualMin_r9;
 NhuReselectionThresholdQ_r9 threshServingLowQ_r9;
} NhuSysInfoBlockTyp3extaddgrp_1;

typedef struct NhuSysInfoBlockTyp3extaddgrp_2
{
 TknPres pres;
 NhuQ_QualMin_r9 q_QualMinWB_r11;
} NhuSysInfoBlockTyp3extaddgrp_2;

typedef struct NhuSysInfoBlockTyp3
{
 TknPres pres;
 NhuSysInfoBlockTyp3cellReselectionInfoCmn cellReselectionInfoCmn;
 NhuSysInfoBlockTyp3cellReselectionServingFreqInfo cellReselectionServingFreqInfo;
 NhuSysInfoBlockTyp3intraFreqCellReselectionInfo intraFreqCellReselectionInfo;
 NhuSysInfoBlockTyp3lateNonCriticalExtn lateNonCriticalExtn;
 NhuSysInfoBlockTyp3extaddgrp_1 extaddgrp_1;
 NhuSysInfoBlockTyp3extaddgrp_2 extaddgrp_2;
} NhuSysInfoBlockTyp3;


typedef TknU32 NhuPhysCellId;


typedef enum enumNhuQ_OffsetRange
{
 NhuQ_OffsetRangedB_24Enum,
 NhuQ_OffsetRangedB_22Enum,
 NhuQ_OffsetRangedB_20Enum,
 NhuQ_OffsetRangedB_18Enum,
 NhuQ_OffsetRangedB_16Enum,
 NhuQ_OffsetRangedB_14Enum,
 NhuQ_OffsetRangedB_12Enum,
 NhuQ_OffsetRangedB_10Enum,
 NhuQ_OffsetRangedB_8Enum,
 NhuQ_OffsetRangedB_6Enum,
 NhuQ_OffsetRangedB_5Enum,
 NhuQ_OffsetRangedB_4Enum,
 NhuQ_OffsetRangedB_3Enum,
 NhuQ_OffsetRangedB_2Enum,
 NhuQ_OffsetRangedB_1Enum,
 NhuQ_OffsetRangedB0Enum,
 NhuQ_OffsetRangedB1Enum,
 NhuQ_OffsetRangedB2Enum,
 NhuQ_OffsetRangedB3Enum,
 NhuQ_OffsetRangedB4Enum,
 NhuQ_OffsetRangedB5Enum,
 NhuQ_OffsetRangedB6Enum,
 NhuQ_OffsetRangedB8Enum,
 NhuQ_OffsetRangedB10Enum,
 NhuQ_OffsetRangedB12Enum,
 NhuQ_OffsetRangedB14Enum,
 NhuQ_OffsetRangedB16Enum,
 NhuQ_OffsetRangedB18Enum,
 NhuQ_OffsetRangedB20Enum,
 NhuQ_OffsetRangedB22Enum,
 NhuQ_OffsetRangedB24Enum
} EnumNhuQ_OffsetRange;
typedef TknU32 NhuQ_OffsetRange;

typedef struct NhuIntraFreqNeighCellInfo
{
 TknPres pres;
 NhuPhysCellId physCellId;
 NhuQ_OffsetRange q_OffsetCell;
} NhuIntraFreqNeighCellInfo;

typedef struct NhuIntraFreqNeighCellLst
{
 TknU16 noComp;
 NhuIntraFreqNeighCellInfo *member;
}NhuIntraFreqNeighCellLst;


typedef enum enumNhuPhysCellIdRangerange
{
 NhuPhysCellIdRangerangen4Enum,
 NhuPhysCellIdRangerangen8Enum,
 NhuPhysCellIdRangerangen12Enum,
 NhuPhysCellIdRangerangen16Enum,
 NhuPhysCellIdRangerangen24Enum,
 NhuPhysCellIdRangerangen32Enum,
 NhuPhysCellIdRangerangen48Enum,
 NhuPhysCellIdRangerangen64Enum,
 NhuPhysCellIdRangerangen84Enum,
 NhuPhysCellIdRangerangen96Enum,
 NhuPhysCellIdRangerangen128Enum,
 NhuPhysCellIdRangerangen168Enum,
 NhuPhysCellIdRangerangen252Enum,
 NhuPhysCellIdRangerangen504Enum,
 NhuPhysCellIdRangerangespare2Enum,
 NhuPhysCellIdRangerangespare1Enum
} EnumNhuPhysCellIdRangerange;
typedef TknU32 NhuPhysCellIdRangerange;

typedef struct NhuPhysCellIdRange
{
 TknPres pres;
 NhuPhysCellId start;
 NhuPhysCellIdRangerange range;
} NhuPhysCellIdRange;

typedef struct NhuIntraFreqBlackCellLst
{
 TknU16 noComp;
 NhuPhysCellIdRange *member;
}NhuIntraFreqBlackCellLst;


typedef TknStrOSXL NhuSysInfoBlockTyp4lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp4
{
 TknPres pres;
 NhuIntraFreqNeighCellLst intraFreqNeighCellLst;
 NhuIntraFreqBlackCellLst intraFreqBlackCellLst;
 NhuPhysCellIdRange csg_PhysCellIdRange;
 NhuSysInfoBlockTyp4lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp4;

typedef struct NhuInterFreqNeighCellInfo
{
 TknPres pres;
 NhuPhysCellId physCellId;
 NhuQ_OffsetRange q_OffsetCell;
} NhuInterFreqNeighCellInfo;

typedef struct NhuInterFreqNeighCellLst
{
 TknU16 noComp;
 NhuInterFreqNeighCellInfo *member;
}NhuInterFreqNeighCellLst;

typedef struct NhuInterFreqBlackCellLst
{
 TknU16 noComp;
 NhuPhysCellIdRange *member;
}NhuInterFreqBlackCellLst;

typedef struct NhuInterFreqCarrierFreqInfoextaddgrp_1threshX_Q_r9
{
 TknPres pres;
 NhuReselectionThresholdQ_r9 threshX_HighQ_r9;
 NhuReselectionThresholdQ_r9 threshX_LowQ_r9;
} NhuInterFreqCarrierFreqInfoextaddgrp_1threshX_Q_r9;

typedef struct NhuInterFreqCarrierFreqInfoextaddgrp_1
{
 TknPres pres;
 NhuQ_QualMin_r9 q_QualMin_r9;
 NhuInterFreqCarrierFreqInfoextaddgrp_1threshX_Q_r9 threshX_Q_r9;
} NhuInterFreqCarrierFreqInfoextaddgrp_1;

typedef struct NhuInterFreqCarrierFreqInfoextaddgrp_2
{
 TknPres pres;
 NhuQ_QualMin_r9 q_QualMinWB_r11;
} NhuInterFreqCarrierFreqInfoextaddgrp_2;

typedef struct NhuInterFreqCarrierFreqInfo
{
 TknPres pres;
 NhuARFCN_ValueEUTRA dl_CarrierFreq;
 NhuQ_RxLevMin q_RxLevMin;
 NhuP_Max p_Max;
 NhuT_Reselection t_ReselectionEUTRA;
 NhuSpeedStateScaleFactors t_ReselectionEUTRA_SF;
 NhuReselectionThreshold threshX_High;
 NhuReselectionThreshold threshX_Low;
 NhuAllowedMeasBandwidth allowedMeasBandwidth;
 NhuPresenceAntennaPort1 presenceAntennaPort1;
 NhuCellReselectionPriority cellReselectionPriority;
 NhuNeighCellConfig neighCellConfig;
 NhuQ_OffsetRange q_OffsetFreq;
 NhuInterFreqNeighCellLst interFreqNeighCellLst;
 NhuInterFreqBlackCellLst interFreqBlackCellLst;
 NhuInterFreqCarrierFreqInfoextaddgrp_1 extaddgrp_1;
 NhuInterFreqCarrierFreqInfoextaddgrp_2 extaddgrp_2;
} NhuInterFreqCarrierFreqInfo;

typedef struct NhuInterFreqCarrierFreqLst
{
 TknU16 noComp;
 NhuInterFreqCarrierFreqInfo *member;
}NhuInterFreqCarrierFreqLst;


typedef TknStrOSXL NhuSysInfoBlockTyp5lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp5
{
 TknPres pres;
 NhuInterFreqCarrierFreqLst interFreqCarrierFreqLst;
 NhuSysInfoBlockTyp5lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp5;


typedef TknU32 NhuARFCN_ValueUTRA;


typedef TknS32 NhuCarrierFreqUTRA_FDDq_RxLevMin;


typedef TknS32 NhuCarrierFreqUTRA_FDDp_MaxUTRA;


typedef TknS32 NhuCarrierFreqUTRA_FDDq_QualMin;

typedef struct NhuCarrierFreqUTRA_FDDextaddgrp_1threshX_Q_r9
{
 TknPres pres;
 NhuReselectionThresholdQ_r9 threshX_HighQ_r9;
 NhuReselectionThresholdQ_r9 threshX_LowQ_r9;
} NhuCarrierFreqUTRA_FDDextaddgrp_1threshX_Q_r9;

typedef struct NhuCarrierFreqUTRA_FDDextaddgrp_1
{
 TknPres pres;
 NhuCarrierFreqUTRA_FDDextaddgrp_1threshX_Q_r9 threshX_Q_r9;
} NhuCarrierFreqUTRA_FDDextaddgrp_1;

typedef struct NhuCarrierFreqUTRA_FDD
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq;
 NhuCellReselectionPriority cellReselectionPriority;
 NhuReselectionThreshold threshX_High;
 NhuReselectionThreshold threshX_Low;
 NhuCarrierFreqUTRA_FDDq_RxLevMin q_RxLevMin;
 NhuCarrierFreqUTRA_FDDp_MaxUTRA p_MaxUTRA;
 NhuCarrierFreqUTRA_FDDq_QualMin q_QualMin;
 NhuCarrierFreqUTRA_FDDextaddgrp_1 extaddgrp_1;
} NhuCarrierFreqUTRA_FDD;

typedef struct NhuCarrierFreqLstUTRA_FDD
{
 TknU16 noComp;
 NhuCarrierFreqUTRA_FDD *member;
}NhuCarrierFreqLstUTRA_FDD;


typedef TknS32 NhuCarrierFreqUTRA_TDDq_RxLevMin;


typedef TknS32 NhuCarrierFreqUTRA_TDDp_MaxUTRA;

typedef struct NhuCarrierFreqUTRA_TDD
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq;
 NhuCellReselectionPriority cellReselectionPriority;
 NhuReselectionThreshold threshX_High;
 NhuReselectionThreshold threshX_Low;
 NhuCarrierFreqUTRA_TDDq_RxLevMin q_RxLevMin;
 NhuCarrierFreqUTRA_TDDp_MaxUTRA p_MaxUTRA;
} NhuCarrierFreqUTRA_TDD;

typedef struct NhuCarrierFreqLstUTRA_TDD
{
 TknU16 noComp;
 NhuCarrierFreqUTRA_TDD *member;
}NhuCarrierFreqLstUTRA_TDD;


typedef TknStrOSXL NhuSysInfoBlockTyp6lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp6
{
 TknPres pres;
 NhuCarrierFreqLstUTRA_FDD carrierFreqLstUTRA_FDD;
 NhuCarrierFreqLstUTRA_TDD carrierFreqLstUTRA_TDD;
 NhuT_Reselection t_ReselectionUTRA;
 NhuSpeedStateScaleFactors t_ReselectionUTRA_SF;
 NhuSysInfoBlockTyp6lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp6;


typedef TknU32 NhuARFCN_ValueGERAN;


typedef enum enumNhuBandIndicatorGERAN
{
 NhuBandIndicatorGERANdcs1800Enum,
 NhuBandIndicatorGERANpcs1900Enum
} EnumNhuBandIndicatorGERAN;
typedef TknU32 NhuBandIndicatorGERAN;

typedef struct NhuExplicitLstOfARFCNs
{
 TknU16 noComp;
 NhuARFCN_ValueGERAN *member;
}NhuExplicitLstOfARFCNs;


typedef TknU32 NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNsarfcn_Spacing;


typedef TknU32 NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNsnumberOfFollowingARFCNs;

typedef struct NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNs
{
 TknPres pres;
 NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNsarfcn_Spacing arfcn_Spacing;
 NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNsnumberOfFollowingARFCNs numberOfFollowingARFCNs;
} NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNs;


typedef TknStrOSXL NhuCarrierFreqsGERANfollowingARFCNsvariableBitMapOfARFCNs;
typedef struct NhuCarrierFreqsGERANfollowingARFCNs
{
 TknU8 choice;
 union {
  NhuExplicitLstOfARFCNs explicitLstOfARFCNs;
  NhuCarrierFreqsGERANfollowingARFCNsequallySpacedARFCNs equallySpacedARFCNs;
  NhuCarrierFreqsGERANfollowingARFCNsvariableBitMapOfARFCNs variableBitMapOfARFCNs;
 } val;
} NhuCarrierFreqsGERANfollowingARFCNs;

typedef struct NhuCarrierFreqsGERAN
{
 TknPres pres;
 NhuARFCN_ValueGERAN startingARFCN;
 NhuBandIndicatorGERAN bandIndicator;
 NhuCarrierFreqsGERANfollowingARFCNs followingARFCNs;
} NhuCarrierFreqsGERAN;


typedef TknStrBSXL NhuCarrierFreqsInfoGERANcommonInfoncc_Permitted;

typedef TknU32 NhuCarrierFreqsInfoGERANcommonInfoq_RxLevMin;


typedef TknU32 NhuCarrierFreqsInfoGERANcommonInfop_MaxGERAN;

typedef struct NhuCarrierFreqsInfoGERANcommonInfo
{
 TknPres pres;
 NhuCellReselectionPriority cellReselectionPriority;
 NhuCarrierFreqsInfoGERANcommonInfoncc_Permitted ncc_Permitted;
 NhuCarrierFreqsInfoGERANcommonInfoq_RxLevMin q_RxLevMin;
 NhuCarrierFreqsInfoGERANcommonInfop_MaxGERAN p_MaxGERAN;
 NhuReselectionThreshold threshX_High;
 NhuReselectionThreshold threshX_Low;
} NhuCarrierFreqsInfoGERANcommonInfo;

typedef struct NhuCarrierFreqsInfoGERAN
{
 TknPres pres;
 NhuCarrierFreqsGERAN carrierFreqs;
 NhuCarrierFreqsInfoGERANcommonInfo commonInfo;
} NhuCarrierFreqsInfoGERAN;

typedef struct NhuCarrierFreqsInfoLstGERAN
{
 TknU16 noComp;
 NhuCarrierFreqsInfoGERAN *member;
}NhuCarrierFreqsInfoLstGERAN;


typedef TknStrOSXL NhuSysInfoBlockTyp7lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp7
{
 TknPres pres;
 NhuT_Reselection t_ReselectionGERAN;
 NhuSpeedStateScaleFactors t_ReselectionGERAN_SF;
 NhuCarrierFreqsInfoLstGERAN carrierFreqsInfoLst;
 NhuSysInfoBlockTyp7lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp7;


typedef TknU8 NhuSysTimeInfoCDMA2000cdma_EUTRA_Synchronisation;


typedef TknStrBSXL NhuSysTimeInfoCDMA2000cdma_SysTimesynchronousSysTime;

typedef TknStrBSXL NhuSysTimeInfoCDMA2000cdma_SysTimeasynchronousSysTime;
typedef struct NhuSysTimeInfoCDMA2000cdma_SysTime
{
 TknU8 choice;
 union {
  NhuSysTimeInfoCDMA2000cdma_SysTimesynchronousSysTime synchronousSysTime;
  NhuSysTimeInfoCDMA2000cdma_SysTimeasynchronousSysTime asynchronousSysTime;
 } val;
} NhuSysTimeInfoCDMA2000cdma_SysTime;

typedef struct NhuSysTimeInfoCDMA2000
{
 TknPres pres;
 NhuSysTimeInfoCDMA2000cdma_EUTRA_Synchronisation cdma_EUTRA_Synchronisation;
 NhuSysTimeInfoCDMA2000cdma_SysTime cdma_SysTime;
} NhuSysTimeInfoCDMA2000;


typedef TknU32 NhuPreRegistrationZoneIdHRPD;

typedef struct NhuSecondaryPreRegistrationZoneIdLstHRPD
{
 TknU16 noComp;
 NhuPreRegistrationZoneIdHRPD *member;
}NhuSecondaryPreRegistrationZoneIdLstHRPD;


typedef TknU8 NhuPreRegistrationInfoHRPDpreRegistrationAllowed;

typedef struct NhuPreRegistrationInfoHRPD
{
 TknPres pres;
 NhuPreRegistrationInfoHRPDpreRegistrationAllowed preRegistrationAllowed;
 NhuPreRegistrationZoneIdHRPD preRegistrationZoneId;
 NhuSecondaryPreRegistrationZoneIdLstHRPD secondaryPreRegistrationZoneIdLst;
} NhuPreRegistrationInfoHRPD;


typedef enum enumNhuBandclassCDMA2000
{
 NhuBandclassCDMA2000bc0Enum,
 NhuBandclassCDMA2000bc1Enum,
 NhuBandclassCDMA2000bc2Enum,
 NhuBandclassCDMA2000bc3Enum,
 NhuBandclassCDMA2000bc4Enum,
 NhuBandclassCDMA2000bc5Enum,
 NhuBandclassCDMA2000bc6Enum,
 NhuBandclassCDMA2000bc7Enum,
 NhuBandclassCDMA2000bc8Enum,
 NhuBandclassCDMA2000bc9Enum,
 NhuBandclassCDMA2000bc10Enum,
 NhuBandclassCDMA2000bc11Enum,
 NhuBandclassCDMA2000bc12Enum,
 NhuBandclassCDMA2000bc13Enum,
 NhuBandclassCDMA2000bc14Enum,
 NhuBandclassCDMA2000bc15Enum,
 NhuBandclassCDMA2000bc16Enum,
 NhuBandclassCDMA2000bc17Enum,
 NhuBandclassCDMA2000bc18_v9a0Enum,
 NhuBandclassCDMA2000bc19_v9a0Enum,
 NhuBandclassCDMA2000bc20_v9a0Enum,
 NhuBandclassCDMA2000bc21_v9a0Enum,
 NhuBandclassCDMA2000spare10Enum,
 NhuBandclassCDMA2000spare9Enum,
 NhuBandclassCDMA2000spare8Enum,
 NhuBandclassCDMA2000spare7Enum,
 NhuBandclassCDMA2000spare6Enum,
 NhuBandclassCDMA2000spare5Enum,
 NhuBandclassCDMA2000spare4Enum,
 NhuBandclassCDMA2000spare3Enum,
 NhuBandclassCDMA2000spare2Enum,
 NhuBandclassCDMA2000spare1Enum
} EnumNhuBandclassCDMA2000;
typedef TknU32 NhuBandclassCDMA2000;


typedef TknU32 NhuBandClassInfoCDMA2000threshX_High;


typedef TknU32 NhuBandClassInfoCDMA2000threshX_Low;

typedef struct NhuBandClassInfoCDMA2000
{
 TknPres pres;
 NhuBandclassCDMA2000 bandClass;
 NhuCellReselectionPriority cellReselectionPriority;
 NhuBandClassInfoCDMA2000threshX_High threshX_High;
 NhuBandClassInfoCDMA2000threshX_Low threshX_Low;
} NhuBandClassInfoCDMA2000;

typedef struct NhuBandClassLstCDMA2000
{
 TknU16 noComp;
 NhuBandClassInfoCDMA2000 *member;
}NhuBandClassLstCDMA2000;


typedef TknU32 NhuARFCN_ValueCDMA2000;


typedef TknU32 NhuPhysCellIdCDMA2000;

typedef struct NhuPhysCellIdLstCDMA2000
{
 TknU16 noComp;
 NhuPhysCellIdCDMA2000 *member;
}NhuPhysCellIdLstCDMA2000;

typedef struct NhuNeighCellsPerBandclassCDMA2000
{
 TknPres pres;
 NhuARFCN_ValueCDMA2000 arfcn;
 NhuPhysCellIdLstCDMA2000 physCellIdLst;
} NhuNeighCellsPerBandclassCDMA2000;

typedef struct NhuNeighCellsPerBandclassLstCDMA2000
{
 TknU16 noComp;
 NhuNeighCellsPerBandclassCDMA2000 *member;
}NhuNeighCellsPerBandclassLstCDMA2000;

typedef struct NhuNeighCellCDMA2000
{
 TknPres pres;
 NhuBandclassCDMA2000 bandClass;
 NhuNeighCellsPerBandclassLstCDMA2000 neighCellsPerFreqLst;
} NhuNeighCellCDMA2000;

typedef struct NhuNeighCellLstCDMA2000
{
 TknU16 noComp;
 NhuNeighCellCDMA2000 *member;
}NhuNeighCellLstCDMA2000;

typedef struct NhuCellReselectionParamsCDMA2000
{
 TknPres pres;
 NhuBandClassLstCDMA2000 bandClassLst;
 NhuNeighCellLstCDMA2000 neighCellLst;
 NhuT_Reselection t_ReselectionCDMA2000;
 NhuSpeedStateScaleFactors t_ReselectionCDMA2000_SF;
} NhuCellReselectionParamsCDMA2000;


typedef TknStrBSXL NhuCSFB_RegistrationParam1XRTTsid;

typedef TknStrBSXL NhuCSFB_RegistrationParam1XRTTnid;

typedef TknU8 NhuCSFB_RegistrationParam1XRTTmultipleSID;


typedef TknU8 NhuCSFB_RegistrationParam1XRTTmultipleNID;


typedef TknU8 NhuCSFB_RegistrationParam1XRTThomeReg;


typedef TknU8 NhuCSFB_RegistrationParam1XRTTforeignSIDReg;


typedef TknU8 NhuCSFB_RegistrationParam1XRTTforeignNIDReg;


typedef TknU8 NhuCSFB_RegistrationParam1XRTTparameterReg;


typedef TknU8 NhuCSFB_RegistrationParam1XRTTpowerUpReg;


typedef TknStrBSXL NhuCSFB_RegistrationParam1XRTTregistrationPeriod;

typedef TknStrBSXL NhuCSFB_RegistrationParam1XRTTregistrationZone;

typedef TknStrBSXL NhuCSFB_RegistrationParam1XRTTtotalZone;

typedef TknStrBSXL NhuCSFB_RegistrationParam1XRTTzoneTimer;
typedef struct NhuCSFB_RegistrationParam1XRTT
{
 TknPres pres;
 NhuCSFB_RegistrationParam1XRTTsid sid;
 NhuCSFB_RegistrationParam1XRTTnid nid;
 NhuCSFB_RegistrationParam1XRTTmultipleSID multipleSID;
 NhuCSFB_RegistrationParam1XRTTmultipleNID multipleNID;
 NhuCSFB_RegistrationParam1XRTThomeReg homeReg;
 NhuCSFB_RegistrationParam1XRTTforeignSIDReg foreignSIDReg;
 NhuCSFB_RegistrationParam1XRTTforeignNIDReg foreignNIDReg;
 NhuCSFB_RegistrationParam1XRTTparameterReg parameterReg;
 NhuCSFB_RegistrationParam1XRTTpowerUpReg powerUpReg;
 NhuCSFB_RegistrationParam1XRTTregistrationPeriod registrationPeriod;
 NhuCSFB_RegistrationParam1XRTTregistrationZone registrationZone;
 NhuCSFB_RegistrationParam1XRTTtotalZone totalZone;
 NhuCSFB_RegistrationParam1XRTTzoneTimer zoneTimer;
} NhuCSFB_RegistrationParam1XRTT;

typedef struct NhuPhysCellIdLstCDMA2000_v920
{
 TknU16 noComp;
 NhuPhysCellIdCDMA2000 *member;
}NhuPhysCellIdLstCDMA2000_v920;

typedef struct NhuNeighCellsPerBandclassCDMA2000_v920
{
 TknPres pres;
 NhuPhysCellIdLstCDMA2000_v920 physCellIdLst_v920;
} NhuNeighCellsPerBandclassCDMA2000_v920;

typedef struct NhuNeighCellsPerBandclassLstCDMA2000_v920
{
 TknU16 noComp;
 NhuNeighCellsPerBandclassCDMA2000_v920 *member;
}NhuNeighCellsPerBandclassLstCDMA2000_v920;

typedef struct NhuNeighCellCDMA2000_v920
{
 TknPres pres;
 NhuNeighCellsPerBandclassLstCDMA2000_v920 neighCellsPerFreqLst_v920;
} NhuNeighCellCDMA2000_v920;

typedef struct NhuNeighCellLstCDMA2000_v920
{
 TknU16 noComp;
 NhuNeighCellCDMA2000_v920 *member;
}NhuNeighCellLstCDMA2000_v920;

typedef struct NhuCellReselectionParamsCDMA2000_v920
{
 TknPres pres;
 NhuNeighCellLstCDMA2000_v920 neighCellLst_v920;
} NhuCellReselectionParamsCDMA2000_v920;


typedef enum enumNhuCSFB_RegistrationParam1XRTT_v920powerDownReg_r9
{
 NhuCSFB_RegistrationParam1XRTT_v920powerDownReg_r9trueEnum
} EnumNhuCSFB_RegistrationParam1XRTT_v920powerDownReg_r9;
typedef TknU32 NhuCSFB_RegistrationParam1XRTT_v920powerDownReg_r9;

typedef struct NhuCSFB_RegistrationParam1XRTT_v920
{
 TknPres pres;
 NhuCSFB_RegistrationParam1XRTT_v920powerDownReg_r9 powerDownReg_r9;
} NhuCSFB_RegistrationParam1XRTT_v920;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring0to9_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring10_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring11_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring12_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring13_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring14_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_Barring15_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_BarringMsg_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_BarringReg_r9;


typedef TknU32 NhuAC_BarringConfig1XRTT_r9ac_BarringEmg_r9;

typedef struct NhuAC_BarringConfig1XRTT_r9
{
 TknPres pres;
 NhuAC_BarringConfig1XRTT_r9ac_Barring0to9_r9 ac_Barring0to9_r9;
 NhuAC_BarringConfig1XRTT_r9ac_Barring10_r9 ac_Barring10_r9;
 NhuAC_BarringConfig1XRTT_r9ac_Barring11_r9 ac_Barring11_r9;
 NhuAC_BarringConfig1XRTT_r9ac_Barring12_r9 ac_Barring12_r9;
 NhuAC_BarringConfig1XRTT_r9ac_Barring13_r9 ac_Barring13_r9;
 NhuAC_BarringConfig1XRTT_r9ac_Barring14_r9 ac_Barring14_r9;
 NhuAC_BarringConfig1XRTT_r9ac_Barring15_r9 ac_Barring15_r9;
 NhuAC_BarringConfig1XRTT_r9ac_BarringMsg_r9 ac_BarringMsg_r9;
 NhuAC_BarringConfig1XRTT_r9ac_BarringReg_r9 ac_BarringReg_r9;
 NhuAC_BarringConfig1XRTT_r9ac_BarringEmg_r9 ac_BarringEmg_r9;
} NhuAC_BarringConfig1XRTT_r9;

typedef struct NhuNeighCellsPerBandclassCDMA2000_r11physCellIdLst_r11
{
 TknU16 noComp;
 NhuPhysCellIdCDMA2000 *member;
}NhuNeighCellsPerBandclassCDMA2000_r11physCellIdLst_r11;

typedef struct NhuNeighCellsPerBandclassCDMA2000_r11
{
 TknPres pres;
 NhuARFCN_ValueCDMA2000 arfcn;
 NhuNeighCellsPerBandclassCDMA2000_r11physCellIdLst_r11 physCellIdLst_r11;
} NhuNeighCellsPerBandclassCDMA2000_r11;

typedef struct NhuNeighCellCDMA2000_r11neighFreqInfoLst_r11
{
 TknU16 noComp;
 NhuNeighCellsPerBandclassCDMA2000_r11 *member;
}NhuNeighCellCDMA2000_r11neighFreqInfoLst_r11;

typedef struct NhuNeighCellCDMA2000_r11
{
 TknPres pres;
 NhuBandclassCDMA2000 bandClass;
 NhuNeighCellCDMA2000_r11neighFreqInfoLst_r11 neighFreqInfoLst_r11;
} NhuNeighCellCDMA2000_r11;

typedef struct NhuCellReselectionParamsCDMA2000_r11neighCellLst_r11
{
 TknU16 noComp;
 NhuNeighCellCDMA2000_r11 *member;
}NhuCellReselectionParamsCDMA2000_r11neighCellLst_r11;

typedef struct NhuCellReselectionParamsCDMA2000_r11
{
 TknPres pres;
 NhuBandClassLstCDMA2000 bandClassLst;
 NhuCellReselectionParamsCDMA2000_r11neighCellLst_r11 neighCellLst_r11;
 NhuT_Reselection t_ReselectionCDMA2000;
 NhuSpeedStateScaleFactors t_ReselectionCDMA2000_SF;
} NhuCellReselectionParamsCDMA2000_r11;

typedef struct NhuParamsCDMA2000_r11systemTimeInfo_r11
{
 TknU8 choice;
 union {
  NhuSysTimeInfoCDMA2000 explicitValue;
 } val;
} NhuParamsCDMA2000_r11systemTimeInfo_r11;


typedef TknU32 NhuParamsCDMA2000_r11searchWindowSize_r11;

typedef struct NhuParamsCDMA2000_r11parametersHRPD_r11
{
 TknPres pres;
 NhuPreRegistrationInfoHRPD preRegistrationInfoHRPD_r11;
 NhuCellReselectionParamsCDMA2000_r11 cellReselectionParamsHRPD_r11;
} NhuParamsCDMA2000_r11parametersHRPD_r11;


typedef TknStrBSXL NhuParamsCDMA2000_r11parameters1XRTT_r11longCodeState1XRTT_r11;

typedef TknU8 NhuParamsCDMA2000_r11parameters1XRTT_r11csfb_SupportForDualRxUEs_r11;


typedef enum enumNhuParamsCDMA2000_r11parameters1XRTT_r11csfb_DualRxTxSupport_r11
{
 NhuParamsCDMA2000_r11parameters1XRTT_r11csfb_DualRxTxSupport_r11trueEnum
} EnumNhuParamsCDMA2000_r11parameters1XRTT_r11csfb_DualRxTxSupport_r11;
typedef TknU32 NhuParamsCDMA2000_r11parameters1XRTT_r11csfb_DualRxTxSupport_r11;

typedef struct NhuParamsCDMA2000_r11parameters1XRTT_r11
{
 TknPres pres;
 NhuCSFB_RegistrationParam1XRTT csfb_RegistrationParam1XRTT_r11;
 NhuCSFB_RegistrationParam1XRTT_v920 csfb_RegistrationParam1XRTT_Ext_r11;
 NhuParamsCDMA2000_r11parameters1XRTT_r11longCodeState1XRTT_r11 longCodeState1XRTT_r11;
 NhuCellReselectionParamsCDMA2000_r11 cellReselectionParams1XRTT_r11;
 NhuAC_BarringConfig1XRTT_r9 ac_BarringConfig1XRTT_r11;
 NhuParamsCDMA2000_r11parameters1XRTT_r11csfb_SupportForDualRxUEs_r11 csfb_SupportForDualRxUEs_r11;
 NhuParamsCDMA2000_r11parameters1XRTT_r11csfb_DualRxTxSupport_r11 csfb_DualRxTxSupport_r11;
} NhuParamsCDMA2000_r11parameters1XRTT_r11;

typedef struct NhuParamsCDMA2000_r11
{
 TknPres pres;
 NhuParamsCDMA2000_r11systemTimeInfo_r11 systemTimeInfo_r11;
 NhuParamsCDMA2000_r11searchWindowSize_r11 searchWindowSize_r11;
 NhuParamsCDMA2000_r11parametersHRPD_r11 parametersHRPD_r11;
 NhuParamsCDMA2000_r11parameters1XRTT_r11 parameters1XRTT_r11;
} NhuParamsCDMA2000_r11;


typedef TknU32 NhuSIB8_PerPLMN_r11plmn_Identity_r11;

typedef struct NhuSIB8_PerPLMN_r11parametersCDMA2000_r11
{
 TknU8 choice;
 union {
  NhuParamsCDMA2000_r11 explicitValue;
 } val;
} NhuSIB8_PerPLMN_r11parametersCDMA2000_r11;

typedef struct NhuSIB8_PerPLMN_r11
{
 TknPres pres;
 NhuSIB8_PerPLMN_r11plmn_Identity_r11 plmn_Identity_r11;
 NhuSIB8_PerPLMN_r11parametersCDMA2000_r11 parametersCDMA2000_r11;
} NhuSIB8_PerPLMN_r11;

typedef struct NhuSIB8_PerPLMN_Lst_r11
{
 TknU16 noComp;
 NhuSIB8_PerPLMN_r11 *member;
}NhuSIB8_PerPLMN_Lst_r11;


typedef TknU32 NhuSysInfoBlockTyp8searchWindowSize;

typedef struct NhuSysInfoBlockTyp8parametersHRPD
{
 TknPres pres;
 NhuPreRegistrationInfoHRPD preRegistrationInfoHRPD;
 NhuCellReselectionParamsCDMA2000 cellReselectionParamsHRPD;
} NhuSysInfoBlockTyp8parametersHRPD;


typedef TknStrBSXL NhuSysInfoBlockTyp8parameters1XRTTlongCodeState1XRTT;
typedef struct NhuSysInfoBlockTyp8parameters1XRTT
{
 TknPres pres;
 NhuCSFB_RegistrationParam1XRTT csfb_RegistrationParam1XRTT;
 NhuSysInfoBlockTyp8parameters1XRTTlongCodeState1XRTT longCodeState1XRTT;
 NhuCellReselectionParamsCDMA2000 cellReselectionParams1XRTT;
} NhuSysInfoBlockTyp8parameters1XRTT;


typedef TknStrOSXL NhuSysInfoBlockTyp8lateNonCriticalExtn;

typedef TknU8 NhuSysInfoBlockTyp8extaddgrp_1csfb_SupportForDualRxUEs_r9;


typedef enum enumNhuSysInfoBlockTyp8extaddgrp_2csfb_DualRxTxSupport_r10
{
 NhuSysInfoBlockTyp8extaddgrp_2csfb_DualRxTxSupport_r10trueEnum
} EnumNhuSysInfoBlockTyp8extaddgrp_2csfb_DualRxTxSupport_r10;
typedef TknU32 NhuSysInfoBlockTyp8extaddgrp_2csfb_DualRxTxSupport_r10;

typedef struct NhuSysInfoBlockTyp8extaddgrp_1
{
 TknPres pres;
 NhuSysInfoBlockTyp8extaddgrp_1csfb_SupportForDualRxUEs_r9 csfb_SupportForDualRxUEs_r9;
 NhuCellReselectionParamsCDMA2000_v920 cellReselectionParamsHRPD_v920;
 NhuCellReselectionParamsCDMA2000_v920 cellReselectionParams1XRTT_v920;
 NhuCSFB_RegistrationParam1XRTT_v920 csfb_RegistrationParam1XRTT_v920;
 NhuAC_BarringConfig1XRTT_r9 ac_BarringConfig1XRTT_r9;
} NhuSysInfoBlockTyp8extaddgrp_1;

typedef struct NhuSysInfoBlockTyp8extaddgrp_2
{
 TknPres pres;
 NhuSysInfoBlockTyp8extaddgrp_2csfb_DualRxTxSupport_r10 csfb_DualRxTxSupport_r10;
} NhuSysInfoBlockTyp8extaddgrp_2;

typedef struct NhuSysInfoBlockTyp8extaddgrp_3
{
 TknPres pres;
 NhuSIB8_PerPLMN_Lst_r11 sib8_PerPLMN_Lst_r11;
} NhuSysInfoBlockTyp8extaddgrp_3;

typedef struct NhuSysInfoBlockTyp8
{
 TknPres pres;
 NhuSysTimeInfoCDMA2000 systemTimeInfo;
 NhuSysInfoBlockTyp8searchWindowSize searchWindowSize;
 NhuSysInfoBlockTyp8parametersHRPD parametersHRPD;
 NhuSysInfoBlockTyp8parameters1XRTT parameters1XRTT;
 NhuSysInfoBlockTyp8lateNonCriticalExtn lateNonCriticalExtn;
 NhuSysInfoBlockTyp8extaddgrp_1 extaddgrp_1;
 NhuSysInfoBlockTyp8extaddgrp_2 extaddgrp_2;
 NhuSysInfoBlockTyp8extaddgrp_3 extaddgrp_3;
} NhuSysInfoBlockTyp8;


typedef TknStrOSXL NhuSysInfoBlockTyp9hnb_Name;

typedef TknStrOSXL NhuSysInfoBlockTyp9lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp9
{
 TknPres pres;
 NhuSysInfoBlockTyp9hnb_Name hnb_Name;
 NhuSysInfoBlockTyp9lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp9;


typedef TknStrBSXL NhuSysInfoBlockTyp10messageId;

typedef TknStrBSXL NhuSysInfoBlockTyp10serialNumber;

typedef TknStrOSXL NhuSysInfoBlockTyp10warningTyp;

typedef TknStrOSXL NhuSysInfoBlockTyp10dummy;

typedef TknStrOSXL NhuSysInfoBlockTyp10lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp10
{
 TknPres pres;
 NhuSysInfoBlockTyp10messageId messageId;
 NhuSysInfoBlockTyp10serialNumber serialNumber;
 NhuSysInfoBlockTyp10warningTyp warningTyp;
 NhuSysInfoBlockTyp10dummy dummy;
 NhuSysInfoBlockTyp10lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp10;


typedef TknStrBSXL NhuSysInfoBlockTyp11messageId;

typedef TknStrBSXL NhuSysInfoBlockTyp11serialNumber;

typedef enum enumNhuSysInfoBlockTyp11warningMsgSegmentTyp
{
 NhuSysInfoBlockTyp11warningMsgSegmentTypnotLastSegmentEnum,
 NhuSysInfoBlockTyp11warningMsgSegmentTyplastSegmentEnum
} EnumNhuSysInfoBlockTyp11warningMsgSegmentTyp;
typedef TknU32 NhuSysInfoBlockTyp11warningMsgSegmentTyp;


typedef TknU32 NhuSysInfoBlockTyp11warningMsgSegmentNumber;


typedef TknStrOSXL NhuSysInfoBlockTyp11warningMsgSegment;

typedef TknStrOSXL NhuSysInfoBlockTyp11dataCodingScheme;

typedef TknStrOSXL NhuSysInfoBlockTyp11lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp11
{
 TknPres pres;
 NhuSysInfoBlockTyp11messageId messageId;
 NhuSysInfoBlockTyp11serialNumber serialNumber;
 NhuSysInfoBlockTyp11warningMsgSegmentTyp warningMsgSegmentTyp;
 NhuSysInfoBlockTyp11warningMsgSegmentNumber warningMsgSegmentNumber;
 NhuSysInfoBlockTyp11warningMsgSegment warningMsgSegment;
 NhuSysInfoBlockTyp11dataCodingScheme dataCodingScheme;
 NhuSysInfoBlockTyp11lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp11;


typedef TknStrBSXL NhuSysInfoBlockTyp12_r9messageId_r9;

typedef TknStrBSXL NhuSysInfoBlockTyp12_r9serialNumber_r9;

typedef enum enumNhuSysInfoBlockTyp12_r9warningMsgSegmentTyp_r9
{
 NhuSysInfoBlockTyp12_r9warningMsgSegmentTyp_r9notLastSegmentEnum,
 NhuSysInfoBlockTyp12_r9warningMsgSegmentTyp_r9lastSegmentEnum
} EnumNhuSysInfoBlockTyp12_r9warningMsgSegmentTyp_r9;
typedef TknU32 NhuSysInfoBlockTyp12_r9warningMsgSegmentTyp_r9;


typedef TknU32 NhuSysInfoBlockTyp12_r9warningMsgSegmentNumber_r9;


typedef TknStrOSXL NhuSysInfoBlockTyp12_r9warningMsgSegment_r9;

typedef TknStrOSXL NhuSysInfoBlockTyp12_r9dataCodingScheme_r9;

typedef TknStrOSXL NhuSysInfoBlockTyp12_r9lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp12_r9
{
 TknPres pres;
 NhuSysInfoBlockTyp12_r9messageId_r9 messageId_r9;
 NhuSysInfoBlockTyp12_r9serialNumber_r9 serialNumber_r9;
 NhuSysInfoBlockTyp12_r9warningMsgSegmentTyp_r9 warningMsgSegmentTyp_r9;
 NhuSysInfoBlockTyp12_r9warningMsgSegmentNumber_r9 warningMsgSegmentNumber_r9;
 NhuSysInfoBlockTyp12_r9warningMsgSegment_r9 warningMsgSegment_r9;
 NhuSysInfoBlockTyp12_r9dataCodingScheme_r9 dataCodingScheme_r9;
 NhuSysInfoBlockTyp12_r9lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp12_r9;


typedef TknU32 NhuMBSFN_AreaInfo_r9mbsfn_AreaId_r9;


typedef enum enumNhuMBSFN_AreaInfo_r9non_MBSFNregionLength
{
 NhuMBSFN_AreaInfo_r9non_MBSFNregionLengths1Enum,
 NhuMBSFN_AreaInfo_r9non_MBSFNregionLengths2Enum
} EnumNhuMBSFN_AreaInfo_r9non_MBSFNregionLength;
typedef TknU32 NhuMBSFN_AreaInfo_r9non_MBSFNregionLength;


typedef TknU32 NhuMBSFN_AreaInfo_r9notificationIndicator_r9;


typedef enum enumNhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9
{
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9rf32Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9rf64Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9rf128Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9rf256Enum
} EnumNhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9;
typedef TknU32 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9;


typedef TknU32 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_Offset_r9;


typedef enum enumNhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_ModfnPeriod_r9
{
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_ModfnPeriod_r9rf512Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_ModfnPeriod_r9rf1024Enum
} EnumNhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_ModfnPeriod_r9;
typedef TknU32 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_ModfnPeriod_r9;


typedef TknStrBSXL NhuMBSFN_AreaInfo_r9mcch_Config_r9sf_AllocInfo_r9;

typedef enum enumNhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9
{
 NhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9n2Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9n7Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9n13Enum,
 NhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9n19Enum
} EnumNhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9;
typedef TknU32 NhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9;

typedef struct NhuMBSFN_AreaInfo_r9mcch_Config_r9
{
 TknPres pres;
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_RepetitionPeriod_r9 mcch_RepetitionPeriod_r9;
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_Offset_r9 mcch_Offset_r9;
 NhuMBSFN_AreaInfo_r9mcch_Config_r9mcch_ModfnPeriod_r9 mcch_ModfnPeriod_r9;
 NhuMBSFN_AreaInfo_r9mcch_Config_r9sf_AllocInfo_r9 sf_AllocInfo_r9;
 NhuMBSFN_AreaInfo_r9mcch_Config_r9signallingMCS_r9 signallingMCS_r9;
} NhuMBSFN_AreaInfo_r9mcch_Config_r9;

typedef struct NhuMBSFN_AreaInfo_r9
{
 TknPres pres;
 NhuMBSFN_AreaInfo_r9mbsfn_AreaId_r9 mbsfn_AreaId_r9;
 NhuMBSFN_AreaInfo_r9non_MBSFNregionLength non_MBSFNregionLength;
 NhuMBSFN_AreaInfo_r9notificationIndicator_r9 notificationIndicator_r9;
 NhuMBSFN_AreaInfo_r9mcch_Config_r9 mcch_Config_r9;
} NhuMBSFN_AreaInfo_r9;

typedef struct NhuMBSFN_AreaInfoLst_r9
{
 TknU16 noComp;
 NhuMBSFN_AreaInfo_r9 *member;
}NhuMBSFN_AreaInfoLst_r9;


typedef enum enumNhuMBMS_NotificationConfig_r9notificationRepetitionCoeff_r9
{
 NhuMBMS_NotificationConfig_r9notificationRepetitionCoeff_r9n2Enum,
 NhuMBMS_NotificationConfig_r9notificationRepetitionCoeff_r9n4Enum
} EnumNhuMBMS_NotificationConfig_r9notificationRepetitionCoeff_r9;
typedef TknU32 NhuMBMS_NotificationConfig_r9notificationRepetitionCoeff_r9;


typedef TknU32 NhuMBMS_NotificationConfig_r9notificationOffset_r9;


typedef TknU32 NhuMBMS_NotificationConfig_r9notificationSF_Idx_r9;

typedef struct NhuMBMS_NotificationConfig_r9
{
 TknPres pres;
 NhuMBMS_NotificationConfig_r9notificationRepetitionCoeff_r9 notificationRepetitionCoeff_r9;
 NhuMBMS_NotificationConfig_r9notificationOffset_r9 notificationOffset_r9;
 NhuMBMS_NotificationConfig_r9notificationSF_Idx_r9 notificationSF_Idx_r9;
} NhuMBMS_NotificationConfig_r9;


typedef TknStrOSXL NhuSysInfoBlockTyp13_r9lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp13_r9
{
 TknPres pres;
 NhuMBSFN_AreaInfoLst_r9 mbsfn_AreaInfoLst_r9;
 NhuMBMS_NotificationConfig_r9 notificationConfig_r9;
 NhuSysInfoBlockTyp13_r9lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp13_r9;


typedef enum enumNhuEAB_Config_r11eab_Category_r11
{
 NhuEAB_Config_r11eab_Category_r11aEnum,
 NhuEAB_Config_r11eab_Category_r11bEnum,
 NhuEAB_Config_r11eab_Category_r11cEnum
} EnumNhuEAB_Config_r11eab_Category_r11;
typedef TknU32 NhuEAB_Config_r11eab_Category_r11;


typedef TknStrBSXL NhuEAB_Config_r11eab_BarringBitmap_r11;
typedef struct NhuEAB_Config_r11
{
 TknPres pres;
 NhuEAB_Config_r11eab_Category_r11 eab_Category_r11;
 NhuEAB_Config_r11eab_BarringBitmap_r11 eab_BarringBitmap_r11;
} NhuEAB_Config_r11;

typedef struct NhuEAB_ConfigPLMN_r11
{
 TknPres pres;
 NhuEAB_Config_r11 eab_Config_r11;
} NhuEAB_ConfigPLMN_r11;

typedef struct NhuSysInfoBlockTyp14_r11eab_Param_r11eab_PerPLMN_Lst_r11
{
 TknU16 noComp;
 NhuEAB_ConfigPLMN_r11 *member;
}NhuSysInfoBlockTyp14_r11eab_Param_r11eab_PerPLMN_Lst_r11;

typedef struct NhuSysInfoBlockTyp14_r11eab_Param_r11
{
 TknU8 choice;
 union {
  NhuEAB_Config_r11 eab_Cmn_r11;
  NhuSysInfoBlockTyp14_r11eab_Param_r11eab_PerPLMN_Lst_r11 eab_PerPLMN_Lst_r11;
 } val;
} NhuSysInfoBlockTyp14_r11eab_Param_r11;


typedef TknStrOSXL NhuSysInfoBlockTyp14_r11lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp14_r11
{
 TknPres pres;
 NhuSysInfoBlockTyp14_r11eab_Param_r11 eab_Param_r11;
 NhuSysInfoBlockTyp14_r11lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp14_r11;


typedef TknU32 NhuMBMS_SAI_r11;

typedef struct NhuMBMS_SAI_Lst_r11
{
 TknU16 noComp;
 NhuMBMS_SAI_r11 *member;
}NhuMBMS_SAI_Lst_r11;


typedef TknU32 NhuARFCN_ValueEUTRA_r9;

typedef struct NhuMBMS_SAI_InterFreq_r11
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_r9 dl_CarrierFreq_r11;
 NhuMBMS_SAI_Lst_r11 mbms_SAI_Lst_r11;
} NhuMBMS_SAI_InterFreq_r11;

typedef struct NhuMBMS_SAI_InterFreqLst_r11
{
 TknU16 noComp;
 NhuMBMS_SAI_InterFreq_r11 *member;
}NhuMBMS_SAI_InterFreqLst_r11;


typedef TknU32 NhuFreqBandIndicator_r11;

typedef struct NhuMultiBandInfoLst_r11
{
 TknU16 noComp;
 NhuFreqBandIndicator_r11 *member;
}NhuMultiBandInfoLst_r11;

typedef struct NhuMBMS_SAI_InterFreq_v1140
{
 TknPres pres;
 NhuMultiBandInfoLst_r11 multiBandInfoLst_r11;
} NhuMBMS_SAI_InterFreq_v1140;

typedef struct NhuMBMS_SAI_InterFreqLst_v1140
{
 TknU16 noComp;
 NhuMBMS_SAI_InterFreq_v1140 *member;
}NhuMBMS_SAI_InterFreqLst_v1140;


typedef TknStrOSXL NhuSysInfoBlockTyp15_r11lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp15_r11extaddgrp_1
{
 TknPres pres;
 NhuMBMS_SAI_InterFreqLst_v1140 mbms_SAI_InterFreqLst_v1140;
} NhuSysInfoBlockTyp15_r11extaddgrp_1;

typedef struct NhuSysInfoBlockTyp15_r11
{
 TknPres pres;
 NhuMBMS_SAI_Lst_r11 mbms_SAI_IntraFreq_r11;
 NhuMBMS_SAI_InterFreqLst_r11 mbms_SAI_InterFreqLst_r11;
 NhuSysInfoBlockTyp15_r11lateNonCriticalExtn lateNonCriticalExtn;
 NhuSysInfoBlockTyp15_r11extaddgrp_1 extaddgrp_1;
} NhuSysInfoBlockTyp15_r11;


typedef TknU32 NhuSysInfoBlockTyp16_r11timeInfo_r11timeInfoUTC_r11;


typedef TknStrBSXL NhuSysInfoBlockTyp16_r11timeInfo_r11dayLightSavingTime_r11;

typedef TknS32 NhuSysInfoBlockTyp16_r11timeInfo_r11leapSeconds_r11;


typedef TknS32 NhuSysInfoBlockTyp16_r11timeInfo_r11localTimeOffset_r11;

typedef struct NhuSysInfoBlockTyp16_r11timeInfo_r11
{
 TknPres pres;
 NhuSysInfoBlockTyp16_r11timeInfo_r11timeInfoUTC_r11 timeInfoUTC_r11;
 NhuSysInfoBlockTyp16_r11timeInfo_r11dayLightSavingTime_r11 dayLightSavingTime_r11;
 NhuSysInfoBlockTyp16_r11timeInfo_r11leapSeconds_r11 leapSeconds_r11;
 NhuSysInfoBlockTyp16_r11timeInfo_r11localTimeOffset_r11 localTimeOffset_r11;
} NhuSysInfoBlockTyp16_r11timeInfo_r11;


typedef TknStrOSXL NhuSysInfoBlockTyp16_r11lateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp16_r11
{
 TknPres pres;
 NhuSysInfoBlockTyp16_r11timeInfo_r11 timeInfo_r11;
 NhuSysInfoBlockTyp16_r11lateNonCriticalExtn lateNonCriticalExtn;
} NhuSysInfoBlockTyp16_r11;


typedef TknStrOSXL NhuSysInfo_v8a0_IEslateNonCriticalExtn;
typedef struct NhuSysInfo_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSysInfo_v8a0_IEsnonCriticalExtn;

typedef struct NhuSysInfo_v8a0_IEs
{
 TknPres pres;
 NhuSysInfo_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuSysInfo_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSysInfo_v8a0_IEs;

typedef struct NhuSysInfo_r8_IEssib_TypAndInfoMember
{
 TknU8 choice;
 union {
  NhuSysInfoBlockTyp2 sib2;
  NhuSysInfoBlockTyp3 sib3;
  NhuSysInfoBlockTyp4 sib4;
  NhuSysInfoBlockTyp5 sib5;
  NhuSysInfoBlockTyp6 sib6;
  NhuSysInfoBlockTyp7 sib7;
  NhuSysInfoBlockTyp8 sib8;
  NhuSysInfoBlockTyp9 sib9;
  NhuSysInfoBlockTyp10 sib10;
  NhuSysInfoBlockTyp11 sib11;
  NhuSysInfoBlockTyp12_r9 sib12_v920;
  NhuSysInfoBlockTyp13_r9 sib13_v920;
  NhuSysInfoBlockTyp14_r11 sib14_v1130;
  NhuSysInfoBlockTyp15_r11 sib15_v1130;
  NhuSysInfoBlockTyp16_r11 sib16_v1130;
 } val;
} NhuSysInfo_r8_IEssib_TypAndInfoMember;

typedef struct NhuSysInfo_r8_IEssib_TypAndInfo
{
 TknU16 noComp;
 NhuSysInfo_r8_IEssib_TypAndInfoMember *member;
}NhuSysInfo_r8_IEssib_TypAndInfo;

typedef struct NhuSysInfo_r8_IEs
{
 TknPres pres;
 NhuSysInfo_r8_IEssib_TypAndInfo sib_TypAndInfo;
 NhuSysInfo_v8a0_IEs nonCriticalExtn;
} NhuSysInfo_r8_IEs;

typedef struct NhuSysInfocriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuSysInfocriticalExtnscriticalExtnsFuture;

typedef struct NhuSysInfocriticalExtns
{
 TknU8 choice;
 union {
  NhuSysInfo_r8_IEs systemInfo_r8;
  NhuSysInfocriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuSysInfocriticalExtns;

typedef struct NhuSysInfo
{
 TknPres pres;
 NhuSysInfocriticalExtns criticalExtns;
} NhuSysInfo;


typedef TknU32 NhuMCC_MNC_Digit;

typedef struct NhuMCC
{
 TknU16 noComp;
 NhuMCC_MNC_Digit *member;
}NhuMCC;

typedef struct NhuMNC
{
 TknU16 noComp;
 NhuMCC_MNC_Digit *member;
}NhuMNC;

typedef struct NhuPLMN_Identity
{
 TknPres pres;
 NhuMCC mcc;
 NhuMNC mnc;
} NhuPLMN_Identity;


typedef enum enumNhuPLMN_IdentityInfocellReservedForOperatorUse
{
 NhuPLMN_IdentityInfocellReservedForOperatorUsereservedEnum,
 NhuPLMN_IdentityInfocellReservedForOperatorUsenotReservedEnum
} EnumNhuPLMN_IdentityInfocellReservedForOperatorUse;
typedef TknU32 NhuPLMN_IdentityInfocellReservedForOperatorUse;

typedef struct NhuPLMN_IdentityInfo
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuPLMN_IdentityInfocellReservedForOperatorUse cellReservedForOperatorUse;
} NhuPLMN_IdentityInfo;

typedef struct NhuPLMN_IdentityLst
{
 TknU16 noComp;
 NhuPLMN_IdentityInfo *member;
}NhuPLMN_IdentityLst;


typedef TknStrBSXL NhuTrackingAreaCode;

typedef TknStrBSXL NhuCellIdentity;

typedef TknStrBSXL NhuCSG_Identity;

typedef TknU32 NhuFreqBandIndicator;


typedef enum enumNhuSIB_Typ
{
 NhuSIB_TypsibTyp3Enum,
 NhuSIB_TypsibTyp4Enum,
 NhuSIB_TypsibTyp5Enum,
 NhuSIB_TypsibTyp6Enum,
 NhuSIB_TypsibTyp7Enum,
 NhuSIB_TypsibTyp8Enum,
 NhuSIB_TypsibTyp9Enum,
 NhuSIB_TypsibTyp10Enum,
 NhuSIB_TypsibTyp11Enum,
 NhuSIB_TypsibTyp12_v920Enum,
 NhuSIB_TypsibTyp13_v920Enum,
 NhuSIB_TypsibTyp14_v1130Enum,
 NhuSIB_TypsibTyp15_v1130Enum,
 NhuSIB_TypsibTyp16_v1130Enum,
 NhuSIB_Typspare2Enum,
 NhuSIB_Typspare1Enum
} EnumNhuSIB_Typ;
typedef TknU32 NhuSIB_Typ;

typedef struct NhuSIB_MappingInfo
{
 TknU16 noComp;
 NhuSIB_Typ *member;
}NhuSIB_MappingInfo;


typedef enum enumNhuSchedulingInfosi_Periodicity
{
 NhuSchedulingInfosi_Periodicityrf8Enum,
 NhuSchedulingInfosi_Periodicityrf16Enum,
 NhuSchedulingInfosi_Periodicityrf32Enum,
 NhuSchedulingInfosi_Periodicityrf64Enum,
 NhuSchedulingInfosi_Periodicityrf128Enum,
 NhuSchedulingInfosi_Periodicityrf256Enum,
 NhuSchedulingInfosi_Periodicityrf512Enum
} EnumNhuSchedulingInfosi_Periodicity;
typedef TknU32 NhuSchedulingInfosi_Periodicity;

typedef struct NhuSchedulingInfo
{
 TknPres pres;
 NhuSchedulingInfosi_Periodicity si_Periodicity;
 NhuSIB_MappingInfo sib_MappingInfo;
} NhuSchedulingInfo;

typedef struct NhuSchedulingInfoLst
{
 TknU16 noComp;
 NhuSchedulingInfo *member;
}NhuSchedulingInfoLst;


typedef enum enumNhuTDD_ConfigsubframeAssignment
{
 NhuTDD_ConfigsubframeAssignmentsa0Enum,
 NhuTDD_ConfigsubframeAssignmentsa1Enum,
 NhuTDD_ConfigsubframeAssignmentsa2Enum,
 NhuTDD_ConfigsubframeAssignmentsa3Enum,
 NhuTDD_ConfigsubframeAssignmentsa4Enum,
 NhuTDD_ConfigsubframeAssignmentsa5Enum,
 NhuTDD_ConfigsubframeAssignmentsa6Enum
} EnumNhuTDD_ConfigsubframeAssignment;
typedef TknU32 NhuTDD_ConfigsubframeAssignment;


typedef enum enumNhuTDD_ConfigspecialSubfrmPatterns
{
 NhuTDD_ConfigspecialSubfrmPatternsssp0Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp1Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp2Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp3Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp4Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp5Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp6Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp7Enum,
 NhuTDD_ConfigspecialSubfrmPatternsssp8Enum
} EnumNhuTDD_ConfigspecialSubfrmPatterns;
typedef TknU32 NhuTDD_ConfigspecialSubfrmPatterns;

typedef struct NhuTDD_Config
{
 TknPres pres;
 NhuTDD_ConfigsubframeAssignment subframeAssignment;
 NhuTDD_ConfigspecialSubfrmPatterns specialSubfrmPatterns;
} NhuTDD_Config;


typedef TknU32 NhuCellSelectionInfo_v920q_QualMinOffset_r9;

typedef struct NhuCellSelectionInfo_v920
{
 TknPres pres;
 NhuQ_QualMin_r9 q_QualMin_r9;
 NhuCellSelectionInfo_v920q_QualMinOffset_r9 q_QualMinOffset_r9;
} NhuCellSelectionInfo_v920;


typedef enum enumNhuTDD_Config_v1130specialSubfrmPatterns_v1130
{
 NhuTDD_Config_v1130specialSubfrmPatterns_v1130ssp7Enum,
 NhuTDD_Config_v1130specialSubfrmPatterns_v1130ssp9Enum
} EnumNhuTDD_Config_v1130specialSubfrmPatterns_v1130;
typedef TknU32 NhuTDD_Config_v1130specialSubfrmPatterns_v1130;

typedef struct NhuTDD_Config_v1130
{
 TknPres pres;
 NhuTDD_Config_v1130specialSubfrmPatterns_v1130 specialSubfrmPatterns_v1130;
} NhuTDD_Config_v1130;

typedef struct NhuCellSelectionInfo_v1130
{
 TknPres pres;
 NhuQ_QualMin_r9 q_QualMinWB_r11;
} NhuCellSelectionInfo_v1130;

typedef struct NhuSysInfoBlockTyp1_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSysInfoBlockTyp1_v1130_IEsnonCriticalExtn;

typedef struct NhuSysInfoBlockTyp1_v1130_IEs
{
 TknPres pres;
 NhuTDD_Config_v1130 tdd_Config_v1130;
 NhuCellSelectionInfo_v1130 cellSelectionInfo_v1130;
 NhuSysInfoBlockTyp1_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuSysInfoBlockTyp1_v1130_IEs;


typedef enum enumNhuSysInfoBlockTyp1_v920_IEsims_EmergencySupport_r9
{
 NhuSysInfoBlockTyp1_v920_IEsims_EmergencySupport_r9trueEnum
} EnumNhuSysInfoBlockTyp1_v920_IEsims_EmergencySupport_r9;
typedef TknU32 NhuSysInfoBlockTyp1_v920_IEsims_EmergencySupport_r9;

typedef struct NhuSysInfoBlockTyp1_v920_IEs
{
 TknPres pres;
 NhuSysInfoBlockTyp1_v920_IEsims_EmergencySupport_r9 ims_EmergencySupport_r9;
 NhuCellSelectionInfo_v920 cellSelectionInfo_v920;
 NhuSysInfoBlockTyp1_v1130_IEs nonCriticalExtn;
} NhuSysInfoBlockTyp1_v920_IEs;


typedef TknStrOSXL NhuSysInfoBlockTyp1_v890_IEslateNonCriticalExtn;
typedef struct NhuSysInfoBlockTyp1_v890_IEs
{
 TknPres pres;
 NhuSysInfoBlockTyp1_v890_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuSysInfoBlockTyp1_v920_IEs nonCriticalExtn;
} NhuSysInfoBlockTyp1_v890_IEs;


typedef enum enumNhuSysInfoBlockTyp1cellAccessRelatedInfocellBarred
{
 NhuSysInfoBlockTyp1cellAccessRelatedInfocellBarredbarredEnum,
 NhuSysInfoBlockTyp1cellAccessRelatedInfocellBarrednotBarredEnum
} EnumNhuSysInfoBlockTyp1cellAccessRelatedInfocellBarred;
typedef TknU32 NhuSysInfoBlockTyp1cellAccessRelatedInfocellBarred;


typedef enum enumNhuSysInfoBlockTyp1cellAccessRelatedInfointraFreqReselection
{
 NhuSysInfoBlockTyp1cellAccessRelatedInfointraFreqReselectionallowedEnum,
 NhuSysInfoBlockTyp1cellAccessRelatedInfointraFreqReselectionnotAllowedEnum
} EnumNhuSysInfoBlockTyp1cellAccessRelatedInfointraFreqReselection;
typedef TknU32 NhuSysInfoBlockTyp1cellAccessRelatedInfointraFreqReselection;


typedef TknU8 NhuSysInfoBlockTyp1cellAccessRelatedInfocsg_Ind;

typedef struct NhuSysInfoBlockTyp1cellAccessRelatedInfo
{
 TknPres pres;
 NhuPLMN_IdentityLst plmn_IdentityLst;
 NhuTrackingAreaCode trackingAreaCode;
 NhuCellIdentity cellIdentity;
 NhuSysInfoBlockTyp1cellAccessRelatedInfocellBarred cellBarred;
 NhuSysInfoBlockTyp1cellAccessRelatedInfointraFreqReselection intraFreqReselection;
 NhuSysInfoBlockTyp1cellAccessRelatedInfocsg_Ind csg_Ind;
 NhuCSG_Identity csg_Identity;
} NhuSysInfoBlockTyp1cellAccessRelatedInfo;


typedef TknU32 NhuSysInfoBlockTyp1cellSelectionInfoq_RxLevMinOffset;

typedef struct NhuSysInfoBlockTyp1cellSelectionInfo
{
 TknPres pres;
 NhuQ_RxLevMin q_RxLevMin;
 NhuSysInfoBlockTyp1cellSelectionInfoq_RxLevMinOffset q_RxLevMinOffset;
} NhuSysInfoBlockTyp1cellSelectionInfo;


typedef enum enumNhuSysInfoBlockTyp1si_WindowLength
{
 NhuSysInfoBlockTyp1si_WindowLengthms1Enum,
 NhuSysInfoBlockTyp1si_WindowLengthms2Enum,
 NhuSysInfoBlockTyp1si_WindowLengthms5Enum,
 NhuSysInfoBlockTyp1si_WindowLengthms10Enum,
 NhuSysInfoBlockTyp1si_WindowLengthms15Enum,
 NhuSysInfoBlockTyp1si_WindowLengthms20Enum,
 NhuSysInfoBlockTyp1si_WindowLengthms40Enum
} EnumNhuSysInfoBlockTyp1si_WindowLength;
typedef TknU32 NhuSysInfoBlockTyp1si_WindowLength;


typedef TknU32 NhuSysInfoBlockTyp1systemInfoValueTag;

typedef struct NhuSysInfoBlockTyp1
{
 TknPres pres;
 NhuSysInfoBlockTyp1cellAccessRelatedInfo cellAccessRelatedInfo;
 NhuSysInfoBlockTyp1cellSelectionInfo cellSelectionInfo;
 NhuP_Max p_Max;
 NhuFreqBandIndicator freqBandIndicator;
 NhuSchedulingInfoLst schedulingInfoLst;
 NhuTDD_Config tdd_Config;
 NhuSysInfoBlockTyp1si_WindowLength si_WindowLength;
 NhuSysInfoBlockTyp1systemInfoValueTag systemInfoValueTag;
 NhuSysInfoBlockTyp1_v890_IEs nonCriticalExtn;
} NhuSysInfoBlockTyp1;

typedef struct NhuBCCH_DL_SCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuSysInfo systemInfo;
  NhuSysInfoBlockTyp1 systemInfoBlockTyp1;
 } val;
} NhuBCCH_DL_SCH_MsgTypc1;

typedef struct NhuBCCH_DL_SCH_MsgTypmessageClassExtn
{
 TknPres pres;
} NhuBCCH_DL_SCH_MsgTypmessageClassExtn;

typedef struct NhuBCCH_DL_SCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuBCCH_DL_SCH_MsgTypc1 c1;
  NhuBCCH_DL_SCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuBCCH_DL_SCH_MsgTyp;

typedef struct NhuBCCH_DL_SCH_Msg
{
 TknPres pres;
 NhuBCCH_DL_SCH_MsgTyp message;
} NhuBCCH_DL_SCH_Msg;

typedef struct NhuCmnSF_AllocPatternLst_r9
{
 TknU16 noComp;
 NhuMBSFN_SubfrmConfig *member;
}NhuCmnSF_AllocPatternLst_r9;


typedef TknU32 NhuPMCH_Config_r9sf_AllocEnd_r9;


typedef TknU32 NhuPMCH_Config_r9dataMCS_r9;


typedef enum enumNhuPMCH_Config_r9mch_SchedulingPeriod_r9
{
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf8Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf16Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf32Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf64Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf128Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf256Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf512Enum,
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9rf1024Enum
} EnumNhuPMCH_Config_r9mch_SchedulingPeriod_r9;
typedef TknU32 NhuPMCH_Config_r9mch_SchedulingPeriod_r9;

typedef struct NhuPMCH_Config_r9
{
 TknPres pres;
 NhuPMCH_Config_r9sf_AllocEnd_r9 sf_AllocEnd_r9;
 NhuPMCH_Config_r9dataMCS_r9 dataMCS_r9;
 NhuPMCH_Config_r9mch_SchedulingPeriod_r9 mch_SchedulingPeriod_r9;
} NhuPMCH_Config_r9;


typedef TknU32 NhuTMGI_r9plmn_Id_r9plmn_Idx_r9;

typedef struct NhuTMGI_r9plmn_Id_r9
{
 TknU8 choice;
 union {
  NhuTMGI_r9plmn_Id_r9plmn_Idx_r9 plmn_Idx_r9;
  NhuPLMN_Identity explicitValue_r9;
 } val;
} NhuTMGI_r9plmn_Id_r9;


typedef TknStrOSXL NhuTMGI_r9serviceId_r9;
typedef struct NhuTMGI_r9
{
 TknPres pres;
 NhuTMGI_r9plmn_Id_r9 plmn_Id_r9;
 NhuTMGI_r9serviceId_r9 serviceId_r9;
} NhuTMGI_r9;


typedef TknStrOSXL NhuMBMS_SessionInfo_r9sessionId_r9;

typedef TknU32 NhuMBMS_SessionInfo_r9logicalChannelIdentity_r9;

typedef struct NhuMBMS_SessionInfo_r9
{
 TknPres pres;
 NhuTMGI_r9 tmgi_r9;
 NhuMBMS_SessionInfo_r9sessionId_r9 sessionId_r9;
 NhuMBMS_SessionInfo_r9logicalChannelIdentity_r9 logicalChannelIdentity_r9;
} NhuMBMS_SessionInfo_r9;

typedef struct NhuMBMS_SessionInfoLst_r9
{
 TknU16 noComp;
 NhuMBMS_SessionInfo_r9 *member;
}NhuMBMS_SessionInfoLst_r9;

typedef struct NhuPMCH_Info_r9
{
 TknPres pres;
 NhuPMCH_Config_r9 pmch_Config_r9;
 NhuMBMS_SessionInfoLst_r9 mbms_SessionInfoLst_r9;
} NhuPMCH_Info_r9;

typedef struct NhuPMCH_InfoLst_r9
{
 TknU16 noComp;
 NhuPMCH_Info_r9 *member;
}NhuPMCH_InfoLst_r9;


typedef TknStrOSXL NhuMBSFNAreaCfg_v930_IEslateNonCriticalExtn;
typedef struct NhuMBSFNAreaCfg_v930_IEsnonCriticalExtn
{
 TknPres pres;
} NhuMBSFNAreaCfg_v930_IEsnonCriticalExtn;

typedef struct NhuMBSFNAreaCfg_v930_IEs
{
 TknPres pres;
 NhuMBSFNAreaCfg_v930_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuMBSFNAreaCfg_v930_IEsnonCriticalExtn nonCriticalExtn;
} NhuMBSFNAreaCfg_v930_IEs;


typedef enum enumNhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9
{
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf4Enum,
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf8Enum,
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf16Enum,
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf32Enum,
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf64Enum,
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf128Enum,
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9rf256Enum
} EnumNhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9;
typedef TknU32 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9;

typedef struct NhuMBSFNAreaCfg_r9
{
 TknPres pres;
 NhuCmnSF_AllocPatternLst_r9 commonSF_Alloc_r9;
 NhuMBSFNAreaCfg_r9commonSF_AllocPeriod_r9 commonSF_AllocPeriod_r9;
 NhuPMCH_InfoLst_r9 pmch_InfoLst_r9;
 NhuMBSFNAreaCfg_v930_IEs nonCriticalExtn;
} NhuMBSFNAreaCfg_r9;

typedef struct NhuCountingRqstInfo_r10
{
 TknPres pres;
 NhuTMGI_r9 tmgi_r10;
} NhuCountingRqstInfo_r10;

typedef struct NhuCountingRqstLst_r10
{
 TknU16 noComp;
 NhuCountingRqstInfo_r10 *member;
}NhuCountingRqstLst_r10;


typedef TknStrOSXL NhuMBMSCountingRqst_r10lateNonCriticalExtn;
typedef struct NhuMBMSCountingRqst_r10nonCriticalExtn
{
 TknPres pres;
} NhuMBMSCountingRqst_r10nonCriticalExtn;

typedef struct NhuMBMSCountingRqst_r10
{
 TknPres pres;
 NhuCountingRqstLst_r10 countingRqstLst_r10;
 NhuMBMSCountingRqst_r10lateNonCriticalExtn lateNonCriticalExtn;
 NhuMBMSCountingRqst_r10nonCriticalExtn nonCriticalExtn;
} NhuMBMSCountingRqst_r10;

typedef struct NhuMCCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuMBSFNAreaCfg_r9 mbsfnAreaCfg_r9;
 } val;
} NhuMCCH_MsgTypc1;

typedef struct NhuMCCH_MsgTyplaterc2
{
 TknU8 choice;
 union {
  NhuMBMSCountingRqst_r10 mbmsCountingRqst_r10;
 } val;
} NhuMCCH_MsgTyplaterc2;

typedef struct NhuMCCH_MsgTyplatermessageClassExtn
{
 TknPres pres;
} NhuMCCH_MsgTyplatermessageClassExtn;

typedef struct NhuMCCH_MsgTyplater
{
 TknU8 choice;
 union {
  NhuMCCH_MsgTyplaterc2 c2;
  NhuMCCH_MsgTyplatermessageClassExtn messageClassExtn;
 } val;
} NhuMCCH_MsgTyplater;

typedef struct NhuMCCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuMCCH_MsgTypc1 c1;
  NhuMCCH_MsgTyplater later;
 } val;
} NhuMCCH_MsgTyp;

typedef struct NhuMCCH_Msg
{
 TknPres pres;
 NhuMCCH_MsgTyp message;
} NhuMCCH_Msg;


typedef TknStrBSXL NhuMMEC;

typedef TknStrBSXL NhuS_TMSIm_TMSI;
typedef struct NhuS_TMSI
{
 TknPres pres;
 NhuMMEC mmec;
 NhuS_TMSIm_TMSI m_TMSI;
} NhuS_TMSI;


typedef TknU32 NhuIMSI_Digit;

typedef struct NhuIMSI
{
 TknU16 noComp;
 NhuIMSI_Digit *member;
}NhuIMSI;

typedef struct NhuPagUE_Identity
{
 TknU8 choice;
 union {
  NhuS_TMSI s_TMSI;
  NhuIMSI imsi;
 } val;
} NhuPagUE_Identity;


typedef enum enumNhuPagRecordcn_Domain
{
 NhuPagRecordcn_DomainpsEnum,
 NhuPagRecordcn_DomaincsEnum
} EnumNhuPagRecordcn_Domain;
typedef TknU32 NhuPagRecordcn_Domain;

typedef struct NhuPagRecord
{
 TknPres pres;
 NhuPagUE_Identity ue_Identity;
 NhuPagRecordcn_Domain cn_Domain;
} NhuPagRecord;

typedef struct NhuPagRecordLst
{
 TknU16 noComp;
 NhuPagRecord *member;
}NhuPagRecordLst;


typedef enum enumNhuPag_v1130_IEseab_ParamModfn_r11
{
 NhuPag_v1130_IEseab_ParamModfn_r11trueEnum
} EnumNhuPag_v1130_IEseab_ParamModfn_r11;
typedef TknU32 NhuPag_v1130_IEseab_ParamModfn_r11;

typedef struct NhuPag_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuPag_v1130_IEsnonCriticalExtn;

typedef struct NhuPag_v1130_IEs
{
 TknPres pres;
 NhuPag_v1130_IEseab_ParamModfn_r11 eab_ParamModfn_r11;
 NhuPag_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuPag_v1130_IEs;


typedef enum enumNhuPag_v920_IEscmas_Ind_r9
{
 NhuPag_v920_IEscmas_Ind_r9trueEnum
} EnumNhuPag_v920_IEscmas_Ind_r9;
typedef TknU32 NhuPag_v920_IEscmas_Ind_r9;

typedef struct NhuPag_v920_IEs
{
 TknPres pres;
 NhuPag_v920_IEscmas_Ind_r9 cmas_Ind_r9;
 NhuPag_v1130_IEs nonCriticalExtn;
} NhuPag_v920_IEs;


typedef TknStrOSXL NhuPag_v890_IEslateNonCriticalExtn;
typedef struct NhuPag_v890_IEs
{
 TknPres pres;
 NhuPag_v890_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuPag_v920_IEs nonCriticalExtn;
} NhuPag_v890_IEs;


typedef enum enumNhuPagsystemInfoModfn
{
 NhuPagsystemInfoModfntrueEnum
} EnumNhuPagsystemInfoModfn;
typedef TknU32 NhuPagsystemInfoModfn;


typedef enum enumNhuPagetws_Ind
{
 NhuPagetws_IndtrueEnum
} EnumNhuPagetws_Ind;
typedef TknU32 NhuPagetws_Ind;

typedef struct NhuPag
{
 TknPres pres;
 NhuPagRecordLst pagingRecordLst;
 NhuPagsystemInfoModfn systemInfoModfn;
 NhuPagetws_Ind etws_Ind;
 NhuPag_v890_IEs nonCriticalExtn;
} NhuPag;

typedef struct NhuPCCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuPag paging;
 } val;
} NhuPCCH_MsgTypc1;

typedef struct NhuPCCH_MsgTypmessageClassExtn
{
 TknPres pres;
} NhuPCCH_MsgTypmessageClassExtn;

typedef struct NhuPCCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuPCCH_MsgTypc1 c1;
  NhuPCCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuPCCH_MsgTyp;

typedef struct NhuPCCH_Msg
{
 TknPres pres;
 NhuPCCH_MsgTyp message;
} NhuPCCH_Msg;


typedef TknU32 NhuRRC_TrnsxnId;


typedef enum enumNhuT_PollRetransmit
{
 NhuT_PollRetransmitms5Enum,
 NhuT_PollRetransmitms10Enum,
 NhuT_PollRetransmitms15Enum,
 NhuT_PollRetransmitms20Enum,
 NhuT_PollRetransmitms25Enum,
 NhuT_PollRetransmitms30Enum,
 NhuT_PollRetransmitms35Enum,
 NhuT_PollRetransmitms40Enum,
 NhuT_PollRetransmitms45Enum,
 NhuT_PollRetransmitms50Enum,
 NhuT_PollRetransmitms55Enum,
 NhuT_PollRetransmitms60Enum,
 NhuT_PollRetransmitms65Enum,
 NhuT_PollRetransmitms70Enum,
 NhuT_PollRetransmitms75Enum,
 NhuT_PollRetransmitms80Enum,
 NhuT_PollRetransmitms85Enum,
 NhuT_PollRetransmitms90Enum,
 NhuT_PollRetransmitms95Enum,
 NhuT_PollRetransmitms100Enum,
 NhuT_PollRetransmitms105Enum,
 NhuT_PollRetransmitms110Enum,
 NhuT_PollRetransmitms115Enum,
 NhuT_PollRetransmitms120Enum,
 NhuT_PollRetransmitms125Enum,
 NhuT_PollRetransmitms130Enum,
 NhuT_PollRetransmitms135Enum,
 NhuT_PollRetransmitms140Enum,
 NhuT_PollRetransmitms145Enum,
 NhuT_PollRetransmitms150Enum,
 NhuT_PollRetransmitms155Enum,
 NhuT_PollRetransmitms160Enum,
 NhuT_PollRetransmitms165Enum,
 NhuT_PollRetransmitms170Enum,
 NhuT_PollRetransmitms175Enum,
 NhuT_PollRetransmitms180Enum,
 NhuT_PollRetransmitms185Enum,
 NhuT_PollRetransmitms190Enum,
 NhuT_PollRetransmitms195Enum,
 NhuT_PollRetransmitms200Enum,
 NhuT_PollRetransmitms205Enum,
 NhuT_PollRetransmitms210Enum,
 NhuT_PollRetransmitms215Enum,
 NhuT_PollRetransmitms220Enum,
 NhuT_PollRetransmitms225Enum,
 NhuT_PollRetransmitms230Enum,
 NhuT_PollRetransmitms235Enum,
 NhuT_PollRetransmitms240Enum,
 NhuT_PollRetransmitms245Enum,
 NhuT_PollRetransmitms250Enum,
 NhuT_PollRetransmitms300Enum,
 NhuT_PollRetransmitms350Enum,
 NhuT_PollRetransmitms400Enum,
 NhuT_PollRetransmitms450Enum,
 NhuT_PollRetransmitms500Enum,
 NhuT_PollRetransmitspare9Enum,
 NhuT_PollRetransmitspare8Enum,
 NhuT_PollRetransmitspare7Enum,
 NhuT_PollRetransmitspare6Enum,
 NhuT_PollRetransmitspare5Enum,
 NhuT_PollRetransmitspare4Enum,
 NhuT_PollRetransmitspare3Enum,
 NhuT_PollRetransmitspare2Enum,
 NhuT_PollRetransmitspare1Enum
} EnumNhuT_PollRetransmit;
typedef TknU32 NhuT_PollRetransmit;


typedef enum enumNhuPollPDU
{
 NhuPollPDUp4Enum,
 NhuPollPDUp8Enum,
 NhuPollPDUp16Enum,
 NhuPollPDUp32Enum,
 NhuPollPDUp64Enum,
 NhuPollPDUp128Enum,
 NhuPollPDUp256Enum,
 NhuPollPDUpInfinityEnum
} EnumNhuPollPDU;
typedef TknU32 NhuPollPDU;


typedef enum enumNhuPollByte
{
 NhuPollBytekB25Enum,
 NhuPollBytekB50Enum,
 NhuPollBytekB75Enum,
 NhuPollBytekB100Enum,
 NhuPollBytekB125Enum,
 NhuPollBytekB250Enum,
 NhuPollBytekB375Enum,
 NhuPollBytekB500Enum,
 NhuPollBytekB750Enum,
 NhuPollBytekB1000Enum,
 NhuPollBytekB1250Enum,
 NhuPollBytekB1500Enum,
 NhuPollBytekB2000Enum,
 NhuPollBytekB3000Enum,
 NhuPollBytekBinfinityEnum,
 NhuPollBytespare1Enum
} EnumNhuPollByte;
typedef TknU32 NhuPollByte;


typedef enum enumNhuUL_AM_RLCmaxRetxThreshold
{
 NhuUL_AM_RLCmaxRetxThresholdt1Enum,
 NhuUL_AM_RLCmaxRetxThresholdt2Enum,
 NhuUL_AM_RLCmaxRetxThresholdt3Enum,
 NhuUL_AM_RLCmaxRetxThresholdt4Enum,
 NhuUL_AM_RLCmaxRetxThresholdt6Enum,
 NhuUL_AM_RLCmaxRetxThresholdt8Enum,
 NhuUL_AM_RLCmaxRetxThresholdt16Enum,
 NhuUL_AM_RLCmaxRetxThresholdt32Enum
} EnumNhuUL_AM_RLCmaxRetxThreshold;
typedef TknU32 NhuUL_AM_RLCmaxRetxThreshold;

typedef struct NhuUL_AM_RLC
{
 TknPres pres;
 NhuT_PollRetransmit t_PollRetransmit;
 NhuPollPDU pollPDU;
 NhuPollByte pollByte;
 NhuUL_AM_RLCmaxRetxThreshold maxRetxThreshold;
} NhuUL_AM_RLC;


typedef enum enumNhuT_Reordering
{
 NhuT_Reorderingms0Enum,
 NhuT_Reorderingms5Enum,
 NhuT_Reorderingms10Enum,
 NhuT_Reorderingms15Enum,
 NhuT_Reorderingms20Enum,
 NhuT_Reorderingms25Enum,
 NhuT_Reorderingms30Enum,
 NhuT_Reorderingms35Enum,
 NhuT_Reorderingms40Enum,
 NhuT_Reorderingms45Enum,
 NhuT_Reorderingms50Enum,
 NhuT_Reorderingms55Enum,
 NhuT_Reorderingms60Enum,
 NhuT_Reorderingms65Enum,
 NhuT_Reorderingms70Enum,
 NhuT_Reorderingms75Enum,
 NhuT_Reorderingms80Enum,
 NhuT_Reorderingms85Enum,
 NhuT_Reorderingms90Enum,
 NhuT_Reorderingms95Enum,
 NhuT_Reorderingms100Enum,
 NhuT_Reorderingms110Enum,
 NhuT_Reorderingms120Enum,
 NhuT_Reorderingms130Enum,
 NhuT_Reorderingms140Enum,
 NhuT_Reorderingms150Enum,
 NhuT_Reorderingms160Enum,
 NhuT_Reorderingms170Enum,
 NhuT_Reorderingms180Enum,
 NhuT_Reorderingms190Enum,
 NhuT_Reorderingms200Enum,
 NhuT_Reorderingspare1Enum
} EnumNhuT_Reordering;
typedef TknU32 NhuT_Reordering;


typedef enum enumNhuT_StatusProhibit
{
 NhuT_StatusProhibitms0Enum,
 NhuT_StatusProhibitms5Enum,
 NhuT_StatusProhibitms10Enum,
 NhuT_StatusProhibitms15Enum,
 NhuT_StatusProhibitms20Enum,
 NhuT_StatusProhibitms25Enum,
 NhuT_StatusProhibitms30Enum,
 NhuT_StatusProhibitms35Enum,
 NhuT_StatusProhibitms40Enum,
 NhuT_StatusProhibitms45Enum,
 NhuT_StatusProhibitms50Enum,
 NhuT_StatusProhibitms55Enum,
 NhuT_StatusProhibitms60Enum,
 NhuT_StatusProhibitms65Enum,
 NhuT_StatusProhibitms70Enum,
 NhuT_StatusProhibitms75Enum,
 NhuT_StatusProhibitms80Enum,
 NhuT_StatusProhibitms85Enum,
 NhuT_StatusProhibitms90Enum,
 NhuT_StatusProhibitms95Enum,
 NhuT_StatusProhibitms100Enum,
 NhuT_StatusProhibitms105Enum,
 NhuT_StatusProhibitms110Enum,
 NhuT_StatusProhibitms115Enum,
 NhuT_StatusProhibitms120Enum,
 NhuT_StatusProhibitms125Enum,
 NhuT_StatusProhibitms130Enum,
 NhuT_StatusProhibitms135Enum,
 NhuT_StatusProhibitms140Enum,
 NhuT_StatusProhibitms145Enum,
 NhuT_StatusProhibitms150Enum,
 NhuT_StatusProhibitms155Enum,
 NhuT_StatusProhibitms160Enum,
 NhuT_StatusProhibitms165Enum,
 NhuT_StatusProhibitms170Enum,
 NhuT_StatusProhibitms175Enum,
 NhuT_StatusProhibitms180Enum,
 NhuT_StatusProhibitms185Enum,
 NhuT_StatusProhibitms190Enum,
 NhuT_StatusProhibitms195Enum,
 NhuT_StatusProhibitms200Enum,
 NhuT_StatusProhibitms205Enum,
 NhuT_StatusProhibitms210Enum,
 NhuT_StatusProhibitms215Enum,
 NhuT_StatusProhibitms220Enum,
 NhuT_StatusProhibitms225Enum,
 NhuT_StatusProhibitms230Enum,
 NhuT_StatusProhibitms235Enum,
 NhuT_StatusProhibitms240Enum,
 NhuT_StatusProhibitms245Enum,
 NhuT_StatusProhibitms250Enum,
 NhuT_StatusProhibitms300Enum,
 NhuT_StatusProhibitms350Enum,
 NhuT_StatusProhibitms400Enum,
 NhuT_StatusProhibitms450Enum,
 NhuT_StatusProhibitms500Enum,
 NhuT_StatusProhibitspare8Enum,
 NhuT_StatusProhibitspare7Enum,
 NhuT_StatusProhibitspare6Enum,
 NhuT_StatusProhibitspare5Enum,
 NhuT_StatusProhibitspare4Enum,
 NhuT_StatusProhibitspare3Enum,
 NhuT_StatusProhibitspare2Enum,
 NhuT_StatusProhibitspare1Enum
} EnumNhuT_StatusProhibit;
typedef TknU32 NhuT_StatusProhibit;

typedef struct NhuDL_AM_RLC
{
 TknPres pres;
 NhuT_Reordering t_Reordering;
 NhuT_StatusProhibit t_StatusProhibit;
} NhuDL_AM_RLC;


typedef enum enumNhuSN_FieldLength
{
 NhuSN_FieldLengthsize5Enum,
 NhuSN_FieldLengthsize10Enum
} EnumNhuSN_FieldLength;
typedef TknU32 NhuSN_FieldLength;

typedef struct NhuUL_UM_RLC
{
 TknPres pres;
 NhuSN_FieldLength sn_FieldLength;
} NhuUL_UM_RLC;

typedef struct NhuDL_UM_RLC
{
 TknPres pres;
 NhuSN_FieldLength sn_FieldLength;
 NhuT_Reordering t_Reordering;
} NhuDL_UM_RLC;

typedef struct NhuRLC_Configam
{
 TknPres pres;
 NhuUL_AM_RLC ul_AM_RLC;
 NhuDL_AM_RLC dl_AM_RLC;
} NhuRLC_Configam;

typedef struct NhuRLC_Configum_Bi_Directional
{
 TknPres pres;
 NhuUL_UM_RLC ul_UM_RLC;
 NhuDL_UM_RLC dl_UM_RLC;
} NhuRLC_Configum_Bi_Directional;

typedef struct NhuRLC_Configum_Uni_Directional_UL
{
 TknPres pres;
 NhuUL_UM_RLC ul_UM_RLC;
} NhuRLC_Configum_Uni_Directional_UL;

typedef struct NhuRLC_Configum_Uni_Directional_DL
{
 TknPres pres;
 NhuDL_UM_RLC dl_UM_RLC;
} NhuRLC_Configum_Uni_Directional_DL;

typedef struct NhuRLC_Config
{
 TknU8 choice;
 union {
  NhuRLC_Configam am;
  NhuRLC_Configum_Bi_Directional um_Bi_Directional;
  NhuRLC_Configum_Uni_Directional_UL um_Uni_Directional_UL;
  NhuRLC_Configum_Uni_Directional_DL um_Uni_Directional_DL;
 } val;
} NhuRLC_Config;


typedef TknU32 NhuLogChannelConfigul_SpecificParamspriority;


typedef enum enumNhuLogChannelConfigul_SpecificParamsprioritisedBitRate
{
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps0Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps8Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps16Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps32Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps64Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps128Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps256Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRateinfinityEnum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps512_v1020Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps1024_v1020Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatekBps2048_v1020Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatespare5Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatespare4Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatespare3Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatespare2Enum,
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRatespare1Enum
} EnumNhuLogChannelConfigul_SpecificParamsprioritisedBitRate;
typedef TknU32 NhuLogChannelConfigul_SpecificParamsprioritisedBitRate;


typedef enum enumNhuLogChannelConfigul_SpecificParamsbucketSizeDuration
{
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationms50Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationms100Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationms150Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationms300Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationms500Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationms1000Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationspare2Enum,
 NhuLogChannelConfigul_SpecificParamsbucketSizeDurationspare1Enum
} EnumNhuLogChannelConfigul_SpecificParamsbucketSizeDuration;
typedef TknU32 NhuLogChannelConfigul_SpecificParamsbucketSizeDuration;


typedef TknU32 NhuLogChannelConfigul_SpecificParamslogicalChannelGroup;

typedef struct NhuLogChannelConfigul_SpecificParams
{
 TknPres pres;
 NhuLogChannelConfigul_SpecificParamspriority priority;
 NhuLogChannelConfigul_SpecificParamsprioritisedBitRate prioritisedBitRate;
 NhuLogChannelConfigul_SpecificParamsbucketSizeDuration bucketSizeDuration;
 NhuLogChannelConfigul_SpecificParamslogicalChannelGroup logicalChannelGroup;
} NhuLogChannelConfigul_SpecificParams;


typedef enum enumNhuLogChannelConfigextaddgrp_1logicalChannelSR_Mask_r9
{
 NhuLogChannelConfigextaddgrp_1logicalChannelSR_Mask_r9setupEnum
} EnumNhuLogChannelConfigextaddgrp_1logicalChannelSR_Mask_r9;
typedef TknU32 NhuLogChannelConfigextaddgrp_1logicalChannelSR_Mask_r9;

typedef struct NhuLogChannelConfigextaddgrp_1
{
 TknPres pres;
 NhuLogChannelConfigextaddgrp_1logicalChannelSR_Mask_r9 logicalChannelSR_Mask_r9;
} NhuLogChannelConfigextaddgrp_1;

typedef struct NhuLogChannelConfig
{
 TknPres pres;
 NhuLogChannelConfigul_SpecificParams ul_SpecificParams;
 NhuLogChannelConfigextaddgrp_1 extaddgrp_1;
} NhuLogChannelConfig;


typedef TknU32 NhuSRB_ToAddModsrb_Identity;

typedef struct NhuSRB_ToAddModrlc_Config
{
 TknU8 choice;
 union {
  NhuRLC_Config explicitValue;
 } val;
} NhuSRB_ToAddModrlc_Config;

typedef struct NhuSRB_ToAddModlogicalChannelConfig
{
 TknU8 choice;
 union {
  NhuLogChannelConfig explicitValue;
 } val;
} NhuSRB_ToAddModlogicalChannelConfig;

typedef struct NhuSRB_ToAddMod
{
 TknPres pres;
 NhuSRB_ToAddModsrb_Identity srb_Identity;
 NhuSRB_ToAddModrlc_Config rlc_Config;
 NhuSRB_ToAddModlogicalChannelConfig logicalChannelConfig;
} NhuSRB_ToAddMod;

typedef struct NhuSRB_ToAddModLst
{
 TknU16 noComp;
 NhuSRB_ToAddMod *member;
}NhuSRB_ToAddModLst;


typedef TknU32 NhuDRB_Identity;


typedef enum enumNhuPDCP_ConfigdiscardTimer
{
 NhuPDCP_ConfigdiscardTimerms50Enum,
 NhuPDCP_ConfigdiscardTimerms100Enum,
 NhuPDCP_ConfigdiscardTimerms150Enum,
 NhuPDCP_ConfigdiscardTimerms300Enum,
 NhuPDCP_ConfigdiscardTimerms500Enum,
 NhuPDCP_ConfigdiscardTimerms750Enum,
 NhuPDCP_ConfigdiscardTimerms1500Enum,
 NhuPDCP_ConfigdiscardTimerinfinityEnum
} EnumNhuPDCP_ConfigdiscardTimer;
typedef TknU32 NhuPDCP_ConfigdiscardTimer;


typedef TknU8 NhuPDCP_Configrlc_AMstatusReportReqd;

typedef struct NhuPDCP_Configrlc_AM
{
 TknPres pres;
 NhuPDCP_Configrlc_AMstatusReportReqd statusReportReqd;
} NhuPDCP_Configrlc_AM;


typedef enum enumNhuPDCP_Configrlc_UMpdcp_SN_Size
{
 NhuPDCP_Configrlc_UMpdcp_SN_Sizelen7bitsEnum,
 NhuPDCP_Configrlc_UMpdcp_SN_Sizelen12bitsEnum
} EnumNhuPDCP_Configrlc_UMpdcp_SN_Size;
typedef TknU32 NhuPDCP_Configrlc_UMpdcp_SN_Size;

typedef struct NhuPDCP_Configrlc_UM
{
 TknPres pres;
 NhuPDCP_Configrlc_UMpdcp_SN_Size pdcp_SN_Size;
} NhuPDCP_Configrlc_UM;


typedef TknU32 NhuPDCP_ConfigheaderCompressionrohcmaxCID;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0001;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0002;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0003;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0004;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0006;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0101;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0102;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0103;


typedef TknU8 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0104;

typedef struct NhuPDCP_ConfigheaderCompressionrohcprofiles
{
 TknPres pres;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0001 profile0x0001;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0002 profile0x0002;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0003 profile0x0003;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0004 profile0x0004;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0006 profile0x0006;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0101 profile0x0101;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0102 profile0x0102;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0103 profile0x0103;
 NhuPDCP_ConfigheaderCompressionrohcprofilesprofile0x0104 profile0x0104;
} NhuPDCP_ConfigheaderCompressionrohcprofiles;

typedef struct NhuPDCP_ConfigheaderCompressionrohc
{
 TknPres pres;
 NhuPDCP_ConfigheaderCompressionrohcmaxCID maxCID;
 NhuPDCP_ConfigheaderCompressionrohcprofiles profiles;
} NhuPDCP_ConfigheaderCompressionrohc;

typedef struct NhuPDCP_ConfigheaderCompression
{
 TknU8 choice;
 union {
  NhuPDCP_ConfigheaderCompressionrohc rohc;
 } val;
} NhuPDCP_ConfigheaderCompression;


typedef enum enumNhuPDCP_Configextaddgrp_1rn_IntegrityProtection_r10
{
 NhuPDCP_Configextaddgrp_1rn_IntegrityProtection_r10enabledEnum
} EnumNhuPDCP_Configextaddgrp_1rn_IntegrityProtection_r10;
typedef TknU32 NhuPDCP_Configextaddgrp_1rn_IntegrityProtection_r10;


typedef enum enumNhuPDCP_Configextaddgrp_2pdcp_SN_Size_v1130
{
 NhuPDCP_Configextaddgrp_2pdcp_SN_Size_v1130len15bitsEnum
} EnumNhuPDCP_Configextaddgrp_2pdcp_SN_Size_v1130;
typedef TknU32 NhuPDCP_Configextaddgrp_2pdcp_SN_Size_v1130;

typedef struct NhuPDCP_Configextaddgrp_1
{
 TknPres pres;
 NhuPDCP_Configextaddgrp_1rn_IntegrityProtection_r10 rn_IntegrityProtection_r10;
} NhuPDCP_Configextaddgrp_1;

typedef struct NhuPDCP_Configextaddgrp_2
{
 TknPres pres;
 NhuPDCP_Configextaddgrp_2pdcp_SN_Size_v1130 pdcp_SN_Size_v1130;
} NhuPDCP_Configextaddgrp_2;

typedef struct NhuPDCP_Config
{
 TknPres pres;
 NhuPDCP_ConfigdiscardTimer discardTimer;
 NhuPDCP_Configrlc_AM rlc_AM;
 NhuPDCP_Configrlc_UM rlc_UM;
 NhuPDCP_ConfigheaderCompression headerCompression;
 NhuPDCP_Configextaddgrp_1 extaddgrp_1;
 NhuPDCP_Configextaddgrp_2 extaddgrp_2;
} NhuPDCP_Config;


typedef TknU32 NhuDRB_ToAddModeps_BrIdentity;


typedef TknU32 NhuDRB_ToAddModlogicalChannelIdentity;

typedef struct NhuDRB_ToAddMod
{
 TknPres pres;
 NhuDRB_ToAddModeps_BrIdentity eps_BrIdentity;
 NhuDRB_Identity drb_Identity;
 NhuPDCP_Config pdcp_Config;
 NhuRLC_Config rlc_Config;
 NhuDRB_ToAddModlogicalChannelIdentity logicalChannelIdentity;
 NhuLogChannelConfig logicalChannelConfig;
} NhuDRB_ToAddMod;

typedef struct NhuDRB_ToAddModLst
{
 TknU16 noComp;
 NhuDRB_ToAddMod *member;
}NhuDRB_ToAddModLst;

typedef struct NhuDRB_ToRlsLst
{
 TknU16 noComp;
 NhuDRB_Identity *member;
}NhuDRB_ToRlsLst;


typedef enum enumNhuDRX_ConfigsetuponDurationTimer
{
 NhuDRX_ConfigsetuponDurationTimerpsf1Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf2Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf3Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf4Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf5Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf6Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf8Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf10Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf20Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf30Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf40Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf50Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf60Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf80Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf100Enum,
 NhuDRX_ConfigsetuponDurationTimerpsf200Enum
} EnumNhuDRX_ConfigsetuponDurationTimer;
typedef TknU32 NhuDRX_ConfigsetuponDurationTimer;


typedef enum enumNhuDRX_Configsetupdrx_InactivityTimer
{
 NhuDRX_Configsetupdrx_InactivityTimerpsf1Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf2Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf3Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf4Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf5Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf6Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf8Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf10Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf20Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf30Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf40Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf50Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf60Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf80Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf100Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf200Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf300Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf500Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf750Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf1280Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf1920Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf2560Enum,
 NhuDRX_Configsetupdrx_InactivityTimerpsf0_v1020Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare9Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare8Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare7Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare6Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare5Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare4Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare3Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare2Enum,
 NhuDRX_Configsetupdrx_InactivityTimerspare1Enum
} EnumNhuDRX_Configsetupdrx_InactivityTimer;
typedef TknU32 NhuDRX_Configsetupdrx_InactivityTimer;


typedef enum enumNhuDRX_Configsetupdrx_ReTxTimer
{
 NhuDRX_Configsetupdrx_ReTxTimerpsf1Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf2Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf4Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf6Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf8Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf16Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf24Enum,
 NhuDRX_Configsetupdrx_ReTxTimerpsf33Enum
} EnumNhuDRX_Configsetupdrx_ReTxTimer;
typedef TknU32 NhuDRX_Configsetupdrx_ReTxTimer;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf10;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf20;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf32;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf40;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf64;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf80;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf128;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf160;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf256;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf320;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf512;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf640;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf1024;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf1280;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf2048;


typedef TknU32 NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf2560;

typedef struct NhuDRX_ConfigsetuplongDRX_CycleStartOffset
{
 TknU8 choice;
 union {
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf10 sf10;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf20 sf20;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf32 sf32;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf40 sf40;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf64 sf64;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf80 sf80;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf128 sf128;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf160 sf160;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf256 sf256;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf320 sf320;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf512 sf512;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf640 sf640;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf1024 sf1024;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf1280 sf1280;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf2048 sf2048;
  NhuDRX_ConfigsetuplongDRX_CycleStartOffsetsf2560 sf2560;
 } val;
} NhuDRX_ConfigsetuplongDRX_CycleStartOffset;


typedef enum enumNhuDRX_ConfigsetupshortDRXshortDRX_Cycle
{
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf2Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf5Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf8Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf10Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf16Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf20Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf32Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf40Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf64Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf80Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf128Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf160Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf256Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf320Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf512Enum,
 NhuDRX_ConfigsetupshortDRXshortDRX_Cyclesf640Enum
} EnumNhuDRX_ConfigsetupshortDRXshortDRX_Cycle;
typedef TknU32 NhuDRX_ConfigsetupshortDRXshortDRX_Cycle;


typedef TknU32 NhuDRX_ConfigsetupshortDRXdrxShortCycleTimer;

typedef struct NhuDRX_ConfigsetupshortDRX
{
 TknPres pres;
 NhuDRX_ConfigsetupshortDRXshortDRX_Cycle shortDRX_Cycle;
 NhuDRX_ConfigsetupshortDRXdrxShortCycleTimer drxShortCycleTimer;
} NhuDRX_ConfigsetupshortDRX;

typedef struct NhuDRX_Configsetup
{
 TknPres pres;
 NhuDRX_ConfigsetuponDurationTimer onDurationTimer;
 NhuDRX_Configsetupdrx_InactivityTimer drx_InactivityTimer;
 NhuDRX_Configsetupdrx_ReTxTimer drx_ReTxTimer;
 NhuDRX_ConfigsetuplongDRX_CycleStartOffset longDRX_CycleStartOffset;
 NhuDRX_ConfigsetupshortDRX shortDRX;
} NhuDRX_Configsetup;

typedef struct NhuDRX_Config
{
 TknU8 choice;
 union {
  NhuDRX_Configsetup setup;
 } val;
} NhuDRX_Config;


typedef TknU32 NhuSTAG_Id_r11;

typedef struct NhuSTAG_ToRlsLst_r11
{
 TknU16 noComp;
 NhuSTAG_Id_r11 *member;
}NhuSTAG_ToRlsLst_r11;

typedef struct NhuSTAG_ToAddMod_r11
{
 TknPres pres;
 NhuSTAG_Id_r11 stag_Id_r11;
 NhuTimeAlignmentTimer timeAlignmentTimerSTAG_r11;
} NhuSTAG_ToAddMod_r11;

typedef struct NhuSTAG_ToAddModLst_r11
{
 TknU16 noComp;
 NhuSTAG_ToAddMod_r11 *member;
}NhuSTAG_ToAddModLst_r11;


typedef enum enumNhuDRX_Config_v1130drx_ReTxTimer_v1130
{
 NhuDRX_Config_v1130drx_ReTxTimer_v1130psf0_v1130Enum
} EnumNhuDRX_Config_v1130drx_ReTxTimer_v1130;
typedef TknU32 NhuDRX_Config_v1130drx_ReTxTimer_v1130;


typedef TknU32 NhuDRX_Config_v1130longDRX_CycleStartOffset_v1130sf60_v1130;


typedef TknU32 NhuDRX_Config_v1130longDRX_CycleStartOffset_v1130sf70_v1130;

typedef struct NhuDRX_Config_v1130longDRX_CycleStartOffset_v1130
{
 TknU8 choice;
 union {
  NhuDRX_Config_v1130longDRX_CycleStartOffset_v1130sf60_v1130 sf60_v1130;
  NhuDRX_Config_v1130longDRX_CycleStartOffset_v1130sf70_v1130 sf70_v1130;
 } val;
} NhuDRX_Config_v1130longDRX_CycleStartOffset_v1130;


typedef enum enumNhuDRX_Config_v1130shortDRX_Cycle_v1130
{
 NhuDRX_Config_v1130shortDRX_Cycle_v1130sf4_v1130Enum
} EnumNhuDRX_Config_v1130shortDRX_Cycle_v1130;
typedef TknU32 NhuDRX_Config_v1130shortDRX_Cycle_v1130;

typedef struct NhuDRX_Config_v1130
{
 TknPres pres;
 NhuDRX_Config_v1130drx_ReTxTimer_v1130 drx_ReTxTimer_v1130;
 NhuDRX_Config_v1130longDRX_CycleStartOffset_v1130 longDRX_CycleStartOffset_v1130;
 NhuDRX_Config_v1130shortDRX_Cycle_v1130 shortDRX_Cycle_v1130;
} NhuDRX_Config_v1130;


typedef enum enumNhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Tx
{
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn1Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn2Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn3Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn4Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn5Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn6Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn7Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn8Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn10Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn12Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn16Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn20Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn24Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txn28Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txspare2Enum,
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Txspare1Enum
} EnumNhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Tx;
typedef TknU32 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Tx;


typedef enum enumNhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timer
{
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf5Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf10Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf16Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf20Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf32Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf40Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf64Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf80Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf128Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf160Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf320Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf640Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf1280Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timersf2560Enum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_TimerinfinityEnum,
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timerspare1Enum
} EnumNhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timer;
typedef TknU32 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timer;


typedef enum enumNhuMAC_MainConfigul_SCH_ConfigretxBSR_Timer
{
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timersf320Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timersf640Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timersf1280Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timersf2560Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timersf5120Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timersf10240Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timerspare2Enum,
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timerspare1Enum
} EnumNhuMAC_MainConfigul_SCH_ConfigretxBSR_Timer;
typedef TknU32 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timer;


typedef TknU8 NhuMAC_MainConfigul_SCH_ConfigttiBundling;

typedef struct NhuMAC_MainConfigul_SCH_Config
{
 TknPres pres;
 NhuMAC_MainConfigul_SCH_ConfigmaxHARQ_Tx maxHARQ_Tx;
 NhuMAC_MainConfigul_SCH_ConfigperiodicBSR_Timer periodicBSR_Timer;
 NhuMAC_MainConfigul_SCH_ConfigretxBSR_Timer retxBSR_Timer;
 NhuMAC_MainConfigul_SCH_ConfigttiBundling ttiBundling;
} NhuMAC_MainConfigul_SCH_Config;


typedef enum enumNhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timer
{
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf10Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf20Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf50Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf100Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf200Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf500Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timersf1000Enum,
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_TimerinfinityEnum
} EnumNhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timer;
typedef TknU32 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timer;


typedef enum enumNhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timer
{
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf0Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf10Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf20Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf50Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf100Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf200Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf500Enum,
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timersf1000Enum
} EnumNhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timer;
typedef TknU32 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timer;


typedef enum enumNhuMAC_MainConfigphr_Configsetupdl_PathlossChange
{
 NhuMAC_MainConfigphr_Configsetupdl_PathlossChangedB1Enum,
 NhuMAC_MainConfigphr_Configsetupdl_PathlossChangedB3Enum,
 NhuMAC_MainConfigphr_Configsetupdl_PathlossChangedB6Enum,
 NhuMAC_MainConfigphr_Configsetupdl_PathlossChangeinfinityEnum
} EnumNhuMAC_MainConfigphr_Configsetupdl_PathlossChange;
typedef TknU32 NhuMAC_MainConfigphr_Configsetupdl_PathlossChange;

typedef struct NhuMAC_MainConfigphr_Configsetup
{
 TknPres pres;
 NhuMAC_MainConfigphr_ConfigsetupperiodicPHR_Timer periodicPHR_Timer;
 NhuMAC_MainConfigphr_ConfigsetupprohibitPHR_Timer prohibitPHR_Timer;
 NhuMAC_MainConfigphr_Configsetupdl_PathlossChange dl_PathlossChange;
} NhuMAC_MainConfigphr_Configsetup;

typedef struct NhuMAC_MainConfigphr_Config
{
 TknU8 choice;
 union {
  NhuMAC_MainConfigphr_Configsetup setup;
 } val;
} NhuMAC_MainConfigphr_Config;


typedef TknU32 NhuMAC_MainConfigextaddgrp_1sr_ProhibitTimer_r9;


typedef enum enumNhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10
{
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10rf2Enum,
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10rf4Enum,
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10rf8Enum,
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10rf16Enum,
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10rf32Enum,
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10rf64Enum,
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10rf128Enum,
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10spareEnum
} EnumNhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10;
typedef TknU32 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10;


typedef enum enumNhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedBSR_Sizes_r10
{
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedBSR_Sizes_r10setupEnum
} EnumNhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedBSR_Sizes_r10;
typedef TknU32 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedBSR_Sizes_r10;


typedef enum enumNhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedPHR_r10
{
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedPHR_r10setupEnum
} EnumNhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedPHR_r10;
typedef TknU32 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedPHR_r10;

typedef struct NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020
{
 TknPres pres;
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020sCellDeactivationTimer_r10 sCellDeactivationTimer_r10;
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedBSR_Sizes_r10 extendedBSR_Sizes_r10;
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020extendedPHR_r10 extendedPHR_r10;
} NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020;

typedef struct NhuMAC_MainConfigextaddgrp_1
{
 TknPres pres;
 NhuMAC_MainConfigextaddgrp_1sr_ProhibitTimer_r9 sr_ProhibitTimer_r9;
} NhuMAC_MainConfigextaddgrp_1;

typedef struct NhuMAC_MainConfigextaddgrp_2
{
 TknPres pres;
 NhuMAC_MainConfigextaddgrp_2mac_MainConfig_v1020 mac_MainConfig_v1020;
} NhuMAC_MainConfigextaddgrp_2;

typedef struct NhuMAC_MainConfigextaddgrp_3
{
 TknPres pres;
 NhuSTAG_ToRlsLst_r11 stag_ToRlsLst_r11;
 NhuSTAG_ToAddModLst_r11 stag_ToAddModLst_r11;
 NhuDRX_Config_v1130 drx_Config_v1130;
} NhuMAC_MainConfigextaddgrp_3;

typedef struct NhuMAC_MainConfig
{
 TknPres pres;
 NhuMAC_MainConfigul_SCH_Config ul_SCH_Config;
 NhuDRX_Config drx_Config;
 NhuTimeAlignmentTimer timeAlignmentTimerDedicated;
 NhuMAC_MainConfigphr_Config phr_Config;
 NhuMAC_MainConfigextaddgrp_1 extaddgrp_1;
 NhuMAC_MainConfigextaddgrp_2 extaddgrp_2;
 NhuMAC_MainConfigextaddgrp_3 extaddgrp_3;
} NhuMAC_MainConfig;


typedef TknStrBSXL NhuC_RNTI;
typedef TknU32 NhuN1PUCCH_AN_PersistentLstMember;

typedef struct NhuN1PUCCH_AN_PersistentLst
{
 TknU16 noComp;
 NhuN1PUCCH_AN_PersistentLstMember *member;
}NhuN1PUCCH_AN_PersistentLst;


typedef enum enumNhuSPS_ConfigDLsetupsemiPersistSchedIntervalDL
{
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf10Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf20Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf32Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf40Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf64Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf80Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf128Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf160Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf320Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLsf640Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLspare6Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLspare5Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLspare4Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLspare3Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLspare2Enum,
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDLspare1Enum
} EnumNhuSPS_ConfigDLsetupsemiPersistSchedIntervalDL;
typedef TknU32 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDL;


typedef TknU32 NhuSPS_ConfigDLsetupnumberOfConfSPS_Processes;

typedef struct NhuSPS_ConfigDLsetupextaddgrp_1twoAntennaPortActivated_r10setup
{
 TknPres pres;
 NhuN1PUCCH_AN_PersistentLst n1PUCCH_AN_PersistentLstP1_r10;
} NhuSPS_ConfigDLsetupextaddgrp_1twoAntennaPortActivated_r10setup;

typedef struct NhuSPS_ConfigDLsetupextaddgrp_1twoAntennaPortActivated_r10
{
 TknU8 choice;
 union {
  NhuSPS_ConfigDLsetupextaddgrp_1twoAntennaPortActivated_r10setup setup;
 } val;
} NhuSPS_ConfigDLsetupextaddgrp_1twoAntennaPortActivated_r10;

typedef struct NhuSPS_ConfigDLsetupextaddgrp_1
{
 TknPres pres;
 NhuSPS_ConfigDLsetupextaddgrp_1twoAntennaPortActivated_r10 twoAntennaPortActivated_r10;
} NhuSPS_ConfigDLsetupextaddgrp_1;

typedef struct NhuSPS_ConfigDLsetup
{
 TknPres pres;
 NhuSPS_ConfigDLsetupsemiPersistSchedIntervalDL semiPersistSchedIntervalDL;
 NhuSPS_ConfigDLsetupnumberOfConfSPS_Processes numberOfConfSPS_Processes;
 NhuN1PUCCH_AN_PersistentLst n1PUCCH_AN_PersistentLst;
 NhuSPS_ConfigDLsetupextaddgrp_1 extaddgrp_1;
} NhuSPS_ConfigDLsetup;

typedef struct NhuSPS_ConfigDL
{
 TknU8 choice;
 union {
  NhuSPS_ConfigDLsetup setup;
 } val;
} NhuSPS_ConfigDL;


typedef enum enumNhuSPS_ConfigULsetupsemiPersistSchedIntervalUL
{
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf10Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf20Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf32Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf40Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf64Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf80Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf128Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf160Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf320Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULsf640Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULspare6Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULspare5Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULspare4Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULspare3Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULspare2Enum,
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalULspare1Enum
} EnumNhuSPS_ConfigULsetupsemiPersistSchedIntervalUL;
typedef TknU32 NhuSPS_ConfigULsetupsemiPersistSchedIntervalUL;


typedef enum enumNhuSPS_ConfigULsetupimplicitRlsAfter
{
 NhuSPS_ConfigULsetupimplicitRlsAftere2Enum,
 NhuSPS_ConfigULsetupimplicitRlsAftere3Enum,
 NhuSPS_ConfigULsetupimplicitRlsAftere4Enum,
 NhuSPS_ConfigULsetupimplicitRlsAftere8Enum
} EnumNhuSPS_ConfigULsetupimplicitRlsAfter;
typedef TknU32 NhuSPS_ConfigULsetupimplicitRlsAfter;


typedef TknS32 NhuSPS_ConfigULsetupp0_Persistentp0_NominalPUSCH_Persistent;


typedef TknS32 NhuSPS_ConfigULsetupp0_Persistentp0_UE_PUSCH_Persistent;

typedef struct NhuSPS_ConfigULsetupp0_Persistent
{
 TknPres pres;
 NhuSPS_ConfigULsetupp0_Persistentp0_NominalPUSCH_Persistent p0_NominalPUSCH_Persistent;
 NhuSPS_ConfigULsetupp0_Persistentp0_UE_PUSCH_Persistent p0_UE_PUSCH_Persistent;
} NhuSPS_ConfigULsetupp0_Persistent;


typedef enum enumNhuSPS_ConfigULsetuptwoIntervalsConfig
{
 NhuSPS_ConfigULsetuptwoIntervalsConfigtrueEnum
} EnumNhuSPS_ConfigULsetuptwoIntervalsConfig;
typedef TknU32 NhuSPS_ConfigULsetuptwoIntervalsConfig;

typedef struct NhuSPS_ConfigULsetup
{
 TknPres pres;
 NhuSPS_ConfigULsetupsemiPersistSchedIntervalUL semiPersistSchedIntervalUL;
 NhuSPS_ConfigULsetupimplicitRlsAfter implicitRlsAfter;
 NhuSPS_ConfigULsetupp0_Persistent p0_Persistent;
 NhuSPS_ConfigULsetuptwoIntervalsConfig twoIntervalsConfig;
} NhuSPS_ConfigULsetup;

typedef struct NhuSPS_ConfigUL
{
 TknU8 choice;
 union {
  NhuSPS_ConfigULsetup setup;
 } val;
} NhuSPS_ConfigUL;

typedef struct NhuSPS_Config
{
 TknPres pres;
 NhuC_RNTI semiPersistSchedC_RNTI;
 NhuSPS_ConfigDL sps_ConfigDL;
 NhuSPS_ConfigUL sps_ConfigUL;
} NhuSPS_Config;


typedef enum enumNhuPDSCH_ConfigDedicatedp_a
{
 NhuPDSCH_ConfigDedicatedp_adB_6Enum,
 NhuPDSCH_ConfigDedicatedp_adB_4dot77Enum,
 NhuPDSCH_ConfigDedicatedp_adB_3Enum,
 NhuPDSCH_ConfigDedicatedp_adB_1dot77Enum,
 NhuPDSCH_ConfigDedicatedp_adB0Enum,
 NhuPDSCH_ConfigDedicatedp_adB1Enum,
 NhuPDSCH_ConfigDedicatedp_adB2Enum,
 NhuPDSCH_ConfigDedicatedp_adB3Enum
} EnumNhuPDSCH_ConfigDedicatedp_a;
typedef TknU32 NhuPDSCH_ConfigDedicatedp_a;

typedef struct NhuPDSCH_ConfigDedicated
{
 TknPres pres;
 NhuPDSCH_ConfigDedicatedp_a p_a;
} NhuPDSCH_ConfigDedicated;


typedef enum enumNhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactor
{
 NhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactorn2Enum,
 NhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactorn4Enum,
 NhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactorn6Enum,
 NhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactorspare1Enum
} EnumNhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactor;
typedef TknU32 NhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactor;


typedef TknU32 NhuPUCCH_ConfigDedicatedackNackRepetitionsetupn1PUCCH_AN_Rep;

typedef struct NhuPUCCH_ConfigDedicatedackNackRepetitionsetup
{
 TknPres pres;
 NhuPUCCH_ConfigDedicatedackNackRepetitionsetuprepetitionFactor repetitionFactor;
 NhuPUCCH_ConfigDedicatedackNackRepetitionsetupn1PUCCH_AN_Rep n1PUCCH_AN_Rep;
} NhuPUCCH_ConfigDedicatedackNackRepetitionsetup;

typedef struct NhuPUCCH_ConfigDedicatedackNackRepetition
{
 TknU8 choice;
 union {
  NhuPUCCH_ConfigDedicatedackNackRepetitionsetup setup;
 } val;
} NhuPUCCH_ConfigDedicatedackNackRepetition;


typedef enum enumNhuPUCCH_ConfigDedicatedtdd_AckNackFeedbackMode
{
 NhuPUCCH_ConfigDedicatedtdd_AckNackFeedbackModebundlingEnum,
 NhuPUCCH_ConfigDedicatedtdd_AckNackFeedbackModemultiplexingEnum
} EnumNhuPUCCH_ConfigDedicatedtdd_AckNackFeedbackMode;
typedef TknU32 NhuPUCCH_ConfigDedicatedtdd_AckNackFeedbackMode;

typedef struct NhuPUCCH_ConfigDedicated
{
 TknPres pres;
 NhuPUCCH_ConfigDedicatedackNackRepetition ackNackRepetition;
 NhuPUCCH_ConfigDedicatedtdd_AckNackFeedbackMode tdd_AckNackFeedbackMode;
} NhuPUCCH_ConfigDedicated;


typedef TknU32 NhuPUSCH_ConfigDedicatedbetaOffset_ACK_Idx;


typedef TknU32 NhuPUSCH_ConfigDedicatedbetaOffset_RI_Idx;


typedef TknU32 NhuPUSCH_ConfigDedicatedbetaOffset_CQI_Idx;

typedef struct NhuPUSCH_ConfigDedicated
{
 TknPres pres;
 NhuPUSCH_ConfigDedicatedbetaOffset_ACK_Idx betaOffset_ACK_Idx;
 NhuPUSCH_ConfigDedicatedbetaOffset_RI_Idx betaOffset_RI_Idx;
 NhuPUSCH_ConfigDedicatedbetaOffset_CQI_Idx betaOffset_CQI_Idx;
} NhuPUSCH_ConfigDedicated;


typedef enum enumNhuFilterCoefficient
{
 NhuFilterCoefficientfc0Enum,
 NhuFilterCoefficientfc1Enum,
 NhuFilterCoefficientfc2Enum,
 NhuFilterCoefficientfc3Enum,
 NhuFilterCoefficientfc4Enum,
 NhuFilterCoefficientfc5Enum,
 NhuFilterCoefficientfc6Enum,
 NhuFilterCoefficientfc7Enum,
 NhuFilterCoefficientfc8Enum,
 NhuFilterCoefficientfc9Enum,
 NhuFilterCoefficientfc11Enum,
 NhuFilterCoefficientfc13Enum,
 NhuFilterCoefficientfc15Enum,
 NhuFilterCoefficientfc17Enum,
 NhuFilterCoefficientfc19Enum,
 NhuFilterCoefficientspare1Enum
} EnumNhuFilterCoefficient;
typedef TknU32 NhuFilterCoefficient;


typedef TknS32 NhuUlnkPowerCntrlDedicatedp0_UE_PUSCH;


typedef enum enumNhuUlnkPowerCntrlDedicateddeltaMCS_Enabled
{
 NhuUlnkPowerCntrlDedicateddeltaMCS_Enableden0Enum,
 NhuUlnkPowerCntrlDedicateddeltaMCS_Enableden1Enum
} EnumNhuUlnkPowerCntrlDedicateddeltaMCS_Enabled;
typedef TknU32 NhuUlnkPowerCntrlDedicateddeltaMCS_Enabled;


typedef TknU8 NhuUlnkPowerCntrlDedicatedaccumulationEnabled;


typedef TknS32 NhuUlnkPowerCntrlDedicatedp0_UE_PUCCH;


typedef TknU32 NhuUlnkPowerCntrlDedicatedpSRS_Offset;

typedef struct NhuUlnkPowerCntrlDedicated
{
 TknPres pres;
 NhuUlnkPowerCntrlDedicatedp0_UE_PUSCH p0_UE_PUSCH;
 NhuUlnkPowerCntrlDedicateddeltaMCS_Enabled deltaMCS_Enabled;
 NhuUlnkPowerCntrlDedicatedaccumulationEnabled accumulationEnabled;
 NhuUlnkPowerCntrlDedicatedp0_UE_PUCCH p0_UE_PUCCH;
 NhuUlnkPowerCntrlDedicatedpSRS_Offset pSRS_Offset;
 NhuFilterCoefficient filterCoefficient;
} NhuUlnkPowerCntrlDedicated;


typedef TknU32 NhuTPC_IdxindexOfFormat3;


typedef TknU32 NhuTPC_IdxindexOfFormat3A;

typedef struct NhuTPC_Idx
{
 TknU8 choice;
 union {
  NhuTPC_IdxindexOfFormat3 indexOfFormat3;
  NhuTPC_IdxindexOfFormat3A indexOfFormat3A;
 } val;
} NhuTPC_Idx;


typedef TknStrBSXL NhuTPC_PDCCH_Configsetuptpc_RNTI;
typedef struct NhuTPC_PDCCH_Configsetup
{
 TknPres pres;
 NhuTPC_PDCCH_Configsetuptpc_RNTI tpc_RNTI;
 NhuTPC_Idx tpc_Idx;
} NhuTPC_PDCCH_Configsetup;

typedef struct NhuTPC_PDCCH_Config
{
 TknU8 choice;
 union {
  NhuTPC_PDCCH_Configsetup setup;
 } val;
} NhuTPC_PDCCH_Config;


typedef enum enumNhuCQI_ReportModeAperiodic
{
 NhuCQI_ReportModeAperiodicrm12Enum,
 NhuCQI_ReportModeAperiodicrm20Enum,
 NhuCQI_ReportModeAperiodicrm22Enum,
 NhuCQI_ReportModeAperiodicrm30Enum,
 NhuCQI_ReportModeAperiodicrm31Enum,
 NhuCQI_ReportModeAperiodicspare3Enum,
 NhuCQI_ReportModeAperiodicspare2Enum,
 NhuCQI_ReportModeAperiodicspare1Enum
} EnumNhuCQI_ReportModeAperiodic;
typedef TknU32 NhuCQI_ReportModeAperiodic;


typedef TknU32 NhuCQI_ReportPeriodicsetupcqi_PUCCH_ResourceIdx;


typedef TknU32 NhuCQI_ReportPeriodicsetupcqi_pmi_ConfigIdx;


typedef TknU32 NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodicsubbandCQIk;

typedef struct NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodicsubbandCQI
{
 TknPres pres;
 NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodicsubbandCQIk k;
} NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodicsubbandCQI;

typedef struct NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodic
{
 TknU8 choice;
 union {
  NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodicsubbandCQI subbandCQI;
 } val;
} NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodic;


typedef TknU32 NhuCQI_ReportPeriodicsetupri_ConfigIdx;


typedef TknU8 NhuCQI_ReportPeriodicsetupsimultaneousAckNackAndCQI;

typedef struct NhuCQI_ReportPeriodicsetup
{
 TknPres pres;
 NhuCQI_ReportPeriodicsetupcqi_PUCCH_ResourceIdx cqi_PUCCH_ResourceIdx;
 NhuCQI_ReportPeriodicsetupcqi_pmi_ConfigIdx cqi_pmi_ConfigIdx;
 NhuCQI_ReportPeriodicsetupcqi_FormatIndicatorPeriodic cqi_FormatIndicatorPeriodic;
 NhuCQI_ReportPeriodicsetupri_ConfigIdx ri_ConfigIdx;
 NhuCQI_ReportPeriodicsetupsimultaneousAckNackAndCQI simultaneousAckNackAndCQI;
} NhuCQI_ReportPeriodicsetup;

typedef struct NhuCQI_ReportPeriodic
{
 TknU8 choice;
 union {
  NhuCQI_ReportPeriodicsetup setup;
 } val;
} NhuCQI_ReportPeriodic;


typedef TknS32 NhuCQI_ReportConfignomPDSCH_RS_EPRE_Offset;

typedef struct NhuCQI_ReportConfig
{
 TknPres pres;
 NhuCQI_ReportModeAperiodic cqi_ReportModeAperiodic;
 NhuCQI_ReportConfignomPDSCH_RS_EPRE_Offset nomPDSCH_RS_EPRE_Offset;
 NhuCQI_ReportPeriodic cqi_ReportPeriodic;
} NhuCQI_ReportConfig;


typedef enum enumNhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidth
{
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidthbw0Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidthbw1Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidthbw2Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidthbw3Enum
} EnumNhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidth;
typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidth;


typedef enum enumNhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidth
{
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidthhbw0Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidthhbw1Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidthhbw2Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidthhbw3Enum
} EnumNhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidth;
typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidth;


typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedsetupfreqDomainPosition;


typedef TknU8 NhuSoundingRS_UL_ConfigDedicatedsetupduration;


typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_ConfigIdx;


typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedsetuptransmissionComb;


typedef enum enumNhuSoundingRS_UL_ConfigDedicatedsetupcyclicShift
{
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs0Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs1Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs2Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs3Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs4Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs5Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs6Enum,
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShiftcs7Enum
} EnumNhuSoundingRS_UL_ConfigDedicatedsetupcyclicShift;
typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShift;

typedef struct NhuSoundingRS_UL_ConfigDedicatedsetup
{
 TknPres pres;
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_Bandwidth srs_Bandwidth;
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_HoppingBandwidth srs_HoppingBandwidth;
 NhuSoundingRS_UL_ConfigDedicatedsetupfreqDomainPosition freqDomainPosition;
 NhuSoundingRS_UL_ConfigDedicatedsetupduration duration;
 NhuSoundingRS_UL_ConfigDedicatedsetupsrs_ConfigIdx srs_ConfigIdx;
 NhuSoundingRS_UL_ConfigDedicatedsetuptransmissionComb transmissionComb;
 NhuSoundingRS_UL_ConfigDedicatedsetupcyclicShift cyclicShift;
} NhuSoundingRS_UL_ConfigDedicatedsetup;

typedef struct NhuSoundingRS_UL_ConfigDedicated
{
 TknU8 choice;
 union {
  NhuSoundingRS_UL_ConfigDedicatedsetup setup;
 } val;
} NhuSoundingRS_UL_ConfigDedicated;


typedef enum enumNhuAntennaInfoDedicatedtransmissionMode
{
 NhuAntennaInfoDedicatedtransmissionModetm1Enum,
 NhuAntennaInfoDedicatedtransmissionModetm2Enum,
 NhuAntennaInfoDedicatedtransmissionModetm3Enum,
 NhuAntennaInfoDedicatedtransmissionModetm4Enum,
 NhuAntennaInfoDedicatedtransmissionModetm5Enum,
 NhuAntennaInfoDedicatedtransmissionModetm6Enum,
 NhuAntennaInfoDedicatedtransmissionModetm7Enum,
 NhuAntennaInfoDedicatedtransmissionModetm8_v920Enum
} EnumNhuAntennaInfoDedicatedtransmissionMode;
typedef TknU32 NhuAntennaInfoDedicatedtransmissionMode;


typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm3;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm3;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm4;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm4;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm5;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm5;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm6;

typedef TknStrBSXL NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm6;
typedef struct NhuAntennaInfoDedicatedcodebookSubsetRestrn
{
 TknU8 choice;
 union {
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm3 n2TxAntenna_tm3;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm3 n4TxAntenna_tm3;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm4 n2TxAntenna_tm4;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm4 n4TxAntenna_tm4;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm5 n2TxAntenna_tm5;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm5 n4TxAntenna_tm5;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn2TxAntenna_tm6 n2TxAntenna_tm6;
  NhuAntennaInfoDedicatedcodebookSubsetRestrnn4TxAntenna_tm6 n4TxAntenna_tm6;
 } val;
} NhuAntennaInfoDedicatedcodebookSubsetRestrn;


typedef enum enumNhuAntennaInfoDedicatedue_TransmitAntennaSelectionsetup
{
 NhuAntennaInfoDedicatedue_TransmitAntennaSelectionsetupclosedLoopEnum,
 NhuAntennaInfoDedicatedue_TransmitAntennaSelectionsetupopenLoopEnum
} EnumNhuAntennaInfoDedicatedue_TransmitAntennaSelectionsetup;
typedef TknU32 NhuAntennaInfoDedicatedue_TransmitAntennaSelectionsetup;

typedef struct NhuAntennaInfoDedicatedue_TransmitAntennaSelection
{
 TknU8 choice;
 union {
  NhuAntennaInfoDedicatedue_TransmitAntennaSelectionsetup setup;
 } val;
} NhuAntennaInfoDedicatedue_TransmitAntennaSelection;

typedef struct NhuAntennaInfoDedicated
{
 TknPres pres;
 NhuAntennaInfoDedicatedtransmissionMode transmissionMode;
 NhuAntennaInfoDedicatedcodebookSubsetRestrn codebookSubsetRestrn;
 NhuAntennaInfoDedicatedue_TransmitAntennaSelection ue_TransmitAntennaSelection;
} NhuAntennaInfoDedicated;


typedef TknU32 NhuSchedulingRqstConfigsetupsr_PUCCH_ResourceIdx;


typedef TknU32 NhuSchedulingRqstConfigsetupsr_ConfigIdx;


typedef enum enumNhuSchedulingRqstConfigsetupdsr_TransMax
{
 NhuSchedulingRqstConfigsetupdsr_TransMaxn4Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxn8Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxn16Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxn32Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxn64Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxspare3Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxspare2Enum,
 NhuSchedulingRqstConfigsetupdsr_TransMaxspare1Enum
} EnumNhuSchedulingRqstConfigsetupdsr_TransMax;
typedef TknU32 NhuSchedulingRqstConfigsetupdsr_TransMax;

typedef struct NhuSchedulingRqstConfigsetup
{
 TknPres pres;
 NhuSchedulingRqstConfigsetupsr_PUCCH_ResourceIdx sr_PUCCH_ResourceIdx;
 NhuSchedulingRqstConfigsetupsr_ConfigIdx sr_ConfigIdx;
 NhuSchedulingRqstConfigsetupdsr_TransMax dsr_TransMax;
} NhuSchedulingRqstConfigsetup;

typedef struct NhuSchedulingRqstConfig
{
 TknU8 choice;
 union {
  NhuSchedulingRqstConfigsetup setup;
 } val;
} NhuSchedulingRqstConfig;


typedef enum enumNhuCQI_ReportConfig_v920cqi_Mask_r9
{
 NhuCQI_ReportConfig_v920cqi_Mask_r9setupEnum
} EnumNhuCQI_ReportConfig_v920cqi_Mask_r9;
typedef TknU32 NhuCQI_ReportConfig_v920cqi_Mask_r9;


typedef enum enumNhuCQI_ReportConfig_v920pmi_RI_Report_r9
{
 NhuCQI_ReportConfig_v920pmi_RI_Report_r9setupEnum
} EnumNhuCQI_ReportConfig_v920pmi_RI_Report_r9;
typedef TknU32 NhuCQI_ReportConfig_v920pmi_RI_Report_r9;

typedef struct NhuCQI_ReportConfig_v920
{
 TknPres pres;
 NhuCQI_ReportConfig_v920cqi_Mask_r9 cqi_Mask_r9;
 NhuCQI_ReportConfig_v920pmi_RI_Report_r9 pmi_RI_Report_r9;
} NhuCQI_ReportConfig_v920;


typedef TknStrBSXL NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920n2TxAntenna_tm8_r9;

typedef TknStrBSXL NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920n4TxAntenna_tm8_r9;
typedef struct NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920
{
 TknU8 choice;
 union {
  NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920n2TxAntenna_tm8_r9 n2TxAntenna_tm8_r9;
  NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920n4TxAntenna_tm8_r9 n4TxAntenna_tm8_r9;
 } val;
} NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920;

typedef struct NhuAntennaInfoDedicated_v920
{
 TknPres pres;
 NhuAntennaInfoDedicated_v920codebookSubsetRestrn_v920 codebookSubsetRestrn_v920;
} NhuAntennaInfoDedicated_v920;


typedef enum enumNhuAntennaInfoDedicated_r10transmissionMode_r10
{
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm1Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm2Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm3Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm4Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm5Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm6Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm7Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm8_v920Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm9_v1020Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10tm10_v1130Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10spare6Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10spare5Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10spare4Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10spare3Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10spare2Enum,
 NhuAntennaInfoDedicated_r10transmissionMode_r10spare1Enum
} EnumNhuAntennaInfoDedicated_r10transmissionMode_r10;
typedef TknU32 NhuAntennaInfoDedicated_r10transmissionMode_r10;


typedef TknStrBSXL NhuAntennaInfoDedicated_r10codebookSubsetRestrn_r10;

typedef enum enumNhuAntennaInfoDedicated_r10ue_TransmitAntennaSelectionsetup
{
 NhuAntennaInfoDedicated_r10ue_TransmitAntennaSelectionsetupclosedLoopEnum,
 NhuAntennaInfoDedicated_r10ue_TransmitAntennaSelectionsetupopenLoopEnum
} EnumNhuAntennaInfoDedicated_r10ue_TransmitAntennaSelectionsetup;
typedef TknU32 NhuAntennaInfoDedicated_r10ue_TransmitAntennaSelectionsetup;

typedef struct NhuAntennaInfoDedicated_r10ue_TransmitAntennaSelection
{
 TknU8 choice;
 union {
  NhuAntennaInfoDedicated_r10ue_TransmitAntennaSelectionsetup setup;
 } val;
} NhuAntennaInfoDedicated_r10ue_TransmitAntennaSelection;

typedef struct NhuAntennaInfoDedicated_r10
{
 TknPres pres;
 NhuAntennaInfoDedicated_r10transmissionMode_r10 transmissionMode_r10;
 NhuAntennaInfoDedicated_r10codebookSubsetRestrn_r10 codebookSubsetRestrn_r10;
 NhuAntennaInfoDedicated_r10ue_TransmitAntennaSelection ue_TransmitAntennaSelection;
} NhuAntennaInfoDedicated_r10;


typedef enum enumNhuAntennaInfoUL_r10transmissionModeUL_r10
{
 NhuAntennaInfoUL_r10transmissionModeUL_r10tm1Enum,
 NhuAntennaInfoUL_r10transmissionModeUL_r10tm2Enum,
 NhuAntennaInfoUL_r10transmissionModeUL_r10spare6Enum,
 NhuAntennaInfoUL_r10transmissionModeUL_r10spare5Enum,
 NhuAntennaInfoUL_r10transmissionModeUL_r10spare4Enum,
 NhuAntennaInfoUL_r10transmissionModeUL_r10spare3Enum,
 NhuAntennaInfoUL_r10transmissionModeUL_r10spare2Enum,
 NhuAntennaInfoUL_r10transmissionModeUL_r10spare1Enum
} EnumNhuAntennaInfoUL_r10transmissionModeUL_r10;
typedef TknU32 NhuAntennaInfoUL_r10transmissionModeUL_r10;


typedef enum enumNhuAntennaInfoUL_r10fourAntennaPortActivated_r10
{
 NhuAntennaInfoUL_r10fourAntennaPortActivated_r10setupEnum
} EnumNhuAntennaInfoUL_r10fourAntennaPortActivated_r10;
typedef TknU32 NhuAntennaInfoUL_r10fourAntennaPortActivated_r10;

typedef struct NhuAntennaInfoUL_r10
{
 TknPres pres;
 NhuAntennaInfoUL_r10transmissionModeUL_r10 transmissionModeUL_r10;
 NhuAntennaInfoUL_r10fourAntennaPortActivated_r10 fourAntennaPortActivated_r10;
} NhuAntennaInfoUL_r10;


typedef TknStrBSXL NhuCQI_ReportAperiodic_r10setupaperiodicCSI_Trigger_r10trigger1_r10;

typedef TknStrBSXL NhuCQI_ReportAperiodic_r10setupaperiodicCSI_Trigger_r10trigger2_r10;
typedef struct NhuCQI_ReportAperiodic_r10setupaperiodicCSI_Trigger_r10
{
 TknPres pres;
 NhuCQI_ReportAperiodic_r10setupaperiodicCSI_Trigger_r10trigger1_r10 trigger1_r10;
 NhuCQI_ReportAperiodic_r10setupaperiodicCSI_Trigger_r10trigger2_r10 trigger2_r10;
} NhuCQI_ReportAperiodic_r10setupaperiodicCSI_Trigger_r10;

typedef struct NhuCQI_ReportAperiodic_r10setup
{
 TknPres pres;
 NhuCQI_ReportModeAperiodic cqi_ReportModeAperiodic_r10;
 NhuCQI_ReportAperiodic_r10setupaperiodicCSI_Trigger_r10 aperiodicCSI_Trigger_r10;
} NhuCQI_ReportAperiodic_r10setup;

typedef struct NhuCQI_ReportAperiodic_r10
{
 TknU8 choice;
 union {
  NhuCQI_ReportAperiodic_r10setup setup;
 } val;
} NhuCQI_ReportAperiodic_r10;


typedef TknU32 NhuCQI_ReportPeriodic_r10setupcqi_PUCCH_ResourceIdx_r10;


typedef TknU32 NhuCQI_ReportPeriodic_r10setupcqi_PUCCH_ResourceIdxP1_r10;


typedef TknU32 NhuCQI_ReportPeriodic_r10setupcqi_pmi_ConfigIdx;


typedef enum enumNhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10widebandCQI_r10csi_ReportMode_r10
{
 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10widebandCQI_r10csi_ReportMode_r10submode1Enum,
 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10widebandCQI_r10csi_ReportMode_r10submode2Enum
} EnumNhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10widebandCQI_r10csi_ReportMode_r10;
typedef TknU32 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10widebandCQI_r10csi_ReportMode_r10;

typedef struct NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10widebandCQI_r10
{
 TknPres pres;
 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10widebandCQI_r10csi_ReportMode_r10 csi_ReportMode_r10;
} NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10widebandCQI_r10;


typedef TknU32 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10k;


typedef enum enumNhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10periodicityFactor_r10
{
 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10periodicityFactor_r10n2Enum,
 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10periodicityFactor_r10n4Enum
} EnumNhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10periodicityFactor_r10;
typedef TknU32 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10periodicityFactor_r10;

typedef struct NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10
{
 TknPres pres;
 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10k k;
 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10periodicityFactor_r10 periodicityFactor_r10;
} NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10;

typedef struct NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10
{
 TknU8 choice;
 union {
  NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10widebandCQI_r10 widebandCQI_r10;
  NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10subbandCQI_r10 subbandCQI_r10;
 } val;
} NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10;


typedef TknU32 NhuCQI_ReportPeriodic_r10setupri_ConfigIdx;


typedef TknU8 NhuCQI_ReportPeriodic_r10setupsimultaneousAckNackAndCQI;


typedef enum enumNhuCQI_ReportPeriodic_r10setupcqi_Mask_r9
{
 NhuCQI_ReportPeriodic_r10setupcqi_Mask_r9setupEnum
} EnumNhuCQI_ReportPeriodic_r10setupcqi_Mask_r9;
typedef TknU32 NhuCQI_ReportPeriodic_r10setupcqi_Mask_r9;


typedef TknU32 NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10setupcqi_pmi_ConfigIdx2_r10;


typedef TknU32 NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10setupri_ConfigIdx2_r10;

typedef struct NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10setup
{
 TknPres pres;
 NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10setupcqi_pmi_ConfigIdx2_r10 cqi_pmi_ConfigIdx2_r10;
 NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10setupri_ConfigIdx2_r10 ri_ConfigIdx2_r10;
} NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10setup;

typedef struct NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10
{
 TknU8 choice;
 union {
  NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10setup setup;
 } val;
} NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10;

typedef struct NhuCQI_ReportPeriodic_r10setup
{
 TknPres pres;
 NhuCQI_ReportPeriodic_r10setupcqi_PUCCH_ResourceIdx_r10 cqi_PUCCH_ResourceIdx_r10;
 NhuCQI_ReportPeriodic_r10setupcqi_PUCCH_ResourceIdxP1_r10 cqi_PUCCH_ResourceIdxP1_r10;
 NhuCQI_ReportPeriodic_r10setupcqi_pmi_ConfigIdx cqi_pmi_ConfigIdx;
 NhuCQI_ReportPeriodic_r10setupcqi_FormatIndicatorPeriodic_r10 cqi_FormatIndicatorPeriodic_r10;
 NhuCQI_ReportPeriodic_r10setupri_ConfigIdx ri_ConfigIdx;
 NhuCQI_ReportPeriodic_r10setupsimultaneousAckNackAndCQI simultaneousAckNackAndCQI;
 NhuCQI_ReportPeriodic_r10setupcqi_Mask_r9 cqi_Mask_r9;
 NhuCQI_ReportPeriodic_r10setupcsi_ConfigIdx_r10 csi_ConfigIdx_r10;
} NhuCQI_ReportPeriodic_r10setup;

typedef struct NhuCQI_ReportPeriodic_r10
{
 TknU8 choice;
 union {
  NhuCQI_ReportPeriodic_r10setup setup;
 } val;
} NhuCQI_ReportPeriodic_r10;


typedef TknStrBSXL NhuMeasSubfrmPattern_r10subframePatternFDD_r10;

typedef TknStrBSXL NhuMeasSubfrmPattern_r10subframePatternTDD_r10subframeConfig1_5_r10;

typedef TknStrBSXL NhuMeasSubfrmPattern_r10subframePatternTDD_r10subframeConfig0_r10;

typedef TknStrBSXL NhuMeasSubfrmPattern_r10subframePatternTDD_r10subframeConfig6_r10;
typedef struct NhuMeasSubfrmPattern_r10subframePatternTDD_r10
{
 TknU8 choice;
 union {
  NhuMeasSubfrmPattern_r10subframePatternTDD_r10subframeConfig1_5_r10 subframeConfig1_5_r10;
  NhuMeasSubfrmPattern_r10subframePatternTDD_r10subframeConfig0_r10 subframeConfig0_r10;
  NhuMeasSubfrmPattern_r10subframePatternTDD_r10subframeConfig6_r10 subframeConfig6_r10;
 } val;
} NhuMeasSubfrmPattern_r10subframePatternTDD_r10;

typedef struct NhuMeasSubfrmPattern_r10
{
 TknU8 choice;
 union {
  NhuMeasSubfrmPattern_r10subframePatternFDD_r10 subframePatternFDD_r10;
  NhuMeasSubfrmPattern_r10subframePatternTDD_r10 subframePatternTDD_r10;
 } val;
} NhuMeasSubfrmPattern_r10;


typedef TknS32 NhuCQI_ReportConfig_r10nomPDSCH_RS_EPRE_Offset;


typedef enum enumNhuCQI_ReportConfig_r10pmi_RI_Report_r9
{
 NhuCQI_ReportConfig_r10pmi_RI_Report_r9setupEnum
} EnumNhuCQI_ReportConfig_r10pmi_RI_Report_r9;
typedef TknU32 NhuCQI_ReportConfig_r10pmi_RI_Report_r9;

typedef struct NhuCQI_ReportConfig_r10csi_SubfrmPatternConfig_r10setup
{
 TknPres pres;
 NhuMeasSubfrmPattern_r10 csi_MeasSubfrmSet1_r10;
 NhuMeasSubfrmPattern_r10 csi_MeasSubfrmSet2_r10;
} NhuCQI_ReportConfig_r10csi_SubfrmPatternConfig_r10setup;

typedef struct NhuCQI_ReportConfig_r10csi_SubfrmPatternConfig_r10
{
 TknU8 choice;
 union {
  NhuCQI_ReportConfig_r10csi_SubfrmPatternConfig_r10setup setup;
 } val;
} NhuCQI_ReportConfig_r10csi_SubfrmPatternConfig_r10;

typedef struct NhuCQI_ReportConfig_r10
{
 TknPres pres;
 NhuCQI_ReportAperiodic_r10 cqi_ReportAperiodic_r10;
 NhuCQI_ReportConfig_r10nomPDSCH_RS_EPRE_Offset nomPDSCH_RS_EPRE_Offset;
 NhuCQI_ReportPeriodic_r10 cqi_ReportPeriodic_r10;
 NhuCQI_ReportConfig_r10pmi_RI_Report_r9 pmi_RI_Report_r9;
 NhuCQI_ReportConfig_r10csi_SubfrmPatternConfig_r10 csi_SubfrmPatternConfig_r10;
} NhuCQI_ReportConfig_r10;


typedef enum enumNhuCSI_RS_Config_r10csi_RS_r10setupantennaPortsCount_r10
{
 NhuCSI_RS_Config_r10csi_RS_r10setupantennaPortsCount_r10an1Enum,
 NhuCSI_RS_Config_r10csi_RS_r10setupantennaPortsCount_r10an2Enum,
 NhuCSI_RS_Config_r10csi_RS_r10setupantennaPortsCount_r10an4Enum,
 NhuCSI_RS_Config_r10csi_RS_r10setupantennaPortsCount_r10an8Enum
} EnumNhuCSI_RS_Config_r10csi_RS_r10setupantennaPortsCount_r10;
typedef TknU32 NhuCSI_RS_Config_r10csi_RS_r10setupantennaPortsCount_r10;


typedef TknU32 NhuCSI_RS_Config_r10csi_RS_r10setupresourceConfig_r10;


typedef TknU32 NhuCSI_RS_Config_r10csi_RS_r10setupsubframeConfig_r10;


typedef TknS32 NhuCSI_RS_Config_r10csi_RS_r10setupp_C_r10;

typedef struct NhuCSI_RS_Config_r10csi_RS_r10setup
{
 TknPres pres;
 NhuCSI_RS_Config_r10csi_RS_r10setupantennaPortsCount_r10 antennaPortsCount_r10;
 NhuCSI_RS_Config_r10csi_RS_r10setupresourceConfig_r10 resourceConfig_r10;
 NhuCSI_RS_Config_r10csi_RS_r10setupsubframeConfig_r10 subframeConfig_r10;
 NhuCSI_RS_Config_r10csi_RS_r10setupp_C_r10 p_C_r10;
} NhuCSI_RS_Config_r10csi_RS_r10setup;

typedef struct NhuCSI_RS_Config_r10csi_RS_r10
{
 TknU8 choice;
 union {
  NhuCSI_RS_Config_r10csi_RS_r10setup setup;
 } val;
} NhuCSI_RS_Config_r10csi_RS_r10;


typedef TknStrBSXL NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10setupzeroTxPowerResourceConfigLst_r10;

typedef TknU32 NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10setupzeroTxPowerSubfrmConfig_r10;

typedef struct NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10setup
{
 TknPres pres;
 NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10setupzeroTxPowerResourceConfigLst_r10 zeroTxPowerResourceConfigLst_r10;
 NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10setupzeroTxPowerSubfrmConfig_r10 zeroTxPowerSubfrmConfig_r10;
} NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10setup;

typedef struct NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10
{
 TknU8 choice;
 union {
  NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10setup setup;
 } val;
} NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10;

typedef struct NhuCSI_RS_Config_r10
{
 TknPres pres;
 NhuCSI_RS_Config_r10csi_RS_r10 csi_RS_r10;
 NhuCSI_RS_Config_r10zeroTxPowerCSI_RS_r10 zeroTxPowerCSI_RS_r10;
} NhuCSI_RS_Config_r10;

typedef TknU32 NhuN1PUCCH_AN_CS_r10Member;

typedef struct NhuN1PUCCH_AN_CS_r10
{
 TknU16 noComp;
 NhuN1PUCCH_AN_CS_r10Member *member;
}NhuN1PUCCH_AN_CS_r10;

typedef TknU32 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10n3PUCCH_AN_Lst_r10Member;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10n3PUCCH_AN_Lst_r10
{
 TknU16 noComp;
 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10n3PUCCH_AN_Lst_r10Member *member;
}NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10n3PUCCH_AN_Lst_r10;

typedef TknU32 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10setupn3PUCCH_AN_LstP1_r10Member;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10setupn3PUCCH_AN_LstP1_r10
{
 TknU16 noComp;
 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10setupn3PUCCH_AN_LstP1_r10Member *member;
}NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10setupn3PUCCH_AN_LstP1_r10;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10setup
{
 TknPres pres;
 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10setupn3PUCCH_AN_LstP1_r10 n3PUCCH_AN_LstP1_r10;
} NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10setup;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10
{
 TknU8 choice;
 union {
  NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10setup setup;
 } val;
} NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10
{
 TknPres pres;
 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10n3PUCCH_AN_Lst_r10 n3PUCCH_AN_Lst_r10;
 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10twoAntennaPortActivatedPUCCH_Format3_r10 twoAntennaPortActivatedPUCCH_Format3_r10;
} NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10n1PUCCH_AN_CS_r10setupn1PUCCH_AN_CS_Lst_r10
{
 TknU16 noComp;
 NhuN1PUCCH_AN_CS_r10 *member;
}NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10n1PUCCH_AN_CS_r10setupn1PUCCH_AN_CS_Lst_r10;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10n1PUCCH_AN_CS_r10setup
{
 TknPres pres;
 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10n1PUCCH_AN_CS_r10setupn1PUCCH_AN_CS_Lst_r10 n1PUCCH_AN_CS_Lst_r10;
} NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10n1PUCCH_AN_CS_r10setup;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10n1PUCCH_AN_CS_r10
{
 TknU8 choice;
 union {
  NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10n1PUCCH_AN_CS_r10setup setup;
 } val;
} NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10n1PUCCH_AN_CS_r10;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10
{
 TknPres pres;
 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10n1PUCCH_AN_CS_r10 n1PUCCH_AN_CS_r10;
} NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10;

typedef struct NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10
{
 TknU8 choice;
 union {
  NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10format3_r10 format3_r10;
  NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10channelSelection_r10 channelSelection_r10;
 } val;
} NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10;


typedef enum enumNhuPUCCH_ConfigDedicated_v1020twoAntennaPortActivatedPUCCH_Format1a1b_r10
{
 NhuPUCCH_ConfigDedicated_v1020twoAntennaPortActivatedPUCCH_Format1a1b_r10trueEnum
} EnumNhuPUCCH_ConfigDedicated_v1020twoAntennaPortActivatedPUCCH_Format1a1b_r10;
typedef TknU32 NhuPUCCH_ConfigDedicated_v1020twoAntennaPortActivatedPUCCH_Format1a1b_r10;


typedef enum enumNhuPUCCH_ConfigDedicated_v1020simultaneousPUCCH_PUSCH_r10
{
 NhuPUCCH_ConfigDedicated_v1020simultaneousPUCCH_PUSCH_r10trueEnum
} EnumNhuPUCCH_ConfigDedicated_v1020simultaneousPUCCH_PUSCH_r10;
typedef TknU32 NhuPUCCH_ConfigDedicated_v1020simultaneousPUCCH_PUSCH_r10;


typedef TknU32 NhuPUCCH_ConfigDedicated_v1020n1PUCCH_AN_RepP1_r10;

typedef struct NhuPUCCH_ConfigDedicated_v1020
{
 TknPres pres;
 NhuPUCCH_ConfigDedicated_v1020pucch_Format_r10 pucch_Format_r10;
 NhuPUCCH_ConfigDedicated_v1020twoAntennaPortActivatedPUCCH_Format1a1b_r10 twoAntennaPortActivatedPUCCH_Format1a1b_r10;
 NhuPUCCH_ConfigDedicated_v1020simultaneousPUCCH_PUSCH_r10 simultaneousPUCCH_PUSCH_r10;
 NhuPUCCH_ConfigDedicated_v1020n1PUCCH_AN_RepP1_r10 n1PUCCH_AN_RepP1_r10;
} NhuPUCCH_ConfigDedicated_v1020;


typedef TknU32 NhuPUSCH_ConfigDedicated_v1020betaOffsetMC_r10betaOffset_ACK_Idx_MC_r10;


typedef TknU32 NhuPUSCH_ConfigDedicated_v1020betaOffsetMC_r10betaOffset_RI_Idx_MC_r10;


typedef TknU32 NhuPUSCH_ConfigDedicated_v1020betaOffsetMC_r10betaOffset_CQI_Idx_MC_r10;

typedef struct NhuPUSCH_ConfigDedicated_v1020betaOffsetMC_r10
{
 TknPres pres;
 NhuPUSCH_ConfigDedicated_v1020betaOffsetMC_r10betaOffset_ACK_Idx_MC_r10 betaOffset_ACK_Idx_MC_r10;
 NhuPUSCH_ConfigDedicated_v1020betaOffsetMC_r10betaOffset_RI_Idx_MC_r10 betaOffset_RI_Idx_MC_r10;
 NhuPUSCH_ConfigDedicated_v1020betaOffsetMC_r10betaOffset_CQI_Idx_MC_r10 betaOffset_CQI_Idx_MC_r10;
} NhuPUSCH_ConfigDedicated_v1020betaOffsetMC_r10;


typedef enum enumNhuPUSCH_ConfigDedicated_v1020groupHoppingDisabled_r10
{
 NhuPUSCH_ConfigDedicated_v1020groupHoppingDisabled_r10trueEnum
} EnumNhuPUSCH_ConfigDedicated_v1020groupHoppingDisabled_r10;
typedef TknU32 NhuPUSCH_ConfigDedicated_v1020groupHoppingDisabled_r10;


typedef enum enumNhuPUSCH_ConfigDedicated_v1020dmrs_WithOCC_Activated_r10
{
 NhuPUSCH_ConfigDedicated_v1020dmrs_WithOCC_Activated_r10trueEnum
} EnumNhuPUSCH_ConfigDedicated_v1020dmrs_WithOCC_Activated_r10;
typedef TknU32 NhuPUSCH_ConfigDedicated_v1020dmrs_WithOCC_Activated_r10;

typedef struct NhuPUSCH_ConfigDedicated_v1020
{
 TknPres pres;
 NhuPUSCH_ConfigDedicated_v1020betaOffsetMC_r10 betaOffsetMC_r10;
 NhuPUSCH_ConfigDedicated_v1020groupHoppingDisabled_r10 groupHoppingDisabled_r10;
 NhuPUSCH_ConfigDedicated_v1020dmrs_WithOCC_Activated_r10 dmrs_WithOCC_Activated_r10;
} NhuPUSCH_ConfigDedicated_v1020;


typedef TknU32 NhuSchedulingRqstConfig_v1020sr_PUCCH_ResourceIdxP1_r10;

typedef struct NhuSchedulingRqstConfig_v1020
{
 TknPres pres;
 NhuSchedulingRqstConfig_v1020sr_PUCCH_ResourceIdxP1_r10 sr_PUCCH_ResourceIdxP1_r10;
} NhuSchedulingRqstConfig_v1020;


typedef enum enumNhuSRS_AntennaPort
{
 NhuSRS_AntennaPortan1Enum,
 NhuSRS_AntennaPortan2Enum,
 NhuSRS_AntennaPortan4Enum,
 NhuSRS_AntennaPortspare1Enum
} EnumNhuSRS_AntennaPort;
typedef TknU32 NhuSRS_AntennaPort;

typedef struct NhuSoundingRS_UL_ConfigDedicated_v1020
{
 TknPres pres;
 NhuSRS_AntennaPort srs_AntennaPort_r10;
} NhuSoundingRS_UL_ConfigDedicated_v1020;


typedef enum enumNhuSRS_ConfigAp_r10srs_BandwidthAp_r10
{
 NhuSRS_ConfigAp_r10srs_BandwidthAp_r10bw0Enum,
 NhuSRS_ConfigAp_r10srs_BandwidthAp_r10bw1Enum,
 NhuSRS_ConfigAp_r10srs_BandwidthAp_r10bw2Enum,
 NhuSRS_ConfigAp_r10srs_BandwidthAp_r10bw3Enum
} EnumNhuSRS_ConfigAp_r10srs_BandwidthAp_r10;
typedef TknU32 NhuSRS_ConfigAp_r10srs_BandwidthAp_r10;


typedef TknU32 NhuSRS_ConfigAp_r10freqDomainPositionAp_r10;


typedef TknU32 NhuSRS_ConfigAp_r10transmissionCombAp_r10;


typedef enum enumNhuSRS_ConfigAp_r10cyclicShiftAp_r10
{
 NhuSRS_ConfigAp_r10cyclicShiftAp_r10cs0Enum,
 NhuSRS_ConfigAp_r10cyclicShiftAp_r10cs1Enum,
 NhuSRS_ConfigAp_r10cyclicShiftAp_r10cs2Enum,
 NhuSRS_ConfigAp_r10cyclicShiftAp_r10cs3Enum,
 NhuSRS_ConfigAp_r10cyclicShiftAp_r10cs4Enum,
 NhuSRS_ConfigAp_r10cyclicShiftAp_r10cs5Enum,
 NhuSRS_ConfigAp_r10cyclicShiftAp_r10cs6Enum,
 NhuSRS_ConfigAp_r10cyclicShiftAp_r10cs7Enum
} EnumNhuSRS_ConfigAp_r10cyclicShiftAp_r10;
typedef TknU32 NhuSRS_ConfigAp_r10cyclicShiftAp_r10;

typedef struct NhuSRS_ConfigAp_r10
{
 TknPres pres;
 NhuSRS_AntennaPort srs_AntennaPortAp_r10;
 NhuSRS_ConfigAp_r10srs_BandwidthAp_r10 srs_BandwidthAp_r10;
 NhuSRS_ConfigAp_r10freqDomainPositionAp_r10 freqDomainPositionAp_r10;
 NhuSRS_ConfigAp_r10transmissionCombAp_r10 transmissionCombAp_r10;
 NhuSRS_ConfigAp_r10cyclicShiftAp_r10 cyclicShiftAp_r10;
} NhuSRS_ConfigAp_r10;


typedef TknU32 NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ConfigIdxAp_r10;

typedef struct NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ConfigApDCI_Format4_r10
{
 TknU16 noComp;
 NhuSRS_ConfigAp_r10 *member;
}NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ConfigApDCI_Format4_r10;

typedef struct NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ActivateAp_r10setup
{
 TknPres pres;
 NhuSRS_ConfigAp_r10 srs_ConfigApDCI_Format0_r10;
 NhuSRS_ConfigAp_r10 srs_ConfigApDCI_Format1a2b2c_r10;
} NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ActivateAp_r10setup;

typedef struct NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ActivateAp_r10
{
 TknU8 choice;
 union {
  NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ActivateAp_r10setup setup;
 } val;
} NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ActivateAp_r10;

typedef struct NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setup
{
 TknPres pres;
 NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ConfigIdxAp_r10 srs_ConfigIdxAp_r10;
 NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ConfigApDCI_Format4_r10 srs_ConfigApDCI_Format4_r10;
 NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setupsrs_ActivateAp_r10 srs_ActivateAp_r10;
} NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setup;

typedef struct NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10
{
 TknU8 choice;
 union {
  NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10setup setup;
 } val;
} NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10;


typedef enum enumNhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1_r10
{
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1_r10dB0Enum,
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1_r10dB_2Enum
} EnumNhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1_r10;
typedef TknU32 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1_r10;


typedef enum enumNhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1a1b_r10
{
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1a1b_r10dB0Enum,
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1a1b_r10dB_2Enum
} EnumNhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1a1b_r10;
typedef TknU32 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1a1b_r10;


typedef enum enumNhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format22a2b_r10
{
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format22a2b_r10dB0Enum,
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format22a2b_r10dB_2Enum
} EnumNhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format22a2b_r10;
typedef TknU32 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format22a2b_r10;


typedef enum enumNhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format3_r10
{
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format3_r10dB0Enum,
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format3_r10dB_2Enum
} EnumNhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format3_r10;
typedef TknU32 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format3_r10;

typedef struct NhuDeltaTxD_OffsetLstPUCCH_r10
{
 TknPres pres;
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1_r10 deltaTxD_OffsetPUCCH_Format1_r10;
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format1a1b_r10 deltaTxD_OffsetPUCCH_Format1a1b_r10;
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format22a2b_r10 deltaTxD_OffsetPUCCH_Format22a2b_r10;
 NhuDeltaTxD_OffsetLstPUCCH_r10deltaTxD_OffsetPUCCH_Format3_r10 deltaTxD_OffsetPUCCH_Format3_r10;
} NhuDeltaTxD_OffsetLstPUCCH_r10;


typedef TknU32 NhuUlnkPowerCntrlDedicated_v1020pSRS_OffsetAp_r10;

typedef struct NhuUlnkPowerCntrlDedicated_v1020
{
 TknPres pres;
 NhuDeltaTxD_OffsetLstPUCCH_r10 deltaTxD_OffsetLstPUCCH_r10;
 NhuUlnkPowerCntrlDedicated_v1020pSRS_OffsetAp_r10 pSRS_OffsetAp_r10;
} NhuUlnkPowerCntrlDedicated_v1020;


typedef TknU32 NhuCSI_RS_ConfigNZPId_r11;

typedef struct NhuCSI_RS_ConfigNZPToRlsLst_r11
{
 TknU16 noComp;
 NhuCSI_RS_ConfigNZPId_r11 *member;
}NhuCSI_RS_ConfigNZPToRlsLst_r11;


typedef enum enumNhuCSI_RS_ConfigNZP_r11antennaPortsCount_r11
{
 NhuCSI_RS_ConfigNZP_r11antennaPortsCount_r11an1Enum,
 NhuCSI_RS_ConfigNZP_r11antennaPortsCount_r11an2Enum,
 NhuCSI_RS_ConfigNZP_r11antennaPortsCount_r11an4Enum,
 NhuCSI_RS_ConfigNZP_r11antennaPortsCount_r11an8Enum
} EnumNhuCSI_RS_ConfigNZP_r11antennaPortsCount_r11;
typedef TknU32 NhuCSI_RS_ConfigNZP_r11antennaPortsCount_r11;


typedef TknU32 NhuCSI_RS_ConfigNZP_r11resourceConfig_r11;


typedef TknU32 NhuCSI_RS_ConfigNZP_r11subframeConfig_r11;


typedef TknU32 NhuCSI_RS_ConfigNZP_r11scramblingIdentity_r11;


typedef TknU32 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11qcl_ScramblingIdentity_r11;


typedef enum enumNhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11crs_PortsCount_r11
{
 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11crs_PortsCount_r11n1Enum,
 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11crs_PortsCount_r11n2Enum,
 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11crs_PortsCount_r11n4Enum,
 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11crs_PortsCount_r11spare1Enum
} EnumNhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11crs_PortsCount_r11;
typedef TknU32 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11crs_PortsCount_r11;

typedef struct NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11mbsfn_SubfrmConfigLst_r11setup
{
 TknPres pres;
 NhuMBSFN_SubfrmConfigLst subframeConfigLst;
} NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11mbsfn_SubfrmConfigLst_r11setup;

typedef struct NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11mbsfn_SubfrmConfigLst_r11
{
 TknU8 choice;
 union {
  NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11mbsfn_SubfrmConfigLst_r11setup setup;
 } val;
} NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11mbsfn_SubfrmConfigLst_r11;

typedef struct NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11
{
 TknPres pres;
 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11qcl_ScramblingIdentity_r11 qcl_ScramblingIdentity_r11;
 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11crs_PortsCount_r11 crs_PortsCount_r11;
 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11mbsfn_SubfrmConfigLst_r11 mbsfn_SubfrmConfigLst_r11;
} NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11;

typedef struct NhuCSI_RS_ConfigNZP_r11
{
 TknPres pres;
 NhuCSI_RS_ConfigNZPId_r11 csi_RS_ConfigNZPId_r11;
 NhuCSI_RS_ConfigNZP_r11antennaPortsCount_r11 antennaPortsCount_r11;
 NhuCSI_RS_ConfigNZP_r11resourceConfig_r11 resourceConfig_r11;
 NhuCSI_RS_ConfigNZP_r11subframeConfig_r11 subframeConfig_r11;
 NhuCSI_RS_ConfigNZP_r11scramblingIdentity_r11 scramblingIdentity_r11;
 NhuCSI_RS_ConfigNZP_r11qcl_CRS_Info_r11 qcl_CRS_Info_r11;
} NhuCSI_RS_ConfigNZP_r11;

typedef struct NhuCSI_RS_ConfigNZPToAddModLst_r11
{
 TknU16 noComp;
 NhuCSI_RS_ConfigNZP_r11 *member;
}NhuCSI_RS_ConfigNZPToAddModLst_r11;


typedef TknU32 NhuCSI_RS_ConfigZPId_r11;

typedef struct NhuCSI_RS_ConfigZPToRlsLst_r11
{
 TknU16 noComp;
 NhuCSI_RS_ConfigZPId_r11 *member;
}NhuCSI_RS_ConfigZPToRlsLst_r11;


typedef TknStrBSXL NhuCSI_RS_ConfigZP_r11resourceConfigLst_r11;

typedef TknU32 NhuCSI_RS_ConfigZP_r11subframeConfig_r11;

typedef struct NhuCSI_RS_ConfigZP_r11
{
 TknPres pres;
 NhuCSI_RS_ConfigZPId_r11 csi_RS_ConfigZPId_r11;
 NhuCSI_RS_ConfigZP_r11resourceConfigLst_r11 resourceConfigLst_r11;
 NhuCSI_RS_ConfigZP_r11subframeConfig_r11 subframeConfig_r11;
} NhuCSI_RS_ConfigZP_r11;

typedef struct NhuCSI_RS_ConfigZPToAddModLst_r11
{
 TknU16 noComp;
 NhuCSI_RS_ConfigZP_r11 *member;
}NhuCSI_RS_ConfigZPToAddModLst_r11;


typedef TknU32 NhuEPDCCH_SetConfigId_r11;

typedef struct NhuEPDCCH_SetConfigToRlsLst_r11
{
 TknU16 noComp;
 NhuEPDCCH_SetConfigId_r11 *member;
}NhuEPDCCH_SetConfigToRlsLst_r11;


typedef TknU32 NhuPDSCH_RE_MappingQCL_ConfigId_r11;


typedef enum enumNhuEPDCCH_SetConfig_r11transmissionTyp_r11
{
 NhuEPDCCH_SetConfig_r11transmissionTyp_r11localisedEnum,
 NhuEPDCCH_SetConfig_r11transmissionTyp_r11distributedEnum
} EnumNhuEPDCCH_SetConfig_r11transmissionTyp_r11;
typedef TknU32 NhuEPDCCH_SetConfig_r11transmissionTyp_r11;


typedef enum enumNhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11numberPRB_Pairs_r11
{
 NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11numberPRB_Pairs_r11n2Enum,
 NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11numberPRB_Pairs_r11n4Enum,
 NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11numberPRB_Pairs_r11n8Enum
} EnumNhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11numberPRB_Pairs_r11;
typedef TknU32 NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11numberPRB_Pairs_r11;


typedef TknStrBSXL NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11resourceBlockAssignment_r11;
typedef struct NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11
{
 TknPres pres;
 NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11numberPRB_Pairs_r11 numberPRB_Pairs_r11;
 NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11resourceBlockAssignment_r11 resourceBlockAssignment_r11;
} NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11;


typedef TknU32 NhuEPDCCH_SetConfig_r11dmrs_ScramblingSequenceInt_r11;


typedef TknU32 NhuEPDCCH_SetConfig_r11pucch_ResourceStartOffset_r11;

typedef struct NhuEPDCCH_SetConfig_r11
{
 TknPres pres;
 NhuEPDCCH_SetConfigId_r11 setConfigId_r11;
 NhuEPDCCH_SetConfig_r11transmissionTyp_r11 transmissionTyp_r11;
 NhuEPDCCH_SetConfig_r11resourceBlockAssignment_r11 resourceBlockAssignment_r11;
 NhuEPDCCH_SetConfig_r11dmrs_ScramblingSequenceInt_r11 dmrs_ScramblingSequenceInt_r11;
 NhuEPDCCH_SetConfig_r11pucch_ResourceStartOffset_r11 pucch_ResourceStartOffset_r11;
 NhuPDSCH_RE_MappingQCL_ConfigId_r11 re_MappingQCL_ConfigId_r11;
} NhuEPDCCH_SetConfig_r11;

typedef struct NhuEPDCCH_SetConfigToAddModLst_r11
{
 TknU16 noComp;
 NhuEPDCCH_SetConfig_r11 *member;
}NhuEPDCCH_SetConfigToAddModLst_r11;

typedef struct NhuEPDCCH_Config_r11config_r11setupsubframePatternConfig_r11setup
{
 TknPres pres;
 NhuMeasSubfrmPattern_r10 subframePattern_r11;
} NhuEPDCCH_Config_r11config_r11setupsubframePatternConfig_r11setup;

typedef struct NhuEPDCCH_Config_r11config_r11setupsubframePatternConfig_r11
{
 TknU8 choice;
 union {
  NhuEPDCCH_Config_r11config_r11setupsubframePatternConfig_r11setup setup;
 } val;
} NhuEPDCCH_Config_r11config_r11setupsubframePatternConfig_r11;


typedef TknU32 NhuEPDCCH_Config_r11config_r11setupstartSymbol_r11;

typedef struct NhuEPDCCH_Config_r11config_r11setup
{
 TknPres pres;
 NhuEPDCCH_Config_r11config_r11setupsubframePatternConfig_r11 subframePatternConfig_r11;
 NhuEPDCCH_Config_r11config_r11setupstartSymbol_r11 startSymbol_r11;
 NhuEPDCCH_SetConfigToRlsLst_r11 setConfigToRlsLst_r11;
 NhuEPDCCH_SetConfigToAddModLst_r11 setConfigToAddModLst_r11;
} NhuEPDCCH_Config_r11config_r11setup;

typedef struct NhuEPDCCH_Config_r11config_r11
{
 TknU8 choice;
 union {
  NhuEPDCCH_Config_r11config_r11setup setup;
 } val;
} NhuEPDCCH_Config_r11config_r11;

typedef struct NhuEPDCCH_Config_r11
{
 TknPres pres;
 NhuEPDCCH_Config_r11config_r11 config_r11;
} NhuEPDCCH_Config_r11;


typedef TknU32 NhuDMRS_Config_r11setupscramblingIdentity_r11;


typedef TknU32 NhuDMRS_Config_r11setupscramblingIdentity2_r11;

typedef struct NhuDMRS_Config_r11setup
{
 TknPres pres;
 NhuDMRS_Config_r11setupscramblingIdentity_r11 scramblingIdentity_r11;
 NhuDMRS_Config_r11setupscramblingIdentity2_r11 scramblingIdentity2_r11;
} NhuDMRS_Config_r11setup;

typedef struct NhuDMRS_Config_r11
{
 TknU8 choice;
 union {
  NhuDMRS_Config_r11setup setup;
 } val;
} NhuDMRS_Config_r11;

typedef struct NhuRE_MappingQCLConfigToRlsLst_r11
{
 TknU16 noComp;
 NhuPDSCH_RE_MappingQCL_ConfigId_r11 *member;
}NhuRE_MappingQCLConfigToRlsLst_r11;


typedef enum enumNhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_PortsCount_r11
{
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_PortsCount_r11n1Enum,
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_PortsCount_r11n2Enum,
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_PortsCount_r11n4Enum,
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_PortsCount_r11spare1Enum
} EnumNhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_PortsCount_r11;
typedef TknU32 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_PortsCount_r11;


typedef TknU32 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_FreqShift_r11;

typedef struct NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11mbsfn_SubfrmConfigLst_r11setup
{
 TknPres pres;
 NhuMBSFN_SubfrmConfigLst subframeConfigLst;
} NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11mbsfn_SubfrmConfigLst_r11setup;

typedef struct NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11mbsfn_SubfrmConfigLst_r11
{
 TknU8 choice;
 union {
  NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11mbsfn_SubfrmConfigLst_r11setup setup;
 } val;
} NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11mbsfn_SubfrmConfigLst_r11;


typedef enum enumNhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11
{
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11reservedEnum,
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11n1Enum,
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11n2Enum,
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11n3Enum,
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11n4Enum,
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11assignedEnum
} EnumNhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11;
typedef TknU32 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11;

typedef struct NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11
{
 TknPres pres;
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_PortsCount_r11 crs_PortsCount_r11;
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11crs_FreqShift_r11 crs_FreqShift_r11;
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11mbsfn_SubfrmConfigLst_r11 mbsfn_SubfrmConfigLst_r11;
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11pdsch_Start_r11 pdsch_Start_r11;
} NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11;

typedef struct NhuPDSCH_RE_MappingQCL_Config_r11
{
 TknPres pres;
 NhuPDSCH_RE_MappingQCL_ConfigId_r11 pdsch_RE_MappingQCL_ConfigId_r11;
 NhuPDSCH_RE_MappingQCL_Config_r11optionalSetOfFields_r11 optionalSetOfFields_r11;
 NhuCSI_RS_ConfigZPId_r11 csi_RS_ConfigZPId_r11;
 NhuCSI_RS_ConfigNZPId_r11 qcl_CSI_RS_ConfigNZPId_r11;
} NhuPDSCH_RE_MappingQCL_Config_r11;

typedef struct NhuRE_MappingQCLConfigToAddModLst_r11
{
 TknU16 noComp;
 NhuPDSCH_RE_MappingQCL_Config_r11 *member;
}NhuRE_MappingQCLConfigToAddModLst_r11;


typedef enum enumNhuPDSCH_ConfigDedicated_v1130qcl_Operation
{
 NhuPDSCH_ConfigDedicated_v1130qcl_OperationtypeAEnum,
 NhuPDSCH_ConfigDedicated_v1130qcl_OperationtypeBEnum
} EnumNhuPDSCH_ConfigDedicated_v1130qcl_Operation;
typedef TknU32 NhuPDSCH_ConfigDedicated_v1130qcl_Operation;

typedef struct NhuPDSCH_ConfigDedicated_v1130
{
 TknPres pres;
 NhuDMRS_Config_r11 dmrs_ConfigPDSCH_r11;
 NhuPDSCH_ConfigDedicated_v1130qcl_Operation qcl_Operation;
 NhuRE_MappingQCLConfigToRlsLst_r11 re_MappingQCLConfigToRlsLst_r11;
 NhuRE_MappingQCLConfigToAddModLst_r11 re_MappingQCLConfigToAddModLst_r11;
} NhuPDSCH_ConfigDedicated_v1130;


typedef TknU32 NhuCQI_ReportPeriodicProcExtId_r11;

typedef struct NhuCQI_ReportPeriodicProcExtToRlsLst_r11
{
 TknU16 noComp;
 NhuCQI_ReportPeriodicProcExtId_r11 *member;
}NhuCQI_ReportPeriodicProcExtToRlsLst_r11;


typedef TknU32 NhuCQI_ReportPeriodicProcExt_r11cqi_pmi_ConfigIdx_r11;


typedef enum enumNhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11widebandCQI_r11csi_ReportMode_r11
{
 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11widebandCQI_r11csi_ReportMode_r11submode1Enum,
 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11widebandCQI_r11csi_ReportMode_r11submode2Enum
} EnumNhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11widebandCQI_r11csi_ReportMode_r11;
typedef TknU32 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11widebandCQI_r11csi_ReportMode_r11;

typedef struct NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11widebandCQI_r11
{
 TknPres pres;
 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11widebandCQI_r11csi_ReportMode_r11 csi_ReportMode_r11;
} NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11widebandCQI_r11;


typedef TknU32 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11k;


typedef enum enumNhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11periodicityFactor_r11
{
 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11periodicityFactor_r11n2Enum,
 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11periodicityFactor_r11n4Enum
} EnumNhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11periodicityFactor_r11;
typedef TknU32 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11periodicityFactor_r11;

typedef struct NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11
{
 TknPres pres;
 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11k k;
 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11periodicityFactor_r11 periodicityFactor_r11;
} NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11;

typedef struct NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11
{
 TknU8 choice;
 union {
  NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11widebandCQI_r11 widebandCQI_r11;
  NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11subbandCQI_r11 subbandCQI_r11;
 } val;
} NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11;


typedef TknU32 NhuCQI_ReportPeriodicProcExt_r11ri_ConfigIdx_r11;


typedef TknU32 NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11setupcqi_pmi_ConfigIdx2_r11;


typedef TknU32 NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11setupri_ConfigIdx2_r11;

typedef struct NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11setup
{
 TknPres pres;
 NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11setupcqi_pmi_ConfigIdx2_r11 cqi_pmi_ConfigIdx2_r11;
 NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11setupri_ConfigIdx2_r11 ri_ConfigIdx2_r11;
} NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11setup;

typedef struct NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11
{
 TknU8 choice;
 union {
  NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11setup setup;
 } val;
} NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11;

typedef struct NhuCQI_ReportPeriodicProcExt_r11
{
 TknPres pres;
 NhuCQI_ReportPeriodicProcExtId_r11 cqi_ReportPeriodicProcExtId_r11;
 NhuCQI_ReportPeriodicProcExt_r11cqi_pmi_ConfigIdx_r11 cqi_pmi_ConfigIdx_r11;
 NhuCQI_ReportPeriodicProcExt_r11cqi_FormatIndicatorPeriodic_r11 cqi_FormatIndicatorPeriodic_r11;
 NhuCQI_ReportPeriodicProcExt_r11ri_ConfigIdx_r11 ri_ConfigIdx_r11;
 NhuCQI_ReportPeriodicProcExt_r11csi_ConfigIdx_r11 csi_ConfigIdx_r11;
} NhuCQI_ReportPeriodicProcExt_r11;

typedef struct NhuCQI_ReportPeriodicProcExtToAddModLst_r11
{
 TknU16 noComp;
 NhuCQI_ReportPeriodicProcExt_r11 *member;
}NhuCQI_ReportPeriodicProcExtToAddModLst_r11;


typedef enum enumNhuCQI_ReportPeriodic_v1130simultaneousAckNackAndCQI_Format3_r11
{
 NhuCQI_ReportPeriodic_v1130simultaneousAckNackAndCQI_Format3_r11setupEnum
} EnumNhuCQI_ReportPeriodic_v1130simultaneousAckNackAndCQI_Format3_r11;
typedef TknU32 NhuCQI_ReportPeriodic_v1130simultaneousAckNackAndCQI_Format3_r11;

typedef struct NhuCQI_ReportPeriodic_v1130
{
 TknPres pres;
 NhuCQI_ReportPeriodic_v1130simultaneousAckNackAndCQI_Format3_r11 simultaneousAckNackAndCQI_Format3_r11;
 NhuCQI_ReportPeriodicProcExtToRlsLst_r11 cqi_ReportPeriodicProcExtToRlsLst_r11;
 NhuCQI_ReportPeriodicProcExtToAddModLst_r11 cqi_ReportPeriodicProcExtToAddModLst_r11;
} NhuCQI_ReportPeriodic_v1130;


typedef TknU32 NhuCSI_IM_ConfigId_r11;

typedef struct NhuCSI_IM_ConfigToRlsLst_r11
{
 TknU16 noComp;
 NhuCSI_IM_ConfigId_r11 *member;
}NhuCSI_IM_ConfigToRlsLst_r11;


typedef TknU32 NhuCSI_IM_Config_r11resourceConfig_r11;


typedef TknU32 NhuCSI_IM_Config_r11subframeConfig_r11;

typedef struct NhuCSI_IM_Config_r11
{
 TknPres pres;
 NhuCSI_IM_ConfigId_r11 csi_IM_ConfigId_r11;
 NhuCSI_IM_Config_r11resourceConfig_r11 resourceConfig_r11;
 NhuCSI_IM_Config_r11subframeConfig_r11 subframeConfig_r11;
} NhuCSI_IM_Config_r11;

typedef struct NhuCSI_IM_ConfigToAddModLst_r11
{
 TknU16 noComp;
 NhuCSI_IM_Config_r11 *member;
}NhuCSI_IM_ConfigToAddModLst_r11;


typedef TknU32 NhuCSI_ProcessId_r11;

typedef struct NhuCSI_ProcessToRlsLst_r11
{
 TknU16 noComp;
 NhuCSI_ProcessId_r11 *member;
}NhuCSI_ProcessToRlsLst_r11;


typedef TknS32 NhuP_C_AndCBSR_r11p_C_r11;


typedef TknStrBSXL NhuP_C_AndCBSR_r11codebookSubsetRestrn_r11;
typedef struct NhuP_C_AndCBSR_r11
{
 TknPres pres;
 NhuP_C_AndCBSR_r11p_C_r11 p_C_r11;
 NhuP_C_AndCBSR_r11codebookSubsetRestrn_r11 codebookSubsetRestrn_r11;
} NhuP_C_AndCBSR_r11;


typedef enum enumNhuCQI_ReportBothProc_r11pmi_RI_Report_r11
{
 NhuCQI_ReportBothProc_r11pmi_RI_Report_r11setupEnum
} EnumNhuCQI_ReportBothProc_r11pmi_RI_Report_r11;
typedef TknU32 NhuCQI_ReportBothProc_r11pmi_RI_Report_r11;

typedef struct NhuCQI_ReportBothProc_r11
{
 TknPres pres;
 NhuCSI_ProcessId_r11 ri_Ref_CSI_ProcessId_r11;
 NhuCQI_ReportBothProc_r11pmi_RI_Report_r11 pmi_RI_Report_r11;
} NhuCQI_ReportBothProc_r11;


typedef TknU8 NhuCQI_ReportAperiodicProc_r11trigger01_r11;


typedef TknU8 NhuCQI_ReportAperiodicProc_r11trigger10_r11;


typedef TknU8 NhuCQI_ReportAperiodicProc_r11trigger11_r11;

typedef struct NhuCQI_ReportAperiodicProc_r11
{
 TknPres pres;
 NhuCQI_ReportModeAperiodic cqi_ReportModeAperiodic_r11;
 NhuCQI_ReportAperiodicProc_r11trigger01_r11 trigger01_r11;
 NhuCQI_ReportAperiodicProc_r11trigger10_r11 trigger10_r11;
 NhuCQI_ReportAperiodicProc_r11trigger11_r11 trigger11_r11;
} NhuCQI_ReportAperiodicProc_r11;

typedef struct NhuCSI_Process_r11p_C_AndCBSRLst_r11
{
 TknU16 noComp;
 NhuP_C_AndCBSR_r11 *member;
}NhuCSI_Process_r11p_C_AndCBSRLst_r11;


typedef TknU32 NhuCSI_Process_r11cqi_ReportPeriodicProcId_r11;

typedef struct NhuCSI_Process_r11
{
 TknPres pres;
 NhuCSI_ProcessId_r11 csi_ProcessId_r11;
 NhuCSI_RS_ConfigNZPId_r11 csi_RS_ConfigNZPId_r11;
 NhuCSI_IM_ConfigId_r11 csi_IM_ConfigId_r11;
 NhuCSI_Process_r11p_C_AndCBSRLst_r11 p_C_AndCBSRLst_r11;
 NhuCQI_ReportBothProc_r11 cqi_ReportBothProc_r11;
 NhuCSI_Process_r11cqi_ReportPeriodicProcId_r11 cqi_ReportPeriodicProcId_r11;
 NhuCQI_ReportAperiodicProc_r11 cqi_ReportAperiodicProc_r11;
} NhuCSI_Process_r11;

typedef struct NhuCSI_ProcessToAddModLst_r11
{
 TknU16 noComp;
 NhuCSI_Process_r11 *member;
}NhuCSI_ProcessToAddModLst_r11;

typedef struct NhuCQI_ReportBoth_r11
{
 TknPres pres;
 NhuCSI_IM_ConfigToRlsLst_r11 csi_IM_ConfigToRlsLst_r11;
 NhuCSI_IM_ConfigToAddModLst_r11 csi_IM_ConfigToAddModLst_r11;
 NhuCSI_ProcessToRlsLst_r11 csi_ProcessToRlsLst_r11;
 NhuCSI_ProcessToAddModLst_r11 csi_ProcessToAddModLst_r11;
} NhuCQI_ReportBoth_r11;

typedef struct NhuCQI_ReportConfig_v1130
{
 TknPres pres;
 NhuCQI_ReportPeriodic_v1130 cqi_ReportPeriodic_v1130;
 NhuCQI_ReportBoth_r11 cqi_ReportBoth_r11;
} NhuCQI_ReportConfig_v1130;

typedef TknU32 NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130setupn1PUCCH_AN_CS_LstP1_r11Member;

typedef struct NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130setupn1PUCCH_AN_CS_LstP1_r11
{
 TknU16 noComp;
 NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130setupn1PUCCH_AN_CS_LstP1_r11Member *member;
}NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130setupn1PUCCH_AN_CS_LstP1_r11;

typedef struct NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130setup
{
 TknPres pres;
 NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130setupn1PUCCH_AN_CS_LstP1_r11 n1PUCCH_AN_CS_LstP1_r11;
} NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130setup;

typedef struct NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130
{
 TknU8 choice;
 union {
  NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130setup setup;
 } val;
} NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130;


typedef TknU32 NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11setupnPUCCH_Identity_r11;


typedef TknU32 NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11setupn1PUCCH_AN_r11;

typedef struct NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11setup
{
 TknPres pres;
 NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11setupnPUCCH_Identity_r11 nPUCCH_Identity_r11;
 NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11setupn1PUCCH_AN_r11 n1PUCCH_AN_r11;
} NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11setup;

typedef struct NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11
{
 TknU8 choice;
 union {
  NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11setup setup;
 } val;
} NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11;

typedef struct NhuPUCCH_ConfigDedicated_v1130
{
 TknPres pres;
 NhuPUCCH_ConfigDedicated_v1130n1PUCCH_AN_CS_v1130 n1PUCCH_AN_CS_v1130;
 NhuPUCCH_ConfigDedicated_v1130nPUCCH_Param_r11 nPUCCH_Param_r11;
} NhuPUCCH_ConfigDedicated_v1130;


typedef TknU32 NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11setupnPUSCH_Identity_r11;


typedef TknU32 NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11setupnDMRS_CSH_Identity_r11;

typedef struct NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11setup
{
 TknPres pres;
 NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11setupnPUSCH_Identity_r11 nPUSCH_Identity_r11;
 NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11setupnDMRS_CSH_Identity_r11 nDMRS_CSH_Identity_r11;
} NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11setup;

typedef struct NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11
{
 TknU8 choice;
 union {
  NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11setup setup;
 } val;
} NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11;

typedef struct NhuPUSCH_ConfigDedicated_v1130
{
 TknPres pres;
 NhuPUSCH_ConfigDedicated_v1130pusch_DMRS_r11 pusch_DMRS_r11;
} NhuPUSCH_ConfigDedicated_v1130;


typedef enum enumNhuDeltaTxD_OffsetLstPUCCH_v1130deltaTxD_OffsetPUCCH_Format1bCS_r11
{
 NhuDeltaTxD_OffsetLstPUCCH_v1130deltaTxD_OffsetPUCCH_Format1bCS_r11dB0Enum,
 NhuDeltaTxD_OffsetLstPUCCH_v1130deltaTxD_OffsetPUCCH_Format1bCS_r11dB_1Enum
} EnumNhuDeltaTxD_OffsetLstPUCCH_v1130deltaTxD_OffsetPUCCH_Format1bCS_r11;
typedef TknU32 NhuDeltaTxD_OffsetLstPUCCH_v1130deltaTxD_OffsetPUCCH_Format1bCS_r11;

typedef struct NhuDeltaTxD_OffsetLstPUCCH_v1130
{
 TknPres pres;
 NhuDeltaTxD_OffsetLstPUCCH_v1130deltaTxD_OffsetPUCCH_Format1bCS_r11 deltaTxD_OffsetPUCCH_Format1bCS_r11;
} NhuDeltaTxD_OffsetLstPUCCH_v1130;


typedef TknU32 NhuUlnkPowerCntrlDedicated_v1130pSRS_Offset_v1130;


typedef TknU32 NhuUlnkPowerCntrlDedicated_v1130pSRS_OffsetAp_v1130;

typedef struct NhuUlnkPowerCntrlDedicated_v1130
{
 TknPres pres;
 NhuUlnkPowerCntrlDedicated_v1130pSRS_Offset_v1130 pSRS_Offset_v1130;
 NhuUlnkPowerCntrlDedicated_v1130pSRS_OffsetAp_v1130 pSRS_OffsetAp_v1130;
 NhuDeltaTxD_OffsetLstPUCCH_v1130 deltaTxD_OffsetLstPUCCH_v1130;
} NhuUlnkPowerCntrlDedicated_v1130;

typedef struct NhuPhysicalConfigDedicatedantennaInfo
{
 TknU8 choice;
 union {
  NhuAntennaInfoDedicated explicitValue;
 } val;
} NhuPhysicalConfigDedicatedantennaInfo;

typedef struct NhuPhysicalConfigDedicatedextaddgrp_2antennaInfo_r10
{
 TknU8 choice;
 union {
  NhuAntennaInfoDedicated_r10 explicitValue_r10;
 } val;
} NhuPhysicalConfigDedicatedextaddgrp_2antennaInfo_r10;


typedef TknU8 NhuPhysicalConfigDedicatedextaddgrp_2cif_Presence_r10;

typedef struct NhuPhysicalConfigDedicatedextaddgrp_3additionalSpectrumEmissionCA_r10setup
{
 TknPres pres;
 NhuAdditionalSpectrumEmission additionalSpectrumEmissionPCell_r10;
} NhuPhysicalConfigDedicatedextaddgrp_3additionalSpectrumEmissionCA_r10setup;

typedef struct NhuPhysicalConfigDedicatedextaddgrp_3additionalSpectrumEmissionCA_r10
{
 TknU8 choice;
 union {
  NhuPhysicalConfigDedicatedextaddgrp_3additionalSpectrumEmissionCA_r10setup setup;
 } val;
} NhuPhysicalConfigDedicatedextaddgrp_3additionalSpectrumEmissionCA_r10;

typedef struct NhuPhysicalConfigDedicatedextaddgrp_1
{
 TknPres pres;
 NhuCQI_ReportConfig_v920 cqi_ReportConfig_v920;
 NhuAntennaInfoDedicated_v920 antennaInfo_v920;
} NhuPhysicalConfigDedicatedextaddgrp_1;

typedef struct NhuPhysicalConfigDedicatedextaddgrp_2
{
 TknPres pres;
 NhuPhysicalConfigDedicatedextaddgrp_2antennaInfo_r10 antennaInfo_r10;
 NhuAntennaInfoUL_r10 antennaInfoUL_r10;
 NhuPhysicalConfigDedicatedextaddgrp_2cif_Presence_r10 cif_Presence_r10;
 NhuCQI_ReportConfig_r10 cqi_ReportConfig_r10;
 NhuCSI_RS_Config_r10 csi_RS_Config_r10;
 NhuPUCCH_ConfigDedicated_v1020 pucch_ConfigDedicated_v1020;
 NhuPUSCH_ConfigDedicated_v1020 pusch_ConfigDedicated_v1020;
 NhuSchedulingRqstConfig_v1020 schedulingRqstConfig_v1020;
 NhuSoundingRS_UL_ConfigDedicated_v1020 soundingRS_UL_ConfigDedicated_v1020;
 NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10 soundingRS_UL_ConfigDedicatedAperiodic_r10;
 NhuUlnkPowerCntrlDedicated_v1020 uplinkPowerCntrlDedicated_v1020;
} NhuPhysicalConfigDedicatedextaddgrp_2;

typedef struct NhuPhysicalConfigDedicatedextaddgrp_3
{
 TknPres pres;
 NhuPhysicalConfigDedicatedextaddgrp_3additionalSpectrumEmissionCA_r10 additionalSpectrumEmissionCA_r10;
} NhuPhysicalConfigDedicatedextaddgrp_3;

typedef struct NhuPhysicalConfigDedicatedextaddgrp_4
{
 TknPres pres;
 NhuCSI_RS_ConfigNZPToRlsLst_r11 csi_RS_ConfigNZPToRlsLst_r11;
 NhuCSI_RS_ConfigNZPToAddModLst_r11 csi_RS_ConfigNZPToAddModLst_r11;
 NhuCSI_RS_ConfigZPToRlsLst_r11 csi_RS_ConfigZPToRlsLst_r11;
 NhuCSI_RS_ConfigZPToAddModLst_r11 csi_RS_ConfigZPToAddModLst_r11;
 NhuEPDCCH_Config_r11 epdcch_Config_r11;
 NhuPDSCH_ConfigDedicated_v1130 pdsch_ConfigDedicated_v1130;
 NhuCQI_ReportConfig_v1130 cqi_ReportConfig_v1130;
 NhuPUCCH_ConfigDedicated_v1130 pucch_ConfigDedicated_v1130;
 NhuPUSCH_ConfigDedicated_v1130 pusch_ConfigDedicated_v1130;
 NhuUlnkPowerCntrlDedicated_v1130 uplinkPowerCntrlDedicated_v1130;
} NhuPhysicalConfigDedicatedextaddgrp_4;

typedef struct NhuPhysicalConfigDedicated
{
 TknPres pres;
 NhuPDSCH_ConfigDedicated pdsch_ConfigDedicated;
 NhuPUCCH_ConfigDedicated pucch_ConfigDedicated;
 NhuPUSCH_ConfigDedicated pusch_ConfigDedicated;
 NhuUlnkPowerCntrlDedicated uplinkPowerCntrlDedicated;
 NhuTPC_PDCCH_Config tpc_PDCCH_ConfigPUCCH;
 NhuTPC_PDCCH_Config tpc_PDCCH_ConfigPUSCH;
 NhuCQI_ReportConfig cqi_ReportConfig;
 NhuSoundingRS_UL_ConfigDedicated soundingRS_UL_ConfigDedicated;
 NhuPhysicalConfigDedicatedantennaInfo antennaInfo;
 NhuSchedulingRqstConfig schedulingRqstConfig;
 NhuPhysicalConfigDedicatedextaddgrp_1 extaddgrp_1;
 NhuPhysicalConfigDedicatedextaddgrp_2 extaddgrp_2;
 NhuPhysicalConfigDedicatedextaddgrp_3 extaddgrp_3;
 NhuPhysicalConfigDedicatedextaddgrp_4 extaddgrp_4;
} NhuPhysicalConfigDedicated;


typedef enum enumNhuRLF_TmrsAndConsts_r9setupt301_r9
{
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms100Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms200Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms300Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms400Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms600Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms1000Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms1500Enum,
 NhuRLF_TmrsAndConsts_r9setupt301_r9ms2000Enum
} EnumNhuRLF_TmrsAndConsts_r9setupt301_r9;
typedef TknU32 NhuRLF_TmrsAndConsts_r9setupt301_r9;


typedef enum enumNhuRLF_TmrsAndConsts_r9setupt310_r9
{
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms0Enum,
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms50Enum,
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms100Enum,
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms200Enum,
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms500Enum,
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms1000Enum,
 NhuRLF_TmrsAndConsts_r9setupt310_r9ms2000Enum
} EnumNhuRLF_TmrsAndConsts_r9setupt310_r9;
typedef TknU32 NhuRLF_TmrsAndConsts_r9setupt310_r9;


typedef enum enumNhuRLF_TmrsAndConsts_r9setupn310_r9
{
 NhuRLF_TmrsAndConsts_r9setupn310_r9n1Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n2Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n3Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n4Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n6Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n8Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n10Enum,
 NhuRLF_TmrsAndConsts_r9setupn310_r9n20Enum
} EnumNhuRLF_TmrsAndConsts_r9setupn310_r9;
typedef TknU32 NhuRLF_TmrsAndConsts_r9setupn310_r9;


typedef enum enumNhuRLF_TmrsAndConsts_r9setupt311_r9
{
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms1000Enum,
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms3000Enum,
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms5000Enum,
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms10000Enum,
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms15000Enum,
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms20000Enum,
 NhuRLF_TmrsAndConsts_r9setupt311_r9ms30000Enum
} EnumNhuRLF_TmrsAndConsts_r9setupt311_r9;
typedef TknU32 NhuRLF_TmrsAndConsts_r9setupt311_r9;


typedef enum enumNhuRLF_TmrsAndConsts_r9setupn311_r9
{
 NhuRLF_TmrsAndConsts_r9setupn311_r9n1Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n2Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n3Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n4Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n5Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n6Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n8Enum,
 NhuRLF_TmrsAndConsts_r9setupn311_r9n10Enum
} EnumNhuRLF_TmrsAndConsts_r9setupn311_r9;
typedef TknU32 NhuRLF_TmrsAndConsts_r9setupn311_r9;

typedef struct NhuRLF_TmrsAndConsts_r9setup
{
 TknPres pres;
 NhuRLF_TmrsAndConsts_r9setupt301_r9 t301_r9;
 NhuRLF_TmrsAndConsts_r9setupt310_r9 t310_r9;
 NhuRLF_TmrsAndConsts_r9setupn310_r9 n310_r9;
 NhuRLF_TmrsAndConsts_r9setupt311_r9 t311_r9;
 NhuRLF_TmrsAndConsts_r9setupn311_r9 n311_r9;
} NhuRLF_TmrsAndConsts_r9setup;

typedef struct NhuRLF_TmrsAndConsts_r9
{
 TknU8 choice;
 union {
  NhuRLF_TmrsAndConsts_r9setup setup;
 } val;
} NhuRLF_TmrsAndConsts_r9;

typedef struct NhuMeasSubfrmPatternPCell_r10
{
 TknU8 choice;
 union {
  NhuMeasSubfrmPattern_r10 setup;
 } val;
} NhuMeasSubfrmPatternPCell_r10;


typedef enum enumNhuCRS_AssistanceInfo_r11antennaPortsCount_r11
{
 NhuCRS_AssistanceInfo_r11antennaPortsCount_r11an1Enum,
 NhuCRS_AssistanceInfo_r11antennaPortsCount_r11an2Enum,
 NhuCRS_AssistanceInfo_r11antennaPortsCount_r11an4Enum,
 NhuCRS_AssistanceInfo_r11antennaPortsCount_r11spare1Enum
} EnumNhuCRS_AssistanceInfo_r11antennaPortsCount_r11;
typedef TknU32 NhuCRS_AssistanceInfo_r11antennaPortsCount_r11;

typedef struct NhuCRS_AssistanceInfo_r11
{
 TknPres pres;
 NhuPhysCellId physCellId_r11;
 NhuCRS_AssistanceInfo_r11antennaPortsCount_r11 antennaPortsCount_r11;
 NhuMBSFN_SubfrmConfigLst mbsfn_SubfrmConfigLst_r11;
} NhuCRS_AssistanceInfo_r11;

typedef struct NhuCRS_AssistanceInfoLst_r11
{
 TknU16 noComp;
 NhuCRS_AssistanceInfo_r11 *member;
}NhuCRS_AssistanceInfoLst_r11;

typedef struct NhuNeighCellsCRS_Info_r11
{
 TknU8 choice;
 union {
  NhuCRS_AssistanceInfoLst_r11 setup;
 } val;
} NhuNeighCellsCRS_Info_r11;

typedef struct NhuRadioResourceConfigDedicatedmac_MainConfig
{
 TknU8 choice;
 union {
  NhuMAC_MainConfig explicitValue;
 } val;
} NhuRadioResourceConfigDedicatedmac_MainConfig;

typedef struct NhuRadioResourceConfigDedicatedextaddgrp_1
{
 TknPres pres;
 NhuRLF_TmrsAndConsts_r9 rlf_TmrsAndConsts_r9;
} NhuRadioResourceConfigDedicatedextaddgrp_1;

typedef struct NhuRadioResourceConfigDedicatedextaddgrp_2
{
 TknPres pres;
 NhuMeasSubfrmPatternPCell_r10 measSubfrmPatternPCell_r10;
} NhuRadioResourceConfigDedicatedextaddgrp_2;

typedef struct NhuRadioResourceConfigDedicatedextaddgrp_3
{
 TknPres pres;
 NhuNeighCellsCRS_Info_r11 neighCellsCRS_Info_r11;
} NhuRadioResourceConfigDedicatedextaddgrp_3;

typedef struct NhuRadioResourceConfigDedicated
{
 TknPres pres;
 NhuSRB_ToAddModLst srb_ToAddModLst;
 NhuDRB_ToAddModLst drb_ToAddModLst;
 NhuDRB_ToRlsLst drb_ToRlsLst;
 NhuRadioResourceConfigDedicatedmac_MainConfig mac_MainConfig;
 NhuSPS_Config sps_Config;
 NhuPhysicalConfigDedicated physicalConfigDedicated;
 NhuRadioResourceConfigDedicatedextaddgrp_1 extaddgrp_1;
 NhuRadioResourceConfigDedicatedextaddgrp_2 extaddgrp_2;
 NhuRadioResourceConfigDedicatedextaddgrp_3 extaddgrp_3;
} NhuRadioResourceConfigDedicated;


typedef TknU32 NhuNextHopChainingCount;


typedef TknStrOSXL NhuRRCConReestb_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConReestb_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConReestb_v8a0_IEsnonCriticalExtn;

typedef struct NhuRRCConReestb_v8a0_IEs
{
 TknPres pres;
 NhuRRCConReestb_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConReestb_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConReestb_v8a0_IEs;

typedef struct NhuRRCConReestb_r8_IEs
{
 TknPres pres;
 NhuRadioResourceConfigDedicated radioResourceConfigDedicated;
 NhuNextHopChainingCount nextHopChainingCount;
 NhuRRCConReestb_v8a0_IEs nonCriticalExtn;
} NhuRRCConReestb_r8_IEs;

typedef struct NhuRRCConReestbcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRRCConReestb_r8_IEs rrcConReestb_r8;
 } val;
} NhuRRCConReestbcriticalExtnsc1;

typedef struct NhuRRCConReestbcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConReestbcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConReestbcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConReestbcriticalExtnsc1 c1;
  NhuRRCConReestbcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConReestbcriticalExtns;

typedef struct NhuRRCConReestb
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConReestbcriticalExtns criticalExtns;
} NhuRRCConReestb;


typedef TknStrOSXL NhuRRCConReestbRej_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConReestbRej_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConReestbRej_v8a0_IEsnonCriticalExtn;

typedef struct NhuRRCConReestbRej_v8a0_IEs
{
 TknPres pres;
 NhuRRCConReestbRej_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConReestbRej_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConReestbRej_v8a0_IEs;

typedef struct NhuRRCConReestbRej_r8_IEs
{
 TknPres pres;
 NhuRRCConReestbRej_v8a0_IEs nonCriticalExtn;
} NhuRRCConReestbRej_r8_IEs;

typedef struct NhuRRCConReestbRejcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConReestbRejcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConReestbRejcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConReestbRej_r8_IEs rrcConReestbRej_r8;
  NhuRRCConReestbRejcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConReestbRejcriticalExtns;

typedef struct NhuRRCConReestbRej
{
 TknPres pres;
 NhuRRCConReestbRejcriticalExtns criticalExtns;
} NhuRRCConReestbRej;


typedef enum enumNhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTyp_r11
{
 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTyp_r11frequencyEnum,
 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTyp_r11e_utraEnum
} EnumNhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTyp_r11;
typedef TknU32 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTyp_r11;


typedef enum enumNhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTimer_r11
{
 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTimer_r11min5Enum,
 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTimer_r11min10Enum,
 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTimer_r11min15Enum,
 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTimer_r11min30Enum
} EnumNhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTimer_r11;
typedef TknU32 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTimer_r11;

typedef struct NhuRRCConRej_v1130_IEsdeprioritisationReq_r11
{
 TknPres pres;
 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTyp_r11 deprioritisationTyp_r11;
 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11deprioritisationTimer_r11 deprioritisationTimer_r11;
} NhuRRCConRej_v1130_IEsdeprioritisationReq_r11;

typedef struct NhuRRCConRej_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConRej_v1130_IEsnonCriticalExtn;

typedef struct NhuRRCConRej_v1130_IEs
{
 TknPres pres;
 NhuRRCConRej_v1130_IEsdeprioritisationReq_r11 deprioritisationReq_r11;
 NhuRRCConRej_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConRej_v1130_IEs;


typedef TknU32 NhuRRCConRej_v1020_IEsextendedWaitTime_r10;

typedef struct NhuRRCConRej_v1020_IEs
{
 TknPres pres;
 NhuRRCConRej_v1020_IEsextendedWaitTime_r10 extendedWaitTime_r10;
 NhuRRCConRej_v1130_IEs nonCriticalExtn;
} NhuRRCConRej_v1020_IEs;


typedef TknStrOSXL NhuRRCConRej_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConRej_v8a0_IEs
{
 TknPres pres;
 NhuRRCConRej_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConRej_v1020_IEs nonCriticalExtn;
} NhuRRCConRej_v8a0_IEs;


typedef TknU32 NhuRRCConRej_r8_IEswaitTime;

typedef struct NhuRRCConRej_r8_IEs
{
 TknPres pres;
 NhuRRCConRej_r8_IEswaitTime waitTime;
 NhuRRCConRej_v8a0_IEs nonCriticalExtn;
} NhuRRCConRej_r8_IEs;

typedef struct NhuRRCConRejcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRRCConRej_r8_IEs rrcConRej_r8;
 } val;
} NhuRRCConRejcriticalExtnsc1;

typedef struct NhuRRCConRejcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConRejcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConRejcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConRejcriticalExtnsc1 c1;
  NhuRRCConRejcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConRejcriticalExtns;

typedef struct NhuRRCConRej
{
 TknPres pres;
 NhuRRCConRejcriticalExtns criticalExtns;
} NhuRRCConRej;


typedef TknStrOSXL NhuRRCConSetup_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConSetup_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConSetup_v8a0_IEsnonCriticalExtn;

typedef struct NhuRRCConSetup_v8a0_IEs
{
 TknPres pres;
 NhuRRCConSetup_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConSetup_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConSetup_v8a0_IEs;

typedef struct NhuRRCConSetup_r8_IEs
{
 TknPres pres;
 NhuRadioResourceConfigDedicated radioResourceConfigDedicated;
 NhuRRCConSetup_v8a0_IEs nonCriticalExtn;
} NhuRRCConSetup_r8_IEs;

typedef struct NhuRRCConSetupcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRRCConSetup_r8_IEs rrcConSetup_r8;
 } val;
} NhuRRCConSetupcriticalExtnsc1;

typedef struct NhuRRCConSetupcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConSetupcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConSetupcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConSetupcriticalExtnsc1 c1;
  NhuRRCConSetupcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConSetupcriticalExtns;

typedef struct NhuRRCConSetup
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConSetupcriticalExtns criticalExtns;
} NhuRRCConSetup;

typedef struct NhuDL_CCCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuRRCConReestb rrcConReestb;
  NhuRRCConReestbRej rrcConReestbRej;
  NhuRRCConRej rrcConRej;
  NhuRRCConSetup rrcConSetup;
 } val;
} NhuDL_CCCH_MsgTypc1;

typedef struct NhuDL_CCCH_MsgTypmessageClassExtn
{
 TknPres pres;
} NhuDL_CCCH_MsgTypmessageClassExtn;

typedef struct NhuDL_CCCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuDL_CCCH_MsgTypc1 c1;
  NhuDL_CCCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuDL_CCCH_MsgTyp;

typedef struct NhuDL_CCCH_Msg
{
 TknPres pres;
 NhuDL_CCCH_MsgTyp message;
} NhuDL_CCCH_Msg;


typedef TknStrBSXL NhuRAND_CDMA2000;

typedef TknStrOSXL NhuMobilityParamsCDMA2000;

typedef TknStrOSXL NhuCSFBParamsRspCDMA2000_v8a0_IEslateNonCriticalExtn;
typedef struct NhuCSFBParamsRspCDMA2000_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuCSFBParamsRspCDMA2000_v8a0_IEsnonCriticalExtn;

typedef struct NhuCSFBParamsRspCDMA2000_v8a0_IEs
{
 TknPres pres;
 NhuCSFBParamsRspCDMA2000_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuCSFBParamsRspCDMA2000_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuCSFBParamsRspCDMA2000_v8a0_IEs;

typedef struct NhuCSFBParamsRspCDMA2000_r8_IEs
{
 TknPres pres;
 NhuRAND_CDMA2000 rand;
 NhuMobilityParamsCDMA2000 mobilityParams;
 NhuCSFBParamsRspCDMA2000_v8a0_IEs nonCriticalExtn;
} NhuCSFBParamsRspCDMA2000_r8_IEs;

typedef struct NhuCSFBParamsRspCDMA2000criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuCSFBParamsRspCDMA2000criticalExtnscriticalExtnsFuture;

typedef struct NhuCSFBParamsRspCDMA2000criticalExtns
{
 TknU8 choice;
 union {
  NhuCSFBParamsRspCDMA2000_r8_IEs csfbParamsRspCDMA2000_r8;
  NhuCSFBParamsRspCDMA2000criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuCSFBParamsRspCDMA2000criticalExtns;

typedef struct NhuCSFBParamsRspCDMA2000
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuCSFBParamsRspCDMA2000criticalExtns criticalExtns;
} NhuCSFBParamsRspCDMA2000;


typedef TknStrOSXL NhuDedicatedInfoNAS;

typedef TknStrOSXL NhuDedicatedInfoCDMA2000;

typedef TknStrOSXL NhuDLInfoTfr_v8a0_IEslateNonCriticalExtn;
typedef struct NhuDLInfoTfr_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuDLInfoTfr_v8a0_IEsnonCriticalExtn;

typedef struct NhuDLInfoTfr_v8a0_IEs
{
 TknPres pres;
 NhuDLInfoTfr_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuDLInfoTfr_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuDLInfoTfr_v8a0_IEs;

typedef struct NhuDLInfoTfr_r8_IEsdedicatedInfoTyp
{
 TknU8 choice;
 union {
  NhuDedicatedInfoNAS dedicatedInfoNAS;
  NhuDedicatedInfoCDMA2000 dedicatedInfoCDMA2000_1XRTT;
  NhuDedicatedInfoCDMA2000 dedicatedInfoCDMA2000_HRPD;
 } val;
} NhuDLInfoTfr_r8_IEsdedicatedInfoTyp;

typedef struct NhuDLInfoTfr_r8_IEs
{
 TknPres pres;
 NhuDLInfoTfr_r8_IEsdedicatedInfoTyp dedicatedInfoTyp;
 NhuDLInfoTfr_v8a0_IEs nonCriticalExtn;
} NhuDLInfoTfr_r8_IEs;

typedef struct NhuDLInfoTfrcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuDLInfoTfr_r8_IEs dlInfoTfr_r8;
 } val;
} NhuDLInfoTfrcriticalExtnsc1;

typedef struct NhuDLInfoTfrcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuDLInfoTfrcriticalExtnscriticalExtnsFuture;

typedef struct NhuDLInfoTfrcriticalExtns
{
 TknU8 choice;
 union {
  NhuDLInfoTfrcriticalExtnsc1 c1;
  NhuDLInfoTfrcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuDLInfoTfrcriticalExtns;

typedef struct NhuDLInfoTfr
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuDLInfoTfrcriticalExtns criticalExtns;
} NhuDLInfoTfr;


typedef enum enumNhuCDMA2000_Typ
{
 NhuCDMA2000_Typtype1XRTTEnum,
 NhuCDMA2000_TyptypeHRPDEnum
} EnumNhuCDMA2000_Typ;
typedef TknU32 NhuCDMA2000_Typ;

typedef struct NhuCarrierFreqCDMA2000
{
 TknPres pres;
 NhuBandclassCDMA2000 bandClass;
 NhuARFCN_ValueCDMA2000 arfcn;
} NhuCarrierFreqCDMA2000;


typedef enum enumNhuHovrFromEUTRAPrepRqst_v1020_IEsdualRxTxRedirectIndicator_r10
{
 NhuHovrFromEUTRAPrepRqst_v1020_IEsdualRxTxRedirectIndicator_r10trueEnum
} EnumNhuHovrFromEUTRAPrepRqst_v1020_IEsdualRxTxRedirectIndicator_r10;
typedef TknU32 NhuHovrFromEUTRAPrepRqst_v1020_IEsdualRxTxRedirectIndicator_r10;

typedef struct NhuHovrFromEUTRAPrepRqst_v1020_IEsnonCriticalExtn
{
 TknPres pres;
} NhuHovrFromEUTRAPrepRqst_v1020_IEsnonCriticalExtn;

typedef struct NhuHovrFromEUTRAPrepRqst_v1020_IEs
{
 TknPres pres;
 NhuHovrFromEUTRAPrepRqst_v1020_IEsdualRxTxRedirectIndicator_r10 dualRxTxRedirectIndicator_r10;
 NhuCarrierFreqCDMA2000 redirectCarrierCDMA2000_1XRTT_r10;
 NhuHovrFromEUTRAPrepRqst_v1020_IEsnonCriticalExtn nonCriticalExtn;
} NhuHovrFromEUTRAPrepRqst_v1020_IEs;


typedef TknU8 NhuHovrFromEUTRAPrepRqst_v920_IEsconcurrPrepCDMA2000_HRPD_r9;

typedef struct NhuHovrFromEUTRAPrepRqst_v920_IEs
{
 TknPres pres;
 NhuHovrFromEUTRAPrepRqst_v920_IEsconcurrPrepCDMA2000_HRPD_r9 concurrPrepCDMA2000_HRPD_r9;
 NhuHovrFromEUTRAPrepRqst_v1020_IEs nonCriticalExtn;
} NhuHovrFromEUTRAPrepRqst_v920_IEs;


typedef TknStrOSXL NhuHovrFromEUTRAPrepRqst_v890_IEslateNonCriticalExtn;
typedef struct NhuHovrFromEUTRAPrepRqst_v890_IEs
{
 TknPres pres;
 NhuHovrFromEUTRAPrepRqst_v890_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuHovrFromEUTRAPrepRqst_v920_IEs nonCriticalExtn;
} NhuHovrFromEUTRAPrepRqst_v890_IEs;

typedef struct NhuHovrFromEUTRAPrepRqst_r8_IEs
{
 TknPres pres;
 NhuCDMA2000_Typ cdma2000_Typ;
 NhuRAND_CDMA2000 rand;
 NhuMobilityParamsCDMA2000 mobilityParams;
 NhuHovrFromEUTRAPrepRqst_v890_IEs nonCriticalExtn;
} NhuHovrFromEUTRAPrepRqst_r8_IEs;

typedef struct NhuHovrFromEUTRAPrepRqstcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuHovrFromEUTRAPrepRqst_r8_IEs handoverFromEUTRAPrepRqst_r8;
 } val;
} NhuHovrFromEUTRAPrepRqstcriticalExtnsc1;

typedef struct NhuHovrFromEUTRAPrepRqstcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuHovrFromEUTRAPrepRqstcriticalExtnscriticalExtnsFuture;

typedef struct NhuHovrFromEUTRAPrepRqstcriticalExtns
{
 TknU8 choice;
 union {
  NhuHovrFromEUTRAPrepRqstcriticalExtnsc1 c1;
  NhuHovrFromEUTRAPrepRqstcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuHovrFromEUTRAPrepRqstcriticalExtns;

typedef struct NhuHovrFromEUTRAPrepRqst
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuHovrFromEUTRAPrepRqstcriticalExtns criticalExtns;
} NhuHovrFromEUTRAPrepRqst;


typedef TknStrOSXL NhuSysInfoLstGERANMember;
typedef struct NhuSysInfoLstGERAN
{
 TknU16 noComp;
 NhuSysInfoLstGERANMember *member;
}NhuSysInfoLstGERAN;

typedef struct NhuSI_OrPSI_GERAN
{
 TknU8 choice;
 union {
  NhuSysInfoLstGERAN si;
  NhuSysInfoLstGERAN psi;
 } val;
} NhuSI_OrPSI_GERAN;


typedef enum enumNhuHovrtargetRAT_Typ
{
 NhuHovrtargetRAT_TyputraEnum,
 NhuHovrtargetRAT_TypgeranEnum,
 NhuHovrtargetRAT_Typcdma2000_1XRTTEnum,
 NhuHovrtargetRAT_Typcdma2000_HRPDEnum,
 NhuHovrtargetRAT_Typspare4Enum,
 NhuHovrtargetRAT_Typspare3Enum,
 NhuHovrtargetRAT_Typspare2Enum,
 NhuHovrtargetRAT_Typspare1Enum
} EnumNhuHovrtargetRAT_Typ;
typedef TknU32 NhuHovrtargetRAT_Typ;


typedef TknStrOSXL NhuHovrtargetRAT_MsgCont;

typedef TknStrOSXL NhuHovrnas_SecParamFromEUTRA;
typedef struct NhuHovr
{
 TknPres pres;
 NhuHovrtargetRAT_Typ targetRAT_Typ;
 NhuHovrtargetRAT_MsgCont targetRAT_MsgCont;
 NhuHovrnas_SecParamFromEUTRA nas_SecParamFromEUTRA;
 NhuSI_OrPSI_GERAN systemInfo;
} NhuHovr;


typedef TknStrBSXL NhuPhysCellIdGERANnetworkColourCode;

typedef TknStrBSXL NhuPhysCellIdGERANbaseStationColourCode;
typedef struct NhuPhysCellIdGERAN
{
 TknPres pres;
 NhuPhysCellIdGERANnetworkColourCode networkColourCode;
 NhuPhysCellIdGERANbaseStationColourCode baseStationColourCode;
} NhuPhysCellIdGERAN;

typedef struct NhuCarrierFreqGERAN
{
 TknPres pres;
 NhuARFCN_ValueGERAN arfcn;
 NhuBandIndicatorGERAN bandIndicator;
} NhuCarrierFreqGERAN;


typedef enum enumNhuCellChangeOrdert304
{
 NhuCellChangeOrdert304ms100Enum,
 NhuCellChangeOrdert304ms200Enum,
 NhuCellChangeOrdert304ms500Enum,
 NhuCellChangeOrdert304ms1000Enum,
 NhuCellChangeOrdert304ms2000Enum,
 NhuCellChangeOrdert304ms4000Enum,
 NhuCellChangeOrdert304ms8000Enum,
 NhuCellChangeOrdert304spare1Enum
} EnumNhuCellChangeOrdert304;
typedef TknU32 NhuCellChangeOrdert304;


typedef TknStrBSXL NhuCellChangeOrdertargetRAT_TypgerannetworkCntrlOrder;
typedef struct NhuCellChangeOrdertargetRAT_Typgeran
{
 TknPres pres;
 NhuPhysCellIdGERAN physCellId;
 NhuCarrierFreqGERAN carrierFreq;
 NhuCellChangeOrdertargetRAT_TypgerannetworkCntrlOrder networkCntrlOrder;
 NhuSI_OrPSI_GERAN systemInfo;
} NhuCellChangeOrdertargetRAT_Typgeran;

typedef struct NhuCellChangeOrdertargetRAT_Typ
{
 TknU8 choice;
 union {
  NhuCellChangeOrdertargetRAT_Typgeran geran;
 } val;
} NhuCellChangeOrdertargetRAT_Typ;

typedef struct NhuCellChangeOrder
{
 TknPres pres;
 NhuCellChangeOrdert304 t304;
 NhuCellChangeOrdertargetRAT_Typ targetRAT_Typ;
} NhuCellChangeOrder;

typedef struct NhuMobilityFromEUTRACmd_v8d0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuMobilityFromEUTRACmd_v8d0_IEsnonCriticalExtn;

typedef struct NhuMobilityFromEUTRACmd_v8d0_IEs
{
 TknPres pres;
 NhuBandIndicatorGERAN bandIndicator;
 NhuMobilityFromEUTRACmd_v8d0_IEsnonCriticalExtn nonCriticalExtn;
} NhuMobilityFromEUTRACmd_v8d0_IEs;


typedef TknStrOSXL NhuMobilityFromEUTRACmd_v8a0_IEslateNonCriticalExtn;
typedef struct NhuMobilityFromEUTRACmd_v8a0_IEs
{
 TknPres pres;
 NhuMobilityFromEUTRACmd_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuMobilityFromEUTRACmd_v8d0_IEs nonCriticalExtn;
} NhuMobilityFromEUTRACmd_v8a0_IEs;


typedef TknU8 NhuMobilityFromEUTRACmd_r8_IEscs_FallbackIndicator;

typedef struct NhuMobilityFromEUTRACmd_r8_IEspurpose
{
 TknU8 choice;
 union {
  NhuHovr handover;
  NhuCellChangeOrder cellChangeOrder;
 } val;
} NhuMobilityFromEUTRACmd_r8_IEspurpose;

typedef struct NhuMobilityFromEUTRACmd_r8_IEs
{
 TknPres pres;
 NhuMobilityFromEUTRACmd_r8_IEscs_FallbackIndicator cs_FallbackIndicator;
 NhuMobilityFromEUTRACmd_r8_IEspurpose purpose;
 NhuMobilityFromEUTRACmd_v8a0_IEs nonCriticalExtn;
} NhuMobilityFromEUTRACmd_r8_IEs;


typedef TknStrOSXL NhuE_CSFB_r9messageContCDMA2000_1XRTT_r9;

typedef enum enumNhuE_CSFB_r9mobilityCDMA2000_HRPD_r9
{
 NhuE_CSFB_r9mobilityCDMA2000_HRPD_r9handoverEnum,
 NhuE_CSFB_r9mobilityCDMA2000_HRPD_r9redirectionEnum
} EnumNhuE_CSFB_r9mobilityCDMA2000_HRPD_r9;
typedef TknU32 NhuE_CSFB_r9mobilityCDMA2000_HRPD_r9;


typedef TknStrOSXL NhuE_CSFB_r9messageContCDMA2000_HRPD_r9;
typedef struct NhuE_CSFB_r9
{
 TknPres pres;
 NhuE_CSFB_r9messageContCDMA2000_1XRTT_r9 messageContCDMA2000_1XRTT_r9;
 NhuE_CSFB_r9mobilityCDMA2000_HRPD_r9 mobilityCDMA2000_HRPD_r9;
 NhuE_CSFB_r9messageContCDMA2000_HRPD_r9 messageContCDMA2000_HRPD_r9;
 NhuCarrierFreqCDMA2000 redirectCarrierCDMA2000_HRPD_r9;
} NhuE_CSFB_r9;

typedef struct NhuMobilityFromEUTRACmd_v960_IEsnonCriticalExtn
{
 TknPres pres;
} NhuMobilityFromEUTRACmd_v960_IEsnonCriticalExtn;

typedef struct NhuMobilityFromEUTRACmd_v960_IEs
{
 TknPres pres;
 NhuBandIndicatorGERAN bandIndicator;
 NhuMobilityFromEUTRACmd_v960_IEsnonCriticalExtn nonCriticalExtn;
} NhuMobilityFromEUTRACmd_v960_IEs;


typedef TknStrOSXL NhuMobilityFromEUTRACmd_v930_IEslateNonCriticalExtn;
typedef struct NhuMobilityFromEUTRACmd_v930_IEs
{
 TknPres pres;
 NhuMobilityFromEUTRACmd_v930_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuMobilityFromEUTRACmd_v960_IEs nonCriticalExtn;
} NhuMobilityFromEUTRACmd_v930_IEs;


typedef TknU8 NhuMobilityFromEUTRACmd_r9_IEscs_FallbackIndicator;

typedef struct NhuMobilityFromEUTRACmd_r9_IEspurpose
{
 TknU8 choice;
 union {
  NhuHovr handover;
  NhuCellChangeOrder cellChangeOrder;
  NhuE_CSFB_r9 e_CSFB_r9;
 } val;
} NhuMobilityFromEUTRACmd_r9_IEspurpose;

typedef struct NhuMobilityFromEUTRACmd_r9_IEs
{
 TknPres pres;
 NhuMobilityFromEUTRACmd_r9_IEscs_FallbackIndicator cs_FallbackIndicator;
 NhuMobilityFromEUTRACmd_r9_IEspurpose purpose;
 NhuMobilityFromEUTRACmd_v930_IEs nonCriticalExtn;
} NhuMobilityFromEUTRACmd_r9_IEs;

typedef struct NhuMobilityFromEUTRACmdcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuMobilityFromEUTRACmd_r8_IEs mobilityFromEUTRACmd_r8;
  NhuMobilityFromEUTRACmd_r9_IEs mobilityFromEUTRACmd_r9;
 } val;
} NhuMobilityFromEUTRACmdcriticalExtnsc1;

typedef struct NhuMobilityFromEUTRACmdcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuMobilityFromEUTRACmdcriticalExtnscriticalExtnsFuture;

typedef struct NhuMobilityFromEUTRACmdcriticalExtns
{
 TknU8 choice;
 union {
  NhuMobilityFromEUTRACmdcriticalExtnsc1 c1;
  NhuMobilityFromEUTRACmdcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuMobilityFromEUTRACmdcriticalExtns;

typedef struct NhuMobilityFromEUTRACmd
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuMobilityFromEUTRACmdcriticalExtns criticalExtns;
} NhuMobilityFromEUTRACmd;


typedef TknU32 NhuMeasObjectId;

typedef struct NhuMeasObjectToRemoveLst
{
 TknU16 noComp;
 NhuMeasObjectId *member;
}NhuMeasObjectToRemoveLst;


typedef TknU32 NhuCellIdx;

typedef struct NhuCellIdxLst
{
 TknU16 noComp;
 NhuCellIdx *member;
}NhuCellIdxLst;


typedef TknU32 NhuCellsToAddModcellIdx;

typedef struct NhuCellsToAddMod
{
 TknPres pres;
 NhuCellsToAddModcellIdx cellIdx;
 NhuPhysCellId physCellId;
 NhuQ_OffsetRange cellIvdualOffset;
} NhuCellsToAddMod;

typedef struct NhuCellsToAddModLst
{
 TknU16 noComp;
 NhuCellsToAddMod *member;
}NhuCellsToAddModLst;


typedef TknU32 NhuBlackCellsToAddModcellIdx;

typedef struct NhuBlackCellsToAddMod
{
 TknPres pres;
 NhuBlackCellsToAddModcellIdx cellIdx;
 NhuPhysCellIdRange physCellIdRange;
} NhuBlackCellsToAddMod;

typedef struct NhuBlackCellsToAddModLst
{
 TknU16 noComp;
 NhuBlackCellsToAddMod *member;
}NhuBlackCellsToAddModLst;


typedef enum enumNhuMeasCycleSCell_r10
{
 NhuMeasCycleSCell_r10sf160Enum,
 NhuMeasCycleSCell_r10sf256Enum,
 NhuMeasCycleSCell_r10sf320Enum,
 NhuMeasCycleSCell_r10sf512Enum,
 NhuMeasCycleSCell_r10sf640Enum,
 NhuMeasCycleSCell_r10sf1024Enum,
 NhuMeasCycleSCell_r10sf1280Enum,
 NhuMeasCycleSCell_r10spare1Enum
} EnumNhuMeasCycleSCell_r10;
typedef TknU32 NhuMeasCycleSCell_r10;

typedef struct NhuMeasSubfrmCellLst_r10
{
 TknU16 noComp;
 NhuPhysCellIdRange *member;
}NhuMeasSubfrmCellLst_r10;

typedef struct NhuMeasSubfrmPatternConfigNeigh_r10setup
{
 TknPres pres;
 NhuMeasSubfrmPattern_r10 measSubfrmPatternNeigh_r10;
 NhuMeasSubfrmCellLst_r10 measSubfrmCellLst_r10;
} NhuMeasSubfrmPatternConfigNeigh_r10setup;

typedef struct NhuMeasSubfrmPatternConfigNeigh_r10
{
 TknU8 choice;
 union {
  NhuMeasSubfrmPatternConfigNeigh_r10setup setup;
 } val;
} NhuMeasSubfrmPatternConfigNeigh_r10;


typedef TknU8 NhuMeasObjectEUTRAextaddgrp_2widebandRSRQ_Meas_r11;

typedef struct NhuMeasObjectEUTRAextaddgrp_1
{
 TknPres pres;
 NhuMeasCycleSCell_r10 measCycleSCell_r10;
 NhuMeasSubfrmPatternConfigNeigh_r10 measSubfrmPatternConfigNeigh_r10;
} NhuMeasObjectEUTRAextaddgrp_1;

typedef struct NhuMeasObjectEUTRAextaddgrp_2
{
 TknPres pres;
 NhuMeasObjectEUTRAextaddgrp_2widebandRSRQ_Meas_r11 widebandRSRQ_Meas_r11;
} NhuMeasObjectEUTRAextaddgrp_2;

typedef struct NhuMeasObjectEUTRA
{
 TknPres pres;
 NhuARFCN_ValueEUTRA carrierFreq;
 NhuAllowedMeasBandwidth allowedMeasBandwidth;
 NhuPresenceAntennaPort1 presenceAntennaPort1;
 NhuNeighCellConfig neighCellConfig;
 NhuQ_OffsetRange offsetFreq;
 NhuCellIdxLst cellsToRemoveLst;
 NhuCellsToAddModLst cellsToAddModLst;
 NhuCellIdxLst blackCellsToRemoveLst;
 NhuBlackCellsToAddModLst blackCellsToAddModLst;
 NhuPhysCellId cellForWhichToReportCGI;
 NhuMeasObjectEUTRAextaddgrp_1 extaddgrp_1;
 NhuMeasObjectEUTRAextaddgrp_2 extaddgrp_2;
} NhuMeasObjectEUTRA;


typedef TknS32 NhuQ_OffsetRangeInterRAT;


typedef TknU32 NhuPhysCellIdUTRA_FDD;


typedef TknU32 NhuCellsToAddModUTRA_FDDcellIdx;

typedef struct NhuCellsToAddModUTRA_FDD
{
 TknPres pres;
 NhuCellsToAddModUTRA_FDDcellIdx cellIdx;
 NhuPhysCellIdUTRA_FDD physCellId;
} NhuCellsToAddModUTRA_FDD;

typedef struct NhuCellsToAddModLstUTRA_FDD
{
 TknU16 noComp;
 NhuCellsToAddModUTRA_FDD *member;
}NhuCellsToAddModLstUTRA_FDD;


typedef TknU32 NhuPhysCellIdUTRA_TDD;


typedef TknU32 NhuCellsToAddModUTRA_TDDcellIdx;

typedef struct NhuCellsToAddModUTRA_TDD
{
 TknPres pres;
 NhuCellsToAddModUTRA_TDDcellIdx cellIdx;
 NhuPhysCellIdUTRA_TDD physCellId;
} NhuCellsToAddModUTRA_TDD;

typedef struct NhuCellsToAddModLstUTRA_TDD
{
 TknU16 noComp;
 NhuCellsToAddModUTRA_TDD *member;
}NhuCellsToAddModLstUTRA_TDD;


typedef TknU32 NhuPhysCellIdRangeUTRA_FDD_r9range_r9;

typedef struct NhuPhysCellIdRangeUTRA_FDD_r9
{
 TknPres pres;
 NhuPhysCellIdUTRA_FDD start_r9;
 NhuPhysCellIdRangeUTRA_FDD_r9range_r9 range_r9;
} NhuPhysCellIdRangeUTRA_FDD_r9;

typedef struct NhuPhysCellIdRangeUTRA_FDDLst_r9
{
 TknU16 noComp;
 NhuPhysCellIdRangeUTRA_FDD_r9 *member;
}NhuPhysCellIdRangeUTRA_FDDLst_r9;

typedef struct NhuCSG_AllowedRprtngCells_r9
{
 TknPres pres;
 NhuPhysCellIdRangeUTRA_FDDLst_r9 physCellIdRangeUTRA_FDDLst_r9;
} NhuCSG_AllowedRprtngCells_r9;

typedef struct NhuMeasObjectUTRAcellsToAddModLst
{
 TknU8 choice;
 union {
  NhuCellsToAddModLstUTRA_FDD cellsToAddModLstUTRA_FDD;
  NhuCellsToAddModLstUTRA_TDD cellsToAddModLstUTRA_TDD;
 } val;
} NhuMeasObjectUTRAcellsToAddModLst;

typedef struct NhuMeasObjectUTRAcellForWhichToReportCGI
{
 TknU8 choice;
 union {
  NhuPhysCellIdUTRA_FDD utra_FDD;
  NhuPhysCellIdUTRA_TDD utra_TDD;
 } val;
} NhuMeasObjectUTRAcellForWhichToReportCGI;

typedef struct NhuMeasObjectUTRAextaddgrp_1
{
 TknPres pres;
 NhuCSG_AllowedRprtngCells_r9 csg_allowedRprtngCells_v930;
} NhuMeasObjectUTRAextaddgrp_1;

typedef struct NhuMeasObjectUTRA
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq;
 NhuQ_OffsetRangeInterRAT offsetFreq;
 NhuCellIdxLst cellsToRemoveLst;
 NhuMeasObjectUTRAcellsToAddModLst cellsToAddModLst;
 NhuMeasObjectUTRAcellForWhichToReportCGI cellForWhichToReportCGI;
 NhuMeasObjectUTRAextaddgrp_1 extaddgrp_1;
} NhuMeasObjectUTRA;


typedef TknStrBSXL NhuMeasObjectGERANncc_Permitted;
typedef struct NhuMeasObjectGERAN
{
 TknPres pres;
 NhuCarrierFreqsGERAN carrierFreqs;
 NhuQ_OffsetRangeInterRAT offsetFreq;
 NhuMeasObjectGERANncc_Permitted ncc_Permitted;
 NhuPhysCellIdGERAN cellForWhichToReportCGI;
} NhuMeasObjectGERAN;


typedef TknU32 NhuCellsToAddModCDMA2000cellIdx;

typedef struct NhuCellsToAddModCDMA2000
{
 TknPres pres;
 NhuCellsToAddModCDMA2000cellIdx cellIdx;
 NhuPhysCellIdCDMA2000 physCellId;
} NhuCellsToAddModCDMA2000;

typedef struct NhuCellsToAddModLstCDMA2000
{
 TknU16 noComp;
 NhuCellsToAddModCDMA2000 *member;
}NhuCellsToAddModLstCDMA2000;


typedef TknU32 NhuMeasObjectCDMA2000searchWindowSize;

typedef struct NhuMeasObjectCDMA2000
{
 TknPres pres;
 NhuCDMA2000_Typ cdma2000_Typ;
 NhuCarrierFreqCDMA2000 carrierFreq;
 NhuMeasObjectCDMA2000searchWindowSize searchWindowSize;
 NhuQ_OffsetRangeInterRAT offsetFreq;
 NhuCellIdxLst cellsToRemoveLst;
 NhuCellsToAddModLstCDMA2000 cellsToAddModLst;
 NhuPhysCellIdCDMA2000 cellForWhichToReportCGI;
} NhuMeasObjectCDMA2000;

typedef struct NhuMeasObjectToAddModmeasObject
{
 TknU8 choice;
 union {
  NhuMeasObjectEUTRA measObjectEUTRA;
  NhuMeasObjectUTRA measObjectUTRA;
  NhuMeasObjectGERAN measObjectGERAN;
  NhuMeasObjectCDMA2000 measObjectCDMA2000;
 } val;
} NhuMeasObjectToAddModmeasObject;

typedef struct NhuMeasObjectToAddMod
{
 TknPres pres;
 NhuMeasObjectId measObjectId;
 NhuMeasObjectToAddModmeasObject measObject;
} NhuMeasObjectToAddMod;

typedef struct NhuMeasObjectToAddModLst
{
 TknU16 noComp;
 NhuMeasObjectToAddMod *member;
}NhuMeasObjectToAddModLst;


typedef TknU32 NhuReportConfigId;

typedef struct NhuReportConfigToRemoveLst
{
 TknU16 noComp;
 NhuReportConfigId *member;
}NhuReportConfigToRemoveLst;


typedef TknU32 NhuRSRP_Range;


typedef TknU32 NhuRSRQ_Range;

typedef struct NhuThresholdEUTRA
{
 TknU8 choice;
 union {
  NhuRSRP_Range threshold_RSRP;
  NhuRSRQ_Range threshold_RSRQ;
 } val;
} NhuThresholdEUTRA;


typedef TknU32 NhuHysteresis;


typedef enum enumNhuTimeToTrigger
{
 NhuTimeToTriggerms0Enum,
 NhuTimeToTriggerms40Enum,
 NhuTimeToTriggerms64Enum,
 NhuTimeToTriggerms80Enum,
 NhuTimeToTriggerms100Enum,
 NhuTimeToTriggerms128Enum,
 NhuTimeToTriggerms160Enum,
 NhuTimeToTriggerms256Enum,
 NhuTimeToTriggerms320Enum,
 NhuTimeToTriggerms480Enum,
 NhuTimeToTriggerms512Enum,
 NhuTimeToTriggerms640Enum,
 NhuTimeToTriggerms1024Enum,
 NhuTimeToTriggerms1280Enum,
 NhuTimeToTriggerms2560Enum,
 NhuTimeToTriggerms5120Enum
} EnumNhuTimeToTrigger;
typedef TknU32 NhuTimeToTrigger;


typedef enum enumNhuReportInterval
{
 NhuReportIntervalms120Enum,
 NhuReportIntervalms240Enum,
 NhuReportIntervalms480Enum,
 NhuReportIntervalms640Enum,
 NhuReportIntervalms1024Enum,
 NhuReportIntervalms2048Enum,
 NhuReportIntervalms5120Enum,
 NhuReportIntervalms10240Enum,
 NhuReportIntervalmin1Enum,
 NhuReportIntervalmin6Enum,
 NhuReportIntervalmin12Enum,
 NhuReportIntervalmin30Enum,
 NhuReportIntervalmin60Enum,
 NhuReportIntervalspare3Enum,
 NhuReportIntervalspare2Enum,
 NhuReportIntervalspare1Enum
} EnumNhuReportInterval;
typedef TknU32 NhuReportInterval;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventIdeventA1
{
 TknPres pres;
 NhuThresholdEUTRA a1_Threshold;
} NhuReportConfigEUTRAtriggerTypeventeventIdeventA1;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventIdeventA2
{
 TknPres pres;
 NhuThresholdEUTRA a2_Threshold;
} NhuReportConfigEUTRAtriggerTypeventeventIdeventA2;


typedef TknS32 NhuReportConfigEUTRAtriggerTypeventeventIdeventA3a3_Offset;


typedef TknU8 NhuReportConfigEUTRAtriggerTypeventeventIdeventA3reportOnLeave;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventIdeventA3
{
 TknPres pres;
 NhuReportConfigEUTRAtriggerTypeventeventIdeventA3a3_Offset a3_Offset;
 NhuReportConfigEUTRAtriggerTypeventeventIdeventA3reportOnLeave reportOnLeave;
} NhuReportConfigEUTRAtriggerTypeventeventIdeventA3;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventIdeventA4
{
 TknPres pres;
 NhuThresholdEUTRA a4_Threshold;
} NhuReportConfigEUTRAtriggerTypeventeventIdeventA4;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventIdeventA5
{
 TknPres pres;
 NhuThresholdEUTRA a5_Threshold1;
 NhuThresholdEUTRA a5_Threshold2;
} NhuReportConfigEUTRAtriggerTypeventeventIdeventA5;


typedef TknS32 NhuReportConfigEUTRAtriggerTypeventeventIdeventA6_r10a6_Offset_r10;


typedef TknU8 NhuReportConfigEUTRAtriggerTypeventeventIdeventA6_r10a6_ReportOnLeave_r10;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventIdeventA6_r10
{
 TknPres pres;
 NhuReportConfigEUTRAtriggerTypeventeventIdeventA6_r10a6_Offset_r10 a6_Offset_r10;
 NhuReportConfigEUTRAtriggerTypeventeventIdeventA6_r10a6_ReportOnLeave_r10 a6_ReportOnLeave_r10;
} NhuReportConfigEUTRAtriggerTypeventeventIdeventA6_r10;

typedef struct NhuReportConfigEUTRAtriggerTypeventeventId
{
 TknU8 choice;
 union {
  NhuReportConfigEUTRAtriggerTypeventeventIdeventA1 eventA1;
  NhuReportConfigEUTRAtriggerTypeventeventIdeventA2 eventA2;
  NhuReportConfigEUTRAtriggerTypeventeventIdeventA3 eventA3;
  NhuReportConfigEUTRAtriggerTypeventeventIdeventA4 eventA4;
  NhuReportConfigEUTRAtriggerTypeventeventIdeventA5 eventA5;
  NhuReportConfigEUTRAtriggerTypeventeventIdeventA6_r10 eventA6_r10;
 } val;
} NhuReportConfigEUTRAtriggerTypeventeventId;

typedef struct NhuReportConfigEUTRAtriggerTypevent
{
 TknPres pres;
 NhuReportConfigEUTRAtriggerTypeventeventId eventId;
 NhuHysteresis hysteresis;
 NhuTimeToTrigger timeToTrigger;
} NhuReportConfigEUTRAtriggerTypevent;


typedef enum enumNhuReportConfigEUTRAtriggerTypperiodicalpurpose
{
 NhuReportConfigEUTRAtriggerTypperiodicalpurposereportStrongestCellsEnum,
 NhuReportConfigEUTRAtriggerTypperiodicalpurposereportCGIEnum
} EnumNhuReportConfigEUTRAtriggerTypperiodicalpurpose;
typedef TknU32 NhuReportConfigEUTRAtriggerTypperiodicalpurpose;

typedef struct NhuReportConfigEUTRAtriggerTypperiodical
{
 TknPres pres;
 NhuReportConfigEUTRAtriggerTypperiodicalpurpose purpose;
} NhuReportConfigEUTRAtriggerTypperiodical;

typedef struct NhuReportConfigEUTRAtriggerTyp
{
 TknU8 choice;
 union {
  NhuReportConfigEUTRAtriggerTypevent event;
  NhuReportConfigEUTRAtriggerTypperiodical periodical;
 } val;
} NhuReportConfigEUTRAtriggerTyp;


typedef enum enumNhuReportConfigEUTRAtriggerQuantity
{
 NhuReportConfigEUTRAtriggerQuantityrsrpEnum,
 NhuReportConfigEUTRAtriggerQuantityrsrqEnum
} EnumNhuReportConfigEUTRAtriggerQuantity;
typedef TknU32 NhuReportConfigEUTRAtriggerQuantity;


typedef enum enumNhuReportConfigEUTRAreportQuantity
{
 NhuReportConfigEUTRAreportQuantitysameAsTriggerQuantityEnum,
 NhuReportConfigEUTRAreportQuantitybothEnum
} EnumNhuReportConfigEUTRAreportQuantity;
typedef TknU32 NhuReportConfigEUTRAreportQuantity;


typedef TknU32 NhuReportConfigEUTRAmaxReportCells;


typedef enum enumNhuReportConfigEUTRAreportAmount
{
 NhuReportConfigEUTRAreportAmountr1Enum,
 NhuReportConfigEUTRAreportAmountr2Enum,
 NhuReportConfigEUTRAreportAmountr4Enum,
 NhuReportConfigEUTRAreportAmountr8Enum,
 NhuReportConfigEUTRAreportAmountr16Enum,
 NhuReportConfigEUTRAreportAmountr32Enum,
 NhuReportConfigEUTRAreportAmountr64Enum,
 NhuReportConfigEUTRAreportAmountinfinityEnum
} EnumNhuReportConfigEUTRAreportAmount;
typedef TknU32 NhuReportConfigEUTRAreportAmount;


typedef enum enumNhuReportConfigEUTRAextaddgrp_1si_RqstForHO_r9
{
 NhuReportConfigEUTRAextaddgrp_1si_RqstForHO_r9setupEnum
} EnumNhuReportConfigEUTRAextaddgrp_1si_RqstForHO_r9;
typedef TknU32 NhuReportConfigEUTRAextaddgrp_1si_RqstForHO_r9;


typedef enum enumNhuReportConfigEUTRAextaddgrp_1ue_RxTxTimeDiffPeriodical_r9
{
 NhuReportConfigEUTRAextaddgrp_1ue_RxTxTimeDiffPeriodical_r9setupEnum
} EnumNhuReportConfigEUTRAextaddgrp_1ue_RxTxTimeDiffPeriodical_r9;
typedef TknU32 NhuReportConfigEUTRAextaddgrp_1ue_RxTxTimeDiffPeriodical_r9;


typedef enum enumNhuReportConfigEUTRAextaddgrp_2includeLocInfo_r10
{
 NhuReportConfigEUTRAextaddgrp_2includeLocInfo_r10trueEnum
} EnumNhuReportConfigEUTRAextaddgrp_2includeLocInfo_r10;
typedef TknU32 NhuReportConfigEUTRAextaddgrp_2includeLocInfo_r10;


typedef enum enumNhuReportConfigEUTRAextaddgrp_2reportAddNeighMeas_r10
{
 NhuReportConfigEUTRAextaddgrp_2reportAddNeighMeas_r10setupEnum
} EnumNhuReportConfigEUTRAextaddgrp_2reportAddNeighMeas_r10;
typedef TknU32 NhuReportConfigEUTRAextaddgrp_2reportAddNeighMeas_r10;

typedef struct NhuReportConfigEUTRAextaddgrp_1
{
 TknPres pres;
 NhuReportConfigEUTRAextaddgrp_1si_RqstForHO_r9 si_RqstForHO_r9;
 NhuReportConfigEUTRAextaddgrp_1ue_RxTxTimeDiffPeriodical_r9 ue_RxTxTimeDiffPeriodical_r9;
} NhuReportConfigEUTRAextaddgrp_1;

typedef struct NhuReportConfigEUTRAextaddgrp_2
{
 TknPres pres;
 NhuReportConfigEUTRAextaddgrp_2includeLocInfo_r10 includeLocInfo_r10;
 NhuReportConfigEUTRAextaddgrp_2reportAddNeighMeas_r10 reportAddNeighMeas_r10;
} NhuReportConfigEUTRAextaddgrp_2;

typedef struct NhuReportConfigEUTRA
{
 TknPres pres;
 NhuReportConfigEUTRAtriggerTyp triggerTyp;
 NhuReportConfigEUTRAtriggerQuantity triggerQuantity;
 NhuReportConfigEUTRAreportQuantity reportQuantity;
 NhuReportConfigEUTRAmaxReportCells maxReportCells;
 NhuReportInterval reportInterval;
 NhuReportConfigEUTRAreportAmount reportAmount;
 NhuReportConfigEUTRAextaddgrp_1 extaddgrp_1;
 NhuReportConfigEUTRAextaddgrp_2 extaddgrp_2;
} NhuReportConfigEUTRA;


typedef TknS32 NhuThresholdUTRAutra_RSCP;


typedef TknU32 NhuThresholdUTRAutra_EcN0;

typedef struct NhuThresholdUTRA
{
 TknU8 choice;
 union {
  NhuThresholdUTRAutra_RSCP utra_RSCP;
  NhuThresholdUTRAutra_EcN0 utra_EcN0;
 } val;
} NhuThresholdUTRA;


typedef TknU32 NhuThresholdGERAN;


typedef TknU32 NhuThresholdCDMA2000;

typedef struct NhuReportConfigInterRATtriggerTypeventeventIdeventB1b1_Threshold
{
 TknU8 choice;
 union {
  NhuThresholdUTRA b1_ThresholdUTRA;
  NhuThresholdGERAN b1_ThresholdGERAN;
  NhuThresholdCDMA2000 b1_ThresholdCDMA2000;
 } val;
} NhuReportConfigInterRATtriggerTypeventeventIdeventB1b1_Threshold;

typedef struct NhuReportConfigInterRATtriggerTypeventeventIdeventB1
{
 TknPres pres;
 NhuReportConfigInterRATtriggerTypeventeventIdeventB1b1_Threshold b1_Threshold;
} NhuReportConfigInterRATtriggerTypeventeventIdeventB1;

typedef struct NhuReportConfigInterRATtriggerTypeventeventIdeventB2b2_Threshold2
{
 TknU8 choice;
 union {
  NhuThresholdUTRA b2_Threshold2UTRA;
  NhuThresholdGERAN b2_Threshold2GERAN;
  NhuThresholdCDMA2000 b2_Threshold2CDMA2000;
 } val;
} NhuReportConfigInterRATtriggerTypeventeventIdeventB2b2_Threshold2;

typedef struct NhuReportConfigInterRATtriggerTypeventeventIdeventB2
{
 TknPres pres;
 NhuThresholdEUTRA b2_Threshold1;
 NhuReportConfigInterRATtriggerTypeventeventIdeventB2b2_Threshold2 b2_Threshold2;
} NhuReportConfigInterRATtriggerTypeventeventIdeventB2;

typedef struct NhuReportConfigInterRATtriggerTypeventeventId
{
 TknU8 choice;
 union {
  NhuReportConfigInterRATtriggerTypeventeventIdeventB1 eventB1;
  NhuReportConfigInterRATtriggerTypeventeventIdeventB2 eventB2;
 } val;
} NhuReportConfigInterRATtriggerTypeventeventId;

typedef struct NhuReportConfigInterRATtriggerTypevent
{
 TknPres pres;
 NhuReportConfigInterRATtriggerTypeventeventId eventId;
 NhuHysteresis hysteresis;
 NhuTimeToTrigger timeToTrigger;
} NhuReportConfigInterRATtriggerTypevent;


typedef enum enumNhuReportConfigInterRATtriggerTypperiodicalpurpose
{
 NhuReportConfigInterRATtriggerTypperiodicalpurposereportStrongestCellsEnum,
 NhuReportConfigInterRATtriggerTypperiodicalpurposereportStrongestCellsForSONEnum,
 NhuReportConfigInterRATtriggerTypperiodicalpurposereportCGIEnum
} EnumNhuReportConfigInterRATtriggerTypperiodicalpurpose;
typedef TknU32 NhuReportConfigInterRATtriggerTypperiodicalpurpose;

typedef struct NhuReportConfigInterRATtriggerTypperiodical
{
 TknPres pres;
 NhuReportConfigInterRATtriggerTypperiodicalpurpose purpose;
} NhuReportConfigInterRATtriggerTypperiodical;

typedef struct NhuReportConfigInterRATtriggerTyp
{
 TknU8 choice;
 union {
  NhuReportConfigInterRATtriggerTypevent event;
  NhuReportConfigInterRATtriggerTypperiodical periodical;
 } val;
} NhuReportConfigInterRATtriggerTyp;


typedef TknU32 NhuReportConfigInterRATmaxReportCells;


typedef enum enumNhuReportConfigInterRATreportAmount
{
 NhuReportConfigInterRATreportAmountr1Enum,
 NhuReportConfigInterRATreportAmountr2Enum,
 NhuReportConfigInterRATreportAmountr4Enum,
 NhuReportConfigInterRATreportAmountr8Enum,
 NhuReportConfigInterRATreportAmountr16Enum,
 NhuReportConfigInterRATreportAmountr32Enum,
 NhuReportConfigInterRATreportAmountr64Enum,
 NhuReportConfigInterRATreportAmountinfinityEnum
} EnumNhuReportConfigInterRATreportAmount;
typedef TknU32 NhuReportConfigInterRATreportAmount;


typedef enum enumNhuReportConfigInterRATextaddgrp_1si_RqstForHO_r9
{
 NhuReportConfigInterRATextaddgrp_1si_RqstForHO_r9setupEnum
} EnumNhuReportConfigInterRATextaddgrp_1si_RqstForHO_r9;
typedef TknU32 NhuReportConfigInterRATextaddgrp_1si_RqstForHO_r9;


typedef enum enumNhuReportConfigInterRATextaddgrp_2reportQuantityUTRA_FDD_r10
{
 NhuReportConfigInterRATextaddgrp_2reportQuantityUTRA_FDD_r10bothEnum
} EnumNhuReportConfigInterRATextaddgrp_2reportQuantityUTRA_FDD_r10;
typedef TknU32 NhuReportConfigInterRATextaddgrp_2reportQuantityUTRA_FDD_r10;


typedef TknU8 NhuReportConfigInterRATextaddgrp_3includeLocInfo_r11;

typedef struct NhuReportConfigInterRATextaddgrp_1
{
 TknPres pres;
 NhuReportConfigInterRATextaddgrp_1si_RqstForHO_r9 si_RqstForHO_r9;
} NhuReportConfigInterRATextaddgrp_1;

typedef struct NhuReportConfigInterRATextaddgrp_2
{
 TknPres pres;
 NhuReportConfigInterRATextaddgrp_2reportQuantityUTRA_FDD_r10 reportQuantityUTRA_FDD_r10;
} NhuReportConfigInterRATextaddgrp_2;

typedef struct NhuReportConfigInterRATextaddgrp_3
{
 TknPres pres;
 NhuReportConfigInterRATextaddgrp_3includeLocInfo_r11 includeLocInfo_r11;
} NhuReportConfigInterRATextaddgrp_3;

typedef struct NhuReportConfigInterRAT
{
 TknPres pres;
 NhuReportConfigInterRATtriggerTyp triggerTyp;
 NhuReportConfigInterRATmaxReportCells maxReportCells;
 NhuReportInterval reportInterval;
 NhuReportConfigInterRATreportAmount reportAmount;
 NhuReportConfigInterRATextaddgrp_1 extaddgrp_1;
 NhuReportConfigInterRATextaddgrp_2 extaddgrp_2;
 NhuReportConfigInterRATextaddgrp_3 extaddgrp_3;
} NhuReportConfigInterRAT;

typedef struct NhuReportConfigToAddModreportConfig
{
 TknU8 choice;
 union {
  NhuReportConfigEUTRA reportConfigEUTRA;
  NhuReportConfigInterRAT reportConfigInterRAT;
 } val;
} NhuReportConfigToAddModreportConfig;

typedef struct NhuReportConfigToAddMod
{
 TknPres pres;
 NhuReportConfigId reportConfigId;
 NhuReportConfigToAddModreportConfig reportConfig;
} NhuReportConfigToAddMod;

typedef struct NhuReportConfigToAddModLst
{
 TknU16 noComp;
 NhuReportConfigToAddMod *member;
}NhuReportConfigToAddModLst;


typedef TknU32 NhuMeasId;

typedef struct NhuMeasIdToRemoveLst
{
 TknU16 noComp;
 NhuMeasId *member;
}NhuMeasIdToRemoveLst;

typedef struct NhuMeasIdToAddMod
{
 TknPres pres;
 NhuMeasId measId;
 NhuMeasObjectId measObjectId;
 NhuReportConfigId reportConfigId;
} NhuMeasIdToAddMod;

typedef struct NhuMeasIdToAddModLst
{
 TknU16 noComp;
 NhuMeasIdToAddMod *member;
}NhuMeasIdToAddModLst;

typedef struct NhuQuantityConfigEUTRA
{
 TknPres pres;
 NhuFilterCoefficient filterCoefficientRSRP;
 NhuFilterCoefficient filterCoefficientRSRQ;
} NhuQuantityConfigEUTRA;


typedef enum enumNhuQuantityConfigUTRAmeasQuantityUTRA_FDD
{
 NhuQuantityConfigUTRAmeasQuantityUTRA_FDDcpich_RSCPEnum,
 NhuQuantityConfigUTRAmeasQuantityUTRA_FDDcpich_EcN0Enum
} EnumNhuQuantityConfigUTRAmeasQuantityUTRA_FDD;
typedef TknU32 NhuQuantityConfigUTRAmeasQuantityUTRA_FDD;


typedef enum enumNhuQuantityConfigUTRAmeasQuantityUTRA_TDD
{
 NhuQuantityConfigUTRAmeasQuantityUTRA_TDDpccpch_RSCPEnum
} EnumNhuQuantityConfigUTRAmeasQuantityUTRA_TDD;
typedef TknU32 NhuQuantityConfigUTRAmeasQuantityUTRA_TDD;

typedef struct NhuQuantityConfigUTRA
{
 TknPres pres;
 NhuQuantityConfigUTRAmeasQuantityUTRA_FDD measQuantityUTRA_FDD;
 NhuQuantityConfigUTRAmeasQuantityUTRA_TDD measQuantityUTRA_TDD;
 NhuFilterCoefficient filterCoefficient;
} NhuQuantityConfigUTRA;


typedef enum enumNhuQuantityConfigGERANmeasQuantityGERAN
{
 NhuQuantityConfigGERANmeasQuantityGERANrssiEnum
} EnumNhuQuantityConfigGERANmeasQuantityGERAN;
typedef TknU32 NhuQuantityConfigGERANmeasQuantityGERAN;

typedef struct NhuQuantityConfigGERAN
{
 TknPres pres;
 NhuQuantityConfigGERANmeasQuantityGERAN measQuantityGERAN;
 NhuFilterCoefficient filterCoefficient;
} NhuQuantityConfigGERAN;


typedef enum enumNhuQuantityConfigCDMA2000measQuantityCDMA2000
{
 NhuQuantityConfigCDMA2000measQuantityCDMA2000pilotStrengthEnum,
 NhuQuantityConfigCDMA2000measQuantityCDMA2000pilotPnPhaseAndPilotStrengthEnum
} EnumNhuQuantityConfigCDMA2000measQuantityCDMA2000;
typedef TknU32 NhuQuantityConfigCDMA2000measQuantityCDMA2000;

typedef struct NhuQuantityConfigCDMA2000
{
 TknPres pres;
 NhuQuantityConfigCDMA2000measQuantityCDMA2000 measQuantityCDMA2000;
} NhuQuantityConfigCDMA2000;

typedef struct NhuQuantityConfigUTRA_v1020
{
 TknPres pres;
 NhuFilterCoefficient filterCoefficient2_FDD_r10;
} NhuQuantityConfigUTRA_v1020;

typedef struct NhuQuantityConfigextaddgrp_1
{
 TknPres pres;
 NhuQuantityConfigUTRA_v1020 quantityConfigUTRA_v1020;
} NhuQuantityConfigextaddgrp_1;

typedef struct NhuQuantityConfig
{
 TknPres pres;
 NhuQuantityConfigEUTRA quantityConfigEUTRA;
 NhuQuantityConfigUTRA quantityConfigUTRA;
 NhuQuantityConfigGERAN quantityConfigGERAN;
 NhuQuantityConfigCDMA2000 quantityConfigCDMA2000;
 NhuQuantityConfigextaddgrp_1 extaddgrp_1;
} NhuQuantityConfig;


typedef TknU32 NhuMeasGapConfigsetupgapOffsetgp0;


typedef TknU32 NhuMeasGapConfigsetupgapOffsetgp1;

typedef struct NhuMeasGapConfigsetupgapOffset
{
 TknU8 choice;
 union {
  NhuMeasGapConfigsetupgapOffsetgp0 gp0;
  NhuMeasGapConfigsetupgapOffsetgp1 gp1;
 } val;
} NhuMeasGapConfigsetupgapOffset;

typedef struct NhuMeasGapConfigsetup
{
 TknPres pres;
 NhuMeasGapConfigsetupgapOffset gapOffset;
} NhuMeasGapConfigsetup;

typedef struct NhuMeasGapConfig
{
 TknU8 choice;
 union {
  NhuMeasGapConfigsetup setup;
 } val;
} NhuMeasGapConfig;


typedef TknU32 NhuARFCN_ValueEUTRA_v9e0;

typedef struct NhuMeasObjectEUTRA_v9e0
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 carrierFreq_v9e0;
} NhuMeasObjectEUTRA_v9e0;

typedef struct NhuMeasObjectToAddMod_v9e0
{
 TknPres pres;
 NhuMeasObjectEUTRA_v9e0 measObjectEUTRA_v9e0;
} NhuMeasObjectToAddMod_v9e0;

typedef struct NhuMeasObjectToAddModLst_v9e0
{
 TknU16 noComp;
 NhuMeasObjectToAddMod_v9e0 *member;
}NhuMeasObjectToAddModLst_v9e0;

typedef struct NhuMeasConfigspeedStateParssetup
{
 TknPres pres;
 NhuMobilityStateParams mobilityStateParams;
 NhuSpeedStateScaleFactors timeToTrigger_SF;
} NhuMeasConfigspeedStateParssetup;

typedef struct NhuMeasConfigspeedStatePars
{
 TknU8 choice;
 union {
  NhuMeasConfigspeedStateParssetup setup;
 } val;
} NhuMeasConfigspeedStatePars;


typedef TknU8 NhuMeasConfigextaddgrp_2allowInterruptions_r11;

typedef struct NhuMeasConfigextaddgrp_1
{
 TknPres pres;
 NhuMeasObjectToAddModLst_v9e0 measObjectToAddModLst_v9e0;
} NhuMeasConfigextaddgrp_1;

typedef struct NhuMeasConfigextaddgrp_2
{
 TknPres pres;
 NhuMeasConfigextaddgrp_2allowInterruptions_r11 allowInterruptions_r11;
} NhuMeasConfigextaddgrp_2;

typedef struct NhuMeasConfig
{
 TknPres pres;
 NhuMeasObjectToRemoveLst measObjectToRemoveLst;
 NhuMeasObjectToAddModLst measObjectToAddModLst;
 NhuReportConfigToRemoveLst reportConfigToRemoveLst;
 NhuReportConfigToAddModLst reportConfigToAddModLst;
 NhuMeasIdToRemoveLst measIdToRemoveLst;
 NhuMeasIdToAddModLst measIdToAddModLst;
 NhuQuantityConfig quantityConfig;
 NhuMeasGapConfig measGapConfig;
 NhuRSRP_Range s_Measure;
 NhuPreRegistrationInfoHRPD preRegistrationInfoHRPD;
 NhuMeasConfigspeedStatePars speedStatePars;
 NhuMeasConfigextaddgrp_1 extaddgrp_1;
 NhuMeasConfigextaddgrp_2 extaddgrp_2;
} NhuMeasConfig;

typedef struct NhuCarrierFreqEUTRA
{
 TknPres pres;
 NhuARFCN_ValueEUTRA dl_CarrierFreq;
 NhuARFCN_ValueEUTRA ul_CarrierFreq;
} NhuCarrierFreqEUTRA;


typedef enum enumNhuCarrierBandwidthEUTRAdl_Bandwidth
{
 NhuCarrierBandwidthEUTRAdl_Bandwidthn6Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthn15Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthn25Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthn50Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthn75Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthn100Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare10Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare9Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare8Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare7Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare6Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare5Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare4Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare3Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare2Enum,
 NhuCarrierBandwidthEUTRAdl_Bandwidthspare1Enum
} EnumNhuCarrierBandwidthEUTRAdl_Bandwidth;
typedef TknU32 NhuCarrierBandwidthEUTRAdl_Bandwidth;


typedef enum enumNhuCarrierBandwidthEUTRAul_Bandwidth
{
 NhuCarrierBandwidthEUTRAul_Bandwidthn6Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthn15Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthn25Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthn50Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthn75Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthn100Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare10Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare9Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare8Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare7Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare6Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare5Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare4Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare3Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare2Enum,
 NhuCarrierBandwidthEUTRAul_Bandwidthspare1Enum
} EnumNhuCarrierBandwidthEUTRAul_Bandwidth;
typedef TknU32 NhuCarrierBandwidthEUTRAul_Bandwidth;

typedef struct NhuCarrierBandwidthEUTRA
{
 TknPres pres;
 NhuCarrierBandwidthEUTRAdl_Bandwidth dl_Bandwidth;
 NhuCarrierBandwidthEUTRAul_Bandwidth ul_Bandwidth;
} NhuCarrierBandwidthEUTRA;


typedef TknU32 NhuPRACH_ConfigrootSequenceIdx;

typedef struct NhuPRACH_Config
{
 TknPres pres;
 NhuPRACH_ConfigrootSequenceIdx rootSequenceIdx;
 NhuPRACH_ConfigInfo prach_ConfigInfo;
} NhuPRACH_Config;


typedef enum enumNhuAntennaInfoCmnantennaPortsCount
{
 NhuAntennaInfoCmnantennaPortsCountan1Enum,
 NhuAntennaInfoCmnantennaPortsCountan2Enum,
 NhuAntennaInfoCmnantennaPortsCountan4Enum,
 NhuAntennaInfoCmnantennaPortsCountspare1Enum
} EnumNhuAntennaInfoCmnantennaPortsCount;
typedef TknU32 NhuAntennaInfoCmnantennaPortsCount;

typedef struct NhuAntennaInfoCmn
{
 TknPres pres;
 NhuAntennaInfoCmnantennaPortsCount antennaPortsCount;
} NhuAntennaInfoCmn;

typedef struct NhuRadioResourceConfigCmnextaddgrp_1
{
 TknPres pres;
 NhuUlnkPowerCntrlCmn_v1020 uplinkPowerCntrlCmn_v1020;
} NhuRadioResourceConfigCmnextaddgrp_1;

typedef struct NhuRadioResourceConfigCmnextaddgrp_2
{
 TknPres pres;
 NhuTDD_Config_v1130 tdd_Config_v1130;
} NhuRadioResourceConfigCmnextaddgrp_2;

typedef struct NhuRadioResourceConfigCmn
{
 TknPres pres;
 NhuRACH_ConfigCmn rach_ConfigCmn;
 NhuPRACH_Config prach_Config;
 NhuPDSCH_ConfigCmn pdsch_ConfigCmn;
 NhuPUSCH_ConfigCmn pusch_ConfigCmn;
 NhuPHICH_Config phich_Config;
 NhuPUCCH_ConfigCmn pucch_ConfigCmn;
 NhuSoundingRS_UL_ConfigCmn soundingRS_UL_ConfigCmn;
 NhuUlnkPowerCntrlCmn uplinkPowerCntrlCmn;
 NhuAntennaInfoCmn antennaInfoCmn;
 NhuP_Max p_Max;
 NhuTDD_Config tdd_Config;
 NhuUL_CyclicPrefixLength ul_CyclicPrefixLength;
 NhuRadioResourceConfigCmnextaddgrp_1 extaddgrp_1;
 NhuRadioResourceConfigCmnextaddgrp_2 extaddgrp_2;
} NhuRadioResourceConfigCmn;


typedef TknU32 NhuRACH_ConfigDedicatedra_PreambleIdx;


typedef TknU32 NhuRACH_ConfigDedicatedra_PRACH_MaskIdx;

typedef struct NhuRACH_ConfigDedicated
{
 TknPres pres;
 NhuRACH_ConfigDedicatedra_PreambleIdx ra_PreambleIdx;
 NhuRACH_ConfigDedicatedra_PRACH_MaskIdx ra_PRACH_MaskIdx;
} NhuRACH_ConfigDedicated;

typedef struct NhuCarrierFreqEUTRA_v9e0
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_r9 dl_CarrierFreq_v9e0;
 NhuARFCN_ValueEUTRA_r9 ul_CarrierFreq_v9e0;
} NhuCarrierFreqEUTRA_v9e0;


typedef enum enumNhuMobilityCntrlInfot304
{
 NhuMobilityCntrlInfot304ms50Enum,
 NhuMobilityCntrlInfot304ms100Enum,
 NhuMobilityCntrlInfot304ms150Enum,
 NhuMobilityCntrlInfot304ms200Enum,
 NhuMobilityCntrlInfot304ms500Enum,
 NhuMobilityCntrlInfot304ms1000Enum,
 NhuMobilityCntrlInfot304ms2000Enum,
 NhuMobilityCntrlInfot304spare1Enum
} EnumNhuMobilityCntrlInfot304;
typedef TknU32 NhuMobilityCntrlInfot304;


typedef enum enumNhuMobilityCntrlInfoextaddgrp_2drb_ContinueROHC_r11
{
 NhuMobilityCntrlInfoextaddgrp_2drb_ContinueROHC_r11trueEnum
} EnumNhuMobilityCntrlInfoextaddgrp_2drb_ContinueROHC_r11;
typedef TknU32 NhuMobilityCntrlInfoextaddgrp_2drb_ContinueROHC_r11;

typedef struct NhuMobilityCntrlInfoextaddgrp_1
{
 TknPres pres;
 NhuCarrierFreqEUTRA_v9e0 carrierFreq_v9e0;
} NhuMobilityCntrlInfoextaddgrp_1;

typedef struct NhuMobilityCntrlInfoextaddgrp_2
{
 TknPres pres;
 NhuMobilityCntrlInfoextaddgrp_2drb_ContinueROHC_r11 drb_ContinueROHC_r11;
} NhuMobilityCntrlInfoextaddgrp_2;

typedef struct NhuMobilityCntrlInfo
{
 TknPres pres;
 NhuPhysCellId targetPhysCellId;
 NhuCarrierFreqEUTRA carrierFreq;
 NhuCarrierBandwidthEUTRA carrierBandwidth;
 NhuAdditionalSpectrumEmission additionalSpectrumEmission;
 NhuMobilityCntrlInfot304 t304;
 NhuC_RNTI newUE_Identity;
 NhuRadioResourceConfigCmn radioResourceConfigCmn;
 NhuRACH_ConfigDedicated rach_ConfigDedicated;
 NhuMobilityCntrlInfoextaddgrp_1 extaddgrp_1;
 NhuMobilityCntrlInfoextaddgrp_2 extaddgrp_2;
} NhuMobilityCntrlInfo;


typedef enum enumNhuSecAlgorithmConfigcipheringAlgorithm
{
 NhuSecAlgorithmConfigcipheringAlgorithmeea0Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmeea1Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmeea2Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmeea3_v1130Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmspare4Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmspare3Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmspare2Enum,
 NhuSecAlgorithmConfigcipheringAlgorithmspare1Enum
} EnumNhuSecAlgorithmConfigcipheringAlgorithm;
typedef TknU32 NhuSecAlgorithmConfigcipheringAlgorithm;


typedef enum enumNhuSecAlgorithmConfigintegrityProtAlgorithm
{
 NhuSecAlgorithmConfigintegrityProtAlgorithmeia0_v920Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmeia1Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmeia2Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmeia3_v1130Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmspare4Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmspare3Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmspare2Enum,
 NhuSecAlgorithmConfigintegrityProtAlgorithmspare1Enum
} EnumNhuSecAlgorithmConfigintegrityProtAlgorithm;
typedef TknU32 NhuSecAlgorithmConfigintegrityProtAlgorithm;

typedef struct NhuSecAlgorithmConfig
{
 TknPres pres;
 NhuSecAlgorithmConfigcipheringAlgorithm cipheringAlgorithm;
 NhuSecAlgorithmConfigintegrityProtAlgorithm integrityProtAlgorithm;
} NhuSecAlgorithmConfig;


typedef TknU8 NhuSecConfigHOhandoverTypintraLTEkeyChangeIndicator;

typedef struct NhuSecConfigHOhandoverTypintraLTE
{
 TknPres pres;
 NhuSecAlgorithmConfig securityAlgorithmConfig;
 NhuSecConfigHOhandoverTypintraLTEkeyChangeIndicator keyChangeIndicator;
 NhuNextHopChainingCount nextHopChainingCount;
} NhuSecConfigHOhandoverTypintraLTE;


typedef TknStrOSXL NhuSecConfigHOhandoverTypinterRATnas_SecParamToEUTRA;
typedef struct NhuSecConfigHOhandoverTypinterRAT
{
 TknPres pres;
 NhuSecAlgorithmConfig securityAlgorithmConfig;
 NhuSecConfigHOhandoverTypinterRATnas_SecParamToEUTRA nas_SecParamToEUTRA;
} NhuSecConfigHOhandoverTypinterRAT;

typedef struct NhuSecConfigHOhandoverTyp
{
 TknU8 choice;
 union {
  NhuSecConfigHOhandoverTypintraLTE intraLTE;
  NhuSecConfigHOhandoverTypinterRAT interRAT;
 } val;
} NhuSecConfigHOhandoverTyp;

typedef struct NhuSecConfigHO
{
 TknPres pres;
 NhuSecConfigHOhandoverTyp handoverTyp;
} NhuSecConfigHO;


typedef enum enumNhuReportProximityConfig_r9proximityIndEUTRA_r9
{
 NhuReportProximityConfig_r9proximityIndEUTRA_r9enabledEnum
} EnumNhuReportProximityConfig_r9proximityIndEUTRA_r9;
typedef TknU32 NhuReportProximityConfig_r9proximityIndEUTRA_r9;


typedef enum enumNhuReportProximityConfig_r9proximityIndUTRA_r9
{
 NhuReportProximityConfig_r9proximityIndUTRA_r9enabledEnum
} EnumNhuReportProximityConfig_r9proximityIndUTRA_r9;
typedef TknU32 NhuReportProximityConfig_r9proximityIndUTRA_r9;

typedef struct NhuReportProximityConfig_r9
{
 TknPres pres;
 NhuReportProximityConfig_r9proximityIndEUTRA_r9 proximityIndEUTRA_r9;
 NhuReportProximityConfig_r9proximityIndUTRA_r9 proximityIndUTRA_r9;
} NhuReportProximityConfig_r9;


typedef enum enumNhuIDC_Config_r11idc_Ind_r11
{
 NhuIDC_Config_r11idc_Ind_r11setupEnum
} EnumNhuIDC_Config_r11idc_Ind_r11;
typedef TknU32 NhuIDC_Config_r11idc_Ind_r11;


typedef enum enumNhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11
{
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11n2Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11n5Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11n10Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11n15Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11n20Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11n30Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11spare2Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11spare1Enum
} EnumNhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11;
typedef TknU32 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11;


typedef enum enumNhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11
{
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11sf200Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11sf500Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11sf1000Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11sf2000Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11spare4Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11spare3Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11spare2Enum,
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11spare1Enum
} EnumNhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11;
typedef TknU32 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11;

typedef struct NhuIDC_Config_r11autonomousDenialParams_r11
{
 TknPres pres;
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialSubfrms_r11 autonomousDenialSubfrms_r11;
 NhuIDC_Config_r11autonomousDenialParams_r11autonomousDenialValidity_r11 autonomousDenialValidity_r11;
} NhuIDC_Config_r11autonomousDenialParams_r11;

typedef struct NhuIDC_Config_r11
{
 TknPres pres;
 NhuIDC_Config_r11idc_Ind_r11 idc_Ind_r11;
 NhuIDC_Config_r11autonomousDenialParams_r11 autonomousDenialParams_r11;
} NhuIDC_Config_r11;


typedef enum enumNhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11
{
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s0Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s0dot5Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s1Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s2Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s5Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s10Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s20Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s30Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s60Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s90Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s120Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s300Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11s600Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11spare3Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11spare2Enum,
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11spare1Enum
} EnumNhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11;
typedef TknU32 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11;

typedef struct NhuPowerPrefIndConfig_r11setup
{
 TknPres pres;
 NhuPowerPrefIndConfig_r11setuppowerPrefIndTimer_r11 powerPrefIndTimer_r11;
} NhuPowerPrefIndConfig_r11setup;

typedef struct NhuPowerPrefIndConfig_r11
{
 TknU8 choice;
 union {
  NhuPowerPrefIndConfig_r11setup setup;
 } val;
} NhuPowerPrefIndConfig_r11;


typedef enum enumNhuObtainLocConfig_r11obtainLoc_r11
{
 NhuObtainLocConfig_r11obtainLoc_r11setupEnum
} EnumNhuObtainLocConfig_r11obtainLoc_r11;
typedef TknU32 NhuObtainLocConfig_r11obtainLoc_r11;

typedef struct NhuObtainLocConfig_r11
{
 TknPres pres;
 NhuObtainLocConfig_r11obtainLoc_r11 obtainLoc_r11;
} NhuObtainLocConfig_r11;

typedef struct NhuOtherConfig_r9extaddgrp_1
{
 TknPres pres;
 NhuIDC_Config_r11 idc_Config_r11;
 NhuPowerPrefIndConfig_r11 powerPrefIndConfig_r11;
 NhuObtainLocConfig_r11 obtainLocConfig_r11;
} NhuOtherConfig_r9extaddgrp_1;

typedef struct NhuOtherConfig_r9
{
 TknPres pres;
 NhuReportProximityConfig_r9 reportProximityConfig_r9;
 NhuOtherConfig_r9extaddgrp_1 extaddgrp_1;
} NhuOtherConfig_r9;


typedef TknU32 NhuSCellIdx_r10;

typedef struct NhuSCellToRlsLst_r10
{
 TknU16 noComp;
 NhuSCellIdx_r10 *member;
}NhuSCellToRlsLst_r10;


typedef TknS32 NhuUlnkPowerCntrlCmnSCell_r10p0_NominalPUSCH_r10;


typedef enum enumNhuUlnkPowerCntrlCmnSCell_r10alpha_r10
{
 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10al0Enum,
 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10al04Enum,
 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10al05Enum,
 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10al06Enum,
 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10al07Enum,
 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10al08Enum,
 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10al09Enum,
 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10al1Enum
} EnumNhuUlnkPowerCntrlCmnSCell_r10alpha_r10;
typedef TknU32 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10;

typedef struct NhuUlnkPowerCntrlCmnSCell_r10
{
 TknPres pres;
 NhuUlnkPowerCntrlCmnSCell_r10p0_NominalPUSCH_r10 p0_NominalPUSCH_r10;
 NhuUlnkPowerCntrlCmnSCell_r10alpha_r10 alpha_r10;
} NhuUlnkPowerCntrlCmnSCell_r10;


typedef TknU32 NhuPRACH_ConfigSCell_r10prach_ConfigIdx_r10;

typedef struct NhuPRACH_ConfigSCell_r10
{
 TknPres pres;
 NhuPRACH_ConfigSCell_r10prach_ConfigIdx_r10 prach_ConfigIdx_r10;
} NhuPRACH_ConfigSCell_r10;

typedef struct NhuRACH_ConfigCmnSCell_r11ra_SupervisionInfo_r11
{
 TknPres pres;
 NhuPreambleTransMax preambleTransMax_r11;
} NhuRACH_ConfigCmnSCell_r11ra_SupervisionInfo_r11;

typedef struct NhuRACH_ConfigCmnSCell_r11
{
 TknPres pres;
 NhuPowerRampingParams powerRampingParams_r11;
 NhuRACH_ConfigCmnSCell_r11ra_SupervisionInfo_r11 ra_SupervisionInfo_r11;
} NhuRACH_ConfigCmnSCell_r11;


typedef TknS32 NhuUlnkPowerCntrlCmnSCell_v1130deltaPreambleMsg3_r11;

typedef struct NhuUlnkPowerCntrlCmnSCell_v1130
{
 TknPres pres;
 NhuUlnkPowerCntrlCmnSCell_v1130deltaPreambleMsg3_r11 deltaPreambleMsg3_r11;
} NhuUlnkPowerCntrlCmnSCell_v1130;


typedef enum enumNhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10
{
 NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10n6Enum,
 NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10n15Enum,
 NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10n25Enum,
 NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10n50Enum,
 NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10n75Enum,
 NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10n100Enum
} EnumNhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10;
typedef TknU32 NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10;

typedef struct NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10
{
 TknPres pres;
 NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10dl_Bandwidth_r10 dl_Bandwidth_r10;
 NhuAntennaInfoCmn antennaInfoCmn_r10;
 NhuMBSFN_SubfrmConfigLst mbsfn_SubfrmConfigLst_r10;
 NhuPHICH_Config phich_Config_r10;
 NhuPDSCH_ConfigCmn pdsch_ConfigCmn_r10;
 NhuTDD_Config tdd_Config_r10;
} NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10;


typedef enum enumNhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10
{
 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10n6Enum,
 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10n15Enum,
 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10n25Enum,
 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10n50Enum,
 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10n75Enum,
 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10n100Enum
} EnumNhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10;
typedef TknU32 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10;

typedef struct NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10
{
 TknPres pres;
 NhuARFCN_ValueEUTRA ul_CarrierFreq_r10;
 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10ul_Bandwidth_r10 ul_Bandwidth_r10;
 NhuAdditionalSpectrumEmission additionalSpectrumEmissionSCell_r10;
} NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10;

typedef struct NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10
{
 TknPres pres;
 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10ul_FreqInfo_r10 ul_FreqInfo_r10;
 NhuP_Max p_Max_r10;
 NhuUlnkPowerCntrlCmnSCell_r10 uplinkPowerCntrlCmnSCell_r10;
 NhuSoundingRS_UL_ConfigCmn soundingRS_UL_ConfigCmn_r10;
 NhuUL_CyclicPrefixLength ul_CyclicPrefixLength_r10;
 NhuPRACH_ConfigSCell_r10 prach_ConfigSCell_r10;
 NhuPUSCH_ConfigCmn pusch_ConfigCmn_r10;
} NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10;

typedef struct NhuRadioResourceConfigCmnSCell_r10extaddgrp_1
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 ul_CarrierFreq_v1090;
} NhuRadioResourceConfigCmnSCell_r10extaddgrp_1;

typedef struct NhuRadioResourceConfigCmnSCell_r10extaddgrp_2
{
 TknPres pres;
 NhuRACH_ConfigCmnSCell_r11 rach_ConfigCmnSCell_r11;
 NhuPRACH_Config prach_ConfigSCell_r11;
 NhuTDD_Config_v1130 tdd_Config_v1130;
 NhuUlnkPowerCntrlCmnSCell_v1130 uplinkPowerCntrlCmnSCell_v1130;
} NhuRadioResourceConfigCmnSCell_r10extaddgrp_2;

typedef struct NhuRadioResourceConfigCmnSCell_r10
{
 TknPres pres;
 NhuRadioResourceConfigCmnSCell_r10nonUL_Cfg_r10 nonUL_Cfg_r10;
 NhuRadioResourceConfigCmnSCell_r10ul_Cfg_r10 ul_Cfg_r10;
 NhuRadioResourceConfigCmnSCell_r10extaddgrp_1 extaddgrp_1;
 NhuRadioResourceConfigCmnSCell_r10extaddgrp_2 extaddgrp_2;
} NhuRadioResourceConfigCmnSCell_r10;


typedef TknU32 NhuServCellIdx_r10;


typedef TknU8 NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10own_r10cif_Presence_r10;

typedef struct NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10own_r10
{
 TknPres pres;
 NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10own_r10cif_Presence_r10 cif_Presence_r10;
} NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10own_r10;


typedef TknU32 NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10other_r10pdsch_Start_r10;

typedef struct NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10other_r10
{
 TknPres pres;
 NhuServCellIdx_r10 schedulingCellId_r10;
 NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10other_r10pdsch_Start_r10 pdsch_Start_r10;
} NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10other_r10;

typedef struct NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10
{
 TknU8 choice;
 union {
  NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10own_r10 own_r10;
  NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10other_r10 other_r10;
 } val;
} NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10;

typedef struct NhuCrossCarrierSchedulingConfig_r10
{
 TknPres pres;
 NhuCrossCarrierSchedulingConfig_r10schedulingCellInfo_r10 schedulingCellInfo_r10;
} NhuCrossCarrierSchedulingConfig_r10;


typedef enum enumNhuPUSCH_ConfigDedicatedSCell_r10groupHoppingDisabled_r10
{
 NhuPUSCH_ConfigDedicatedSCell_r10groupHoppingDisabled_r10trueEnum
} EnumNhuPUSCH_ConfigDedicatedSCell_r10groupHoppingDisabled_r10;
typedef TknU32 NhuPUSCH_ConfigDedicatedSCell_r10groupHoppingDisabled_r10;


typedef enum enumNhuPUSCH_ConfigDedicatedSCell_r10dmrs_WithOCC_Activated_r10
{
 NhuPUSCH_ConfigDedicatedSCell_r10dmrs_WithOCC_Activated_r10trueEnum
} EnumNhuPUSCH_ConfigDedicatedSCell_r10dmrs_WithOCC_Activated_r10;
typedef TknU32 NhuPUSCH_ConfigDedicatedSCell_r10dmrs_WithOCC_Activated_r10;

typedef struct NhuPUSCH_ConfigDedicatedSCell_r10
{
 TknPres pres;
 NhuPUSCH_ConfigDedicatedSCell_r10groupHoppingDisabled_r10 groupHoppingDisabled_r10;
 NhuPUSCH_ConfigDedicatedSCell_r10dmrs_WithOCC_Activated_r10 dmrs_WithOCC_Activated_r10;
} NhuPUSCH_ConfigDedicatedSCell_r10;


typedef TknS32 NhuUlnkPowerCntrlDedicatedSCell_r10p0_UE_PUSCH_r10;


typedef enum enumNhuUlnkPowerCntrlDedicatedSCell_r10deltaMCS_Enabled_r10
{
 NhuUlnkPowerCntrlDedicatedSCell_r10deltaMCS_Enabled_r10en0Enum,
 NhuUlnkPowerCntrlDedicatedSCell_r10deltaMCS_Enabled_r10en1Enum
} EnumNhuUlnkPowerCntrlDedicatedSCell_r10deltaMCS_Enabled_r10;
typedef TknU32 NhuUlnkPowerCntrlDedicatedSCell_r10deltaMCS_Enabled_r10;


typedef TknU8 NhuUlnkPowerCntrlDedicatedSCell_r10accumulationEnabled_r10;


typedef TknU32 NhuUlnkPowerCntrlDedicatedSCell_r10pSRS_Offset_r10;


typedef TknU32 NhuUlnkPowerCntrlDedicatedSCell_r10pSRS_OffsetAp_r10;


typedef enum enumNhuUlnkPowerCntrlDedicatedSCell_r10pathlossReferenceLinking_r10
{
 NhuUlnkPowerCntrlDedicatedSCell_r10pathlossReferenceLinking_r10pCellEnum,
 NhuUlnkPowerCntrlDedicatedSCell_r10pathlossReferenceLinking_r10sCellEnum
} EnumNhuUlnkPowerCntrlDedicatedSCell_r10pathlossReferenceLinking_r10;
typedef TknU32 NhuUlnkPowerCntrlDedicatedSCell_r10pathlossReferenceLinking_r10;

typedef struct NhuUlnkPowerCntrlDedicatedSCell_r10
{
 TknPres pres;
 NhuUlnkPowerCntrlDedicatedSCell_r10p0_UE_PUSCH_r10 p0_UE_PUSCH_r10;
 NhuUlnkPowerCntrlDedicatedSCell_r10deltaMCS_Enabled_r10 deltaMCS_Enabled_r10;
 NhuUlnkPowerCntrlDedicatedSCell_r10accumulationEnabled_r10 accumulationEnabled_r10;
 NhuUlnkPowerCntrlDedicatedSCell_r10pSRS_Offset_r10 pSRS_Offset_r10;
 NhuUlnkPowerCntrlDedicatedSCell_r10pSRS_OffsetAp_r10 pSRS_OffsetAp_r10;
 NhuFilterCoefficient filterCoefficient_r10;
 NhuUlnkPowerCntrlDedicatedSCell_r10pathlossReferenceLinking_r10 pathlossReferenceLinking_r10;
} NhuUlnkPowerCntrlDedicatedSCell_r10;


typedef TknS32 NhuCQI_ReportConfigSCell_r10nomPDSCH_RS_EPRE_Offset_r10;


typedef enum enumNhuCQI_ReportConfigSCell_r10pmi_RI_Report_r10
{
 NhuCQI_ReportConfigSCell_r10pmi_RI_Report_r10setupEnum
} EnumNhuCQI_ReportConfigSCell_r10pmi_RI_Report_r10;
typedef TknU32 NhuCQI_ReportConfigSCell_r10pmi_RI_Report_r10;

typedef struct NhuCQI_ReportConfigSCell_r10
{
 TknPres pres;
 NhuCQI_ReportModeAperiodic cqi_ReportModeAperiodic_r10;
 NhuCQI_ReportConfigSCell_r10nomPDSCH_RS_EPRE_Offset_r10 nomPDSCH_RS_EPRE_Offset_r10;
 NhuCQI_ReportPeriodic_r10 cqi_ReportPeriodicSCell_r10;
 NhuCQI_ReportConfigSCell_r10pmi_RI_Report_r10 pmi_RI_Report_r10;
} NhuCQI_ReportConfigSCell_r10;

typedef struct NhuPhysicalConfigDedicatedSCell_r10nonUL_Cfg_r10
{
 TknPres pres;
 NhuAntennaInfoDedicated_r10 antennaInfo_r10;
 NhuCrossCarrierSchedulingConfig_r10 crossCarrierSchedulingConfig_r10;
 NhuCSI_RS_Config_r10 csi_RS_Config_r10;
 NhuPDSCH_ConfigDedicated pdsch_ConfigDedicated_r10;
} NhuPhysicalConfigDedicatedSCell_r10nonUL_Cfg_r10;

typedef struct NhuPhysicalConfigDedicatedSCell_r10ul_Cfg_r10
{
 TknPres pres;
 NhuAntennaInfoUL_r10 antennaInfoUL_r10;
 NhuPUSCH_ConfigDedicatedSCell_r10 pusch_ConfigDedicatedSCell_r10;
 NhuUlnkPowerCntrlDedicatedSCell_r10 uplinkPowerCntrlDedicatedSCell_r10;
 NhuCQI_ReportConfigSCell_r10 cqi_ReportConfigSCell_r10;
 NhuSoundingRS_UL_ConfigDedicated soundingRS_UL_ConfigDedicated_r10;
 NhuSoundingRS_UL_ConfigDedicated_v1020 soundingRS_UL_ConfigDedicated_v1020;
 NhuSoundingRS_UL_ConfigDedicatedAperiodic_r10 soundingRS_UL_ConfigDedicatedAperiodic_r10;
} NhuPhysicalConfigDedicatedSCell_r10ul_Cfg_r10;

typedef struct NhuPhysicalConfigDedicatedSCell_r10extaddgrp_1
{
 TknPres pres;
 NhuCSI_RS_ConfigNZPToRlsLst_r11 csi_RS_ConfigNZPToRlsLst_r11;
 NhuCSI_RS_ConfigNZPToAddModLst_r11 csi_RS_ConfigNZPToAddModLst_r11;
 NhuCSI_RS_ConfigZPToRlsLst_r11 csi_RS_ConfigZPToRlsLst_r11;
 NhuCSI_RS_ConfigZPToAddModLst_r11 csi_RS_ConfigZPToAddModLst_r11;
 NhuEPDCCH_Config_r11 epdcch_Config_r11;
 NhuPDSCH_ConfigDedicated_v1130 pdsch_ConfigDedicated_v1130;
 NhuCQI_ReportConfig_v1130 cqi_ReportConfig_v1130;
 NhuPUSCH_ConfigDedicated_v1130 pusch_ConfigDedicated_v1130;
 NhuUlnkPowerCntrlDedicated_v1130 uplinkPowerCntrlDedicatedSCell_v1130;
} NhuPhysicalConfigDedicatedSCell_r10extaddgrp_1;

typedef struct NhuPhysicalConfigDedicatedSCell_r10
{
 TknPres pres;
 NhuPhysicalConfigDedicatedSCell_r10nonUL_Cfg_r10 nonUL_Cfg_r10;
 NhuPhysicalConfigDedicatedSCell_r10ul_Cfg_r10 ul_Cfg_r10;
 NhuPhysicalConfigDedicatedSCell_r10extaddgrp_1 extaddgrp_1;
} NhuPhysicalConfigDedicatedSCell_r10;

typedef struct NhuMAC_MainConfigSCell_r11
{
 TknPres pres;
 NhuSTAG_Id_r11 stag_Id_r11;
} NhuMAC_MainConfigSCell_r11;

typedef struct NhuRadioResourceConfigDedicatedSCell_r10extaddgrp_1
{
 TknPres pres;
 NhuMAC_MainConfigSCell_r11 mac_MainConfigSCell_r11;
} NhuRadioResourceConfigDedicatedSCell_r10extaddgrp_1;

typedef struct NhuRadioResourceConfigDedicatedSCell_r10
{
 TknPres pres;
 NhuPhysicalConfigDedicatedSCell_r10 physicalConfigDedicatedSCell_r10;
 NhuRadioResourceConfigDedicatedSCell_r10extaddgrp_1 extaddgrp_1;
} NhuRadioResourceConfigDedicatedSCell_r10;

typedef struct NhuSCellToAddMod_r10cellIdentification_r10
{
 TknPres pres;
 NhuPhysCellId physCellId_r10;
 NhuARFCN_ValueEUTRA dl_CarrierFreq_r10;
} NhuSCellToAddMod_r10cellIdentification_r10;

typedef struct NhuSCellToAddMod_r10extaddgrp_1
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 dl_CarrierFreq_v1090;
} NhuSCellToAddMod_r10extaddgrp_1;

typedef struct NhuSCellToAddMod_r10
{
 TknPres pres;
 NhuSCellIdx_r10 sCellIdx_r10;
 NhuSCellToAddMod_r10cellIdentification_r10 cellIdentification_r10;
 NhuRadioResourceConfigCmnSCell_r10 radioResourceConfigCmnSCell_r10;
 NhuRadioResourceConfigDedicatedSCell_r10 radioResourceConfigDedicatedSCell_r10;
 NhuSCellToAddMod_r10extaddgrp_1 extaddgrp_1;
} NhuSCellToAddMod_r10;

typedef struct NhuSCellToAddModLst_r10
{
 TknU16 noComp;
 NhuSCellToAddMod_r10 *member;
}NhuSCellToAddModLst_r10;


typedef TknStrOSXL NhuRRCConRecfgn_v1130_IEssystemInfomationBlockTyp1Dedicated_r11;
typedef struct NhuRRCConRecfgn_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConRecfgn_v1130_IEsnonCriticalExtn;

typedef struct NhuRRCConRecfgn_v1130_IEs
{
 TknPres pres;
 NhuRRCConRecfgn_v1130_IEssystemInfomationBlockTyp1Dedicated_r11 systemInfomationBlockTyp1Dedicated_r11;
 NhuRRCConRecfgn_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConRecfgn_v1130_IEs;

typedef struct NhuRRCConRecfgn_v1020_IEs
{
 TknPres pres;
 NhuSCellToRlsLst_r10 sCellToRlsLst_r10;
 NhuSCellToAddModLst_r10 sCellToAddModLst_r10;
 NhuRRCConRecfgn_v1130_IEs nonCriticalExtn;
} NhuRRCConRecfgn_v1020_IEs;


typedef enum enumNhuRRCConRecfgn_v920_IEsfullConfig_r9
{
 NhuRRCConRecfgn_v920_IEsfullConfig_r9trueEnum
} EnumNhuRRCConRecfgn_v920_IEsfullConfig_r9;
typedef TknU32 NhuRRCConRecfgn_v920_IEsfullConfig_r9;

typedef struct NhuRRCConRecfgn_v920_IEs
{
 TknPres pres;
 NhuOtherConfig_r9 otherConfig_r9;
 NhuRRCConRecfgn_v920_IEsfullConfig_r9 fullConfig_r9;
 NhuRRCConRecfgn_v1020_IEs nonCriticalExtn;
} NhuRRCConRecfgn_v920_IEs;


typedef TknStrOSXL NhuRRCConRecfgn_v890_IEslateNonCriticalExtn;
typedef struct NhuRRCConRecfgn_v890_IEs
{
 TknPres pres;
 NhuRRCConRecfgn_v890_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConRecfgn_v920_IEs nonCriticalExtn;
} NhuRRCConRecfgn_v890_IEs;

typedef struct NhuRRCConRecfgn_r8_IEsdedicatedInfoNASLst
{
 TknU16 noComp;
 NhuDedicatedInfoNAS *member;
}NhuRRCConRecfgn_r8_IEsdedicatedInfoNASLst;

typedef struct NhuRRCConRecfgn_r8_IEs
{
 TknPres pres;
 NhuMeasConfig measConfig;
 NhuMobilityCntrlInfo mobilityCntrlInfo;
 NhuRRCConRecfgn_r8_IEsdedicatedInfoNASLst dedicatedInfoNASLst;
 NhuRadioResourceConfigDedicated radioResourceConfigDedicated;
 NhuSecConfigHO securityConfigHO;
 NhuRRCConRecfgn_v890_IEs nonCriticalExtn;
} NhuRRCConRecfgn_r8_IEs;

typedef struct NhuRRCConRecfgncriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRRCConRecfgn_r8_IEs rrcConRecfgn_r8;
 } val;
} NhuRRCConRecfgncriticalExtnsc1;

typedef struct NhuRRCConRecfgncriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConRecfgncriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConRecfgncriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConRecfgncriticalExtnsc1 c1;
  NhuRRCConRecfgncriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConRecfgncriticalExtns;

typedef struct NhuRRCConRecfgn
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConRecfgncriticalExtns criticalExtns;
} NhuRRCConRecfgn;


typedef enum enumNhuRlsCause
{
 NhuRlsCauseloadBalancingTAUrequiredEnum,
 NhuRlsCauseotherEnum,
 NhuRlsCausecs_FallbackHighPriority_v1020Enum,
 NhuRlsCausespare1Enum
} EnumNhuRlsCause;
typedef TknU32 NhuRlsCause;

typedef struct NhuCarrierFreqLstUTRA_TDD_r10
{
 TknU16 noComp;
 NhuARFCN_ValueUTRA *member;
}NhuCarrierFreqLstUTRA_TDD_r10;

typedef struct NhuRedirectedCarrierInfo
{
 TknU8 choice;
 union {
  NhuARFCN_ValueEUTRA eutra;
  NhuCarrierFreqsGERAN geran;
  NhuARFCN_ValueUTRA utra_FDD;
  NhuARFCN_ValueUTRA utra_TDD;
  NhuCarrierFreqCDMA2000 cdma2000_HRPD;
  NhuCarrierFreqCDMA2000 cdma2000_1xRTT;
  NhuCarrierFreqLstUTRA_TDD_r10 utra_TDD_r10;
 } val;
} NhuRedirectedCarrierInfo;

typedef struct NhuFreqPriorityEUTRA
{
 TknPres pres;
 NhuARFCN_ValueEUTRA carrierFreq;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuFreqPriorityEUTRA;

typedef struct NhuFreqPriorityLstEUTRA
{
 TknU16 noComp;
 NhuFreqPriorityEUTRA *member;
}NhuFreqPriorityLstEUTRA;

typedef struct NhuFreqsPriorityGERAN
{
 TknPres pres;
 NhuCarrierFreqsGERAN carrierFreqs;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuFreqsPriorityGERAN;

typedef struct NhuFreqsPriorityLstGERAN
{
 TknU16 noComp;
 NhuFreqsPriorityGERAN *member;
}NhuFreqsPriorityLstGERAN;

typedef struct NhuFreqPriorityUTRA_FDD
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuFreqPriorityUTRA_FDD;

typedef struct NhuFreqPriorityLstUTRA_FDD
{
 TknU16 noComp;
 NhuFreqPriorityUTRA_FDD *member;
}NhuFreqPriorityLstUTRA_FDD;

typedef struct NhuFreqPriorityUTRA_TDD
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuFreqPriorityUTRA_TDD;

typedef struct NhuFreqPriorityLstUTRA_TDD
{
 TknU16 noComp;
 NhuFreqPriorityUTRA_TDD *member;
}NhuFreqPriorityLstUTRA_TDD;

typedef struct NhuBandClassPriorityHRPD
{
 TknPres pres;
 NhuBandclassCDMA2000 bandClass;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuBandClassPriorityHRPD;

typedef struct NhuBandClassPriorityLstHRPD
{
 TknU16 noComp;
 NhuBandClassPriorityHRPD *member;
}NhuBandClassPriorityLstHRPD;

typedef struct NhuBandClassPriority1XRTT
{
 TknPres pres;
 NhuBandclassCDMA2000 bandClass;
 NhuCellReselectionPriority cellReselectionPriority;
} NhuBandClassPriority1XRTT;

typedef struct NhuBandClassPriorityLst1XRTT
{
 TknU16 noComp;
 NhuBandClassPriority1XRTT *member;
}NhuBandClassPriorityLst1XRTT;


typedef enum enumNhuIdleModeMobilityCntrlInfot320
{
 NhuIdleModeMobilityCntrlInfot320min5Enum,
 NhuIdleModeMobilityCntrlInfot320min10Enum,
 NhuIdleModeMobilityCntrlInfot320min20Enum,
 NhuIdleModeMobilityCntrlInfot320min30Enum,
 NhuIdleModeMobilityCntrlInfot320min60Enum,
 NhuIdleModeMobilityCntrlInfot320min120Enum,
 NhuIdleModeMobilityCntrlInfot320min180Enum,
 NhuIdleModeMobilityCntrlInfot320spare1Enum
} EnumNhuIdleModeMobilityCntrlInfot320;
typedef TknU32 NhuIdleModeMobilityCntrlInfot320;

typedef struct NhuIdleModeMobilityCntrlInfo
{
 TknPres pres;
 NhuFreqPriorityLstEUTRA freqPriorityLstEUTRA;
 NhuFreqsPriorityLstGERAN freqPriorityLstGERAN;
 NhuFreqPriorityLstUTRA_FDD freqPriorityLstUTRA_FDD;
 NhuFreqPriorityLstUTRA_TDD freqPriorityLstUTRA_TDD;
 NhuBandClassPriorityLstHRPD bandClassPriorityLstHRPD;
 NhuBandClassPriorityLst1XRTT bandClassPriorityLst1XRTT;
 NhuIdleModeMobilityCntrlInfot320 t320;
} NhuIdleModeMobilityCntrlInfo;

typedef struct NhuCellInfoGERAN_r9
{
 TknPres pres;
 NhuPhysCellIdGERAN physCellId_r9;
 NhuCarrierFreqGERAN carrierFreq_r9;
 NhuSysInfoLstGERAN systemInfo_r9;
} NhuCellInfoGERAN_r9;

typedef struct NhuCellInfoLstGERAN_r9
{
 TknU16 noComp;
 NhuCellInfoGERAN_r9 *member;
}NhuCellInfoLstGERAN_r9;


typedef TknStrOSXL NhuCellInfoUTRA_FDD_r9utra_BCCH_Cont_r9;
typedef struct NhuCellInfoUTRA_FDD_r9
{
 TknPres pres;
 NhuPhysCellIdUTRA_FDD physCellId_r9;
 NhuCellInfoUTRA_FDD_r9utra_BCCH_Cont_r9 utra_BCCH_Cont_r9;
} NhuCellInfoUTRA_FDD_r9;

typedef struct NhuCellInfoLstUTRA_FDD_r9
{
 TknU16 noComp;
 NhuCellInfoUTRA_FDD_r9 *member;
}NhuCellInfoLstUTRA_FDD_r9;


typedef TknStrOSXL NhuCellInfoUTRA_TDD_r9utra_BCCH_Cont_r9;
typedef struct NhuCellInfoUTRA_TDD_r9
{
 TknPres pres;
 NhuPhysCellIdUTRA_TDD physCellId_r9;
 NhuCellInfoUTRA_TDD_r9utra_BCCH_Cont_r9 utra_BCCH_Cont_r9;
} NhuCellInfoUTRA_TDD_r9;

typedef struct NhuCellInfoLstUTRA_TDD_r9
{
 TknU16 noComp;
 NhuCellInfoUTRA_TDD_r9 *member;
}NhuCellInfoLstUTRA_TDD_r9;


typedef TknStrOSXL NhuCellInfoUTRA_TDD_r10utra_BCCH_Cont_r10;
typedef struct NhuCellInfoUTRA_TDD_r10
{
 TknPres pres;
 NhuPhysCellIdUTRA_TDD physCellId_r10;
 NhuARFCN_ValueUTRA carrierFreq_r10;
 NhuCellInfoUTRA_TDD_r10utra_BCCH_Cont_r10 utra_BCCH_Cont_r10;
} NhuCellInfoUTRA_TDD_r10;

typedef struct NhuCellInfoLstUTRA_TDD_r10
{
 TknU16 noComp;
 NhuCellInfoUTRA_TDD_r10 *member;
}NhuCellInfoLstUTRA_TDD_r10;


typedef TknU32 NhuRRCConRls_v1020_IEsextendedWaitTime_r10;

typedef struct NhuRRCConRls_v1020_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConRls_v1020_IEsnonCriticalExtn;

typedef struct NhuRRCConRls_v1020_IEs
{
 TknPres pres;
 NhuRRCConRls_v1020_IEsextendedWaitTime_r10 extendedWaitTime_r10;
 NhuRRCConRls_v1020_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConRls_v1020_IEs;

typedef struct NhuRRCConRls_v920_IEscellInfoLst_r9
{
 TknU8 choice;
 union {
  NhuCellInfoLstGERAN_r9 geran_r9;
  NhuCellInfoLstUTRA_FDD_r9 utra_FDD_r9;
  NhuCellInfoLstUTRA_TDD_r9 utra_TDD_r9;
  NhuCellInfoLstUTRA_TDD_r10 utra_TDD_r10;
 } val;
} NhuRRCConRls_v920_IEscellInfoLst_r9;

typedef struct NhuRRCConRls_v920_IEs
{
 TknPres pres;
 NhuRRCConRls_v920_IEscellInfoLst_r9 cellInfoLst_r9;
 NhuRRCConRls_v1020_IEs nonCriticalExtn;
} NhuRRCConRls_v920_IEs;


typedef TknStrOSXL NhuRRCConRls_v890_IEslateNonCriticalExtn;
typedef struct NhuRRCConRls_v890_IEs
{
 TknPres pres;
 NhuRRCConRls_v890_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConRls_v920_IEs nonCriticalExtn;
} NhuRRCConRls_v890_IEs;

typedef struct NhuRRCConRls_r8_IEs
{
 TknPres pres;
 NhuRlsCause releaseCause;
 NhuRedirectedCarrierInfo redirectedCarrierInfo;
 NhuIdleModeMobilityCntrlInfo idleModeMobilityCntrlInfo;
 NhuRRCConRls_v890_IEs nonCriticalExtn;
} NhuRRCConRls_r8_IEs;

typedef struct NhuRRCConRlscriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRRCConRls_r8_IEs rrcConRls_r8;
 } val;
} NhuRRCConRlscriticalExtnsc1;

typedef struct NhuRRCConRlscriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConRlscriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConRlscriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConRlscriticalExtnsc1 c1;
  NhuRRCConRlscriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConRlscriticalExtns;

typedef struct NhuRRCConRls
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConRlscriticalExtns criticalExtns;
} NhuRRCConRls;

typedef struct NhuSecConfigSMC
{
 TknPres pres;
 NhuSecAlgorithmConfig securityAlgorithmConfig;
} NhuSecConfigSMC;


typedef TknStrOSXL NhuSecModeCmd_v8a0_IEslateNonCriticalExtn;
typedef struct NhuSecModeCmd_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSecModeCmd_v8a0_IEsnonCriticalExtn;

typedef struct NhuSecModeCmd_v8a0_IEs
{
 TknPres pres;
 NhuSecModeCmd_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuSecModeCmd_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSecModeCmd_v8a0_IEs;

typedef struct NhuSecModeCmd_r8_IEs
{
 TknPres pres;
 NhuSecConfigSMC securityConfigSMC;
 NhuSecModeCmd_v8a0_IEs nonCriticalExtn;
} NhuSecModeCmd_r8_IEs;

typedef struct NhuSecModeCmdcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuSecModeCmd_r8_IEs securityModeCmd_r8;
 } val;
} NhuSecModeCmdcriticalExtnsc1;

typedef struct NhuSecModeCmdcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuSecModeCmdcriticalExtnscriticalExtnsFuture;

typedef struct NhuSecModeCmdcriticalExtns
{
 TknU8 choice;
 union {
  NhuSecModeCmdcriticalExtnsc1 c1;
  NhuSecModeCmdcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuSecModeCmdcriticalExtns;

typedef struct NhuSecModeCmd
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuSecModeCmdcriticalExtns criticalExtns;
} NhuSecModeCmd;


typedef enum enumNhuRAT_Typ
{
 NhuRAT_TypeutraEnum,
 NhuRAT_TyputraEnum,
 NhuRAT_Typgeran_csEnum,
 NhuRAT_Typgeran_psEnum,
 NhuRAT_Typcdma2000_1XRTTEnum,
 NhuRAT_Typspare3Enum,
 NhuRAT_Typspare2Enum,
 NhuRAT_Typspare1Enum
} EnumNhuRAT_Typ;
typedef TknU32 NhuRAT_Typ;

typedef struct NhuUE_CapRqst
{
 TknU16 noComp;
 NhuRAT_Typ *member;
}NhuUE_CapRqst;

typedef struct NhuUECapEnquiry_v1180_IEsrequestedFrequencyBands_r11
{
 TknU16 noComp;
 NhuFreqBandIndicator_r11 *member;
}NhuUECapEnquiry_v1180_IEsrequestedFrequencyBands_r11;

typedef struct NhuUECapEnquiry_v1180_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUECapEnquiry_v1180_IEsnonCriticalExtn;

typedef struct NhuUECapEnquiry_v1180_IEs
{
 TknPres pres;
 NhuUECapEnquiry_v1180_IEsrequestedFrequencyBands_r11 requestedFrequencyBands_r11;
 NhuUECapEnquiry_v1180_IEsnonCriticalExtn nonCriticalExtn;
} NhuUECapEnquiry_v1180_IEs;


typedef TknStrOSXL NhuUECapEnquiry_v8a0_IEslateNonCriticalExtn;
typedef struct NhuUECapEnquiry_v8a0_IEs
{
 TknPres pres;
 NhuUECapEnquiry_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUECapEnquiry_v1180_IEs nonCriticalExtn;
} NhuUECapEnquiry_v8a0_IEs;

typedef struct NhuUECapEnquiry_r8_IEs
{
 TknPres pres;
 NhuUE_CapRqst ue_CapRqst;
 NhuUECapEnquiry_v8a0_IEs nonCriticalExtn;
} NhuUECapEnquiry_r8_IEs;

typedef struct NhuUECapEnquirycriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuUECapEnquiry_r8_IEs ueCapEnquiry_r8;
 } val;
} NhuUECapEnquirycriticalExtnsc1;

typedef struct NhuUECapEnquirycriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuUECapEnquirycriticalExtnscriticalExtnsFuture;

typedef struct NhuUECapEnquirycriticalExtns
{
 TknU8 choice;
 union {
  NhuUECapEnquirycriticalExtnsc1 c1;
  NhuUECapEnquirycriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuUECapEnquirycriticalExtns;

typedef struct NhuUECapEnquiry
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuUECapEnquirycriticalExtns criticalExtns;
} NhuUECapEnquiry;


typedef TknU32 NhuDRB_CountMSB_InfocountMSB_Ulnk;


typedef TknU32 NhuDRB_CountMSB_InfocountMSB_Dlnk;

typedef struct NhuDRB_CountMSB_Info
{
 TknPres pres;
 NhuDRB_Identity drb_Identity;
 NhuDRB_CountMSB_InfocountMSB_Ulnk countMSB_Ulnk;
 NhuDRB_CountMSB_InfocountMSB_Dlnk countMSB_Dlnk;
} NhuDRB_CountMSB_Info;

typedef struct NhuDRB_CountMSB_InfoLst
{
 TknU16 noComp;
 NhuDRB_CountMSB_Info *member;
}NhuDRB_CountMSB_InfoLst;


typedef TknStrOSXL NhuCounterCheck_v8a0_IEslateNonCriticalExtn;
typedef struct NhuCounterCheck_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuCounterCheck_v8a0_IEsnonCriticalExtn;

typedef struct NhuCounterCheck_v8a0_IEs
{
 TknPres pres;
 NhuCounterCheck_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuCounterCheck_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuCounterCheck_v8a0_IEs;

typedef struct NhuCounterCheck_r8_IEs
{
 TknPres pres;
 NhuDRB_CountMSB_InfoLst drb_CountMSB_InfoLst;
 NhuCounterCheck_v8a0_IEs nonCriticalExtn;
} NhuCounterCheck_r8_IEs;

typedef struct NhuCounterCheckcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuCounterCheck_r8_IEs counterCheck_r8;
 } val;
} NhuCounterCheckcriticalExtnsc1;

typedef struct NhuCounterCheckcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuCounterCheckcriticalExtnscriticalExtnsFuture;

typedef struct NhuCounterCheckcriticalExtns
{
 TknU8 choice;
 union {
  NhuCounterCheckcriticalExtnsc1 c1;
  NhuCounterCheckcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuCounterCheckcriticalExtns;

typedef struct NhuCounterCheck
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuCounterCheckcriticalExtns criticalExtns;
} NhuCounterCheck;


typedef enum enumNhuUEInfoRqst_v1130_IEsconnEstFailReportReq_r11
{
 NhuUEInfoRqst_v1130_IEsconnEstFailReportReq_r11trueEnum
} EnumNhuUEInfoRqst_v1130_IEsconnEstFailReportReq_r11;
typedef TknU32 NhuUEInfoRqst_v1130_IEsconnEstFailReportReq_r11;

typedef struct NhuUEInfoRqst_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUEInfoRqst_v1130_IEsnonCriticalExtn;

typedef struct NhuUEInfoRqst_v1130_IEs
{
 TknPres pres;
 NhuUEInfoRqst_v1130_IEsconnEstFailReportReq_r11 connEstFailReportReq_r11;
 NhuUEInfoRqst_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuUEInfoRqst_v1130_IEs;


typedef enum enumNhuUEInfoRqst_v1020_IEslogMeasReportReq_r10
{
 NhuUEInfoRqst_v1020_IEslogMeasReportReq_r10trueEnum
} EnumNhuUEInfoRqst_v1020_IEslogMeasReportReq_r10;
typedef TknU32 NhuUEInfoRqst_v1020_IEslogMeasReportReq_r10;

typedef struct NhuUEInfoRqst_v1020_IEs
{
 TknPres pres;
 NhuUEInfoRqst_v1020_IEslogMeasReportReq_r10 logMeasReportReq_r10;
 NhuUEInfoRqst_v1130_IEs nonCriticalExtn;
} NhuUEInfoRqst_v1020_IEs;


typedef TknStrOSXL NhuUEInfoRqst_v930_IEslateNonCriticalExtn;
typedef struct NhuUEInfoRqst_v930_IEs
{
 TknPres pres;
 NhuUEInfoRqst_v930_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUEInfoRqst_v1020_IEs nonCriticalExtn;
} NhuUEInfoRqst_v930_IEs;


typedef TknU8 NhuUEInfoRqst_r9_IEsrach_ReportReq_r9;


typedef TknU8 NhuUEInfoRqst_r9_IEsrlf_ReportReq_r9;

typedef struct NhuUEInfoRqst_r9_IEs
{
 TknPres pres;
 NhuUEInfoRqst_r9_IEsrach_ReportReq_r9 rach_ReportReq_r9;
 NhuUEInfoRqst_r9_IEsrlf_ReportReq_r9 rlf_ReportReq_r9;
 NhuUEInfoRqst_v930_IEs nonCriticalExtn;
} NhuUEInfoRqst_r9_IEs;

typedef struct NhuUEInfoRqst_r9criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuUEInfoRqst_r9_IEs ueInfoRqst_r9;
 } val;
} NhuUEInfoRqst_r9criticalExtnsc1;

typedef struct NhuUEInfoRqst_r9criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuUEInfoRqst_r9criticalExtnscriticalExtnsFuture;

typedef struct NhuUEInfoRqst_r9criticalExtns
{
 TknU8 choice;
 union {
  NhuUEInfoRqst_r9criticalExtnsc1 c1;
  NhuUEInfoRqst_r9criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuUEInfoRqst_r9criticalExtns;

typedef struct NhuUEInfoRqst_r9
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuUEInfoRqst_r9criticalExtns criticalExtns;
} NhuUEInfoRqst_r9;


typedef TknStrOSXL NhuTraceReference_r10traceId_r10;
typedef struct NhuTraceReference_r10
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity_r10;
 NhuTraceReference_r10traceId_r10 traceId_r10;
} NhuTraceReference_r10;


typedef TknStrBSXL NhuAbsoluteTimeInfo_r10;
typedef struct NhuCellGlobalIdEUTRA
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuCellIdentity cellIdentity;
} NhuCellGlobalIdEUTRA;

typedef struct NhuCellGlobalIdLst_r10
{
 TknU16 noComp;
 NhuCellGlobalIdEUTRA *member;
}NhuCellGlobalIdLst_r10;

typedef struct NhuTrackingAreaCodeLst_r10
{
 TknU16 noComp;
 NhuTrackingAreaCode *member;
}NhuTrackingAreaCodeLst_r10;

typedef struct NhuAreaCfg_r10
{
 TknU8 choice;
 union {
  NhuCellGlobalIdLst_r10 cellGlobalIdLst_r10;
  NhuTrackingAreaCodeLst_r10 trackingAreaCodeLst_r10;
 } val;
} NhuAreaCfg_r10;


typedef enum enumNhuLoggingDuration_r10
{
 NhuLoggingDuration_r10min10Enum,
 NhuLoggingDuration_r10min20Enum,
 NhuLoggingDuration_r10min40Enum,
 NhuLoggingDuration_r10min60Enum,
 NhuLoggingDuration_r10min90Enum,
 NhuLoggingDuration_r10min120Enum,
 NhuLoggingDuration_r10spare2Enum,
 NhuLoggingDuration_r10spare1Enum
} EnumNhuLoggingDuration_r10;
typedef TknU32 NhuLoggingDuration_r10;


typedef enum enumNhuLoggingInterval_r10
{
 NhuLoggingInterval_r10ms1280Enum,
 NhuLoggingInterval_r10ms2560Enum,
 NhuLoggingInterval_r10ms5120Enum,
 NhuLoggingInterval_r10ms10240Enum,
 NhuLoggingInterval_r10ms20480Enum,
 NhuLoggingInterval_r10ms30720Enum,
 NhuLoggingInterval_r10ms40960Enum,
 NhuLoggingInterval_r10ms61440Enum
} EnumNhuLoggingInterval_r10;
typedef TknU32 NhuLoggingInterval_r10;

typedef struct NhuPLMN_IdentityLst3_r11
{
 TknU16 noComp;
 NhuPLMN_Identity *member;
}NhuPLMN_IdentityLst3_r11;

typedef struct NhuTrackingAreaCodeLst_v1130plmn_Identity_perTAC_Lst_r11
{
 TknU16 noComp;
 NhuPLMN_Identity *member;
}NhuTrackingAreaCodeLst_v1130plmn_Identity_perTAC_Lst_r11;

typedef struct NhuTrackingAreaCodeLst_v1130
{
 TknPres pres;
 NhuTrackingAreaCodeLst_v1130plmn_Identity_perTAC_Lst_r11 plmn_Identity_perTAC_Lst_r11;
} NhuTrackingAreaCodeLst_v1130;

typedef struct NhuAreaCfg_v1130
{
 TknPres pres;
 NhuTrackingAreaCodeLst_v1130 trackingAreaCodeLst_v1130;
} NhuAreaCfg_v1130;

typedef struct NhuLoggedMeasurementCfg_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuLoggedMeasurementCfg_v1130_IEsnonCriticalExtn;

typedef struct NhuLoggedMeasurementCfg_v1130_IEs
{
 TknPres pres;
 NhuPLMN_IdentityLst3_r11 plmn_IdentityLst_r11;
 NhuAreaCfg_v1130 areaCfg_v1130;
 NhuLoggedMeasurementCfg_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuLoggedMeasurementCfg_v1130_IEs;


typedef TknStrOSXL NhuLoggedMeasurementCfg_v1080_IEslateNonCriticalExtn_r10;
typedef struct NhuLoggedMeasurementCfg_v1080_IEs
{
 TknPres pres;
 NhuLoggedMeasurementCfg_v1080_IEslateNonCriticalExtn_r10 lateNonCriticalExtn_r10;
 NhuLoggedMeasurementCfg_v1130_IEs nonCriticalExtn;
} NhuLoggedMeasurementCfg_v1080_IEs;


typedef TknStrOSXL NhuLoggedMeasurementCfg_r10_IEstraceRecordingSessionRef_r10;

typedef TknStrOSXL NhuLoggedMeasurementCfg_r10_IEstce_Id_r10;
typedef struct NhuLoggedMeasurementCfg_r10_IEs
{
 TknPres pres;
 NhuTraceReference_r10 traceReference_r10;
 NhuLoggedMeasurementCfg_r10_IEstraceRecordingSessionRef_r10 traceRecordingSessionRef_r10;
 NhuLoggedMeasurementCfg_r10_IEstce_Id_r10 tce_Id_r10;
 NhuAbsoluteTimeInfo_r10 absoluteTimeInfo_r10;
 NhuAreaCfg_r10 areaCfg_r10;
 NhuLoggingDuration_r10 loggingDuration_r10;
 NhuLoggingInterval_r10 loggingInterval_r10;
 NhuLoggedMeasurementCfg_v1080_IEs nonCriticalExtn;
} NhuLoggedMeasurementCfg_r10_IEs;

typedef struct NhuLoggedMeasurementCfg_r10criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuLoggedMeasurementCfg_r10_IEs loggedMeasurementCfg_r10;
 } val;
} NhuLoggedMeasurementCfg_r10criticalExtnsc1;

typedef struct NhuLoggedMeasurementCfg_r10criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuLoggedMeasurementCfg_r10criticalExtnscriticalExtnsFuture;

typedef struct NhuLoggedMeasurementCfg_r10criticalExtns
{
 TknU8 choice;
 union {
  NhuLoggedMeasurementCfg_r10criticalExtnsc1 c1;
  NhuLoggedMeasurementCfg_r10criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuLoggedMeasurementCfg_r10criticalExtns;

typedef struct NhuLoggedMeasurementCfg_r10
{
 TknPres pres;
 NhuLoggedMeasurementCfg_r10criticalExtns criticalExtns;
} NhuLoggedMeasurementCfg_r10;


typedef TknStrOSXL NhuRN_SysInfo_r10systemInfoBlockTyp1_r10;
typedef struct NhuRN_SysInfo_r10
{
 TknPres pres;
 NhuRN_SysInfo_r10systemInfoBlockTyp1_r10 systemInfoBlockTyp1_r10;
 NhuSysInfoBlockTyp2 systemInfoBlockTyp2_r10;
} NhuRN_SysInfo_r10;


typedef TknStrBSXL NhuRN_SubfrmConfig_r10subframeConfigPattern_r10subframeConfigPatternFDD_r10;

typedef TknU32 NhuRN_SubfrmConfig_r10subframeConfigPattern_r10subframeConfigPatternTDD_r10;

typedef struct NhuRN_SubfrmConfig_r10subframeConfigPattern_r10
{
 TknU8 choice;
 union {
  NhuRN_SubfrmConfig_r10subframeConfigPattern_r10subframeConfigPatternFDD_r10 subframeConfigPatternFDD_r10;
  NhuRN_SubfrmConfig_r10subframeConfigPattern_r10subframeConfigPatternTDD_r10 subframeConfigPatternTDD_r10;
 } val;
} NhuRN_SubfrmConfig_r10subframeConfigPattern_r10;


typedef enum enumNhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10
{
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10type0Enum,
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10type1Enum,
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10type2LocalizedEnum,
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10type2DistributedEnum,
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10spare4Enum,
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10spare3Enum,
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10spare2Enum,
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10spare1Enum
} EnumNhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10;
typedef TknU32 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10;


typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb6_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb15_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb25_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb50_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb75_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb100_r10;
typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10
{
 TknU8 choice;
 union {
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb6_r10 nrb6_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb15_r10 nrb15_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb25_r10 nrb25_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb50_r10 nrb50_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb75_r10 nrb75_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10nrb100_r10 nrb100_r10;
 } val;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10;


typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb6_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb15_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb25_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb50_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb75_r10;

typedef TknStrBSXL NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb100_r10;
typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10
{
 TknU8 choice;
 union {
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb6_r10 nrb6_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb15_r10 nrb15_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb25_r10 nrb25_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb50_r10 nrb50_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb75_r10 nrb75_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10nrb100_r10 nrb100_r10;
 } val;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10;

typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10
{
 TknU8 choice;
 union {
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type01_r10 type01_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10type2_r10 type2_r10;
 } val;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10;


typedef enum enumNhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10interleaving_r10
{
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10interleaving_r10crsEnum
} EnumNhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10interleaving_r10;
typedef TknU32 NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10interleaving_r10;


typedef enum enumNhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10noInterleaving_r10
{
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10noInterleaving_r10crsEnum,
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10noInterleaving_r10dmrsEnum
} EnumNhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10noInterleaving_r10;
typedef TknU32 NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10noInterleaving_r10;

typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10
{
 TknU8 choice;
 union {
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10interleaving_r10 interleaving_r10;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10noInterleaving_r10 noInterleaving_r10;
 } val;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10;


typedef TknU32 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pdsch_Start_r10;

typedef TknU32 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddchannelSelectionMultiplexingBundlingn1PUCCH_AN_Lst_r10Member;

typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddchannelSelectionMultiplexingBundlingn1PUCCH_AN_Lst_r10
{
 TknU16 noComp;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddchannelSelectionMultiplexingBundlingn1PUCCH_AN_Lst_r10Member *member;
}NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddchannelSelectionMultiplexingBundlingn1PUCCH_AN_Lst_r10;

typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddchannelSelectionMultiplexingBundling
{
 TknPres pres;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddchannelSelectionMultiplexingBundlingn1PUCCH_AN_Lst_r10 n1PUCCH_AN_Lst_r10;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddchannelSelectionMultiplexingBundling;


typedef TknU32 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddfallbackForFormat3n1PUCCH_AN_P0_r10;


typedef TknU32 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddfallbackForFormat3n1PUCCH_AN_P1_r10;

typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddfallbackForFormat3
{
 TknPres pres;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddfallbackForFormat3n1PUCCH_AN_P0_r10 n1PUCCH_AN_P0_r10;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddfallbackForFormat3n1PUCCH_AN_P1_r10 n1PUCCH_AN_P1_r10;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddfallbackForFormat3;

typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tdd
{
 TknU8 choice;
 union {
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddchannelSelectionMultiplexingBundling channelSelectionMultiplexingBundling;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tddfallbackForFormat3 fallbackForFormat3;
 } val;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tdd;


typedef TknU32 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10fddn1PUCCH_AN_P0_r10;


typedef TknU32 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10fddn1PUCCH_AN_P1_r10;

typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10fdd
{
 TknPres pres;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10fddn1PUCCH_AN_P0_r10 n1PUCCH_AN_P0_r10;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10fddn1PUCCH_AN_P1_r10 n1PUCCH_AN_P1_r10;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10fdd;

typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10
{
 TknU8 choice;
 union {
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10tdd tdd;
  NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10fdd fdd;
 } val;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10;

typedef struct NhuRN_SubfrmConfig_r10rpdcch_Config_r10
{
 TknPres pres;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceAllocnTyp_r10 resourceAllocnTyp_r10;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10resourceBlockAssignment_r10 resourceBlockAssignment_r10;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10demodulationRS_r10 demodulationRS_r10;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pdsch_Start_r10 pdsch_Start_r10;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10pucch_Config_r10 pucch_Config_r10;
} NhuRN_SubfrmConfig_r10rpdcch_Config_r10;

typedef struct NhuRN_SubfrmConfig_r10
{
 TknPres pres;
 NhuRN_SubfrmConfig_r10subframeConfigPattern_r10 subframeConfigPattern_r10;
 NhuRN_SubfrmConfig_r10rpdcch_Config_r10 rpdcch_Config_r10;
} NhuRN_SubfrmConfig_r10;


typedef TknStrOSXL NhuRNRecfgn_r10_IEslateNonCriticalExtn;
typedef struct NhuRNRecfgn_r10_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRNRecfgn_r10_IEsnonCriticalExtn;

typedef struct NhuRNRecfgn_r10_IEs
{
 TknPres pres;
 NhuRN_SysInfo_r10 rn_SysInfo_r10;
 NhuRN_SubfrmConfig_r10 rn_SubfrmConfig_r10;
 NhuRNRecfgn_r10_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRNRecfgn_r10_IEsnonCriticalExtn nonCriticalExtn;
} NhuRNRecfgn_r10_IEs;

typedef struct NhuRNRecfgn_r10criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRNRecfgn_r10_IEs rnRecfgn_r10;
 } val;
} NhuRNRecfgn_r10criticalExtnsc1;

typedef struct NhuRNRecfgn_r10criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRNRecfgn_r10criticalExtnscriticalExtnsFuture;

typedef struct NhuRNRecfgn_r10criticalExtns
{
 TknU8 choice;
 union {
  NhuRNRecfgn_r10criticalExtnsc1 c1;
  NhuRNRecfgn_r10criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRNRecfgn_r10criticalExtns;

typedef struct NhuRNRecfgn_r10
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRNRecfgn_r10criticalExtns criticalExtns;
} NhuRNRecfgn_r10;

typedef struct NhuDL_DCCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuCSFBParamsRspCDMA2000 csfbParamsRspCDMA2000;
  NhuDLInfoTfr dlInfoTfr;
  NhuHovrFromEUTRAPrepRqst handoverFromEUTRAPrepRqst;
  NhuMobilityFromEUTRACmd mobilityFromEUTRACmd;
  NhuRRCConRecfgn rrcConRecfgn;
  NhuRRCConRls rrcConRls;
  NhuSecModeCmd securityModeCmd;
  NhuUECapEnquiry ueCapEnquiry;
  NhuCounterCheck counterCheck;
  NhuUEInfoRqst_r9 ueInfoRqst_r9;
  NhuLoggedMeasurementCfg_r10 loggedMeasurementCfg_r10;
  NhuRNRecfgn_r10 rnRecfgn_r10;
 } val;
} NhuDL_DCCH_MsgTypc1;

typedef struct NhuDL_DCCH_MsgTypmessageClassExtn
{
 TknPres pres;
} NhuDL_DCCH_MsgTypmessageClassExtn;

typedef struct NhuDL_DCCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuDL_DCCH_MsgTypc1 c1;
  NhuDL_DCCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuDL_DCCH_MsgTyp;

typedef struct NhuDL_DCCH_Msg
{
 TknPres pres;
 NhuDL_DCCH_MsgTyp message;
} NhuDL_DCCH_Msg;


typedef TknStrBSXL NhuShortMAC_I;
typedef struct NhuReestabUE_Identity
{
 TknPres pres;
 NhuC_RNTI c_RNTI;
 NhuPhysCellId physCellId;
 NhuShortMAC_I shortMAC_I;
} NhuReestabUE_Identity;


typedef enum enumNhuReestbCause
{
 NhuReestbCausereconfigurationFailEnum,
 NhuReestbCausehandoverFailEnum,
 NhuReestbCauseotherFailEnum,
 NhuReestbCausespare1Enum
} EnumNhuReestbCause;
typedef TknU32 NhuReestbCause;


typedef TknStrBSXL NhuRRCConReestbRqst_r8_IEsspare;
typedef struct NhuRRCConReestbRqst_r8_IEs
{
 TknPres pres;
 NhuReestabUE_Identity ue_Identity;
 NhuReestbCause reestablishmentCause;
 NhuRRCConReestbRqst_r8_IEsspare spare;
} NhuRRCConReestbRqst_r8_IEs;

typedef struct NhuRRCConReestbRqstcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConReestbRqstcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConReestbRqstcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConReestbRqst_r8_IEs rrcConReestbRqst_r8;
  NhuRRCConReestbRqstcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConReestbRqstcriticalExtns;

typedef struct NhuRRCConReestbRqst
{
 TknPres pres;
 NhuRRCConReestbRqstcriticalExtns criticalExtns;
} NhuRRCConReestbRqst;


typedef TknStrBSXL NhuInitUE_IdentityrandomValue;
typedef struct NhuInitUE_Identity
{
 TknU8 choice;
 union {
  NhuS_TMSI s_TMSI;
  NhuInitUE_IdentityrandomValue randomValue;
 } val;
} NhuInitUE_Identity;


typedef enum enumNhuEstablishmentCause
{
 NhuEstablishmentCauseemergencyEnum,
 NhuEstablishmentCausehighPriorityAccessEnum,
 NhuEstablishmentCausemt_AccessEnum,
 NhuEstablishmentCausemo_SignallingEnum,
 NhuEstablishmentCausemo_DataEnum,
 NhuEstablishmentCausedelayTolerantAccess_v1020Enum,
 NhuEstablishmentCausespare2Enum,
 NhuEstablishmentCausespare1Enum
} EnumNhuEstablishmentCause;
typedef TknU32 NhuEstablishmentCause;


typedef TknStrBSXL NhuRRCConRqst_r8_IEsspare;
typedef struct NhuRRCConRqst_r8_IEs
{
 TknPres pres;
 NhuInitUE_Identity ue_Identity;
 NhuEstablishmentCause establishmentCause;
 NhuRRCConRqst_r8_IEsspare spare;
} NhuRRCConRqst_r8_IEs;

typedef struct NhuRRCConRqstcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConRqstcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConRqstcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConRqst_r8_IEs rrcConRqst_r8;
  NhuRRCConRqstcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConRqstcriticalExtns;

typedef struct NhuRRCConRqst
{
 TknPres pres;
 NhuRRCConRqstcriticalExtns criticalExtns;
} NhuRRCConRqst;

typedef struct NhuUL_CCCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuRRCConReestbRqst rrcConReestbRqst;
  NhuRRCConRqst rrcConRqst;
 } val;
} NhuUL_CCCH_MsgTypc1;

typedef struct NhuUL_CCCH_MsgTypmessageClassExtn
{
 TknPres pres;
} NhuUL_CCCH_MsgTypmessageClassExtn;

typedef struct NhuUL_CCCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuUL_CCCH_MsgTypc1 c1;
  NhuUL_CCCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuUL_CCCH_MsgTyp;

typedef struct NhuUL_CCCH_Msg
{
 TknPres pres;
 NhuUL_CCCH_MsgTyp message;
} NhuUL_CCCH_Msg;


typedef TknStrOSXL NhuCSFBParamsRqstCDMA2000_v8a0_IEslateNonCriticalExtn;
typedef struct NhuCSFBParamsRqstCDMA2000_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuCSFBParamsRqstCDMA2000_v8a0_IEsnonCriticalExtn;

typedef struct NhuCSFBParamsRqstCDMA2000_v8a0_IEs
{
 TknPres pres;
 NhuCSFBParamsRqstCDMA2000_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuCSFBParamsRqstCDMA2000_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuCSFBParamsRqstCDMA2000_v8a0_IEs;

typedef struct NhuCSFBParamsRqstCDMA2000_r8_IEs
{
 TknPres pres;
 NhuCSFBParamsRqstCDMA2000_v8a0_IEs nonCriticalExtn;
} NhuCSFBParamsRqstCDMA2000_r8_IEs;

typedef struct NhuCSFBParamsRqstCDMA2000criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuCSFBParamsRqstCDMA2000criticalExtnscriticalExtnsFuture;

typedef struct NhuCSFBParamsRqstCDMA2000criticalExtns
{
 TknU8 choice;
 union {
  NhuCSFBParamsRqstCDMA2000_r8_IEs csfbParamsRqstCDMA2000_r8;
  NhuCSFBParamsRqstCDMA2000criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuCSFBParamsRqstCDMA2000criticalExtns;

typedef struct NhuCSFBParamsRqstCDMA2000
{
 TknPres pres;
 NhuCSFBParamsRqstCDMA2000criticalExtns criticalExtns;
} NhuCSFBParamsRqstCDMA2000;

typedef struct NhuPLMN_IdentityLst2
{
 TknU16 noComp;
 NhuPLMN_Identity *member;
}NhuPLMN_IdentityLst2;


typedef enum enumNhuAdditionalSI_Info_r9csg_MemberStatus_r9
{
 NhuAdditionalSI_Info_r9csg_MemberStatus_r9memberEnum
} EnumNhuAdditionalSI_Info_r9csg_MemberStatus_r9;
typedef TknU32 NhuAdditionalSI_Info_r9csg_MemberStatus_r9;

typedef struct NhuAdditionalSI_Info_r9
{
 TknPres pres;
 NhuAdditionalSI_Info_r9csg_MemberStatus_r9 csg_MemberStatus_r9;
 NhuCSG_Identity csg_Identity_r9;
} NhuAdditionalSI_Info_r9;

typedef struct NhuMeasResultEUTRAcgi_Info
{
 TknPres pres;
 NhuCellGlobalIdEUTRA cellGlobalId;
 NhuTrackingAreaCode trackingAreaCode;
 NhuPLMN_IdentityLst2 plmn_IdentityLst;
} NhuMeasResultEUTRAcgi_Info;

typedef struct NhuMeasResultEUTRAmeasResultextaddgrp_1
{
 TknPres pres;
 NhuAdditionalSI_Info_r9 additionalSI_Info_r9;
} NhuMeasResultEUTRAmeasResultextaddgrp_1;

typedef struct NhuMeasResultEUTRAmeasResult
{
 TknPres pres;
 NhuRSRP_Range rsrpResult;
 NhuRSRQ_Range rsrqResult;
 NhuMeasResultEUTRAmeasResultextaddgrp_1 extaddgrp_1;
} NhuMeasResultEUTRAmeasResult;

typedef struct NhuMeasResultEUTRA
{
 TknPres pres;
 NhuPhysCellId physCellId;
 NhuMeasResultEUTRAcgi_Info cgi_Info;
 NhuMeasResultEUTRAmeasResult measResult;
} NhuMeasResultEUTRA;

typedef struct NhuMeasResultLstEUTRA
{
 TknU16 noComp;
 NhuMeasResultEUTRA *member;
}NhuMeasResultLstEUTRA;


typedef TknStrBSXL NhuCellGlobalIdUTRAcellIdentity;
typedef struct NhuCellGlobalIdUTRA
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuCellGlobalIdUTRAcellIdentity cellIdentity;
} NhuCellGlobalIdUTRA;

typedef struct NhuMeasResultUTRAphysCellId
{
 TknU8 choice;
 union {
  NhuPhysCellIdUTRA_FDD fdd;
  NhuPhysCellIdUTRA_TDD tdd;
 } val;
} NhuMeasResultUTRAphysCellId;


typedef TknStrBSXL NhuMeasResultUTRAcgi_InfolocationAreaCode;

typedef TknStrBSXL NhuMeasResultUTRAcgi_InforoutingAreaCode;
typedef struct NhuMeasResultUTRAcgi_Info
{
 TknPres pres;
 NhuCellGlobalIdUTRA cellGlobalId;
 NhuMeasResultUTRAcgi_InfolocationAreaCode locationAreaCode;
 NhuMeasResultUTRAcgi_InforoutingAreaCode routingAreaCode;
 NhuPLMN_IdentityLst2 plmn_IdentityLst;
} NhuMeasResultUTRAcgi_Info;


typedef TknS32 NhuMeasResultUTRAmeasResultutra_RSCP;


typedef TknU32 NhuMeasResultUTRAmeasResultutra_EcN0;

typedef struct NhuMeasResultUTRAmeasResultextaddgrp_1
{
 TknPres pres;
 NhuAdditionalSI_Info_r9 additionalSI_Info_r9;
} NhuMeasResultUTRAmeasResultextaddgrp_1;

typedef struct NhuMeasResultUTRAmeasResult
{
 TknPres pres;
 NhuMeasResultUTRAmeasResultutra_RSCP utra_RSCP;
 NhuMeasResultUTRAmeasResultutra_EcN0 utra_EcN0;
 NhuMeasResultUTRAmeasResultextaddgrp_1 extaddgrp_1;
} NhuMeasResultUTRAmeasResult;

typedef struct NhuMeasResultUTRA
{
 TknPres pres;
 NhuMeasResultUTRAphysCellId physCellId;
 NhuMeasResultUTRAcgi_Info cgi_Info;
 NhuMeasResultUTRAmeasResult measResult;
} NhuMeasResultUTRA;

typedef struct NhuMeasResultLstUTRA
{
 TknU16 noComp;
 NhuMeasResultUTRA *member;
}NhuMeasResultLstUTRA;


typedef TknStrBSXL NhuCellGlobalIdGERANlocationAreaCode;

typedef TknStrBSXL NhuCellGlobalIdGERANcellIdentity;
typedef struct NhuCellGlobalIdGERAN
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuCellGlobalIdGERANlocationAreaCode locationAreaCode;
 NhuCellGlobalIdGERANcellIdentity cellIdentity;
} NhuCellGlobalIdGERAN;


typedef TknStrBSXL NhuMeasResultGERANcgi_InforoutingAreaCode;
typedef struct NhuMeasResultGERANcgi_Info
{
 TknPres pres;
 NhuCellGlobalIdGERAN cellGlobalId;
 NhuMeasResultGERANcgi_InforoutingAreaCode routingAreaCode;
} NhuMeasResultGERANcgi_Info;


typedef TknU32 NhuMeasResultGERANmeasResultrssi;

typedef struct NhuMeasResultGERANmeasResult
{
 TknPres pres;
 NhuMeasResultGERANmeasResultrssi rssi;
} NhuMeasResultGERANmeasResult;

typedef struct NhuMeasResultGERAN
{
 TknPres pres;
 NhuCarrierFreqGERAN carrierFreq;
 NhuPhysCellIdGERAN physCellId;
 NhuMeasResultGERANcgi_Info cgi_Info;
 NhuMeasResultGERANmeasResult measResult;
} NhuMeasResultGERAN;

typedef struct NhuMeasResultLstGERAN
{
 TknU16 noComp;
 NhuMeasResultGERAN *member;
}NhuMeasResultLstGERAN;


typedef TknStrBSXL NhuCellGlobalIdCDMA2000cellGlobalId1XRTT;

typedef TknStrBSXL NhuCellGlobalIdCDMA2000cellGlobalIdHRPD;
typedef struct NhuCellGlobalIdCDMA2000
{
 TknU8 choice;
 union {
  NhuCellGlobalIdCDMA2000cellGlobalId1XRTT cellGlobalId1XRTT;
  NhuCellGlobalIdCDMA2000cellGlobalIdHRPD cellGlobalIdHRPD;
 } val;
} NhuCellGlobalIdCDMA2000;


typedef TknU32 NhuMeasResultCDMA2000measResultpilotPnPhase;


typedef TknU32 NhuMeasResultCDMA2000measResultpilotStrength;

typedef struct NhuMeasResultCDMA2000measResult
{
 TknPres pres;
 NhuMeasResultCDMA2000measResultpilotPnPhase pilotPnPhase;
 NhuMeasResultCDMA2000measResultpilotStrength pilotStrength;
} NhuMeasResultCDMA2000measResult;

typedef struct NhuMeasResultCDMA2000
{
 TknPres pres;
 NhuPhysCellIdCDMA2000 physCellId;
 NhuCellGlobalIdCDMA2000 cgi_Info;
 NhuMeasResultCDMA2000measResult measResult;
} NhuMeasResultCDMA2000;

typedef struct NhuMeasResultLstCDMA2000
{
 TknU16 noComp;
 NhuMeasResultCDMA2000 *member;
}NhuMeasResultLstCDMA2000;


typedef TknU8 NhuMeasResultsCDMA2000preRegistrationStatusHRPD;

typedef struct NhuMeasResultsCDMA2000
{
 TknPres pres;
 NhuMeasResultsCDMA2000preRegistrationStatusHRPD preRegistrationStatusHRPD;
 NhuMeasResultLstCDMA2000 measResultLstCDMA2000;
} NhuMeasResultsCDMA2000;


typedef TknU32 NhuMeasResultForECID_r9ue_RxTxTimeDiffResult_r9;


typedef TknStrBSXL NhuMeasResultForECID_r9currentSFN_r9;
typedef struct NhuMeasResultForECID_r9
{
 TknPres pres;
 NhuMeasResultForECID_r9ue_RxTxTimeDiffResult_r9 ue_RxTxTimeDiffResult_r9;
 NhuMeasResultForECID_r9currentSFN_r9 currentSFN_r9;
} NhuMeasResultForECID_r9;


typedef TknStrOSXL NhuLocInfo_r10locationCoordinates_r10ellipsoid_Point_r10;

typedef TknStrOSXL NhuLocInfo_r10locationCoordinates_r10ellipsoidPointWithAltitude_r10;

typedef TknStrOSXL NhuLocInfo_r10locationCoordinates_r10ellipsoidPointWithUncertaintyCircle_r11;

typedef TknStrOSXL NhuLocInfo_r10locationCoordinates_r10ellipsoidPointWithUncertaintyEllipse_r11;

typedef TknStrOSXL NhuLocInfo_r10locationCoordinates_r10ellipsoidPointWithAltitudeAndUncertaintyEllipsoid_r11;

typedef TknStrOSXL NhuLocInfo_r10locationCoordinates_r10ellipsoidArc_r11;

typedef TknStrOSXL NhuLocInfo_r10locationCoordinates_r10polygon_r11;
typedef struct NhuLocInfo_r10locationCoordinates_r10
{
 TknU8 choice;
 union {
  NhuLocInfo_r10locationCoordinates_r10ellipsoid_Point_r10 ellipsoid_Point_r10;
  NhuLocInfo_r10locationCoordinates_r10ellipsoidPointWithAltitude_r10 ellipsoidPointWithAltitude_r10;
  NhuLocInfo_r10locationCoordinates_r10ellipsoidPointWithUncertaintyCircle_r11 ellipsoidPointWithUncertaintyCircle_r11;
  NhuLocInfo_r10locationCoordinates_r10ellipsoidPointWithUncertaintyEllipse_r11 ellipsoidPointWithUncertaintyEllipse_r11;
  NhuLocInfo_r10locationCoordinates_r10ellipsoidPointWithAltitudeAndUncertaintyEllipsoid_r11 ellipsoidPointWithAltitudeAndUncertaintyEllipsoid_r11;
  NhuLocInfo_r10locationCoordinates_r10ellipsoidArc_r11 ellipsoidArc_r11;
  NhuLocInfo_r10locationCoordinates_r10polygon_r11 polygon_r11;
 } val;
} NhuLocInfo_r10locationCoordinates_r10;


typedef TknStrOSXL NhuLocInfo_r10horizontalVelocity_r10;

typedef TknStrOSXL NhuLocInfo_r10gnss_TOD_msec_r10;
typedef struct NhuLocInfo_r10
{
 TknPres pres;
 NhuLocInfo_r10locationCoordinates_r10 locationCoordinates_r10;
 NhuLocInfo_r10horizontalVelocity_r10 horizontalVelocity_r10;
 NhuLocInfo_r10gnss_TOD_msec_r10 gnss_TOD_msec_r10;
} NhuLocInfo_r10;

typedef struct NhuMeasResultServFreq_r10measResultSCell_r10
{
 TknPres pres;
 NhuRSRP_Range rsrpResultSCell_r10;
 NhuRSRQ_Range rsrqResultSCell_r10;
} NhuMeasResultServFreq_r10measResultSCell_r10;

typedef struct NhuMeasResultServFreq_r10measResultBestNeighCell_r10
{
 TknPres pres;
 NhuPhysCellId physCellId_r10;
 NhuRSRP_Range rsrpResultNCell_r10;
 NhuRSRQ_Range rsrqResultNCell_r10;
} NhuMeasResultServFreq_r10measResultBestNeighCell_r10;

typedef struct NhuMeasResultServFreq_r10
{
 TknPres pres;
 NhuServCellIdx_r10 servFreqId_r10;
 NhuMeasResultServFreq_r10measResultSCell_r10 measResultSCell_r10;
 NhuMeasResultServFreq_r10measResultBestNeighCell_r10 measResultBestNeighCell_r10;
} NhuMeasResultServFreq_r10;

typedef struct NhuMeasResultServFreqLst_r10
{
 TknU16 noComp;
 NhuMeasResultServFreq_r10 *member;
}NhuMeasResultServFreqLst_r10;

typedef struct NhuMeasResultsmeasResultPCell
{
 TknPres pres;
 NhuRSRP_Range rsrpResult;
 NhuRSRQ_Range rsrqResult;
} NhuMeasResultsmeasResultPCell;

typedef struct NhuMeasResultsmeasResultNeighCells
{
 TknU8 choice;
 union {
  NhuMeasResultLstEUTRA measResultLstEUTRA;
  NhuMeasResultLstUTRA measResultLstUTRA;
  NhuMeasResultLstGERAN measResultLstGERAN;
  NhuMeasResultsCDMA2000 measResultsCDMA2000;
 } val;
} NhuMeasResultsmeasResultNeighCells;

typedef struct NhuMeasResultsextaddgrp_1
{
 TknPres pres;
 NhuMeasResultForECID_r9 measResultForECID_r9;
} NhuMeasResultsextaddgrp_1;

typedef struct NhuMeasResultsextaddgrp_2
{
 TknPres pres;
 NhuLocInfo_r10 locationInfo_r10;
 NhuMeasResultServFreqLst_r10 measResultServFreqLst_r10;
} NhuMeasResultsextaddgrp_2;

typedef struct NhuMeasResults
{
 TknPres pres;
 NhuMeasId measId;
 NhuMeasResultsmeasResultPCell measResultPCell;
 NhuMeasResultsmeasResultNeighCells measResultNeighCells;
 NhuMeasResultsextaddgrp_1 extaddgrp_1;
 NhuMeasResultsextaddgrp_2 extaddgrp_2;
} NhuMeasResults;


typedef TknStrOSXL NhuMeasurementReport_v8a0_IEslateNonCriticalExtn;
typedef struct NhuMeasurementReport_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuMeasurementReport_v8a0_IEsnonCriticalExtn;

typedef struct NhuMeasurementReport_v8a0_IEs
{
 TknPres pres;
 NhuMeasurementReport_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuMeasurementReport_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuMeasurementReport_v8a0_IEs;

typedef struct NhuMeasurementReport_r8_IEs
{
 TknPres pres;
 NhuMeasResults measResults;
 NhuMeasurementReport_v8a0_IEs nonCriticalExtn;
} NhuMeasurementReport_r8_IEs;

typedef struct NhuMeasurementReportcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuMeasurementReport_r8_IEs measurementReport_r8;
 } val;
} NhuMeasurementReportcriticalExtnsc1;

typedef struct NhuMeasurementReportcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuMeasurementReportcriticalExtnscriticalExtnsFuture;

typedef struct NhuMeasurementReportcriticalExtns
{
 TknU8 choice;
 union {
  NhuMeasurementReportcriticalExtnsc1 c1;
  NhuMeasurementReportcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuMeasurementReportcriticalExtns;

typedef struct NhuMeasurementReport
{
 TknPres pres;
 NhuMeasurementReportcriticalExtns criticalExtns;
} NhuMeasurementReport;


typedef enum enumNhuRRCConRecfgnCompl_v1130_IEsconnEstFailInfoAvailable_r11
{
 NhuRRCConRecfgnCompl_v1130_IEsconnEstFailInfoAvailable_r11trueEnum
} EnumNhuRRCConRecfgnCompl_v1130_IEsconnEstFailInfoAvailable_r11;
typedef TknU32 NhuRRCConRecfgnCompl_v1130_IEsconnEstFailInfoAvailable_r11;

typedef struct NhuRRCConRecfgnCompl_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConRecfgnCompl_v1130_IEsnonCriticalExtn;

typedef struct NhuRRCConRecfgnCompl_v1130_IEs
{
 TknPres pres;
 NhuRRCConRecfgnCompl_v1130_IEsconnEstFailInfoAvailable_r11 connEstFailInfoAvailable_r11;
 NhuRRCConRecfgnCompl_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConRecfgnCompl_v1130_IEs;


typedef enum enumNhuRRCConRecfgnCompl_v1020_IEsrlf_InfoAvailable_r10
{
 NhuRRCConRecfgnCompl_v1020_IEsrlf_InfoAvailable_r10trueEnum
} EnumNhuRRCConRecfgnCompl_v1020_IEsrlf_InfoAvailable_r10;
typedef TknU32 NhuRRCConRecfgnCompl_v1020_IEsrlf_InfoAvailable_r10;


typedef enum enumNhuRRCConRecfgnCompl_v1020_IEslogMeasAvailable_r10
{
 NhuRRCConRecfgnCompl_v1020_IEslogMeasAvailable_r10trueEnum
} EnumNhuRRCConRecfgnCompl_v1020_IEslogMeasAvailable_r10;
typedef TknU32 NhuRRCConRecfgnCompl_v1020_IEslogMeasAvailable_r10;

typedef struct NhuRRCConRecfgnCompl_v1020_IEs
{
 TknPres pres;
 NhuRRCConRecfgnCompl_v1020_IEsrlf_InfoAvailable_r10 rlf_InfoAvailable_r10;
 NhuRRCConRecfgnCompl_v1020_IEslogMeasAvailable_r10 logMeasAvailable_r10;
 NhuRRCConRecfgnCompl_v1130_IEs nonCriticalExtn;
} NhuRRCConRecfgnCompl_v1020_IEs;


typedef TknStrOSXL NhuRRCConRecfgnCompl_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConRecfgnCompl_v8a0_IEs
{
 TknPres pres;
 NhuRRCConRecfgnCompl_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConRecfgnCompl_v1020_IEs nonCriticalExtn;
} NhuRRCConRecfgnCompl_v8a0_IEs;

typedef struct NhuRRCConRecfgnCompl_r8_IEs
{
 TknPres pres;
 NhuRRCConRecfgnCompl_v8a0_IEs nonCriticalExtn;
} NhuRRCConRecfgnCompl_r8_IEs;

typedef struct NhuRRCConRecfgnComplcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConRecfgnComplcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConRecfgnComplcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConRecfgnCompl_r8_IEs rrcConRecfgnCompl_r8;
  NhuRRCConRecfgnComplcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConRecfgnComplcriticalExtns;

typedef struct NhuRRCConRecfgnCompl
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConRecfgnComplcriticalExtns criticalExtns;
} NhuRRCConRecfgnCompl;


typedef enum enumNhuRRCConReestbCompl_v1130_IEsconnEstFailInfoAvailable_r11
{
 NhuRRCConReestbCompl_v1130_IEsconnEstFailInfoAvailable_r11trueEnum
} EnumNhuRRCConReestbCompl_v1130_IEsconnEstFailInfoAvailable_r11;
typedef TknU32 NhuRRCConReestbCompl_v1130_IEsconnEstFailInfoAvailable_r11;

typedef struct NhuRRCConReestbCompl_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConReestbCompl_v1130_IEsnonCriticalExtn;

typedef struct NhuRRCConReestbCompl_v1130_IEs
{
 TknPres pres;
 NhuRRCConReestbCompl_v1130_IEsconnEstFailInfoAvailable_r11 connEstFailInfoAvailable_r11;
 NhuRRCConReestbCompl_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConReestbCompl_v1130_IEs;


typedef enum enumNhuRRCConReestbCompl_v1020_IEslogMeasAvailable_r10
{
 NhuRRCConReestbCompl_v1020_IEslogMeasAvailable_r10trueEnum
} EnumNhuRRCConReestbCompl_v1020_IEslogMeasAvailable_r10;
typedef TknU32 NhuRRCConReestbCompl_v1020_IEslogMeasAvailable_r10;

typedef struct NhuRRCConReestbCompl_v1020_IEs
{
 TknPres pres;
 NhuRRCConReestbCompl_v1020_IEslogMeasAvailable_r10 logMeasAvailable_r10;
 NhuRRCConReestbCompl_v1130_IEs nonCriticalExtn;
} NhuRRCConReestbCompl_v1020_IEs;


typedef TknStrOSXL NhuRRCConReestbCompl_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConReestbCompl_v8a0_IEs
{
 TknPres pres;
 NhuRRCConReestbCompl_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConReestbCompl_v1020_IEs nonCriticalExtn;
} NhuRRCConReestbCompl_v8a0_IEs;


typedef enum enumNhuRRCConReestbCompl_v920_IEsrlf_InfoAvailable_r9
{
 NhuRRCConReestbCompl_v920_IEsrlf_InfoAvailable_r9trueEnum
} EnumNhuRRCConReestbCompl_v920_IEsrlf_InfoAvailable_r9;
typedef TknU32 NhuRRCConReestbCompl_v920_IEsrlf_InfoAvailable_r9;

typedef struct NhuRRCConReestbCompl_v920_IEs
{
 TknPres pres;
 NhuRRCConReestbCompl_v920_IEsrlf_InfoAvailable_r9 rlf_InfoAvailable_r9;
 NhuRRCConReestbCompl_v8a0_IEs nonCriticalExtn;
} NhuRRCConReestbCompl_v920_IEs;

typedef struct NhuRRCConReestbCompl_r8_IEs
{
 TknPres pres;
 NhuRRCConReestbCompl_v920_IEs nonCriticalExtn;
} NhuRRCConReestbCompl_r8_IEs;

typedef struct NhuRRCConReestbComplcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConReestbComplcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConReestbComplcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConReestbCompl_r8_IEs rrcConReestbCompl_r8;
  NhuRRCConReestbComplcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConReestbComplcriticalExtns;

typedef struct NhuRRCConReestbCompl
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConReestbComplcriticalExtns criticalExtns;
} NhuRRCConReestbCompl;


typedef TknStrBSXL NhuRegisteredMMEmmegi;
typedef struct NhuRegisteredMME
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuRegisteredMMEmmegi mmegi;
 NhuMMEC mmec;
} NhuRegisteredMME;


typedef enum enumNhuRRCConSetupCompl_v1130_IEsconnEstFailInfoAvailable_r11
{
 NhuRRCConSetupCompl_v1130_IEsconnEstFailInfoAvailable_r11trueEnum
} EnumNhuRRCConSetupCompl_v1130_IEsconnEstFailInfoAvailable_r11;
typedef TknU32 NhuRRCConSetupCompl_v1130_IEsconnEstFailInfoAvailable_r11;

typedef struct NhuRRCConSetupCompl_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConSetupCompl_v1130_IEsnonCriticalExtn;

typedef struct NhuRRCConSetupCompl_v1130_IEs
{
 TknPres pres;
 NhuRRCConSetupCompl_v1130_IEsconnEstFailInfoAvailable_r11 connEstFailInfoAvailable_r11;
 NhuRRCConSetupCompl_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConSetupCompl_v1130_IEs;


typedef enum enumNhuRRCConSetupCompl_v1020_IEsgummei_Typ_r10
{
 NhuRRCConSetupCompl_v1020_IEsgummei_Typ_r10nativeEnum,
 NhuRRCConSetupCompl_v1020_IEsgummei_Typ_r10mappedEnum
} EnumNhuRRCConSetupCompl_v1020_IEsgummei_Typ_r10;
typedef TknU32 NhuRRCConSetupCompl_v1020_IEsgummei_Typ_r10;


typedef enum enumNhuRRCConSetupCompl_v1020_IEsrlf_InfoAvailable_r10
{
 NhuRRCConSetupCompl_v1020_IEsrlf_InfoAvailable_r10trueEnum
} EnumNhuRRCConSetupCompl_v1020_IEsrlf_InfoAvailable_r10;
typedef TknU32 NhuRRCConSetupCompl_v1020_IEsrlf_InfoAvailable_r10;


typedef enum enumNhuRRCConSetupCompl_v1020_IEslogMeasAvailable_r10
{
 NhuRRCConSetupCompl_v1020_IEslogMeasAvailable_r10trueEnum
} EnumNhuRRCConSetupCompl_v1020_IEslogMeasAvailable_r10;
typedef TknU32 NhuRRCConSetupCompl_v1020_IEslogMeasAvailable_r10;


typedef enum enumNhuRRCConSetupCompl_v1020_IEsrn_SubfrmConfigReq_r10
{
 NhuRRCConSetupCompl_v1020_IEsrn_SubfrmConfigReq_r10requiredEnum,
 NhuRRCConSetupCompl_v1020_IEsrn_SubfrmConfigReq_r10notReqdEnum
} EnumNhuRRCConSetupCompl_v1020_IEsrn_SubfrmConfigReq_r10;
typedef TknU32 NhuRRCConSetupCompl_v1020_IEsrn_SubfrmConfigReq_r10;

typedef struct NhuRRCConSetupCompl_v1020_IEs
{
 TknPres pres;
 NhuRRCConSetupCompl_v1020_IEsgummei_Typ_r10 gummei_Typ_r10;
 NhuRRCConSetupCompl_v1020_IEsrlf_InfoAvailable_r10 rlf_InfoAvailable_r10;
 NhuRRCConSetupCompl_v1020_IEslogMeasAvailable_r10 logMeasAvailable_r10;
 NhuRRCConSetupCompl_v1020_IEsrn_SubfrmConfigReq_r10 rn_SubfrmConfigReq_r10;
 NhuRRCConSetupCompl_v1130_IEs nonCriticalExtn;
} NhuRRCConSetupCompl_v1020_IEs;


typedef TknStrOSXL NhuRRCConSetupCompl_v8a0_IEslateNonCriticalExtn;
typedef struct NhuRRCConSetupCompl_v8a0_IEs
{
 TknPres pres;
 NhuRRCConSetupCompl_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRRCConSetupCompl_v1020_IEs nonCriticalExtn;
} NhuRRCConSetupCompl_v8a0_IEs;


typedef TknU32 NhuRRCConSetupCompl_r8_IEsselectedPLMN_Identity;

typedef struct NhuRRCConSetupCompl_r8_IEs
{
 TknPres pres;
 NhuRRCConSetupCompl_r8_IEsselectedPLMN_Identity selectedPLMN_Identity;
 NhuRegisteredMME registeredMME;
 NhuDedicatedInfoNAS dedicatedInfoNAS;
 NhuRRCConSetupCompl_v8a0_IEs nonCriticalExtn;
} NhuRRCConSetupCompl_r8_IEs;

typedef struct NhuRRCConSetupComplcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRRCConSetupCompl_r8_IEs rrcConSetupCompl_r8;
 } val;
} NhuRRCConSetupComplcriticalExtnsc1;

typedef struct NhuRRCConSetupComplcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRRCConSetupComplcriticalExtnscriticalExtnsFuture;

typedef struct NhuRRCConSetupComplcriticalExtns
{
 TknU8 choice;
 union {
  NhuRRCConSetupComplcriticalExtnsc1 c1;
  NhuRRCConSetupComplcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRRCConSetupComplcriticalExtns;

typedef struct NhuRRCConSetupCompl
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRRCConSetupComplcriticalExtns criticalExtns;
} NhuRRCConSetupCompl;


typedef TknStrOSXL NhuSecModeCompl_v8a0_IEslateNonCriticalExtn;
typedef struct NhuSecModeCompl_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSecModeCompl_v8a0_IEsnonCriticalExtn;

typedef struct NhuSecModeCompl_v8a0_IEs
{
 TknPres pres;
 NhuSecModeCompl_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuSecModeCompl_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSecModeCompl_v8a0_IEs;

typedef struct NhuSecModeCompl_r8_IEs
{
 TknPres pres;
 NhuSecModeCompl_v8a0_IEs nonCriticalExtn;
} NhuSecModeCompl_r8_IEs;

typedef struct NhuSecModeComplcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuSecModeComplcriticalExtnscriticalExtnsFuture;

typedef struct NhuSecModeComplcriticalExtns
{
 TknU8 choice;
 union {
  NhuSecModeCompl_r8_IEs securityModeCompl_r8;
  NhuSecModeComplcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuSecModeComplcriticalExtns;

typedef struct NhuSecModeCompl
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuSecModeComplcriticalExtns criticalExtns;
} NhuSecModeCompl;


typedef TknStrOSXL NhuSecModeFail_v8a0_IEslateNonCriticalExtn;
typedef struct NhuSecModeFail_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSecModeFail_v8a0_IEsnonCriticalExtn;

typedef struct NhuSecModeFail_v8a0_IEs
{
 TknPres pres;
 NhuSecModeFail_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuSecModeFail_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSecModeFail_v8a0_IEs;

typedef struct NhuSecModeFail_r8_IEs
{
 TknPres pres;
 NhuSecModeFail_v8a0_IEs nonCriticalExtn;
} NhuSecModeFail_r8_IEs;

typedef struct NhuSecModeFailcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuSecModeFailcriticalExtnscriticalExtnsFuture;

typedef struct NhuSecModeFailcriticalExtns
{
 TknU8 choice;
 union {
  NhuSecModeFail_r8_IEs securityModeFail_r8;
  NhuSecModeFailcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuSecModeFailcriticalExtns;

typedef struct NhuSecModeFail
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuSecModeFailcriticalExtns criticalExtns;
} NhuSecModeFail;


typedef TknStrOSXL NhuUE_CapRAT_ContueCapRAT_Cont;
typedef struct NhuUE_CapRAT_Cont
{
 TknPres pres;
 NhuRAT_Typ rat_Typ;
 NhuUE_CapRAT_ContueCapRAT_Cont ueCapRAT_Cont;
} NhuUE_CapRAT_Cont;

typedef struct NhuUE_CapRAT_ContLst
{
 TknU16 noComp;
 NhuUE_CapRAT_Cont *member;
}NhuUE_CapRAT_ContLst;


typedef TknStrOSXL NhuUECapInfo_v8a0_IEslateNonCriticalExtn;
typedef struct NhuUECapInfo_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUECapInfo_v8a0_IEsnonCriticalExtn;

typedef struct NhuUECapInfo_v8a0_IEs
{
 TknPres pres;
 NhuUECapInfo_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUECapInfo_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuUECapInfo_v8a0_IEs;

typedef struct NhuUECapInfo_r8_IEs
{
 TknPres pres;
 NhuUE_CapRAT_ContLst ue_CapRAT_ContLst;
 NhuUECapInfo_v8a0_IEs nonCriticalExtn;
} NhuUECapInfo_r8_IEs;

typedef struct NhuUECapInfocriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuUECapInfo_r8_IEs ueCapInfo_r8;
 } val;
} NhuUECapInfocriticalExtnsc1;

typedef struct NhuUECapInfocriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuUECapInfocriticalExtnscriticalExtnsFuture;

typedef struct NhuUECapInfocriticalExtns
{
 TknU8 choice;
 union {
  NhuUECapInfocriticalExtnsc1 c1;
  NhuUECapInfocriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuUECapInfocriticalExtns;

typedef struct NhuUECapInfo
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuUECapInfocriticalExtns criticalExtns;
} NhuUECapInfo;


typedef TknStrOSXL NhuULHovrPrepTfr_v8a0_IEslateNonCriticalExtn;
typedef struct NhuULHovrPrepTfr_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuULHovrPrepTfr_v8a0_IEsnonCriticalExtn;

typedef struct NhuULHovrPrepTfr_v8a0_IEs
{
 TknPres pres;
 NhuULHovrPrepTfr_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuULHovrPrepTfr_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuULHovrPrepTfr_v8a0_IEs;


typedef TknStrBSXL NhuULHovrPrepTfr_r8_IEsmeid;
typedef struct NhuULHovrPrepTfr_r8_IEs
{
 TknPres pres;
 NhuCDMA2000_Typ cdma2000_Typ;
 NhuULHovrPrepTfr_r8_IEsmeid meid;
 NhuDedicatedInfoCDMA2000 dedicatedInfo;
 NhuULHovrPrepTfr_v8a0_IEs nonCriticalExtn;
} NhuULHovrPrepTfr_r8_IEs;

typedef struct NhuULHovrPrepTfrcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuULHovrPrepTfr_r8_IEs ulHovrPrepTfr_r8;
 } val;
} NhuULHovrPrepTfrcriticalExtnsc1;

typedef struct NhuULHovrPrepTfrcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuULHovrPrepTfrcriticalExtnscriticalExtnsFuture;

typedef struct NhuULHovrPrepTfrcriticalExtns
{
 TknU8 choice;
 union {
  NhuULHovrPrepTfrcriticalExtnsc1 c1;
  NhuULHovrPrepTfrcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuULHovrPrepTfrcriticalExtns;

typedef struct NhuULHovrPrepTfr
{
 TknPres pres;
 NhuULHovrPrepTfrcriticalExtns criticalExtns;
} NhuULHovrPrepTfr;


typedef TknStrOSXL NhuULInfoTfr_v8a0_IEslateNonCriticalExtn;
typedef struct NhuULInfoTfr_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuULInfoTfr_v8a0_IEsnonCriticalExtn;

typedef struct NhuULInfoTfr_v8a0_IEs
{
 TknPres pres;
 NhuULInfoTfr_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuULInfoTfr_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuULInfoTfr_v8a0_IEs;

typedef struct NhuULInfoTfr_r8_IEsdedicatedInfoTyp
{
 TknU8 choice;
 union {
  NhuDedicatedInfoNAS dedicatedInfoNAS;
  NhuDedicatedInfoCDMA2000 dedicatedInfoCDMA2000_1XRTT;
  NhuDedicatedInfoCDMA2000 dedicatedInfoCDMA2000_HRPD;
 } val;
} NhuULInfoTfr_r8_IEsdedicatedInfoTyp;

typedef struct NhuULInfoTfr_r8_IEs
{
 TknPres pres;
 NhuULInfoTfr_r8_IEsdedicatedInfoTyp dedicatedInfoTyp;
 NhuULInfoTfr_v8a0_IEs nonCriticalExtn;
} NhuULInfoTfr_r8_IEs;

typedef struct NhuULInfoTfrcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuULInfoTfr_r8_IEs ulInfoTfr_r8;
 } val;
} NhuULInfoTfrcriticalExtnsc1;

typedef struct NhuULInfoTfrcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuULInfoTfrcriticalExtnscriticalExtnsFuture;

typedef struct NhuULInfoTfrcriticalExtns
{
 TknU8 choice;
 union {
  NhuULInfoTfrcriticalExtnsc1 c1;
  NhuULInfoTfrcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuULInfoTfrcriticalExtns;

typedef struct NhuULInfoTfr
{
 TknPres pres;
 NhuULInfoTfrcriticalExtns criticalExtns;
} NhuULInfoTfr;


typedef TknU32 NhuDRB_CountInfocount_Ulnk;


typedef TknU32 NhuDRB_CountInfocount_Dlnk;

typedef struct NhuDRB_CountInfo
{
 TknPres pres;
 NhuDRB_Identity drb_Identity;
 NhuDRB_CountInfocount_Ulnk count_Ulnk;
 NhuDRB_CountInfocount_Dlnk count_Dlnk;
} NhuDRB_CountInfo;

typedef struct NhuDRB_CountInfoLst
{
 TknU16 noComp;
 NhuDRB_CountInfo *member;
}NhuDRB_CountInfoLst;


typedef TknStrOSXL NhuCounterCheckRsp_v8a0_IEslateNonCriticalExtn;
typedef struct NhuCounterCheckRsp_v8a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuCounterCheckRsp_v8a0_IEsnonCriticalExtn;

typedef struct NhuCounterCheckRsp_v8a0_IEs
{
 TknPres pres;
 NhuCounterCheckRsp_v8a0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuCounterCheckRsp_v8a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuCounterCheckRsp_v8a0_IEs;

typedef struct NhuCounterCheckRsp_r8_IEs
{
 TknPres pres;
 NhuDRB_CountInfoLst drb_CountInfoLst;
 NhuCounterCheckRsp_v8a0_IEs nonCriticalExtn;
} NhuCounterCheckRsp_r8_IEs;

typedef struct NhuCounterCheckRspcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuCounterCheckRspcriticalExtnscriticalExtnsFuture;

typedef struct NhuCounterCheckRspcriticalExtns
{
 TknU8 choice;
 union {
  NhuCounterCheckRsp_r8_IEs counterCheckRsp_r8;
  NhuCounterCheckRspcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuCounterCheckRspcriticalExtns;

typedef struct NhuCounterCheckRsp
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuCounterCheckRspcriticalExtns criticalExtns;
} NhuCounterCheckRsp;


typedef TknU32 NhuNumberOfPreamblesSent_r11;

typedef struct NhuMeasResult2EUTRA_r9
{
 TknPres pres;
 NhuARFCN_ValueEUTRA carrierFreq_r9;
 NhuMeasResultLstEUTRA measResultLst_r9;
} NhuMeasResult2EUTRA_r9;

typedef struct NhuMeasResultLst2EUTRA_r9
{
 TknU16 noComp;
 NhuMeasResult2EUTRA_r9 *member;
}NhuMeasResultLst2EUTRA_r9;

typedef struct NhuMeasResult2UTRA_r9
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq_r9;
 NhuMeasResultLstUTRA measResultLst_r9;
} NhuMeasResult2UTRA_r9;

typedef struct NhuMeasResultLst2UTRA_r9
{
 TknU16 noComp;
 NhuMeasResult2UTRA_r9 *member;
}NhuMeasResultLst2UTRA_r9;

typedef struct NhuMeasResult2CDMA2000_r9
{
 TknPres pres;
 NhuCarrierFreqCDMA2000 carrierFreq_r9;
 NhuMeasResultsCDMA2000 measResultLst_r9;
} NhuMeasResult2CDMA2000_r9;

typedef struct NhuMeasResultLst2CDMA2000_r9
{
 TknU16 noComp;
 NhuMeasResult2CDMA2000_r9 *member;
}NhuMeasResultLst2CDMA2000_r9;


typedef TknU32 NhuTimeSinceFail_r11;

typedef struct NhuRLF_Report_r9measResultLastServCell_r9
{
 TknPres pres;
 NhuRSRP_Range rsrpResult_r9;
 NhuRSRQ_Range rsrqResult_r9;
} NhuRLF_Report_r9measResultLastServCell_r9;

typedef struct NhuRLF_Report_r9measResultNeighCells_r9
{
 TknPres pres;
 NhuMeasResultLst2EUTRA_r9 measResultLstEUTRA_r9;
 NhuMeasResultLst2UTRA_r9 measResultLstUTRA_r9;
 NhuMeasResultLstGERAN measResultLstGERAN_r9;
 NhuMeasResultLst2CDMA2000_r9 measResultsCDMA2000_r9;
} NhuRLF_Report_r9measResultNeighCells_r9;

typedef struct NhuRLF_Report_r9extaddgrp_1failedPCellId_r10pci_arfcn_r10
{
 TknPres pres;
 NhuPhysCellId physCellId_r10;
 NhuARFCN_ValueEUTRA carrierFreq_r10;
} NhuRLF_Report_r9extaddgrp_1failedPCellId_r10pci_arfcn_r10;

typedef struct NhuRLF_Report_r9extaddgrp_1failedPCellId_r10
{
 TknU8 choice;
 union {
  NhuCellGlobalIdEUTRA cellGlobalId_r10;
  NhuRLF_Report_r9extaddgrp_1failedPCellId_r10pci_arfcn_r10 pci_arfcn_r10;
 } val;
} NhuRLF_Report_r9extaddgrp_1failedPCellId_r10;


typedef TknU32 NhuRLF_Report_r9extaddgrp_1timeConnFail_r10;


typedef enum enumNhuRLF_Report_r9extaddgrp_1connectionFailTyp_r10
{
 NhuRLF_Report_r9extaddgrp_1connectionFailTyp_r10rlfEnum,
 NhuRLF_Report_r9extaddgrp_1connectionFailTyp_r10hofEnum
} EnumNhuRLF_Report_r9extaddgrp_1connectionFailTyp_r10;
typedef TknU32 NhuRLF_Report_r9extaddgrp_1connectionFailTyp_r10;

typedef struct NhuRLF_Report_r9extaddgrp_2failedPCellId_v1090
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 carrierFreq_v1090;
} NhuRLF_Report_r9extaddgrp_2failedPCellId_v1090;


typedef enum enumNhuRLF_Report_r9extaddgrp_3basicFields_r11rlf_Cause_r11
{
 NhuRLF_Report_r9extaddgrp_3basicFields_r11rlf_Cause_r11t310_ExpiryEnum,
 NhuRLF_Report_r9extaddgrp_3basicFields_r11rlf_Cause_r11randomAccessProblemEnum,
 NhuRLF_Report_r9extaddgrp_3basicFields_r11rlf_Cause_r11rlc_MaxNumRetxEnum,
 NhuRLF_Report_r9extaddgrp_3basicFields_r11rlf_Cause_r11spare1Enum
} EnumNhuRLF_Report_r9extaddgrp_3basicFields_r11rlf_Cause_r11;
typedef TknU32 NhuRLF_Report_r9extaddgrp_3basicFields_r11rlf_Cause_r11;

typedef struct NhuRLF_Report_r9extaddgrp_3basicFields_r11
{
 TknPres pres;
 NhuC_RNTI c_RNTI_r11;
 NhuRLF_Report_r9extaddgrp_3basicFields_r11rlf_Cause_r11 rlf_Cause_r11;
 NhuTimeSinceFail_r11 timeSinceFail_r11;
} NhuRLF_Report_r9extaddgrp_3basicFields_r11;

typedef struct NhuRLF_Report_r9extaddgrp_3previousUTRA_CellId_r11physCellId_r11
{
 TknU8 choice;
 union {
  NhuPhysCellIdUTRA_FDD fdd_r11;
  NhuPhysCellIdUTRA_TDD tdd_r11;
 } val;
} NhuRLF_Report_r9extaddgrp_3previousUTRA_CellId_r11physCellId_r11;

typedef struct NhuRLF_Report_r9extaddgrp_3previousUTRA_CellId_r11
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq_r11;
 NhuRLF_Report_r9extaddgrp_3previousUTRA_CellId_r11physCellId_r11 physCellId_r11;
 NhuCellGlobalIdUTRA cellGlobalId_r11;
} NhuRLF_Report_r9extaddgrp_3previousUTRA_CellId_r11;

typedef struct NhuRLF_Report_r9extaddgrp_3selectedUTRA_CellId_r11physCellId_r11
{
 TknU8 choice;
 union {
  NhuPhysCellIdUTRA_FDD fdd_r11;
  NhuPhysCellIdUTRA_TDD tdd_r11;
 } val;
} NhuRLF_Report_r9extaddgrp_3selectedUTRA_CellId_r11physCellId_r11;

typedef struct NhuRLF_Report_r9extaddgrp_3selectedUTRA_CellId_r11
{
 TknPres pres;
 NhuARFCN_ValueUTRA carrierFreq_r11;
 NhuRLF_Report_r9extaddgrp_3selectedUTRA_CellId_r11physCellId_r11 physCellId_r11;
} NhuRLF_Report_r9extaddgrp_3selectedUTRA_CellId_r11;

typedef struct NhuRLF_Report_r9extaddgrp_1
{
 TknPres pres;
 NhuLocInfo_r10 locationInfo_r10;
 NhuRLF_Report_r9extaddgrp_1failedPCellId_r10 failedPCellId_r10;
 NhuCellGlobalIdEUTRA reestablishmentCellId_r10;
 NhuRLF_Report_r9extaddgrp_1timeConnFail_r10 timeConnFail_r10;
 NhuRLF_Report_r9extaddgrp_1connectionFailTyp_r10 connectionFailTyp_r10;
 NhuCellGlobalIdEUTRA previousPCellId_r10;
} NhuRLF_Report_r9extaddgrp_1;

typedef struct NhuRLF_Report_r9extaddgrp_2
{
 TknPres pres;
 NhuRLF_Report_r9extaddgrp_2failedPCellId_v1090 failedPCellId_v1090;
} NhuRLF_Report_r9extaddgrp_2;

typedef struct NhuRLF_Report_r9extaddgrp_3
{
 TknPres pres;
 NhuRLF_Report_r9extaddgrp_3basicFields_r11 basicFields_r11;
 NhuRLF_Report_r9extaddgrp_3previousUTRA_CellId_r11 previousUTRA_CellId_r11;
 NhuRLF_Report_r9extaddgrp_3selectedUTRA_CellId_r11 selectedUTRA_CellId_r11;
} NhuRLF_Report_r9extaddgrp_3;

typedef struct NhuRLF_Report_r9
{
 TknPres pres;
 NhuRLF_Report_r9measResultLastServCell_r9 measResultLastServCell_r9;
 NhuRLF_Report_r9measResultNeighCells_r9 measResultNeighCells_r9;
 NhuRLF_Report_r9extaddgrp_1 extaddgrp_1;
 NhuRLF_Report_r9extaddgrp_2 extaddgrp_2;
 NhuRLF_Report_r9extaddgrp_3 extaddgrp_3;
} NhuRLF_Report_r9;

typedef struct NhuMeasResultLst2GERAN_r10
{
 TknU16 noComp;
 NhuMeasResultLstGERAN *member;
}NhuMeasResultLst2GERAN_r10;

typedef struct NhuMeasResult2EUTRA_v9e0
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 carrierFreq_v9e0;
} NhuMeasResult2EUTRA_v9e0;

typedef struct NhuMeasResultLst2EUTRA_v9e0
{
 TknU16 noComp;
 NhuMeasResult2EUTRA_v9e0 *member;
}NhuMeasResultLst2EUTRA_v9e0;


typedef TknU32 NhuLogMeasInfo_r10relativeTimeStamp_r10;

typedef struct NhuLogMeasInfo_r10measResultServCell_r10
{
 TknPres pres;
 NhuRSRP_Range rsrpResult_r10;
 NhuRSRQ_Range rsrqResult_r10;
} NhuLogMeasInfo_r10measResultServCell_r10;

typedef struct NhuLogMeasInfo_r10measResultNeighCells_r10
{
 TknPres pres;
 NhuMeasResultLst2EUTRA_r9 measResultLstEUTRA_r10;
 NhuMeasResultLst2UTRA_r9 measResultLstUTRA_r10;
 NhuMeasResultLst2GERAN_r10 measResultLstGERAN_r10;
 NhuMeasResultLst2CDMA2000_r9 measResultLstCDMA2000_r10;
} NhuLogMeasInfo_r10measResultNeighCells_r10;

typedef struct NhuLogMeasInfo_r10extaddgrp_1
{
 TknPres pres;
 NhuMeasResultLst2EUTRA_v9e0 measResultLstEUTRA_v1090;
} NhuLogMeasInfo_r10extaddgrp_1;

typedef struct NhuLogMeasInfo_r10
{
 TknPres pres;
 NhuLocInfo_r10 locationInfo_r10;
 NhuLogMeasInfo_r10relativeTimeStamp_r10 relativeTimeStamp_r10;
 NhuCellGlobalIdEUTRA servCellIdentity_r10;
 NhuLogMeasInfo_r10measResultServCell_r10 measResultServCell_r10;
 NhuLogMeasInfo_r10measResultNeighCells_r10 measResultNeighCells_r10;
 NhuLogMeasInfo_r10extaddgrp_1 extaddgrp_1;
} NhuLogMeasInfo_r10;

typedef struct NhuLogMeasInfoLst_r10
{
 TknU16 noComp;
 NhuLogMeasInfo_r10 *member;
}NhuLogMeasInfoLst_r10;


typedef TknStrOSXL NhuLogMeasReport_r10traceRecordingSessionRef_r10;

typedef TknStrOSXL NhuLogMeasReport_r10tce_Id_r10;

typedef enum enumNhuLogMeasReport_r10logMeasAvailable_r10
{
 NhuLogMeasReport_r10logMeasAvailable_r10trueEnum
} EnumNhuLogMeasReport_r10logMeasAvailable_r10;
typedef TknU32 NhuLogMeasReport_r10logMeasAvailable_r10;

typedef struct NhuLogMeasReport_r10
{
 TknPres pres;
 NhuAbsoluteTimeInfo_r10 absoluteTimeStamp_r10;
 NhuTraceReference_r10 traceReference_r10;
 NhuLogMeasReport_r10traceRecordingSessionRef_r10 traceRecordingSessionRef_r10;
 NhuLogMeasReport_r10tce_Id_r10 tce_Id_r10;
 NhuLogMeasInfoLst_r10 logMeasInfoLst_r10;
 NhuLogMeasReport_r10logMeasAvailable_r10 logMeasAvailable_r10;
} NhuLogMeasReport_r10;

typedef struct NhuConnEstFailReport_r11measResultFailedCell_r11
{
 TknPres pres;
 NhuRSRP_Range rsrpResult_r11;
 NhuRSRQ_Range rsrqResult_r11;
} NhuConnEstFailReport_r11measResultFailedCell_r11;

typedef struct NhuConnEstFailReport_r11measResultNeighCells_r11
{
 TknPres pres;
 NhuMeasResultLst2EUTRA_r9 measResultLstEUTRA_r11;
 NhuMeasResultLst2UTRA_r9 measResultLstUTRA_r11;
 NhuMeasResultLstGERAN measResultLstGERAN_r11;
 NhuMeasResultLst2CDMA2000_r9 measResultsCDMA2000_r11;
} NhuConnEstFailReport_r11measResultNeighCells_r11;


typedef TknU8 NhuConnEstFailReport_r11contentionDetected_r11;


typedef TknU8 NhuConnEstFailReport_r11maxTxPowerReached_r11;

typedef struct NhuConnEstFailReport_r11
{
 TknPres pres;
 NhuCellGlobalIdEUTRA failedCellId_r11;
 NhuLocInfo_r10 locationInfo_r11;
 NhuConnEstFailReport_r11measResultFailedCell_r11 measResultFailedCell_r11;
 NhuConnEstFailReport_r11measResultNeighCells_r11 measResultNeighCells_r11;
 NhuNumberOfPreamblesSent_r11 numberOfPreamblesSent_r11;
 NhuConnEstFailReport_r11contentionDetected_r11 contentionDetected_r11;
 NhuConnEstFailReport_r11maxTxPowerReached_r11 maxTxPowerReached_r11;
 NhuTimeSinceFail_r11 timeSinceFail_r11;
 NhuMeasResultLst2EUTRA_v9e0 measResultLstEUTRA_v1130;
} NhuConnEstFailReport_r11;

typedef struct NhuUEInfoRsp_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUEInfoRsp_v1130_IEsnonCriticalExtn;

typedef struct NhuUEInfoRsp_v1130_IEs
{
 TknPres pres;
 NhuConnEstFailReport_r11 connEstFailReport_r11;
 NhuUEInfoRsp_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuUEInfoRsp_v1130_IEs;

typedef struct NhuUEInfoRsp_v1020_IEs
{
 TknPres pres;
 NhuLogMeasReport_r10 logMeasReport_r10;
 NhuUEInfoRsp_v1130_IEs nonCriticalExtn;
} NhuUEInfoRsp_v1020_IEs;


typedef TknStrOSXL NhuUEInfoRsp_v930_IEslateNonCriticalExtn;
typedef struct NhuUEInfoRsp_v930_IEs
{
 TknPres pres;
 NhuUEInfoRsp_v930_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUEInfoRsp_v1020_IEs nonCriticalExtn;
} NhuUEInfoRsp_v930_IEs;


typedef TknU8 NhuUEInfoRsp_r9_IEsrach_Report_r9contentionDetected_r9;

typedef struct NhuUEInfoRsp_r9_IEsrach_Report_r9
{
 TknPres pres;
 NhuNumberOfPreamblesSent_r11 numberOfPreamblesSent_r9;
 NhuUEInfoRsp_r9_IEsrach_Report_r9contentionDetected_r9 contentionDetected_r9;
} NhuUEInfoRsp_r9_IEsrach_Report_r9;

typedef struct NhuUEInfoRsp_r9_IEs
{
 TknPres pres;
 NhuUEInfoRsp_r9_IEsrach_Report_r9 rach_Report_r9;
 NhuRLF_Report_r9 rlf_Report_r9;
 NhuUEInfoRsp_v930_IEs nonCriticalExtn;
} NhuUEInfoRsp_r9_IEs;

typedef struct NhuUEInfoRsp_r9criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuUEInfoRsp_r9_IEs ueInfoRsp_r9;
 } val;
} NhuUEInfoRsp_r9criticalExtnsc1;

typedef struct NhuUEInfoRsp_r9criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuUEInfoRsp_r9criticalExtnscriticalExtnsFuture;

typedef struct NhuUEInfoRsp_r9criticalExtns
{
 TknU8 choice;
 union {
  NhuUEInfoRsp_r9criticalExtnsc1 c1;
  NhuUEInfoRsp_r9criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuUEInfoRsp_r9criticalExtns;

typedef struct NhuUEInfoRsp_r9
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuUEInfoRsp_r9criticalExtns criticalExtns;
} NhuUEInfoRsp_r9;


typedef TknStrOSXL NhuProximityInd_v930_IEslateNonCriticalExtn;
typedef struct NhuProximityInd_v930_IEsnonCriticalExtn
{
 TknPres pres;
} NhuProximityInd_v930_IEsnonCriticalExtn;

typedef struct NhuProximityInd_v930_IEs
{
 TknPres pres;
 NhuProximityInd_v930_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuProximityInd_v930_IEsnonCriticalExtn nonCriticalExtn;
} NhuProximityInd_v930_IEs;


typedef enum enumNhuProximityInd_r9_IEstype_r9
{
 NhuProximityInd_r9_IEstype_r9enteringEnum,
 NhuProximityInd_r9_IEstype_r9leavingEnum
} EnumNhuProximityInd_r9_IEstype_r9;
typedef TknU32 NhuProximityInd_r9_IEstype_r9;

typedef struct NhuProximityInd_r9_IEscarrierFreq_r9
{
 TknU8 choice;
 union {
  NhuARFCN_ValueEUTRA eutra_r9;
  NhuARFCN_ValueUTRA utra_r9;
  NhuARFCN_ValueEUTRA_v9e0 eutra2_v9e0;
 } val;
} NhuProximityInd_r9_IEscarrierFreq_r9;

typedef struct NhuProximityInd_r9_IEs
{
 TknPres pres;
 NhuProximityInd_r9_IEstype_r9 type_r9;
 NhuProximityInd_r9_IEscarrierFreq_r9 carrierFreq_r9;
 NhuProximityInd_v930_IEs nonCriticalExtn;
} NhuProximityInd_r9_IEs;

typedef struct NhuProximityInd_r9criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuProximityInd_r9_IEs proximityInd_r9;
 } val;
} NhuProximityInd_r9criticalExtnsc1;

typedef struct NhuProximityInd_r9criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuProximityInd_r9criticalExtnscriticalExtnsFuture;

typedef struct NhuProximityInd_r9criticalExtns
{
 TknU8 choice;
 union {
  NhuProximityInd_r9criticalExtnsc1 c1;
  NhuProximityInd_r9criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuProximityInd_r9criticalExtns;

typedef struct NhuProximityInd_r9
{
 TknPres pres;
 NhuProximityInd_r9criticalExtns criticalExtns;
} NhuProximityInd_r9;


typedef TknStrOSXL NhuRNRecfgnCompl_r10_IEslateNonCriticalExtn;
typedef struct NhuRNRecfgnCompl_r10_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRNRecfgnCompl_r10_IEsnonCriticalExtn;

typedef struct NhuRNRecfgnCompl_r10_IEs
{
 TknPres pres;
 NhuRNRecfgnCompl_r10_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuRNRecfgnCompl_r10_IEsnonCriticalExtn nonCriticalExtn;
} NhuRNRecfgnCompl_r10_IEs;

typedef struct NhuRNRecfgnCompl_r10criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuRNRecfgnCompl_r10_IEs rnRecfgnCompl_r10;
 } val;
} NhuRNRecfgnCompl_r10criticalExtnsc1;

typedef struct NhuRNRecfgnCompl_r10criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuRNRecfgnCompl_r10criticalExtnscriticalExtnsFuture;

typedef struct NhuRNRecfgnCompl_r10criticalExtns
{
 TknU8 choice;
 union {
  NhuRNRecfgnCompl_r10criticalExtnsc1 c1;
  NhuRNRecfgnCompl_r10criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuRNRecfgnCompl_r10criticalExtns;

typedef struct NhuRNRecfgnCompl_r10
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuRNRecfgnCompl_r10criticalExtns criticalExtns;
} NhuRNRecfgnCompl_r10;


typedef TknU32 NhuCountingRspInfo_r10countingRspService_r10;

typedef struct NhuCountingRspInfo_r10
{
 TknPres pres;
 NhuCountingRspInfo_r10countingRspService_r10 countingRspService_r10;
} NhuCountingRspInfo_r10;

typedef struct NhuCountingRspLst_r10
{
 TknU16 noComp;
 NhuCountingRspInfo_r10 *member;
}NhuCountingRspLst_r10;


typedef TknU32 NhuMBMSCountingRsp_r10_IEsmbsfn_AreaIdx_r10;


typedef TknStrOSXL NhuMBMSCountingRsp_r10_IEslateNonCriticalExtn;
typedef struct NhuMBMSCountingRsp_r10_IEsnonCriticalExtn
{
 TknPres pres;
} NhuMBMSCountingRsp_r10_IEsnonCriticalExtn;

typedef struct NhuMBMSCountingRsp_r10_IEs
{
 TknPres pres;
 NhuMBMSCountingRsp_r10_IEsmbsfn_AreaIdx_r10 mbsfn_AreaIdx_r10;
 NhuCountingRspLst_r10 countingRspLst_r10;
 NhuMBMSCountingRsp_r10_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuMBMSCountingRsp_r10_IEsnonCriticalExtn nonCriticalExtn;
} NhuMBMSCountingRsp_r10_IEs;

typedef struct NhuMBMSCountingRsp_r10criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuMBMSCountingRsp_r10_IEs countingRsp_r10;
 } val;
} NhuMBMSCountingRsp_r10criticalExtnsc1;

typedef struct NhuMBMSCountingRsp_r10criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuMBMSCountingRsp_r10criticalExtnscriticalExtnsFuture;

typedef struct NhuMBMSCountingRsp_r10criticalExtns
{
 TknU8 choice;
 union {
  NhuMBMSCountingRsp_r10criticalExtnsc1 c1;
  NhuMBMSCountingRsp_r10criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuMBMSCountingRsp_r10criticalExtns;

typedef struct NhuMBMSCountingRsp_r10
{
 TknPres pres;
 NhuMBMSCountingRsp_r10criticalExtns criticalExtns;
} NhuMBMSCountingRsp_r10;


typedef TknU32 NhuRSTD_InterFreqInfo_r10measPRS_Offset_r10;

typedef struct NhuRSTD_InterFreqInfo_r10extaddgrp_1
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 carrierFreq_v1090;
} NhuRSTD_InterFreqInfo_r10extaddgrp_1;

typedef struct NhuRSTD_InterFreqInfo_r10
{
 TknPres pres;
 NhuARFCN_ValueEUTRA carrierFreq_r10;
 NhuRSTD_InterFreqInfo_r10measPRS_Offset_r10 measPRS_Offset_r10;
 NhuRSTD_InterFreqInfo_r10extaddgrp_1 extaddgrp_1;
} NhuRSTD_InterFreqInfo_r10;

typedef struct NhuRSTD_InterFreqInfoLst_r10
{
 TknU16 noComp;
 NhuRSTD_InterFreqInfo_r10 *member;
}NhuRSTD_InterFreqInfoLst_r10;

typedef struct NhuInterFreqRSTDMeasurementInd_r10_IEsrstd_InterFreqInd_r10start
{
 TknPres pres;
 NhuRSTD_InterFreqInfoLst_r10 rstd_InterFreqInfoLst_r10;
} NhuInterFreqRSTDMeasurementInd_r10_IEsrstd_InterFreqInd_r10start;

typedef struct NhuInterFreqRSTDMeasurementInd_r10_IEsrstd_InterFreqInd_r10
{
 TknU8 choice;
 union {
  NhuInterFreqRSTDMeasurementInd_r10_IEsrstd_InterFreqInd_r10start start;
 } val;
} NhuInterFreqRSTDMeasurementInd_r10_IEsrstd_InterFreqInd_r10;


typedef TknStrOSXL NhuInterFreqRSTDMeasurementInd_r10_IEslateNonCriticalExtn;
typedef struct NhuInterFreqRSTDMeasurementInd_r10_IEsnonCriticalExtn
{
 TknPres pres;
} NhuInterFreqRSTDMeasurementInd_r10_IEsnonCriticalExtn;

typedef struct NhuInterFreqRSTDMeasurementInd_r10_IEs
{
 TknPres pres;
 NhuInterFreqRSTDMeasurementInd_r10_IEsrstd_InterFreqInd_r10 rstd_InterFreqInd_r10;
 NhuInterFreqRSTDMeasurementInd_r10_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuInterFreqRSTDMeasurementInd_r10_IEsnonCriticalExtn nonCriticalExtn;
} NhuInterFreqRSTDMeasurementInd_r10_IEs;

typedef struct NhuInterFreqRSTDMeasurementInd_r10criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuInterFreqRSTDMeasurementInd_r10_IEs interFreqRSTDMeasurementInd_r10;
 } val;
} NhuInterFreqRSTDMeasurementInd_r10criticalExtnsc1;

typedef struct NhuInterFreqRSTDMeasurementInd_r10criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuInterFreqRSTDMeasurementInd_r10criticalExtnscriticalExtnsFuture;

typedef struct NhuInterFreqRSTDMeasurementInd_r10criticalExtns
{
 TknU8 choice;
 union {
  NhuInterFreqRSTDMeasurementInd_r10criticalExtnsc1 c1;
  NhuInterFreqRSTDMeasurementInd_r10criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuInterFreqRSTDMeasurementInd_r10criticalExtns;

typedef struct NhuInterFreqRSTDMeasurementInd_r10
{
 TknPres pres;
 NhuInterFreqRSTDMeasurementInd_r10criticalExtns criticalExtns;
} NhuInterFreqRSTDMeasurementInd_r10;


typedef enum enumNhuUEAssistanceInfo_r11_IEspowerPrefInd_r11
{
 NhuUEAssistanceInfo_r11_IEspowerPrefInd_r11normalEnum,
 NhuUEAssistanceInfo_r11_IEspowerPrefInd_r11lowPowerConsumptionEnum
} EnumNhuUEAssistanceInfo_r11_IEspowerPrefInd_r11;
typedef TknU32 NhuUEAssistanceInfo_r11_IEspowerPrefInd_r11;


typedef TknStrOSXL NhuUEAssistanceInfo_r11_IEslateNonCriticalExtn;
typedef struct NhuUEAssistanceInfo_r11_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUEAssistanceInfo_r11_IEsnonCriticalExtn;

typedef struct NhuUEAssistanceInfo_r11_IEs
{
 TknPres pres;
 NhuUEAssistanceInfo_r11_IEspowerPrefInd_r11 powerPrefInd_r11;
 NhuUEAssistanceInfo_r11_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUEAssistanceInfo_r11_IEsnonCriticalExtn nonCriticalExtn;
} NhuUEAssistanceInfo_r11_IEs;

typedef struct NhuUEAssistanceInfo_r11criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuUEAssistanceInfo_r11_IEs ueAssistanceInfo_r11;
 } val;
} NhuUEAssistanceInfo_r11criticalExtnsc1;

typedef struct NhuUEAssistanceInfo_r11criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuUEAssistanceInfo_r11criticalExtnscriticalExtnsFuture;

typedef struct NhuUEAssistanceInfo_r11criticalExtns
{
 TknU8 choice;
 union {
  NhuUEAssistanceInfo_r11criticalExtnsc1 c1;
  NhuUEAssistanceInfo_r11criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuUEAssistanceInfo_r11criticalExtns;

typedef struct NhuUEAssistanceInfo_r11
{
 TknPres pres;
 NhuUEAssistanceInfo_r11criticalExtns criticalExtns;
} NhuUEAssistanceInfo_r11;


typedef enum enumNhuAffectedCarrierFreq_r11interferenceDirection_r11
{
 NhuAffectedCarrierFreq_r11interferenceDirection_r11eutraEnum,
 NhuAffectedCarrierFreq_r11interferenceDirection_r11otherEnum,
 NhuAffectedCarrierFreq_r11interferenceDirection_r11bothEnum,
 NhuAffectedCarrierFreq_r11interferenceDirection_r11spareEnum
} EnumNhuAffectedCarrierFreq_r11interferenceDirection_r11;
typedef TknU32 NhuAffectedCarrierFreq_r11interferenceDirection_r11;

typedef struct NhuAffectedCarrierFreq_r11
{
 TknPres pres;
 NhuMeasObjectId carrierFreq_r11;
 NhuAffectedCarrierFreq_r11interferenceDirection_r11 interferenceDirection_r11;
} NhuAffectedCarrierFreq_r11;

typedef struct NhuAffectedCarrierFreqLst_r11
{
 TknU16 noComp;
 NhuAffectedCarrierFreq_r11 *member;
}NhuAffectedCarrierFreqLst_r11;


typedef TknStrBSXL NhuIDC_SubfrmPattern_r11subframePatternFDD_r11;

typedef TknStrBSXL NhuIDC_SubfrmPattern_r11subframePatternTDD_r11subframeConfig0_r11;

typedef TknStrBSXL NhuIDC_SubfrmPattern_r11subframePatternTDD_r11subframeConfig1_5_r11;

typedef TknStrBSXL NhuIDC_SubfrmPattern_r11subframePatternTDD_r11subframeConfig6_r11;
typedef struct NhuIDC_SubfrmPattern_r11subframePatternTDD_r11
{
 TknU8 choice;
 union {
  NhuIDC_SubfrmPattern_r11subframePatternTDD_r11subframeConfig0_r11 subframeConfig0_r11;
  NhuIDC_SubfrmPattern_r11subframePatternTDD_r11subframeConfig1_5_r11 subframeConfig1_5_r11;
  NhuIDC_SubfrmPattern_r11subframePatternTDD_r11subframeConfig6_r11 subframeConfig6_r11;
 } val;
} NhuIDC_SubfrmPattern_r11subframePatternTDD_r11;

typedef struct NhuIDC_SubfrmPattern_r11
{
 TknU8 choice;
 union {
  NhuIDC_SubfrmPattern_r11subframePatternFDD_r11 subframePatternFDD_r11;
  NhuIDC_SubfrmPattern_r11subframePatternTDD_r11 subframePatternTDD_r11;
 } val;
} NhuIDC_SubfrmPattern_r11;

typedef struct NhuIDC_SubfrmPatternLst_r11
{
 TknU16 noComp;
 NhuIDC_SubfrmPattern_r11 *member;
}NhuIDC_SubfrmPatternLst_r11;


typedef enum enumNhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11
{
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11sf40Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11sf64Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11sf80Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11sf128Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11sf160Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11sf256Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11spare2Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11spare1Enum
} EnumNhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11;
typedef TknU32 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11;


typedef TknU32 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_Offset_r11;


typedef enum enumNhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11
{
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11sf20Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11sf30Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11sf40Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11sf60Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11sf80Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11sf100Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11spare2Enum,
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11spare1Enum
} EnumNhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11;
typedef TknU32 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11;

typedef struct NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11
{
 TknPres pres;
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_CycleLength_r11 drx_CycleLength_r11;
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_Offset_r11 drx_Offset_r11;
 NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11drx_ActiveTime_r11 drx_ActiveTime_r11;
} NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11;

typedef struct NhuTDM_AssistanceInfo_r11
{
 TknU8 choice;
 union {
  NhuTDM_AssistanceInfo_r11drx_AssistanceInfo_r11 drx_AssistanceInfo_r11;
  NhuIDC_SubfrmPatternLst_r11 idc_SubfrmPatternLst_r11;
 } val;
} NhuTDM_AssistanceInfo_r11;


typedef TknStrOSXL NhuInDeviceCoexInd_r11_IEslateNonCriticalExtn;
typedef struct NhuInDeviceCoexInd_r11_IEsnonCriticalExtn
{
 TknPres pres;
} NhuInDeviceCoexInd_r11_IEsnonCriticalExtn;

typedef struct NhuInDeviceCoexInd_r11_IEs
{
 TknPres pres;
 NhuAffectedCarrierFreqLst_r11 affectedCarrierFreqLst_r11;
 NhuTDM_AssistanceInfo_r11 tdm_AssistanceInfo_r11;
 NhuInDeviceCoexInd_r11_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuInDeviceCoexInd_r11_IEsnonCriticalExtn nonCriticalExtn;
} NhuInDeviceCoexInd_r11_IEs;

typedef struct NhuInDeviceCoexInd_r11criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuInDeviceCoexInd_r11_IEs inDeviceCoexInd_r11;
 } val;
} NhuInDeviceCoexInd_r11criticalExtnsc1;

typedef struct NhuInDeviceCoexInd_r11criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuInDeviceCoexInd_r11criticalExtnscriticalExtnsFuture;

typedef struct NhuInDeviceCoexInd_r11criticalExtns
{
 TknU8 choice;
 union {
  NhuInDeviceCoexInd_r11criticalExtnsc1 c1;
  NhuInDeviceCoexInd_r11criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuInDeviceCoexInd_r11criticalExtns;

typedef struct NhuInDeviceCoexInd_r11
{
 TknPres pres;
 NhuInDeviceCoexInd_r11criticalExtns criticalExtns;
} NhuInDeviceCoexInd_r11;

typedef struct NhuCarrierFreqLstMBMS_r11
{
 TknU16 noComp;
 NhuARFCN_ValueEUTRA_r9 *member;
}NhuCarrierFreqLstMBMS_r11;


typedef enum enumNhuMBMSInterestInd_r11_IEsmbms_Priority_r11
{
 NhuMBMSInterestInd_r11_IEsmbms_Priority_r11trueEnum
} EnumNhuMBMSInterestInd_r11_IEsmbms_Priority_r11;
typedef TknU32 NhuMBMSInterestInd_r11_IEsmbms_Priority_r11;


typedef TknStrOSXL NhuMBMSInterestInd_r11_IEslateNonCriticalExtn;
typedef struct NhuMBMSInterestInd_r11_IEsnonCriticalExtn
{
 TknPres pres;
} NhuMBMSInterestInd_r11_IEsnonCriticalExtn;

typedef struct NhuMBMSInterestInd_r11_IEs
{
 TknPres pres;
 NhuCarrierFreqLstMBMS_r11 mbms_FreqLst_r11;
 NhuMBMSInterestInd_r11_IEsmbms_Priority_r11 mbms_Priority_r11;
 NhuMBMSInterestInd_r11_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuMBMSInterestInd_r11_IEsnonCriticalExtn nonCriticalExtn;
} NhuMBMSInterestInd_r11_IEs;

typedef struct NhuMBMSInterestInd_r11criticalExtnsc1
{
 TknU8 choice;
 union {
  NhuMBMSInterestInd_r11_IEs interestInd_r11;
 } val;
} NhuMBMSInterestInd_r11criticalExtnsc1;

typedef struct NhuMBMSInterestInd_r11criticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuMBMSInterestInd_r11criticalExtnscriticalExtnsFuture;

typedef struct NhuMBMSInterestInd_r11criticalExtns
{
 TknU8 choice;
 union {
  NhuMBMSInterestInd_r11criticalExtnsc1 c1;
  NhuMBMSInterestInd_r11criticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuMBMSInterestInd_r11criticalExtns;

typedef struct NhuMBMSInterestInd_r11
{
 TknPres pres;
 NhuMBMSInterestInd_r11criticalExtns criticalExtns;
} NhuMBMSInterestInd_r11;

typedef struct NhuUL_DCCH_MsgTypc1
{
 TknU8 choice;
 union {
  NhuCSFBParamsRqstCDMA2000 csfbParamsRqstCDMA2000;
  NhuMeasurementReport measurementReport;
  NhuRRCConRecfgnCompl rrcConRecfgnCompl;
  NhuRRCConReestbCompl rrcConReestbCompl;
  NhuRRCConSetupCompl rrcConSetupCompl;
  NhuSecModeCompl securityModeCompl;
  NhuSecModeFail securityModeFail;
  NhuUECapInfo ueCapInfo;
  NhuULHovrPrepTfr ulHovrPrepTfr;
  NhuULInfoTfr ulInfoTfr;
  NhuCounterCheckRsp counterCheckRsp;
  NhuUEInfoRsp_r9 ueInfoRsp_r9;
  NhuProximityInd_r9 proximityInd_r9;
  NhuRNRecfgnCompl_r10 rnRecfgnCompl_r10;
  NhuMBMSCountingRsp_r10 mbmsCountingRsp_r10;
  NhuInterFreqRSTDMeasurementInd_r10 interFreqRSTDMeasurementInd_r10;
 } val;
} NhuUL_DCCH_MsgTypc1;

typedef struct NhuUL_DCCH_MsgTypmessageClassExtnc2
{
 TknU8 choice;
 union {
  NhuUEAssistanceInfo_r11 ueAssistanceInfo_r11;
  NhuInDeviceCoexInd_r11 inDeviceCoexInd_r11;
  NhuMBMSInterestInd_r11 mbmsInterestInd_r11;
 } val;
} NhuUL_DCCH_MsgTypmessageClassExtnc2;

typedef struct NhuUL_DCCH_MsgTypmessageClassExtnmessageClassExtnFuture_r11
{
 TknPres pres;
} NhuUL_DCCH_MsgTypmessageClassExtnmessageClassExtnFuture_r11;

typedef struct NhuUL_DCCH_MsgTypmessageClassExtn
{
 TknU8 choice;
 union {
  NhuUL_DCCH_MsgTypmessageClassExtnc2 c2;
  NhuUL_DCCH_MsgTypmessageClassExtnmessageClassExtnFuture_r11 messageClassExtnFuture_r11;
 } val;
} NhuUL_DCCH_MsgTypmessageClassExtn;

typedef struct NhuUL_DCCH_MsgTyp
{
 TknU8 choice;
 union {
  NhuUL_DCCH_MsgTypc1 c1;
  NhuUL_DCCH_MsgTypmessageClassExtn messageClassExtn;
 } val;
} NhuUL_DCCH_MsgTyp;

typedef struct NhuUL_DCCH_Msg
{
 TknPres pres;
 NhuUL_DCCH_MsgTyp message;
} NhuUL_DCCH_Msg;

typedef struct NhuRedirectedCarrierInfo_v9e0
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 eutra_v9e0;
} NhuRedirectedCarrierInfo_v9e0;

typedef struct NhuFreqPriorityEUTRA_v9e0
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 carrierFreq_v9e0;
} NhuFreqPriorityEUTRA_v9e0;

typedef struct NhuIdleModeMobilityCntrlInfo_v9e0freqPriorityLstEUTRA_v9e0
{
 TknU16 noComp;
 NhuFreqPriorityEUTRA_v9e0 *member;
}NhuIdleModeMobilityCntrlInfo_v9e0freqPriorityLstEUTRA_v9e0;

typedef struct NhuIdleModeMobilityCntrlInfo_v9e0
{
 TknPres pres;
 NhuIdleModeMobilityCntrlInfo_v9e0freqPriorityLstEUTRA_v9e0 freqPriorityLstEUTRA_v9e0;
} NhuIdleModeMobilityCntrlInfo_v9e0;

typedef struct NhuRRCConRls_v9e0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuRRCConRls_v9e0_IEsnonCriticalExtn;

typedef struct NhuRRCConRls_v9e0_IEs
{
 TknPres pres;
 NhuRedirectedCarrierInfo_v9e0 redirectedCarrierInfo_v9e0;
 NhuIdleModeMobilityCntrlInfo_v9e0 idleModeMobilityCntrlInfo_v9e0;
 NhuRRCConRls_v9e0_IEsnonCriticalExtn nonCriticalExtn;
} NhuRRCConRls_v9e0_IEs;

typedef struct NhuMultiBandInfoLst
{
 TknU16 noComp;
 NhuFreqBandIndicator *member;
}NhuMultiBandInfoLst;


typedef TknU32 NhuFreqBandIndicator_v9e0;

typedef struct NhuMultiBandInfo_v9e0
{
 TknPres pres;
 NhuFreqBandIndicator_v9e0 freqBandIndicator_v9e0;
} NhuMultiBandInfo_v9e0;

typedef struct NhuMultiBandInfoLst_v9e0
{
 TknU16 noComp;
 NhuMultiBandInfo_v9e0 *member;
}NhuMultiBandInfoLst_v9e0;

typedef struct NhuSysInfoBlockTyp1_v9e0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSysInfoBlockTyp1_v9e0_IEsnonCriticalExtn;

typedef struct NhuSysInfoBlockTyp1_v9e0_IEs
{
 TknPres pres;
 NhuFreqBandIndicator_v9e0 freqBandIndicator_v9e0;
 NhuMultiBandInfoLst_v9e0 multiBandInfoLst_v9e0;
 NhuSysInfoBlockTyp1_v9e0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSysInfoBlockTyp1_v9e0_IEs;

typedef struct NhuSysInfoBlockTyp1_v8h0_IEs
{
 TknPres pres;
 NhuMultiBandInfoLst multiBandInfoLst;
 NhuSysInfoBlockTyp1_v9e0_IEs nonCriticalExtn;
} NhuSysInfoBlockTyp1_v8h0_IEs;

typedef struct NhuRLF_Report_v9e0
{
 TknPres pres;
 NhuMeasResultLst2EUTRA_v9e0 measResultLstEUTRA_v9e0;
} NhuRLF_Report_v9e0;

typedef struct NhuUEInfoRsp_v9e0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUEInfoRsp_v9e0_IEsnonCriticalExtn;

typedef struct NhuUEInfoRsp_v9e0_IEs
{
 TknPres pres;
 NhuRLF_Report_v9e0 rlf_Report_v9e0;
 NhuUEInfoRsp_v9e0_IEsnonCriticalExtn nonCriticalExtn;
} NhuUEInfoRsp_v9e0_IEs;

typedef struct NhuSysInfoBlockTyp2_v9e0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSysInfoBlockTyp2_v9e0_IEsnonCriticalExtn;

typedef struct NhuSysInfoBlockTyp2_v9e0_IEs
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 ul_CarrierFreq_v9e0;
 NhuSysInfoBlockTyp2_v9e0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSysInfoBlockTyp2_v9e0_IEs;

typedef struct NhuSysInfoBlockTyp2_v8h0_IEsmultiBandInfoLst
{
 TknU16 noComp;
 NhuAdditionalSpectrumEmission *member;
}NhuSysInfoBlockTyp2_v8h0_IEsmultiBandInfoLst;

typedef struct NhuSysInfoBlockTyp2_v8h0_IEs
{
 TknPres pres;
 NhuSysInfoBlockTyp2_v8h0_IEsmultiBandInfoLst multiBandInfoLst;
 NhuSysInfoBlockTyp2_v9e0_IEs nonCriticalExtn;
} NhuSysInfoBlockTyp2_v8h0_IEs;

typedef struct NhuInterFreqCarrierFreqInfo_v8h0
{
 TknPres pres;
 NhuMultiBandInfoLst multiBandInfoLst;
} NhuInterFreqCarrierFreqInfo_v8h0;

typedef struct NhuInterFreqCarrierFreqInfo_v9e0
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 dl_CarrierFreq_v9e0;
 NhuMultiBandInfoLst_v9e0 multiBandInfoLst_v9e0;
} NhuInterFreqCarrierFreqInfo_v9e0;

typedef struct NhuSysInfoBlockTyp5_v9e0_IEsinterFreqCarrierFreqLst_v9e0
{
 TknU16 noComp;
 NhuInterFreqCarrierFreqInfo_v9e0 *member;
}NhuSysInfoBlockTyp5_v9e0_IEsinterFreqCarrierFreqLst_v9e0;

typedef struct NhuSysInfoBlockTyp5_v9e0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSysInfoBlockTyp5_v9e0_IEsnonCriticalExtn;

typedef struct NhuSysInfoBlockTyp5_v9e0_IEs
{
 TknPres pres;
 NhuSysInfoBlockTyp5_v9e0_IEsinterFreqCarrierFreqLst_v9e0 interFreqCarrierFreqLst_v9e0;
 NhuSysInfoBlockTyp5_v9e0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSysInfoBlockTyp5_v9e0_IEs;

typedef struct NhuSysInfoBlockTyp5_v8h0_IEsinterFreqCarrierFreqLst_v8h0
{
 TknU16 noComp;
 NhuInterFreqCarrierFreqInfo_v8h0 *member;
}NhuSysInfoBlockTyp5_v8h0_IEsinterFreqCarrierFreqLst_v8h0;

typedef struct NhuSysInfoBlockTyp5_v8h0_IEs
{
 TknPres pres;
 NhuSysInfoBlockTyp5_v8h0_IEsinterFreqCarrierFreqLst_v8h0 interFreqCarrierFreqLst_v8h0;
 NhuSysInfoBlockTyp5_v9e0_IEs nonCriticalExtn;
} NhuSysInfoBlockTyp5_v8h0_IEs;


typedef TknU32 NhuFreqBandIndicator_UTRA_FDD;

typedef struct NhuCarrierFreqInfoUTRA_FDD_v8h0multiBandInfoLst
{
 TknU16 noComp;
 NhuFreqBandIndicator_UTRA_FDD *member;
}NhuCarrierFreqInfoUTRA_FDD_v8h0multiBandInfoLst;

typedef struct NhuCarrierFreqInfoUTRA_FDD_v8h0
{
 TknPres pres;
 NhuCarrierFreqInfoUTRA_FDD_v8h0multiBandInfoLst multiBandInfoLst;
} NhuCarrierFreqInfoUTRA_FDD_v8h0;

typedef struct NhuSysInfoBlockTyp6_v8h0_IEscarrierFreqLstUTRA_FDD_v8h0
{
 TknU16 noComp;
 NhuCarrierFreqInfoUTRA_FDD_v8h0 *member;
}NhuSysInfoBlockTyp6_v8h0_IEscarrierFreqLstUTRA_FDD_v8h0;

typedef struct NhuSysInfoBlockTyp6_v8h0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSysInfoBlockTyp6_v8h0_IEsnonCriticalExtn;

typedef struct NhuSysInfoBlockTyp6_v8h0_IEs
{
 TknPres pres;
 NhuSysInfoBlockTyp6_v8h0_IEscarrierFreqLstUTRA_FDD_v8h0 carrierFreqLstUTRA_FDD_v8h0;
 NhuSysInfoBlockTyp6_v8h0_IEsnonCriticalExtn nonCriticalExtn;
} NhuSysInfoBlockTyp6_v8h0_IEs;


typedef enum enumNhuAccessStratumRls
{
 NhuAccessStratumRlsrel8Enum,
 NhuAccessStratumRlsrel9Enum,
 NhuAccessStratumRlsrel10Enum,
 NhuAccessStratumRlsrel11Enum,
 NhuAccessStratumRlsspare4Enum,
 NhuAccessStratumRlsspare3Enum,
 NhuAccessStratumRlsspare2Enum,
 NhuAccessStratumRlsspare1Enum
} EnumNhuAccessStratumRls;
typedef TknU32 NhuAccessStratumRls;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0001;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0002;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0003;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0004;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0006;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0101;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0102;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0103;


typedef TknU8 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0104;

typedef struct NhuPDCP_ParamssupportedROHC_Profiles
{
 TknPres pres;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0001 profile0x0001;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0002 profile0x0002;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0003 profile0x0003;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0004 profile0x0004;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0006 profile0x0006;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0101 profile0x0101;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0102 profile0x0102;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0103 profile0x0103;
 NhuPDCP_ParamssupportedROHC_Profilesprofile0x0104 profile0x0104;
} NhuPDCP_ParamssupportedROHC_Profiles;


typedef enum enumNhuPDCP_ParamsmaxNumberROHC_CtxtSessions
{
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs2Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs4Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs8Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs12Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs16Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs24Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs32Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs48Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs64Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs128Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs256Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs512Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs1024Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionscs16384Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionsspare2Enum,
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessionsspare1Enum
} EnumNhuPDCP_ParamsmaxNumberROHC_CtxtSessions;
typedef TknU32 NhuPDCP_ParamsmaxNumberROHC_CtxtSessions;

typedef struct NhuPDCP_Params
{
 TknPres pres;
 NhuPDCP_ParamssupportedROHC_Profiles supportedROHC_Profiles;
 NhuPDCP_ParamsmaxNumberROHC_CtxtSessions maxNumberROHC_CtxtSessions;
} NhuPDCP_Params;


typedef TknU8 NhuPhyLyrParamsue_TxAntennaSelectionSupp;


typedef TknU8 NhuPhyLyrParamsue_SpecificRefSigsSupp;

typedef struct NhuPhyLyrParams
{
 TknPres pres;
 NhuPhyLyrParamsue_TxAntennaSelectionSupp ue_TxAntennaSelectionSupp;
 NhuPhyLyrParamsue_SpecificRefSigsSupp ue_SpecificRefSigsSupp;
} NhuPhyLyrParams;


typedef TknU8 NhuSuppBandEUTRAhalfDuplex;

typedef struct NhuSuppBandEUTRA
{
 TknPres pres;
 NhuFreqBandIndicator bandEUTRA;
 NhuSuppBandEUTRAhalfDuplex halfDuplex;
} NhuSuppBandEUTRA;

typedef struct NhuSuppBandLstEUTRA
{
 TknU16 noComp;
 NhuSuppBandEUTRA *member;
}NhuSuppBandLstEUTRA;

typedef struct NhuRF_Params
{
 TknPres pres;
 NhuSuppBandLstEUTRA supportedBandLstEUTRA;
} NhuRF_Params;


typedef TknU8 NhuInterFreqBandInfointerFreqNeedForGaps;

typedef struct NhuInterFreqBandInfo
{
 TknPres pres;
 NhuInterFreqBandInfointerFreqNeedForGaps interFreqNeedForGaps;
} NhuInterFreqBandInfo;

typedef struct NhuInterFreqBandLst
{
 TknU16 noComp;
 NhuInterFreqBandInfo *member;
}NhuInterFreqBandLst;


typedef TknU8 NhuInterRAT_BandInfointerRAT_NeedForGaps;

typedef struct NhuInterRAT_BandInfo
{
 TknPres pres;
 NhuInterRAT_BandInfointerRAT_NeedForGaps interRAT_NeedForGaps;
} NhuInterRAT_BandInfo;

typedef struct NhuInterRAT_BandLst
{
 TknU16 noComp;
 NhuInterRAT_BandInfo *member;
}NhuInterRAT_BandLst;

typedef struct NhuBandInfoEUTRA
{
 TknPres pres;
 NhuInterFreqBandLst interFreqBandLst;
 NhuInterRAT_BandLst interRAT_BandLst;
} NhuBandInfoEUTRA;

typedef struct NhuBandLstEUTRA
{
 TknU16 noComp;
 NhuBandInfoEUTRA *member;
}NhuBandLstEUTRA;

typedef struct NhuMeasParams
{
 TknPres pres;
 NhuBandLstEUTRA bandLstEUTRA;
} NhuMeasParams;


typedef enum enumNhuSuppBandUTRA_FDD
{
 NhuSuppBandUTRA_FDDbandIEnum,
 NhuSuppBandUTRA_FDDbandIIEnum,
 NhuSuppBandUTRA_FDDbandIIIEnum,
 NhuSuppBandUTRA_FDDbandIVEnum,
 NhuSuppBandUTRA_FDDbandVEnum,
 NhuSuppBandUTRA_FDDbandVIEnum,
 NhuSuppBandUTRA_FDDbandVIIEnum,
 NhuSuppBandUTRA_FDDbandVIIIEnum,
 NhuSuppBandUTRA_FDDbandIXEnum,
 NhuSuppBandUTRA_FDDbandXEnum,
 NhuSuppBandUTRA_FDDbandXIEnum,
 NhuSuppBandUTRA_FDDbandXIIEnum,
 NhuSuppBandUTRA_FDDbandXIIIEnum,
 NhuSuppBandUTRA_FDDbandXIVEnum,
 NhuSuppBandUTRA_FDDbandXVEnum,
 NhuSuppBandUTRA_FDDbandXVIEnum,
 NhuSuppBandUTRA_FDDbandXVII_8a0Enum,
 NhuSuppBandUTRA_FDDbandXVIII_8a0Enum,
 NhuSuppBandUTRA_FDDbandXIX_8a0Enum,
 NhuSuppBandUTRA_FDDbandXX_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXI_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXII_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXIII_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXIV_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXV_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXVI_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXVII_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXVIII_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXIX_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXX_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXXI_8a0Enum,
 NhuSuppBandUTRA_FDDbandXXXII_8a0Enum
} EnumNhuSuppBandUTRA_FDD;
typedef TknU32 NhuSuppBandUTRA_FDD;

typedef struct NhuSuppBandLstUTRA_FDD
{
 TknU16 noComp;
 NhuSuppBandUTRA_FDD *member;
}NhuSuppBandLstUTRA_FDD;

typedef struct NhuIRAT_ParamsUTRA_FDD
{
 TknPres pres;
 NhuSuppBandLstUTRA_FDD supportedBandLstUTRA_FDD;
} NhuIRAT_ParamsUTRA_FDD;


typedef enum enumNhuSuppBandUTRA_TDD128
{
 NhuSuppBandUTRA_TDD128aEnum,
 NhuSuppBandUTRA_TDD128bEnum,
 NhuSuppBandUTRA_TDD128cEnum,
 NhuSuppBandUTRA_TDD128dEnum,
 NhuSuppBandUTRA_TDD128eEnum,
 NhuSuppBandUTRA_TDD128fEnum,
 NhuSuppBandUTRA_TDD128gEnum,
 NhuSuppBandUTRA_TDD128hEnum,
 NhuSuppBandUTRA_TDD128iEnum,
 NhuSuppBandUTRA_TDD128jEnum,
 NhuSuppBandUTRA_TDD128kEnum,
 NhuSuppBandUTRA_TDD128lEnum,
 NhuSuppBandUTRA_TDD128mEnum,
 NhuSuppBandUTRA_TDD128nEnum,
 NhuSuppBandUTRA_TDD128oEnum,
 NhuSuppBandUTRA_TDD128pEnum
} EnumNhuSuppBandUTRA_TDD128;
typedef TknU32 NhuSuppBandUTRA_TDD128;

typedef struct NhuSuppBandLstUTRA_TDD128
{
 TknU16 noComp;
 NhuSuppBandUTRA_TDD128 *member;
}NhuSuppBandLstUTRA_TDD128;

typedef struct NhuIRAT_ParamsUTRA_TDD128
{
 TknPres pres;
 NhuSuppBandLstUTRA_TDD128 supportedBandLstUTRA_TDD128;
} NhuIRAT_ParamsUTRA_TDD128;


typedef enum enumNhuSuppBandUTRA_TDD384
{
 NhuSuppBandUTRA_TDD384aEnum,
 NhuSuppBandUTRA_TDD384bEnum,
 NhuSuppBandUTRA_TDD384cEnum,
 NhuSuppBandUTRA_TDD384dEnum,
 NhuSuppBandUTRA_TDD384eEnum,
 NhuSuppBandUTRA_TDD384fEnum,
 NhuSuppBandUTRA_TDD384gEnum,
 NhuSuppBandUTRA_TDD384hEnum,
 NhuSuppBandUTRA_TDD384iEnum,
 NhuSuppBandUTRA_TDD384jEnum,
 NhuSuppBandUTRA_TDD384kEnum,
 NhuSuppBandUTRA_TDD384lEnum,
 NhuSuppBandUTRA_TDD384mEnum,
 NhuSuppBandUTRA_TDD384nEnum,
 NhuSuppBandUTRA_TDD384oEnum,
 NhuSuppBandUTRA_TDD384pEnum
} EnumNhuSuppBandUTRA_TDD384;
typedef TknU32 NhuSuppBandUTRA_TDD384;

typedef struct NhuSuppBandLstUTRA_TDD384
{
 TknU16 noComp;
 NhuSuppBandUTRA_TDD384 *member;
}NhuSuppBandLstUTRA_TDD384;

typedef struct NhuIRAT_ParamsUTRA_TDD384
{
 TknPres pres;
 NhuSuppBandLstUTRA_TDD384 supportedBandLstUTRA_TDD384;
} NhuIRAT_ParamsUTRA_TDD384;


typedef enum enumNhuSuppBandUTRA_TDD768
{
 NhuSuppBandUTRA_TDD768aEnum,
 NhuSuppBandUTRA_TDD768bEnum,
 NhuSuppBandUTRA_TDD768cEnum,
 NhuSuppBandUTRA_TDD768dEnum,
 NhuSuppBandUTRA_TDD768eEnum,
 NhuSuppBandUTRA_TDD768fEnum,
 NhuSuppBandUTRA_TDD768gEnum,
 NhuSuppBandUTRA_TDD768hEnum,
 NhuSuppBandUTRA_TDD768iEnum,
 NhuSuppBandUTRA_TDD768jEnum,
 NhuSuppBandUTRA_TDD768kEnum,
 NhuSuppBandUTRA_TDD768lEnum,
 NhuSuppBandUTRA_TDD768mEnum,
 NhuSuppBandUTRA_TDD768nEnum,
 NhuSuppBandUTRA_TDD768oEnum,
 NhuSuppBandUTRA_TDD768pEnum
} EnumNhuSuppBandUTRA_TDD768;
typedef TknU32 NhuSuppBandUTRA_TDD768;

typedef struct NhuSuppBandLstUTRA_TDD768
{
 TknU16 noComp;
 NhuSuppBandUTRA_TDD768 *member;
}NhuSuppBandLstUTRA_TDD768;

typedef struct NhuIRAT_ParamsUTRA_TDD768
{
 TknPres pres;
 NhuSuppBandLstUTRA_TDD768 supportedBandLstUTRA_TDD768;
} NhuIRAT_ParamsUTRA_TDD768;


typedef enum enumNhuSuppBandGERAN
{
 NhuSuppBandGERANgsm450Enum,
 NhuSuppBandGERANgsm480Enum,
 NhuSuppBandGERANgsm710Enum,
 NhuSuppBandGERANgsm750Enum,
 NhuSuppBandGERANgsm810Enum,
 NhuSuppBandGERANgsm850Enum,
 NhuSuppBandGERANgsm900PEnum,
 NhuSuppBandGERANgsm900EEnum,
 NhuSuppBandGERANgsm900REnum,
 NhuSuppBandGERANgsm1800Enum,
 NhuSuppBandGERANgsm1900Enum,
 NhuSuppBandGERANspare5Enum,
 NhuSuppBandGERANspare4Enum,
 NhuSuppBandGERANspare3Enum,
 NhuSuppBandGERANspare2Enum,
 NhuSuppBandGERANspare1Enum
} EnumNhuSuppBandGERAN;
typedef TknU32 NhuSuppBandGERAN;

typedef struct NhuSuppBandLstGERAN
{
 TknU16 noComp;
 NhuSuppBandGERAN *member;
}NhuSuppBandLstGERAN;


typedef TknU8 NhuIRAT_ParamsGERANinterRAT_PS_HO_ToGERAN;

typedef struct NhuIRAT_ParamsGERAN
{
 TknPres pres;
 NhuSuppBandLstGERAN supportedBandLstGERAN;
 NhuIRAT_ParamsGERANinterRAT_PS_HO_ToGERAN interRAT_PS_HO_ToGERAN;
} NhuIRAT_ParamsGERAN;

typedef struct NhuSuppBandLstHRPD
{
 TknU16 noComp;
 NhuBandclassCDMA2000 *member;
}NhuSuppBandLstHRPD;


typedef enum enumNhuIRAT_ParamsCDMA2000_HRPDtx_ConfigHRPD
{
 NhuIRAT_ParamsCDMA2000_HRPDtx_ConfigHRPDsingleEnum,
 NhuIRAT_ParamsCDMA2000_HRPDtx_ConfigHRPDdualEnum
} EnumNhuIRAT_ParamsCDMA2000_HRPDtx_ConfigHRPD;
typedef TknU32 NhuIRAT_ParamsCDMA2000_HRPDtx_ConfigHRPD;


typedef enum enumNhuIRAT_ParamsCDMA2000_HRPDrx_ConfigHRPD
{
 NhuIRAT_ParamsCDMA2000_HRPDrx_ConfigHRPDsingleEnum,
 NhuIRAT_ParamsCDMA2000_HRPDrx_ConfigHRPDdualEnum
} EnumNhuIRAT_ParamsCDMA2000_HRPDrx_ConfigHRPD;
typedef TknU32 NhuIRAT_ParamsCDMA2000_HRPDrx_ConfigHRPD;

typedef struct NhuIRAT_ParamsCDMA2000_HRPD
{
 TknPres pres;
 NhuSuppBandLstHRPD supportedBandLstHRPD;
 NhuIRAT_ParamsCDMA2000_HRPDtx_ConfigHRPD tx_ConfigHRPD;
 NhuIRAT_ParamsCDMA2000_HRPDrx_ConfigHRPD rx_ConfigHRPD;
} NhuIRAT_ParamsCDMA2000_HRPD;

typedef struct NhuSuppBandLst1XRTT
{
 TknU16 noComp;
 NhuBandclassCDMA2000 *member;
}NhuSuppBandLst1XRTT;


typedef enum enumNhuIRAT_ParamsCDMA2000_1XRTTtx_Config1XRTT
{
 NhuIRAT_ParamsCDMA2000_1XRTTtx_Config1XRTTsingleEnum,
 NhuIRAT_ParamsCDMA2000_1XRTTtx_Config1XRTTdualEnum
} EnumNhuIRAT_ParamsCDMA2000_1XRTTtx_Config1XRTT;
typedef TknU32 NhuIRAT_ParamsCDMA2000_1XRTTtx_Config1XRTT;


typedef enum enumNhuIRAT_ParamsCDMA2000_1XRTTrx_Config1XRTT
{
 NhuIRAT_ParamsCDMA2000_1XRTTrx_Config1XRTTsingleEnum,
 NhuIRAT_ParamsCDMA2000_1XRTTrx_Config1XRTTdualEnum
} EnumNhuIRAT_ParamsCDMA2000_1XRTTrx_Config1XRTT;
typedef TknU32 NhuIRAT_ParamsCDMA2000_1XRTTrx_Config1XRTT;

typedef struct NhuIRAT_ParamsCDMA2000_1XRTT
{
 TknPres pres;
 NhuSuppBandLst1XRTT supportedBandLst1XRTT;
 NhuIRAT_ParamsCDMA2000_1XRTTtx_Config1XRTT tx_Config1XRTT;
 NhuIRAT_ParamsCDMA2000_1XRTTrx_Config1XRTT rx_Config1XRTT;
} NhuIRAT_ParamsCDMA2000_1XRTT;


typedef enum enumNhuPhyLyrParams_v920enhancedDualLyrFDD_r9
{
 NhuPhyLyrParams_v920enhancedDualLyrFDD_r9supportedEnum
} EnumNhuPhyLyrParams_v920enhancedDualLyrFDD_r9;
typedef TknU32 NhuPhyLyrParams_v920enhancedDualLyrFDD_r9;


typedef enum enumNhuPhyLyrParams_v920enhancedDualLyrTDD_r9
{
 NhuPhyLyrParams_v920enhancedDualLyrTDD_r9supportedEnum
} EnumNhuPhyLyrParams_v920enhancedDualLyrTDD_r9;
typedef TknU32 NhuPhyLyrParams_v920enhancedDualLyrTDD_r9;

typedef struct NhuPhyLyrParams_v920
{
 TknPres pres;
 NhuPhyLyrParams_v920enhancedDualLyrFDD_r9 enhancedDualLyrFDD_r9;
 NhuPhyLyrParams_v920enhancedDualLyrTDD_r9 enhancedDualLyrTDD_r9;
} NhuPhyLyrParams_v920;


typedef enum enumNhuIRAT_ParamsGERAN_v920dtm_r9
{
 NhuIRAT_ParamsGERAN_v920dtm_r9supportedEnum
} EnumNhuIRAT_ParamsGERAN_v920dtm_r9;
typedef TknU32 NhuIRAT_ParamsGERAN_v920dtm_r9;


typedef enum enumNhuIRAT_ParamsGERAN_v920e_RedirectionGERAN_r9
{
 NhuIRAT_ParamsGERAN_v920e_RedirectionGERAN_r9supportedEnum
} EnumNhuIRAT_ParamsGERAN_v920e_RedirectionGERAN_r9;
typedef TknU32 NhuIRAT_ParamsGERAN_v920e_RedirectionGERAN_r9;

typedef struct NhuIRAT_ParamsGERAN_v920
{
 TknPres pres;
 NhuIRAT_ParamsGERAN_v920dtm_r9 dtm_r9;
 NhuIRAT_ParamsGERAN_v920e_RedirectionGERAN_r9 e_RedirectionGERAN_r9;
} NhuIRAT_ParamsGERAN_v920;


typedef enum enumNhuIRAT_ParamsUTRA_v920e_RedirectionUTRA_r9
{
 NhuIRAT_ParamsUTRA_v920e_RedirectionUTRA_r9supportedEnum
} EnumNhuIRAT_ParamsUTRA_v920e_RedirectionUTRA_r9;
typedef TknU32 NhuIRAT_ParamsUTRA_v920e_RedirectionUTRA_r9;

typedef struct NhuIRAT_ParamsUTRA_v920
{
 TknPres pres;
 NhuIRAT_ParamsUTRA_v920e_RedirectionUTRA_r9 e_RedirectionUTRA_r9;
} NhuIRAT_ParamsUTRA_v920;


typedef enum enumNhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_1XRTT_r9
{
 NhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_1XRTT_r9supportedEnum
} EnumNhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_1XRTT_r9;
typedef TknU32 NhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_1XRTT_r9;


typedef enum enumNhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_ConcPS_Mob1XRTT_r9
{
 NhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_ConcPS_Mob1XRTT_r9supportedEnum
} EnumNhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_ConcPS_Mob1XRTT_r9;
typedef TknU32 NhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_ConcPS_Mob1XRTT_r9;

typedef struct NhuIRAT_ParamsCDMA2000_1XRTT_v920
{
 TknPres pres;
 NhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_1XRTT_r9 e_CSFB_1XRTT_r9;
 NhuIRAT_ParamsCDMA2000_1XRTT_v920e_CSFB_ConcPS_Mob1XRTT_r9 e_CSFB_ConcPS_Mob1XRTT_r9;
} NhuIRAT_ParamsCDMA2000_1XRTT_v920;


typedef enum enumNhuCSG_ProximityIndParams_r9intraFreqProximityInd_r9
{
 NhuCSG_ProximityIndParams_r9intraFreqProximityInd_r9supportedEnum
} EnumNhuCSG_ProximityIndParams_r9intraFreqProximityInd_r9;
typedef TknU32 NhuCSG_ProximityIndParams_r9intraFreqProximityInd_r9;


typedef enum enumNhuCSG_ProximityIndParams_r9interFreqProximityInd_r9
{
 NhuCSG_ProximityIndParams_r9interFreqProximityInd_r9supportedEnum
} EnumNhuCSG_ProximityIndParams_r9interFreqProximityInd_r9;
typedef TknU32 NhuCSG_ProximityIndParams_r9interFreqProximityInd_r9;


typedef enum enumNhuCSG_ProximityIndParams_r9utran_ProximityInd_r9
{
 NhuCSG_ProximityIndParams_r9utran_ProximityInd_r9supportedEnum
} EnumNhuCSG_ProximityIndParams_r9utran_ProximityInd_r9;
typedef TknU32 NhuCSG_ProximityIndParams_r9utran_ProximityInd_r9;

typedef struct NhuCSG_ProximityIndParams_r9
{
 TknPres pres;
 NhuCSG_ProximityIndParams_r9intraFreqProximityInd_r9 intraFreqProximityInd_r9;
 NhuCSG_ProximityIndParams_r9interFreqProximityInd_r9 interFreqProximityInd_r9;
 NhuCSG_ProximityIndParams_r9utran_ProximityInd_r9 utran_ProximityInd_r9;
} NhuCSG_ProximityIndParams_r9;


typedef enum enumNhuNeighCellSI_AcquisitionParams_r9intraFreqSI_AcquisitionForHO_r9
{
 NhuNeighCellSI_AcquisitionParams_r9intraFreqSI_AcquisitionForHO_r9supportedEnum
} EnumNhuNeighCellSI_AcquisitionParams_r9intraFreqSI_AcquisitionForHO_r9;
typedef TknU32 NhuNeighCellSI_AcquisitionParams_r9intraFreqSI_AcquisitionForHO_r9;


typedef enum enumNhuNeighCellSI_AcquisitionParams_r9interFreqSI_AcquisitionForHO_r9
{
 NhuNeighCellSI_AcquisitionParams_r9interFreqSI_AcquisitionForHO_r9supportedEnum
} EnumNhuNeighCellSI_AcquisitionParams_r9interFreqSI_AcquisitionForHO_r9;
typedef TknU32 NhuNeighCellSI_AcquisitionParams_r9interFreqSI_AcquisitionForHO_r9;


typedef enum enumNhuNeighCellSI_AcquisitionParams_r9utran_SI_AcquisitionForHO_r9
{
 NhuNeighCellSI_AcquisitionParams_r9utran_SI_AcquisitionForHO_r9supportedEnum
} EnumNhuNeighCellSI_AcquisitionParams_r9utran_SI_AcquisitionForHO_r9;
typedef TknU32 NhuNeighCellSI_AcquisitionParams_r9utran_SI_AcquisitionForHO_r9;

typedef struct NhuNeighCellSI_AcquisitionParams_r9
{
 TknPres pres;
 NhuNeighCellSI_AcquisitionParams_r9intraFreqSI_AcquisitionForHO_r9 intraFreqSI_AcquisitionForHO_r9;
 NhuNeighCellSI_AcquisitionParams_r9interFreqSI_AcquisitionForHO_r9 interFreqSI_AcquisitionForHO_r9;
 NhuNeighCellSI_AcquisitionParams_r9utran_SI_AcquisitionForHO_r9 utran_SI_AcquisitionForHO_r9;
} NhuNeighCellSI_AcquisitionParams_r9;


typedef enum enumNhuSON_Params_r9rach_Report_r9
{
 NhuSON_Params_r9rach_Report_r9supportedEnum
} EnumNhuSON_Params_r9rach_Report_r9;
typedef TknU32 NhuSON_Params_r9rach_Report_r9;

typedef struct NhuSON_Params_r9
{
 TknPres pres;
 NhuSON_Params_r9rach_Report_r9 rach_Report_r9;
} NhuSON_Params_r9;


typedef enum enumNhuNonContiguousUL_RA_WithinCC_r10nonContiguousUL_RA_WithinCC_Info_r10
{
 NhuNonContiguousUL_RA_WithinCC_r10nonContiguousUL_RA_WithinCC_Info_r10supportedEnum
} EnumNhuNonContiguousUL_RA_WithinCC_r10nonContiguousUL_RA_WithinCC_Info_r10;
typedef TknU32 NhuNonContiguousUL_RA_WithinCC_r10nonContiguousUL_RA_WithinCC_Info_r10;

typedef struct NhuNonContiguousUL_RA_WithinCC_r10
{
 TknPres pres;
 NhuNonContiguousUL_RA_WithinCC_r10nonContiguousUL_RA_WithinCC_Info_r10 nonContiguousUL_RA_WithinCC_Info_r10;
} NhuNonContiguousUL_RA_WithinCC_r10;

typedef struct NhuNonContiguousUL_RA_WithinCC_Lst_r10
{
 TknU16 noComp;
 NhuNonContiguousUL_RA_WithinCC_r10 *member;
}NhuNonContiguousUL_RA_WithinCC_Lst_r10;


typedef enum enumNhuPhyLyrParams_v1020twoAntennaPortsForPUCCH_r10
{
 NhuPhyLyrParams_v1020twoAntennaPortsForPUCCH_r10supportedEnum
} EnumNhuPhyLyrParams_v1020twoAntennaPortsForPUCCH_r10;
typedef TknU32 NhuPhyLyrParams_v1020twoAntennaPortsForPUCCH_r10;


typedef enum enumNhuPhyLyrParams_v1020tm9_With_8Tx_FDD_r10
{
 NhuPhyLyrParams_v1020tm9_With_8Tx_FDD_r10supportedEnum
} EnumNhuPhyLyrParams_v1020tm9_With_8Tx_FDD_r10;
typedef TknU32 NhuPhyLyrParams_v1020tm9_With_8Tx_FDD_r10;


typedef enum enumNhuPhyLyrParams_v1020pmi_Disabling_r10
{
 NhuPhyLyrParams_v1020pmi_Disabling_r10supportedEnum
} EnumNhuPhyLyrParams_v1020pmi_Disabling_r10;
typedef TknU32 NhuPhyLyrParams_v1020pmi_Disabling_r10;


typedef enum enumNhuPhyLyrParams_v1020crossCarrierScheduling_r10
{
 NhuPhyLyrParams_v1020crossCarrierScheduling_r10supportedEnum
} EnumNhuPhyLyrParams_v1020crossCarrierScheduling_r10;
typedef TknU32 NhuPhyLyrParams_v1020crossCarrierScheduling_r10;


typedef enum enumNhuPhyLyrParams_v1020simultaneousPUCCH_PUSCH_r10
{
 NhuPhyLyrParams_v1020simultaneousPUCCH_PUSCH_r10supportedEnum
} EnumNhuPhyLyrParams_v1020simultaneousPUCCH_PUSCH_r10;
typedef TknU32 NhuPhyLyrParams_v1020simultaneousPUCCH_PUSCH_r10;


typedef enum enumNhuPhyLyrParams_v1020multiClusterPUSCH_WithinCC_r10
{
 NhuPhyLyrParams_v1020multiClusterPUSCH_WithinCC_r10supportedEnum
} EnumNhuPhyLyrParams_v1020multiClusterPUSCH_WithinCC_r10;
typedef TknU32 NhuPhyLyrParams_v1020multiClusterPUSCH_WithinCC_r10;

typedef struct NhuPhyLyrParams_v1020
{
 TknPres pres;
 NhuPhyLyrParams_v1020twoAntennaPortsForPUCCH_r10 twoAntennaPortsForPUCCH_r10;
 NhuPhyLyrParams_v1020tm9_With_8Tx_FDD_r10 tm9_With_8Tx_FDD_r10;
 NhuPhyLyrParams_v1020pmi_Disabling_r10 pmi_Disabling_r10;
 NhuPhyLyrParams_v1020crossCarrierScheduling_r10 crossCarrierScheduling_r10;
 NhuPhyLyrParams_v1020simultaneousPUCCH_PUSCH_r10 simultaneousPUCCH_PUSCH_r10;
 NhuPhyLyrParams_v1020multiClusterPUSCH_WithinCC_r10 multiClusterPUSCH_WithinCC_r10;
 NhuNonContiguousUL_RA_WithinCC_Lst_r10 nonContiguousUL_RA_WithinCC_Lst_r10;
} NhuPhyLyrParams_v1020;


typedef enum enumNhuCA_BandwidthClass_r10
{
 NhuCA_BandwidthClass_r10aEnum,
 NhuCA_BandwidthClass_r10bEnum,
 NhuCA_BandwidthClass_r10cEnum,
 NhuCA_BandwidthClass_r10dEnum,
 NhuCA_BandwidthClass_r10eEnum,
 NhuCA_BandwidthClass_r10fEnum
} EnumNhuCA_BandwidthClass_r10;
typedef TknU32 NhuCA_BandwidthClass_r10;


typedef enum enumNhuMIMO_CapUL_r10
{
 NhuMIMO_CapUL_r10twoLyrsEnum,
 NhuMIMO_CapUL_r10fourLyrsEnum
} EnumNhuMIMO_CapUL_r10;
typedef TknU32 NhuMIMO_CapUL_r10;

typedef struct NhuCA_MIMO_ParamsUL_r10
{
 TknPres pres;
 NhuCA_BandwidthClass_r10 ca_BandwidthClassUL_r10;
 NhuMIMO_CapUL_r10 supportedMIMO_CapUL_r10;
} NhuCA_MIMO_ParamsUL_r10;

typedef struct NhuBandParamsUL_r10
{
 TknU16 noComp;
 NhuCA_MIMO_ParamsUL_r10 *member;
}NhuBandParamsUL_r10;


typedef enum enumNhuMIMO_CapDL_r10
{
 NhuMIMO_CapDL_r10twoLyrsEnum,
 NhuMIMO_CapDL_r10fourLyrsEnum,
 NhuMIMO_CapDL_r10eightLyrsEnum
} EnumNhuMIMO_CapDL_r10;
typedef TknU32 NhuMIMO_CapDL_r10;

typedef struct NhuCA_MIMO_ParamsDL_r10
{
 TknPres pres;
 NhuCA_BandwidthClass_r10 ca_BandwidthClassDL_r10;
 NhuMIMO_CapDL_r10 supportedMIMO_CapDL_r10;
} NhuCA_MIMO_ParamsDL_r10;

typedef struct NhuBandParamsDL_r10
{
 TknU16 noComp;
 NhuCA_MIMO_ParamsDL_r10 *member;
}NhuBandParamsDL_r10;

typedef struct NhuBandParams_r10
{
 TknPres pres;
 NhuFreqBandIndicator bandEUTRA_r10;
 NhuBandParamsUL_r10 bandParamsUL_r10;
 NhuBandParamsDL_r10 bandParamsDL_r10;
} NhuBandParams_r10;

typedef struct NhuBandCombinationParams_r10
{
 TknU16 noComp;
 NhuBandParams_r10 *member;
}NhuBandCombinationParams_r10;

typedef struct NhuSuppBandCombination_r10
{
 TknU16 noComp;
 NhuBandCombinationParams_r10 *member;
}NhuSuppBandCombination_r10;

typedef struct NhuRF_Params_v1020
{
 TknPres pres;
 NhuSuppBandCombination_r10 supportedBandCombination_r10;
} NhuRF_Params_v1020;

typedef struct NhuBandCombinationLstEUTRA_r10
{
 TknU16 noComp;
 NhuBandInfoEUTRA *member;
}NhuBandCombinationLstEUTRA_r10;

typedef struct NhuMeasParams_v1020
{
 TknPres pres;
 NhuBandCombinationLstEUTRA_r10 bandCombinationLstEUTRA_r10;
} NhuMeasParams_v1020;


typedef enum enumNhuIRAT_ParamsCDMA2000_1XRTT_v1020e_CSFB_dual_1XRTT_r10
{
 NhuIRAT_ParamsCDMA2000_1XRTT_v1020e_CSFB_dual_1XRTT_r10supportedEnum
} EnumNhuIRAT_ParamsCDMA2000_1XRTT_v1020e_CSFB_dual_1XRTT_r10;
typedef TknU32 NhuIRAT_ParamsCDMA2000_1XRTT_v1020e_CSFB_dual_1XRTT_r10;

typedef struct NhuIRAT_ParamsCDMA2000_1XRTT_v1020
{
 TknPres pres;
 NhuIRAT_ParamsCDMA2000_1XRTT_v1020e_CSFB_dual_1XRTT_r10 e_CSFB_dual_1XRTT_r10;
} NhuIRAT_ParamsCDMA2000_1XRTT_v1020;


typedef enum enumNhuUE_BasedNetwPerfMeasParams_r10loggedMeasurementsIdle_r10
{
 NhuUE_BasedNetwPerfMeasParams_r10loggedMeasurementsIdle_r10supportedEnum
} EnumNhuUE_BasedNetwPerfMeasParams_r10loggedMeasurementsIdle_r10;
typedef TknU32 NhuUE_BasedNetwPerfMeasParams_r10loggedMeasurementsIdle_r10;


typedef enum enumNhuUE_BasedNetwPerfMeasParams_r10standaloneGNSS_Loc_r10
{
 NhuUE_BasedNetwPerfMeasParams_r10standaloneGNSS_Loc_r10supportedEnum
} EnumNhuUE_BasedNetwPerfMeasParams_r10standaloneGNSS_Loc_r10;
typedef TknU32 NhuUE_BasedNetwPerfMeasParams_r10standaloneGNSS_Loc_r10;

typedef struct NhuUE_BasedNetwPerfMeasParams_r10
{
 TknPres pres;
 NhuUE_BasedNetwPerfMeasParams_r10loggedMeasurementsIdle_r10 loggedMeasurementsIdle_r10;
 NhuUE_BasedNetwPerfMeasParams_r10standaloneGNSS_Loc_r10 standaloneGNSS_Loc_r10;
} NhuUE_BasedNetwPerfMeasParams_r10;


typedef enum enumNhuIRAT_ParamsUTRA_TDD_v1020e_RedirectionUTRA_TDD_r10
{
 NhuIRAT_ParamsUTRA_TDD_v1020e_RedirectionUTRA_TDD_r10supportedEnum
} EnumNhuIRAT_ParamsUTRA_TDD_v1020e_RedirectionUTRA_TDD_r10;
typedef TknU32 NhuIRAT_ParamsUTRA_TDD_v1020e_RedirectionUTRA_TDD_r10;

typedef struct NhuIRAT_ParamsUTRA_TDD_v1020
{
 TknPres pres;
 NhuIRAT_ParamsUTRA_TDD_v1020e_RedirectionUTRA_TDD_r10 e_RedirectionUTRA_TDD_r10;
} NhuIRAT_ParamsUTRA_TDD_v1020;


typedef enum enumNhuOTDOA_PositioningCapabilities_r10otdoa_UE_Assisted_r10
{
 NhuOTDOA_PositioningCapabilities_r10otdoa_UE_Assisted_r10supportedEnum
} EnumNhuOTDOA_PositioningCapabilities_r10otdoa_UE_Assisted_r10;
typedef TknU32 NhuOTDOA_PositioningCapabilities_r10otdoa_UE_Assisted_r10;


typedef enum enumNhuOTDOA_PositioningCapabilities_r10interFreqRSTD_Measurement_r10
{
 NhuOTDOA_PositioningCapabilities_r10interFreqRSTD_Measurement_r10supportedEnum
} EnumNhuOTDOA_PositioningCapabilities_r10interFreqRSTD_Measurement_r10;
typedef TknU32 NhuOTDOA_PositioningCapabilities_r10interFreqRSTD_Measurement_r10;

typedef struct NhuOTDOA_PositioningCapabilities_r10
{
 TknPres pres;
 NhuOTDOA_PositioningCapabilities_r10otdoa_UE_Assisted_r10 otdoa_UE_Assisted_r10;
 NhuOTDOA_PositioningCapabilities_r10interFreqRSTD_Measurement_r10 interFreqRSTD_Measurement_r10;
} NhuOTDOA_PositioningCapabilities_r10;


typedef TknStrBSXL NhuUE_EUTRA_CapAddXDD_Mode_v1060featureGroupIndRel10_v1060;
typedef struct NhuUE_EUTRA_CapAddXDD_Mode_v1060extaddgrp_1
{
 TknPres pres;
 NhuOTDOA_PositioningCapabilities_r10 otdoa_PositioningCapabilities_r10;
} NhuUE_EUTRA_CapAddXDD_Mode_v1060extaddgrp_1;

typedef struct NhuUE_EUTRA_CapAddXDD_Mode_v1060
{
 TknPres pres;
 NhuPhyLyrParams_v1020 phyLyrParams_v1060;
 NhuUE_EUTRA_CapAddXDD_Mode_v1060featureGroupIndRel10_v1060 featureGroupIndRel10_v1060;
 NhuIRAT_ParamsCDMA2000_1XRTT_v1020 interRAT_ParamsCDMA2000_v1060;
 NhuIRAT_ParamsUTRA_TDD_v1020 interRAT_ParamsUTRA_TDD_v1060;
 NhuUE_EUTRA_CapAddXDD_Mode_v1060extaddgrp_1 extaddgrp_1;
} NhuUE_EUTRA_CapAddXDD_Mode_v1060;


typedef TknStrBSXL NhuSuppBandwidthCombinationSet_r10;
typedef struct NhuBandCombinationParamsExt_r10
{
 TknPres pres;
 NhuSuppBandwidthCombinationSet_r10 supportedBandwidthCombinationSet_r10;
} NhuBandCombinationParamsExt_r10;

typedef struct NhuSuppBandCombinationExt_r10
{
 TknU16 noComp;
 NhuBandCombinationParamsExt_r10 *member;
}NhuSuppBandCombinationExt_r10;

typedef struct NhuRF_Params_v1060
{
 TknPres pres;
 NhuSuppBandCombinationExt_r10 supportedBandCombinationExt_r10;
} NhuRF_Params_v1060;

typedef struct NhuBandParams_v1090
{
 TknPres pres;
 NhuFreqBandIndicator_v9e0 bandEUTRA_v1090;
} NhuBandParams_v1090;

typedef struct NhuBandCombinationParams_v1090
{
 TknU16 noComp;
 NhuBandParams_v1090 *member;
}NhuBandCombinationParams_v1090;

typedef struct NhuSuppBandCombination_v1090
{
 TknU16 noComp;
 NhuBandCombinationParams_v1090 *member;
}NhuSuppBandCombination_v1090;

typedef struct NhuRF_Params_v1090
{
 TknPres pres;
 NhuSuppBandCombination_v1090 supportedBandCombination_v1090;
} NhuRF_Params_v1090;


typedef enum enumNhuPDCP_Params_v1130pdcp_SN_Extn_r11
{
 NhuPDCP_Params_v1130pdcp_SN_Extn_r11supportedEnum
} EnumNhuPDCP_Params_v1130pdcp_SN_Extn_r11;
typedef TknU32 NhuPDCP_Params_v1130pdcp_SN_Extn_r11;


typedef enum enumNhuPDCP_Params_v1130supportRohcCtxtContinue_r11
{
 NhuPDCP_Params_v1130supportRohcCtxtContinue_r11supportedEnum
} EnumNhuPDCP_Params_v1130supportRohcCtxtContinue_r11;
typedef TknU32 NhuPDCP_Params_v1130supportRohcCtxtContinue_r11;

typedef struct NhuPDCP_Params_v1130
{
 TknPres pres;
 NhuPDCP_Params_v1130pdcp_SN_Extn_r11 pdcp_SN_Extn_r11;
 NhuPDCP_Params_v1130supportRohcCtxtContinue_r11 supportRohcCtxtContinue_r11;
} NhuPDCP_Params_v1130;


typedef enum enumNhuPhyLyrParams_v1130crs_InterfHandl_r11
{
 NhuPhyLyrParams_v1130crs_InterfHandl_r11supportedEnum
} EnumNhuPhyLyrParams_v1130crs_InterfHandl_r11;
typedef TknU32 NhuPhyLyrParams_v1130crs_InterfHandl_r11;


typedef enum enumNhuPhyLyrParams_v1130ePDCCH_r11
{
 NhuPhyLyrParams_v1130ePDCCH_r11supportedEnum
} EnumNhuPhyLyrParams_v1130ePDCCH_r11;
typedef TknU32 NhuPhyLyrParams_v1130ePDCCH_r11;


typedef enum enumNhuPhyLyrParams_v1130multiACK_CSI_Rprtng_r11
{
 NhuPhyLyrParams_v1130multiACK_CSI_Rprtng_r11supportedEnum
} EnumNhuPhyLyrParams_v1130multiACK_CSI_Rprtng_r11;
typedef TknU32 NhuPhyLyrParams_v1130multiACK_CSI_Rprtng_r11;


typedef enum enumNhuPhyLyrParams_v1130ss_CCH_InterfHandl_r11
{
 NhuPhyLyrParams_v1130ss_CCH_InterfHandl_r11supportedEnum
} EnumNhuPhyLyrParams_v1130ss_CCH_InterfHandl_r11;
typedef TknU32 NhuPhyLyrParams_v1130ss_CCH_InterfHandl_r11;


typedef enum enumNhuPhyLyrParams_v1130tdd_SpecialSubfrm_r11
{
 NhuPhyLyrParams_v1130tdd_SpecialSubfrm_r11supportedEnum
} EnumNhuPhyLyrParams_v1130tdd_SpecialSubfrm_r11;
typedef TknU32 NhuPhyLyrParams_v1130tdd_SpecialSubfrm_r11;


typedef enum enumNhuPhyLyrParams_v1130txDiv_PUCCH1b_ChSelect_r11
{
 NhuPhyLyrParams_v1130txDiv_PUCCH1b_ChSelect_r11supportedEnum
} EnumNhuPhyLyrParams_v1130txDiv_PUCCH1b_ChSelect_r11;
typedef TknU32 NhuPhyLyrParams_v1130txDiv_PUCCH1b_ChSelect_r11;


typedef enum enumNhuPhyLyrParams_v1130ul_CoMP_r11
{
 NhuPhyLyrParams_v1130ul_CoMP_r11supportedEnum
} EnumNhuPhyLyrParams_v1130ul_CoMP_r11;
typedef TknU32 NhuPhyLyrParams_v1130ul_CoMP_r11;

typedef struct NhuPhyLyrParams_v1130
{
 TknPres pres;
 NhuPhyLyrParams_v1130crs_InterfHandl_r11 crs_InterfHandl_r11;
 NhuPhyLyrParams_v1130ePDCCH_r11 ePDCCH_r11;
 NhuPhyLyrParams_v1130multiACK_CSI_Rprtng_r11 multiACK_CSI_Rprtng_r11;
 NhuPhyLyrParams_v1130ss_CCH_InterfHandl_r11 ss_CCH_InterfHandl_r11;
 NhuPhyLyrParams_v1130tdd_SpecialSubfrm_r11 tdd_SpecialSubfrm_r11;
 NhuPhyLyrParams_v1130txDiv_PUCCH1b_ChSelect_r11 txDiv_PUCCH1b_ChSelect_r11;
 NhuPhyLyrParams_v1130ul_CoMP_r11 ul_CoMP_r11;
} NhuPhyLyrParams_v1130;


typedef enum enumNhuBandParams_v1130supportedCSI_Proc_r11
{
 NhuBandParams_v1130supportedCSI_Proc_r11n1Enum,
 NhuBandParams_v1130supportedCSI_Proc_r11n3Enum,
 NhuBandParams_v1130supportedCSI_Proc_r11n4Enum
} EnumNhuBandParams_v1130supportedCSI_Proc_r11;
typedef TknU32 NhuBandParams_v1130supportedCSI_Proc_r11;

typedef struct NhuBandParams_v1130
{
 TknPres pres;
 NhuBandParams_v1130supportedCSI_Proc_r11 supportedCSI_Proc_r11;
} NhuBandParams_v1130;


typedef enum enumNhuBandCombinationParams_v1130multipleTimingAdvance_r11
{
 NhuBandCombinationParams_v1130multipleTimingAdvance_r11supportedEnum
} EnumNhuBandCombinationParams_v1130multipleTimingAdvance_r11;
typedef TknU32 NhuBandCombinationParams_v1130multipleTimingAdvance_r11;


typedef enum enumNhuBandCombinationParams_v1130simultaneousRx_Tx_r11
{
 NhuBandCombinationParams_v1130simultaneousRx_Tx_r11supportedEnum
} EnumNhuBandCombinationParams_v1130simultaneousRx_Tx_r11;
typedef TknU32 NhuBandCombinationParams_v1130simultaneousRx_Tx_r11;

typedef struct NhuBandCombinationParams_v1130bandParameterLst_r11
{
 TknU16 noComp;
 NhuBandParams_v1130 *member;
}NhuBandCombinationParams_v1130bandParameterLst_r11;

typedef struct NhuBandCombinationParams_v1130
{
 TknPres pres;
 NhuBandCombinationParams_v1130multipleTimingAdvance_r11 multipleTimingAdvance_r11;
 NhuBandCombinationParams_v1130simultaneousRx_Tx_r11 simultaneousRx_Tx_r11;
 NhuBandCombinationParams_v1130bandParameterLst_r11 bandParameterLst_r11;
} NhuBandCombinationParams_v1130;

typedef struct NhuSuppBandCombination_v1130
{
 TknU16 noComp;
 NhuBandCombinationParams_v1130 *member;
}NhuSuppBandCombination_v1130;

typedef struct NhuRF_Params_v1130
{
 TknPres pres;
 NhuSuppBandCombination_v1130 supportedBandCombination_v1130;
} NhuRF_Params_v1130;


typedef enum enumNhuMeasParams_v1130rsrqMeasWideband_r11
{
 NhuMeasParams_v1130rsrqMeasWideband_r11supportedEnum
} EnumNhuMeasParams_v1130rsrqMeasWideband_r11;
typedef TknU32 NhuMeasParams_v1130rsrqMeasWideband_r11;

typedef struct NhuMeasParams_v1130
{
 TknPres pres;
 NhuMeasParams_v1130rsrqMeasWideband_r11 rsrqMeasWideband_r11;
} NhuMeasParams_v1130;


typedef enum enumNhuIRAT_ParamsCDMA2000_v1130cdma2000_NW_Sharing_r11
{
 NhuIRAT_ParamsCDMA2000_v1130cdma2000_NW_Sharing_r11supportedEnum
} EnumNhuIRAT_ParamsCDMA2000_v1130cdma2000_NW_Sharing_r11;
typedef TknU32 NhuIRAT_ParamsCDMA2000_v1130cdma2000_NW_Sharing_r11;

typedef struct NhuIRAT_ParamsCDMA2000_v1130
{
 TknPres pres;
 NhuIRAT_ParamsCDMA2000_v1130cdma2000_NW_Sharing_r11 cdma2000_NW_Sharing_r11;
} NhuIRAT_ParamsCDMA2000_v1130;


typedef enum enumNhuOther_Params_r11inDeviceCoexInd_r11
{
 NhuOther_Params_r11inDeviceCoexInd_r11supportedEnum
} EnumNhuOther_Params_r11inDeviceCoexInd_r11;
typedef TknU32 NhuOther_Params_r11inDeviceCoexInd_r11;


typedef enum enumNhuOther_Params_r11powerPrefInd_r11
{
 NhuOther_Params_r11powerPrefInd_r11supportedEnum
} EnumNhuOther_Params_r11powerPrefInd_r11;
typedef TknU32 NhuOther_Params_r11powerPrefInd_r11;


typedef enum enumNhuOther_Params_r11ue_Rx_TxTimeDiffMeasurements_r11
{
 NhuOther_Params_r11ue_Rx_TxTimeDiffMeasurements_r11supportedEnum
} EnumNhuOther_Params_r11ue_Rx_TxTimeDiffMeasurements_r11;
typedef TknU32 NhuOther_Params_r11ue_Rx_TxTimeDiffMeasurements_r11;

typedef struct NhuOther_Params_r11
{
 TknPres pres;
 NhuOther_Params_r11inDeviceCoexInd_r11 inDeviceCoexInd_r11;
 NhuOther_Params_r11powerPrefInd_r11 powerPrefInd_r11;
 NhuOther_Params_r11ue_Rx_TxTimeDiffMeasurements_r11 ue_Rx_TxTimeDiffMeasurements_r11;
} NhuOther_Params_r11;

typedef struct NhuUE_EUTRA_CapAddXDD_Mode_v1130
{
 TknPres pres;
 NhuPhyLyrParams_v1130 phyLyrParams_v1130;
 NhuMeasParams_v1130 measParams_v1130;
 NhuOther_Params_r11 otherParams_r11;
} NhuUE_EUTRA_CapAddXDD_Mode_v1130;


typedef TknStrBSXL NhuPhyLyrParams_v1170interBandTDD_CA_WithDifferentConfig_r11;
typedef struct NhuPhyLyrParams_v1170
{
 TknPres pres;
 NhuPhyLyrParams_v1170interBandTDD_CA_WithDifferentConfig_r11 interBandTDD_CA_WithDifferentConfig_r11;
} NhuPhyLyrParams_v1170;


typedef enum enumNhuBandParams_r11supportedCSI_Proc_r11
{
 NhuBandParams_r11supportedCSI_Proc_r11n1Enum,
 NhuBandParams_r11supportedCSI_Proc_r11n3Enum,
 NhuBandParams_r11supportedCSI_Proc_r11n4Enum
} EnumNhuBandParams_r11supportedCSI_Proc_r11;
typedef TknU32 NhuBandParams_r11supportedCSI_Proc_r11;

typedef struct NhuBandParams_r11
{
 TknPres pres;
 NhuFreqBandIndicator_r11 bandEUTRA_r11;
 NhuBandParamsUL_r10 bandParamsUL_r11;
 NhuBandParamsDL_r10 bandParamsDL_r11;
 NhuBandParams_r11supportedCSI_Proc_r11 supportedCSI_Proc_r11;
} NhuBandParams_r11;

typedef struct NhuBandCombinationParams_r11bandParameterLst_r11
{
 TknU16 noComp;
 NhuBandParams_r11 *member;
}NhuBandCombinationParams_r11bandParameterLst_r11;


typedef enum enumNhuBandCombinationParams_r11multipleTimingAdvance_r11
{
 NhuBandCombinationParams_r11multipleTimingAdvance_r11supportedEnum
} EnumNhuBandCombinationParams_r11multipleTimingAdvance_r11;
typedef TknU32 NhuBandCombinationParams_r11multipleTimingAdvance_r11;


typedef enum enumNhuBandCombinationParams_r11simultaneousRx_Tx_r11
{
 NhuBandCombinationParams_r11simultaneousRx_Tx_r11supportedEnum
} EnumNhuBandCombinationParams_r11simultaneousRx_Tx_r11;
typedef TknU32 NhuBandCombinationParams_r11simultaneousRx_Tx_r11;

typedef struct NhuBandCombinationParams_r11
{
 TknPres pres;
 NhuBandCombinationParams_r11bandParameterLst_r11 bandParameterLst_r11;
 NhuSuppBandwidthCombinationSet_r10 supportedBandwidthCombinationSet_r11;
 NhuBandCombinationParams_r11multipleTimingAdvance_r11 multipleTimingAdvance_r11;
 NhuBandCombinationParams_r11simultaneousRx_Tx_r11 simultaneousRx_Tx_r11;
 NhuBandInfoEUTRA bandInfoEUTRA_r11;
} NhuBandCombinationParams_r11;

typedef struct NhuSuppBandCombinationAdd_r11
{
 TknU16 noComp;
 NhuBandCombinationParams_r11 *member;
}NhuSuppBandCombinationAdd_r11;


typedef enum enumNhuRF_Params_v1180freqBandRetrieval_r11
{
 NhuRF_Params_v1180freqBandRetrieval_r11supportedEnum
} EnumNhuRF_Params_v1180freqBandRetrieval_r11;
typedef TknU32 NhuRF_Params_v1180freqBandRetrieval_r11;

typedef struct NhuRF_Params_v1180requestedBands_r11
{
 TknU16 noComp;
 NhuFreqBandIndicator_r11 *member;
}NhuRF_Params_v1180requestedBands_r11;

typedef struct NhuRF_Params_v1180
{
 TknPres pres;
 NhuRF_Params_v1180freqBandRetrieval_r11 freqBandRetrieval_r11;
 NhuRF_Params_v1180requestedBands_r11 requestedBands_r11;
 NhuSuppBandCombinationAdd_r11 supportedBandCombinationAdd_r11;
} NhuRF_Params_v1180;


typedef enum enumNhuMBMS_Params_r11mbms_SCell_r11
{
 NhuMBMS_Params_r11mbms_SCell_r11supportedEnum
} EnumNhuMBMS_Params_r11mbms_SCell_r11;
typedef TknU32 NhuMBMS_Params_r11mbms_SCell_r11;


typedef enum enumNhuMBMS_Params_r11mbms_NonServingCell_r11
{
 NhuMBMS_Params_r11mbms_NonServingCell_r11supportedEnum
} EnumNhuMBMS_Params_r11mbms_NonServingCell_r11;
typedef TknU32 NhuMBMS_Params_r11mbms_NonServingCell_r11;

typedef struct NhuMBMS_Params_r11
{
 TknPres pres;
 NhuMBMS_Params_r11mbms_SCell_r11 mbms_SCell_r11;
 NhuMBMS_Params_r11mbms_NonServingCell_r11 mbms_NonServingCell_r11;
} NhuMBMS_Params_r11;

typedef struct NhuUE_EUTRA_CapAddXDD_Mode_v1180
{
 TknPres pres;
 NhuMBMS_Params_r11 mbms_Params_r11;
} NhuUE_EUTRA_CapAddXDD_Mode_v1180;


typedef enum enumNhuMeasParams_v11a0benefitsFromInterruption_r11
{
 NhuMeasParams_v11a0benefitsFromInterruption_r11trueEnum
} EnumNhuMeasParams_v11a0benefitsFromInterruption_r11;
typedef TknU32 NhuMeasParams_v11a0benefitsFromInterruption_r11;

typedef struct NhuMeasParams_v11a0
{
 TknPres pres;
 NhuMeasParams_v11a0benefitsFromInterruption_r11 benefitsFromInterruption_r11;
} NhuMeasParams_v11a0;


typedef TknU32 NhuUE_EUTRA_Cap_v11a0_IEsue_Category_v11a0;

typedef struct NhuUE_EUTRA_Cap_v11a0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUE_EUTRA_Cap_v11a0_IEsnonCriticalExtn;

typedef struct NhuUE_EUTRA_Cap_v11a0_IEs
{
 TknPres pres;
 NhuUE_EUTRA_Cap_v11a0_IEsue_Category_v11a0 ue_Category_v11a0;
 NhuMeasParams_v11a0 measParams_v11a0;
 NhuUE_EUTRA_Cap_v11a0_IEsnonCriticalExtn nonCriticalExtn;
} NhuUE_EUTRA_Cap_v11a0_IEs;

typedef struct NhuUE_EUTRA_Cap_v1180_IEs
{
 TknPres pres;
 NhuRF_Params_v1180 rf_Params_v1180;
 NhuMBMS_Params_r11 mbms_Params_r11;
 NhuUE_EUTRA_CapAddXDD_Mode_v1180 fdd_Add_UE_EUTRA_Capabilities_v1180;
 NhuUE_EUTRA_CapAddXDD_Mode_v1180 tdd_Add_UE_EUTRA_Capabilities_v1180;
 NhuUE_EUTRA_Cap_v11a0_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v1180_IEs;


typedef TknU32 NhuUE_EUTRA_Cap_v1170_IEsue_Category_v1170;

typedef struct NhuUE_EUTRA_Cap_v1170_IEs
{
 TknPres pres;
 NhuPhyLyrParams_v1170 phyLyrParams_v1170;
 NhuUE_EUTRA_Cap_v1170_IEsue_Category_v1170 ue_Category_v1170;
 NhuUE_EUTRA_Cap_v1180_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v1170_IEs;

typedef struct NhuUE_EUTRA_Cap_v1130_IEs
{
 TknPres pres;
 NhuPDCP_Params_v1130 pdcp_Params_v1130;
 NhuPhyLyrParams_v1130 phyLyrParams_v1130;
 NhuRF_Params_v1130 rf_Params_v1130;
 NhuMeasParams_v1130 measParams_v1130;
 NhuIRAT_ParamsCDMA2000_v1130 interRAT_ParamsCDMA2000_v1130;
 NhuOther_Params_r11 otherParams_r11;
 NhuUE_EUTRA_CapAddXDD_Mode_v1130 fdd_Add_UE_EUTRA_Capabilities_v1130;
 NhuUE_EUTRA_CapAddXDD_Mode_v1130 tdd_Add_UE_EUTRA_Capabilities_v1130;
 NhuUE_EUTRA_Cap_v1170_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v1130_IEs;

typedef struct NhuUE_EUTRA_Cap_v1090_IEs
{
 TknPres pres;
 NhuRF_Params_v1090 rf_Params_v1090;
 NhuUE_EUTRA_Cap_v1130_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v1090_IEs;

typedef struct NhuUE_EUTRA_Cap_v1060_IEs
{
 TknPres pres;
 NhuUE_EUTRA_CapAddXDD_Mode_v1060 fdd_Add_UE_EUTRA_Capabilities_v1060;
 NhuUE_EUTRA_CapAddXDD_Mode_v1060 tdd_Add_UE_EUTRA_Capabilities_v1060;
 NhuRF_Params_v1060 rf_Params_v1060;
 NhuUE_EUTRA_Cap_v1090_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v1060_IEs;


typedef TknU32 NhuUE_EUTRA_Cap_v1020_IEsue_Category_v1020;


typedef TknStrBSXL NhuUE_EUTRA_Cap_v1020_IEsfeatureGroupIndRel10_r10;
typedef struct NhuUE_EUTRA_Cap_v1020_IEs
{
 TknPres pres;
 NhuUE_EUTRA_Cap_v1020_IEsue_Category_v1020 ue_Category_v1020;
 NhuPhyLyrParams_v1020 phyLyrParams_v1020;
 NhuRF_Params_v1020 rf_Params_v1020;
 NhuMeasParams_v1020 measParams_v1020;
 NhuUE_EUTRA_Cap_v1020_IEsfeatureGroupIndRel10_r10 featureGroupIndRel10_r10;
 NhuIRAT_ParamsCDMA2000_1XRTT_v1020 interRAT_ParamsCDMA2000_v1020;
 NhuUE_BasedNetwPerfMeasParams_r10 ue_BasedNetwPerfMeasParams_r10;
 NhuIRAT_ParamsUTRA_TDD_v1020 interRAT_ParamsUTRA_TDD_v1020;
 NhuUE_EUTRA_Cap_v1060_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v1020_IEs;


typedef TknStrOSXL NhuUE_EUTRA_Cap_v940_IEslateNonCriticalExtn;
typedef struct NhuUE_EUTRA_Cap_v940_IEs
{
 TknPres pres;
 NhuUE_EUTRA_Cap_v940_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUE_EUTRA_Cap_v1020_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v940_IEs;


typedef enum enumNhuUE_EUTRA_Cap_v920_IEsdeviceTyp_r9
{
 NhuUE_EUTRA_Cap_v920_IEsdeviceTyp_r9noBenFromBatConsumpOptEnum
} EnumNhuUE_EUTRA_Cap_v920_IEsdeviceTyp_r9;
typedef TknU32 NhuUE_EUTRA_Cap_v920_IEsdeviceTyp_r9;

typedef struct NhuUE_EUTRA_Cap_v920_IEs
{
 TknPres pres;
 NhuPhyLyrParams_v920 phyLyrParams_v920;
 NhuIRAT_ParamsGERAN_v920 interRAT_ParamsGERAN_v920;
 NhuIRAT_ParamsUTRA_v920 interRAT_ParamsUTRA_v920;
 NhuIRAT_ParamsCDMA2000_1XRTT_v920 interRAT_ParamsCDMA2000_v920;
 NhuUE_EUTRA_Cap_v920_IEsdeviceTyp_r9 deviceTyp_r9;
 NhuCSG_ProximityIndParams_r9 csg_ProximityIndParams_r9;
 NhuNeighCellSI_AcquisitionParams_r9 neighCellSI_AcquisitionParams_r9;
 NhuSON_Params_r9 son_Params_r9;
 NhuUE_EUTRA_Cap_v940_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v920_IEs;


typedef TknU32 NhuUE_EUTRA_Capue_Category;


typedef TknStrBSXL NhuUE_EUTRA_CapfeatureGroupIndicators;
typedef struct NhuUE_EUTRA_CapinterRAT_Params
{
 TknPres pres;
 NhuIRAT_ParamsUTRA_FDD utraFDD;
 NhuIRAT_ParamsUTRA_TDD128 utraTDD128;
 NhuIRAT_ParamsUTRA_TDD384 utraTDD384;
 NhuIRAT_ParamsUTRA_TDD768 utraTDD768;
 NhuIRAT_ParamsGERAN geran;
 NhuIRAT_ParamsCDMA2000_HRPD cdma2000_HRPD;
 NhuIRAT_ParamsCDMA2000_1XRTT cdma2000_1xRTT;
} NhuUE_EUTRA_CapinterRAT_Params;

typedef struct NhuUE_EUTRA_Cap
{
 TknPres pres;
 NhuAccessStratumRls accessStratumRls;
 NhuUE_EUTRA_Capue_Category ue_Category;
 NhuPDCP_Params pdcp_Params;
 NhuPhyLyrParams phyLyrParams;
 NhuRF_Params rf_Params;
 NhuMeasParams measParams;
 NhuUE_EUTRA_CapfeatureGroupIndicators featureGroupIndicators;
 NhuUE_EUTRA_CapinterRAT_Params interRAT_Params;
 NhuUE_EUTRA_Cap_v920_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap;


typedef TknStrBSXL NhuUE_EUTRA_CapAddXDD_Mode_r9featureGroupIndicators_r9;

typedef TknStrBSXL NhuUE_EUTRA_CapAddXDD_Mode_r9featureGroupIndRel9Add_r9;
typedef struct NhuUE_EUTRA_CapAddXDD_Mode_r9
{
 TknPres pres;
 NhuPhyLyrParams phyLyrParams_r9;
 NhuUE_EUTRA_CapAddXDD_Mode_r9featureGroupIndicators_r9 featureGroupIndicators_r9;
 NhuUE_EUTRA_CapAddXDD_Mode_r9featureGroupIndRel9Add_r9 featureGroupIndRel9Add_r9;
 NhuIRAT_ParamsGERAN interRAT_ParamsGERAN_r9;
 NhuIRAT_ParamsUTRA_v920 interRAT_ParamsUTRA_r9;
 NhuIRAT_ParamsCDMA2000_1XRTT_v920 interRAT_ParamsCDMA2000_r9;
 NhuNeighCellSI_AcquisitionParams_r9 neighCellSI_AcquisitionParams_r9;
} NhuUE_EUTRA_CapAddXDD_Mode_r9;


typedef enum enumNhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_FDD_r9
{
 NhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_FDD_r9supportedEnum
} EnumNhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_FDD_r9;
typedef TknU32 NhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_FDD_r9;


typedef enum enumNhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_TDD128_r9
{
 NhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_TDD128_r9supportedEnum
} EnumNhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_TDD128_r9;
typedef TknU32 NhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_TDD128_r9;


typedef enum enumNhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToUTRA_FDD_r9
{
 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToUTRA_FDD_r9supportedEnum
} EnumNhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToUTRA_FDD_r9;
typedef TknU32 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToUTRA_FDD_r9;


typedef enum enumNhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToGERAN_r9
{
 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToGERAN_r9supportedEnum
} EnumNhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToGERAN_r9;
typedef TknU32 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToGERAN_r9;


typedef enum enumNhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToUTRA_TDD128_r9
{
 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToUTRA_TDD128_r9supportedEnum
} EnumNhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToUTRA_TDD128_r9;
typedef TknU32 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToUTRA_TDD128_r9;


typedef enum enumNhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToGERAN_r9
{
 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToGERAN_r9supportedEnum
} EnumNhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToGERAN_r9;
typedef TknU32 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToGERAN_r9;

typedef struct NhuIRAT_ParamsUTRA_v9c0
{
 TknPres pres;
 NhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_FDD_r9 voiceOverPS_HS_UTRA_FDD_r9;
 NhuIRAT_ParamsUTRA_v9c0voiceOverPS_HS_UTRA_TDD128_r9 voiceOverPS_HS_UTRA_TDD128_r9;
 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToUTRA_FDD_r9 srvcc_FromUTRA_FDD_ToUTRA_FDD_r9;
 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_FDD_ToGERAN_r9 srvcc_FromUTRA_FDD_ToGERAN_r9;
 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToUTRA_TDD128_r9 srvcc_FromUTRA_TDD128_ToUTRA_TDD128_r9;
 NhuIRAT_ParamsUTRA_v9c0srvcc_FromUTRA_TDD128_ToGERAN_r9 srvcc_FromUTRA_TDD128_ToGERAN_r9;
} NhuIRAT_ParamsUTRA_v9c0;


typedef enum enumNhuPhyLyrParams_v9d0tm5_FDD_r9
{
 NhuPhyLyrParams_v9d0tm5_FDD_r9supportedEnum
} EnumNhuPhyLyrParams_v9d0tm5_FDD_r9;
typedef TknU32 NhuPhyLyrParams_v9d0tm5_FDD_r9;


typedef enum enumNhuPhyLyrParams_v9d0tm5_TDD_r9
{
 NhuPhyLyrParams_v9d0tm5_TDD_r9supportedEnum
} EnumNhuPhyLyrParams_v9d0tm5_TDD_r9;
typedef TknU32 NhuPhyLyrParams_v9d0tm5_TDD_r9;

typedef struct NhuPhyLyrParams_v9d0
{
 TknPres pres;
 NhuPhyLyrParams_v9d0tm5_FDD_r9 tm5_FDD_r9;
 NhuPhyLyrParams_v9d0tm5_TDD_r9 tm5_TDD_r9;
} NhuPhyLyrParams_v9d0;

typedef struct NhuSuppBandEUTRA_v9e0
{
 TknPres pres;
 NhuFreqBandIndicator_v9e0 bandEUTRA_v9e0;
} NhuSuppBandEUTRA_v9e0;

typedef struct NhuSuppBandLstEUTRA_v9e0
{
 TknU16 noComp;
 NhuSuppBandEUTRA_v9e0 *member;
}NhuSuppBandLstEUTRA_v9e0;

typedef struct NhuRF_Params_v9e0
{
 TknPres pres;
 NhuSuppBandLstEUTRA_v9e0 supportedBandLstEUTRA_v9e0;
} NhuRF_Params_v9e0;


typedef enum enumNhuIRAT_ParamsUTRA_v9h0mfbi_UTRA_r9
{
 NhuIRAT_ParamsUTRA_v9h0mfbi_UTRA_r9supportedEnum
} EnumNhuIRAT_ParamsUTRA_v9h0mfbi_UTRA_r9;
typedef TknU32 NhuIRAT_ParamsUTRA_v9h0mfbi_UTRA_r9;

typedef struct NhuIRAT_ParamsUTRA_v9h0
{
 TknPres pres;
 NhuIRAT_ParamsUTRA_v9h0mfbi_UTRA_r9 mfbi_UTRA_r9;
} NhuIRAT_ParamsUTRA_v9h0;


typedef TknStrBSXL NhuRF_Params_v10f0modifiedMPR_Behavior_r10;
typedef struct NhuRF_Params_v10f0
{
 TknPres pres;
 NhuRF_Params_v10f0modifiedMPR_Behavior_r10 modifiedMPR_Behavior_r10;
} NhuRF_Params_v10f0;

typedef struct NhuUE_EUTRA_Cap_v10f0_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUE_EUTRA_Cap_v10f0_IEsnonCriticalExtn;

typedef struct NhuUE_EUTRA_Cap_v10f0_IEs
{
 TknPres pres;
 NhuRF_Params_v10f0 rf_Params_v10f0;
 NhuUE_EUTRA_Cap_v10f0_IEsnonCriticalExtn nonCriticalExtn;
} NhuUE_EUTRA_Cap_v10f0_IEs;

typedef struct NhuUE_EUTRA_Cap_v10c0_IEs
{
 TknPres pres;
 NhuOTDOA_PositioningCapabilities_r10 otdoa_PositioningCapabilities_r10;
 NhuUE_EUTRA_Cap_v10f0_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v10c0_IEs;


typedef TknStrOSXL NhuUE_EUTRA_Cap_v9h0_IEslateNonCriticalExtn;
typedef struct NhuUE_EUTRA_Cap_v9h0_IEs
{
 TknPres pres;
 NhuIRAT_ParamsUTRA_v9h0 interRAT_ParamsUTRA_v9h0;
 NhuUE_EUTRA_Cap_v9h0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuUE_EUTRA_Cap_v10c0_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v9h0_IEs;

typedef struct NhuUE_EUTRA_Cap_v9e0_IEs
{
 TknPres pres;
 NhuRF_Params_v9e0 rf_Params_v9e0;
 NhuUE_EUTRA_Cap_v9h0_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v9e0_IEs;

typedef struct NhuUE_EUTRA_Cap_v9d0_IEs
{
 TknPres pres;
 NhuPhyLyrParams_v9d0 phyLyrParams_v9d0;
 NhuUE_EUTRA_Cap_v9e0_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v9d0_IEs;

typedef struct NhuUE_EUTRA_Cap_v9c0_IEs
{
 TknPres pres;
 NhuIRAT_ParamsUTRA_v9c0 interRAT_ParamsUTRA_v9c0;
 NhuUE_EUTRA_Cap_v9d0_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v9c0_IEs;


typedef TknStrBSXL NhuUE_EUTRA_Cap_v9a0_IEsfeatureGroupIndRel9Add_r9;
typedef struct NhuUE_EUTRA_Cap_v9a0_IEs
{
 TknPres pres;
 NhuUE_EUTRA_Cap_v9a0_IEsfeatureGroupIndRel9Add_r9 featureGroupIndRel9Add_r9;
 NhuUE_EUTRA_CapAddXDD_Mode_r9 fdd_Add_UE_EUTRA_Capabilities_r9;
 NhuUE_EUTRA_CapAddXDD_Mode_r9 tdd_Add_UE_EUTRA_Capabilities_r9;
 NhuUE_EUTRA_Cap_v9c0_IEs nonCriticalExtn;
} NhuUE_EUTRA_Cap_v9a0_IEs;

typedef struct NhuVarConnEstFailReport_r11
{
 TknPres pres;
 NhuConnEstFailReport_r11 connEstFailReport_r11;
 NhuPLMN_Identity plmn_Identity_r11;
} NhuVarConnEstFailReport_r11;

typedef struct NhuVarLogMeasConfig_r10
{
 TknPres pres;
 NhuAreaCfg_r10 areaCfg_r10;
 NhuLoggingDuration_r10 loggingDuration_r10;
 NhuLoggingInterval_r10 loggingInterval_r10;
} NhuVarLogMeasConfig_r10;

typedef struct NhuVarLogMeasConfig_r11
{
 TknPres pres;
 NhuAreaCfg_r10 areaCfg_r10;
 NhuAreaCfg_v1130 areaCfg_v1130;
 NhuLoggingDuration_r10 loggingDuration_r10;
 NhuLoggingInterval_r10 loggingInterval_r10;
} NhuVarLogMeasConfig_r11;

typedef struct NhuLogMeasInfoLst2_r10
{
 TknU16 noComp;
 NhuLogMeasInfo_r10 *member;
}NhuLogMeasInfoLst2_r10;


typedef TknStrOSXL NhuVarLogMeasReport_r10traceRecordingSessionRef_r10;

typedef TknStrOSXL NhuVarLogMeasReport_r10tce_Id_r10;
typedef struct NhuVarLogMeasReport_r10
{
 TknPres pres;
 NhuTraceReference_r10 traceReference_r10;
 NhuVarLogMeasReport_r10traceRecordingSessionRef_r10 traceRecordingSessionRef_r10;
 NhuVarLogMeasReport_r10tce_Id_r10 tce_Id_r10;
 NhuPLMN_Identity plmn_Identity_r10;
 NhuAbsoluteTimeInfo_r10 absoluteTimeInfo_r10;
 NhuLogMeasInfoLst2_r10 logMeasInfoLst_r10;
} NhuVarLogMeasReport_r10;


typedef TknStrOSXL NhuVarLogMeasReport_r11traceRecordingSessionRef_r10;

typedef TknStrOSXL NhuVarLogMeasReport_r11tce_Id_r10;
typedef struct NhuVarLogMeasReport_r11
{
 TknPres pres;
 NhuTraceReference_r10 traceReference_r10;
 NhuVarLogMeasReport_r11traceRecordingSessionRef_r10 traceRecordingSessionRef_r10;
 NhuVarLogMeasReport_r11tce_Id_r10 tce_Id_r10;
 NhuPLMN_IdentityLst3_r11 plmn_IdentityLst_r11;
 NhuAbsoluteTimeInfo_r10 absoluteTimeInfo_r10;
 NhuLogMeasInfoLst2_r10 logMeasInfoLst_r10;
} NhuVarLogMeasReport_r11;


typedef TknS32 NhuVarMeasConfigs_Measure;

typedef struct NhuVarMeasConfigspeedStateParssetup
{
 TknPres pres;
 NhuMobilityStateParams mobilityStateParams;
 NhuSpeedStateScaleFactors timeToTrigger_SF;
} NhuVarMeasConfigspeedStateParssetup;

typedef struct NhuVarMeasConfigspeedStatePars
{
 TknU8 choice;
 union {
  NhuVarMeasConfigspeedStateParssetup setup;
 } val;
} NhuVarMeasConfigspeedStatePars;


typedef TknU8 NhuVarMeasConfigallowInterruptions_r11;

typedef struct NhuVarMeasConfig
{
 TknPres pres;
 NhuMeasIdToAddModLst measIdLst;
 NhuMeasObjectToAddModLst measObjectLst;
 NhuMeasObjectToAddModLst_v9e0 measObjectLst_v9i0;
 NhuReportConfigToAddModLst reportConfigLst;
 NhuQuantityConfig quantityConfig;
 NhuVarMeasConfigs_Measure s_Measure;
 NhuVarMeasConfigspeedStatePars speedStatePars;
 NhuVarMeasConfigallowInterruptions_r11 allowInterruptions_r11;
} NhuVarMeasConfig;

typedef struct NhuCellsTriggeredLstMemberphysCellIdUTRA
{
 TknU8 choice;
 union {
  NhuPhysCellIdUTRA_FDD fdd;
  NhuPhysCellIdUTRA_TDD tdd;
 } val;
} NhuCellsTriggeredLstMemberphysCellIdUTRA;

typedef struct NhuCellsTriggeredLstMemberphysCellIdGERAN
{
 TknPres pres;
 NhuCarrierFreqGERAN carrierFreq;
 NhuPhysCellIdGERAN physCellId;
} NhuCellsTriggeredLstMemberphysCellIdGERAN;

typedef struct NhuCellsTriggeredLstMember
{
 TknU8 choice;
 union {
  NhuPhysCellId physCellIdEUTRA;
  NhuCellsTriggeredLstMemberphysCellIdUTRA physCellIdUTRA;
  NhuCellsTriggeredLstMemberphysCellIdGERAN physCellIdGERAN;
  NhuPhysCellIdCDMA2000 physCellIdCDMA2000;
 } val;
} NhuCellsTriggeredLstMember;

typedef struct NhuCellsTriggeredLst
{
 TknU16 noComp;
 NhuCellsTriggeredLstMember *member;
}NhuCellsTriggeredLst;


typedef TknS32 NhuVarMeasReportnumberOfReportsSent;

typedef struct NhuVarMeasReport
{
 TknPres pres;
 NhuMeasId measId;
 NhuCellsTriggeredLst cellsTriggeredLst;
 NhuVarMeasReportnumberOfReportsSent numberOfReportsSent;
} NhuVarMeasReport;

typedef struct NhuVarMeasReportLst
{
 TknU16 noComp;
 NhuVarMeasReport *member;
}NhuVarMeasReportLst;

typedef struct NhuVarRLF_Report_r10
{
 TknPres pres;
 NhuRLF_Report_r9 rlf_Report_r10;
 NhuPLMN_Identity plmn_Identity_r10;
} NhuVarRLF_Report_r10;

typedef struct NhuVarRLF_Report_r11
{
 TknPres pres;
 NhuRLF_Report_r9 rlf_Report_r10;
 NhuPLMN_IdentityLst3_r11 plmn_IdentityLst_r11;
} NhuVarRLF_Report_r11;

typedef struct NhuVarShortMAC_Input
{
 TknPres pres;
 NhuCellIdentity cellIdentity;
 NhuPhysCellId physCellId;
 NhuC_RNTI c_RNTI;
} NhuVarShortMAC_Input;


typedef TknStrOSXL NhuHovrCmd_r8_IEshandoverCmdMsg;
typedef struct NhuHovrCmd_r8_IEsnonCriticalExtn
{
 TknPres pres;
} NhuHovrCmd_r8_IEsnonCriticalExtn;

typedef struct NhuHovrCmd_r8_IEs
{
 TknPres pres;
 NhuHovrCmd_r8_IEshandoverCmdMsg handoverCmdMsg;
 NhuHovrCmd_r8_IEsnonCriticalExtn nonCriticalExtn;
} NhuHovrCmd_r8_IEs;

typedef struct NhuHovrCmdcriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuHovrCmd_r8_IEs handoverCmd_r8;
 } val;
} NhuHovrCmdcriticalExtnsc1;

typedef struct NhuHovrCmdcriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuHovrCmdcriticalExtnscriticalExtnsFuture;

typedef struct NhuHovrCmdcriticalExtns
{
 TknU8 choice;
 union {
  NhuHovrCmdcriticalExtnsc1 c1;
  NhuHovrCmdcriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuHovrCmdcriticalExtns;

typedef struct NhuHovrCmd
{
 TknPres pres;
 NhuHovrCmdcriticalExtns criticalExtns;
} NhuHovrCmd;


typedef TknStrOSXL NhuAS_Configextaddgrp_1sourceSysInfoBlockTyp1Ext;
typedef struct NhuAS_Configextaddgrp_1
{
 TknPres pres;
 NhuAS_Configextaddgrp_1sourceSysInfoBlockTyp1Ext sourceSysInfoBlockTyp1Ext;
 NhuOtherConfig_r9 sourceOtherConfig_r9;
} NhuAS_Configextaddgrp_1;

typedef struct NhuAS_Configextaddgrp_2
{
 TknPres pres;
 NhuSCellToAddModLst_r10 sourceSCellConfigLst_r10;
} NhuAS_Configextaddgrp_2;

typedef struct NhuAS_Config
{
 TknPres pres;
 NhuMeasConfig sourceMeasConfig;
 NhuRadioResourceConfigDedicated sourceRadioResourceConfig;
 NhuSecAlgorithmConfig sourceSecAlgorithmConfig;
 NhuC_RNTI sourceUE_Identity;
 NhuMasterInfoBlock sourceMasterInfoBlock;
 NhuSysInfoBlockTyp1 sourceSysInfoBlockTyp1;
 NhuSysInfoBlockTyp2 sourceSysInfoBlockTyp2;
 NhuAntennaInfoCmn antennaInfoCmn;
 NhuARFCN_ValueEUTRA sourceDl_CarrierFreq;
 NhuAS_Configextaddgrp_1 extaddgrp_1;
 NhuAS_Configextaddgrp_2 extaddgrp_2;
} NhuAS_Config;

typedef struct NhuCandidateCellInfo_r10extaddgrp_1
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 dl_CarrierFreq_v1090;
} NhuCandidateCellInfo_r10extaddgrp_1;

typedef struct NhuCandidateCellInfo_r10
{
 TknPres pres;
 NhuPhysCellId physCellId_r10;
 NhuARFCN_ValueEUTRA dl_CarrierFreq_r10;
 NhuRSRP_Range rsrpResult_r10;
 NhuRSRQ_Range rsrqResult_r10;
 NhuCandidateCellInfo_r10extaddgrp_1 extaddgrp_1;
} NhuCandidateCellInfo_r10;

typedef struct NhuCandidateCellInfoLst_r10
{
 TknU16 noComp;
 NhuCandidateCellInfo_r10 *member;
}NhuCandidateCellInfoLst_r10;


typedef enum enumNhuRRM_Configue_InactiveTime
{
 NhuRRM_Configue_InactiveTimes1Enum,
 NhuRRM_Configue_InactiveTimes2Enum,
 NhuRRM_Configue_InactiveTimes3Enum,
 NhuRRM_Configue_InactiveTimes5Enum,
 NhuRRM_Configue_InactiveTimes7Enum,
 NhuRRM_Configue_InactiveTimes10Enum,
 NhuRRM_Configue_InactiveTimes15Enum,
 NhuRRM_Configue_InactiveTimes20Enum,
 NhuRRM_Configue_InactiveTimes25Enum,
 NhuRRM_Configue_InactiveTimes30Enum,
 NhuRRM_Configue_InactiveTimes40Enum,
 NhuRRM_Configue_InactiveTimes50Enum,
 NhuRRM_Configue_InactiveTimemin1Enum,
 NhuRRM_Configue_InactiveTimemin1s20cEnum,
 NhuRRM_Configue_InactiveTimemin1s40Enum,
 NhuRRM_Configue_InactiveTimemin2Enum,
 NhuRRM_Configue_InactiveTimemin2s30Enum,
 NhuRRM_Configue_InactiveTimemin3Enum,
 NhuRRM_Configue_InactiveTimemin3s30Enum,
 NhuRRM_Configue_InactiveTimemin4Enum,
 NhuRRM_Configue_InactiveTimemin5Enum,
 NhuRRM_Configue_InactiveTimemin6Enum,
 NhuRRM_Configue_InactiveTimemin7Enum,
 NhuRRM_Configue_InactiveTimemin8Enum,
 NhuRRM_Configue_InactiveTimemin9Enum,
 NhuRRM_Configue_InactiveTimemin10Enum,
 NhuRRM_Configue_InactiveTimemin12Enum,
 NhuRRM_Configue_InactiveTimemin14Enum,
 NhuRRM_Configue_InactiveTimemin17Enum,
 NhuRRM_Configue_InactiveTimemin20Enum,
 NhuRRM_Configue_InactiveTimemin24Enum,
 NhuRRM_Configue_InactiveTimemin28Enum,
 NhuRRM_Configue_InactiveTimemin33Enum,
 NhuRRM_Configue_InactiveTimemin38Enum,
 NhuRRM_Configue_InactiveTimemin44Enum,
 NhuRRM_Configue_InactiveTimemin50Enum,
 NhuRRM_Configue_InactiveTimehr1Enum,
 NhuRRM_Configue_InactiveTimehr1min30Enum,
 NhuRRM_Configue_InactiveTimehr2Enum,
 NhuRRM_Configue_InactiveTimehr2min30Enum,
 NhuRRM_Configue_InactiveTimehr3Enum,
 NhuRRM_Configue_InactiveTimehr3min30Enum,
 NhuRRM_Configue_InactiveTimehr4Enum,
 NhuRRM_Configue_InactiveTimehr5Enum,
 NhuRRM_Configue_InactiveTimehr6Enum,
 NhuRRM_Configue_InactiveTimehr8Enum,
 NhuRRM_Configue_InactiveTimehr10Enum,
 NhuRRM_Configue_InactiveTimehr13Enum,
 NhuRRM_Configue_InactiveTimehr16Enum,
 NhuRRM_Configue_InactiveTimehr20Enum,
 NhuRRM_Configue_InactiveTimeday1Enum,
 NhuRRM_Configue_InactiveTimeday1hr12Enum,
 NhuRRM_Configue_InactiveTimeday2Enum,
 NhuRRM_Configue_InactiveTimeday2hr12Enum,
 NhuRRM_Configue_InactiveTimeday3Enum,
 NhuRRM_Configue_InactiveTimeday4Enum,
 NhuRRM_Configue_InactiveTimeday5Enum,
 NhuRRM_Configue_InactiveTimeday7Enum,
 NhuRRM_Configue_InactiveTimeday10Enum,
 NhuRRM_Configue_InactiveTimeday14Enum,
 NhuRRM_Configue_InactiveTimeday19Enum,
 NhuRRM_Configue_InactiveTimeday24Enum,
 NhuRRM_Configue_InactiveTimeday30Enum,
 NhuRRM_Configue_InactiveTimedayMoreThan30Enum
} EnumNhuRRM_Configue_InactiveTime;
typedef TknU32 NhuRRM_Configue_InactiveTime;

typedef struct NhuRRM_Configextaddgrp_1
{
 TknPres pres;
 NhuCandidateCellInfoLst_r10 candidateCellInfoLst_r10;
} NhuRRM_Configextaddgrp_1;

typedef struct NhuRRM_Config
{
 TknPres pres;
 NhuRRM_Configue_InactiveTime ue_InactiveTime;
 NhuRRM_Configextaddgrp_1 extaddgrp_1;
} NhuRRM_Config;


typedef TknStrBSXL NhuKey_eNodeB_Star;
typedef struct NhuAdditionalReestabInfo
{
 TknPres pres;
 NhuCellIdentity cellIdentity;
 NhuKey_eNodeB_Star key_eNodeB_Star;
 NhuShortMAC_I shortMAC_I;
} NhuAdditionalReestabInfo;

typedef struct NhuAdditionalReestabInfoLst
{
 TknU16 noComp;
 NhuAdditionalReestabInfo *member;
}NhuAdditionalReestabInfoLst;

typedef struct NhuReestbInfo
{
 TknPres pres;
 NhuPhysCellId sourcePhysCellId;
 NhuShortMAC_I targetCellShortMAC_I;
 NhuAdditionalReestabInfoLst additionalReestabInfoLst;
} NhuReestbInfo;

typedef struct NhuAS_Ctxt
{
 TknPres pres;
 NhuReestbInfo reestablishmentInfo;
} NhuAS_Ctxt;

typedef struct NhuAS_Config_v9e0
{
 TknPres pres;
 NhuARFCN_ValueEUTRA_v9e0 sourceDl_CarrierFreq_v9e0;
} NhuAS_Config_v9e0;


typedef TknStrOSXL NhuAS_Ctxt_v1130idc_Ind_r11;

typedef TknStrOSXL NhuAS_Ctxt_v1130mbmsInterestInd_r11;

typedef TknStrOSXL NhuAS_Ctxt_v1130powerPrefInd_r11;
typedef struct NhuAS_Ctxt_v1130
{
 TknPres pres;
 NhuAS_Ctxt_v1130idc_Ind_r11 idc_Ind_r11;
 NhuAS_Ctxt_v1130mbmsInterestInd_r11 mbmsInterestInd_r11;
 NhuAS_Ctxt_v1130powerPrefInd_r11 powerPrefInd_r11;
} NhuAS_Ctxt_v1130;

typedef struct NhuHovrPrepInfo_v1130_IEsnonCriticalExtn
{
 TknPres pres;
} NhuHovrPrepInfo_v1130_IEsnonCriticalExtn;

typedef struct NhuHovrPrepInfo_v1130_IEs
{
 TknPres pres;
 NhuAS_Ctxt_v1130 as_Ctxt_v1130;
 NhuHovrPrepInfo_v1130_IEsnonCriticalExtn nonCriticalExtn;
} NhuHovrPrepInfo_v1130_IEs;

typedef struct NhuHovrPrepInfo_v9e0_IEs
{
 TknPres pres;
 NhuAS_Config_v9e0 as_Config_v9e0;
 NhuHovrPrepInfo_v1130_IEs nonCriticalExtn;
} NhuHovrPrepInfo_v9e0_IEs;


typedef TknStrOSXL NhuHovrPrepInfo_v9d0_IEslateNonCriticalExtn;
typedef struct NhuHovrPrepInfo_v9d0_IEs
{
 TknPres pres;
 NhuHovrPrepInfo_v9d0_IEslateNonCriticalExtn lateNonCriticalExtn;
 NhuHovrPrepInfo_v9e0_IEs nonCriticalExtn;
} NhuHovrPrepInfo_v9d0_IEs;


typedef enum enumNhuHovrPrepInfo_v920_IEsue_ConfigRls_r9
{
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9rel9Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9rel10Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9rel11Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9spare5Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9spare4Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9spare3Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9spare2Enum,
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9spare1Enum
} EnumNhuHovrPrepInfo_v920_IEsue_ConfigRls_r9;
typedef TknU32 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9;

typedef struct NhuHovrPrepInfo_v920_IEs
{
 TknPres pres;
 NhuHovrPrepInfo_v920_IEsue_ConfigRls_r9 ue_ConfigRls_r9;
 NhuHovrPrepInfo_v9d0_IEs nonCriticalExtn;
} NhuHovrPrepInfo_v920_IEs;

typedef struct NhuHovrPrepInfo_r8_IEs
{
 TknPres pres;
 NhuUE_CapRAT_ContLst ue_RadioAccessCapInfo;
 NhuAS_Config as_Config;
 NhuRRM_Config rrm_Config;
 NhuAS_Ctxt as_Ctxt;
 NhuHovrPrepInfo_v920_IEs nonCriticalExtn;
} NhuHovrPrepInfo_r8_IEs;

typedef struct NhuHovrPrepInfocriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuHovrPrepInfo_r8_IEs handoverPrepInfo_r8;
 } val;
} NhuHovrPrepInfocriticalExtnsc1;

typedef struct NhuHovrPrepInfocriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuHovrPrepInfocriticalExtnscriticalExtnsFuture;

typedef struct NhuHovrPrepInfocriticalExtns
{
 TknU8 choice;
 union {
  NhuHovrPrepInfocriticalExtnsc1 c1;
  NhuHovrPrepInfocriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuHovrPrepInfocriticalExtns;

typedef struct NhuHovrPrepInfo
{
 TknPres pres;
 NhuHovrPrepInfocriticalExtns criticalExtns;
} NhuHovrPrepInfo;


typedef TknStrOSXL NhuUERadioAccessCapInfo_r8_IEsue_RadioAccessCapInfo;
typedef struct NhuUERadioAccessCapInfo_r8_IEsnonCriticalExtn
{
 TknPres pres;
} NhuUERadioAccessCapInfo_r8_IEsnonCriticalExtn;

typedef struct NhuUERadioAccessCapInfo_r8_IEs
{
 TknPres pres;
 NhuUERadioAccessCapInfo_r8_IEsue_RadioAccessCapInfo ue_RadioAccessCapInfo;
 NhuUERadioAccessCapInfo_r8_IEsnonCriticalExtn nonCriticalExtn;
} NhuUERadioAccessCapInfo_r8_IEs;

typedef struct NhuUERadioAccessCapInfocriticalExtnsc1
{
 TknU8 choice;
 union {
  NhuUERadioAccessCapInfo_r8_IEs ueRadioAccessCapInfo_r8;
 } val;
} NhuUERadioAccessCapInfocriticalExtnsc1;

typedef struct NhuUERadioAccessCapInfocriticalExtnscriticalExtnsFuture
{
 TknPres pres;
} NhuUERadioAccessCapInfocriticalExtnscriticalExtnsFuture;

typedef struct NhuUERadioAccessCapInfocriticalExtns
{
 TknU8 choice;
 union {
  NhuUERadioAccessCapInfocriticalExtnsc1 c1;
  NhuUERadioAccessCapInfocriticalExtnscriticalExtnsFuture criticalExtnsFuture;
 } val;
} NhuUERadioAccessCapInfocriticalExtns;

typedef struct NhuUERadioAccessCapInfo
{
 TknPres pres;
 NhuUERadioAccessCapInfocriticalExtns criticalExtns;
} NhuUERadioAccessCapInfo;
# 43 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_mblk.x" 1
# 44 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/cm_lte.x" 1
# 45 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x" 2

# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu_3gasn.x" 1
# 20 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu_3gasn.x"
typedef TknStrBSXL NhuAnsi_41_IDNNS;

typedef enum enumNhuCN_DomainIdentity
{
 NhuCN_DomainIdentitycs_domainEnum,
 NhuCN_DomainIdentityps_domainEnum
} EnumNhuCN_DomainIdentity;
typedef TknU32 NhuCN_DomainIdentity;


typedef TknStrOSXL NhuNAS_SysInfoGSM_MAP;
typedef struct NhuCN_DomainInfo
{
 TknPres pres;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuNAS_SysInfoGSM_MAP cn_DomainSpecificNAS_Info;
} NhuCN_DomainInfo;


typedef TknU32 NhuCN_DRX_CycleLengthCoefficient;

typedef struct NhuCN_DomainInfoFull
{
 TknPres pres;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuNAS_SysInfoGSM_MAP cn_DomainSpecificNAS_Info;
 NhuCN_DRX_CycleLengthCoefficient cn_DRX_CycleLengthCoeff;
} NhuCN_DomainInfoFull;

typedef struct NhuCN_DomainInfoLst
{
 TknU16 noComp;
 NhuCN_DomainInfo *member;
}NhuCN_DomainInfoLst;

typedef struct NhuCN_DomainInfoLstFull
{
 TknU16 noComp;
 NhuCN_DomainInfoFull *member;
}NhuCN_DomainInfoLstFull;


typedef TknStrBSXL NhuANSI_41_NAS_Parameter;

typedef NhuANSI_41_NAS_Parameter NhuNAS_SysInfoANSI_41;
typedef struct NhuCN_DomainSysInfocn_Typ
{
 TknU8 choice;
 union {
  NhuNAS_SysInfoGSM_MAP gsm_MAP;
  NhuNAS_SysInfoANSI_41 ansi_41;
 } val;
} NhuCN_DomainSysInfocn_Typ;

typedef struct NhuCN_DomainSysInfo
{
 TknPres pres;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuCN_DomainSysInfocn_Typ cn_Typ;
 NhuCN_DRX_CycleLengthCoefficient cn_DRX_CycleLengthCoeff;
} NhuCN_DomainSysInfo;

typedef struct NhuCN_DomainSysInfoLst
{
 TknU16 noComp;
 NhuCN_DomainSysInfo *member;
}NhuCN_DomainSysInfoLst;


typedef TknU32 NhuDigit;


typedef struct NhuCN_InfoInfo
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLst cn_DomainInfoLst;
} NhuCN_InfoInfo;

typedef struct NhuCN_InfoInfo_r6
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLst cn_DomainInfoLst;
 NhuPLMN_Identity primary_plmn_Identity;
} NhuCN_InfoInfo_r6;

typedef struct NhuCN_InfoInfoFull
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLstFull cn_DomainInfoLstFull;
} NhuCN_InfoInfoFull;


typedef TknS32 NhuEc_N0forANRec_N0;

typedef struct NhuEc_N0forANR
{
 TknPres pres;
 NhuEc_N0forANRec_N0 ec_N0;
} NhuEc_N0forANR;


typedef TknStrBSXL NhuRoutingParameter;
typedef struct NhuGsm_map_IDNNSroutingbasislocalPTMSI
{
 TknPres pres;
 NhuRoutingParameter routingparameter;
} NhuGsm_map_IDNNSroutingbasislocalPTMSI;

typedef struct NhuGsm_map_IDNNSroutingbasistMSIofsamePLMN
{
 TknPres pres;
 NhuRoutingParameter routingparameter;
} NhuGsm_map_IDNNSroutingbasistMSIofsamePLMN;

typedef struct NhuGsm_map_IDNNSroutingbasistMSIofdifferentPLMN
{
 TknPres pres;
 NhuRoutingParameter routingparameter;
} NhuGsm_map_IDNNSroutingbasistMSIofdifferentPLMN;

typedef struct NhuGsm_map_IDNNSroutingbasisiMSIresponsetopaging
{
 TknPres pres;
 NhuRoutingParameter routingparameter;
} NhuGsm_map_IDNNSroutingbasisiMSIresponsetopaging;

typedef struct NhuGsm_map_IDNNSroutingbasisiMSIcauseUEinitiatedEvent
{
 TknPres pres;
 NhuRoutingParameter routingparameter;
} NhuGsm_map_IDNNSroutingbasisiMSIcauseUEinitiatedEvent;

typedef struct NhuGsm_map_IDNNSroutingbasisiMEI
{
 TknPres pres;
 NhuRoutingParameter routingparameter;
} NhuGsm_map_IDNNSroutingbasisiMEI;

typedef struct NhuGsm_map_IDNNSroutingbasisspare2
{
 TknPres pres;
 NhuRoutingParameter routingparameter;
} NhuGsm_map_IDNNSroutingbasisspare2;

typedef struct NhuGsm_map_IDNNSroutingbasisspare1
{
 TknPres pres;
 NhuRoutingParameter routingparameter;
} NhuGsm_map_IDNNSroutingbasisspare1;

typedef struct NhuGsm_map_IDNNSroutingbasis
{
 TknU8 choice;
 union {
  NhuGsm_map_IDNNSroutingbasislocalPTMSI localPTMSI;
  NhuGsm_map_IDNNSroutingbasistMSIofsamePLMN tMSIofsamePLMN;
  NhuGsm_map_IDNNSroutingbasistMSIofdifferentPLMN tMSIofdifferentPLMN;
  NhuGsm_map_IDNNSroutingbasisiMSIresponsetopaging iMSIresponsetopaging;
  NhuGsm_map_IDNNSroutingbasisiMSIcauseUEinitiatedEvent iMSIcauseUEinitiatedEvent;
  NhuGsm_map_IDNNSroutingbasisiMEI iMEI;
  NhuGsm_map_IDNNSroutingbasisspare2 spare2;
  NhuGsm_map_IDNNSroutingbasisspare1 spare1;
 } val;
} NhuGsm_map_IDNNSroutingbasis;


typedef TknU8 NhuGsm_map_IDNNSdummy;

typedef struct NhuGsm_map_IDNNS
{
 TknPres pres;
 NhuGsm_map_IDNNSroutingbasis routingbasis;
 NhuGsm_map_IDNNSdummy dummy;
} NhuGsm_map_IDNNS;


typedef TknU32 NhuIMEI_Digit;

typedef struct NhuIMEI
{
 TknU16 noComp;
 NhuIMEI_Digit *member;
}NhuIMEI;

typedef struct NhuIMSI_GSM_MAP
{
 TknU16 noComp;
 NhuDigit *member;
}NhuIMSI_GSM_MAP;

typedef struct NhuIntraDomainNasNodeSelectorversionrelease99cn_Typ
{
 TknU8 choice;
 union {
  NhuGsm_map_IDNNS gsm_Map_IDNNS;
  NhuAnsi_41_IDNNS ansi_41_IDNNS;
 } val;
} NhuIntraDomainNasNodeSelectorversionrelease99cn_Typ;

typedef struct NhuIntraDomainNasNodeSelectorversionrelease99
{
 TknPres pres;
 NhuIntraDomainNasNodeSelectorversionrelease99cn_Typ cn_Typ;
} NhuIntraDomainNasNodeSelectorversionrelease99;


typedef TknStrBSXL NhuIntraDomainNasNodeSelectorversionlaterfuturecoding;
typedef struct NhuIntraDomainNasNodeSelectorversionlater
{
 TknPres pres;
 NhuIntraDomainNasNodeSelectorversionlaterfuturecoding futurecoding;
} NhuIntraDomainNasNodeSelectorversionlater;

typedef struct NhuIntraDomainNasNodeSelectorversion
{
 TknU8 choice;
 union {
  NhuIntraDomainNasNodeSelectorversionrelease99 release99;
  NhuIntraDomainNasNodeSelectorversionlater later;
 } val;
} NhuIntraDomainNasNodeSelectorversion;

typedef struct NhuIntraDomainNasNodeSelector
{
 TknPres pres;
 NhuIntraDomainNasNodeSelectorversion version;
} NhuIntraDomainNasNodeSelector;


typedef TknStrBSXL NhuLAIlac;
typedef struct NhuLAI
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuLAIlac lac;
} NhuLAI;


typedef enum enumNhuAccessClassBarred
{
 NhuAccessClassBarredbarredEnum,
 NhuAccessClassBarrednotBarredEnum
} EnumNhuAccessClassBarred;
typedef TknU32 NhuAccessClassBarred;

typedef struct NhuLocRegistrationAccessClassBarredLst
{
 TknU16 noComp;
 NhuAccessClassBarred *member;
}NhuLocRegistrationAccessClassBarredLst;

typedef struct NhuLocRegistrationParams
{
 TknU8 choice;
 union {
  NhuLocRegistrationAccessClassBarredLst restriction;
 } val;
} NhuLocRegistrationParams;

typedef struct NhuPLMN_IdentityWithOptionalMCC_r6
{
 TknPres pres;
 NhuMCC mcc;
 NhuMNC mnc;
} NhuPLMN_IdentityWithOptionalMCC_r6;


typedef TknU8 NhuMultiplePLMN_Lst_r6mibPLMN_Identity;

typedef struct NhuMultiplePLMN_Lst_r6multiplePLMNs
{
 TknU16 noComp;
 NhuPLMN_IdentityWithOptionalMCC_r6 *member;
}NhuMultiplePLMN_Lst_r6multiplePLMNs;

typedef struct NhuMultiplePLMN_Lst_r6
{
 TknPres pres;
 NhuMultiplePLMN_Lst_r6mibPLMN_Identity mibPLMN_Identity;
 NhuMultiplePLMN_Lst_r6multiplePLMNs multiplePLMNs;
} NhuMultiplePLMN_Lst_r6;


typedef TknStrOSXL NhuNAS_Msg;

typedef TknStrBSXL NhuNAS_Synchronisation_Indicator;

typedef TknStrBSXL NhuP_TMSI_GSM_MAP;

typedef enum enumNhuPagPermissionWithAccessCntrlParamspagingRspRestrnIndicator
{
 NhuPagPermissionWithAccessCntrlParamspagingRspRestrnIndicatorallEnum,
 NhuPagPermissionWithAccessCntrlParamspagingRspRestrnIndicatorcSEnum,
 NhuPagPermissionWithAccessCntrlParamspagingRspRestrnIndicatorpSEnum,
 NhuPagPermissionWithAccessCntrlParamspagingRspRestrnIndicatornoneEnum
} EnumNhuPagPermissionWithAccessCntrlParamspagingRspRestrnIndicator;
typedef TknU32 NhuPagPermissionWithAccessCntrlParamspagingRspRestrnIndicator;


typedef enum enumNhuPagPermissionWithAccessCntrlParamslocationRegistrationRestrnIndicator
{
 NhuPagPermissionWithAccessCntrlParamslocationRegistrationRestrnIndicatorallEnum,
 NhuPagPermissionWithAccessCntrlParamslocationRegistrationRestrnIndicatorcSEnum,
 NhuPagPermissionWithAccessCntrlParamslocationRegistrationRestrnIndicatorpSEnum
} EnumNhuPagPermissionWithAccessCntrlParamslocationRegistrationRestrnIndicator;
typedef TknU32 NhuPagPermissionWithAccessCntrlParamslocationRegistrationRestrnIndicator;

typedef struct NhuPagPermissionWithAccessCntrlParams
{
 TknPres pres;
 NhuPagPermissionWithAccessCntrlParamspagingRspRestrnIndicator pagingRspRestrnIndicator;
 NhuPagPermissionWithAccessCntrlParamslocationRegistrationRestrnIndicator locationRegistrationRestrnIndicator;
 NhuLocRegistrationParams locationRegistration;
} NhuPagPermissionWithAccessCntrlParams;

typedef struct NhuPagPermissionWithAccessCntrlLst
{
 TknPres pres;
 NhuPagPermissionWithAccessCntrlParams pagingPermissionWithAccessCntrlParamsForOperator1;
 NhuPagPermissionWithAccessCntrlParams pagingPermissionWithAccessCntrlParamsForOperator2;
 NhuPagPermissionWithAccessCntrlParams pagingPermissionWithAccessCntrlParamsForOperator3;
 NhuPagPermissionWithAccessCntrlParams pagingPermissionWithAccessCntrlParamsForOperator4;
 NhuPagPermissionWithAccessCntrlParams pagingPermissionWithAccessCntrlParamsForOperator5;
} NhuPagPermissionWithAccessCntrlLst;

typedef struct NhuPagPermissionWithAccessCntrlForSharedNw
{
 TknU8 choice;
 union {
  NhuPagPermissionWithAccessCntrlLst pagingPermissionWithAccessCntrlLst;
  NhuPagPermissionWithAccessCntrlParams pagingPermissionWithAccessCntrlForAll;
 } val;
} NhuPagPermissionWithAccessCntrlForSharedNw;


typedef enum enumNhuPagRecordTypID
{
 NhuPagRecordTypIDimsi_GSM_MAPEnum,
 NhuPagRecordTypIDtmsi_GSM_MAP_P_TMSIEnum,
 NhuPagRecordTypIDimsi_DS_41Enum,
 NhuPagRecordTypIDtmsi_DS_41Enum
} EnumNhuPagRecordTypID;
typedef TknU32 NhuPagRecordTypID;


typedef TknStrBSXL NhuP_REV;

typedef TknStrBSXL NhuMin_P_REV;

typedef TknStrBSXL NhuSID;

typedef TknStrBSXL NhuNID;
typedef struct NhuPLMN_Typgsm_MAP
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
} NhuPLMN_Typgsm_MAP;

typedef struct NhuPLMN_Typansi_41
{
 TknPres pres;
 NhuP_REV p_REV;
 NhuMin_P_REV min_P_REV;
 NhuSID sid;
 NhuNID nid;
} NhuPLMN_Typansi_41;

typedef struct NhuPLMN_Typgsm_MAP_and_ANSI_41
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuP_REV p_REV;
 NhuMin_P_REV min_P_REV;
 NhuSID sid;
 NhuNID nid;
} NhuPLMN_Typgsm_MAP_and_ANSI_41;

typedef struct NhuPLMN_Typ
{
 TknU8 choice;
 union {
  NhuPLMN_Typgsm_MAP gsm_MAP;
  NhuPLMN_Typansi_41 ansi_41;
  NhuPLMN_Typgsm_MAP_and_ANSI_41 gsm_MAP_and_ANSI_41;
 } val;
} NhuPLMN_Typ;


typedef TknStrBSXL NhuRAB_Identitygsm_MAP_RAB_Identity;

typedef TknStrBSXL NhuRAB_Identityansi_41_RAB_Identity;
typedef struct NhuRAB_Identity
{
 TknU8 choice;
 union {
  NhuRAB_Identitygsm_MAP_RAB_Identity gsm_MAP_RAB_Identity;
  NhuRAB_Identityansi_41_RAB_Identity ansi_41_RAB_Identity;
 } val;
} NhuRAB_Identity;


typedef TknStrBSXL NhuRoutingAreaCode;
typedef struct NhuRAI
{
 TknPres pres;
 NhuLAI lai;
 NhuRoutingAreaCode rac;
} NhuRAI;


typedef TknStrBSXL NhuTMSI_GSM_MAP;
typedef struct NhuAccessClassBarredLst
{
 TknU16 noComp;
 NhuAccessClassBarred *member;
}NhuAccessClassBarredLst;


typedef enum enumNhuAllowedIndicator
{
 NhuAllowedIndicatorallowedEnum,
 NhuAllowedIndicatornotAllowedEnum
} EnumNhuAllowedIndicator;
typedef TknU32 NhuAllowedIndicator;


typedef enum enumNhuT_Barred
{
 NhuT_Barreds10Enum,
 NhuT_Barreds20Enum,
 NhuT_Barreds40Enum,
 NhuT_Barreds80Enum,
 NhuT_Barreds160Enum,
 NhuT_Barreds320Enum,
 NhuT_Barreds640Enum,
 NhuT_Barreds1280Enum
} EnumNhuT_Barred;
typedef TknU32 NhuT_Barred;

typedef struct NhuCellBarredbarred
{
 TknPres pres;
 NhuAllowedIndicator intraFreqCellReselectionInd;
 NhuT_Barred t_Barred;
} NhuCellBarredbarred;

typedef struct NhuCellBarred
{
 TknU8 choice;
 union {
  NhuCellBarredbarred barred;
 } val;
} NhuCellBarred;


typedef enum enumNhuReservedIndicator
{
 NhuReservedIndicatorreservedEnum,
 NhuReservedIndicatornotReservedEnum
} EnumNhuReservedIndicator;
typedef TknU32 NhuReservedIndicator;

typedef struct NhuCellAccessRestrn
{
 TknPres pres;
 NhuCellBarred cellBarred;
 NhuReservedIndicator cellReservedForOperatorUse;
 NhuReservedIndicator cellReservationExtn;
 NhuAccessClassBarredLst accessClassBarredLst;
} NhuCellAccessRestrn;


typedef enum enumNhuCellAccessRestrn_v870extcellReservedForCSG
{
 NhuCellAccessRestrn_v870extcellReservedForCSGtrueEnum
} EnumNhuCellAccessRestrn_v870extcellReservedForCSG;
typedef TknU32 NhuCellAccessRestrn_v870extcellReservedForCSG;

typedef struct NhuCellAccessRestrn_v870ext
{
 TknPres pres;
 NhuCellAccessRestrn_v870extcellReservedForCSG cellReservedForCSG;
} NhuCellAccessRestrn_v870ext;


typedef struct NhuCellIdentity_PerRL_Lst
{
 TknU16 noComp;
 NhuCellIdentity *member;
}NhuCellIdentity_PerRL_Lst;


typedef enum enumNhuRAT
{
 NhuRATutra_FDDEnum,
 NhuRATutra_TDDEnum,
 NhuRATgsmEnum,
 NhuRATcdma2000Enum
} EnumNhuRAT;
typedef TknU32 NhuRAT;


typedef enum enumNhuMappingFunctionTyp
{
 NhuMappingFunctionTyplinearEnum,
 NhuMappingFunctionTypfunctionTyp2Enum,
 NhuMappingFunctionTypfunctionTyp3Enum,
 NhuMappingFunctionTypfunctionTyp4Enum
} EnumNhuMappingFunctionTyp;
typedef TknU32 NhuMappingFunctionTyp;


typedef TknU32 NhuMapParameter;


typedef TknU32 NhuUpperLimit;

typedef struct NhuMappingFunctionParameter
{
 TknPres pres;
 NhuMappingFunctionTyp functionTyp;
 NhuMapParameter mapParameter1;
 NhuMapParameter mapParameter2;
 NhuUpperLimit upperLimit;
} NhuMappingFunctionParameter;

typedef struct NhuMappingFunctionParameterLst
{
 TknU16 noComp;
 NhuMappingFunctionParameter *member;
}NhuMappingFunctionParameterLst;

typedef struct NhuMapping
{
 TknPres pres;
 NhuRAT rat;
 NhuMappingFunctionParameterLst mappingFunctionParameterLst;
} NhuMapping;

typedef struct NhuMappingInfo
{
 TknU16 noComp;
 NhuMapping *member;
}NhuMappingInfo;


typedef TknU32 NhuQ_Hyst_S;


typedef TknS32 NhuS_SearchQual;


typedef TknS32 NhuS_SearchRXLEV;


typedef enum enumNhuRAT_Id
{
 NhuRAT_IdgsmEnum,
 NhuRAT_Idcdma2000Enum
} EnumNhuRAT_Id;
typedef TknU32 NhuRAT_Id;

typedef struct NhuRAT_FDD_Info
{
 TknPres pres;
 NhuRAT_Id rat_Id;
 NhuS_SearchQual s_SearchRAT;
 NhuS_SearchRXLEV s_HCS_RAT;
 NhuS_SearchQual s_Limit_SearchRAT;
} NhuRAT_FDD_Info;

typedef struct NhuRAT_FDD_InfoLst
{
 TknU16 noComp;
 NhuRAT_FDD_Info *member;
}NhuRAT_FDD_InfoLst;


typedef TknS32 NhuQ_QualMin;


typedef TknS32 NhuQ_RxlevMin;

typedef struct NhuRAT_TDD_Info
{
 TknPres pres;
 NhuRAT_Id rat_Id;
 NhuS_SearchRXLEV s_SearchRAT;
 NhuS_SearchRXLEV s_HCS_RAT;
 NhuS_SearchRXLEV s_Limit_SearchRAT;
} NhuRAT_TDD_Info;

typedef struct NhuRAT_TDD_InfoLst
{
 TknU16 noComp;
 NhuRAT_TDD_Info *member;
}NhuRAT_TDD_InfoLst;


typedef TknU32 NhuT_Reselection_S;


typedef TknU32 NhuHCS_PRIO;


typedef TknU32 NhuQ_HCS;


typedef enum enumNhuT_CRMaxHyst
{
 NhuT_CRMaxHystnotUsedEnum,
 NhuT_CRMaxHystt10Enum,
 NhuT_CRMaxHystt20Enum,
 NhuT_CRMaxHystt30Enum,
 NhuT_CRMaxHystt40Enum,
 NhuT_CRMaxHystt50Enum,
 NhuT_CRMaxHystt60Enum,
 NhuT_CRMaxHystt70Enum
} EnumNhuT_CRMaxHyst;
typedef TknU32 NhuT_CRMaxHyst;


typedef TknU32 NhuN_CR_T_CRMaxHystn_CR;

typedef struct NhuN_CR_T_CRMaxHyst
{
 TknPres pres;
 NhuN_CR_T_CRMaxHystn_CR n_CR;
 NhuT_CRMaxHyst t_CRMaxHyst;
} NhuN_CR_T_CRMaxHyst;

typedef struct NhuT_CRMax
{
 TknU8 choice;
 union {
  NhuN_CR_T_CRMaxHyst t30;
  NhuN_CR_T_CRMaxHyst t60;
  NhuN_CR_T_CRMaxHyst t120;
  NhuN_CR_T_CRMaxHyst t180;
  NhuN_CR_T_CRMaxHyst t240;
 } val;
} NhuT_CRMax;

typedef struct NhuHCS_ServingCellInfo
{
 TknPres pres;
 NhuHCS_PRIO hcs_PRIO;
 NhuQ_HCS q_HCS;
 NhuT_CRMax t_CR_Max;
} NhuHCS_ServingCellInfo;


typedef TknS32 NhuMaxAllowedUL_TX_Power;

typedef struct NhuCellSelectReselectInfoSIB_3_4cellSelectQualityMeasurecpich_Ec_N0
{
 TknPres pres;
 NhuQ_Hyst_S q_HYST_2_S;
} NhuCellSelectReselectInfoSIB_3_4cellSelectQualityMeasurecpich_Ec_N0;

typedef struct NhuCellSelectReselectInfoSIB_3_4cellSelectQualityMeasure
{
 TknU8 choice;
 union {
  NhuCellSelectReselectInfoSIB_3_4cellSelectQualityMeasurecpich_Ec_N0 cpich_Ec_N0;
 } val;
} NhuCellSelectReselectInfoSIB_3_4cellSelectQualityMeasure;

typedef struct NhuCellSelectReselectInfoSIB_3_4modeSpecificInfofdd
{
 TknPres pres;
 NhuS_SearchQual s_Intrasearch;
 NhuS_SearchQual s_Intersearch;
 NhuS_SearchRXLEV s_SearchHCS;
 NhuRAT_FDD_InfoLst rat_Lst;
 NhuQ_QualMin q_QualMin;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_3_4modeSpecificInfofdd;

typedef struct NhuCellSelectReselectInfoSIB_3_4modeSpecificInfotdd
{
 TknPres pres;
 NhuS_SearchRXLEV s_Intrasearch;
 NhuS_SearchRXLEV s_Intersearch;
 NhuS_SearchRXLEV s_SearchHCS;
 NhuRAT_TDD_InfoLst rat_Lst;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_3_4modeSpecificInfotdd;

typedef struct NhuCellSelectReselectInfoSIB_3_4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellSelectReselectInfoSIB_3_4modeSpecificInfofdd fdd;
  NhuCellSelectReselectInfoSIB_3_4modeSpecificInfotdd tdd;
 } val;
} NhuCellSelectReselectInfoSIB_3_4modeSpecificInfo;

typedef struct NhuCellSelectReselectInfoSIB_3_4
{
 TknPres pres;
 NhuMappingInfo mappingInfo;
 NhuCellSelectReselectInfoSIB_3_4cellSelectQualityMeasure cellSelectQualityMeasure;
 NhuCellSelectReselectInfoSIB_3_4modeSpecificInfo modeSpecificInfo;
 NhuQ_Hyst_S q_Hyst_l_S;
 NhuT_Reselection_S t_Reselection_S;
 NhuHCS_ServingCellInfo hcs_ServingCellInfo;
 NhuMaxAllowedUL_TX_Power maxAllowedUL_TX_Power;
} NhuCellSelectReselectInfoSIB_3_4;


typedef TknU32 NhuUARFCN;

typedef struct NhuFrequencyInfoFDD
{
 TknPres pres;
 NhuUARFCN uarfcn_UL;
 NhuUARFCN uarfcn_DL;
} NhuFrequencyInfoFDD;

typedef struct NhuFrequencyInfoTDD
{
 TknPres pres;
 NhuUARFCN uarfcn_Nt;
} NhuFrequencyInfoTDD;

typedef struct NhuFrequencyInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuFrequencyInfoFDD fdd;
  NhuFrequencyInfoTDD tdd;
 } val;
} NhuFrequencyInfomodeSpecificInfo;

typedef struct NhuFrequencyInfo
{
 TknPres pres;
 NhuFrequencyInfomodeSpecificInfo modeSpecificInfo;
} NhuFrequencyInfo;

typedef struct NhuCSG_DedicatedFrequencyInfoLst
{
 TknU16 noComp;
 NhuFrequencyInfo *member;
}NhuCSG_DedicatedFrequencyInfoLst;


typedef TknU32 NhuCSG_PSCSplitInfostartPSC;


typedef enum enumNhuCSG_PSCSplitInfonumberOfPSCs
{
 NhuCSG_PSCSplitInfonumberOfPSCspsc5Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc10Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc15Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc20Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc30Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc40Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc50Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc64Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc80Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc120Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc160Enum,
 NhuCSG_PSCSplitInfonumberOfPSCspsc256Enum,
 NhuCSG_PSCSplitInfonumberOfPSCsalltheRestEnum,
 NhuCSG_PSCSplitInfonumberOfPSCsspare3Enum,
 NhuCSG_PSCSplitInfonumberOfPSCsspare2Enum,
 NhuCSG_PSCSplitInfonumberOfPSCsspare1Enum
} EnumNhuCSG_PSCSplitInfonumberOfPSCs;
typedef TknU32 NhuCSG_PSCSplitInfonumberOfPSCs;


typedef TknU32 NhuCSG_PSCSplitInfopscRange2Offset;

typedef struct NhuCSG_PSCSplitInfo
{
 TknPres pres;
 NhuCSG_PSCSplitInfostartPSC startPSC;
 NhuCSG_PSCSplitInfonumberOfPSCs numberOfPSCs;
 NhuCSG_PSCSplitInfopscRange2Offset pscRange2Offset;
} NhuCSG_PSCSplitInfo;

typedef struct NhuDomainSpecificAccessRestrn_v670extrestriction
{
 TknPres pres;
 NhuAccessClassBarredLst domainSpecficAccessClassBarredLst;
} NhuDomainSpecificAccessRestrn_v670extrestriction;

typedef struct NhuDomainSpecificAccessRestrn_v670ext
{
 TknU8 choice;
 union {
  NhuDomainSpecificAccessRestrn_v670extrestriction restriction;
 } val;
} NhuDomainSpecificAccessRestrn_v670ext;

typedef struct NhuDomainSpecificAccessRestrnParam_v670ext
{
 TknPres pres;
 NhuDomainSpecificAccessRestrn_v670ext cSDomainSpecificAccessRestrn;
 NhuDomainSpecificAccessRestrn_v670ext pSDomainSpecificAccessRestrn;
} NhuDomainSpecificAccessRestrnParam_v670ext;

typedef struct NhuDomainSpecificAccessRestrnLst_v670ext
{
 TknPres pres;
 NhuDomainSpecificAccessRestrnParam_v670ext domainSpecificAccessRestrnParamsForOperator1;
 NhuDomainSpecificAccessRestrnParam_v670ext domainSpecificAccessRestrnParamsForOperator2;
 NhuDomainSpecificAccessRestrnParam_v670ext domainSpecificAccessRestrnParamsForOperator3;
 NhuDomainSpecificAccessRestrnParam_v670ext domainSpecificAccessRestrnParamsForOperator4;
 NhuDomainSpecificAccessRestrnParam_v670ext domainSpecificAccessRestrnParamsForOperator5;
} NhuDomainSpecificAccessRestrnLst_v670ext;

typedef struct NhuDomainSpecificAccessRestrnForSharedNw_v670ext
{
 TknU8 choice;
 union {
  NhuDomainSpecificAccessRestrnLst_v670ext domainSpecificAccessRestictionLst;
  NhuDomainSpecificAccessRestrnParam_v670ext domainSpecificAccessRestictionParamsForAll;
 } val;
} NhuDomainSpecificAccessRestrnForSharedNw_v670ext;

typedef struct NhuMapping_LCR_r4
{
 TknPres pres;
 NhuMappingFunctionParameterLst mappingFunctionParameterLst;
} NhuMapping_LCR_r4;


typedef TknU32 NhuOccurrenceSequenceNumberOfPICH;


typedef enum enumNhuT_322
{
 NhuT_322m5Enum,
 NhuT_322m10Enum,
 NhuT_322m20Enum,
 NhuT_322m30Enum,
 NhuT_322m60Enum,
 NhuT_322m120Enum,
 NhuT_322m180Enum,
 NhuT_322spare1Enum
} EnumNhuT_322;
typedef TknU32 NhuT_322;


typedef TknU32 NhuEARFCN;


typedef TknU32 NhuBCCH_ARFCN;


typedef enum enumNhuGSM_CellGroupbandIndicator
{
 NhuGSM_CellGroupbandIndicatordcs1800Enum,
 NhuGSM_CellGroupbandIndicatorpcs1900Enum
} EnumNhuGSM_CellGroupbandIndicator;
typedef TknU32 NhuGSM_CellGroupbandIndicator;

typedef struct NhuGSM_CellGroupfollowingARFCNsexplicitLstOfARFCNs
{
 TknU16 noComp;
 NhuBCCH_ARFCN *member;
}NhuGSM_CellGroupfollowingARFCNsexplicitLstOfARFCNs;


typedef TknU32 NhuGSM_CellGroupfollowingARFCNsequallySpacedARFCNsarfcn_Spacing;


typedef TknU32 NhuGSM_CellGroupfollowingARFCNsequallySpacedARFCNsnumberOfFollowingARFCNs;

typedef struct NhuGSM_CellGroupfollowingARFCNsequallySpacedARFCNs
{
 TknPres pres;
 NhuGSM_CellGroupfollowingARFCNsequallySpacedARFCNsarfcn_Spacing arfcn_Spacing;
 NhuGSM_CellGroupfollowingARFCNsequallySpacedARFCNsnumberOfFollowingARFCNs numberOfFollowingARFCNs;
} NhuGSM_CellGroupfollowingARFCNsequallySpacedARFCNs;


typedef TknStrOSXL NhuGSM_CellGroupfollowingARFCNsvariableBitMapOfARFCNs;
typedef struct NhuGSM_CellGroupfollowingARFCNscontinuousRangeOfARFCNs
{
 TknPres pres;
 NhuBCCH_ARFCN endingARFCN;
} NhuGSM_CellGroupfollowingARFCNscontinuousRangeOfARFCNs;

typedef struct NhuGSM_CellGroupfollowingARFCNs
{
 TknU8 choice;
 union {
  NhuGSM_CellGroupfollowingARFCNsexplicitLstOfARFCNs explicitLstOfARFCNs;
  NhuGSM_CellGroupfollowingARFCNsequallySpacedARFCNs equallySpacedARFCNs;
  NhuGSM_CellGroupfollowingARFCNsvariableBitMapOfARFCNs variableBitMapOfARFCNs;
  NhuGSM_CellGroupfollowingARFCNscontinuousRangeOfARFCNs continuousRangeOfARFCNs;
 } val;
} NhuGSM_CellGroupfollowingARFCNs;

typedef struct NhuGSM_CellGroup
{
 TknPres pres;
 NhuBCCH_ARFCN startingARFCN;
 NhuGSM_CellGroupbandIndicator bandIndicator;
 NhuGSM_CellGroupfollowingARFCNs followingARFCNs;
} NhuGSM_CellGroup;


typedef TknU32 NhuPriorityLvlpriority;

typedef struct NhuPriorityLvlradioAccessTechnologyutraFDDMember
{
 TknPres pres;
 NhuUARFCN uarfcn;
} NhuPriorityLvlradioAccessTechnologyutraFDDMember;

typedef struct NhuPriorityLvlradioAccessTechnologyutraFDD
{
 TknU16 noComp;
 NhuPriorityLvlradioAccessTechnologyutraFDDMember *member;
}NhuPriorityLvlradioAccessTechnologyutraFDD;

typedef struct NhuPriorityLvlradioAccessTechnologyutraTDDMember
{
 TknPres pres;
 NhuUARFCN uarfcn;
} NhuPriorityLvlradioAccessTechnologyutraTDDMember;

typedef struct NhuPriorityLvlradioAccessTechnologyutraTDD
{
 TknU16 noComp;
 NhuPriorityLvlradioAccessTechnologyutraTDDMember *member;
}NhuPriorityLvlradioAccessTechnologyutraTDD;

typedef struct NhuPriorityLvlradioAccessTechnologyeutraMember
{
 TknPres pres;
 NhuEARFCN earfcn;
} NhuPriorityLvlradioAccessTechnologyeutraMember;

typedef struct NhuPriorityLvlradioAccessTechnologyeutra
{
 TknU16 noComp;
 NhuPriorityLvlradioAccessTechnologyeutraMember *member;
}NhuPriorityLvlradioAccessTechnologyeutra;

typedef struct NhuPriorityLvlradioAccessTechnologygsm
{
 TknPres pres;
 NhuGSM_CellGroup gsm_CellGroup;
} NhuPriorityLvlradioAccessTechnologygsm;

typedef struct NhuPriorityLvlradioAccessTechnology
{
 TknU8 choice;
 union {
  NhuPriorityLvlradioAccessTechnologyutraFDD utraFDD;
  NhuPriorityLvlradioAccessTechnologyutraTDD utraTDD;
  NhuPriorityLvlradioAccessTechnologyeutra eutra;
  NhuPriorityLvlradioAccessTechnologygsm gsm;
 } val;
} NhuPriorityLvlradioAccessTechnology;

typedef struct NhuPriorityLvl
{
 TknPres pres;
 NhuPriorityLvlpriority priority;
 NhuPriorityLvlradioAccessTechnology radioAccessTechnology;
} NhuPriorityLvl;

typedef struct NhuPriorityLvlLst
{
 TknU16 noComp;
 NhuPriorityLvl *member;
}NhuPriorityLvlLst;


typedef TknU8 NhuDedicatedPriorityInfoactionconfigureDedicatedPrioritieseutraDetection;

typedef struct NhuDedicatedPriorityInfoactionconfigureDedicatedPriorities
{
 TknPres pres;
 NhuT_322 t_322;
 NhuPriorityLvlLst priorityLvlLst;
 NhuDedicatedPriorityInfoactionconfigureDedicatedPrioritieseutraDetection eutraDetection;
} NhuDedicatedPriorityInfoactionconfigureDedicatedPriorities;

typedef struct NhuDedicatedPriorityInfoaction
{
 TknU8 choice;
 union {
  NhuDedicatedPriorityInfoactionconfigureDedicatedPriorities configureDedicatedPriorities;
 } val;
} NhuDedicatedPriorityInfoaction;

typedef struct NhuDedicatedPriorityInfo
{
 TknPres pres;
 NhuDedicatedPriorityInfoaction action;
} NhuDedicatedPriorityInfo;


typedef TknU32 NhuQ_Hyst_S_Fine;


typedef TknU32 NhuSpeedDependentScalingFactor;


typedef TknU32 NhuT_Reselection_S_Fine;


typedef TknU32 NhuTreselectionScalingFactor;


typedef TknStrBSXL NhuURA_Identity;
typedef struct NhuURA_IdentityLst
{
 TknU16 noComp;
 NhuURA_Identity *member;
}NhuURA_IdentityLst;


typedef enum enumNhuAccessStratumRlsIndicator
{
 NhuAccessStratumRlsIndicatorrel_4Enum,
 NhuAccessStratumRlsIndicatorrel_5Enum,
 NhuAccessStratumRlsIndicatorrel_6Enum,
 NhuAccessStratumRlsIndicatorrel_7Enum,
 NhuAccessStratumRlsIndicatorrel_8Enum,
 NhuAccessStratumRlsIndicatorrel_9Enum,
 NhuAccessStratumRlsIndicatorrel_10Enum,
 NhuAccessStratumRlsIndicatorrel_11Enum,
 NhuAccessStratumRlsIndicatorspare8Enum,
 NhuAccessStratumRlsIndicatorspare7Enum,
 NhuAccessStratumRlsIndicatorspare6Enum,
 NhuAccessStratumRlsIndicatorspare5Enum,
 NhuAccessStratumRlsIndicatorspare4Enum,
 NhuAccessStratumRlsIndicatorspare3Enum,
 NhuAccessStratumRlsIndicatorspare2Enum,
 NhuAccessStratumRlsIndicatorspare1Enum
} EnumNhuAccessStratumRlsIndicator;
typedef TknU32 NhuAccessStratumRlsIndicator;


typedef TknU32 NhuActvnTime;


typedef TknU32 NhuN_AP_RetransMax;


typedef TknU32 NhuN_AccessFails;


typedef TknU32 NhuNF_BO_NoAICH;


typedef TknU32 NhuNS_BO_Busy;


typedef TknU32 NhuNF_BO_AllBusy;


typedef TknU32 NhuNF_BO_Mismatch;


typedef enum enumNhuT_CPCH
{
 NhuT_CPCHct0Enum,
 NhuT_CPCHct1Enum
} EnumNhuT_CPCH;
typedef TknU32 NhuT_CPCH;

typedef struct NhuBackoffCntrlParams
{
 TknPres pres;
 NhuN_AP_RetransMax n_AP_RetransMax;
 NhuN_AccessFails n_AccessFails;
 NhuNF_BO_NoAICH nf_BO_NoAICH;
 NhuNS_BO_Busy ns_BO_Busy;
 NhuNF_BO_AllBusy nf_BO_AllBusy;
 NhuNF_BO_Mismatch nf_BO_Mismatch;
 NhuT_CPCH t_CPCH;
} NhuBackoffCntrlParams;


typedef TknU32 NhuBandComb;


typedef enum enumNhuSysSpecificCapUpdReq
{
 NhuSysSpecificCapUpdReqgsmEnum
} EnumNhuSysSpecificCapUpdReq;
typedef TknU32 NhuSysSpecificCapUpdReq;

typedef struct NhuSysSpecificCapUpdReqLst
{
 TknU16 noComp;
 NhuSysSpecificCapUpdReq *member;
}NhuSysSpecificCapUpdReqLst;


typedef TknU8 NhuCapUpdRequirementue_RadioCapFDDUpdRequirement;


typedef TknU8 NhuCapUpdRequirementue_RadioCapTDDUpdRequirement;

typedef struct NhuCapUpdRequirement
{
 TknPres pres;
 NhuCapUpdRequirementue_RadioCapFDDUpdRequirement ue_RadioCapFDDUpdRequirement;
 NhuCapUpdRequirementue_RadioCapTDDUpdRequirement ue_RadioCapTDDUpdRequirement;
 NhuSysSpecificCapUpdReqLst systemSpecificCapUpdReqLst;
} NhuCapUpdRequirement;


typedef TknU8 NhuCapUpdRequirement_r4_extue_RadioCapUpdRequirement_TDD128;

typedef struct NhuCapUpdRequirement_r4_ext
{
 TknPres pres;
 NhuCapUpdRequirement_r4_extue_RadioCapUpdRequirement_TDD128 ue_RadioCapUpdRequirement_TDD128;
} NhuCapUpdRequirement_r4_ext;


typedef TknU8 NhuCapUpdRequirement_r4ue_RadioCapFDDUpdRequirement_FDD;


typedef TknU8 NhuCapUpdRequirement_r4ue_RadioCapTDDUpdRequirement_TDD384;


typedef TknU8 NhuCapUpdRequirement_r4ue_RadioCapTDDUpdRequirement_TDD128;

typedef struct NhuCapUpdRequirement_r4
{
 TknPres pres;
 NhuCapUpdRequirement_r4ue_RadioCapFDDUpdRequirement_FDD ue_RadioCapFDDUpdRequirement_FDD;
 NhuCapUpdRequirement_r4ue_RadioCapTDDUpdRequirement_TDD384 ue_RadioCapTDDUpdRequirement_TDD384;
 NhuCapUpdRequirement_r4ue_RadioCapTDDUpdRequirement_TDD128 ue_RadioCapTDDUpdRequirement_TDD128;
 NhuSysSpecificCapUpdReqLst systemSpecificCapUpdReqLst;
} NhuCapUpdRequirement_r4;


typedef enum enumNhuSysSpecificCapUpdReq_r5
{
 NhuSysSpecificCapUpdReq_r5gsmEnum,
 NhuSysSpecificCapUpdReq_r5geranIuEnum
} EnumNhuSysSpecificCapUpdReq_r5;
typedef TknU32 NhuSysSpecificCapUpdReq_r5;

typedef struct NhuSysSpecificCapUpdReqLst_r5
{
 TknU16 noComp;
 NhuSysSpecificCapUpdReq_r5 *member;
}NhuSysSpecificCapUpdReqLst_r5;


typedef TknU8 NhuCapUpdRequirement_r5ue_RadioCapFDDUpdRequirement_FDD;


typedef TknU8 NhuCapUpdRequirement_r5ue_RadioCapTDDUpdRequirement_TDD384;


typedef TknU8 NhuCapUpdRequirement_r5ue_RadioCapTDDUpdRequirement_TDD128;

typedef struct NhuCapUpdRequirement_r5
{
 TknPres pres;
 NhuCapUpdRequirement_r5ue_RadioCapFDDUpdRequirement_FDD ue_RadioCapFDDUpdRequirement_FDD;
 NhuCapUpdRequirement_r5ue_RadioCapTDDUpdRequirement_TDD384 ue_RadioCapTDDUpdRequirement_TDD384;
 NhuCapUpdRequirement_r5ue_RadioCapTDDUpdRequirement_TDD128 ue_RadioCapTDDUpdRequirement_TDD128;
 NhuSysSpecificCapUpdReqLst_r5 systemSpecificCapUpdReqLst;
} NhuCapUpdRequirement_r5;


typedef TknU8 NhuCapUpdRequirement_v770extue_RadioCapTDDUpdRequirement_TDD768;

typedef struct NhuCapUpdRequirement_v770ext
{
 TknPres pres;
 NhuCapUpdRequirement_v770extue_RadioCapTDDUpdRequirement_TDD768 ue_RadioCapTDDUpdRequirement_TDD768;
} NhuCapUpdRequirement_v770ext;


typedef TknU8 NhuCapUpdRequirement_r7ue_RadioCapFDDUpdRequirement_FDD;


typedef TknU8 NhuCapUpdRequirement_r7ue_RadioCapTDDUpdRequirement_TDD384;


typedef TknU8 NhuCapUpdRequirement_r7ue_RadioCapTDDUpdRequirement_TDD768;


typedef TknU8 NhuCapUpdRequirement_r7ue_RadioCapTDDUpdRequirement_TDD128;

typedef struct NhuCapUpdRequirement_r7
{
 TknPres pres;
 NhuCapUpdRequirement_r7ue_RadioCapFDDUpdRequirement_FDD ue_RadioCapFDDUpdRequirement_FDD;
 NhuCapUpdRequirement_r7ue_RadioCapTDDUpdRequirement_TDD384 ue_RadioCapTDDUpdRequirement_TDD384;
 NhuCapUpdRequirement_r7ue_RadioCapTDDUpdRequirement_TDD768 ue_RadioCapTDDUpdRequirement_TDD768;
 NhuCapUpdRequirement_r7ue_RadioCapTDDUpdRequirement_TDD128 ue_RadioCapTDDUpdRequirement_TDD128;
 NhuSysSpecificCapUpdReqLst_r5 systemSpecificCapUpdReqLst;
} NhuCapUpdRequirement_r7;


typedef enum enumNhuSysSpecificCapUpdReq_r8
{
 NhuSysSpecificCapUpdReq_r8gsmEnum,
 NhuSysSpecificCapUpdReq_r8geranIuEnum,
 NhuSysSpecificCapUpdReq_r8eutraEnum,
 NhuSysSpecificCapUpdReq_r8spare5Enum,
 NhuSysSpecificCapUpdReq_r8spare4Enum,
 NhuSysSpecificCapUpdReq_r8spare3Enum,
 NhuSysSpecificCapUpdReq_r8spare2Enum,
 NhuSysSpecificCapUpdReq_r8spare1Enum
} EnumNhuSysSpecificCapUpdReq_r8;
typedef TknU32 NhuSysSpecificCapUpdReq_r8;

typedef struct NhuSysSpecificCapUpdReqLst_r8
{
 TknU16 noComp;
 NhuSysSpecificCapUpdReq_r8 *member;
}NhuSysSpecificCapUpdReqLst_r8;

typedef struct NhuCapUpdRequirement_v860ext
{
 TknPres pres;
 NhuSysSpecificCapUpdReqLst_r8 systemSpecificCapUpdReqLst;
} NhuCapUpdRequirement_v860ext;


typedef TknU8 NhuCapUpdRequirement_r8ue_RadioCapFDDUpdRequirement_FDD;


typedef TknU8 NhuCapUpdRequirement_r8ue_RadioCapTDDUpdRequirement_TDD384;


typedef TknU8 NhuCapUpdRequirement_r8ue_RadioCapTDDUpdRequirement_TDD768;


typedef TknU8 NhuCapUpdRequirement_r8ue_RadioCapTDDUpdRequirement_TDD128;

typedef struct NhuCapUpdRequirement_r8
{
 TknPres pres;
 NhuCapUpdRequirement_r8ue_RadioCapFDDUpdRequirement_FDD ue_RadioCapFDDUpdRequirement_FDD;
 NhuCapUpdRequirement_r8ue_RadioCapTDDUpdRequirement_TDD384 ue_RadioCapTDDUpdRequirement_TDD384;
 NhuCapUpdRequirement_r8ue_RadioCapTDDUpdRequirement_TDD768 ue_RadioCapTDDUpdRequirement_TDD768;
 NhuCapUpdRequirement_r8ue_RadioCapTDDUpdRequirement_TDD128 ue_RadioCapTDDUpdRequirement_TDD128;
 NhuSysSpecificCapUpdReqLst_r8 systemSpecificCapUpdReqLst;
} NhuCapUpdRequirement_r8;


typedef enum enumNhuCellUpdCause
{
 NhuCellUpdCausecellReselectionEnum,
 NhuCellUpdCauseperiodicalCellUpdEnum,
 NhuCellUpdCauseuplinkDataTransmissionEnum,
 NhuCellUpdCauseutran_pagingRspEnum,
 NhuCellUpdCausere_enteredServiceAreaEnum,
 NhuCellUpdCauseradiolinkFailEnum,
 NhuCellUpdCauserlc_unrecoverableErrEnum,
 NhuCellUpdCausecellUpdCause_extEnum
} EnumNhuCellUpdCause;
typedef TknU32 NhuCellUpdCause;


typedef enum enumNhuCellUpdCause_ext
{
 NhuCellUpdCause_extmbms_ReceptionEnum,
 NhuCellUpdCause_extmbms_PTP_RB_RqstEnum,
 NhuCellUpdCause_extdummyEnum,
 NhuCellUpdCause_extspare1Enum
} EnumNhuCellUpdCause_ext;
typedef TknU32 NhuCellUpdCause_ext;


typedef enum enumNhuChipRateCap
{
 NhuChipRateCapmcps3_84Enum,
 NhuChipRateCapmcps1_28Enum
} EnumNhuChipRateCap;
typedef TknU32 NhuChipRateCap;


typedef enum enumNhuCipheringAlgorithm
{
 NhuCipheringAlgorithmuea0Enum,
 NhuCipheringAlgorithmuea1Enum
} EnumNhuCipheringAlgorithm;
typedef TknU32 NhuCipheringAlgorithm;


typedef enum enumNhuCipheringAlgorithm_r7
{
 NhuCipheringAlgorithm_r7uea0Enum,
 NhuCipheringAlgorithm_r7uea1Enum,
 NhuCipheringAlgorithm_r7uea2Enum
} EnumNhuCipheringAlgorithm_r7;
typedef TknU32 NhuCipheringAlgorithm_r7;

typedef struct NhuCipheringModeCmd
{
 TknU8 choice;
 union {
  NhuCipheringAlgorithm startRestart;
 } val;
} NhuCipheringModeCmd;

typedef struct NhuCipheringModeCmd_r7
{
 TknPres pres;
 NhuCipheringAlgorithm_r7 startRestart;
} NhuCipheringModeCmd_r7;


typedef TknU32 NhuRB_Identity;


typedef TknU32 NhuRLC_SequenceNumber;

typedef struct NhuRB_ActvnTimeInfo
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRLC_SequenceNumber rlc_SequenceNumber;
} NhuRB_ActvnTimeInfo;

typedef struct NhuRB_ActvnTimeInfoLst
{
 TknU16 noComp;
 NhuRB_ActvnTimeInfo *member;
}NhuRB_ActvnTimeInfoLst;

typedef struct NhuCipheringModeInfo
{
 TknPres pres;
 NhuCipheringModeCmd cipheringModeCmd;
 NhuActvnTime activationTimeForDPCH;
 NhuRB_ActvnTimeInfoLst rb_DL_CiphActvnTimeInfo;
} NhuCipheringModeInfo;

typedef struct NhuCipheringModeInfo_r7
{
 TknPres pres;
 NhuCipheringModeCmd_r7 cipheringModeCmd;
 NhuActvnTime activationTimeForDPCH;
 NhuRB_ActvnTimeInfoLst rb_DL_CiphActvnTimeInfo;
} NhuCipheringModeInfo_r7;


typedef TknStrOSXL NhuIMSI_DS_41;

typedef TknStrOSXL NhuTMSI_DS_41;
typedef struct NhuCN_PagedUE_Identity
{
 TknU8 choice;
 union {
  NhuIMSI_GSM_MAP imsi_GSM_MAP;
  NhuTMSI_GSM_MAP tmsi_GSM_MAP;
  NhuP_TMSI_GSM_MAP p_TMSI_GSM_MAP;
  NhuIMSI_DS_41 imsi_DS_41;
  NhuTMSI_DS_41 tmsi_DS_41;
 } val;
} NhuCN_PagedUE_Identity;


typedef TknU8 NhuGSM_Measurementsgsm900;


typedef TknU8 NhuGSM_Measurementsdcs1800;


typedef TknU8 NhuGSM_Measurementsgsm1900;

typedef struct NhuGSM_Measurements
{
 TknPres pres;
 NhuGSM_Measurementsgsm900 gsm900;
 NhuGSM_Measurementsdcs1800 dcs1800;
 NhuGSM_Measurementsgsm1900 gsm1900;
} NhuGSM_Measurements;


typedef TknU8 NhuCompressedModeMeasCapfdd_Measurements;


typedef TknU8 NhuCompressedModeMeasCaptdd_Measurements;


typedef TknU8 NhuCompressedModeMeasCapmultiCarrierMeasurements;

typedef struct NhuCompressedModeMeasCap
{
 TknPres pres;
 NhuCompressedModeMeasCapfdd_Measurements fdd_Measurements;
 NhuCompressedModeMeasCaptdd_Measurements tdd_Measurements;
 NhuGSM_Measurements gsm_Measurements;
 NhuCompressedModeMeasCapmultiCarrierMeasurements multiCarrierMeasurements;
} NhuCompressedModeMeasCap;


typedef TknU8 NhuCompressedModeMeasCap_LCR_r4tdd128_Measurements;

typedef struct NhuCompressedModeMeasCap_LCR_r4
{
 TknPres pres;
 NhuCompressedModeMeasCap_LCR_r4tdd128_Measurements tdd128_Measurements;
} NhuCompressedModeMeasCap_LCR_r4;


typedef enum enumNhuCompressedModeMeasCap_v860extadjacentFrequencyMeasurements
{
 NhuCompressedModeMeasCap_v860extadjacentFrequencyMeasurementstrueEnum
} EnumNhuCompressedModeMeasCap_v860extadjacentFrequencyMeasurements;
typedef TknU32 NhuCompressedModeMeasCap_v860extadjacentFrequencyMeasurements;

typedef struct NhuCompressedModeMeasCap_v860ext
{
 TknPres pres;
 NhuCompressedModeMeasCap_v860extadjacentFrequencyMeasurements adjacentFrequencyMeasurements;
} NhuCompressedModeMeasCap_v860ext;


typedef enum enumNhuCompressedModeMeasCap_v920extinterBandMeasurements
{
 NhuCompressedModeMeasCap_v920extinterBandMeasurementstrueEnum
} EnumNhuCompressedModeMeasCap_v920extinterBandMeasurements;
typedef TknU32 NhuCompressedModeMeasCap_v920extinterBandMeasurements;

typedef struct NhuCompressedModeMeasCap_v920ext
{
 TknPres pres;
 NhuCompressedModeMeasCap_v920extinterBandMeasurements interBandMeasurements;
} NhuCompressedModeMeasCap_v920ext;


typedef enum enumNhuCompressedModeMeasCap_va40extenhancedInterFrequencyMeasurements
{
 NhuCompressedModeMeasCap_va40extenhancedInterFrequencyMeasurementstrueEnum
} EnumNhuCompressedModeMeasCap_va40extenhancedInterFrequencyMeasurements;
typedef TknU32 NhuCompressedModeMeasCap_va40extenhancedInterFrequencyMeasurements;


typedef enum enumNhuCompressedModeMeasCap_va40extfreqSpecificCompressedMode
{
 NhuCompressedModeMeasCap_va40extfreqSpecificCompressedModetrueEnum
} EnumNhuCompressedModeMeasCap_va40extfreqSpecificCompressedMode;
typedef TknU32 NhuCompressedModeMeasCap_va40extfreqSpecificCompressedMode;

typedef struct NhuCompressedModeMeasCap_va40ext
{
 TknPres pres;
 NhuCompressedModeMeasCap_va40extenhancedInterFrequencyMeasurements enhancedInterFrequencyMeasurements;
 NhuCompressedModeMeasCap_va40extfreqSpecificCompressedMode freqSpecificCompressedMode;
} NhuCompressedModeMeasCap_va40ext;


typedef TknU32 NhuRadioFrequencyBandEUTRA;


typedef TknU8 NhuCompressedModeMeasCapabEUTRAcompressedMode;

typedef struct NhuCompressedModeMeasCapabEUTRA
{
 TknPres pres;
 NhuRadioFrequencyBandEUTRA radioFrequencyBandEUTRA;
 NhuCompressedModeMeasCapabEUTRAcompressedMode compressedMode;
} NhuCompressedModeMeasCapabEUTRA;

typedef struct NhuCompressedModeMeasCapabEUTRALst
{
 TknU16 noComp;
 NhuCompressedModeMeasCapabEUTRA *member;
}NhuCompressedModeMeasCapabEUTRALst;


typedef enum enumNhuRadioFrequencyBandFDD
{
 NhuRadioFrequencyBandFDDfdd2100Enum,
 NhuRadioFrequencyBandFDDfdd1900Enum,
 NhuRadioFrequencyBandFDDfdd1800Enum,
 NhuRadioFrequencyBandFDDbandVIEnum,
 NhuRadioFrequencyBandFDDbandIVEnum,
 NhuRadioFrequencyBandFDDbandVEnum,
 NhuRadioFrequencyBandFDDbandVIIEnum,
 NhuRadioFrequencyBandFDDextension_indicatorEnum
} EnumNhuRadioFrequencyBandFDD;
typedef TknU32 NhuRadioFrequencyBandFDD;


typedef TknU8 NhuCompressedModeMeasCapabFDDdl_MeasurementsFDD;


typedef TknU8 NhuCompressedModeMeasCapabFDDul_MeasurementsFDD;

typedef struct NhuCompressedModeMeasCapabFDD
{
 TknPres pres;
 NhuRadioFrequencyBandFDD radioFrequencyBandFDD;
 NhuCompressedModeMeasCapabFDDdl_MeasurementsFDD dl_MeasurementsFDD;
 NhuCompressedModeMeasCapabFDDul_MeasurementsFDD ul_MeasurementsFDD;
} NhuCompressedModeMeasCapabFDD;

typedef struct NhuCompressedModeMeasCapabFDDLst
{
 TknU16 noComp;
 NhuCompressedModeMeasCapabFDD *member;
}NhuCompressedModeMeasCapabFDDLst;


typedef enum enumNhuRadioFrequencyBandFDD2
{
 NhuRadioFrequencyBandFDD2bandVIIIEnum,
 NhuRadioFrequencyBandFDD2bandIXEnum,
 NhuRadioFrequencyBandFDD2bandXEnum,
 NhuRadioFrequencyBandFDD2bandXIEnum,
 NhuRadioFrequencyBandFDD2bandXIIEnum,
 NhuRadioFrequencyBandFDD2bandXIIIEnum,
 NhuRadioFrequencyBandFDD2bandXIVEnum,
 NhuRadioFrequencyBandFDD2bandXVEnum,
 NhuRadioFrequencyBandFDD2bandXVIEnum,
 NhuRadioFrequencyBandFDD2bandXVIIEnum,
 NhuRadioFrequencyBandFDD2bandXVIIIEnum,
 NhuRadioFrequencyBandFDD2bandXIXEnum,
 NhuRadioFrequencyBandFDD2bandXXEnum,
 NhuRadioFrequencyBandFDD2bandXXIEnum,
 NhuRadioFrequencyBandFDD2bandXXIIEnum,
 NhuRadioFrequencyBandFDD2extension_indicatorEnum
} EnumNhuRadioFrequencyBandFDD2;
typedef TknU32 NhuRadioFrequencyBandFDD2;


typedef TknU8 NhuCompressedModeMeasCapabFDD2dl_MeasurementsFDD;


typedef TknU8 NhuCompressedModeMeasCapabFDD2ul_MeasurementsFDD;

typedef struct NhuCompressedModeMeasCapabFDD2
{
 TknPres pres;
 NhuRadioFrequencyBandFDD radioFrequencyBandFDD;
 NhuRadioFrequencyBandFDD2 radioFrequencyBandFDD2;
 NhuCompressedModeMeasCapabFDD2dl_MeasurementsFDD dl_MeasurementsFDD;
 NhuCompressedModeMeasCapabFDD2ul_MeasurementsFDD ul_MeasurementsFDD;
} NhuCompressedModeMeasCapabFDD2;

typedef struct NhuCompressedModeMeasCapabFDDLst2
{
 TknU16 noComp;
 NhuCompressedModeMeasCapabFDD2 *member;
}NhuCompressedModeMeasCapabFDDLst2;


typedef enum enumNhuRadioFrequencyBandFDD3
{
 NhuRadioFrequencyBandFDD3spare64Enum,
 NhuRadioFrequencyBandFDD3spare63Enum,
 NhuRadioFrequencyBandFDD3bandXXVEnum,
 NhuRadioFrequencyBandFDD3spare61Enum,
 NhuRadioFrequencyBandFDD3spare60Enum,
 NhuRadioFrequencyBandFDD3spare59Enum,
 NhuRadioFrequencyBandFDD3spare58Enum,
 NhuRadioFrequencyBandFDD3spare57Enum,
 NhuRadioFrequencyBandFDD3spare56Enum,
 NhuRadioFrequencyBandFDD3spare55Enum,
 NhuRadioFrequencyBandFDD3spare54Enum,
 NhuRadioFrequencyBandFDD3spare53Enum,
 NhuRadioFrequencyBandFDD3spare52Enum,
 NhuRadioFrequencyBandFDD3spare51Enum,
 NhuRadioFrequencyBandFDD3spare50Enum,
 NhuRadioFrequencyBandFDD3spare49Enum,
 NhuRadioFrequencyBandFDD3spare48Enum,
 NhuRadioFrequencyBandFDD3spare47Enum,
 NhuRadioFrequencyBandFDD3spare46Enum,
 NhuRadioFrequencyBandFDD3spare45Enum,
 NhuRadioFrequencyBandFDD3spare44Enum,
 NhuRadioFrequencyBandFDD3spare43Enum,
 NhuRadioFrequencyBandFDD3spare42Enum,
 NhuRadioFrequencyBandFDD3spare41Enum,
 NhuRadioFrequencyBandFDD3spare40Enum,
 NhuRadioFrequencyBandFDD3spare39Enum,
 NhuRadioFrequencyBandFDD3spare38Enum,
 NhuRadioFrequencyBandFDD3spare37Enum,
 NhuRadioFrequencyBandFDD3spare36Enum,
 NhuRadioFrequencyBandFDD3spare35Enum,
 NhuRadioFrequencyBandFDD3spare34Enum,
 NhuRadioFrequencyBandFDD3spare33Enum,
 NhuRadioFrequencyBandFDD3spare32Enum,
 NhuRadioFrequencyBandFDD3spare31Enum,
 NhuRadioFrequencyBandFDD3spare30Enum,
 NhuRadioFrequencyBandFDD3spare29Enum,
 NhuRadioFrequencyBandFDD3spare28Enum,
 NhuRadioFrequencyBandFDD3spare27Enum,
 NhuRadioFrequencyBandFDD3spare26Enum,
 NhuRadioFrequencyBandFDD3spare25Enum,
 NhuRadioFrequencyBandFDD3spare24Enum,
 NhuRadioFrequencyBandFDD3spare23Enum,
 NhuRadioFrequencyBandFDD3spare22Enum,
 NhuRadioFrequencyBandFDD3spare21Enum,
 NhuRadioFrequencyBandFDD3spare20Enum,
 NhuRadioFrequencyBandFDD3spare19Enum,
 NhuRadioFrequencyBandFDD3spare18Enum,
 NhuRadioFrequencyBandFDD3spare17Enum,
 NhuRadioFrequencyBandFDD3spare16Enum,
 NhuRadioFrequencyBandFDD3spare15Enum,
 NhuRadioFrequencyBandFDD3spare14Enum,
 NhuRadioFrequencyBandFDD3spare13Enum,
 NhuRadioFrequencyBandFDD3spare12Enum,
 NhuRadioFrequencyBandFDD3spare11Enum,
 NhuRadioFrequencyBandFDD3spare10Enum,
 NhuRadioFrequencyBandFDD3spare9Enum,
 NhuRadioFrequencyBandFDD3spare8Enum,
 NhuRadioFrequencyBandFDD3spare7Enum,
 NhuRadioFrequencyBandFDD3spare6Enum,
 NhuRadioFrequencyBandFDD3spare5Enum,
 NhuRadioFrequencyBandFDD3spare4Enum,
 NhuRadioFrequencyBandFDD3spare3Enum,
 NhuRadioFrequencyBandFDD3spare2Enum,
 NhuRadioFrequencyBandFDD3extension_indicatorEnum
} EnumNhuRadioFrequencyBandFDD3;
typedef TknU32 NhuRadioFrequencyBandFDD3;


typedef TknU8 NhuCompressedModeMeasCapabFDD3dl_MeasurementsFDD;


typedef TknU8 NhuCompressedModeMeasCapabFDD3ul_MeasurementsFDD;

typedef struct NhuCompressedModeMeasCapabFDD3
{
 TknPres pres;
 NhuRadioFrequencyBandFDD3 radioFrequencyBandFDD3;
 NhuCompressedModeMeasCapabFDD3dl_MeasurementsFDD dl_MeasurementsFDD;
 NhuCompressedModeMeasCapabFDD3ul_MeasurementsFDD ul_MeasurementsFDD;
} NhuCompressedModeMeasCapabFDD3;

typedef struct NhuCompressedModeMeasCapabFDDLst3
{
 TknU16 noComp;
 NhuCompressedModeMeasCapabFDD3 *member;
}NhuCompressedModeMeasCapabFDDLst3;


typedef TknU8 NhuCompressedModeMeasCapabFDD_extdl_MeasurementsFDD;


typedef TknU8 NhuCompressedModeMeasCapabFDD_extul_MeasurementsFDD;

typedef struct NhuCompressedModeMeasCapabFDD_ext
{
 TknPres pres;
 NhuRadioFrequencyBandFDD2 radioFrequencyBandFDD2;
 NhuCompressedModeMeasCapabFDD_extdl_MeasurementsFDD dl_MeasurementsFDD;
 NhuCompressedModeMeasCapabFDD_extul_MeasurementsFDD ul_MeasurementsFDD;
} NhuCompressedModeMeasCapabFDD_ext;

typedef struct NhuCompressedModeMeasCapabFDDLst_ext
{
 TknU16 noComp;
 NhuCompressedModeMeasCapabFDD_ext *member;
}NhuCompressedModeMeasCapabFDDLst_ext;


typedef enum enumNhuRadioFrequencyBandTDD
{
 NhuRadioFrequencyBandTDDaEnum,
 NhuRadioFrequencyBandTDDbEnum,
 NhuRadioFrequencyBandTDDcEnum,
 NhuRadioFrequencyBandTDDdEnum
} EnumNhuRadioFrequencyBandTDD;
typedef TknU32 NhuRadioFrequencyBandTDD;


typedef TknU8 NhuCompressedModeMeasCapabTDDdl_MeasurementsTDD;


typedef TknU8 NhuCompressedModeMeasCapabTDDul_MeasurementsTDD;

typedef struct NhuCompressedModeMeasCapabTDD
{
 TknPres pres;
 NhuRadioFrequencyBandTDD radioFrequencyBandTDD;
 NhuCompressedModeMeasCapabTDDdl_MeasurementsTDD dl_MeasurementsTDD;
 NhuCompressedModeMeasCapabTDDul_MeasurementsTDD ul_MeasurementsTDD;
} NhuCompressedModeMeasCapabTDD;

typedef struct NhuCompressedModeMeasCapabTDDLst
{
 TknU16 noComp;
 NhuCompressedModeMeasCapabTDD *member;
}NhuCompressedModeMeasCapabTDDLst;


typedef enum enumNhuRadioFrequencyBandGSM
{
 NhuRadioFrequencyBandGSMgsm450Enum,
 NhuRadioFrequencyBandGSMgsm480Enum,
 NhuRadioFrequencyBandGSMgsm850Enum,
 NhuRadioFrequencyBandGSMgsm900PEnum,
 NhuRadioFrequencyBandGSMgsm900EEnum,
 NhuRadioFrequencyBandGSMgsm1800Enum,
 NhuRadioFrequencyBandGSMgsm1900Enum,
 NhuRadioFrequencyBandGSMspare9Enum,
 NhuRadioFrequencyBandGSMspare8Enum,
 NhuRadioFrequencyBandGSMspare7Enum,
 NhuRadioFrequencyBandGSMspare6Enum,
 NhuRadioFrequencyBandGSMspare5Enum,
 NhuRadioFrequencyBandGSMspare4Enum,
 NhuRadioFrequencyBandGSMspare3Enum,
 NhuRadioFrequencyBandGSMspare2Enum,
 NhuRadioFrequencyBandGSMspare1Enum
} EnumNhuRadioFrequencyBandGSM;
typedef TknU32 NhuRadioFrequencyBandGSM;


typedef TknU8 NhuCompressedModeMeasCapabGSMdl_MeasurementsGSM;


typedef TknU8 NhuCompressedModeMeasCapabGSMul_MeasurementsGSM;

typedef struct NhuCompressedModeMeasCapabGSM
{
 TknPres pres;
 NhuRadioFrequencyBandGSM radioFrequencyBandGSM;
 NhuCompressedModeMeasCapabGSMdl_MeasurementsGSM dl_MeasurementsGSM;
 NhuCompressedModeMeasCapabGSMul_MeasurementsGSM ul_MeasurementsGSM;
} NhuCompressedModeMeasCapabGSM;

typedef struct NhuCompressedModeMeasCapabGSMLst
{
 TknU16 noComp;
 NhuCompressedModeMeasCapabGSM *member;
}NhuCompressedModeMeasCapabGSMLst;


typedef TknU8 NhuCompressedModeMeasCapabMCdl_MeasurementsMC;


typedef TknU8 NhuCompressedModeMeasCapabMCul_MeasurementsMC;

typedef struct NhuCompressedModeMeasCapabMC
{
 TknPres pres;
 NhuCompressedModeMeasCapabMCdl_MeasurementsMC dl_MeasurementsMC;
 NhuCompressedModeMeasCapabMCul_MeasurementsMC ul_MeasurementsMC;
} NhuCompressedModeMeasCapabMC;


typedef TknU32 NhuNS_IP;

typedef struct NhuInitPriorityDelayLst
{
 TknU16 noComp;
 NhuNS_IP *member;
}NhuInitPriorityDelayLst;


typedef TknU32 NhuTPC_StepSizeFDD;

typedef struct NhuPowerCntrlAlgorithm
{
 TknU8 choice;
 union {
  NhuTPC_StepSizeFDD algorithm1;
 } val;
} NhuPowerCntrlAlgorithm;


typedef TknU32 NhuDL_DPCCH_BER;

typedef struct NhuCPCH_Params
{
 TknPres pres;
 NhuInitPriorityDelayLst initialPriorityDelayLst;
 NhuBackoffCntrlParams backoffCntrlParams;
 NhuPowerCntrlAlgorithm powerCntrlAlgorithm;
 NhuDL_DPCCH_BER dl_DPCCH_BER;
} NhuCPCH_Params;


typedef enum enumNhuCSG_ProximityIndCapsupportOfIntraFreqProximityInd
{
 NhuCSG_ProximityIndCapsupportOfIntraFreqProximityIndtrueEnum
} EnumNhuCSG_ProximityIndCapsupportOfIntraFreqProximityInd;
typedef TknU32 NhuCSG_ProximityIndCapsupportOfIntraFreqProximityInd;


typedef enum enumNhuCSG_ProximityIndCapsupportOfInterFreqProximityInd
{
 NhuCSG_ProximityIndCapsupportOfInterFreqProximityIndtrueEnum
} EnumNhuCSG_ProximityIndCapsupportOfInterFreqProximityInd;
typedef TknU32 NhuCSG_ProximityIndCapsupportOfInterFreqProximityInd;


typedef enum enumNhuCSG_ProximityIndCapsupportOfE_UtraProximityInd
{
 NhuCSG_ProximityIndCapsupportOfE_UtraProximityIndtrueEnum
} EnumNhuCSG_ProximityIndCapsupportOfE_UtraProximityInd;
typedef TknU32 NhuCSG_ProximityIndCapsupportOfE_UtraProximityInd;

typedef struct NhuCSG_ProximityIndCap
{
 TknPres pres;
 NhuCSG_ProximityIndCapsupportOfIntraFreqProximityInd supportOfIntraFreqProximityInd;
 NhuCSG_ProximityIndCapsupportOfInterFreqProximityInd supportOfInterFreqProximityInd;
 NhuCSG_ProximityIndCapsupportOfE_UtraProximityInd supportOfE_UtraProximityInd;
} NhuCSG_ProximityIndCap;


typedef enum enumNhuDL_CapWithSimultaneousHS_DSCHConfig
{
 NhuDL_CapWithSimultaneousHS_DSCHConfigkbps32Enum,
 NhuDL_CapWithSimultaneousHS_DSCHConfigkbps64Enum,
 NhuDL_CapWithSimultaneousHS_DSCHConfigkbps128Enum,
 NhuDL_CapWithSimultaneousHS_DSCHConfigkbps384Enum
} EnumNhuDL_CapWithSimultaneousHS_DSCHConfig;
typedef TknU32 NhuDL_CapWithSimultaneousHS_DSCHConfig;


typedef enum enumNhuMaxNoPhysChBitsReceived
{
 NhuMaxNoPhysChBitsReceiveddummyEnum,
 NhuMaxNoPhysChBitsReceivedb1200Enum,
 NhuMaxNoPhysChBitsReceivedb2400Enum,
 NhuMaxNoPhysChBitsReceivedb3600Enum,
 NhuMaxNoPhysChBitsReceivedb4800Enum,
 NhuMaxNoPhysChBitsReceivedb7200Enum,
 NhuMaxNoPhysChBitsReceivedb9600Enum,
 NhuMaxNoPhysChBitsReceivedb14400Enum,
 NhuMaxNoPhysChBitsReceivedb19200Enum,
 NhuMaxNoPhysChBitsReceivedb28800Enum,
 NhuMaxNoPhysChBitsReceivedb38400Enum,
 NhuMaxNoPhysChBitsReceivedb48000Enum,
 NhuMaxNoPhysChBitsReceivedb57600Enum,
 NhuMaxNoPhysChBitsReceivedb67200Enum,
 NhuMaxNoPhysChBitsReceivedb76800Enum
} EnumNhuMaxNoPhysChBitsReceived;
typedef TknU32 NhuMaxNoPhysChBitsReceived;


typedef enum enumNhuMaxNoSCCPCH_RL
{
 NhuMaxNoSCCPCH_RLrl1Enum
} EnumNhuMaxNoSCCPCH_RL;
typedef TknU32 NhuMaxNoSCCPCH_RL;


typedef TknU8 NhuSimultaneousSCCPCH_DPCH_ReceptionsupportedsimultaneousSCCPCH_DPCH_DPDCH_Reception;

typedef struct NhuSimultaneousSCCPCH_DPCH_Receptionsupported
{
 TknPres pres;
 NhuMaxNoSCCPCH_RL maxNoSCCPCH_RL;
 NhuSimultaneousSCCPCH_DPCH_ReceptionsupportedsimultaneousSCCPCH_DPCH_DPDCH_Reception simultaneousSCCPCH_DPCH_DPDCH_Reception;
} NhuSimultaneousSCCPCH_DPCH_Receptionsupported;

typedef struct NhuSimultaneousSCCPCH_DPCH_Reception
{
 TknU8 choice;
 union {
  NhuSimultaneousSCCPCH_DPCH_Receptionsupported supported;
 } val;
} NhuSimultaneousSCCPCH_DPCH_Reception;


typedef TknU32 NhuDL_PhysChCapFDDmaxNoDPCH_PDSCH_Codes;


typedef TknU8 NhuDL_PhysChCapFDDsupportForSF_512;


typedef TknU8 NhuDL_PhysChCapFDDdummy;

typedef struct NhuDL_PhysChCapFDD
{
 TknPres pres;
 NhuDL_PhysChCapFDDmaxNoDPCH_PDSCH_Codes maxNoDPCH_PDSCH_Codes;
 NhuMaxNoPhysChBitsReceived maxNoPhysChBitsReceived;
 NhuDL_PhysChCapFDDsupportForSF_512 supportForSF_512;
 NhuDL_PhysChCapFDDdummy dummy;
 NhuSimultaneousSCCPCH_DPCH_Reception dummy2;
} NhuDL_PhysChCapFDD;


typedef enum enumNhuSupportOfDedicatedPilotsForChEstimation
{
 NhuSupportOfDedicatedPilotsForChEstimationtrueEnum
} EnumNhuSupportOfDedicatedPilotsForChEstimation;
typedef TknU32 NhuSupportOfDedicatedPilotsForChEstimation;

typedef struct NhuDL_PhysChCapFDD_v380ext
{
 TknPres pres;
 NhuSupportOfDedicatedPilotsForChEstimation dummy;
} NhuDL_PhysChCapFDD_v380ext;


typedef TknU32 NhuHSDSCH_physical_layer_category_ext;


typedef enum enumNhuDL_PhysChCapFDD_v770exthsscchlessHsdschOperation
{
 NhuDL_PhysChCapFDD_v770exthsscchlessHsdschOperationtrueEnum
} EnumNhuDL_PhysChCapFDD_v770exthsscchlessHsdschOperation;
typedef TknU32 NhuDL_PhysChCapFDD_v770exthsscchlessHsdschOperation;


typedef enum enumNhuDL_PhysChCapFDD_v770extenhancedFdpch
{
 NhuDL_PhysChCapFDD_v770extenhancedFdpchtrueEnum
} EnumNhuDL_PhysChCapFDD_v770extenhancedFdpch;
typedef TknU32 NhuDL_PhysChCapFDD_v770extenhancedFdpch;


typedef enum enumNhuDL_PhysChCapFDD_v770exthsdschReception_CellFach
{
 NhuDL_PhysChCapFDD_v770exthsdschReception_CellFachtrueEnum
} EnumNhuDL_PhysChCapFDD_v770exthsdschReception_CellFach;
typedef TknU32 NhuDL_PhysChCapFDD_v770exthsdschReception_CellFach;


typedef enum enumNhuDL_PhysChCapFDD_v770exthsdschReception_CellUraPch
{
 NhuDL_PhysChCapFDD_v770exthsdschReception_CellUraPchtrueEnum
} EnumNhuDL_PhysChCapFDD_v770exthsdschReception_CellUraPch;
typedef TknU32 NhuDL_PhysChCapFDD_v770exthsdschReception_CellUraPch;

typedef struct NhuDL_PhysChCapFDD_v770ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext hsdsch_physical_layer_category_ext;
 NhuDL_PhysChCapFDD_v770exthsscchlessHsdschOperation hsscchlessHsdschOperation;
 NhuDL_PhysChCapFDD_v770extenhancedFdpch enhancedFdpch;
 NhuDL_PhysChCapFDD_v770exthsdschReception_CellFach hsdschReception_CellFach;
 NhuDL_PhysChCapFDD_v770exthsdschReception_CellUraPch hsdschReception_CellUraPch;
} NhuDL_PhysChCapFDD_v770ext;


typedef TknU32 NhuHSDSCH_physical_layer_category_ext2;


typedef enum enumNhuDL_PhysChCapFDD_v860extsupportOfTgtCellPreConfig
{
 NhuDL_PhysChCapFDD_v860extsupportOfTgtCellPreConfigtrueEnum
} EnumNhuDL_PhysChCapFDD_v860extsupportOfTgtCellPreConfig;
typedef TknU32 NhuDL_PhysChCapFDD_v860extsupportOfTgtCellPreConfig;


typedef enum enumNhuDL_PhysChCapFDD_v860extsupportOfHsdschDrxOperation
{
 NhuDL_PhysChCapFDD_v860extsupportOfHsdschDrxOperationtrueEnum
} EnumNhuDL_PhysChCapFDD_v860extsupportOfHsdschDrxOperation;
typedef TknU32 NhuDL_PhysChCapFDD_v860extsupportOfHsdschDrxOperation;

typedef struct NhuDL_PhysChCapFDD_v860ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext2 hsdsch_physical_layer_category_ext2;
 NhuDL_PhysChCapFDD_v860extsupportOfTgtCellPreConfig supportOfTgtCellPreConfig;
 NhuDL_PhysChCapFDD_v860extsupportOfHsdschDrxOperation supportOfHsdschDrxOperation;
} NhuDL_PhysChCapFDD_v860ext;


typedef TknU32 NhuHSDSCH_physical_layer_category_ext3;


typedef enum enumNhuDL_PhysChCapFDD_v920extsupportOfMimoOnlySingleStream
{
 NhuDL_PhysChCapFDD_v920extsupportOfMimoOnlySingleStreamtrueEnum
} EnumNhuDL_PhysChCapFDD_v920extsupportOfMimoOnlySingleStream;
typedef TknU32 NhuDL_PhysChCapFDD_v920extsupportOfMimoOnlySingleStream;

typedef struct NhuDL_PhysChCapFDD_v920ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext3 hsdsch_physical_layer_category_ext3;
 NhuDL_PhysChCapFDD_v920extsupportOfMimoOnlySingleStream supportOfMimoOnlySingleStream;
} NhuDL_PhysChCapFDD_v920ext;


typedef TknU32 NhuHSDSCH_physical_layer_category_ext4;


typedef TknU32 NhuHSDSCH_physical_layer_category_ext5;

typedef struct NhuDL_PhysChCapFDD_va40ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext4 hsdsch_physical_layer_category_ext4;
 NhuHSDSCH_physical_layer_category_ext5 hsdsch_physical_layer_category_ext5;
} NhuDL_PhysChCapFDD_va40ext;


typedef TknU32 NhuHSDSCH_physical_layer_category_ext6;


typedef TknU32 NhuHSDSCH_physical_layer_category_ext7;

typedef struct NhuDL_PhysChCapFDD_vbxyext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext6 hsdsch_physical_layer_category_ext6;
 NhuHSDSCH_physical_layer_category_ext7 hsdsch_physical_layer_category_ext7;
} NhuDL_PhysChCapFDD_vbxyext;


typedef TknU32 NhuMaxTS_PerFrame;


typedef TknU32 NhuMaxPhysChPerFrame;


typedef enum enumNhuMinimumSF_DL
{
 NhuMinimumSF_DLsf1Enum,
 NhuMinimumSF_DLsf16Enum
} EnumNhuMinimumSF_DL;
typedef TknU32 NhuMinimumSF_DL;


typedef TknU32 NhuMaxPhysChPerTS;


typedef TknU8 NhuDL_PhysChCapTDDsupportOfPDSCH;

typedef struct NhuDL_PhysChCapTDD
{
 TknPres pres;
 NhuMaxTS_PerFrame maxTS_PerFrame;
 NhuMaxPhysChPerFrame maxPhysChPerFrame;
 NhuMinimumSF_DL minimumSF;
 NhuDL_PhysChCapTDDsupportOfPDSCH supportOfPDSCH;
 NhuMaxPhysChPerTS maxPhysChPerTS;
} NhuDL_PhysChCapTDD;


typedef TknU32 NhuMaxTS_PerSubFrame_r4;


typedef TknU32 NhuMaxPhysChPerSubFrame_r4;


typedef TknU8 NhuDL_PhysChCapTDD_LCR_r4supportOfPDSCH;


typedef TknU8 NhuDL_PhysChCapTDD_LCR_r4supportOf8PSK;

typedef struct NhuDL_PhysChCapTDD_LCR_r4
{
 TknPres pres;
 NhuMaxTS_PerSubFrame_r4 maxTS_PerSubFrame;
 NhuMaxPhysChPerSubFrame_r4 maxPhysChPerFrame;
 NhuMinimumSF_DL minimumSF;
 NhuDL_PhysChCapTDD_LCR_r4supportOfPDSCH supportOfPDSCH;
 NhuMaxPhysChPerTS maxPhysChPerTS;
 NhuDL_PhysChCapTDD_LCR_r4supportOf8PSK supportOf8PSK;
} NhuDL_PhysChCapTDD_LCR_r4;


typedef TknU32 NhuMultiCarrier_HSDSCH_physical_layer_category;

typedef struct NhuDL_PhysChCapTDD_128_v770ext
{
 TknPres pres;
 NhuMultiCarrier_HSDSCH_physical_layer_category multiCarrier_physical_layer_category;
} NhuDL_PhysChCapTDD_128_v770ext;


typedef TknU32 NhuHSDSCH_physical_layer_category_extension;


typedef TknU32 NhuMultiCarrier_HSDSCH_physical_layer_category_extension;


typedef enum enumNhuDL_PhysChCapTDD_128_v860extsupportOfSFModeForHSPDSCHDualStream
{
 NhuDL_PhysChCapTDD_128_v860extsupportOfSFModeForHSPDSCHDualStreamsf1Enum,
 NhuDL_PhysChCapTDD_128_v860extsupportOfSFModeForHSPDSCHDualStreamsf1sf16Enum
} EnumNhuDL_PhysChCapTDD_128_v860extsupportOfSFModeForHSPDSCHDualStream;
typedef TknU32 NhuDL_PhysChCapTDD_128_v860extsupportOfSFModeForHSPDSCHDualStream;

typedef struct NhuDL_PhysChCapTDD_128_v860ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_extension hSDSCH_physical_layer_category_extension;
 NhuMultiCarrier_HSDSCH_physical_layer_category_extension multiCarrier_physical_layer_category_extension;
 NhuDL_PhysChCapTDD_128_v860extsupportOfSFModeForHSPDSCHDualStream supportOfSFModeForHSPDSCHDualStream;
} NhuDL_PhysChCapTDD_128_v860ext;


typedef TknU32 NhuMultiCarrier_HSDSCH_physical_layer_category_extension2;

typedef struct NhuDL_PhysChCapInfoTDD_128_va40ext
{
 TknPres pres;
 NhuMultiCarrier_HSDSCH_physical_layer_category_extension2 multiCarrier_physical_layer_category_extension2;
} NhuDL_PhysChCapInfoTDD_128_va40ext;


typedef TknU32 NhuMaxPhysChPerFrame_768;


typedef enum enumNhuMinimumSF_DL_768
{
 NhuMinimumSF_DL_768sf1Enum,
 NhuMinimumSF_DL_768sf32Enum
} EnumNhuMinimumSF_DL_768;
typedef TknU32 NhuMinimumSF_DL_768;


typedef TknU32 NhuHSDSCH_physical_layer_category;


typedef TknU32 NhuMaxPhysChPerTS_768;


typedef TknU8 NhuDL_PhysChCapTDD_768supportOfPDSCH;

typedef struct NhuDL_PhysChCapTDD_768tdd768_hspdsch
{
 TknU8 choice;
 union {
  NhuHSDSCH_physical_layer_category supported;
 } val;
} NhuDL_PhysChCapTDD_768tdd768_hspdsch;

typedef struct NhuDL_PhysChCapTDD_768
{
 TknPres pres;
 NhuMaxTS_PerFrame maxTS_PerFrame;
 NhuMaxPhysChPerFrame_768 maxPhysChPerFrame;
 NhuMinimumSF_DL_768 minimumSF;
 NhuDL_PhysChCapTDD_768supportOfPDSCH supportOfPDSCH;
 NhuDL_PhysChCapTDD_768tdd768_hspdsch tdd768_hspdsch;
 NhuMaxPhysChPerTS_768 maxPhysChPerTS;
} NhuDL_PhysChCapTDD_768;


typedef TknU8 NhuDL_PhysChCapInfoTDD_768supportOfPDSCH;

typedef struct NhuDL_PhysChCapInfoTDD_768
{
 TknPres pres;
 NhuMaxTS_PerFrame maxTS_PerFrame;
 NhuMaxPhysChPerFrame_768 maxPhysChPerFrame;
 NhuMinimumSF_DL_768 minimumSF;
 NhuDL_PhysChCapInfoTDD_768supportOfPDSCH supportOfPDSCH;
 NhuMaxPhysChPerTS_768 maxPhysChPerTS;
} NhuDL_PhysChCapInfoTDD_768;


typedef enum enumNhuMaxNoBits
{
 NhuMaxNoBitsb640Enum,
 NhuMaxNoBitsb1280Enum,
 NhuMaxNoBitsb2560Enum,
 NhuMaxNoBitsb3840Enum,
 NhuMaxNoBitsb5120Enum,
 NhuMaxNoBitsb6400Enum,
 NhuMaxNoBitsb7680Enum,
 NhuMaxNoBitsb8960Enum,
 NhuMaxNoBitsb10240Enum,
 NhuMaxNoBitsb20480Enum,
 NhuMaxNoBitsb40960Enum,
 NhuMaxNoBitsb81920Enum,
 NhuMaxNoBitsb163840Enum
} EnumNhuMaxNoBits;
typedef TknU32 NhuMaxNoBits;

typedef struct NhuTurboSupport
{
 TknU8 choice;
 union {
  NhuMaxNoBits supported;
 } val;
} NhuTurboSupport;


typedef enum enumNhuMaxSimultaneousTransChsDL
{
 NhuMaxSimultaneousTransChsDLe4Enum,
 NhuMaxSimultaneousTransChsDLe8Enum,
 NhuMaxSimultaneousTransChsDLe16Enum,
 NhuMaxSimultaneousTransChsDLe32Enum
} EnumNhuMaxSimultaneousTransChsDL;
typedef TknU32 NhuMaxSimultaneousTransChsDL;


typedef TknU32 NhuMaxSimultaneousCCTrCH_Count;


typedef enum enumNhuMaxTportBlocksDL
{
 NhuMaxTportBlocksDLtb4Enum,
 NhuMaxTportBlocksDLtb8Enum,
 NhuMaxTportBlocksDLtb16Enum,
 NhuMaxTportBlocksDLtb32Enum,
 NhuMaxTportBlocksDLtb48Enum,
 NhuMaxTportBlocksDLtb64Enum,
 NhuMaxTportBlocksDLtb96Enum,
 NhuMaxTportBlocksDLtb128Enum,
 NhuMaxTportBlocksDLtb256Enum,
 NhuMaxTportBlocksDLtb512Enum
} EnumNhuMaxTportBlocksDL;
typedef TknU32 NhuMaxTportBlocksDL;


typedef enum enumNhuMaxNumberOfTFC_DL
{
 NhuMaxNumberOfTFC_DLtfc16Enum,
 NhuMaxNumberOfTFC_DLtfc32Enum,
 NhuMaxNumberOfTFC_DLtfc48Enum,
 NhuMaxNumberOfTFC_DLtfc64Enum,
 NhuMaxNumberOfTFC_DLtfc96Enum,
 NhuMaxNumberOfTFC_DLtfc128Enum,
 NhuMaxNumberOfTFC_DLtfc256Enum,
 NhuMaxNumberOfTFC_DLtfc512Enum,
 NhuMaxNumberOfTFC_DLtfc1024Enum
} EnumNhuMaxNumberOfTFC_DL;
typedef TknU32 NhuMaxNumberOfTFC_DL;


typedef enum enumNhuMaxNumberOfTF
{
 NhuMaxNumberOfTFtf32Enum,
 NhuMaxNumberOfTFtf64Enum,
 NhuMaxNumberOfTFtf128Enum,
 NhuMaxNumberOfTFtf256Enum,
 NhuMaxNumberOfTFtf512Enum,
 NhuMaxNumberOfTFtf1024Enum
} EnumNhuMaxNumberOfTF;
typedef TknU32 NhuMaxNumberOfTF;

typedef struct NhuDL_TransChCap
{
 TknPres pres;
 NhuMaxNoBits maxNoBitsReceived;
 NhuMaxNoBits maxConvCodeBitsReceived;
 NhuTurboSupport turboDecodingSupport;
 NhuMaxSimultaneousTransChsDL maxSimultaneousTransChs;
 NhuMaxSimultaneousCCTrCH_Count maxSimultaneousCCTrCH_Count;
 NhuMaxTportBlocksDL maxReceivedTportBlocks;
 NhuMaxNumberOfTFC_DL maxNumberOfTFC;
 NhuMaxNumberOfTF maxNumberOfTF;
} NhuDL_TransChCap;


typedef TknU32 NhuTransmissionProbability;


typedef TknU32 NhuMaxBitRate;

typedef struct NhuDRAC_SysInfo
{
 TknPres pres;
 NhuTransmissionProbability transmissionProbability;
 NhuMaxBitRate maximumBitRate;
} NhuDRAC_SysInfo;

typedef struct NhuDRAC_SysInfoLst
{
 TknU16 noComp;
 NhuDRAC_SysInfo *member;
}NhuDRAC_SysInfoLst;


typedef TknStrBSXL NhuDSCH_RNTI;

typedef enum enumNhuDelayRestrnFlag
{
 NhuDelayRestrnFlagtrueEnum
} EnumNhuDelayRestrnFlag;
typedef TknU32 NhuDelayRestrnFlag;


typedef TknStrBSXL NhuE_RNTI;

typedef TknStrBSXL NhuESN_DS_41;

typedef TknU32 NhuExtendedWaitTime;


typedef TknU32 NhuTGPSI;


typedef enum enumNhuProtErrCause
{
 NhuProtErrCauseasn1_ViolationOrEncodingErrEnum,
 NhuProtErrCausemessageTypNonexistentEnum,
 NhuProtErrCausemessageNotCompatibleWithReceiverStateEnum,
 NhuProtErrCauseie_ValueNotComprehendedEnum,
 NhuProtErrCauseinformationElementMissingEnum,
 NhuProtErrCausemessageExtnNotComprehendedEnum,
 NhuProtErrCausespare2Enum,
 NhuProtErrCausespare1Enum
} EnumNhuProtErrCause;
typedef TknU32 NhuProtErrCause;

typedef struct NhuProtErrInfodiagnosticsTyptype1
{
 TknPres pres;
 NhuProtErrCause protocolErrCause;
} NhuProtErrInfodiagnosticsTyptype1;

typedef struct NhuProtErrInfodiagnosticsTyp
{
 TknU8 choice;
 union {
  NhuProtErrInfodiagnosticsTyptype1 type1;
 } val;
} NhuProtErrInfodiagnosticsTyp;

typedef struct NhuProtErrInfo
{
 TknPres pres;
 NhuProtErrInfodiagnosticsTyp diagnosticsTyp;
} NhuProtErrInfo;

typedef struct NhuFailCauseWithProtErr
{
 TknU8 choice;
 union {
  NhuTGPSI compressedModeRuntimeErr;
  NhuProtErrInfo protocolErr;
 } val;
} NhuFailCauseWithProtErr;


typedef struct NhuFailCauseWithProtErrTrId
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuFailCauseWithProtErr failureCause;
} NhuFailCauseWithProtErrTrId;

typedef struct NhuFrequencyBandsIndicatorFDD
{
 TknU8 choice;
 union {
  NhuRadioFrequencyBandFDD frequencyBandsIndicator1;
  NhuRadioFrequencyBandFDD2 frequencyBandsIndicator2;
  NhuRadioFrequencyBandFDD3 frequencyBandsIndicator3;
 } val;
} NhuFrequencyBandsIndicatorFDD;

typedef struct NhuFrequencyBandsRedirectionFDD
{
 TknU16 noComp;
 NhuFrequencyBandsIndicatorFDD *member;
}NhuFrequencyBandsRedirectionFDD;


typedef enum enumNhuRadioFrequencyBandTDD_r10
{
 NhuRadioFrequencyBandTDD_r10aEnum,
 NhuRadioFrequencyBandTDD_r10bEnum,
 NhuRadioFrequencyBandTDD_r10cEnum,
 NhuRadioFrequencyBandTDD_r10dEnum,
 NhuRadioFrequencyBandTDD_r10eEnum,
 NhuRadioFrequencyBandTDD_r10fEnum,
 NhuRadioFrequencyBandTDD_r10spare2Enum,
 NhuRadioFrequencyBandTDD_r10spare1Enum
} EnumNhuRadioFrequencyBandTDD_r10;
typedef TknU32 NhuRadioFrequencyBandTDD_r10;

typedef struct NhuFrequencyBandsIndicatorSupportTDD128
{
 TknPres pres;
 NhuRadioFrequencyBandTDD_r10 frequencyBandsIndicatorTDD;
} NhuFrequencyBandsIndicatorSupportTDD128;

typedef struct NhuFrequencyBandsIndicatorTDD128
{
 TknU16 noComp;
 NhuFrequencyBandsIndicatorSupportTDD128 *member;
}NhuFrequencyBandsIndicatorTDD128;

typedef struct NhuFrequencyBandsIndicatorSupportmodeSpecificInfofdd
{
 TknPres pres;
 NhuFrequencyBandsRedirectionFDD frequencyBandsSupportFDD;
} NhuFrequencyBandsIndicatorSupportmodeSpecificInfofdd;

typedef struct NhuFrequencyBandsIndicatorSupportmodeSpecificInfotdd
{
 TknPres pres;
 NhuFrequencyBandsIndicatorTDD128 frequencyBandsSupportTDD128;
} NhuFrequencyBandsIndicatorSupportmodeSpecificInfotdd;

typedef struct NhuFrequencyBandsIndicatorSupportmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuFrequencyBandsIndicatorSupportmodeSpecificInfofdd fdd;
  NhuFrequencyBandsIndicatorSupportmodeSpecificInfotdd tdd;
 } val;
} NhuFrequencyBandsIndicatorSupportmodeSpecificInfo;

typedef struct NhuFrequencyBandsIndicatorSupport
{
 TknPres pres;
 NhuFrequencyBandsIndicatorSupportmodeSpecificInfo modeSpecificInfo;
} NhuFrequencyBandsIndicatorSupport;


typedef enum enumNhuGANSS_Mode
{
 NhuGANSS_ModenetworkBasedEnum,
 NhuGANSS_ModeuEBasedEnum,
 NhuGANSS_ModebothEnum,
 NhuGANSS_ModenoneEnum
} EnumNhuGANSS_Mode;
typedef TknU32 NhuGANSS_Mode;


typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b1;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b2;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b3;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b4;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b5;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b6;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b7;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b8;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b9;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b10;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b11;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b12;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b13;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b14;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b15;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b16;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b17;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b18;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b19;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b20;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b21;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b22;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b23;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b24;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b25;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b26;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b27;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b28;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b29;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b30;

typedef TknStrBSXL NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b31;
typedef struct NhuU_RNTI_Group
{
 TknU8 choice;
 union {
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b1 u_RNTI_BitMaskIdx_b1;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b2 u_RNTI_BitMaskIdx_b2;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b3 u_RNTI_BitMaskIdx_b3;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b4 u_RNTI_BitMaskIdx_b4;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b5 u_RNTI_BitMaskIdx_b5;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b6 u_RNTI_BitMaskIdx_b6;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b7 u_RNTI_BitMaskIdx_b7;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b8 u_RNTI_BitMaskIdx_b8;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b9 u_RNTI_BitMaskIdx_b9;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b10 u_RNTI_BitMaskIdx_b10;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b11 u_RNTI_BitMaskIdx_b11;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b12 u_RNTI_BitMaskIdx_b12;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b13 u_RNTI_BitMaskIdx_b13;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b14 u_RNTI_BitMaskIdx_b14;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b15 u_RNTI_BitMaskIdx_b15;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b16 u_RNTI_BitMaskIdx_b16;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b17 u_RNTI_BitMaskIdx_b17;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b18 u_RNTI_BitMaskIdx_b18;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b19 u_RNTI_BitMaskIdx_b19;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b20 u_RNTI_BitMaskIdx_b20;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b21 u_RNTI_BitMaskIdx_b21;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b22 u_RNTI_BitMaskIdx_b22;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b23 u_RNTI_BitMaskIdx_b23;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b24 u_RNTI_BitMaskIdx_b24;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b25 u_RNTI_BitMaskIdx_b25;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b26 u_RNTI_BitMaskIdx_b26;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b27 u_RNTI_BitMaskIdx_b27;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b28 u_RNTI_BitMaskIdx_b28;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b29 u_RNTI_BitMaskIdx_b29;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b30 u_RNTI_BitMaskIdx_b30;
  NhuU_RNTI_Groupu_RNTI_BitMaskIdx_b31 u_RNTI_BitMaskIdx_b31;
 } val;
} NhuU_RNTI_Group;

typedef struct NhuGroupRlsInfo
{
 TknPres pres;
 NhuU_RNTI_Group uRNTI_Group;
} NhuGroupRlsInfo;


typedef TknStrBSXL NhuH_RNTI;

typedef enum enumNhuHigh_MobilityDetected
{
 NhuHigh_MobilityDetectedhigh_MobilityDetectedEnum
} EnumNhuHigh_MobilityDetected;
typedef TknU32 NhuHigh_MobilityDetected;


typedef TknStrBSXL NhuUESpecificBehaviourInfo1idle;

typedef TknStrBSXL NhuUESpecificBehaviourInfo1interRAT;

typedef TknU8 NhuIdleIntervalMeasCapabEUTRAidleInterval;

typedef struct NhuIdleIntervalMeasCapabEUTRA
{
 TknPres pres;
 NhuRadioFrequencyBandEUTRA radioFrequencyBandEUTRA;
 NhuIdleIntervalMeasCapabEUTRAidleInterval idleInterval;
} NhuIdleIntervalMeasCapabEUTRA;

typedef struct NhuIdleIntervalMeasCapabEUTRALst
{
 TknU16 noComp;
 NhuIdleIntervalMeasCapabEUTRA *member;
}NhuIdleIntervalMeasCapabEUTRALst;

typedef struct NhuIMSI_and_ESN_DS_41
{
 TknPres pres;
 NhuIMSI_DS_41 imsi_DS_41;
 NhuESN_DS_41 esn_DS_41;
} NhuIMSI_and_ESN_DS_41;


typedef TknStrBSXL NhuMsgAuthenticationCode;

typedef TknU32 NhuRRC_MsgSequenceNumber;

typedef struct NhuIntegrityCheckInfo
{
 TknPres pres;
 NhuMsgAuthenticationCode messageAuthenticationCode;
 NhuRRC_MsgSequenceNumber rrc_MsgSequenceNumber;
} NhuIntegrityCheckInfo;


typedef enum enumNhuMaxHcCtxtSpace
{
 NhuMaxHcCtxtSpacedummyEnum,
 NhuMaxHcCtxtSpaceby1024Enum,
 NhuMaxHcCtxtSpaceby2048Enum,
 NhuMaxHcCtxtSpaceby4096Enum,
 NhuMaxHcCtxtSpaceby8192Enum
} EnumNhuMaxHcCtxtSpace;
typedef TknU32 NhuMaxHcCtxtSpace;


typedef enum enumNhuMaxHcCtxtSpace_r5_ext
{
 NhuMaxHcCtxtSpace_r5_extby16384Enum,
 NhuMaxHcCtxtSpace_r5_extby32768Enum,
 NhuMaxHcCtxtSpace_r5_extby65536Enum,
 NhuMaxHcCtxtSpace_r5_extby131072Enum
} EnumNhuMaxHcCtxtSpace_r5_ext;
typedef TknU32 NhuMaxHcCtxtSpace_r5_ext;


typedef enum enumNhuMaxROHC_CtxtSessions_r4
{
 NhuMaxROHC_CtxtSessions_r4s2Enum,
 NhuMaxROHC_CtxtSessions_r4s4Enum,
 NhuMaxROHC_CtxtSessions_r4s8Enum,
 NhuMaxROHC_CtxtSessions_r4s12Enum,
 NhuMaxROHC_CtxtSessions_r4s16Enum,
 NhuMaxROHC_CtxtSessions_r4s24Enum,
 NhuMaxROHC_CtxtSessions_r4s32Enum,
 NhuMaxROHC_CtxtSessions_r4s48Enum,
 NhuMaxROHC_CtxtSessions_r4s64Enum,
 NhuMaxROHC_CtxtSessions_r4s128Enum,
 NhuMaxROHC_CtxtSessions_r4s256Enum,
 NhuMaxROHC_CtxtSessions_r4s512Enum,
 NhuMaxROHC_CtxtSessions_r4s1024Enum,
 NhuMaxROHC_CtxtSessions_r4s16384Enum
} EnumNhuMaxROHC_CtxtSessions_r4;
typedef TknU32 NhuMaxROHC_CtxtSessions_r4;


typedef enum enumNhuMaxAM_EntityNumberRLC_Cap
{
 NhuMaxAM_EntityNumberRLC_CapdummyEnum,
 NhuMaxAM_EntityNumberRLC_Capam4Enum,
 NhuMaxAM_EntityNumberRLC_Capam5Enum,
 NhuMaxAM_EntityNumberRLC_Capam6Enum,
 NhuMaxAM_EntityNumberRLC_Capam8Enum,
 NhuMaxAM_EntityNumberRLC_Capam16Enum,
 NhuMaxAM_EntityNumberRLC_Capam30Enum
} EnumNhuMaxAM_EntityNumberRLC_Cap;
typedef TknU32 NhuMaxAM_EntityNumberRLC_Cap;


typedef enum enumNhuMaxRLC_WindowSize
{
 NhuMaxRLC_WindowSizemws2047Enum,
 NhuMaxRLC_WindowSizemws4095Enum
} EnumNhuMaxRLC_WindowSize;
typedef TknU32 NhuMaxRLC_WindowSize;


typedef enum enumNhuMaxNoDPDCH_BitsTransmitted
{
 NhuMaxNoDPDCH_BitsTransmittedb600Enum,
 NhuMaxNoDPDCH_BitsTransmittedb1200Enum,
 NhuMaxNoDPDCH_BitsTransmittedb2400Enum,
 NhuMaxNoDPDCH_BitsTransmittedb4800Enum,
 NhuMaxNoDPDCH_BitsTransmittedb9600Enum,
 NhuMaxNoDPDCH_BitsTransmittedb19200Enum,
 NhuMaxNoDPDCH_BitsTransmittedb28800Enum,
 NhuMaxNoDPDCH_BitsTransmittedb38400Enum,
 NhuMaxNoDPDCH_BitsTransmittedb48000Enum,
 NhuMaxNoDPDCH_BitsTransmittedb57600Enum
} EnumNhuMaxNoDPDCH_BitsTransmitted;
typedef TknU32 NhuMaxNoDPDCH_BitsTransmitted;


typedef enum enumNhuMaxNumberOfTFC_UL
{
 NhuMaxNumberOfTFC_ULdummy1Enum,
 NhuMaxNumberOfTFC_ULdummy2Enum,
 NhuMaxNumberOfTFC_ULtfc16Enum,
 NhuMaxNumberOfTFC_ULtfc32Enum,
 NhuMaxNumberOfTFC_ULtfc48Enum,
 NhuMaxNumberOfTFC_ULtfc64Enum,
 NhuMaxNumberOfTFC_ULtfc96Enum,
 NhuMaxNumberOfTFC_ULtfc128Enum,
 NhuMaxNumberOfTFC_ULtfc256Enum,
 NhuMaxNumberOfTFC_ULtfc512Enum,
 NhuMaxNumberOfTFC_ULtfc1024Enum
} EnumNhuMaxNumberOfTFC_UL;
typedef TknU32 NhuMaxNumberOfTFC_UL;


typedef enum enumNhuMaxPhysChPerTimeslot
{
 NhuMaxPhysChPerTimeslotts1Enum,
 NhuMaxPhysChPerTimeslotts2Enum
} EnumNhuMaxPhysChPerTimeslot;
typedef TknU32 NhuMaxPhysChPerTimeslot;


typedef TknU32 NhuMaxPhysChPerTimeslot_LCR_r7;


typedef enum enumNhuMaxSimultaneousTransChsUL
{
 NhuMaxSimultaneousTransChsULdummyEnum,
 NhuMaxSimultaneousTransChsULe4Enum,
 NhuMaxSimultaneousTransChsULe8Enum,
 NhuMaxSimultaneousTransChsULe16Enum,
 NhuMaxSimultaneousTransChsULe32Enum
} EnumNhuMaxSimultaneousTransChsUL;
typedef TknU32 NhuMaxSimultaneousTransChsUL;


typedef enum enumNhuMaxTportBlocksUL
{
 NhuMaxTportBlocksULdummyEnum,
 NhuMaxTportBlocksULtb4Enum,
 NhuMaxTportBlocksULtb8Enum,
 NhuMaxTportBlocksULtb16Enum,
 NhuMaxTportBlocksULtb32Enum,
 NhuMaxTportBlocksULtb48Enum,
 NhuMaxTportBlocksULtb64Enum,
 NhuMaxTportBlocksULtb96Enum,
 NhuMaxTportBlocksULtb128Enum,
 NhuMaxTportBlocksULtb256Enum,
 NhuMaxTportBlocksULtb512Enum
} EnumNhuMaxTportBlocksUL;
typedef TknU32 NhuMaxTportBlocksUL;

typedef struct NhuMeasurementCap
{
 TknPres pres;
 NhuCompressedModeMeasCap downlinkCompressedMode;
 NhuCompressedModeMeasCap uplinkCompressedMode;
} NhuMeasurementCap;

typedef struct NhuMeasurementCapExt
{
 TknPres pres;
 NhuCompressedModeMeasCapabFDDLst compressedModeMeasCapabFDDLst;
 NhuCompressedModeMeasCapabTDDLst compressedModeMeasCapabTDDLst;
 NhuCompressedModeMeasCapabGSMLst compressedModeMeasCapabGSMLst;
 NhuCompressedModeMeasCapabMC compressedModeMeasCapabMC;
} NhuMeasurementCapExt;

typedef struct NhuMeasurementCapExt2
{
 TknPres pres;
 NhuCompressedModeMeasCapabFDDLst2 compressedModeMeasCapabFDDLst;
 NhuCompressedModeMeasCapabTDDLst compressedModeMeasCapabTDDLst;
 NhuCompressedModeMeasCapabGSMLst compressedModeMeasCapabGSMLst;
 NhuCompressedModeMeasCapabMC compressedModeMeasCapabMC;
} NhuMeasurementCapExt2;

typedef struct NhuMeasurementCapExt3
{
 TknPres pres;
 NhuCompressedModeMeasCapabEUTRALst compressedModeMeasCapabEUTRALst;
} NhuMeasurementCapExt3;

typedef struct NhuMeasurementCapExt4
{
 TknPres pres;
 NhuCompressedModeMeasCapabFDDLst2 compressedModeMeasCapabFDDLst2;
 NhuCompressedModeMeasCapabFDDLst3 compressedModeMeasCapabFDDLst3;
 NhuCompressedModeMeasCapabTDDLst compressedModeMeasCapabTDDLst;
 NhuCompressedModeMeasCapabGSMLst compressedModeMeasCapabGSMLst;
 NhuCompressedModeMeasCapabMC compressedModeMeasCapabMC;
 NhuCompressedModeMeasCapabEUTRALst compressedModeMeasCapabEUTRALst;
} NhuMeasurementCapExt4;

typedef struct NhuMeasurementCap_r4_ext
{
 TknPres pres;
 NhuCompressedModeMeasCap_LCR_r4 downlinkCompressedMode_LCR;
 NhuCompressedModeMeasCap_LCR_r4 uplinkCompressedMode_LCR;
} NhuMeasurementCap_r4_ext;

typedef struct NhuMeasurementCap_v860ext
{
 TknPres pres;
 NhuCompressedModeMeasCap_v860ext downlinkCompressedMode;
} NhuMeasurementCap_v860ext;

typedef struct NhuMeasurementCap_v920ext
{
 TknPres pres;
 NhuCompressedModeMeasCap_v920ext downlinkCompressedMode;
} NhuMeasurementCap_v920ext;


typedef enum enumNhuMeasurementCap_va40extinterFrequencyDetectedSetMeasurements
{
 NhuMeasurementCap_va40extinterFrequencyDetectedSetMeasurementstrueEnum
} EnumNhuMeasurementCap_va40extinterFrequencyDetectedSetMeasurements;
typedef TknU32 NhuMeasurementCap_va40extinterFrequencyDetectedSetMeasurements;

typedef struct NhuMeasurementCap_va40ext
{
 TknPres pres;
 NhuMeasurementCap_va40extinterFrequencyDetectedSetMeasurements interFrequencyDetectedSetMeasurements;
 NhuCompressedModeMeasCap_va40ext downlinkCompressedMode;
} NhuMeasurementCap_va40ext;

typedef struct NhuMeasurementCapTDD
{
 TknPres pres;
 NhuIdleIntervalMeasCapabEUTRALst idleIntervalMeasCapabEUTRALst;
} NhuMeasurementCapTDD;


typedef enum enumNhuMinimumSF_UL
{
 NhuMinimumSF_ULsf1Enum,
 NhuMinimumSF_ULsf2Enum,
 NhuMinimumSF_ULsf4Enum,
 NhuMinimumSF_ULsf8Enum,
 NhuMinimumSF_ULdummyEnum
} EnumNhuMinimumSF_UL;
typedef TknU32 NhuMinimumSF_UL;


typedef enum enumNhuNonContiguousMultiCellaggregatedCells
{
 NhuNonContiguousMultiCellaggregatedCellsnc_2cEnum,
 NhuNonContiguousMultiCellaggregatedCellsnc_3cEnum,
 NhuNonContiguousMultiCellaggregatedCellsnc_4cEnum
} EnumNhuNonContiguousMultiCellaggregatedCells;
typedef TknU32 NhuNonContiguousMultiCellaggregatedCells;


typedef enum enumNhuNonContiguousMultiCellgapSize
{
 NhuNonContiguousMultiCellgapSizefiveMHzEnum,
 NhuNonContiguousMultiCellgapSizetenMHzEnum,
 NhuNonContiguousMultiCellgapSizeanyGapSizeEnum,
 NhuNonContiguousMultiCellgapSizespare5Enum,
 NhuNonContiguousMultiCellgapSizespare4Enum,
 NhuNonContiguousMultiCellgapSizespare3Enum,
 NhuNonContiguousMultiCellgapSizespare2Enum,
 NhuNonContiguousMultiCellgapSizespare1Enum
} EnumNhuNonContiguousMultiCellgapSize;
typedef TknU32 NhuNonContiguousMultiCellgapSize;


typedef enum enumNhuNonContiguousMultiCellnonContiguousMultiCellCombination22
{
 NhuNonContiguousMultiCellnonContiguousMultiCellCombination22trueEnum
} EnumNhuNonContiguousMultiCellnonContiguousMultiCellCombination22;
typedef TknU32 NhuNonContiguousMultiCellnonContiguousMultiCellCombination22;


typedef enum enumNhuNonContiguousMultiCellnonContiguousMultiCellCombination31_13
{
 NhuNonContiguousMultiCellnonContiguousMultiCellCombination31_13trueEnum
} EnumNhuNonContiguousMultiCellnonContiguousMultiCellCombination31_13;
typedef TknU32 NhuNonContiguousMultiCellnonContiguousMultiCellCombination31_13;

typedef struct NhuNonContiguousMultiCell
{
 TknPres pres;
 NhuNonContiguousMultiCellaggregatedCells aggregatedCells;
 NhuNonContiguousMultiCellgapSize gapSize;
 NhuNonContiguousMultiCellnonContiguousMultiCellCombination22 nonContiguousMultiCellCombination22;
 NhuNonContiguousMultiCellnonContiguousMultiCellCombination31_13 nonContiguousMultiCellCombination31_13;
} NhuNonContiguousMultiCell;

typedef struct NhuNonContiguousMultiCellCombinationLst
{
 TknU16 noComp;
 NhuNonContiguousMultiCell *member;
}NhuNonContiguousMultiCellCombinationLst;


typedef enum enumNhuMultiModeCap
{
 NhuMultiModeCaptddEnum,
 NhuMultiModeCapfddEnum,
 NhuMultiModeCapfdd_tddEnum
} EnumNhuMultiModeCap;
typedef TknU32 NhuMultiModeCap;


typedef TknU8 NhuMultiRAT_CapsupportOfGSM;


typedef TknU8 NhuMultiRAT_CapsupportOfMulticarrier;

typedef struct NhuMultiRAT_Cap
{
 TknPres pres;
 NhuMultiRAT_CapsupportOfGSM supportOfGSM;
 NhuMultiRAT_CapsupportOfMulticarrier supportOfMulticarrier;
} NhuMultiRAT_Cap;


typedef TknU8 NhuMultiModeRAT_Cap_v590extsupportOfUTRAN_ToGERAN_NACC;

typedef struct NhuMultiModeRAT_Cap_v590ext
{
 TknPres pres;
 NhuMultiModeRAT_Cap_v590extsupportOfUTRAN_ToGERAN_NACC supportOfUTRAN_ToGERAN_NACC;
} NhuMultiModeRAT_Cap_v590ext;


typedef enum enumNhuMultiModeRAT_Cap_v680extsupportOfHovrToGAN
{
 NhuMultiModeRAT_Cap_v680extsupportOfHovrToGANdoesSupportHovrToGANEnum
} EnumNhuMultiModeRAT_Cap_v680extsupportOfHovrToGAN;
typedef TknU32 NhuMultiModeRAT_Cap_v680extsupportOfHovrToGAN;

typedef struct NhuMultiModeRAT_Cap_v680ext
{
 TknPres pres;
 NhuMultiModeRAT_Cap_v680extsupportOfHovrToGAN supportOfHovrToGAN;
} NhuMultiModeRAT_Cap_v680ext;


typedef enum enumNhuMultiModeRAT_Cap_v770extsupportOfPSHovrToGAN
{
 NhuMultiModeRAT_Cap_v770extsupportOfPSHovrToGANdoesSupportPSHovrToGANEnum
} EnumNhuMultiModeRAT_Cap_v770extsupportOfPSHovrToGAN;
typedef TknU32 NhuMultiModeRAT_Cap_v770extsupportOfPSHovrToGAN;

typedef struct NhuMultiModeRAT_Cap_v770ext
{
 TknPres pres;
 NhuMultiModeRAT_Cap_v770extsupportOfPSHovrToGAN supportOfPSHovrToGAN;
} NhuMultiModeRAT_Cap_v770ext;


typedef enum enumNhuMultiModeRAT_Cap_v860extsupportOfEUTRAFDD
{
 NhuMultiModeRAT_Cap_v860extsupportOfEUTRAFDDdoesSupportEUTRAFDDEnum
} EnumNhuMultiModeRAT_Cap_v860extsupportOfEUTRAFDD;
typedef TknU32 NhuMultiModeRAT_Cap_v860extsupportOfEUTRAFDD;


typedef enum enumNhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRAFDD
{
 NhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRAFDDdoesSupportInterRATHOToEUTRAFDDEnum
} EnumNhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRAFDD;
typedef TknU32 NhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRAFDD;


typedef enum enumNhuMultiModeRAT_Cap_v860extsupportOfEUTRATDD
{
 NhuMultiModeRAT_Cap_v860extsupportOfEUTRATDDdoesSupportEUTRATDDEnum
} EnumNhuMultiModeRAT_Cap_v860extsupportOfEUTRATDD;
typedef TknU32 NhuMultiModeRAT_Cap_v860extsupportOfEUTRATDD;


typedef enum enumNhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRATDD
{
 NhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRATDDdoesSupportInterRATHOToEUTRATDDEnum
} EnumNhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRATDD;
typedef TknU32 NhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRATDD;


typedef TknStrBSXL NhuMultiModeRAT_Cap_v860exteutraFeatureGroupIndicators;
typedef struct NhuMultiModeRAT_Cap_v860ext
{
 TknPres pres;
 NhuMultiModeRAT_Cap_v860extsupportOfEUTRAFDD supportOfEUTRAFDD;
 NhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRAFDD supportOfInterRATHOToEUTRAFDD;
 NhuMultiModeRAT_Cap_v860extsupportOfEUTRATDD supportOfEUTRATDD;
 NhuMultiModeRAT_Cap_v860extsupportOfInterRATHOToEUTRATDD supportOfInterRATHOToEUTRATDD;
 NhuMultiModeRAT_Cap_v860exteutraFeatureGroupIndicators eutraFeatureGroupIndicators;
} NhuMultiModeRAT_Cap_v860ext;


typedef TknU32 NhuN_300;


typedef TknU32 NhuN_301;


typedef TknU32 NhuN_302;


typedef TknU32 NhuN_304;


typedef TknU32 NhuN_308;


typedef TknU32 NhuN_310;


typedef enum enumNhuN_312
{
 NhuN_312s1Enum,
 NhuN_312s50Enum,
 NhuN_312s100Enum,
 NhuN_312s200Enum,
 NhuN_312s400Enum,
 NhuN_312s600Enum,
 NhuN_312s800Enum,
 NhuN_312s1000Enum
} EnumNhuN_312;
typedef TknU32 NhuN_312;


typedef enum enumNhuN_312ext
{
 NhuN_312exts2Enum,
 NhuN_312exts4Enum,
 NhuN_312exts10Enum,
 NhuN_312exts20Enum
} EnumNhuN_312ext;
typedef TknU32 NhuN_312ext;


typedef enum enumNhuN_312_r5
{
 NhuN_312_r5s1Enum,
 NhuN_312_r5s2Enum,
 NhuN_312_r5s4Enum,
 NhuN_312_r5s10Enum,
 NhuN_312_r5s20Enum,
 NhuN_312_r5s50Enum,
 NhuN_312_r5s100Enum,
 NhuN_312_r5s200Enum,
 NhuN_312_r5s400Enum,
 NhuN_312_r5s600Enum,
 NhuN_312_r5s800Enum,
 NhuN_312_r5s1000Enum
} EnumNhuN_312_r5;
typedef TknU32 NhuN_312_r5;


typedef enum enumNhuN_313
{
 NhuN_313s1Enum,
 NhuN_313s2Enum,
 NhuN_313s4Enum,
 NhuN_313s10Enum,
 NhuN_313s20Enum,
 NhuN_313s50Enum,
 NhuN_313s100Enum,
 NhuN_313s200Enum
} EnumNhuN_313;
typedef TknU32 NhuN_313;


typedef enum enumNhuN_315
{
 NhuN_315s1Enum,
 NhuN_315s50Enum,
 NhuN_315s100Enum,
 NhuN_315s200Enum,
 NhuN_315s400Enum,
 NhuN_315s600Enum,
 NhuN_315s800Enum,
 NhuN_315s1000Enum
} EnumNhuN_315;
typedef TknU32 NhuN_315;


typedef enum enumNhuN_315ext
{
 NhuN_315exts2Enum,
 NhuN_315exts4Enum,
 NhuN_315exts10Enum,
 NhuN_315exts20Enum
} EnumNhuN_315ext;
typedef TknU32 NhuN_315ext;


typedef enum enumNhuN_315_r5
{
 NhuN_315_r5s1Enum,
 NhuN_315_r5s2Enum,
 NhuN_315_r5s4Enum,
 NhuN_315_r5s10Enum,
 NhuN_315_r5s20Enum,
 NhuN_315_r5s50Enum,
 NhuN_315_r5s100Enum,
 NhuN_315_r5s200Enum,
 NhuN_315_r5s400Enum,
 NhuN_315_r5s600Enum,
 NhuN_315_r5s800Enum,
 NhuN_315_r5s1000Enum
} EnumNhuN_315_r5;
typedef TknU32 NhuN_315_r5;


typedef enum enumNhuNeighCellSI_AcquisitionCapsupportOfIntraFreqSIAcquisitionForHO
{
 NhuNeighCellSI_AcquisitionCapsupportOfIntraFreqSIAcquisitionForHOtrueEnum
} EnumNhuNeighCellSI_AcquisitionCapsupportOfIntraFreqSIAcquisitionForHO;
typedef TknU32 NhuNeighCellSI_AcquisitionCapsupportOfIntraFreqSIAcquisitionForHO;


typedef enum enumNhuNeighCellSI_AcquisitionCapsupportOfInterFreqSIAcquisitionForHO
{
 NhuNeighCellSI_AcquisitionCapsupportOfInterFreqSIAcquisitionForHOtrueEnum
} EnumNhuNeighCellSI_AcquisitionCapsupportOfInterFreqSIAcquisitionForHO;
typedef TknU32 NhuNeighCellSI_AcquisitionCapsupportOfInterFreqSIAcquisitionForHO;


typedef enum enumNhuNeighCellSI_AcquisitionCapsupportOfE_UtraSIAcquisitionForHO
{
 NhuNeighCellSI_AcquisitionCapsupportOfE_UtraSIAcquisitionForHOtrueEnum
} EnumNhuNeighCellSI_AcquisitionCapsupportOfE_UtraSIAcquisitionForHO;
typedef TknU32 NhuNeighCellSI_AcquisitionCapsupportOfE_UtraSIAcquisitionForHO;

typedef struct NhuNeighCellSI_AcquisitionCap
{
 TknPres pres;
 NhuNeighCellSI_AcquisitionCapsupportOfIntraFreqSIAcquisitionForHO supportOfIntraFreqSIAcquisitionForHO;
 NhuNeighCellSI_AcquisitionCapsupportOfInterFreqSIAcquisitionForHO supportOfInterFreqSIAcquisitionForHO;
 NhuNeighCellSI_AcquisitionCapsupportOfE_UtraSIAcquisitionForHO supportOfE_UtraSIAcquisitionForHO;
} NhuNeighCellSI_AcquisitionCap;


typedef TknU32 NhuGANSS_Signal_Id;


typedef enum enumNhuNwAssistedGANSS_Supp_LstMembergANSS_Id
{
 NhuNwAssistedGANSS_Supp_LstMembergANSS_IdsbasEnum,
 NhuNwAssistedGANSS_Supp_LstMembergANSS_IdmodernizedGPSEnum,
 NhuNwAssistedGANSS_Supp_LstMembergANSS_IdqzssEnum,
 NhuNwAssistedGANSS_Supp_LstMembergANSS_IdglonassEnum,
 NhuNwAssistedGANSS_Supp_LstMembergANSS_Idspare4Enum,
 NhuNwAssistedGANSS_Supp_LstMembergANSS_Idspare3Enum,
 NhuNwAssistedGANSS_Supp_LstMembergANSS_Idspare2Enum,
 NhuNwAssistedGANSS_Supp_LstMembergANSS_Idspare1Enum
} EnumNhuNwAssistedGANSS_Supp_LstMembergANSS_Id;
typedef TknU32 NhuNwAssistedGANSS_Supp_LstMembergANSS_Id;


typedef TknU8 NhuNwAssistedGANSS_Supp_LstMembersupportForUE_GANSS_TimingOfCellFrames;


typedef TknU8 NhuNwAssistedGANSS_Supp_LstMembersupportForUE_GANSS_CarrierPhaseMeasurement;

typedef struct NhuNwAssistedGANSS_Supp_LstMember
{
 TknPres pres;
 NhuNwAssistedGANSS_Supp_LstMembergANSS_Id gANSS_Id;
 NhuGANSS_Mode gANSS_Mode;
 NhuGANSS_Signal_Id gANSS_SignalId;
 NhuNwAssistedGANSS_Supp_LstMembersupportForUE_GANSS_TimingOfCellFrames supportForUE_GANSS_TimingOfCellFrames;
 NhuNwAssistedGANSS_Supp_LstMembersupportForUE_GANSS_CarrierPhaseMeasurement supportForUE_GANSS_CarrierPhaseMeasurement;
} NhuNwAssistedGANSS_Supp_LstMember;

typedef struct NhuNwAssistedGANSS_Supp_Lst
{
 TknU16 noComp;
 NhuNwAssistedGANSS_Supp_LstMember *member;
}NhuNwAssistedGANSS_Supp_Lst;


typedef TknStrBSXL NhuNwAssistedGANSS_Supp_Lst_v860extMembersbas_Ids;

typedef TknStrBSXL NhuNwAssistedGANSS_Supp_Lst_v860extMembergANSS_SignalIds;

typedef enum enumNhuNwAssistedGANSS_Supp_Lst_v860extMembernon_native_AD_choices_supported
{
 NhuNwAssistedGANSS_Supp_Lst_v860extMembernon_native_AD_choices_supportedtrueEnum
} EnumNhuNwAssistedGANSS_Supp_Lst_v860extMembernon_native_AD_choices_supported;
typedef TknU32 NhuNwAssistedGANSS_Supp_Lst_v860extMembernon_native_AD_choices_supported;

typedef struct NhuNwAssistedGANSS_Supp_Lst_v860extMember
{
 TknPres pres;
 NhuNwAssistedGANSS_Supp_Lst_v860extMembersbas_Ids sbas_Ids;
 NhuNwAssistedGANSS_Supp_Lst_v860extMembergANSS_SignalIds gANSS_SignalIds;
 NhuNwAssistedGANSS_Supp_Lst_v860extMembernon_native_AD_choices_supported non_native_AD_choices_supported;
} NhuNwAssistedGANSS_Supp_Lst_v860extMember;

typedef struct NhuNwAssistedGANSS_Supp_Lst_v860ext
{
 TknU16 noComp;
 NhuNwAssistedGANSS_Supp_Lst_v860extMember *member;
}NhuNwAssistedGANSS_Supp_Lst_v860ext;


typedef enum enumNhuNwAssistedGPS_Supp
{
 NhuNwAssistedGPS_SuppnetworkBasedEnum,
 NhuNwAssistedGPS_Suppue_BasedEnum,
 NhuNwAssistedGPS_SuppbothNwAndUE_BasedEnum,
 NhuNwAssistedGPS_SuppnoNwAssistedGPSEnum
} EnumNhuNwAssistedGPS_Supp;
typedef TknU32 NhuNwAssistedGPS_Supp;

typedef struct NhuP_TMSI_and_RAI_GSM_MAP
{
 TknPres pres;
 NhuP_TMSI_GSM_MAP p_TMSI;
 NhuRAI rai;
} NhuP_TMSI_and_RAI_GSM_MAP;


typedef TknU8 NhuPDCP_CaplosslessSRNS_RelocationSupport;

typedef struct NhuPDCP_CapsupportForRfc2507
{
 TknU8 choice;
 union {
  NhuMaxHcCtxtSpace supported;
 } val;
} NhuPDCP_CapsupportForRfc2507;

typedef struct NhuPDCP_Cap
{
 TknPres pres;
 NhuPDCP_CaplosslessSRNS_RelocationSupport losslessSRNS_RelocationSupport;
 NhuPDCP_CapsupportForRfc2507 supportForRfc2507;
} NhuPDCP_Cap;


typedef TknU32 NhuPDCP_Cap_r4_extsupportForRfc3095supportedreverseCompressionDepth;

typedef struct NhuPDCP_Cap_r4_extsupportForRfc3095supported
{
 TknPres pres;
 NhuMaxROHC_CtxtSessions_r4 maxROHC_CtxtSessions;
 NhuPDCP_Cap_r4_extsupportForRfc3095supportedreverseCompressionDepth reverseCompressionDepth;
} NhuPDCP_Cap_r4_extsupportForRfc3095supported;

typedef struct NhuPDCP_Cap_r4_extsupportForRfc3095
{
 TknU8 choice;
 union {
  NhuPDCP_Cap_r4_extsupportForRfc3095supported supported;
 } val;
} NhuPDCP_Cap_r4_extsupportForRfc3095;

typedef struct NhuPDCP_Cap_r4_ext
{
 TknPres pres;
 NhuPDCP_Cap_r4_extsupportForRfc3095 supportForRfc3095;
} NhuPDCP_Cap_r4_ext;


typedef TknU8 NhuPDCP_Cap_r5_extsupportForRfc3095CtxtRelocation;

typedef struct NhuPDCP_Cap_r5_ext
{
 TknPres pres;
 NhuPDCP_Cap_r5_extsupportForRfc3095CtxtRelocation supportForRfc3095CtxtRelocation;
 NhuMaxHcCtxtSpace_r5_ext maxHcCtxtSpace;
} NhuPDCP_Cap_r5_ext;


typedef enum enumNhuPDCP_Cap_r5_ext2losslessDLRLC_PDUSizeChange
{
 NhuPDCP_Cap_r5_ext2losslessDLRLC_PDUSizeChangetrueEnum
} EnumNhuPDCP_Cap_r5_ext2losslessDLRLC_PDUSizeChange;
typedef TknU32 NhuPDCP_Cap_r5_ext2losslessDLRLC_PDUSizeChange;

typedef struct NhuPDCP_Cap_r5_ext2
{
 TknPres pres;
 NhuPDCP_Cap_r5_ext2losslessDLRLC_PDUSizeChange losslessDLRLC_PDUSizeChange;
} NhuPDCP_Cap_r5_ext2;


typedef enum enumNhuPDCP_Cap_v770extsupportForCSVoiceoverHSPA
{
 NhuPDCP_Cap_v770extsupportForCSVoiceoverHSPAtrueEnum
} EnumNhuPDCP_Cap_v770extsupportForCSVoiceoverHSPA;
typedef TknU32 NhuPDCP_Cap_v770extsupportForCSVoiceoverHSPA;

typedef struct NhuPDCP_Cap_v770ext
{
 TknPres pres;
 NhuPDCP_Cap_v770extsupportForCSVoiceoverHSPA supportForCSVoiceoverHSPA;
} NhuPDCP_Cap_v770ext;


typedef TknU8 NhuUL_PhysChCapFDDdummy;

typedef struct NhuUL_PhysChCapFDD
{
 TknPres pres;
 NhuMaxNoDPDCH_BitsTransmitted maxNoDPDCH_BitsTransmitted;
 NhuUL_PhysChCapFDDdummy dummy;
} NhuUL_PhysChCapFDD;


typedef TknU8 NhuUL_PhysChCapTDDsupportOfPUSCH;

typedef struct NhuUL_PhysChCapTDD
{
 TknPres pres;
 NhuMaxTS_PerFrame maxTS_PerFrame;
 NhuMaxPhysChPerTimeslot maxPhysChPerTimeslot;
 NhuMinimumSF_UL minimumSF;
 NhuUL_PhysChCapTDDsupportOfPUSCH supportOfPUSCH;
} NhuUL_PhysChCapTDD;

typedef struct NhuPhysicalChannelCapfddPhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapFDD downlinkPhysChCap;
 NhuUL_PhysChCapFDD uplinkPhysChCap;
} NhuPhysicalChannelCapfddPhysChCap;

typedef struct NhuPhysicalChannelCaptddPhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapTDD downlinkPhysChCap;
 NhuUL_PhysChCapTDD uplinkPhysChCap;
} NhuPhysicalChannelCaptddPhysChCap;

typedef struct NhuPhysicalChannelCap
{
 TknPres pres;
 NhuPhysicalChannelCapfddPhysChCap fddPhysChCap;
 NhuPhysicalChannelCaptddPhysChCap tddPhysChCap;
} NhuPhysicalChannelCap;


typedef TknU32 NhuUL_PhysChCapFDD_v770extedch_PhysicalLyrCategory_extension;


typedef enum enumNhuUL_PhysChCapFDD_v770extdiscontinuousDpcchTransmission
{
 NhuUL_PhysChCapFDD_v770extdiscontinuousDpcchTransmissiontrueEnum
} EnumNhuUL_PhysChCapFDD_v770extdiscontinuousDpcchTransmission;
typedef TknU32 NhuUL_PhysChCapFDD_v770extdiscontinuousDpcchTransmission;


typedef enum enumNhuUL_PhysChCapFDD_v770extslotFormat4
{
 NhuUL_PhysChCapFDD_v770extslotFormat4trueEnum
} EnumNhuUL_PhysChCapFDD_v770extslotFormat4;
typedef TknU32 NhuUL_PhysChCapFDD_v770extslotFormat4;

typedef struct NhuUL_PhysChCapFDD_v770ext
{
 TknPres pres;
 NhuUL_PhysChCapFDD_v770extedch_PhysicalLyrCategory_extension edch_PhysicalLyrCategory_extension;
 NhuUL_PhysChCapFDD_v770extdiscontinuousDpcchTransmission discontinuousDpcchTransmission;
 NhuUL_PhysChCapFDD_v770extslotFormat4 slotFormat4;
} NhuUL_PhysChCapFDD_v770ext;


typedef TknU32 NhuUL_PhysChCapTDD_384_v770exttdd384_edchsupportedtdd_edch_PhysicalLyrCategory;

typedef struct NhuUL_PhysChCapTDD_384_v770exttdd384_edchsupported
{
 TknPres pres;
 NhuUL_PhysChCapTDD_384_v770exttdd384_edchsupportedtdd_edch_PhysicalLyrCategory tdd_edch_PhysicalLyrCategory;
} NhuUL_PhysChCapTDD_384_v770exttdd384_edchsupported;

typedef struct NhuUL_PhysChCapTDD_384_v770exttdd384_edch
{
 TknU8 choice;
 union {
  NhuUL_PhysChCapTDD_384_v770exttdd384_edchsupported supported;
 } val;
} NhuUL_PhysChCapTDD_384_v770exttdd384_edch;

typedef struct NhuUL_PhysChCapTDD_384_v770ext
{
 TknPres pres;
 NhuUL_PhysChCapTDD_384_v770exttdd384_edch tdd384_edch;
} NhuUL_PhysChCapTDD_384_v770ext;


typedef TknU8 NhuUL_PhysChCapTDD_768supportOfPUSCH;


typedef TknU32 NhuUL_PhysChCapTDD_768tdd384_edchsupportedtdd_edch_PhysicalLyrCategory;

typedef struct NhuUL_PhysChCapTDD_768tdd384_edchsupported
{
 TknPres pres;
 NhuUL_PhysChCapTDD_768tdd384_edchsupportedtdd_edch_PhysicalLyrCategory tdd_edch_PhysicalLyrCategory;
} NhuUL_PhysChCapTDD_768tdd384_edchsupported;

typedef struct NhuUL_PhysChCapTDD_768tdd384_edch
{
 TknU8 choice;
 union {
  NhuUL_PhysChCapTDD_768tdd384_edchsupported supported;
 } val;
} NhuUL_PhysChCapTDD_768tdd384_edch;

typedef struct NhuUL_PhysChCapTDD_768
{
 TknPres pres;
 NhuMaxTS_PerFrame maxTS_PerFrame;
 NhuMaxPhysChPerTimeslot maxPhysChPerTimeslot;
 NhuMinimumSF_UL minimumSF;
 NhuUL_PhysChCapTDD_768supportOfPUSCH supportOfPUSCH;
 NhuUL_PhysChCapTDD_768tdd384_edch tdd384_edch;
} NhuUL_PhysChCapTDD_768;


typedef TknU32 NhuUL_PhysChCapTDD_128_v770exttdd128_edchsupportedtdd_edch_PhysicalLyrCategory;

typedef struct NhuUL_PhysChCapTDD_128_v770exttdd128_edchsupported
{
 TknPres pres;
 NhuUL_PhysChCapTDD_128_v770exttdd128_edchsupportedtdd_edch_PhysicalLyrCategory tdd_edch_PhysicalLyrCategory;
} NhuUL_PhysChCapTDD_128_v770exttdd128_edchsupported;

typedef struct NhuUL_PhysChCapTDD_128_v770exttdd128_edch
{
 TknU8 choice;
 union {
  NhuUL_PhysChCapTDD_128_v770exttdd128_edchsupported supported;
 } val;
} NhuUL_PhysChCapTDD_128_v770exttdd128_edch;

typedef struct NhuUL_PhysChCapTDD_128_v770ext
{
 TknPres pres;
 NhuMaxPhysChPerTimeslot_LCR_r7 maxPhysChPerTimeslot;
 NhuUL_PhysChCapTDD_128_v770exttdd128_edch tdd128_edch;
} NhuUL_PhysChCapTDD_128_v770ext;

typedef struct NhuPhysicalChannelCap_v770extfddPhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapFDD_v770ext downlinkPhysChCap;
 NhuUL_PhysChCapFDD_v770ext uplinkPhysChCap;
} NhuPhysicalChannelCap_v770extfddPhysChCap;

typedef struct NhuPhysicalChannelCap_v770exttddPhysChCap_384
{
 TknPres pres;
 NhuUL_PhysChCapTDD_384_v770ext uplinkPhysChCap;
} NhuPhysicalChannelCap_v770exttddPhysChCap_384;

typedef struct NhuPhysicalChannelCap_v770exttddPhysChCap_768
{
 TknPres pres;
 NhuDL_PhysChCapTDD_768 downlinkPhysChCap;
 NhuUL_PhysChCapTDD_768 uplinkPhysChCap;
} NhuPhysicalChannelCap_v770exttddPhysChCap_768;

typedef struct NhuPhysicalChannelCap_v770exttddPhysChCap_128
{
 TknPres pres;
 NhuDL_PhysChCapTDD_128_v770ext downlinkPhysChCap;
 NhuUL_PhysChCapTDD_128_v770ext uplinkPhysChCap;
} NhuPhysicalChannelCap_v770exttddPhysChCap_128;

typedef struct NhuPhysicalChannelCap_v770ext
{
 TknPres pres;
 NhuPhysicalChannelCap_v770extfddPhysChCap fddPhysChCap;
 NhuPhysicalChannelCap_v770exttddPhysChCap_384 tddPhysChCap_384;
 NhuPhysicalChannelCap_v770exttddPhysChCap_768 tddPhysChCap_768;
 NhuPhysicalChannelCap_v770exttddPhysChCap_128 tddPhysChCap_128;
} NhuPhysicalChannelCap_v770ext;

typedef struct NhuPhysicalChannelCap_v860extfddPhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapFDD_v860ext downlinkPhysChCap;
} NhuPhysicalChannelCap_v860extfddPhysChCap;

typedef struct NhuPhysicalChannelCap_v860exttddPhysChCap_128
{
 TknPres pres;
 NhuDL_PhysChCapTDD_128_v860ext downlinkPhysChCap;
} NhuPhysicalChannelCap_v860exttddPhysChCap_128;

typedef struct NhuPhysicalChannelCap_v860ext
{
 TknPres pres;
 NhuPhysicalChannelCap_v860extfddPhysChCap fddPhysChCap;
 NhuPhysicalChannelCap_v860exttddPhysChCap_128 tddPhysChCap_128;
} NhuPhysicalChannelCap_v860ext;


typedef TknU32 NhuUL_PhysChCapFDD_v920extedch_PhysicalLyrCategory_extension2;

typedef struct NhuUL_PhysChCapFDD_v920ext
{
 TknPres pres;
 NhuUL_PhysChCapFDD_v920extedch_PhysicalLyrCategory_extension2 edch_PhysicalLyrCategory_extension2;
} NhuUL_PhysChCapFDD_v920ext;

typedef struct NhuPhysicalChannelCap_v920extfddPhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapFDD_v920ext downlinkPhysChCap;
 NhuUL_PhysChCapFDD_v920ext uplinkPhysChCap;
} NhuPhysicalChannelCap_v920extfddPhysChCap;

typedef struct NhuPhysicalChannelCap_v920ext
{
 TknPres pres;
 NhuPhysicalChannelCap_v920extfddPhysChCap fddPhysChCap;
} NhuPhysicalChannelCap_v920ext;


typedef TknU32 NhuUL_PhysChCapInfoTDD_128_va40extmultiCarrier_EdchPhysicalLyrCategory_128;


typedef enum enumNhuUL_PhysChCapInfoTDD_128_va40extmaxNumberCarrierForMCHSUPA_TDD
{
 NhuUL_PhysChCapInfoTDD_128_va40extmaxNumberCarrierForMCHSUPA_TDDnf_2Enum,
 NhuUL_PhysChCapInfoTDD_128_va40extmaxNumberCarrierForMCHSUPA_TDDnf_3Enum,
 NhuUL_PhysChCapInfoTDD_128_va40extmaxNumberCarrierForMCHSUPA_TDDnf_6Enum,
 NhuUL_PhysChCapInfoTDD_128_va40extmaxNumberCarrierForMCHSUPA_TDDspareEnum
} EnumNhuUL_PhysChCapInfoTDD_128_va40extmaxNumberCarrierForMCHSUPA_TDD;
typedef TknU32 NhuUL_PhysChCapInfoTDD_128_va40extmaxNumberCarrierForMCHSUPA_TDD;

typedef struct NhuUL_PhysChCapInfoTDD_128_va40ext
{
 TknPres pres;
 NhuUL_PhysChCapInfoTDD_128_va40extmultiCarrier_EdchPhysicalLyrCategory_128 multiCarrier_EdchPhysicalLyrCategory_128;
 NhuUL_PhysChCapInfoTDD_128_va40extmaxNumberCarrierForMCHSUPA_TDD maxNumberCarrierForMCHSUPA_TDD;
} NhuUL_PhysChCapInfoTDD_128_va40ext;

typedef struct NhuPhysicalChannelCap_va40extfddPhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapFDD_va40ext downlinkPhysChCap;
} NhuPhysicalChannelCap_va40extfddPhysChCap;

typedef struct NhuPhysicalChannelCap_va40exttddPhysChCap_128
{
 TknPres pres;
 NhuDL_PhysChCapInfoTDD_128_va40ext downlinkPhysChCap;
 NhuUL_PhysChCapInfoTDD_128_va40ext uplinkPhysChCap;
} NhuPhysicalChannelCap_va40exttddPhysChCap_128;

typedef struct NhuPhysicalChannelCap_va40ext
{
 TknPres pres;
 NhuPhysicalChannelCap_va40extfddPhysChCap fddPhysChCap;
 NhuPhysicalChannelCap_va40exttddPhysChCap_128 tddPhysChCap_128;
} NhuPhysicalChannelCap_va40ext;

typedef struct NhuPhysicalChannelCap_vbxyextfddPhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapFDD_vbxyext downlinkPhysChCap;
} NhuPhysicalChannelCap_vbxyextfddPhysChCap;

typedef struct NhuPhysicalChannelCap_vbxyext
{
 TknPres pres;
 NhuPhysicalChannelCap_vbxyextfddPhysChCap fddPhysChCap;
} NhuPhysicalChannelCap_vbxyext;

typedef struct NhuUL_PhysChCapInfoTDD_128_v770ext
{
 TknPres pres;
 NhuMaxPhysChPerTimeslot_LCR_r7 maxPhysChPerTimeslot;
} NhuUL_PhysChCapInfoTDD_128_v770ext;

typedef struct NhuPhysicalChannelCapInfo_v770exttddPhysChCap_768
{
 TknPres pres;
 NhuDL_PhysChCapInfoTDD_768 downlinkPhysChCap;
 NhuUL_PhysChCapTDD uplinkPhysChCap;
} NhuPhysicalChannelCapInfo_v770exttddPhysChCap_768;

typedef struct NhuPhysicalChannelCapInfo_v770exttddPhysChCap_128
{
 TknPres pres;
 NhuUL_PhysChCapInfoTDD_128_v770ext uplinkPhysChCap;
} NhuPhysicalChannelCapInfo_v770exttddPhysChCap_128;

typedef struct NhuPhysicalChannelCapInfo_v770ext
{
 TknPres pres;
 NhuPhysicalChannelCapInfo_v770exttddPhysChCap_768 tddPhysChCap_768;
 NhuPhysicalChannelCapInfo_v770exttddPhysChCap_128 tddPhysChCap_128;
} NhuPhysicalChannelCapInfo_v770ext;


typedef TknU8 NhuUL_PhysChCapTDD_LCR_r4supportOfPUSCH;


typedef TknU8 NhuUL_PhysChCapTDD_LCR_r4supportOf8PSK;

typedef struct NhuUL_PhysChCapTDD_LCR_r4
{
 TknPres pres;
 NhuMaxTS_PerSubFrame_r4 maxTS_PerSubFrame;
 NhuMaxPhysChPerTimeslot maxPhysChPerTimeslot;
 NhuMinimumSF_UL minimumSF;
 NhuUL_PhysChCapTDD_LCR_r4supportOfPUSCH supportOfPUSCH;
 NhuUL_PhysChCapTDD_LCR_r4supportOf8PSK supportOf8PSK;
} NhuUL_PhysChCapTDD_LCR_r4;

typedef struct NhuPhysicalChannelCap_LCR_r4tdd128_PhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapTDD_LCR_r4 downlinkPhysChCap;
 NhuUL_PhysChCapTDD_LCR_r4 uplinkPhysChCap;
} NhuPhysicalChannelCap_LCR_r4tdd128_PhysChCap;

typedef struct NhuPhysicalChannelCap_LCR_r4
{
 TknPres pres;
 NhuPhysicalChannelCap_LCR_r4tdd128_PhysChCap tdd128_PhysChCap;
} NhuPhysicalChannelCap_LCR_r4;


typedef TknU8 NhuPhysicalChannelCap_hspdsch_r5fdd_hspdschsupporteddummy;


typedef TknU8 NhuPhysicalChannelCap_hspdsch_r5fdd_hspdschsupporteddummy2;

typedef struct NhuPhysicalChannelCap_hspdsch_r5fdd_hspdschsupported
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category hsdsch_physical_layer_category;
 NhuPhysicalChannelCap_hspdsch_r5fdd_hspdschsupporteddummy dummy;
 NhuPhysicalChannelCap_hspdsch_r5fdd_hspdschsupporteddummy2 dummy2;
} NhuPhysicalChannelCap_hspdsch_r5fdd_hspdschsupported;

typedef struct NhuPhysicalChannelCap_hspdsch_r5fdd_hspdsch
{
 TknU8 choice;
 union {
  NhuPhysicalChannelCap_hspdsch_r5fdd_hspdschsupported supported;
 } val;
} NhuPhysicalChannelCap_hspdsch_r5fdd_hspdsch;

typedef struct NhuPhysicalChannelCap_hspdsch_r5tdd384_hspdsch
{
 TknU8 choice;
 union {
  NhuHSDSCH_physical_layer_category supported;
 } val;
} NhuPhysicalChannelCap_hspdsch_r5tdd384_hspdsch;

typedef struct NhuPhysicalChannelCap_hspdsch_r5tdd128_hspdsch
{
 TknU8 choice;
 union {
  NhuHSDSCH_physical_layer_category supported;
 } val;
} NhuPhysicalChannelCap_hspdsch_r5tdd128_hspdsch;

typedef struct NhuPhysicalChannelCap_hspdsch_r5
{
 TknPres pres;
 NhuPhysicalChannelCap_hspdsch_r5fdd_hspdsch fdd_hspdsch;
 NhuPhysicalChannelCap_hspdsch_r5tdd384_hspdsch tdd384_hspdsch;
 NhuPhysicalChannelCap_hspdsch_r5tdd128_hspdsch tdd128_hspdsch;
} NhuPhysicalChannelCap_hspdsch_r5;


typedef enum enumNhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriod
{
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc2Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc3Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc4Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc5Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc6Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc7Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc8Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc9Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc10Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc12Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc14Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc16Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc18Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc20Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc24Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc28Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc32Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc36Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc40Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc48Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc56Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc64Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc72Enum,
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriodc80Enum
} EnumNhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriod;
typedef TknU32 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriod;

typedef struct NhuPNBSCH_Allocn_r4
{
 TknPres pres;
 NhuPNBSCH_Allocn_r4numberOfRepetitionsPerSFNPeriod numberOfRepetitionsPerSFNPeriod;
} NhuPNBSCH_Allocn_r4;


typedef TknU8 NhuPre_RedirectionInfosupportEUTRA_FDD;


typedef TknU8 NhuPre_RedirectionInfosupportEUTRA_TDD;

typedef struct NhuPre_RedirectionInfo
{
 TknPres pres;
 NhuPre_RedirectionInfosupportEUTRA_FDD supportEUTRA_FDD;
 NhuPre_RedirectionInfosupportEUTRA_TDD supportEUTRA_TDD;
} NhuPre_RedirectionInfo;


typedef enum enumNhuProtErrIndicator
{
 NhuProtErrIndicatornoErrEnum,
 NhuProtErrIndicatorerrorOccurredEnum
} EnumNhuProtErrIndicator;
typedef TknU32 NhuProtErrIndicator;

typedef struct NhuProtErrIndicatorWithMoreInfoerrorOccurred
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuProtErrInfo protocolErrInfo;
} NhuProtErrIndicatorWithMoreInfoerrorOccurred;

typedef struct NhuProtErrIndicatorWithMoreInfo
{
 TknU8 choice;
 union {
  NhuProtErrIndicatorWithMoreInfoerrorOccurred errorOccurred;
 } val;
} NhuProtErrIndicatorWithMoreInfo;


typedef enum enumNhuReceivedMsgTyp
{
 NhuReceivedMsgTypactiveSetUpdEnum,
 NhuReceivedMsgTypcellChangeOrderFromUTRANEnum,
 NhuReceivedMsgTypcellUpdConfirmEnum,
 NhuReceivedMsgTypcounterCheckEnum,
 NhuReceivedMsgTypdownlinkDirectTfrEnum,
 NhuReceivedMsgTypinterRATHovrCmdEnum,
 NhuReceivedMsgTypmeasurementCntrlEnum,
 NhuReceivedMsgTyppagingTyp2Enum,
 NhuReceivedMsgTypphysicalChannelRecfgnEnum,
 NhuReceivedMsgTypphysicalSharedChannelAllocnEnum,
 NhuReceivedMsgTypradioBrRecfgnEnum,
 NhuReceivedMsgTypradioBrRlsEnum,
 NhuReceivedMsgTypradioBrSetupEnum,
 NhuReceivedMsgTyprrcConRlsEnum,
 NhuReceivedMsgTyprrcConRejEnum,
 NhuReceivedMsgTyprrcConSetupEnum,
 NhuReceivedMsgTypsecurityModeCmdEnum,
 NhuReceivedMsgTypsignallingConRlsEnum,
 NhuReceivedMsgTyptransportChannelRecfgnEnum,
 NhuReceivedMsgTyptransportFormatCombinationCntrlEnum,
 NhuReceivedMsgTypueCapEnquiryEnum,
 NhuReceivedMsgTypueCapInfoConfirmEnum,
 NhuReceivedMsgTypuplinkPhysicalChannelCntrlEnum,
 NhuReceivedMsgTypuraUpdConfirmEnum,
 NhuReceivedMsgTyputranMobilityInfoEnum,
 NhuReceivedMsgTypassistanceDataDlvryEnum,
 NhuReceivedMsgTypspare6Enum,
 NhuReceivedMsgTypspare5Enum,
 NhuReceivedMsgTypspare4Enum,
 NhuReceivedMsgTypspare3Enum,
 NhuReceivedMsgTypspare2Enum,
 NhuReceivedMsgTypspare1Enum
} EnumNhuReceivedMsgTyp;
typedef TknU32 NhuReceivedMsgTyp;

typedef struct NhuIdentificationOfReceivedMsg
{
 TknPres pres;
 NhuRRC_TrnsxnId rrc_TrnsxnId;
 NhuReceivedMsgTyp receivedMsgTyp;
} NhuIdentificationOfReceivedMsg;

typedef struct NhuProtErrMoreInfodiagnosticsTyptype1
{
 TknU8 choice;
 union {
  NhuIdentificationOfReceivedMsg messageNotCompatibleWithReceiverState;
  NhuIdentificationOfReceivedMsg ie_ValueNotComprehended;
  NhuIdentificationOfReceivedMsg conditionalInfoElementErr;
  NhuIdentificationOfReceivedMsg messageExtnNotComprehended;
 } val;
} NhuProtErrMoreInfodiagnosticsTyptype1;

typedef struct NhuProtErrMoreInfodiagnosticsTyp
{
 TknU8 choice;
 union {
  NhuProtErrMoreInfodiagnosticsTyptype1 type1;
 } val;
} NhuProtErrMoreInfodiagnosticsTyp;

typedef struct NhuProtErrMoreInfo
{
 TknPres pres;
 NhuProtErrMoreInfodiagnosticsTyp diagnosticsTyp;
} NhuProtErrMoreInfo;


typedef enum enumNhuRadioFrequencyBandTDDLst
{
 NhuRadioFrequencyBandTDDLstaEnum,
 NhuRadioFrequencyBandTDDLstbEnum,
 NhuRadioFrequencyBandTDDLstcEnum,
 NhuRadioFrequencyBandTDDLstabEnum,
 NhuRadioFrequencyBandTDDLstacEnum,
 NhuRadioFrequencyBandTDDLstbcEnum,
 NhuRadioFrequencyBandTDDLstabcEnum,
 NhuRadioFrequencyBandTDDLstspareEnum
} EnumNhuRadioFrequencyBandTDDLst;
typedef TknU32 NhuRadioFrequencyBandTDDLst;


typedef enum enumNhuRadioFrequencyBandTDDLst_r7
{
 NhuRadioFrequencyBandTDDLst_r7aEnum,
 NhuRadioFrequencyBandTDDLst_r7bEnum,
 NhuRadioFrequencyBandTDDLst_r7cEnum,
 NhuRadioFrequencyBandTDDLst_r7dEnum,
 NhuRadioFrequencyBandTDDLst_r7abEnum,
 NhuRadioFrequencyBandTDDLst_r7acEnum,
 NhuRadioFrequencyBandTDDLst_r7adEnum,
 NhuRadioFrequencyBandTDDLst_r7bcEnum,
 NhuRadioFrequencyBandTDDLst_r7bdEnum,
 NhuRadioFrequencyBandTDDLst_r7cdEnum,
 NhuRadioFrequencyBandTDDLst_r7abcEnum,
 NhuRadioFrequencyBandTDDLst_r7abdEnum,
 NhuRadioFrequencyBandTDDLst_r7acdEnum,
 NhuRadioFrequencyBandTDDLst_r7bcdEnum,
 NhuRadioFrequencyBandTDDLst_r7abcdEnum,
 NhuRadioFrequencyBandTDDLst_r7notabcdEnum
} EnumNhuRadioFrequencyBandTDDLst_r7;
typedef TknU32 NhuRadioFrequencyBandTDDLst_r7;


typedef enum enumNhuRadioFrequencyBandTDDext
{
 NhuRadioFrequencyBandTDDexteEnum,
 NhuRadioFrequencyBandTDDextfEnum,
 NhuRadioFrequencyBandTDDextgEnum,
 NhuRadioFrequencyBandTDDexthEnum,
 NhuRadioFrequencyBandTDDextiEnum,
 NhuRadioFrequencyBandTDDextjEnum,
 NhuRadioFrequencyBandTDDextkEnum,
 NhuRadioFrequencyBandTDDextlEnum,
 NhuRadioFrequencyBandTDDextmEnum,
 NhuRadioFrequencyBandTDDextnEnum,
 NhuRadioFrequencyBandTDDextoEnum,
 NhuRadioFrequencyBandTDDextpEnum,
 NhuRadioFrequencyBandTDDextspare4Enum,
 NhuRadioFrequencyBandTDDextspare3Enum,
 NhuRadioFrequencyBandTDDextspare2Enum,
 NhuRadioFrequencyBandTDDextspare1Enum
} EnumNhuRadioFrequencyBandTDDext;
typedef TknU32 NhuRadioFrequencyBandTDDext;

typedef struct NhuRadioFrequencyBandTDDextLst
{
 TknU16 noComp;
 NhuRadioFrequencyBandTDDext *member;
}NhuRadioFrequencyBandTDDextLst;


typedef TknU8 NhuRb_timer_indicatort314_expired;


typedef TknU8 NhuRb_timer_indicatort315_expired;

typedef struct NhuRb_timer_indicator
{
 TknPres pres;
 NhuRb_timer_indicatort314_expired t314_expired;
 NhuRb_timer_indicatort315_expired t315_expired;
} NhuRb_timer_indicator;


typedef enum enumNhuRe_EstablishmentTimer
{
 NhuRe_EstablishmentTimeruseT314Enum,
 NhuRe_EstablishmentTimeruseT315Enum
} EnumNhuRe_EstablishmentTimer;
typedef TknU32 NhuRe_EstablishmentTimer;


typedef enum enumNhuInterRATInfo
{
 NhuInterRATInfogsmEnum
} EnumNhuInterRATInfo;
typedef TknU32 NhuInterRATInfo;

typedef struct NhuRedirectionInfo
{
 TknU8 choice;
 union {
  NhuFrequencyInfo frequencyInfo;
  NhuInterRATInfo interRATInfo;
 } val;
} NhuRedirectionInfo;


typedef enum enumNhuFrequency_Band
{
 NhuFrequency_Banddcs1800BandUsedEnum,
 NhuFrequency_Bandpcs1900BandUsedEnum
} EnumNhuFrequency_Band;
typedef TknU32 NhuFrequency_Band;


typedef TknU32 NhuNCC;


typedef TknU32 NhuBCC;

typedef struct NhuBSIC
{
 TknPres pres;
 NhuNCC ncc;
 NhuBCC bcc;
} NhuBSIC;

typedef struct NhuGSM_TgtCellInfo
{
 TknPres pres;
 NhuBCCH_ARFCN bcch_ARFCN;
 NhuFrequency_Band frequency_band;
 NhuBSIC bsic;
} NhuGSM_TgtCellInfo;

typedef struct NhuGSM_TgtCellInfoLst
{
 TknU16 noComp;
 NhuGSM_TgtCellInfo *member;
}NhuGSM_TgtCellInfoLst;

typedef struct NhuInterRATInfo_r6
{
 TknPres pres;
 NhuInterRATInfo rat;
 NhuGSM_TgtCellInfoLst gsm_TgtCellInfoLst;
} NhuInterRATInfo_r6;

typedef struct NhuRedirectionInfo_r6
{
 TknU8 choice;
 union {
  NhuFrequencyInfo frequencyInfo;
  NhuInterRATInfo_r6 interRATInfo;
 } val;
} NhuRedirectionInfo_r6;


typedef TknU32 NhuEUTRA_PhysicalCellIdentity;

typedef struct NhuEUTRA_BlacklistedCell
{
 TknPres pres;
 NhuEUTRA_PhysicalCellIdentity physicalCellIdentity;
} NhuEUTRA_BlacklistedCell;

typedef struct NhuEUTRA_BlacklistedCellPerFreqLst
{
 TknU16 noComp;
 NhuEUTRA_BlacklistedCell *member;
}NhuEUTRA_BlacklistedCellPerFreqLst;

typedef struct NhuEUTRA_TgtFreqInfo
{
 TknPres pres;
 NhuEARFCN dlEUTRACarrierFreq;
 NhuEUTRA_BlacklistedCellPerFreqLst eutraBlacklistedCellPerFreqLst;
} NhuEUTRA_TgtFreqInfo;

typedef struct NhuEUTRA_TgtFreqInfoLst
{
 TknU16 noComp;
 NhuEUTRA_TgtFreqInfo *member;
}NhuEUTRA_TgtFreqInfoLst;

typedef struct NhuInterRATInfo_v860exteutra
{
 TknPres pres;
 NhuEUTRA_TgtFreqInfoLst eutra_TgtFreqInfoLst;
} NhuInterRATInfo_v860exteutra;

typedef struct NhuInterRATInfo_v860ext
{
 TknU8 choice;
 union {
  NhuInterRATInfo_v860exteutra eutra;
 } val;
} NhuInterRATInfo_v860ext;

typedef struct NhuRedirectionInfo_v860ext
{
 TknU8 choice;
 union {
  NhuInterRATInfo_v860ext interRATInfo;
 } val;
} NhuRedirectionInfo_v860ext;


typedef enum enumNhuRejionCause
{
 NhuRejionCausecongestionEnum,
 NhuRejionCauseunspecifiedEnum
} EnumNhuRejionCause;
typedef TknU32 NhuRejionCause;


typedef TknU32 NhuUE_PowerClass;


typedef enum enumNhuTxRxFrequencySeparation
{
 NhuTxRxFrequencySeparationdefault_TxRx_separationEnum,
 NhuTxRxFrequencySeparationspare2Enum,
 NhuTxRxFrequencySeparationspare1Enum
} EnumNhuTxRxFrequencySeparation;
typedef TknU32 NhuTxRxFrequencySeparation;

typedef struct NhuRF_CapfddRF_Cap
{
 TknPres pres;
 NhuUE_PowerClass ue_PowerClass;
 NhuTxRxFrequencySeparation txRxFrequencySeparation;
} NhuRF_CapfddRF_Cap;

typedef struct NhuRF_CaptddRF_Cap
{
 TknPres pres;
 NhuUE_PowerClass ue_PowerClass;
 NhuRadioFrequencyBandTDDLst radioFrequencyTDDBandLst;
 NhuChipRateCap chipRateCap;
} NhuRF_CaptddRF_Cap;

typedef struct NhuRF_Cap
{
 TknPres pres;
 NhuRF_CapfddRF_Cap fddRF_Cap;
 NhuRF_CaptddRF_Cap tddRF_Cap;
} NhuRF_Cap;

typedef struct NhuRF_Cap_r4_exttddRF_Cap
{
 TknPres pres;
 NhuUE_PowerClass ue_PowerClass;
 NhuRadioFrequencyBandTDDLst radioFrequencyBandTDDLst;
 NhuChipRateCap chipRateCap;
} NhuRF_Cap_r4_exttddRF_Cap;

typedef struct NhuRF_Cap_r4_ext
{
 TknPres pres;
 NhuRF_Cap_r4_exttddRF_Cap tddRF_Cap;
} NhuRF_Cap_r4_ext;

typedef struct NhuRF_Cap_v770exttdd768RF_Cap
{
 TknPres pres;
 NhuUE_PowerClass ue_PowerClass;
 NhuRadioFrequencyBandTDDLst_r7 radioFrequencyBandTDDLst;
} NhuRF_Cap_v770exttdd768RF_Cap;

typedef struct NhuRF_Cap_v770ext
{
 TknPres pres;
 NhuRadioFrequencyBandTDDLst_r7 tdd384RF_Cap;
 NhuRF_Cap_v770exttdd768RF_Cap tdd768RF_Cap;
 NhuRadioFrequencyBandTDDLst_r7 tdd128RF_Cap;
} NhuRF_Cap_v770ext;

typedef struct NhuRF_Cap_v860ext
{
 TknPres pres;
 NhuRadioFrequencyBandTDDextLst tdd128RF_Cap;
 NhuRadioFrequencyBandTDDextLst tdd384RF_Cap;
 NhuRadioFrequencyBandTDDextLst tdd768RF_Cap;
} NhuRF_Cap_v860ext;


typedef enum enumNhuTotalRLC_AM_BufferSize
{
 NhuTotalRLC_AM_BufferSizedummyEnum,
 NhuTotalRLC_AM_BufferSizekb10Enum,
 NhuTotalRLC_AM_BufferSizekb50Enum,
 NhuTotalRLC_AM_BufferSizekb100Enum,
 NhuTotalRLC_AM_BufferSizekb150Enum,
 NhuTotalRLC_AM_BufferSizekb500Enum,
 NhuTotalRLC_AM_BufferSizekb1000Enum,
 NhuTotalRLC_AM_BufferSizespareEnum
} EnumNhuTotalRLC_AM_BufferSize;
typedef TknU32 NhuTotalRLC_AM_BufferSize;

typedef struct NhuRLC_Cap
{
 TknPres pres;
 NhuTotalRLC_AM_BufferSize totalRLC_AM_BufferSize;
 NhuMaxRLC_WindowSize maximumRLC_WindowSize;
 NhuMaxAM_EntityNumberRLC_Cap maximumAM_EntityNumber;
} NhuRLC_Cap;


typedef enum enumNhuTotalRLC_AM_BufferSize_r5_ext
{
 NhuTotalRLC_AM_BufferSize_r5_extkb200Enum,
 NhuTotalRLC_AM_BufferSize_r5_extkb300Enum,
 NhuTotalRLC_AM_BufferSize_r5_extkb400Enum,
 NhuTotalRLC_AM_BufferSize_r5_extkb750Enum
} EnumNhuTotalRLC_AM_BufferSize_r5_ext;
typedef TknU32 NhuTotalRLC_AM_BufferSize_r5_ext;

typedef struct NhuRLC_Cap_r5_ext
{
 TknPres pres;
 NhuTotalRLC_AM_BufferSize_r5_ext totalRLC_AM_BufferSize;
} NhuRLC_Cap_r5_ext;


typedef TknU8 NhuRLC_Cap_v770extsupportOfTwoLogChannel;

typedef struct NhuRLC_Cap_v770ext
{
 TknPres pres;
 NhuRLC_Cap_v770extsupportOfTwoLogChannel supportOfTwoLogChannel;
} NhuRLC_Cap_v770ext;


typedef enum enumNhuTotalRLC_AM_BufferSize_v920ext
{
 NhuTotalRLC_AM_BufferSize_v920extkb1150Enum,
 NhuTotalRLC_AM_BufferSize_v920extkb1250Enum
} EnumNhuTotalRLC_AM_BufferSize_v920ext;
typedef TknU32 NhuTotalRLC_AM_BufferSize_v920ext;

typedef struct NhuRLC_Cap_v920ext
{
 TknPres pres;
 NhuTotalRLC_AM_BufferSize_v920ext totalRLC_AM_BufferSize;
} NhuRLC_Cap_v920ext;


typedef enum enumNhuTotalRLC_AM_BufferSize_va40ext
{
 NhuTotalRLC_AM_BufferSize_va40extkb1500Enum,
 NhuTotalRLC_AM_BufferSize_va40extkb1800Enum,
 NhuTotalRLC_AM_BufferSize_va40extkb2300Enum,
 NhuTotalRLC_AM_BufferSize_va40extspareEnum
} EnumNhuTotalRLC_AM_BufferSize_va40ext;
typedef TknU32 NhuTotalRLC_AM_BufferSize_va40ext;

typedef struct NhuRLC_Cap_va40ext
{
 TknPres pres;
 NhuTotalRLC_AM_BufferSize_va40ext totalRLC_AM_BufferSize;
} NhuRLC_Cap_va40ext;


typedef enum enumNhuTotalRLC_AM_BufferSize_vbxyext
{
 NhuTotalRLC_AM_BufferSize_vbxyextkb3400Enum,
 NhuTotalRLC_AM_BufferSize_vbxyextkb4400Enum,
 NhuTotalRLC_AM_BufferSize_vbxyextspare2Enum,
 NhuTotalRLC_AM_BufferSize_vbxyextspare1Enum
} EnumNhuTotalRLC_AM_BufferSize_vbxyext;
typedef TknU32 NhuTotalRLC_AM_BufferSize_vbxyext;

typedef struct NhuRLC_Cap_vbxyext
{
 TknPres pres;
 NhuTotalRLC_AM_BufferSize_vbxyext totalRLC_AM_BufferSize;
} NhuRLC_Cap_vbxyext;

typedef struct NhuRRC_MsgSequenceNumberLst
{
 TknU16 noComp;
 NhuRRC_MsgSequenceNumber *member;
}NhuRRC_MsgSequenceNumberLst;


typedef enum enumNhuRRC_StateIndicator
{
 NhuRRC_StateIndicatorcell_DCHEnum,
 NhuRRC_StateIndicatorcell_FACHEnum,
 NhuRRC_StateIndicatorcell_PCHEnum,
 NhuRRC_StateIndicatorura_PCHEnum
} EnumNhuRRC_StateIndicator;
typedef TknU32 NhuRRC_StateIndicator;


typedef TknStrBSXL NhuS_RNTI;

typedef TknStrBSXL NhuS_RNTI_2;

typedef TknStrBSXL NhuSecCapcipheringAlgorithmCap;

typedef TknStrBSXL NhuSecCapintegrityProtectionAlgorithmCap;
typedef struct NhuSecCap
{
 TknPres pres;
 NhuSecCapcipheringAlgorithmCap cipheringAlgorithmCap;
 NhuSecCapintegrityProtectionAlgorithmCap integrityProtectionAlgorithmCap;
} NhuSecCap;

typedef struct NhuSecondaryServingEDCHCell_Info
{
 TknPres pres;
 NhuE_RNTI primary_E_RNTI;
 NhuE_RNTI secondary_E_RNTI;
} NhuSecondaryServingEDCHCell_Info;


typedef enum enumNhuScramblingCodeTyp
{
 NhuScramblingCodeTypshortSCEnum,
 NhuScramblingCodeTyplongSCEnum
} EnumNhuScramblingCodeTyp;
typedef TknU32 NhuScramblingCodeTyp;


typedef TknU32 NhuUL_ScramblingCode;


typedef enum enumNhuMinReduced_E_DPDCH_GainFactor
{
 NhuMinReduced_E_DPDCH_GainFactorm8_15Enum,
 NhuMinReduced_E_DPDCH_GainFactorm11_15Enum,
 NhuMinReduced_E_DPDCH_GainFactorm15_15Enum,
 NhuMinReduced_E_DPDCH_GainFactorm21_15Enum,
 NhuMinReduced_E_DPDCH_GainFactorm30_15Enum,
 NhuMinReduced_E_DPDCH_GainFactorm42_15Enum,
 NhuMinReduced_E_DPDCH_GainFactorm60_15Enum,
 NhuMinReduced_E_DPDCH_GainFactorm84_15Enum
} EnumNhuMinReduced_E_DPDCH_GainFactor;
typedef TknU32 NhuMinReduced_E_DPDCH_GainFactor;


typedef TknU32 NhuE_DCH_MinimumSet_E_TFCI;


typedef TknU32 NhuPC_Preamble;


typedef TknStrBSXL NhuSecondaryEDCH_Info_Cmnms2_SchedTransmGrantHARQAlloc;

typedef enum enumNhuSecondaryEDCH_Info_CmnservingGrantprimary_Secondary_GrantSelector
{
 NhuSecondaryEDCH_Info_CmnservingGrantprimary_Secondary_GrantSelectorprimaryEnum,
 NhuSecondaryEDCH_Info_CmnservingGrantprimary_Secondary_GrantSelectorsecondaryEnum
} EnumNhuSecondaryEDCH_Info_CmnservingGrantprimary_Secondary_GrantSelector;
typedef TknU32 NhuSecondaryEDCH_Info_CmnservingGrantprimary_Secondary_GrantSelector;

typedef struct NhuSecondaryEDCH_Info_CmnservingGrant
{
 TknPres pres;
 NhuSecondaryEDCH_Info_CmnservingGrantprimary_Secondary_GrantSelector primary_Secondary_GrantSelector;
} NhuSecondaryEDCH_Info_CmnservingGrant;


typedef TknU32 NhuSecondaryEDCH_Info_CmndpcchPowerOffset_SecondaryULFrequency;

typedef struct NhuSecondaryEDCH_Info_Cmn
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuScramblingCodeTyp scramblingCodeTyp;
 NhuUL_ScramblingCode scramblingCodeNumber;
 NhuSecondaryEDCH_Info_Cmnms2_SchedTransmGrantHARQAlloc ms2_SchedTransmGrantHARQAlloc;
 NhuSecondaryEDCH_Info_CmnservingGrant servingGrant;
 NhuMinReduced_E_DPDCH_GainFactor minReduced_E_DPDCH_GainFactor;
 NhuE_DCH_MinimumSet_E_TFCI e_DCH_minimumSet_E_TFCI;
 NhuSecondaryEDCH_Info_CmndpcchPowerOffset_SecondaryULFrequency dpcchPowerOffset_SecondaryULFrequency;
 NhuPC_Preamble pc_Preamble;
} NhuSecondaryEDCH_Info_Cmn;


typedef TknStrBSXL NhuSRNC_Identity;

typedef TknStrBSXL NhuSR_VCC_Infononce;
typedef struct NhuSR_VCC_Info
{
 TknPres pres;
 NhuSR_VCC_Infononce nonce;
} NhuSR_VCC_Info;

typedef struct NhuRAB_InfoReplace
{
 TknPres pres;
 NhuRAB_Identity rab_Identity;
 NhuCN_DomainIdentity cn_DomainIdentity;
} NhuRAB_InfoReplace;

typedef struct NhuSR_VCC_SecRABInfo_v860ext
{
 TknPres pres;
 NhuSR_VCC_Info sr_vcc_Info;
 NhuRAB_InfoReplace rab_InfoReplace;
} NhuSR_VCC_SecRABInfo_v860ext;


typedef TknStrBSXL NhuSTART_Value;
typedef struct NhuSTARTSingle
{
 TknPres pres;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuSTART_Value start_Value;
} NhuSTARTSingle;

typedef struct NhuSTARTLst
{
 TknU16 noComp;
 NhuSTARTSingle *member;
}NhuSTARTLst;


typedef enum enumNhuSysSpecificCapUpdReq_v590ext
{
 NhuSysSpecificCapUpdReq_v590extgeranIuEnum
} EnumNhuSysSpecificCapUpdReq_v590ext;
typedef TknU32 NhuSysSpecificCapUpdReq_v590ext;


typedef enum enumNhuT_300
{
 NhuT_300ms100Enum,
 NhuT_300ms200Enum,
 NhuT_300ms400Enum,
 NhuT_300ms600Enum,
 NhuT_300ms800Enum,
 NhuT_300ms1000Enum,
 NhuT_300ms1200Enum,
 NhuT_300ms1400Enum,
 NhuT_300ms1600Enum,
 NhuT_300ms1800Enum,
 NhuT_300ms2000Enum,
 NhuT_300ms3000Enum,
 NhuT_300ms4000Enum,
 NhuT_300ms6000Enum,
 NhuT_300ms8000Enum
} EnumNhuT_300;
typedef TknU32 NhuT_300;


typedef enum enumNhuT_301
{
 NhuT_301ms100Enum,
 NhuT_301ms200Enum,
 NhuT_301ms400Enum,
 NhuT_301ms600Enum,
 NhuT_301ms800Enum,
 NhuT_301ms1000Enum,
 NhuT_301ms1200Enum,
 NhuT_301ms1400Enum,
 NhuT_301ms1600Enum,
 NhuT_301ms1800Enum,
 NhuT_301ms2000Enum,
 NhuT_301ms3000Enum,
 NhuT_301ms4000Enum,
 NhuT_301ms6000Enum,
 NhuT_301ms8000Enum,
 NhuT_301spareEnum
} EnumNhuT_301;
typedef TknU32 NhuT_301;


typedef enum enumNhuT_302
{
 NhuT_302ms100Enum,
 NhuT_302ms200Enum,
 NhuT_302ms400Enum,
 NhuT_302ms600Enum,
 NhuT_302ms800Enum,
 NhuT_302ms1000Enum,
 NhuT_302ms1200Enum,
 NhuT_302ms1400Enum,
 NhuT_302ms1600Enum,
 NhuT_302ms1800Enum,
 NhuT_302ms2000Enum,
 NhuT_302ms3000Enum,
 NhuT_302ms4000Enum,
 NhuT_302ms6000Enum,
 NhuT_302ms8000Enum,
 NhuT_302spareEnum
} EnumNhuT_302;
typedef TknU32 NhuT_302;


typedef enum enumNhuT_304
{
 NhuT_304ms100Enum,
 NhuT_304ms200Enum,
 NhuT_304ms400Enum,
 NhuT_304ms1000Enum,
 NhuT_304ms2000Enum,
 NhuT_304spare3Enum,
 NhuT_304spare2Enum,
 NhuT_304spare1Enum
} EnumNhuT_304;
typedef TknU32 NhuT_304;


typedef enum enumNhuT_305
{
 NhuT_305noUpdEnum,
 NhuT_305m5Enum,
 NhuT_305m10Enum,
 NhuT_305m30Enum,
 NhuT_305m60Enum,
 NhuT_305m120Enum,
 NhuT_305m360Enum,
 NhuT_305m720Enum
} EnumNhuT_305;
typedef TknU32 NhuT_305;


typedef enum enumNhuT_307
{
 NhuT_307s5Enum,
 NhuT_307s10Enum,
 NhuT_307s15Enum,
 NhuT_307s20Enum,
 NhuT_307s30Enum,
 NhuT_307s40Enum,
 NhuT_307s50Enum,
 NhuT_307spareEnum
} EnumNhuT_307;
typedef TknU32 NhuT_307;


typedef enum enumNhuT_308
{
 NhuT_308ms40Enum,
 NhuT_308ms80Enum,
 NhuT_308ms160Enum,
 NhuT_308ms320Enum
} EnumNhuT_308;
typedef TknU32 NhuT_308;


typedef TknU32 NhuT_309;


typedef enum enumNhuT_310
{
 NhuT_310ms40Enum,
 NhuT_310ms80Enum,
 NhuT_310ms120Enum,
 NhuT_310ms160Enum,
 NhuT_310ms200Enum,
 NhuT_310ms240Enum,
 NhuT_310ms280Enum,
 NhuT_310ms320Enum
} EnumNhuT_310;
typedef TknU32 NhuT_310;


typedef enum enumNhuT_311
{
 NhuT_311ms250Enum,
 NhuT_311ms500Enum,
 NhuT_311ms750Enum,
 NhuT_311ms1000Enum,
 NhuT_311ms1250Enum,
 NhuT_311ms1500Enum,
 NhuT_311ms1750Enum,
 NhuT_311ms2000Enum
} EnumNhuT_311;
typedef TknU32 NhuT_311;


typedef TknU32 NhuT_312;


typedef TknU32 NhuT_313;


typedef enum enumNhuT_314
{
 NhuT_314s0Enum,
 NhuT_314s2Enum,
 NhuT_314s4Enum,
 NhuT_314s6Enum,
 NhuT_314s8Enum,
 NhuT_314s12Enum,
 NhuT_314s16Enum,
 NhuT_314s20Enum
} EnumNhuT_314;
typedef TknU32 NhuT_314;


typedef enum enumNhuT_315
{
 NhuT_315s0Enum,
 NhuT_315s10Enum,
 NhuT_315s30Enum,
 NhuT_315s60Enum,
 NhuT_315s180Enum,
 NhuT_315s600Enum,
 NhuT_315s1200Enum,
 NhuT_315s1800Enum
} EnumNhuT_315;
typedef TknU32 NhuT_315;


typedef enum enumNhuT_316
{
 NhuT_316s0Enum,
 NhuT_316s10Enum,
 NhuT_316s20Enum,
 NhuT_316s30Enum,
 NhuT_316s40Enum,
 NhuT_316s50Enum,
 NhuT_316s_infEnum,
 NhuT_316spareEnum
} EnumNhuT_316;
typedef TknU32 NhuT_316;


typedef enum enumNhuT_317
{
 NhuT_317infinity0Enum,
 NhuT_317infinity1Enum,
 NhuT_317infinity2Enum,
 NhuT_317infinity3Enum,
 NhuT_317infinity4Enum,
 NhuT_317infinity5Enum,
 NhuT_317infinity6Enum,
 NhuT_317infinity7Enum
} EnumNhuT_317;
typedef TknU32 NhuT_317;


typedef enum enumNhuT_318
{
 NhuT_318ms250Enum,
 NhuT_318ms500Enum,
 NhuT_318ms750Enum,
 NhuT_318ms1000Enum,
 NhuT_318ms1250Enum,
 NhuT_318ms1500Enum,
 NhuT_318ms1750Enum,
 NhuT_318ms2000Enum,
 NhuT_318ms3000Enum,
 NhuT_318ms4000Enum,
 NhuT_318ms6000Enum,
 NhuT_318ms8000Enum,
 NhuT_318ms10000Enum,
 NhuT_318ms12000Enum,
 NhuT_318ms16000Enum
} EnumNhuT_318;
typedef TknU32 NhuT_318;


typedef enum enumNhuT_319
{
 NhuT_319ms80Enum,
 NhuT_319ms160Enum,
 NhuT_319ms320Enum,
 NhuT_319ms640Enum,
 NhuT_319ms1280Enum,
 NhuT_319ms2560Enum,
 NhuT_319ms5120Enum
} EnumNhuT_319;
typedef TknU32 NhuT_319;


typedef enum enumNhuT_321
{
 NhuT_321ms100Enum,
 NhuT_321ms200Enum,
 NhuT_321ms400Enum,
 NhuT_321ms800Enum
} EnumNhuT_321;
typedef TknU32 NhuT_321;


typedef enum enumNhuT_323
{
 NhuT_323s0Enum,
 NhuT_323s5Enum,
 NhuT_323s10Enum,
 NhuT_323s20Enum,
 NhuT_323s30Enum,
 NhuT_323s60Enum,
 NhuT_323s90Enum,
 NhuT_323s120Enum
} EnumNhuT_323;
typedef TknU32 NhuT_323;

typedef struct NhuTMSI_and_LAI_GSM_MAP
{
 TknPres pres;
 NhuTMSI_GSM_MAP tmsi;
 NhuLAI lai;
} NhuTMSI_and_LAI_GSM_MAP;

typedef struct NhuUL_TransChCapmodeSpecificInfotdd
{
 TknPres pres;
 NhuMaxSimultaneousCCTrCH_Count maxSimultaneousCCTrCH_Count;
} NhuUL_TransChCapmodeSpecificInfotdd;

typedef struct NhuUL_TransChCapmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_TransChCapmodeSpecificInfotdd tdd;
 } val;
} NhuUL_TransChCapmodeSpecificInfo;

typedef struct NhuUL_TransChCap
{
 TknPres pres;
 NhuMaxNoBits maxNoBitsTransmitted;
 NhuMaxNoBits maxConvCodeBitsTransmitted;
 NhuTurboSupport turboEncodingSupport;
 NhuMaxSimultaneousTransChsUL maxSimultaneousTransChs;
 NhuUL_TransChCapmodeSpecificInfo modeSpecificInfo;
 NhuMaxTportBlocksUL maxTransmittedBlocks;
 NhuMaxNumberOfTFC_UL maxNumberOfTFC;
 NhuMaxNumberOfTF maxNumberOfTF;
} NhuUL_TransChCap;

typedef struct NhuTportChannelCap
{
 TknPres pres;
 NhuDL_TransChCap dl_TransChCap;
 NhuUL_TransChCap ul_TransChCap;
} NhuTportChannelCap;

typedef struct NhuU_RNTI
{
 TknPres pres;
 NhuSRNC_Identity srnc_Identity;
 NhuS_RNTI s_RNTI;
} NhuU_RNTI;

typedef struct NhuU_RNTI_Short
{
 TknPres pres;
 NhuSRNC_Identity srnc_Identity;
 NhuS_RNTI_2 s_RNTI_2;
} NhuU_RNTI_Short;


typedef enum enumNhuUE_BasedNwPerformanceMeasurementsParamssupportOfLoggedMeasurementsIdlePCH
{
 NhuUE_BasedNwPerformanceMeasurementsParamssupportOfLoggedMeasurementsIdlePCHtrueEnum
} EnumNhuUE_BasedNwPerformanceMeasurementsParamssupportOfLoggedMeasurementsIdlePCH;
typedef TknU32 NhuUE_BasedNwPerformanceMeasurementsParamssupportOfLoggedMeasurementsIdlePCH;

typedef struct NhuUE_BasedNwPerformanceMeasurementsParams
{
 TknPres pres;
 NhuUE_BasedNwPerformanceMeasurementsParamssupportOfLoggedMeasurementsIdlePCH supportOfLoggedMeasurementsIdlePCH;
} NhuUE_BasedNwPerformanceMeasurementsParams;


typedef TknU32 NhuPhysicalChannelCap_edch_r6fdd_edchsupportededch_PhysicalLyrCategory;

typedef struct NhuPhysicalChannelCap_edch_r6fdd_edchsupported
{
 TknPres pres;
 NhuPhysicalChannelCap_edch_r6fdd_edchsupportededch_PhysicalLyrCategory edch_PhysicalLyrCategory;
} NhuPhysicalChannelCap_edch_r6fdd_edchsupported;

typedef struct NhuPhysicalChannelCap_edch_r6fdd_edch
{
 TknU8 choice;
 union {
  NhuPhysicalChannelCap_edch_r6fdd_edchsupported supported;
 } val;
} NhuPhysicalChannelCap_edch_r6fdd_edch;

typedef struct NhuPhysicalChannelCap_edch_r6
{
 TknPres pres;
 NhuPhysicalChannelCap_edch_r6fdd_edch fdd_edch;
} NhuPhysicalChannelCap_edch_r6;


typedef enum enumNhuUE_RadioAccessCap_v690extdeviceTyp
{
 NhuUE_RadioAccessCap_v690extdeviceTypdoesNotBenefitFromBatteryConsumptionOptimisationEnum
} EnumNhuUE_RadioAccessCap_v690extdeviceTyp;
typedef TknU32 NhuUE_RadioAccessCap_v690extdeviceTyp;

typedef struct NhuUE_RadioAccessCap_v690ext
{
 TknPres pres;
 NhuPhysicalChannelCap_edch_r6 physicalchannelcapability_edch;
 NhuUE_RadioAccessCap_v690extdeviceTyp deviceTyp;
} NhuUE_RadioAccessCap_v690ext;


typedef TknStrOSXL NhuGSM_MS_RadioAccessCap;

typedef enum enumNhuInterRAT_UE_RadioAccessCap_v690extsupportOfInter_RAT_PS_Hovr
{
 NhuInterRAT_UE_RadioAccessCap_v690extsupportOfInter_RAT_PS_HovrdoesSupporInter_RAT_PS_HovrEnum
} EnumNhuInterRAT_UE_RadioAccessCap_v690extsupportOfInter_RAT_PS_Hovr;
typedef TknU32 NhuInterRAT_UE_RadioAccessCap_v690extsupportOfInter_RAT_PS_Hovr;

typedef struct NhuInterRAT_UE_RadioAccessCap_v690ext
{
 TknPres pres;
 NhuInterRAT_UE_RadioAccessCap_v690extsupportOfInter_RAT_PS_Hovr supportOfInter_RAT_PS_Hovr;
 NhuGSM_MS_RadioAccessCap gsm_MS_RadioAccessCap;
} NhuInterRAT_UE_RadioAccessCap_v690ext;


typedef enum enumNhuUE_RadioAccessCap_v6b0ext_IEssupportForSIB11bis
{
 NhuUE_RadioAccessCap_v6b0ext_IEssupportForSIB11bistrueEnum
} EnumNhuUE_RadioAccessCap_v6b0ext_IEssupportForSIB11bis;
typedef TknU32 NhuUE_RadioAccessCap_v6b0ext_IEssupportForSIB11bis;

typedef struct NhuUE_RadioAccessCap_v6b0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v6b0ext_IEssupportForSIB11bis supportForSIB11bis;
} NhuUE_RadioAccessCap_v6b0ext_IEs;


typedef enum enumNhuUE_RadioAccessCap_v6e0ext_IEssupportForFDPCH
{
 NhuUE_RadioAccessCap_v6e0ext_IEssupportForFDPCHtrueEnum
} EnumNhuUE_RadioAccessCap_v6e0ext_IEssupportForFDPCH;
typedef TknU32 NhuUE_RadioAccessCap_v6e0ext_IEssupportForFDPCH;

typedef struct NhuUE_RadioAccessCap_v6e0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v6e0ext_IEssupportForFDPCH supportForFDPCH;
} NhuUE_RadioAccessCap_v6e0ext_IEs;

typedef struct NhuUE_GANSSPositioning_Cap
{
 TknPres pres;
 NhuNwAssistedGANSS_Supp_Lst networkAssistedGANSS_supportedLst;
} NhuUE_GANSSPositioning_Cap;

typedef struct NhuUE_PositioningCap_v770ext
{
 TknPres pres;
 NhuUE_GANSSPositioning_Cap ue_GANSSPositioning_Cap;
} NhuUE_PositioningCap_v770ext;


typedef enum enumNhuUE_SpecificCapInfo_LCRTDD
{
 NhuUE_SpecificCapInfo_LCRTDDnFEnum,
 NhuUE_SpecificCapInfo_LCRTDDnFMc_TriRx_UniTxEnum,
 NhuUE_SpecificCapInfo_LCRTDDnFMc_TriRx_TriTxEnum,
 NhuUE_SpecificCapInfo_LCRTDDnFMc_HexRx_UniTxEnum,
 NhuUE_SpecificCapInfo_LCRTDDnFMc_HexRx_TriTxEnum,
 NhuUE_SpecificCapInfo_LCRTDDnFMc_HexRx_HexTxEnum,
 NhuUE_SpecificCapInfo_LCRTDDnFMc_TwoRx_UniTxEnum,
 NhuUE_SpecificCapInfo_LCRTDDnFMc_TwoRx_TwoTxEnum,
 NhuUE_SpecificCapInfo_LCRTDDspare8Enum,
 NhuUE_SpecificCapInfo_LCRTDDspare7Enum,
 NhuUE_SpecificCapInfo_LCRTDDspare6Enum,
 NhuUE_SpecificCapInfo_LCRTDDspare5Enum,
 NhuUE_SpecificCapInfo_LCRTDDspare4Enum,
 NhuUE_SpecificCapInfo_LCRTDDspare3Enum,
 NhuUE_SpecificCapInfo_LCRTDDspare2Enum,
 NhuUE_SpecificCapInfo_LCRTDDspare1Enum
} EnumNhuUE_SpecificCapInfo_LCRTDD;
typedef TknU32 NhuUE_SpecificCapInfo_LCRTDD;


typedef enum enumNhuUE_RadioAccessCap_v770ext_IEsmac_ehsSupport
{
 NhuUE_RadioAccessCap_v770ext_IEsmac_ehsSupporttrueEnum
} EnumNhuUE_RadioAccessCap_v770ext_IEsmac_ehsSupport;
typedef TknU32 NhuUE_RadioAccessCap_v770ext_IEsmac_ehsSupport;

typedef struct NhuUE_RadioAccessCap_v770ext_IEs
{
 TknPres pres;
 NhuPDCP_Cap_v770ext pdcp_Cap;
 NhuRLC_Cap_v770ext rlc_Cap;
 NhuRF_Cap_v770ext rf_Cap;
 NhuPhysicalChannelCap_v770ext physicalChannelCap;
 NhuMultiModeRAT_Cap_v770ext multiModeRAT_Cap;
 NhuUE_PositioningCap_v770ext ue_PositioningCap;
 NhuUE_RadioAccessCap_v770ext_IEsmac_ehsSupport mac_ehsSupport;
 NhuUE_SpecificCapInfo_LCRTDD ue_specificCapInfo;
} NhuUE_RadioAccessCap_v770ext_IEs;


typedef enum enumNhuUE_RadioAccessCap_v790ext_IEssupportForEDPCCHPowerBoosting
{
 NhuUE_RadioAccessCap_v790ext_IEssupportForEDPCCHPowerBoostingtrueEnum
} EnumNhuUE_RadioAccessCap_v790ext_IEssupportForEDPCCHPowerBoosting;
typedef TknU32 NhuUE_RadioAccessCap_v790ext_IEssupportForEDPCCHPowerBoosting;

typedef struct NhuUE_RadioAccessCap_v790ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v790ext_IEssupportForEDPCCHPowerBoosting supportForEDPCCHPowerBoosting;
} NhuUE_RadioAccessCap_v790ext_IEs;

typedef struct NhuUE_GANSSPositioning_Cap_v860ext_IEs
{
 TknPres pres;
 NhuNwAssistedGANSS_Supp_Lst_v860ext networkAssistedGANSS_supportedLst;
} NhuUE_GANSSPositioning_Cap_v860ext_IEs;

typedef struct NhuUE_PositioningCap_v860ext
{
 TknPres pres;
 NhuUE_GANSSPositioning_Cap_v860ext_IEs ue_GANSSPositioning_Cap_v860ext;
} NhuUE_PositioningCap_v860ext;

typedef struct NhuUE_RadioAccessCapabBandFDD3
{
 TknPres pres;
 NhuRadioFrequencyBandFDD radioFrequencyBandFDD;
 NhuRadioFrequencyBandFDD2 radioFrequencyBandFDD2;
 NhuMeasurementCapExt3 measurementCap3;
} NhuUE_RadioAccessCapabBandFDD3;

typedef struct NhuUE_RadioAccessCapabBandFDDLst3
{
 TknU16 noComp;
 NhuUE_RadioAccessCapabBandFDD3 *member;
}NhuUE_RadioAccessCapabBandFDDLst3;


typedef enum enumNhuUE_RadioAccessCap_v860ext_IEssupportOfCmnEDCH
{
 NhuUE_RadioAccessCap_v860ext_IEssupportOfCmnEDCHtrueEnum
} EnumNhuUE_RadioAccessCap_v860ext_IEssupportOfCmnEDCH;
typedef TknU32 NhuUE_RadioAccessCap_v860ext_IEssupportOfCmnEDCH;


typedef enum enumNhuUE_RadioAccessCap_v860ext_IEssupportOfMACiis
{
 NhuUE_RadioAccessCap_v860ext_IEssupportOfMACiistrueEnum
} EnumNhuUE_RadioAccessCap_v860ext_IEssupportOfMACiis;
typedef TknU32 NhuUE_RadioAccessCap_v860ext_IEssupportOfMACiis;


typedef enum enumNhuUE_RadioAccessCap_v860ext_IEssupportOfSPSOperation
{
 NhuUE_RadioAccessCap_v860ext_IEssupportOfSPSOperationtrueEnum
} EnumNhuUE_RadioAccessCap_v860ext_IEssupportOfSPSOperation;
typedef TknU32 NhuUE_RadioAccessCap_v860ext_IEssupportOfSPSOperation;


typedef enum enumNhuUE_RadioAccessCap_v860ext_IEssupportOfCntrlChannelDRXOperation
{
 NhuUE_RadioAccessCap_v860ext_IEssupportOfCntrlChannelDRXOperationtrueEnum
} EnumNhuUE_RadioAccessCap_v860ext_IEssupportOfCntrlChannelDRXOperation;
typedef TknU32 NhuUE_RadioAccessCap_v860ext_IEssupportOfCntrlChannelDRXOperation;


typedef enum enumNhuUE_RadioAccessCap_v860ext_IEssupportOfCSG
{
 NhuUE_RadioAccessCap_v860ext_IEssupportOfCSGtrueEnum
} EnumNhuUE_RadioAccessCap_v860ext_IEssupportOfCSG;
typedef TknU32 NhuUE_RadioAccessCap_v860ext_IEssupportOfCSG;

typedef struct NhuUE_RadioAccessCap_v860ext_IEs
{
 TknPres pres;
 NhuRF_Cap_v860ext rf_Cap;
 NhuPhysicalChannelCap_v860ext physicalChannelCap;
 NhuMultiModeRAT_Cap_v860ext multiModeRAT_Cap;
 NhuUE_PositioningCap_v860ext ue_PositioningCap;
 NhuMeasurementCap_v860ext measurementCap;
 NhuMeasurementCapTDD measurementCapTDD;
 NhuUE_RadioAccessCap_v860ext_IEssupportOfCmnEDCH supportOfCmnEDCH;
 NhuUE_RadioAccessCap_v860ext_IEssupportOfMACiis supportOfMACiis;
 NhuUE_RadioAccessCap_v860ext_IEssupportOfSPSOperation supportOfSPSOperation;
 NhuUE_RadioAccessCap_v860ext_IEssupportOfCntrlChannelDRXOperation supportOfCntrlChannelDRXOperation;
 NhuUE_RadioAccessCap_v860ext_IEssupportOfCSG supportOfCSG;
 NhuUE_RadioAccessCapabBandFDDLst3 ue_RadioAccessCapabBandFDDLst3;
} NhuUE_RadioAccessCap_v860ext_IEs;


typedef TknStrOSXL NhuEUTRA_RadioAccessCapue_EUTRA_Cap;
typedef struct NhuEUTRA_RadioAccessCap
{
 TknPres pres;
 NhuEUTRA_RadioAccessCapue_EUTRA_Cap ue_EUTRA_Cap;
} NhuEUTRA_RadioAccessCap;

typedef struct NhuInterRAT_UE_RadioAccessCap_v860ext
{
 TknPres pres;
 NhuEUTRA_RadioAccessCap eutra_RadioAccessCap;
} NhuInterRAT_UE_RadioAccessCap_v860ext;


typedef enum enumNhuUE_RadioAccessCap_v880ext_IEssupportForPriorityReselectionInUTRAN
{
 NhuUE_RadioAccessCap_v880ext_IEssupportForPriorityReselectionInUTRANtrueEnum
} EnumNhuUE_RadioAccessCap_v880ext_IEssupportForPriorityReselectionInUTRAN;
typedef TknU32 NhuUE_RadioAccessCap_v880ext_IEssupportForPriorityReselectionInUTRAN;

typedef struct NhuUE_RadioAccessCap_v880ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v880ext_IEssupportForPriorityReselectionInUTRAN supportForPriorityReselectionInUTRAN;
} NhuUE_RadioAccessCap_v880ext_IEs;


typedef enum enumNhuUE_RadioAccessCap_v890ext_IEssupportCellSpecificTxDiversityinDC_Operation
{
 NhuUE_RadioAccessCap_v890ext_IEssupportCellSpecificTxDiversityinDC_OperationtrueEnum
} EnumNhuUE_RadioAccessCap_v890ext_IEssupportCellSpecificTxDiversityinDC_Operation;
typedef TknU32 NhuUE_RadioAccessCap_v890ext_IEssupportCellSpecificTxDiversityinDC_Operation;

typedef struct NhuUE_RadioAccessCap_v890ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v890ext_IEssupportCellSpecificTxDiversityinDC_Operation supportCellSpecificTxDiversityinDC_Operation;
} NhuUE_RadioAccessCap_v890ext_IEs;

typedef struct NhuUE_RadioAccessCapabBandCombLst
{
 TknU16 noComp;
 NhuBandComb *member;
}NhuUE_RadioAccessCapabBandCombLst;


typedef enum enumNhuUE_RadioAccessCap_v920ext_IEssupportOfenhancedTS0
{
 NhuUE_RadioAccessCap_v920ext_IEssupportOfenhancedTS0trueEnum
} EnumNhuUE_RadioAccessCap_v920ext_IEssupportOfenhancedTS0;
typedef TknU32 NhuUE_RadioAccessCap_v920ext_IEssupportOfenhancedTS0;

typedef struct NhuUE_RadioAccessCap_v920ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandCombLst ue_RadioAccessCapabBandCombLst;
 NhuPhysicalChannelCap_v920ext physicalChannelCap;
 NhuRLC_Cap_v920ext rlc_Cap;
 NhuUE_RadioAccessCap_v920ext_IEssupportOfenhancedTS0 supportOfenhancedTS0;
 NhuMeasurementCap_v920ext measurementCap;
 NhuCSG_ProximityIndCap csgProximityIndCap;
 NhuNeighCellSI_AcquisitionCap neighCellSI_AcquisitionCap;
} NhuUE_RadioAccessCap_v920ext_IEs;


typedef enum enumNhuUE_RadioAccessCap_v970ext_IEsue_ExtendedMeasurementSupport
{
 NhuUE_RadioAccessCap_v970ext_IEsue_ExtendedMeasurementSupporttrueEnum
} EnumNhuUE_RadioAccessCap_v970ext_IEsue_ExtendedMeasurementSupport;
typedef TknU32 NhuUE_RadioAccessCap_v970ext_IEsue_ExtendedMeasurementSupport;

typedef struct NhuUE_RadioAccessCap_v970ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v970ext_IEsue_ExtendedMeasurementSupport ue_ExtendedMeasurementSupport;
} NhuUE_RadioAccessCap_v970ext_IEs;


typedef TknU8 NhuSuppCarrierCombinationcarrierCombination12;


typedef TknU8 NhuSuppCarrierCombinationcarrierCombination21;


typedef TknU8 NhuSuppCarrierCombinationcarrierCombination13;


typedef TknU8 NhuSuppCarrierCombinationcarrierCombination31;


typedef TknU8 NhuSuppCarrierCombinationcarrierCombination22;

typedef struct NhuSuppCarrierCombination
{
 TknPres pres;
 NhuSuppCarrierCombinationcarrierCombination12 carrierCombination12;
 NhuSuppCarrierCombinationcarrierCombination21 carrierCombination21;
 NhuSuppCarrierCombinationcarrierCombination13 carrierCombination13;
 NhuSuppCarrierCombinationcarrierCombination31 carrierCombination31;
 NhuSuppCarrierCombinationcarrierCombination22 carrierCombination22;
} NhuSuppCarrierCombination;

typedef struct NhuUE_RadioAccessCapabBandCombLst_va40ext
{
 TknU16 noComp;
 NhuSuppCarrierCombination *member;
}NhuUE_RadioAccessCapabBandCombLst_va40ext;


typedef enum enumNhuUE_RadioAccessCapabBandFDD4additionalSecondaryCells
{
 NhuUE_RadioAccessCapabBandFDD4additionalSecondaryCellsa1Enum,
 NhuUE_RadioAccessCapabBandFDD4additionalSecondaryCellsa2Enum
} EnumNhuUE_RadioAccessCapabBandFDD4additionalSecondaryCells;
typedef TknU32 NhuUE_RadioAccessCapabBandFDD4additionalSecondaryCells;

typedef struct NhuUE_RadioAccessCapabBandFDD4
{
 TknPres pres;
 NhuRadioFrequencyBandFDD radioFrequencyBandFDD;
 NhuRadioFrequencyBandFDD2 radioFrequencyBandFDD2;
 NhuRadioFrequencyBandFDD3 radioFrequencyBandFDD3;
 NhuUE_RadioAccessCapabBandFDD4additionalSecondaryCells additionalSecondaryCells;
 NhuNonContiguousMultiCellCombinationLst nonContiguousMultiCellCombinationLst;
} NhuUE_RadioAccessCapabBandFDD4;

typedef struct NhuUE_RadioAccessCapabBandFDDLst4
{
 TknU16 noComp;
 NhuUE_RadioAccessCapabBandFDD4 *member;
}NhuUE_RadioAccessCapabBandFDDLst4;


typedef enum enumNhuUE_RadioAccessCap_va40ext_IEssupportOfMUMIMO
{
 NhuUE_RadioAccessCap_va40ext_IEssupportOfMUMIMOuplinkEnum,
 NhuUE_RadioAccessCap_va40ext_IEssupportOfMUMIMOuplink_and_downlinkEnum
} EnumNhuUE_RadioAccessCap_va40ext_IEssupportOfMUMIMO;
typedef TknU32 NhuUE_RadioAccessCap_va40ext_IEssupportOfMUMIMO;


typedef enum enumNhuUE_RadioAccessCap_va40ext_IEssupportForDualCellMimoInDifferentBands
{
 NhuUE_RadioAccessCap_va40ext_IEssupportForDualCellMimoInDifferentBandstrueEnum
} EnumNhuUE_RadioAccessCap_va40ext_IEssupportForDualCellMimoInDifferentBands;
typedef TknU32 NhuUE_RadioAccessCap_va40ext_IEssupportForDualCellMimoInDifferentBands;


typedef enum enumNhuUE_RadioAccessCap_va40ext_IEssupportOfUTRANANR
{
 NhuUE_RadioAccessCap_va40ext_IEssupportOfUTRANANRtrueEnum
} EnumNhuUE_RadioAccessCap_va40ext_IEssupportOfUTRANANR;
typedef TknU32 NhuUE_RadioAccessCap_va40ext_IEssupportOfUTRANANR;

typedef struct NhuUE_RadioAccessCap_va40ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandCombLst_va40ext ue_RadioAccessCapabBandCombLst_va40ext;
 NhuPhysicalChannelCap_va40ext physicalChannelCap;
 NhuRLC_Cap_va40ext rlc_Cap;
 NhuMeasurementCap_va40ext measurementCap;
 NhuUE_RadioAccessCap_va40ext_IEssupportOfMUMIMO supportOfMUMIMO;
 NhuUE_RadioAccessCap_va40ext_IEssupportForDualCellMimoInDifferentBands supportForDualCellMimoInDifferentBands;
 NhuUE_BasedNwPerformanceMeasurementsParams ue_BasedNwPerformanceMeasurementsParams;
 NhuUE_RadioAccessCap_va40ext_IEssupportOfUTRANANR supportOfUTRANANR;
 NhuUE_RadioAccessCapabBandFDDLst4 ue_RadioAccessCapabBandFDDLst4;
} NhuUE_RadioAccessCap_va40ext_IEs;


typedef enum enumNhuUE_RadioAccessCapabBandFDD4_va60extsupportofULOLTD
{
 NhuUE_RadioAccessCapabBandFDD4_va60extsupportofULOLTDtrueEnum
} EnumNhuUE_RadioAccessCapabBandFDD4_va60extsupportofULOLTD;
typedef TknU32 NhuUE_RadioAccessCapabBandFDD4_va60extsupportofULOLTD;

typedef struct NhuUE_RadioAccessCapabBandFDD4_va60ext
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandFDD4_va60extsupportofULOLTD supportofULOLTD;
} NhuUE_RadioAccessCapabBandFDD4_va60ext;

typedef struct NhuUE_RadioAccessCapabBandFDDLst4_va60ext
{
 TknU16 noComp;
 NhuUE_RadioAccessCapabBandFDD4_va60ext *member;
}NhuUE_RadioAccessCapabBandFDDLst4_va60ext;

typedef struct NhuUE_RadioAccessCap_va60ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandFDDLst4_va60ext ue_RadioAccessCapabBandFDDLst4;
} NhuUE_RadioAccessCap_va60ext_IEs;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination14;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination41;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination15;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination51;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination16;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination61;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination17;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination71;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination23;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination32;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination24;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination42;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination25;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination52;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination26;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination62;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination33;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination34;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination43;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination44;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination35;


typedef TknU8 NhuSuppCarrierCombination_extcarrierCombination53;

typedef struct NhuSuppCarrierCombination_ext
{
 TknPres pres;
 NhuSuppCarrierCombination_extcarrierCombination14 carrierCombination14;
 NhuSuppCarrierCombination_extcarrierCombination41 carrierCombination41;
 NhuSuppCarrierCombination_extcarrierCombination15 carrierCombination15;
 NhuSuppCarrierCombination_extcarrierCombination51 carrierCombination51;
 NhuSuppCarrierCombination_extcarrierCombination16 carrierCombination16;
 NhuSuppCarrierCombination_extcarrierCombination61 carrierCombination61;
 NhuSuppCarrierCombination_extcarrierCombination17 carrierCombination17;
 NhuSuppCarrierCombination_extcarrierCombination71 carrierCombination71;
 NhuSuppCarrierCombination_extcarrierCombination23 carrierCombination23;
 NhuSuppCarrierCombination_extcarrierCombination32 carrierCombination32;
 NhuSuppCarrierCombination_extcarrierCombination24 carrierCombination24;
 NhuSuppCarrierCombination_extcarrierCombination42 carrierCombination42;
 NhuSuppCarrierCombination_extcarrierCombination25 carrierCombination25;
 NhuSuppCarrierCombination_extcarrierCombination52 carrierCombination52;
 NhuSuppCarrierCombination_extcarrierCombination26 carrierCombination26;
 NhuSuppCarrierCombination_extcarrierCombination62 carrierCombination62;
 NhuSuppCarrierCombination_extcarrierCombination33 carrierCombination33;
 NhuSuppCarrierCombination_extcarrierCombination34 carrierCombination34;
 NhuSuppCarrierCombination_extcarrierCombination43 carrierCombination43;
 NhuSuppCarrierCombination_extcarrierCombination44 carrierCombination44;
 NhuSuppCarrierCombination_extcarrierCombination35 carrierCombination35;
 NhuSuppCarrierCombination_extcarrierCombination53 carrierCombination53;
} NhuSuppCarrierCombination_ext;

typedef struct NhuUE_RadioAccessCapabBandCombLst_vbxyext
{
 TknU16 noComp;
 NhuSuppCarrierCombination_ext *member;
}NhuUE_RadioAccessCapabBandCombLst_vbxyext;


typedef enum enumNhuUE_RadioAccessCapabBandFDD4_vbxyextadditionalSecondaryCells2
{
 NhuUE_RadioAccessCapabBandFDD4_vbxyextadditionalSecondaryCells2a3Enum,
 NhuUE_RadioAccessCapabBandFDD4_vbxyextadditionalSecondaryCells2a4Enum,
 NhuUE_RadioAccessCapabBandFDD4_vbxyextadditionalSecondaryCells2a5Enum,
 NhuUE_RadioAccessCapabBandFDD4_vbxyextadditionalSecondaryCells2a6Enum
} EnumNhuUE_RadioAccessCapabBandFDD4_vbxyextadditionalSecondaryCells2;
typedef TknU32 NhuUE_RadioAccessCapabBandFDD4_vbxyextadditionalSecondaryCells2;


typedef enum enumNhuUE_RadioAccessCapabBandFDD4_vbxyextsupportOfULCLTD
{
 NhuUE_RadioAccessCapabBandFDD4_vbxyextsupportOfULCLTDtrueEnum
} EnumNhuUE_RadioAccessCapabBandFDD4_vbxyextsupportOfULCLTD;
typedef TknU32 NhuUE_RadioAccessCapabBandFDD4_vbxyextsupportOfULCLTD;

typedef struct NhuUE_RadioAccessCapabBandFDD4_vbxyext
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandFDD4_vbxyextadditionalSecondaryCells2 additionalSecondaryCells2;
 NhuUE_RadioAccessCapabBandFDD4_vbxyextsupportOfULCLTD supportOfULCLTD;
} NhuUE_RadioAccessCapabBandFDD4_vbxyext;

typedef struct NhuUE_RadioAccessCapabBandFDDLst4_vbxyext
{
 TknU16 noComp;
 NhuUE_RadioAccessCapabBandFDD4_vbxyext *member;
}NhuUE_RadioAccessCapabBandFDDLst4_vbxyext;

typedef struct NhuUE_RadioAccessCap_vbxyext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandCombLst_vbxyext ue_RadioAccessCapabBandCombLst_vbxyext;
 NhuPhysicalChannelCap_vbxyext physicalChannelCap;
 NhuRLC_Cap_vbxyext rlc_Cap;
 NhuUE_RadioAccessCapabBandFDDLst4_vbxyext ue_RadioAccessCapabBandFDDLst4;
} NhuUE_RadioAccessCap_vbxyext_IEs;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsva60NonCriticalExtnsvbxyNonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsva60NonCriticalExtnsvbxyNonCriticalExtnsnonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsva60NonCriticalExtnsvbxyNonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_vbxyext_IEs ue_RadioAccessCap_vbxyext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsva60NonCriticalExtnsvbxyNonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsva60NonCriticalExtnsvbxyNonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsva60NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_va60ext_IEs ue_RadioAccessCap_va60ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsva60NonCriticalExtnsvbxyNonCriticalExtns vbxyNonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsva60NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_va40ext_IEs ue_RadioAccessCap_va40ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsva60NonCriticalExtns va60NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_v970ext_IEs ue_RadioAccessCap_v970ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtns va40NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_v920ext_IEs ue_RadioAccessCap_v920ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtns v970NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_v890ext_IEs ue_RadioAccessCap_v890ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtnsv920NonCriticalExtns v920NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_v880ext_IEs ue_RadioAccessCap_v880ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv890NonCriticalExtns v890NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_v860ext_IEs ue_RadioAccessCap_v860ext;
 NhuInterRAT_UE_RadioAccessCap_v860ext ue_RATSpecificCap_v860ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtns v880NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_v790ext_IEs ue_RadioAccessCap_v790ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtnsv860NonCriticalExtns v860NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_v770ext_IEs ue_RadioAccessCap_v770ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtnsv790NonCriticalExtns v790NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_v6e0ext_IEs ue_RadioAccessCap_v6e0ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtnsv770NonCriticalExtns v770NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtns;

typedef struct NhuUE_CapCont_IEsv6b0NonCriticalExtns
{
 TknPres pres;
 NhuUE_RadioAccessCap_v6b0ext_IEs ue_RadioAccessCap_v6b0ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtnsv6e0NonCriticalExtns v6e0NonCriticalExtns;
} NhuUE_CapCont_IEsv6b0NonCriticalExtns;

typedef struct NhuUE_CapCont_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v690ext ue_RadioAccessCap_v690ext;
 NhuInterRAT_UE_RadioAccessCap_v690ext ue_RATSpecificCap_v690ext;
 NhuUE_CapCont_IEsv6b0NonCriticalExtns v6b0NonCriticalExtns;
} NhuUE_CapCont_IEs;

typedef struct NhuUE_ConnTmrsAndConsts
{
 TknPres pres;
 NhuT_301 t_301;
 NhuN_301 n_301;
 NhuT_302 t_302;
 NhuN_302 n_302;
 NhuT_304 t_304;
 NhuN_304 n_304;
 NhuT_305 t_305;
 NhuT_307 t_307;
 NhuT_308 t_308;
 NhuT_309 t_309;
 NhuT_310 t_310;
 NhuN_310 n_310;
 NhuT_311 t_311;
 NhuT_312 t_312;
 NhuN_312 n_312;
 NhuT_313 t_313;
 NhuN_313 n_313;
 NhuT_314 t_314;
 NhuT_315 t_315;
 NhuN_315 n_315;
 NhuT_316 t_316;
 NhuT_317 t_317;
} NhuUE_ConnTmrsAndConsts;

typedef struct NhuUE_ConnTmrsAndConsts_v3a0ext
{
 TknPres pres;
 NhuN_312ext n_312;
 NhuN_315ext n_315;
} NhuUE_ConnTmrsAndConsts_v3a0ext;

typedef struct NhuUE_ConnTmrsAndConsts_r5
{
 TknPres pres;
 NhuT_301 t_301;
 NhuN_301 n_301;
 NhuT_302 t_302;
 NhuN_302 n_302;
 NhuT_304 t_304;
 NhuN_304 n_304;
 NhuT_305 t_305;
 NhuT_307 t_307;
 NhuT_308 t_308;
 NhuT_309 t_309;
 NhuT_310 t_310;
 NhuN_310 n_310;
 NhuT_311 t_311;
 NhuT_312 t_312;
 NhuN_312_r5 n_312;
 NhuT_313 t_313;
 NhuN_313 n_313;
 NhuT_314 t_314;
 NhuT_315 t_315;
 NhuN_315_r5 n_315;
 NhuT_316 t_316;
 NhuT_317 t_317;
} NhuUE_ConnTmrsAndConsts_r5;

typedef struct NhuUE_ConnTmrsAndConsts_v860ext
{
 TknPres pres;
 NhuT_323 t_323;
} NhuUE_ConnTmrsAndConsts_v860ext;

typedef struct NhuUE_IdleTmrsAndConsts
{
 TknPres pres;
 NhuT_300 t_300;
 NhuN_300 n_300;
 NhuT_312 t_312;
 NhuN_312 n_312;
} NhuUE_IdleTmrsAndConsts;

typedef struct NhuUE_HSPA_Identities_r6
{
 TknPres pres;
 NhuH_RNTI new_H_RNTI;
 NhuE_RNTI newPrimary_E_RNTI;
 NhuE_RNTI newSecondary_E_RNTI;
} NhuUE_HSPA_Identities_r6;

typedef struct NhuUE_IdleTmrsAndConsts_v3a0ext
{
 TknPres pres;
 NhuN_312ext n_312;
} NhuUE_IdleTmrsAndConsts_v3a0ext;

typedef struct NhuUE_MultiModeRAT_Cap
{
 TknPres pres;
 NhuMultiRAT_Cap multiRAT_CapLst;
 NhuMultiModeCap multiModeCap;
} NhuUE_MultiModeRAT_Cap;


typedef enum enumNhuUE_PowerClassExt
{
 NhuUE_PowerClassExtclass1Enum,
 NhuUE_PowerClassExtclass2Enum,
 NhuUE_PowerClassExtclass3Enum,
 NhuUE_PowerClassExtclass4Enum,
 NhuUE_PowerClassExtspare4Enum,
 NhuUE_PowerClassExtspare3Enum,
 NhuUE_PowerClassExtspare2Enum,
 NhuUE_PowerClassExtspare1Enum
} EnumNhuUE_PowerClassExt;
typedef TknU32 NhuUE_PowerClassExt;


typedef TknU8 NhuUE_Positioning_CapstandaloneLocMethodsSupp;


typedef TknU8 NhuUE_Positioning_Capue_BasedOTDOA_Supp;


typedef TknU8 NhuUE_Positioning_CapsupportForUE_GPS_TimingOfCellFrames;


typedef TknU8 NhuUE_Positioning_CapsupportForIPDL;

typedef struct NhuUE_Positioning_Cap
{
 TknPres pres;
 NhuUE_Positioning_CapstandaloneLocMethodsSupp standaloneLocMethodsSupp;
 NhuUE_Positioning_Capue_BasedOTDOA_Supp ue_BasedOTDOA_Supp;
 NhuNwAssistedGPS_Supp networkAssistedGPS_Supp;
 NhuUE_Positioning_CapsupportForUE_GPS_TimingOfCellFrames supportForUE_GPS_TimingOfCellFrames;
 NhuUE_Positioning_CapsupportForIPDL supportForIPDL;
} NhuUE_Positioning_Cap;

typedef struct NhuUE_RadioAccessCap
{
 TknPres pres;
 NhuPDCP_Cap pdcp_Cap;
 NhuRLC_Cap rlc_Cap;
 NhuTportChannelCap transportChannelCap;
 NhuRF_Cap rf_Cap;
 NhuPhysicalChannelCap physicalChannelCap;
 NhuUE_MultiModeRAT_Cap ue_MultiModeRAT_Cap;
 NhuSecCap securityCap;
 NhuUE_Positioning_Cap ue_positioning_Cap;
 NhuMeasurementCap measurementCap;
} NhuUE_RadioAccessCap;

typedef struct NhuUE_RadioAccessCapabBandFDDfddRF_Cap
{
 TknPres pres;
 NhuUE_PowerClassExt ue_PowerClass;
 NhuTxRxFrequencySeparation txRxFrequencySeparation;
} NhuUE_RadioAccessCapabBandFDDfddRF_Cap;

typedef struct NhuUE_RadioAccessCapabBandFDD
{
 TknPres pres;
 NhuRadioFrequencyBandFDD radioFrequencyBandFDD;
 NhuUE_RadioAccessCapabBandFDDfddRF_Cap fddRF_Cap;
 NhuMeasurementCapExt measurementCap;
} NhuUE_RadioAccessCapabBandFDD;

typedef struct NhuUE_RadioAccessCapabBandFDDLst
{
 TknU16 noComp;
 NhuUE_RadioAccessCapabBandFDD *member;
}NhuUE_RadioAccessCapabBandFDDLst;

typedef struct NhuUE_RadioAccessCap_v370ext
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCapabBandFDDLst;
} NhuUE_RadioAccessCap_v370ext;

typedef struct NhuUE_RadioAccessCapInfo
{
 TknPres pres;
 NhuUE_RadioAccessCap ue_RadioAccessCap;
 NhuUE_RadioAccessCap_v370ext ue_RadioAccessCap_v370ext;
} NhuUE_RadioAccessCapInfo;


typedef TknU8 NhuUE_PositioningCapExt_v380rx_tx_TimeDifferenceTyp2Capable;

typedef struct NhuUE_PositioningCapExt_v380
{
 TknPres pres;
 NhuUE_PositioningCapExt_v380rx_tx_TimeDifferenceTyp2Capable rx_tx_TimeDifferenceTyp2Capable;
} NhuUE_PositioningCapExt_v380;

typedef struct NhuUE_RadioAccessCap_v380ext
{
 TknPres pres;
 NhuUE_PositioningCapExt_v380 ue_PositioningCapExt_v380;
} NhuUE_RadioAccessCap_v380ext;


typedef enum enumNhuUE_PositioningCapExt_v3a0validity_CellPCH_UraPCH
{
 NhuUE_PositioningCapExt_v3a0validity_CellPCH_UraPCHtrueEnum
} EnumNhuUE_PositioningCapExt_v3a0validity_CellPCH_UraPCH;
typedef TknU32 NhuUE_PositioningCapExt_v3a0validity_CellPCH_UraPCH;

typedef struct NhuUE_PositioningCapExt_v3a0
{
 TknPres pres;
 NhuUE_PositioningCapExt_v3a0validity_CellPCH_UraPCH validity_CellPCH_UraPCH;
} NhuUE_PositioningCapExt_v3a0;

typedef struct NhuUE_RadioAccessCap_v3a0ext
{
 TknPres pres;
 NhuUE_PositioningCapExt_v3a0 ue_PositioningCapExt_v3a0;
} NhuUE_RadioAccessCap_v3a0ext;


typedef enum enumNhuUE_PositioningCapExt_v3g0sfn_sfnTyp2Cap
{
 NhuUE_PositioningCapExt_v3g0sfn_sfnTyp2CaptrueEnum
} EnumNhuUE_PositioningCapExt_v3g0sfn_sfnTyp2Cap;
typedef TknU32 NhuUE_PositioningCapExt_v3g0sfn_sfnTyp2Cap;

typedef struct NhuUE_PositioningCapExt_v3g0
{
 TknPres pres;
 NhuUE_PositioningCapExt_v3g0sfn_sfnTyp2Cap sfn_sfnTyp2Cap;
} NhuUE_PositioningCapExt_v3g0;

typedef struct NhuUE_RadioAccessCap_v3g0ext
{
 TknPres pres;
 NhuUE_PositioningCapExt_v3g0 ue_PositioningCapExt_v3g0;
} NhuUE_RadioAccessCap_v3g0ext;

typedef struct NhuUE_RadioAccessCapabBandFDD2fddRF_Cap
{
 TknPres pres;
 NhuUE_PowerClassExt ue_PowerClass;
 NhuTxRxFrequencySeparation txRxFrequencySeparation;
} NhuUE_RadioAccessCapabBandFDD2fddRF_Cap;

typedef struct NhuUE_RadioAccessCapabBandFDD2
{
 TknPres pres;
 NhuRadioFrequencyBandFDD2 radioFrequencyBandFDD2;
 NhuUE_RadioAccessCapabBandFDD2fddRF_Cap fddRF_Cap;
 NhuMeasurementCapExt2 measurementCap2;
} NhuUE_RadioAccessCapabBandFDD2;

typedef struct NhuUE_RadioAccessCapabBandFDDLst2
{
 TknU16 noComp;
 NhuUE_RadioAccessCapabBandFDD2 *member;
}NhuUE_RadioAccessCapabBandFDDLst2;

typedef struct NhuUE_RadioAccessCapabBandFDD_ext
{
 TknPres pres;
 NhuRadioFrequencyBandFDD radioFrequencyBandFDD;
 NhuCompressedModeMeasCapabFDDLst_ext compressedModeMeasCapabFDDLst_ext;
} NhuUE_RadioAccessCapabBandFDD_ext;

typedef struct NhuUE_RadioAccessCapabBandFDDLst_ext
{
 TknU16 noComp;
 NhuUE_RadioAccessCapabBandFDD_ext *member;
}NhuUE_RadioAccessCapabBandFDDLst_ext;

typedef struct NhuUE_RadioAccessCap_v650ext
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandFDDLst2 ue_RadioAccessCapabBandFDDLst2;
 NhuUE_RadioAccessCapabBandFDDLst_ext ue_RadioAccessCapabBandFDDLst_ext;
} NhuUE_RadioAccessCap_v650ext;


typedef enum enumNhuUE_RadioAccessCap_v7e0extsupportForTwoDRXSchemesInPCH
{
 NhuUE_RadioAccessCap_v7e0extsupportForTwoDRXSchemesInPCHtrueEnum
} EnumNhuUE_RadioAccessCap_v7e0extsupportForTwoDRXSchemesInPCH;
typedef TknU32 NhuUE_RadioAccessCap_v7e0extsupportForTwoDRXSchemesInPCH;


typedef enum enumNhuUE_RadioAccessCap_v7e0extsupportEDPDCHPowerInterpolation
{
 NhuUE_RadioAccessCap_v7e0extsupportEDPDCHPowerInterpolationtrueEnum
} EnumNhuUE_RadioAccessCap_v7e0extsupportEDPDCHPowerInterpolation;
typedef TknU32 NhuUE_RadioAccessCap_v7e0extsupportEDPDCHPowerInterpolation;

typedef struct NhuUE_RadioAccessCap_v7e0ext
{
 TknPres pres;
 NhuUE_RadioAccessCap_v7e0extsupportForTwoDRXSchemesInPCH supportForTwoDRXSchemesInPCH;
 NhuUE_RadioAccessCap_v7e0extsupportEDPDCHPowerInterpolation supportEDPDCHPowerInterpolation;
} NhuUE_RadioAccessCap_v7e0ext;


typedef TknU32 NhuUE_RadioAccessCapComp_TDD128_v7f0exttdd_edch_PhysicalLyrCategory;


typedef enum enumNhuUE_RadioAccessCapComp_TDD128_v7f0extsupportForCSVoiceoverHSPA
{
 NhuUE_RadioAccessCapComp_TDD128_v7f0extsupportForCSVoiceoverHSPAtrueEnum
} EnumNhuUE_RadioAccessCapComp_TDD128_v7f0extsupportForCSVoiceoverHSPA;
typedef TknU32 NhuUE_RadioAccessCapComp_TDD128_v7f0extsupportForCSVoiceoverHSPA;

typedef struct NhuUE_RadioAccessCapComp_TDD128_v7f0ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category hSDSCH_physical_layer_category;
 NhuMultiCarrier_HSDSCH_physical_layer_category multiCarrier_physical_layer_category;
 NhuUE_RadioAccessCapComp_TDD128_v7f0exttdd_edch_PhysicalLyrCategory tdd_edch_PhysicalLyrCategory;
 NhuDL_CapWithSimultaneousHS_DSCHConfig dl_CapWithSimultaneousHS_DSCHConfig;
 NhuUE_RadioAccessCapComp_TDD128_v7f0extsupportForCSVoiceoverHSPA supportForCSVoiceoverHSPA;
 NhuTotalRLC_AM_BufferSize_r5_ext totalRLC_AM_BufferSize;
} NhuUE_RadioAccessCapComp_TDD128_v7f0ext;


typedef enum enumNhuUE_RadioAccessCap_v7f0extsupportofTxDivOnNonMIMOChannel
{
 NhuUE_RadioAccessCap_v7f0extsupportofTxDivOnNonMIMOChanneltrueEnum
} EnumNhuUE_RadioAccessCap_v7f0extsupportofTxDivOnNonMIMOChannel;
typedef TknU32 NhuUE_RadioAccessCap_v7f0extsupportofTxDivOnNonMIMOChannel;

typedef struct NhuUE_RadioAccessCap_v7f0ext
{
 TknPres pres;
 NhuUE_RadioAccessCap_v7f0extsupportofTxDivOnNonMIMOChannel supportofTxDivOnNonMIMOChannel;
 NhuPhysicalChannelCap_LCR_r4 physicalChannelCap_LCR;
 NhuUE_RadioAccessCapComp_TDD128_v7f0ext ue_RadioAccessCapComp_TDD128;
} NhuUE_RadioAccessCap_v7f0ext;


typedef enum enumNhuUE_RadioAccessCapInfo_v770extganssSupportInd
{
 NhuUE_RadioAccessCapInfo_v770extganssSupportIndtrueEnum
} EnumNhuUE_RadioAccessCapInfo_v770extganssSupportInd;
typedef TknU32 NhuUE_RadioAccessCapInfo_v770extganssSupportInd;


typedef enum enumNhuUE_RadioAccessCapInfo_v770extmac_ehsSupport
{
 NhuUE_RadioAccessCapInfo_v770extmac_ehsSupporttrueEnum
} EnumNhuUE_RadioAccessCapInfo_v770extmac_ehsSupport;
typedef TknU32 NhuUE_RadioAccessCapInfo_v770extmac_ehsSupport;

typedef struct NhuUE_RadioAccessCapInfo_v770ext
{
 TknPres pres;
 NhuRF_Cap_v770ext rf_Cap;
 NhuPhysicalChannelCapInfo_v770ext physicalChannelCap;
 NhuUE_RadioAccessCapInfo_v770extganssSupportInd ganssSupportInd;
 NhuUE_RadioAccessCapInfo_v770extmac_ehsSupport mac_ehsSupport;
 NhuUE_SpecificCapInfo_LCRTDD ue_SpecificCapInfo;
} NhuUE_RadioAccessCapInfo_v770ext;

typedef struct NhuUE_RadioAccessCapInfo_TDD128_v8b0ext
{
 TknPres pres;
 NhuMeasurementCapTDD measurementCapTDD;
 NhuHSDSCH_physical_layer_category_extension hSDSCH_physical_layer_category_extension;
} NhuUE_RadioAccessCapInfo_TDD128_v8b0ext;

typedef struct NhuUE_RadioAccessCap_v860ext
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandFDDLst3 ue_RadioAccessCapabBandFDDLst3;
} NhuUE_RadioAccessCap_v860ext;


typedef enum enumNhuUE_RadioAccessCap_v880extsupportForPriorityReselectionInUTRAN
{
 NhuUE_RadioAccessCap_v880extsupportForPriorityReselectionInUTRANtrueEnum
} EnumNhuUE_RadioAccessCap_v880extsupportForPriorityReselectionInUTRAN;
typedef TknU32 NhuUE_RadioAccessCap_v880extsupportForPriorityReselectionInUTRAN;

typedef struct NhuUE_RadioAccessCap_v880ext
{
 TknPres pres;
 NhuUE_RadioAccessCap_v880extsupportForPriorityReselectionInUTRAN supportForPriorityReselectionInUTRAN;
} NhuUE_RadioAccessCap_v880ext;


typedef enum enumNhuUE_RadioAccessCap_v890extsupportCellSpecificTxDiversityinDC_Operation
{
 NhuUE_RadioAccessCap_v890extsupportCellSpecificTxDiversityinDC_OperationtrueEnum
} EnumNhuUE_RadioAccessCap_v890extsupportCellSpecificTxDiversityinDC_Operation;
typedef TknU32 NhuUE_RadioAccessCap_v890extsupportCellSpecificTxDiversityinDC_Operation;

typedef struct NhuUE_RadioAccessCap_v890ext
{
 TknPres pres;
 NhuUE_RadioAccessCap_v890extsupportCellSpecificTxDiversityinDC_Operation supportCellSpecificTxDiversityinDC_Operation;
} NhuUE_RadioAccessCap_v890ext;


typedef enum enumNhuUE_RadioAccessCap_v920extsupportOfenhancedTS0
{
 NhuUE_RadioAccessCap_v920extsupportOfenhancedTS0trueEnum
} EnumNhuUE_RadioAccessCap_v920extsupportOfenhancedTS0;
typedef TknU32 NhuUE_RadioAccessCap_v920extsupportOfenhancedTS0;

typedef struct NhuUE_RadioAccessCap_v920ext
{
 TknPres pres;
 NhuUE_RadioAccessCap_v920extsupportOfenhancedTS0 supportOfenhancedTS0;
} NhuUE_RadioAccessCap_v920ext;

typedef struct NhuUE_RadioAccessCap_va40ext
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandFDDLst4 ue_RadioAccessCapabBandFDDLst4;
} NhuUE_RadioAccessCap_va40ext;

typedef struct NhuUE_RadioAccessCap_va60ext
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandFDDLst4_va60ext ue_RadioAccessCapabBandFDDLst4;
} NhuUE_RadioAccessCap_va60ext;

typedef struct NhuUE_RadioAccessCap_vbxyext
{
 TknPres pres;
 NhuRLC_Cap_vbxyext rlc_Cap;
 NhuUE_RadioAccessCapabBandFDDLst4_vbxyext ue_RadioAccessCapabBandFDDLst4;
} NhuUE_RadioAccessCap_vbxyext;

typedef struct NhuUE_RadioAccessCapabBandFDD5fddRF_Cap
{
 TknPres pres;
 NhuUE_PowerClassExt ue_PowerClass;
 NhuTxRxFrequencySeparation txRxFrequencySeparation;
} NhuUE_RadioAccessCapabBandFDD5fddRF_Cap;

typedef struct NhuUE_RadioAccessCapabBandFDD5
{
 TknPres pres;
 NhuRadioFrequencyBandFDD3 radioFrequencyBandFDD3;
 NhuUE_RadioAccessCapabBandFDD5fddRF_Cap fddRF_Cap;
 NhuMeasurementCapExt4 measurementCap4;
} NhuUE_RadioAccessCapabBandFDD5;

typedef struct NhuUE_RadioAccessCapabBandFDDLst5
{
 TknU16 noComp;
 NhuUE_RadioAccessCapabBandFDD5 *member;
}NhuUE_RadioAccessCapabBandFDDLst5;

typedef struct NhuUE_RadioAccessCapabBandFDD_ext2
{
 TknPres pres;
 NhuRadioFrequencyBandFDD radioFrequencyBandFDD;
 NhuRadioFrequencyBandFDD2 radioFrequencyBandFDD2;
 NhuCompressedModeMeasCapabFDDLst3 compressedModeMeasCapabFDDLst3;
} NhuUE_RadioAccessCapabBandFDD_ext2;

typedef struct NhuUE_RadioAccessCapabBandFDDLst_ext2
{
 TknU16 noComp;
 NhuUE_RadioAccessCapabBandFDD_ext2 *member;
}NhuUE_RadioAccessCapabBandFDDLst_ext2;

typedef struct NhuUE_RadioAccessCapabBand_va40ext
{
 TknPres pres;
 NhuUE_RadioAccessCapabBandFDDLst5 ue_RadioAccessCapabBandFDDLst5;
 NhuUE_RadioAccessCapabBandFDDLst_ext2 ue_RadioAccessCapabBandFDDLst_ext2;
} NhuUE_RadioAccessCapabBand_va40ext;

typedef struct NhuUE_RadioAccessCap_v4b0exttdd_CapExt
{
 TknPres pres;
 NhuRF_Cap_r4_ext rf_Cap;
 NhuPhysicalChannelCap_LCR_r4 physicalChannelCap_LCR;
 NhuMeasurementCap_r4_ext measurementCap_r4_ext;
} NhuUE_RadioAccessCap_v4b0exttdd_CapExt;

typedef struct NhuUE_RadioAccessCap_v4b0ext
{
 TknPres pres;
 NhuPDCP_Cap_r4_ext pdcp_Cap_r4_ext;
 NhuUE_RadioAccessCap_v4b0exttdd_CapExt tdd_CapExt;
 NhuAccessStratumRlsIndicator accessStratumRlsIndicator;
} NhuUE_RadioAccessCap_v4b0ext;


typedef enum enumNhuRF_CapabBandFDDComp
{
 NhuRF_CapabBandFDDCompnotSuppEnum,
 NhuRF_CapabBandFDDCompdefault_TxRx_separationEnum,
 NhuRF_CapabBandFDDCompspare2Enum,
 NhuRF_CapabBandFDDCompspare1Enum
} EnumNhuRF_CapabBandFDDComp;
typedef TknU32 NhuRF_CapabBandFDDComp;

typedef struct NhuRF_CapabBandLstFDDComp
{
 TknU16 noComp;
 NhuRF_CapabBandFDDComp *member;
}NhuRF_CapabBandLstFDDComp;

typedef struct NhuRF_CapCompfdd
{
 TknU8 choice;
 union {
  NhuRF_CapabBandLstFDDComp supported;
 } val;
} NhuRF_CapCompfdd;

typedef struct NhuRF_CapComptdd384_RF_Cap
{
 TknU8 choice;
 union {
  NhuRadioFrequencyBandTDDLst supported;
 } val;
} NhuRF_CapComptdd384_RF_Cap;

typedef struct NhuRF_CapComptdd128_RF_Cap
{
 TknU8 choice;
 union {
  NhuRadioFrequencyBandTDDLst supported;
 } val;
} NhuRF_CapComptdd128_RF_Cap;

typedef struct NhuRF_CapComp
{
 TknPres pres;
 NhuRF_CapCompfdd fdd;
 NhuRF_CapComptdd384_RF_Cap tdd384_RF_Cap;
 NhuRF_CapComptdd128_RF_Cap tdd128_RF_Cap;
} NhuRF_CapComp;


typedef TknU8 NhuUE_RadioAccessCapComptotalAM_RLCMemoryExceeds10kB;

typedef struct NhuUE_RadioAccessCapComp
{
 TknPres pres;
 NhuUE_RadioAccessCapComptotalAM_RLCMemoryExceeds10kB totalAM_RLCMemoryExceeds10kB;
 NhuRF_CapComp rf_CapComp;
} NhuUE_RadioAccessCapComp;

typedef struct NhuRF_CapabBandLstFDDComp_ext
{
 TknU16 noComp;
 NhuRF_CapabBandFDDComp *member;
}NhuRF_CapabBandLstFDDComp_ext;

typedef struct NhuUE_RadioAccessCapComp_ext
{
 TknPres pres;
 NhuRF_CapabBandLstFDDComp_ext rf_CapFDDComp;
} NhuUE_RadioAccessCapComp_ext;

typedef struct NhuRF_CapComp_v770exttdd768_RF_Cap
{
 TknU8 choice;
 union {
  NhuRadioFrequencyBandTDDLst_r7 supported;
 } val;
} NhuRF_CapComp_v770exttdd768_RF_Cap;

typedef struct NhuRF_CapComp_v770ext
{
 TknPres pres;
 NhuRadioFrequencyBandTDDLst_r7 tdd384_RF_Cap;
 NhuRF_CapComp_v770exttdd768_RF_Cap tdd768_RF_Cap;
 NhuRadioFrequencyBandTDDLst_r7 tdd128_RF_Cap;
} NhuRF_CapComp_v770ext;


typedef enum enumNhuUE_RadioAccessCapComp_v770extsecurityCapInd
{
 NhuUE_RadioAccessCapComp_v770extsecurityCapIndtrueEnum
} EnumNhuUE_RadioAccessCapComp_v770extsecurityCapInd;
typedef TknU32 NhuUE_RadioAccessCapComp_v770extsecurityCapInd;


typedef enum enumNhuUE_RadioAccessCapComp_v770extganssSupportInd
{
 NhuUE_RadioAccessCapComp_v770extganssSupportIndtrueEnum
} EnumNhuUE_RadioAccessCapComp_v770extganssSupportInd;
typedef TknU32 NhuUE_RadioAccessCapComp_v770extganssSupportInd;


typedef enum enumNhuUE_RadioAccessCapComp_v770extmac_ehsSupport
{
 NhuUE_RadioAccessCapComp_v770extmac_ehsSupporttrueEnum
} EnumNhuUE_RadioAccessCapComp_v770extmac_ehsSupport;
typedef TknU32 NhuUE_RadioAccessCapComp_v770extmac_ehsSupport;

typedef struct NhuUE_RadioAccessCapComp_v770ext
{
 TknPres pres;
 NhuRF_CapComp_v770ext rf_CapComp;
 NhuUE_RadioAccessCapComp_v770extsecurityCapInd securityCapInd;
 NhuUE_RadioAccessCapComp_v770extganssSupportInd ganssSupportInd;
 NhuUE_RadioAccessCapComp_v770extmac_ehsSupport mac_ehsSupport;
} NhuUE_RadioAccessCapComp_v770ext;

typedef struct NhuUE_RadioAccessCapComp2fddPhysicalChannelCapab_hspdsch_edch
{
 TknPres pres;
 NhuDL_CapWithSimultaneousHS_DSCHConfig dl_CapWithSimultaneousHS_DSCHConfig;
 NhuHSDSCH_physical_layer_category physicalChannelCapabComp_hspdsch_r6;
 NhuPhysicalChannelCap_edch_r6 physicalChannelCap_edch_r6;
} NhuUE_RadioAccessCapComp2fddPhysicalChannelCapab_hspdsch_edch;

typedef struct NhuUE_RadioAccessCapComp2
{
 TknPres pres;
 NhuUE_RadioAccessCapComp2fddPhysicalChannelCapab_hspdsch_edch fddPhysicalChannelCapab_hspdsch_edch;
} NhuUE_RadioAccessCapComp2;


typedef TknU32 NhuUE_RadioAccessCapComp2_v770extedch_PhysicalLyrCategory_extension;


typedef enum enumNhuUE_RadioAccessCapComp2_v770exthsscchlessHsdschOperation
{
 NhuUE_RadioAccessCapComp2_v770exthsscchlessHsdschOperationtrueEnum
} EnumNhuUE_RadioAccessCapComp2_v770exthsscchlessHsdschOperation;
typedef TknU32 NhuUE_RadioAccessCapComp2_v770exthsscchlessHsdschOperation;


typedef enum enumNhuUE_RadioAccessCapComp2_v770extenhancedFdpch
{
 NhuUE_RadioAccessCapComp2_v770extenhancedFdpchtrueEnum
} EnumNhuUE_RadioAccessCapComp2_v770extenhancedFdpch;
typedef TknU32 NhuUE_RadioAccessCapComp2_v770extenhancedFdpch;


typedef enum enumNhuUE_RadioAccessCapComp2_v770exthsdschReception_CellFach
{
 NhuUE_RadioAccessCapComp2_v770exthsdschReception_CellFachtrueEnum
} EnumNhuUE_RadioAccessCapComp2_v770exthsdschReception_CellFach;
typedef TknU32 NhuUE_RadioAccessCapComp2_v770exthsdschReception_CellFach;


typedef enum enumNhuUE_RadioAccessCapComp2_v770exthsdschReception_CellUraPch
{
 NhuUE_RadioAccessCapComp2_v770exthsdschReception_CellUraPchtrueEnum
} EnumNhuUE_RadioAccessCapComp2_v770exthsdschReception_CellUraPch;
typedef TknU32 NhuUE_RadioAccessCapComp2_v770exthsdschReception_CellUraPch;


typedef enum enumNhuUE_RadioAccessCapComp2_v770extdiscontinuousDpcchTransmission
{
 NhuUE_RadioAccessCapComp2_v770extdiscontinuousDpcchTransmissiontrueEnum
} EnumNhuUE_RadioAccessCapComp2_v770extdiscontinuousDpcchTransmission;
typedef TknU32 NhuUE_RadioAccessCapComp2_v770extdiscontinuousDpcchTransmission;


typedef enum enumNhuUE_RadioAccessCapComp2_v770extslotFormat4
{
 NhuUE_RadioAccessCapComp2_v770extslotFormat4trueEnum
} EnumNhuUE_RadioAccessCapComp2_v770extslotFormat4;
typedef TknU32 NhuUE_RadioAccessCapComp2_v770extslotFormat4;

typedef struct NhuUE_RadioAccessCapComp2_v770ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext hsdsch_physical_layer_category_ext;
 NhuUE_RadioAccessCapComp2_v770extedch_PhysicalLyrCategory_extension edch_PhysicalLyrCategory_extension;
 NhuUE_RadioAccessCapComp2_v770exthsscchlessHsdschOperation hsscchlessHsdschOperation;
 NhuUE_RadioAccessCapComp2_v770extenhancedFdpch enhancedFdpch;
 NhuUE_RadioAccessCapComp2_v770exthsdschReception_CellFach hsdschReception_CellFach;
 NhuUE_RadioAccessCapComp2_v770exthsdschReception_CellUraPch hsdschReception_CellUraPch;
 NhuUE_RadioAccessCapComp2_v770extdiscontinuousDpcchTransmission discontinuousDpcchTransmission;
 NhuUE_RadioAccessCapComp2_v770extslotFormat4 slotFormat4;
 NhuPDCP_Cap_v770ext pdcp_Cap;
} NhuUE_RadioAccessCapComp2_v770ext;


typedef enum enumNhuUE_RadioAccessCapComp2_v7f0extsupportofTxDivOnNonMIMOChannel
{
 NhuUE_RadioAccessCapComp2_v7f0extsupportofTxDivOnNonMIMOChanneltrueEnum
} EnumNhuUE_RadioAccessCapComp2_v7f0extsupportofTxDivOnNonMIMOChannel;
typedef TknU32 NhuUE_RadioAccessCapComp2_v7f0extsupportofTxDivOnNonMIMOChannel;

typedef struct NhuUE_RadioAccessCapComp2_v7f0ext
{
 TknPres pres;
 NhuUE_RadioAccessCapComp2_v7f0extsupportofTxDivOnNonMIMOChannel supportofTxDivOnNonMIMOChannel;
} NhuUE_RadioAccessCapComp2_v7f0ext;


typedef enum enumNhuUE_RadioAccessCapComp2_v860extsupportOfMACiis
{
 NhuUE_RadioAccessCapComp2_v860extsupportOfMACiistrueEnum
} EnumNhuUE_RadioAccessCapComp2_v860extsupportOfMACiis;
typedef TknU32 NhuUE_RadioAccessCapComp2_v860extsupportOfMACiis;

typedef struct NhuUE_RadioAccessCapComp2_v860ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext2 hsdsch_physical_layer_category_ext2;
 NhuUE_RadioAccessCapComp2_v860extsupportOfMACiis supportOfMACiis;
} NhuUE_RadioAccessCapComp2_v860ext;


typedef TknU32 NhuUE_RadioAccessCapComp2_v920extedch_PhysicalLyrCategory_extension2;

typedef struct NhuUE_RadioAccessCapComp2_v920ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext3 hsdsch_physical_layer_category_ext3;
 NhuUE_RadioAccessCapComp2_v920extedch_PhysicalLyrCategory_extension2 edch_PhysicalLyrCategory_extension2;
} NhuUE_RadioAccessCapComp2_v920ext;

typedef struct NhuUE_RadioAccessCapComp2_va40ext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext4 hsdsch_physical_layer_category_ext4;
 NhuHSDSCH_physical_layer_category_ext5 hsdsch_physical_layer_category_ext5;
} NhuUE_RadioAccessCapComp2_va40ext;

typedef struct NhuUE_RadioAccessCapComp2_vbxyext
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category_ext6 hsdsch_physical_layer_category_ext6;
 NhuHSDSCH_physical_layer_category_ext7 hsdsch_physical_layer_category_ext7;
} NhuUE_RadioAccessCapComp2_vbxyext;


typedef enum enumNhuUE_RadioAccessCapComp_TDD128supportOfSFModeForHSPDSCHDualStream
{
 NhuUE_RadioAccessCapComp_TDD128supportOfSFModeForHSPDSCHDualStreamsf1Enum,
 NhuUE_RadioAccessCapComp_TDD128supportOfSFModeForHSPDSCHDualStreamsf1sf16Enum
} EnumNhuUE_RadioAccessCapComp_TDD128supportOfSFModeForHSPDSCHDualStream;
typedef TknU32 NhuUE_RadioAccessCapComp_TDD128supportOfSFModeForHSPDSCHDualStream;


typedef enum enumNhuUE_RadioAccessCapComp_TDD128supportOfCmnEDCH
{
 NhuUE_RadioAccessCapComp_TDD128supportOfCmnEDCHtrueEnum
} EnumNhuUE_RadioAccessCapComp_TDD128supportOfCmnEDCH;
typedef TknU32 NhuUE_RadioAccessCapComp_TDD128supportOfCmnEDCH;


typedef enum enumNhuUE_RadioAccessCapComp_TDD128supportOfMACiis
{
 NhuUE_RadioAccessCapComp_TDD128supportOfMACiistrueEnum
} EnumNhuUE_RadioAccessCapComp_TDD128supportOfMACiis;
typedef TknU32 NhuUE_RadioAccessCapComp_TDD128supportOfMACiis;


typedef enum enumNhuUE_RadioAccessCapComp_TDD128supportOfSPSOperation
{
 NhuUE_RadioAccessCapComp_TDD128supportOfSPSOperationtrueEnum
} EnumNhuUE_RadioAccessCapComp_TDD128supportOfSPSOperation;
typedef TknU32 NhuUE_RadioAccessCapComp_TDD128supportOfSPSOperation;


typedef enum enumNhuUE_RadioAccessCapComp_TDD128supportOfCntrlChannelDRXOperation
{
 NhuUE_RadioAccessCapComp_TDD128supportOfCntrlChannelDRXOperationtrueEnum
} EnumNhuUE_RadioAccessCapComp_TDD128supportOfCntrlChannelDRXOperation;
typedef TknU32 NhuUE_RadioAccessCapComp_TDD128supportOfCntrlChannelDRXOperation;

typedef struct NhuUE_RadioAccessCapComp_TDD128
{
 TknPres pres;
 NhuRadioFrequencyBandTDDextLst tdd128RF_Cap;
 NhuUE_RadioAccessCapComp_TDD128supportOfSFModeForHSPDSCHDualStream supportOfSFModeForHSPDSCHDualStream;
 NhuUE_RadioAccessCapComp_TDD128supportOfCmnEDCH supportOfCmnEDCH;
 NhuUE_RadioAccessCapComp_TDD128supportOfMACiis supportOfMACiis;
 NhuUE_RadioAccessCapComp_TDD128supportOfSPSOperation supportOfSPSOperation;
 NhuUE_RadioAccessCapComp_TDD128supportOfCntrlChannelDRXOperation supportOfCntrlChannelDRXOperation;
} NhuUE_RadioAccessCapComp_TDD128;

typedef struct NhuRF_CapabBandLstFDDComp_ext2
{
 TknU16 noComp;
 NhuRF_CapabBandFDDComp *member;
}NhuRF_CapabBandLstFDDComp_ext2;

typedef struct NhuUE_RadioAccessCap_v590ext
{
 TknPres pres;
 NhuDL_CapWithSimultaneousHS_DSCHConfig dl_CapWithSimultaneousHS_DSCHConfig;
 NhuPDCP_Cap_r5_ext pdcp_Cap_r5_ext;
 NhuRLC_Cap_r5_ext rlc_Cap_r5_ext;
 NhuPhysicalChannelCap_hspdsch_r5 physicalChannelCap;
 NhuMultiModeRAT_Cap_v590ext multiModeRAT_Cap_v590ext;
} NhuUE_RadioAccessCap_v590ext;

typedef struct NhuUE_RadioAccessCap_v5c0ext
{
 TknPres pres;
 NhuPDCP_Cap_r5_ext2 pdcp_Cap_r5_ext2;
} NhuUE_RadioAccessCap_v5c0ext;

typedef struct NhuUE_RadioAccessCap_v680ext
{
 TknPres pres;
 NhuMultiModeRAT_Cap_v680ext multiModeRAT_Cap_v680ext;
} NhuUE_RadioAccessCap_v680ext;


typedef enum enumNhuUL_OLTD_InfoFDDulOLTDActvn
{
 NhuUL_OLTD_InfoFDDulOLTDActvntrueEnum
} EnumNhuUL_OLTD_InfoFDDulOLTDActvn;
typedef TknU32 NhuUL_OLTD_InfoFDDulOLTDActvn;

typedef struct NhuUL_OLTD_InfoFDD
{
 TknPres pres;
 NhuUL_OLTD_InfoFDDulOLTDActvn ulOLTDActvn;
} NhuUL_OLTD_InfoFDD;

typedef struct NhuUL_PhysChCapFDD_r6
{
 TknPres pres;
 NhuMaxNoDPDCH_BitsTransmitted maxNoDPDCH_BitsTransmitted;
 NhuPhysicalChannelCap_edch_r6 physicalchannelcapability_edch;
} NhuUL_PhysChCapFDD_r6;

typedef struct NhuUE_SecInfo
{
 TknPres pres;
 NhuSTART_Value start_CS;
} NhuUE_SecInfo;

typedef struct NhuUE_SecInfo2
{
 TknPres pres;
 NhuSTART_Value start_PS;
} NhuUE_SecInfo2;


typedef enum enumNhuURA_UpdCause
{
 NhuURA_UpdCausechangeOfURAEnum,
 NhuURA_UpdCauseperiodicURAUpdEnum,
 NhuURA_UpdCausedummyEnum,
 NhuURA_UpdCausespare1Enum
} EnumNhuURA_UpdCause;
typedef TknU32 NhuURA_UpdCause;


typedef TknU32 NhuUTRAN_DRX_CycleLengthCoefficient;


typedef TknU32 NhuUTRAN_DRX_CycleLengthCoefficient_r7drx_CycleLengthCoefficient;


typedef TknU32 NhuUTRAN_DRX_CycleLengthCoefficient_r7drx_CycleLengthCoefficient2;

typedef struct NhuUTRAN_DRX_CycleLengthCoefficient_r7
{
 TknPres pres;
 NhuUTRAN_DRX_CycleLengthCoefficient_r7drx_CycleLengthCoefficient drx_CycleLengthCoefficient;
 NhuUTRAN_DRX_CycleLengthCoefficient_r7drx_CycleLengthCoefficient2 drx_CycleLengthCoefficient2;
 NhuT_319 timeForDRXCycle2;
} NhuUTRAN_DRX_CycleLengthCoefficient_r7;


typedef TknU32 NhuWaitTime;


typedef enum enumNhuExpectReordering
{
 NhuExpectReorderingreorderingNotExpectedEnum,
 NhuExpectReorderingreorderingExpectedEnum
} EnumNhuExpectReordering;
typedef TknU32 NhuExpectReordering;


typedef TknU32 NhuRFC2507_Infof_MAX_PERIOD;


typedef TknU32 NhuRFC2507_Infof_MAX_TIME;


typedef TknU32 NhuRFC2507_Infomax_HEADER;


typedef TknU32 NhuRFC2507_Infotcp_SPACE;


typedef TknU32 NhuRFC2507_Infonon_TCP_SPACE;

typedef struct NhuRFC2507_Info
{
 TknPres pres;
 NhuRFC2507_Infof_MAX_PERIOD f_MAX_PERIOD;
 NhuRFC2507_Infof_MAX_TIME f_MAX_TIME;
 NhuRFC2507_Infomax_HEADER max_HEADER;
 NhuRFC2507_Infotcp_SPACE tcp_SPACE;
 NhuRFC2507_Infonon_TCP_SPACE non_TCP_SPACE;
 NhuExpectReordering expectReordering;
} NhuRFC2507_Info;

typedef struct NhuAlgorithmSpecificInfo
{
 TknU8 choice;
 union {
  NhuRFC2507_Info rfc2507_Info;
 } val;
} NhuAlgorithmSpecificInfo;


typedef TknU32 NhuROHC_Profile_r4;

typedef struct NhuROHC_ProfileLst_r4
{
 TknU16 noComp;
 NhuROHC_Profile_r4 *member;
}NhuROHC_ProfileLst_r4;


typedef enum enumNhuCID_InclusionInfo_r4
{
 NhuCID_InclusionInfo_r4pdcp_HeaderEnum,
 NhuCID_InclusionInfo_r4rfc3095_PacketFormatEnum
} EnumNhuCID_InclusionInfo_r4;
typedef TknU32 NhuCID_InclusionInfo_r4;


typedef TknU32 NhuROHC_PacketSize_r4;

typedef struct NhuROHC_PacketSizeLst_r4
{
 TknU16 noComp;
 NhuROHC_PacketSize_r4 *member;
}NhuROHC_PacketSizeLst_r4;


typedef TknU32 NhuUL_RFC3095_r4max_CID;

typedef struct NhuUL_RFC3095_r4
{
 TknPres pres;
 NhuCID_InclusionInfo_r4 dummy1;
 NhuUL_RFC3095_r4max_CID max_CID;
 NhuROHC_PacketSizeLst_r4 dummy;
} NhuUL_RFC3095_r4;


typedef TknU32 NhuDL_RFC3095_r4max_CID;


typedef TknU32 NhuDL_RFC3095_r4reverseDecompressionDepth;

typedef struct NhuDL_RFC3095_r4
{
 TknPres pres;
 NhuCID_InclusionInfo_r4 dummy;
 NhuDL_RFC3095_r4max_CID max_CID;
 NhuDL_RFC3095_r4reverseDecompressionDepth reverseDecompressionDepth;
} NhuDL_RFC3095_r4;

typedef struct NhuRFC3095_Info_r4
{
 TknPres pres;
 NhuROHC_ProfileLst_r4 rohcProfileLst;
 NhuUL_RFC3095_r4 ul_RFC3095;
 NhuDL_RFC3095_r4 dl_RFC3095;
} NhuRFC3095_Info_r4;

typedef struct NhuAlgorithmSpecificInfo_r4
{
 TknU8 choice;
 union {
  NhuRFC2507_Info rfc2507_Info;
  NhuRFC3095_Info_r4 rfc3095_Info;
 } val;
} NhuAlgorithmSpecificInfo_r4;


typedef TknU32 NhuLogChannelIdentity;


typedef TknU32 NhuMAC_ehs_QueueId;

typedef struct NhuCmnRBMappingInfo
{
 TknPres pres;
 NhuLogChannelIdentity logicalChannelIdentity;
 NhuMAC_ehs_QueueId mac_ehs_QueueId;
} NhuCmnRBMappingInfo;


typedef TknU32 NhuCOUNT_C;


typedef TknU32 NhuCOUNT_C_MSB;


typedef enum enumNhuUL_AMR_Rate
{
 NhuUL_AMR_Ratet0Enum,
 NhuUL_AMR_Ratet1Enum,
 NhuUL_AMR_Ratet2Enum,
 NhuUL_AMR_Ratet3Enum,
 NhuUL_AMR_Ratet4Enum,
 NhuUL_AMR_Ratet5Enum,
 NhuUL_AMR_Ratet6Enum,
 NhuUL_AMR_Ratet7Enum,
 NhuUL_AMR_Ratet8Enum,
 NhuUL_AMR_Ratespare7Enum,
 NhuUL_AMR_Ratespare6Enum,
 NhuUL_AMR_Ratespare5Enum,
 NhuUL_AMR_Ratespare4Enum,
 NhuUL_AMR_Ratespare3Enum,
 NhuUL_AMR_Ratespare2Enum,
 NhuUL_AMR_Ratespare1Enum
} EnumNhuUL_AMR_Rate;
typedef TknU32 NhuUL_AMR_Rate;


typedef TknU32 NhuMaxCS_Delay;

typedef struct NhuCS_HSPA_Info
{
 TknPres pres;
 NhuUL_AMR_Rate ul_AMR_Rate;
 NhuMaxCS_Delay maxCS_Delay;
} NhuCS_HSPA_Info;


typedef enum enumNhuDefaultConfigMode
{
 NhuDefaultConfigModefddEnum,
 NhuDefaultConfigModetddEnum
} EnumNhuDefaultConfigMode;
typedef TknU32 NhuDefaultConfigMode;


typedef TknU32 NhuDefaultConfigIdForCellFACH;

typedef struct NhuDefaultConfigForCellFACH
{
 TknPres pres;
 NhuDefaultConfigMode defaultConfigMode;
 NhuDefaultConfigIdForCellFACH defaultConfigIdForCellFACH;
} NhuDefaultConfigForCellFACH;


typedef TknU32 NhuDefaultConfigIdentity;


typedef TknU32 NhuDefaultConfigIdentity_r4;


typedef TknU32 NhuDefaultConfigIdentity_r5;


typedef TknU32 NhuDefaultConfigIdentity_r6;


typedef TknU32 NhuDDI;


typedef enum enumNhuReceivingWindowSize
{
 NhuReceivingWindowSizerw1Enum,
 NhuReceivingWindowSizerw8Enum,
 NhuReceivingWindowSizerw16Enum,
 NhuReceivingWindowSizerw32Enum,
 NhuReceivingWindowSizerw64Enum,
 NhuReceivingWindowSizerw128Enum,
 NhuReceivingWindowSizerw256Enum,
 NhuReceivingWindowSizerw512Enum,
 NhuReceivingWindowSizerw768Enum,
 NhuReceivingWindowSizerw1024Enum,
 NhuReceivingWindowSizerw1536Enum,
 NhuReceivingWindowSizerw2047Enum,
 NhuReceivingWindowSizerw2560Enum,
 NhuReceivingWindowSizerw3072Enum,
 NhuReceivingWindowSizerw3584Enum,
 NhuReceivingWindowSizerw4095Enum
} EnumNhuReceivingWindowSize;
typedef TknU32 NhuReceivingWindowSize;


typedef enum enumNhuTimerStatusProhibit
{
 NhuTimerStatusProhibittsp10Enum,
 NhuTimerStatusProhibittsp20Enum,
 NhuTimerStatusProhibittsp30Enum,
 NhuTimerStatusProhibittsp40Enum,
 NhuTimerStatusProhibittsp50Enum,
 NhuTimerStatusProhibittsp60Enum,
 NhuTimerStatusProhibittsp70Enum,
 NhuTimerStatusProhibittsp80Enum,
 NhuTimerStatusProhibittsp90Enum,
 NhuTimerStatusProhibittsp100Enum,
 NhuTimerStatusProhibittsp110Enum,
 NhuTimerStatusProhibittsp120Enum,
 NhuTimerStatusProhibittsp130Enum,
 NhuTimerStatusProhibittsp140Enum,
 NhuTimerStatusProhibittsp150Enum,
 NhuTimerStatusProhibittsp160Enum,
 NhuTimerStatusProhibittsp170Enum,
 NhuTimerStatusProhibittsp180Enum,
 NhuTimerStatusProhibittsp190Enum,
 NhuTimerStatusProhibittsp200Enum,
 NhuTimerStatusProhibittsp210Enum,
 NhuTimerStatusProhibittsp220Enum,
 NhuTimerStatusProhibittsp230Enum,
 NhuTimerStatusProhibittsp240Enum,
 NhuTimerStatusProhibittsp250Enum,
 NhuTimerStatusProhibittsp260Enum,
 NhuTimerStatusProhibittsp270Enum,
 NhuTimerStatusProhibittsp280Enum,
 NhuTimerStatusProhibittsp290Enum,
 NhuTimerStatusProhibittsp300Enum,
 NhuTimerStatusProhibittsp310Enum,
 NhuTimerStatusProhibittsp320Enum,
 NhuTimerStatusProhibittsp330Enum,
 NhuTimerStatusProhibittsp340Enum,
 NhuTimerStatusProhibittsp350Enum,
 NhuTimerStatusProhibittsp360Enum,
 NhuTimerStatusProhibittsp370Enum,
 NhuTimerStatusProhibittsp380Enum,
 NhuTimerStatusProhibittsp390Enum,
 NhuTimerStatusProhibittsp400Enum,
 NhuTimerStatusProhibittsp410Enum,
 NhuTimerStatusProhibittsp420Enum,
 NhuTimerStatusProhibittsp430Enum,
 NhuTimerStatusProhibittsp440Enum,
 NhuTimerStatusProhibittsp450Enum,
 NhuTimerStatusProhibittsp460Enum,
 NhuTimerStatusProhibittsp470Enum,
 NhuTimerStatusProhibittsp480Enum,
 NhuTimerStatusProhibittsp490Enum,
 NhuTimerStatusProhibittsp500Enum,
 NhuTimerStatusProhibittsp510Enum,
 NhuTimerStatusProhibittsp520Enum,
 NhuTimerStatusProhibittsp530Enum,
 NhuTimerStatusProhibittsp540Enum,
 NhuTimerStatusProhibittsp550Enum,
 NhuTimerStatusProhibittsp600Enum,
 NhuTimerStatusProhibittsp650Enum,
 NhuTimerStatusProhibittsp700Enum,
 NhuTimerStatusProhibittsp750Enum,
 NhuTimerStatusProhibittsp800Enum,
 NhuTimerStatusProhibittsp850Enum,
 NhuTimerStatusProhibittsp900Enum,
 NhuTimerStatusProhibittsp950Enum,
 NhuTimerStatusProhibittsp1000Enum
} EnumNhuTimerStatusProhibit;
typedef TknU32 NhuTimerStatusProhibit;


typedef enum enumNhuTimerEPC
{
 NhuTimerEPCte50Enum,
 NhuTimerEPCte60Enum,
 NhuTimerEPCte70Enum,
 NhuTimerEPCte80Enum,
 NhuTimerEPCte90Enum,
 NhuTimerEPCte100Enum,
 NhuTimerEPCte120Enum,
 NhuTimerEPCte140Enum,
 NhuTimerEPCte160Enum,
 NhuTimerEPCte180Enum,
 NhuTimerEPCte200Enum,
 NhuTimerEPCte300Enum,
 NhuTimerEPCte400Enum,
 NhuTimerEPCte500Enum,
 NhuTimerEPCte700Enum,
 NhuTimerEPCte900Enum
} EnumNhuTimerEPC;
typedef TknU32 NhuTimerEPC;


typedef enum enumNhuTimerStatusPeriodic
{
 NhuTimerStatusPeriodictsp100Enum,
 NhuTimerStatusPeriodictsp200Enum,
 NhuTimerStatusPeriodictsp300Enum,
 NhuTimerStatusPeriodictsp400Enum,
 NhuTimerStatusPeriodictsp500Enum,
 NhuTimerStatusPeriodictsp750Enum,
 NhuTimerStatusPeriodictsp1000Enum,
 NhuTimerStatusPeriodictsp2000Enum
} EnumNhuTimerStatusPeriodic;
typedef TknU32 NhuTimerStatusPeriodic;


typedef TknU8 NhuDL_RLC_StatusInfomissingPDU_Indicator;

typedef struct NhuDL_RLC_StatusInfo
{
 TknPres pres;
 NhuTimerStatusProhibit timerStatusProhibit;
 NhuTimerEPC dummy;
 NhuDL_RLC_StatusInfomissingPDU_Indicator missingPDU_Indicator;
 NhuTimerStatusPeriodic timerStatusPeriodic;
} NhuDL_RLC_StatusInfo;


typedef TknU8 NhuDL_AM_RLC_ModeinSequenceDlvry;

typedef struct NhuDL_AM_RLC_Mode
{
 TknPres pres;
 NhuDL_AM_RLC_ModeinSequenceDlvry inSequenceDlvry;
 NhuReceivingWindowSize receivingWindowSize;
 NhuDL_RLC_StatusInfo dl_RLC_StatusInfo;
} NhuDL_AM_RLC_Mode;


typedef TknU32 NhuOctetModeRLC_SizeInfoTyp1sizeTyp1;


typedef TknU32 NhuOctetModeRLC_SizeInfoTyp1sizeTyp2part1;


typedef TknU32 NhuOctetModeRLC_SizeInfoTyp1sizeTyp2part2;

typedef struct NhuOctetModeRLC_SizeInfoTyp1sizeTyp2
{
 TknPres pres;
 NhuOctetModeRLC_SizeInfoTyp1sizeTyp2part1 part1;
 NhuOctetModeRLC_SizeInfoTyp1sizeTyp2part2 part2;
} NhuOctetModeRLC_SizeInfoTyp1sizeTyp2;


typedef TknU32 NhuOctetModeRLC_SizeInfoTyp1sizeTyp3part1;


typedef TknU32 NhuOctetModeRLC_SizeInfoTyp1sizeTyp3part2;

typedef struct NhuOctetModeRLC_SizeInfoTyp1sizeTyp3
{
 TknPres pres;
 NhuOctetModeRLC_SizeInfoTyp1sizeTyp3part1 part1;
 NhuOctetModeRLC_SizeInfoTyp1sizeTyp3part2 part2;
} NhuOctetModeRLC_SizeInfoTyp1sizeTyp3;

typedef struct NhuOctetModeRLC_SizeInfoTyp1
{
 TknU8 choice;
 union {
  NhuOctetModeRLC_SizeInfoTyp1sizeTyp1 sizeTyp1;
  NhuOctetModeRLC_SizeInfoTyp1sizeTyp2 sizeTyp2;
  NhuOctetModeRLC_SizeInfoTyp1sizeTyp3 sizeTyp3;
 } val;
} NhuOctetModeRLC_SizeInfoTyp1;


typedef TknU8 NhuDL_AM_RLC_Mode_r5inSequenceDlvry;

typedef struct NhuDL_AM_RLC_Mode_r5
{
 TknPres pres;
 NhuOctetModeRLC_SizeInfoTyp1 dl_RLC_PDU_size;
 NhuDL_AM_RLC_Mode_r5inSequenceDlvry inSequenceDlvry;
 NhuReceivingWindowSize receivingWindowSize;
 NhuDL_RLC_StatusInfo dl_RLC_StatusInfo;
} NhuDL_AM_RLC_Mode_r5;


typedef enum enumNhuDL_AM_RLC_Mode_r7dl_RLC_PDU_sizeflexibleSize
{
 NhuDL_AM_RLC_Mode_r7dl_RLC_PDU_sizeflexibleSizesize7Enum,
 NhuDL_AM_RLC_Mode_r7dl_RLC_PDU_sizeflexibleSizesize15Enum
} EnumNhuDL_AM_RLC_Mode_r7dl_RLC_PDU_sizeflexibleSize;
typedef TknU32 NhuDL_AM_RLC_Mode_r7dl_RLC_PDU_sizeflexibleSize;

typedef struct NhuDL_AM_RLC_Mode_r7dl_RLC_PDU_size
{
 TknU8 choice;
 union {
  NhuOctetModeRLC_SizeInfoTyp1 fixedSize;
  NhuDL_AM_RLC_Mode_r7dl_RLC_PDU_sizeflexibleSize flexibleSize;
 } val;
} NhuDL_AM_RLC_Mode_r7dl_RLC_PDU_size;


typedef TknU8 NhuDL_AM_RLC_Mode_r7inSequenceDlvry;

typedef struct NhuDL_AM_RLC_Mode_r7
{
 TknPres pres;
 NhuDL_AM_RLC_Mode_r7dl_RLC_PDU_size dl_RLC_PDU_size;
 NhuDL_AM_RLC_Mode_r7inSequenceDlvry inSequenceDlvry;
 NhuReceivingWindowSize receivingWindowSize;
 NhuDL_RLC_StatusInfo dl_RLC_StatusInfo;
} NhuDL_AM_RLC_Mode_r7;


typedef TknU32 NhuPDCP_SN_Info;

typedef struct NhuRB_WithPDCP_Info
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_SN_Info pdcp_SN_Info;
} NhuRB_WithPDCP_Info;

typedef struct NhuRB_WithPDCP_InfoLst
{
 TknU16 noComp;
 NhuRB_WithPDCP_Info *member;
}NhuRB_WithPDCP_InfoLst;

typedef struct NhuDL_CounterSynchronisationInfo
{
 TknPres pres;
 NhuRB_WithPDCP_InfoLst rB_WithPDCP_InfoLst;
} NhuDL_CounterSynchronisationInfo;


typedef TknU8 NhuRB_PDCPCtxtRelocationdl_RFC3095_Ctxt_Relocation;


typedef TknU8 NhuRB_PDCPCtxtRelocationul_RFC3095_Ctxt_Relocation;

typedef struct NhuRB_PDCPCtxtRelocation
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRB_PDCPCtxtRelocationdl_RFC3095_Ctxt_Relocation dl_RFC3095_Ctxt_Relocation;
 NhuRB_PDCPCtxtRelocationul_RFC3095_Ctxt_Relocation ul_RFC3095_Ctxt_Relocation;
} NhuRB_PDCPCtxtRelocation;

typedef struct NhuRB_PDCPCtxtRelocationLst
{
 TknU16 noComp;
 NhuRB_PDCPCtxtRelocation *member;
}NhuRB_PDCPCtxtRelocationLst;

typedef struct NhuDL_CounterSynchronisationInfo_r5
{
 TknPres pres;
 NhuRB_WithPDCP_InfoLst rb_WithPDCP_InfoLst;
 NhuRB_PDCPCtxtRelocationLst rb_PDCPCtxtRelocationLst;
} NhuDL_CounterSynchronisationInfo_r5;


typedef TknU32 NhuTportChannelIdentity;

typedef struct NhuTportChannelIdentityDCHandDSCH
{
 TknPres pres;
 NhuTportChannelIdentity dch_transport_ch_id;
 NhuTportChannelIdentity dsch_transport_ch_id;
} NhuTportChannelIdentityDCHandDSCH;

typedef struct NhuDL_TportChannelTyp
{
 TknU8 choice;
 union {
  NhuTportChannelIdentity dch;
  NhuTportChannelIdentity dsch;
  NhuTportChannelIdentityDCHandDSCH dch_and_dsch;
 } val;
} NhuDL_TportChannelTyp;

typedef struct NhuDL_LogChannelMapping
{
 TknPres pres;
 NhuDL_TportChannelTyp dl_TportChannelTyp;
 NhuLogChannelIdentity logicalChannelIdentity;
} NhuDL_LogChannelMapping;


typedef TknU32 NhuMAC_d_FlowIdentity;

typedef struct NhuMAC_d_FlowIdentityDCHandHSDSCH
{
 TknPres pres;
 NhuTportChannelIdentity dch_transport_ch_id;
 NhuMAC_d_FlowIdentity hsdsch_mac_d_flow_id;
} NhuMAC_d_FlowIdentityDCHandHSDSCH;

typedef struct NhuDL_TportChannelTyp_r5
{
 TknU8 choice;
 union {
  NhuTportChannelIdentity dch;
  NhuTportChannelIdentity dsch;
  NhuTportChannelIdentityDCHandDSCH dch_and_dsch;
  NhuMAC_d_FlowIdentity hsdsch;
  NhuMAC_d_FlowIdentityDCHandHSDSCH dch_and_hsdsch;
 } val;
} NhuDL_TportChannelTyp_r5;

typedef struct NhuDL_LogChannelMapping_r5
{
 TknPres pres;
 NhuDL_TportChannelTyp_r5 dl_TportChannelTyp;
 NhuLogChannelIdentity logicalChannelIdentity;
} NhuDL_LogChannelMapping_r5;

typedef struct NhuMAC_ehs_QueueIdDCHandHSDSCH
{
 TknPres pres;
 NhuTportChannelIdentity dch_transport_ch_id;
 NhuMAC_ehs_QueueId hsdsch_mac_ehs_QueueId;
} NhuMAC_ehs_QueueIdDCHandHSDSCH;

typedef struct NhuDL_TportChannelTyp_r7hsdsch
{
 TknU8 choice;
 union {
  NhuMAC_d_FlowIdentity mac_hs;
  NhuMAC_ehs_QueueId mac_ehs;
 } val;
} NhuDL_TportChannelTyp_r7hsdsch;

typedef struct NhuDL_TportChannelTyp_r7dch_and_hsdsch
{
 TknU8 choice;
 union {
  NhuMAC_d_FlowIdentityDCHandHSDSCH mac_hs;
  NhuMAC_ehs_QueueIdDCHandHSDSCH mac_ehs;
 } val;
} NhuDL_TportChannelTyp_r7dch_and_hsdsch;

typedef struct NhuDL_TportChannelTyp_r7
{
 TknU8 choice;
 union {
  NhuTportChannelIdentity dch;
  NhuTportChannelIdentity dsch;
  NhuTportChannelIdentityDCHandDSCH dch_and_dsch;
  NhuDL_TportChannelTyp_r7hsdsch hsdsch;
  NhuDL_TportChannelTyp_r7dch_and_hsdsch dch_and_hsdsch;
 } val;
} NhuDL_TportChannelTyp_r7;

typedef struct NhuDL_LogChannelMapping_r7
{
 TknPres pres;
 NhuDL_TportChannelTyp_r7 dl_TportChannelTyp;
 NhuLogChannelIdentity logicalChannelIdentity;
} NhuDL_LogChannelMapping_r7;

typedef struct NhuDL_LogChannelMappingLst
{
 TknU16 noComp;
 NhuDL_LogChannelMapping *member;
}NhuDL_LogChannelMappingLst;

typedef struct NhuDL_LogChannelMappingLst_r5
{
 TknU16 noComp;
 NhuDL_LogChannelMapping_r5 *member;
}NhuDL_LogChannelMappingLst_r5;

typedef struct NhuDL_LogChannelMappingLst_r7
{
 TknU16 noComp;
 NhuDL_LogChannelMapping_r7 *member;
}NhuDL_LogChannelMappingLst_r7;


typedef enum enumNhuDL_Reception_Window_Size_r6
{
 NhuDL_Reception_Window_Size_r6size32Enum,
 NhuDL_Reception_Window_Size_r6size48Enum,
 NhuDL_Reception_Window_Size_r6size64Enum,
 NhuDL_Reception_Window_Size_r6size80Enum,
 NhuDL_Reception_Window_Size_r6size96Enum,
 NhuDL_Reception_Window_Size_r6size112Enum
} EnumNhuDL_Reception_Window_Size_r6;
typedef TknU32 NhuDL_Reception_Window_Size_r6;


typedef TknU8 NhuDL_TM_RLC_ModesegmentationInd;

typedef struct NhuDL_TM_RLC_Mode
{
 TknPres pres;
 NhuDL_TM_RLC_ModesegmentationInd segmentationInd;
} NhuDL_TM_RLC_Mode;

typedef struct NhuDL_RLC_Mode
{
 TknU8 choice;
 union {
  NhuDL_AM_RLC_Mode dl_AM_RLC_Mode;
  NhuDL_TM_RLC_Mode dl_TM_RLC_Mode;
 } val;
} NhuDL_RLC_Mode;


typedef enum enumNhuDL_UM_RLC_LI_size
{
 NhuDL_UM_RLC_LI_sizesize7Enum,
 NhuDL_UM_RLC_LI_sizesize15Enum
} EnumNhuDL_UM_RLC_LI_size;
typedef TknU32 NhuDL_UM_RLC_LI_size;

typedef struct NhuDL_UM_RLC_Mode_r5
{
 TknPres pres;
 NhuDL_UM_RLC_LI_size dl_UM_RLC_LI_size;
} NhuDL_UM_RLC_Mode_r5;

typedef struct NhuDL_RLC_Mode_r5
{
 TknU8 choice;
 union {
  NhuDL_AM_RLC_Mode_r5 dl_AM_RLC_Mode;
  NhuDL_UM_RLC_Mode_r5 dl_UM_RLC_Mode;
  NhuDL_TM_RLC_Mode dl_TM_RLC_Mode;
 } val;
} NhuDL_RLC_Mode_r5;

typedef struct NhuDL_UM_RLC_Mode_r6
{
 TknPres pres;
 NhuDL_UM_RLC_LI_size dl_UM_RLC_LI_size;
 NhuDL_Reception_Window_Size_r6 dl_Reception_Window_Size;
} NhuDL_UM_RLC_Mode_r6;

typedef struct NhuDL_RLC_Mode_r6
{
 TknU8 choice;
 union {
  NhuDL_AM_RLC_Mode_r5 dl_AM_RLC_Mode;
  NhuDL_UM_RLC_Mode_r6 dl_UM_RLC_Mode;
  NhuDL_TM_RLC_Mode dl_TM_RLC_Mode;
 } val;
} NhuDL_RLC_Mode_r6;

typedef struct NhuDL_RLC_Mode_r7
{
 TknU8 choice;
 union {
  NhuDL_AM_RLC_Mode_r7 dl_AM_RLC_Mode;
  NhuDL_UM_RLC_Mode_r6 dl_UM_RLC_Mode;
  NhuDL_TM_RLC_Mode dl_TM_RLC_Mode;
 } val;
} NhuDL_RLC_Mode_r7;


typedef enum enumNhuTimerMRW
{
 NhuTimerMRWte50Enum,
 NhuTimerMRWte60Enum,
 NhuTimerMRWte70Enum,
 NhuTimerMRWte80Enum,
 NhuTimerMRWte90Enum,
 NhuTimerMRWte100Enum,
 NhuTimerMRWte120Enum,
 NhuTimerMRWte140Enum,
 NhuTimerMRWte160Enum,
 NhuTimerMRWte180Enum,
 NhuTimerMRWte200Enum,
 NhuTimerMRWte300Enum,
 NhuTimerMRWte400Enum,
 NhuTimerMRWte500Enum,
 NhuTimerMRWte700Enum,
 NhuTimerMRWte900Enum
} EnumNhuTimerMRW;
typedef TknU32 NhuTimerMRW;


typedef enum enumNhuTimerDiscard
{
 NhuTimerDiscardtd0_1Enum,
 NhuTimerDiscardtd0_25Enum,
 NhuTimerDiscardtd0_5Enum,
 NhuTimerDiscardtd0_75Enum,
 NhuTimerDiscardtd1Enum,
 NhuTimerDiscardtd1_25Enum,
 NhuTimerDiscardtd1_5Enum,
 NhuTimerDiscardtd1_75Enum,
 NhuTimerDiscardtd2Enum,
 NhuTimerDiscardtd2_5Enum,
 NhuTimerDiscardtd3Enum,
 NhuTimerDiscardtd3_5Enum,
 NhuTimerDiscardtd4Enum,
 NhuTimerDiscardtd4_5Enum,
 NhuTimerDiscardtd5Enum,
 NhuTimerDiscardtd7_5Enum
} EnumNhuTimerDiscard;
typedef TknU32 NhuTimerDiscard;


typedef enum enumNhuMaxMRW
{
 NhuMaxMRWmm1Enum,
 NhuMaxMRWmm4Enum,
 NhuMaxMRWmm6Enum,
 NhuMaxMRWmm8Enum,
 NhuMaxMRWmm12Enum,
 NhuMaxMRWmm16Enum,
 NhuMaxMRWmm24Enum,
 NhuMaxMRWmm32Enum
} EnumNhuMaxMRW;
typedef TknU32 NhuMaxMRW;

typedef struct NhuExplicitDiscard
{
 TknPres pres;
 NhuTimerMRW timerMRW;
 NhuTimerDiscard timerDiscard;
 NhuMaxMRW maxMRW;
} NhuExplicitDiscard;

typedef struct NhuHeaderCompressionInfo
{
 TknPres pres;
 NhuAlgorithmSpecificInfo algorithmSpecificInfo;
} NhuHeaderCompressionInfo;

typedef struct NhuHeaderCompressionInfoLst
{
 TknU16 noComp;
 NhuHeaderCompressionInfo *member;
}NhuHeaderCompressionInfoLst;

typedef struct NhuHeaderCompressionInfo_r4
{
 TknPres pres;
 NhuAlgorithmSpecificInfo_r4 algorithmSpecificInfo;
} NhuHeaderCompressionInfo_r4;

typedef struct NhuHeaderCompressionInfoLst_r4
{
 TknU16 noComp;
 NhuHeaderCompressionInfo_r4 *member;
}NhuHeaderCompressionInfoLst_r4;


typedef enum enumNhuMaxPDCP_SN_WindowSize
{
 NhuMaxPDCP_SN_WindowSizesn255Enum,
 NhuMaxPDCP_SN_WindowSizesn65535Enum
} EnumNhuMaxPDCP_SN_WindowSize;
typedef TknU32 NhuMaxPDCP_SN_WindowSize;

typedef struct NhuLosslessSRNS_RelocSupport
{
 TknU8 choice;
 union {
  NhuMaxPDCP_SN_WindowSize supported;
 } val;
} NhuLosslessSRNS_RelocSupport;


typedef TknStrBSXL NhuMAC_d_HFN_initial_value;

typedef TknU32 NhuMAC_LogChannelPriority;


typedef enum enumNhuMaxDAT
{
 NhuMaxDATdat1Enum,
 NhuMaxDATdat2Enum,
 NhuMaxDATdat3Enum,
 NhuMaxDATdat4Enum,
 NhuMaxDATdat5Enum,
 NhuMaxDATdat6Enum,
 NhuMaxDATdat7Enum,
 NhuMaxDATdat8Enum,
 NhuMaxDATdat9Enum,
 NhuMaxDATdat10Enum,
 NhuMaxDATdat15Enum,
 NhuMaxDATdat20Enum,
 NhuMaxDATdat25Enum,
 NhuMaxDATdat30Enum,
 NhuMaxDATdat35Enum,
 NhuMaxDATdat40Enum
} EnumNhuMaxDAT;
typedef TknU32 NhuMaxDAT;

typedef struct NhuMaxDAT_ReTxs
{
 TknPres pres;
 NhuMaxDAT maxDAT;
 NhuTimerMRW timerMRW;
 NhuMaxMRW maxMRW;
} NhuMaxDAT_ReTxs;


typedef enum enumNhuMaxRST
{
 NhuMaxRSTrst1Enum,
 NhuMaxRSTrst4Enum,
 NhuMaxRSTrst6Enum,
 NhuMaxRSTrst8Enum,
 NhuMaxRSTrst12Enum,
 NhuMaxRSTrst16Enum,
 NhuMaxRSTrst24Enum,
 NhuMaxRSTrst32Enum
} EnumNhuMaxRST;
typedef TknU32 NhuMaxRST;


typedef enum enumNhuNoExplicitDiscard
{
 NhuNoExplicitDiscarddt10Enum,
 NhuNoExplicitDiscarddt20Enum,
 NhuNoExplicitDiscarddt30Enum,
 NhuNoExplicitDiscarddt40Enum,
 NhuNoExplicitDiscarddt50Enum,
 NhuNoExplicitDiscarddt60Enum,
 NhuNoExplicitDiscarddt70Enum,
 NhuNoExplicitDiscarddt80Enum,
 NhuNoExplicitDiscarddt90Enum,
 NhuNoExplicitDiscarddt100Enum
} EnumNhuNoExplicitDiscard;
typedef TknU32 NhuNoExplicitDiscard;


typedef enum enumNhuPDCP_PDU_Header
{
 NhuPDCP_PDU_HeaderpresentEnum,
 NhuPDCP_PDU_HeaderabsentEnum
} EnumNhuPDCP_PDU_Header;
typedef TknU32 NhuPDCP_PDU_Header;

typedef struct NhuPDCP_Info
{
 TknPres pres;
 NhuLosslessSRNS_RelocSupport losslessSRNS_RelocSupport;
 NhuPDCP_PDU_Header pdcp_PDU_Header;
 NhuHeaderCompressionInfoLst headerCompressionInfoLst;
} NhuPDCP_Info;

typedef struct NhuPDCP_Info_r4
{
 TknPres pres;
 NhuLosslessSRNS_RelocSupport losslessSRNS_RelocSupport;
 NhuPDCP_PDU_Header pdcp_PDU_Header;
 NhuHeaderCompressionInfoLst_r4 headerCompressionInfoLst;
} NhuPDCP_Info_r4;


typedef TknU32 NhuPDCP_InfoReconfigdummy;

typedef struct NhuPDCP_InfoReconfig
{
 TknPres pres;
 NhuPDCP_Info pdcp_Info;
 NhuPDCP_InfoReconfigdummy dummy;
} NhuPDCP_InfoReconfig;

typedef struct NhuPDCP_InfoReconfig_r4
{
 TknPres pres;
 NhuPDCP_Info_r4 pdcp_Info;
} NhuPDCP_InfoReconfig_r4;


typedef enum enumNhuPDCP_ROHC_TgtMode
{
 NhuPDCP_ROHC_TgtModeo_ModeEnum,
 NhuPDCP_ROHC_TgtModer_ModeEnum
} EnumNhuPDCP_ROHC_TgtMode;
typedef TknU32 NhuPDCP_ROHC_TgtMode;


typedef enum enumNhuPoll_PDU
{
 NhuPoll_PDUpdu1Enum,
 NhuPoll_PDUpdu2Enum,
 NhuPoll_PDUpdu4Enum,
 NhuPoll_PDUpdu8Enum,
 NhuPoll_PDUpdu16Enum,
 NhuPoll_PDUpdu32Enum,
 NhuPoll_PDUpdu64Enum,
 NhuPoll_PDUpdu128Enum
} EnumNhuPoll_PDU;
typedef TknU32 NhuPoll_PDU;


typedef enum enumNhuPoll_SDU
{
 NhuPoll_SDUsdu1Enum,
 NhuPoll_SDUsdu4Enum,
 NhuPoll_SDUsdu16Enum,
 NhuPoll_SDUsdu64Enum
} EnumNhuPoll_SDU;
typedef TknU32 NhuPoll_SDU;


typedef enum enumNhuTimerPollProhibit
{
 NhuTimerPollProhibittpp10Enum,
 NhuTimerPollProhibittpp20Enum,
 NhuTimerPollProhibittpp30Enum,
 NhuTimerPollProhibittpp40Enum,
 NhuTimerPollProhibittpp50Enum,
 NhuTimerPollProhibittpp60Enum,
 NhuTimerPollProhibittpp70Enum,
 NhuTimerPollProhibittpp80Enum,
 NhuTimerPollProhibittpp90Enum,
 NhuTimerPollProhibittpp100Enum,
 NhuTimerPollProhibittpp110Enum,
 NhuTimerPollProhibittpp120Enum,
 NhuTimerPollProhibittpp130Enum,
 NhuTimerPollProhibittpp140Enum,
 NhuTimerPollProhibittpp150Enum,
 NhuTimerPollProhibittpp160Enum,
 NhuTimerPollProhibittpp170Enum,
 NhuTimerPollProhibittpp180Enum,
 NhuTimerPollProhibittpp190Enum,
 NhuTimerPollProhibittpp200Enum,
 NhuTimerPollProhibittpp210Enum,
 NhuTimerPollProhibittpp220Enum,
 NhuTimerPollProhibittpp230Enum,
 NhuTimerPollProhibittpp240Enum,
 NhuTimerPollProhibittpp250Enum,
 NhuTimerPollProhibittpp260Enum,
 NhuTimerPollProhibittpp270Enum,
 NhuTimerPollProhibittpp280Enum,
 NhuTimerPollProhibittpp290Enum,
 NhuTimerPollProhibittpp300Enum,
 NhuTimerPollProhibittpp310Enum,
 NhuTimerPollProhibittpp320Enum,
 NhuTimerPollProhibittpp330Enum,
 NhuTimerPollProhibittpp340Enum,
 NhuTimerPollProhibittpp350Enum,
 NhuTimerPollProhibittpp360Enum,
 NhuTimerPollProhibittpp370Enum,
 NhuTimerPollProhibittpp380Enum,
 NhuTimerPollProhibittpp390Enum,
 NhuTimerPollProhibittpp400Enum,
 NhuTimerPollProhibittpp410Enum,
 NhuTimerPollProhibittpp420Enum,
 NhuTimerPollProhibittpp430Enum,
 NhuTimerPollProhibittpp440Enum,
 NhuTimerPollProhibittpp450Enum,
 NhuTimerPollProhibittpp460Enum,
 NhuTimerPollProhibittpp470Enum,
 NhuTimerPollProhibittpp480Enum,
 NhuTimerPollProhibittpp490Enum,
 NhuTimerPollProhibittpp500Enum,
 NhuTimerPollProhibittpp510Enum,
 NhuTimerPollProhibittpp520Enum,
 NhuTimerPollProhibittpp530Enum,
 NhuTimerPollProhibittpp540Enum,
 NhuTimerPollProhibittpp550Enum,
 NhuTimerPollProhibittpp600Enum,
 NhuTimerPollProhibittpp650Enum,
 NhuTimerPollProhibittpp700Enum,
 NhuTimerPollProhibittpp750Enum,
 NhuTimerPollProhibittpp800Enum,
 NhuTimerPollProhibittpp850Enum,
 NhuTimerPollProhibittpp900Enum,
 NhuTimerPollProhibittpp950Enum,
 NhuTimerPollProhibittpp1000Enum
} EnumNhuTimerPollProhibit;
typedef TknU32 NhuTimerPollProhibit;


typedef enum enumNhuTimerPoll
{
 NhuTimerPolltp10Enum,
 NhuTimerPolltp20Enum,
 NhuTimerPolltp30Enum,
 NhuTimerPolltp40Enum,
 NhuTimerPolltp50Enum,
 NhuTimerPolltp60Enum,
 NhuTimerPolltp70Enum,
 NhuTimerPolltp80Enum,
 NhuTimerPolltp90Enum,
 NhuTimerPolltp100Enum,
 NhuTimerPolltp110Enum,
 NhuTimerPolltp120Enum,
 NhuTimerPolltp130Enum,
 NhuTimerPolltp140Enum,
 NhuTimerPolltp150Enum,
 NhuTimerPolltp160Enum,
 NhuTimerPolltp170Enum,
 NhuTimerPolltp180Enum,
 NhuTimerPolltp190Enum,
 NhuTimerPolltp200Enum,
 NhuTimerPolltp210Enum,
 NhuTimerPolltp220Enum,
 NhuTimerPolltp230Enum,
 NhuTimerPolltp240Enum,
 NhuTimerPolltp250Enum,
 NhuTimerPolltp260Enum,
 NhuTimerPolltp270Enum,
 NhuTimerPolltp280Enum,
 NhuTimerPolltp290Enum,
 NhuTimerPolltp300Enum,
 NhuTimerPolltp310Enum,
 NhuTimerPolltp320Enum,
 NhuTimerPolltp330Enum,
 NhuTimerPolltp340Enum,
 NhuTimerPolltp350Enum,
 NhuTimerPolltp360Enum,
 NhuTimerPolltp370Enum,
 NhuTimerPolltp380Enum,
 NhuTimerPolltp390Enum,
 NhuTimerPolltp400Enum,
 NhuTimerPolltp410Enum,
 NhuTimerPolltp420Enum,
 NhuTimerPolltp430Enum,
 NhuTimerPolltp440Enum,
 NhuTimerPolltp450Enum,
 NhuTimerPolltp460Enum,
 NhuTimerPolltp470Enum,
 NhuTimerPolltp480Enum,
 NhuTimerPolltp490Enum,
 NhuTimerPolltp500Enum,
 NhuTimerPolltp510Enum,
 NhuTimerPolltp520Enum,
 NhuTimerPolltp530Enum,
 NhuTimerPolltp540Enum,
 NhuTimerPolltp550Enum,
 NhuTimerPolltp600Enum,
 NhuTimerPolltp650Enum,
 NhuTimerPolltp700Enum,
 NhuTimerPolltp750Enum,
 NhuTimerPolltp800Enum,
 NhuTimerPolltp850Enum,
 NhuTimerPolltp900Enum,
 NhuTimerPolltp950Enum,
 NhuTimerPolltp1000Enum
} EnumNhuTimerPoll;
typedef TknU32 NhuTimerPoll;


typedef enum enumNhuPollWindow
{
 NhuPollWindowpw50Enum,
 NhuPollWindowpw60Enum,
 NhuPollWindowpw70Enum,
 NhuPollWindowpw80Enum,
 NhuPollWindowpw85Enum,
 NhuPollWindowpw90Enum,
 NhuPollWindowpw95Enum,
 NhuPollWindowpw99Enum
} EnumNhuPollWindow;
typedef TknU32 NhuPollWindow;


typedef enum enumNhuTimerPollPeriodic
{
 NhuTimerPollPeriodictper100Enum,
 NhuTimerPollPeriodictper200Enum,
 NhuTimerPollPeriodictper300Enum,
 NhuTimerPollPeriodictper400Enum,
 NhuTimerPollPeriodictper500Enum,
 NhuTimerPollPeriodictper750Enum,
 NhuTimerPollPeriodictper1000Enum,
 NhuTimerPollPeriodictper2000Enum
} EnumNhuTimerPollPeriodic;
typedef TknU32 NhuTimerPollPeriodic;


typedef TknU8 NhuPollingInfolastTransmissionPDU_Poll;


typedef TknU8 NhuPollingInfolastReTxPDU_Poll;

typedef struct NhuPollingInfo
{
 TknPres pres;
 NhuTimerPollProhibit timerPollProhibit;
 NhuTimerPoll timerPoll;
 NhuPoll_PDU poll_PDU;
 NhuPoll_SDU poll_SDU;
 NhuPollingInfolastTransmissionPDU_Poll lastTransmissionPDU_Poll;
 NhuPollingInfolastReTxPDU_Poll lastReTxPDU_Poll;
 NhuPollWindow pollWindow;
 NhuTimerPollPeriodic timerPollPeriodic;
} NhuPollingInfo;


typedef TknU32 NhuPredefinedConfigIdentity;


typedef TknU32 NhuPredefinedConfigValueTag;

typedef struct NhuTransmissionRLC_Discard
{
 TknU8 choice;
 union {
  NhuExplicitDiscard timerBasedExplicit;
  NhuNoExplicitDiscard timerBasedNoExplicit;
  NhuMaxDAT_ReTxs maxDAT_ReTxs;
  NhuMaxDAT noDiscard;
 } val;
} NhuTransmissionRLC_Discard;


typedef enum enumNhuTransmissionWindowSize
{
 NhuTransmissionWindowSizetw1Enum,
 NhuTransmissionWindowSizetw8Enum,
 NhuTransmissionWindowSizetw16Enum,
 NhuTransmissionWindowSizetw32Enum,
 NhuTransmissionWindowSizetw64Enum,
 NhuTransmissionWindowSizetw128Enum,
 NhuTransmissionWindowSizetw256Enum,
 NhuTransmissionWindowSizetw512Enum,
 NhuTransmissionWindowSizetw768Enum,
 NhuTransmissionWindowSizetw1024Enum,
 NhuTransmissionWindowSizetw1536Enum,
 NhuTransmissionWindowSizetw2047Enum,
 NhuTransmissionWindowSizetw2560Enum,
 NhuTransmissionWindowSizetw3072Enum,
 NhuTransmissionWindowSizetw3584Enum,
 NhuTransmissionWindowSizetw4095Enum
} EnumNhuTransmissionWindowSize;
typedef TknU32 NhuTransmissionWindowSize;


typedef enum enumNhuTimerRST
{
 NhuTimerRSTtr50Enum,
 NhuTimerRSTtr100Enum,
 NhuTimerRSTtr150Enum,
 NhuTimerRSTtr200Enum,
 NhuTimerRSTtr250Enum,
 NhuTimerRSTtr300Enum,
 NhuTimerRSTtr350Enum,
 NhuTimerRSTtr400Enum,
 NhuTimerRSTtr450Enum,
 NhuTimerRSTtr500Enum,
 NhuTimerRSTtr550Enum,
 NhuTimerRSTtr600Enum,
 NhuTimerRSTtr700Enum,
 NhuTimerRSTtr800Enum,
 NhuTimerRSTtr900Enum,
 NhuTimerRSTtr1000Enum
} EnumNhuTimerRST;
typedef TknU32 NhuTimerRST;

typedef struct NhuUL_AM_RLC_Mode
{
 TknPres pres;
 NhuTransmissionRLC_Discard transmissionRLC_Discard;
 NhuTransmissionWindowSize transmissionWindowSize;
 NhuTimerRST timerRST;
 NhuMaxRST max_RST;
 NhuPollingInfo pollingInfo;
} NhuUL_AM_RLC_Mode;

typedef struct NhuUL_UM_RLC_Mode
{
 TknPres pres;
 NhuTransmissionRLC_Discard transmissionRLC_Discard;
} NhuUL_UM_RLC_Mode;


typedef TknU8 NhuUL_TM_RLC_ModesegmentationInd;

typedef struct NhuUL_TM_RLC_Mode
{
 TknPres pres;
 NhuTransmissionRLC_Discard transmissionRLC_Discard;
 NhuUL_TM_RLC_ModesegmentationInd segmentationInd;
} NhuUL_TM_RLC_Mode;

typedef struct NhuUL_RLC_Mode
{
 TknU8 choice;
 union {
  NhuUL_AM_RLC_Mode ul_AM_RLC_Mode;
  NhuUL_UM_RLC_Mode ul_UM_RLC_Mode;
  NhuUL_TM_RLC_Mode ul_TM_RLC_Mode;
 } val;
} NhuUL_RLC_Mode;

typedef struct NhuRLC_Info
{
 TknPres pres;
 NhuUL_RLC_Mode ul_RLC_Mode;
 NhuDL_RLC_Mode dl_RLC_Mode;
} NhuRLC_Info;

typedef struct NhuRLC_InfoChoice
{
 TknU8 choice;
 union {
  NhuRLC_Info rlc_Info;
  NhuRB_Identity same_as_RB;
 } val;
} NhuRLC_InfoChoice;

typedef struct NhuUL_TportChannelTyp
{
 TknU8 choice;
 union {
  NhuTportChannelIdentity dch;
  NhuTportChannelIdentity usch;
 } val;
} NhuUL_TportChannelTyp;


typedef TknU32 NhuRLC_SizeInforlc_SizeIdx;

typedef struct NhuRLC_SizeInfo
{
 TknPres pres;
 NhuRLC_SizeInforlc_SizeIdx rlc_SizeIdx;
} NhuRLC_SizeInfo;

typedef struct NhuRLC_SizeExplicitLst
{
 TknU16 noComp;
 NhuRLC_SizeInfo *member;
}NhuRLC_SizeExplicitLst;

typedef struct NhuUL_LogChannelMappingrlc_SizeLst
{
 TknU8 choice;
 union {
  NhuRLC_SizeExplicitLst explicitLst;
 } val;
} NhuUL_LogChannelMappingrlc_SizeLst;

typedef struct NhuUL_LogChannelMapping
{
 TknPres pres;
 NhuUL_TportChannelTyp ul_TportChannelTyp;
 NhuLogChannelIdentity logicalChannelIdentity;
 NhuUL_LogChannelMappingrlc_SizeLst rlc_SizeLst;
 NhuMAC_LogChannelPriority mac_LogChannelPriority;
} NhuUL_LogChannelMapping;


typedef TknU8 NhuUL_LogChannelMappingLstrlc_LogChannelMappingIndicator;

typedef struct NhuUL_LogChannelMappingLstul_LogChannelMapping
{
 TknU16 noComp;
 NhuUL_LogChannelMapping *member;
}NhuUL_LogChannelMappingLstul_LogChannelMapping;

typedef struct NhuUL_LogChannelMappingLst
{
 TknPres pres;
 NhuUL_LogChannelMappingLstrlc_LogChannelMappingIndicator rlc_LogChannelMappingIndicator;
 NhuUL_LogChannelMappingLstul_LogChannelMapping ul_LogChannelMapping;
} NhuUL_LogChannelMappingLst;

typedef struct NhuUL_LogChannelMappings
{
 TknU8 choice;
 union {
  NhuUL_LogChannelMapping oneLogChannel;
  NhuUL_LogChannelMappingLst twoLogChannels;
 } val;
} NhuUL_LogChannelMappings;

typedef struct NhuRB_MappingOption
{
 TknPres pres;
 NhuUL_LogChannelMappings ul_LogChannelMappings;
 NhuDL_LogChannelMappingLst dl_LogChannelMappingLst;
} NhuRB_MappingOption;

typedef struct NhuRB_MappingInfo
{
 TknU16 noComp;
 NhuRB_MappingOption *member;
}NhuRB_MappingInfo;

typedef struct NhuSRB_InfoSetup
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRLC_InfoChoice rlc_InfoChoice;
 NhuRB_MappingInfo rb_MappingInfo;
} NhuSRB_InfoSetup;

typedef struct NhuSRB_InfoSetupLst
{
 TknU16 noComp;
 NhuSRB_InfoSetup *member;
}NhuSRB_InfoSetupLst;

typedef struct NhuRB_InfoSetup
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_Info pdcp_Info;
 NhuRLC_InfoChoice rlc_InfoChoice;
 NhuRB_MappingInfo rb_MappingInfo;
} NhuRB_InfoSetup;

typedef struct NhuRB_InfoSetupLst
{
 TknU16 noComp;
 NhuRB_InfoSetup *member;
}NhuRB_InfoSetupLst;

typedef struct NhuPredefinedRB_Cfg
{
 TknPres pres;
 NhuRe_EstablishmentTimer re_EstablishmentTimer;
 NhuSRB_InfoSetupLst srb_InfoLst;
 NhuRB_InfoSetupLst rb_InfoLst;
} NhuPredefinedRB_Cfg;


typedef TknU32 NhuTFC_Value;

typedef struct NhuAllowedTFC_Lst
{
 TknU16 noComp;
 NhuTFC_Value *member;
}NhuAllowedTFC_Lst;

typedef struct NhuNon_allowedTFC_Lst
{
 TknU16 noComp;
 NhuTFC_Value *member;
}NhuNon_allowedTFC_Lst;


typedef enum enumNhuUL_TrCH_Typ
{
 NhuUL_TrCH_TypdchEnum,
 NhuUL_TrCH_TypuschEnum
} EnumNhuUL_TrCH_Typ;
typedef TknU32 NhuUL_TrCH_Typ;

typedef TknU32 NhuAllowedTFI_LstMember;

typedef struct NhuAllowedTFI_Lst
{
 TknU16 noComp;
 NhuAllowedTFI_LstMember *member;
}NhuAllowedTFI_Lst;

typedef struct NhuRestrictedTrChInfo
{
 TknPres pres;
 NhuUL_TrCH_Typ ul_TportChannelTyp;
 NhuTportChannelIdentity restrictedTrChIdentity;
 NhuAllowedTFI_Lst allowedTFI_Lst;
} NhuRestrictedTrChInfo;

typedef struct NhuRestrictedTrChInfoLst
{
 TknU16 noComp;
 NhuRestrictedTrChInfo *member;
}NhuRestrictedTrChInfoLst;

typedef struct NhuTFC_Subset
{
 TknU8 choice;
 union {
  NhuTFC_Value minimumAllowedTFC_Number;
  NhuAllowedTFC_Lst allowedTFC_Lst;
  NhuNon_allowedTFC_Lst non_allowedTFC_Lst;
  NhuRestrictedTrChInfoLst restrictedTrChInfoLst;
 } val;
} NhuTFC_Subset;


typedef TknU32 NhuGainFactor;


typedef TknU32 NhuReferenceTFC_ID;

typedef struct NhuSignalledGainFactorsmodeSpecificInfofdd
{
 TknPres pres;
 NhuGainFactor gainFactorBetaC;
} NhuSignalledGainFactorsmodeSpecificInfofdd;

typedef struct NhuSignalledGainFactorsmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuSignalledGainFactorsmodeSpecificInfofdd fdd;
 } val;
} NhuSignalledGainFactorsmodeSpecificInfo;

typedef struct NhuSignalledGainFactors
{
 TknPres pres;
 NhuSignalledGainFactorsmodeSpecificInfo modeSpecificInfo;
 NhuGainFactor gainFactorBetaD;
 NhuReferenceTFC_ID referenceTFC_ID;
} NhuSignalledGainFactors;

typedef struct NhuGainFactorInfo
{
 TknU8 choice;
 union {
  NhuSignalledGainFactors signalledGainFactors;
  NhuReferenceTFC_ID computedGainFactors;
 } val;
} NhuGainFactorInfo;


typedef TknS32 NhuPowerOffsetPp_m;

typedef struct NhuPowerOffsetInfo
{
 TknPres pres;
 NhuGainFactorInfo gainFactorInfo;
 NhuPowerOffsetPp_m powerOffsetPp_m;
} NhuPowerOffsetInfo;


typedef TknU32 NhuTFCS_ReconfAddctfcSizectfc2BitMemberctfc2;

typedef struct NhuTFCS_ReconfAddctfcSizectfc2BitMember
{
 TknPres pres;
 NhuTFCS_ReconfAddctfcSizectfc2BitMemberctfc2 ctfc2;
 NhuPowerOffsetInfo powerOffsetInfo;
} NhuTFCS_ReconfAddctfcSizectfc2BitMember;

typedef struct NhuTFCS_ReconfAddctfcSizectfc2Bit
{
 TknU16 noComp;
 NhuTFCS_ReconfAddctfcSizectfc2BitMember *member;
}NhuTFCS_ReconfAddctfcSizectfc2Bit;


typedef TknU32 NhuTFCS_ReconfAddctfcSizectfc4BitMemberctfc4;

typedef struct NhuTFCS_ReconfAddctfcSizectfc4BitMember
{
 TknPres pres;
 NhuTFCS_ReconfAddctfcSizectfc4BitMemberctfc4 ctfc4;
 NhuPowerOffsetInfo powerOffsetInfo;
} NhuTFCS_ReconfAddctfcSizectfc4BitMember;

typedef struct NhuTFCS_ReconfAddctfcSizectfc4Bit
{
 TknU16 noComp;
 NhuTFCS_ReconfAddctfcSizectfc4BitMember *member;
}NhuTFCS_ReconfAddctfcSizectfc4Bit;


typedef TknU32 NhuTFCS_ReconfAddctfcSizectfc6BitMemberctfc6;

typedef struct NhuTFCS_ReconfAddctfcSizectfc6BitMember
{
 TknPres pres;
 NhuTFCS_ReconfAddctfcSizectfc6BitMemberctfc6 ctfc6;
 NhuPowerOffsetInfo powerOffsetInfo;
} NhuTFCS_ReconfAddctfcSizectfc6BitMember;

typedef struct NhuTFCS_ReconfAddctfcSizectfc6Bit
{
 TknU16 noComp;
 NhuTFCS_ReconfAddctfcSizectfc6BitMember *member;
}NhuTFCS_ReconfAddctfcSizectfc6Bit;


typedef TknU32 NhuTFCS_ReconfAddctfcSizectfc8BitMemberctfc8;

typedef struct NhuTFCS_ReconfAddctfcSizectfc8BitMember
{
 TknPres pres;
 NhuTFCS_ReconfAddctfcSizectfc8BitMemberctfc8 ctfc8;
 NhuPowerOffsetInfo powerOffsetInfo;
} NhuTFCS_ReconfAddctfcSizectfc8BitMember;

typedef struct NhuTFCS_ReconfAddctfcSizectfc8Bit
{
 TknU16 noComp;
 NhuTFCS_ReconfAddctfcSizectfc8BitMember *member;
}NhuTFCS_ReconfAddctfcSizectfc8Bit;


typedef TknU32 NhuTFCS_ReconfAddctfcSizectfc12BitMemberctfc12;

typedef struct NhuTFCS_ReconfAddctfcSizectfc12BitMember
{
 TknPres pres;
 NhuTFCS_ReconfAddctfcSizectfc12BitMemberctfc12 ctfc12;
 NhuPowerOffsetInfo powerOffsetInfo;
} NhuTFCS_ReconfAddctfcSizectfc12BitMember;

typedef struct NhuTFCS_ReconfAddctfcSizectfc12Bit
{
 TknU16 noComp;
 NhuTFCS_ReconfAddctfcSizectfc12BitMember *member;
}NhuTFCS_ReconfAddctfcSizectfc12Bit;


typedef TknU32 NhuTFCS_ReconfAddctfcSizectfc16BitMemberctfc16;

typedef struct NhuTFCS_ReconfAddctfcSizectfc16BitMember
{
 TknPres pres;
 NhuTFCS_ReconfAddctfcSizectfc16BitMemberctfc16 ctfc16;
 NhuPowerOffsetInfo powerOffsetInfo;
} NhuTFCS_ReconfAddctfcSizectfc16BitMember;

typedef struct NhuTFCS_ReconfAddctfcSizectfc16Bit
{
 TknU16 noComp;
 NhuTFCS_ReconfAddctfcSizectfc16BitMember *member;
}NhuTFCS_ReconfAddctfcSizectfc16Bit;


typedef TknU32 NhuTFCS_ReconfAddctfcSizectfc24BitMemberctfc24;

typedef struct NhuTFCS_ReconfAddctfcSizectfc24BitMember
{
 TknPres pres;
 NhuTFCS_ReconfAddctfcSizectfc24BitMemberctfc24 ctfc24;
 NhuPowerOffsetInfo powerOffsetInfo;
} NhuTFCS_ReconfAddctfcSizectfc24BitMember;

typedef struct NhuTFCS_ReconfAddctfcSizectfc24Bit
{
 TknU16 noComp;
 NhuTFCS_ReconfAddctfcSizectfc24BitMember *member;
}NhuTFCS_ReconfAddctfcSizectfc24Bit;

typedef struct NhuTFCS_ReconfAddctfcSize
{
 TknU8 choice;
 union {
  NhuTFCS_ReconfAddctfcSizectfc2Bit ctfc2Bit;
  NhuTFCS_ReconfAddctfcSizectfc4Bit ctfc4Bit;
  NhuTFCS_ReconfAddctfcSizectfc6Bit ctfc6Bit;
  NhuTFCS_ReconfAddctfcSizectfc8Bit ctfc8Bit;
  NhuTFCS_ReconfAddctfcSizectfc12Bit ctfc12Bit;
  NhuTFCS_ReconfAddctfcSizectfc16Bit ctfc16Bit;
  NhuTFCS_ReconfAddctfcSizectfc24Bit ctfc24Bit;
 } val;
} NhuTFCS_ReconfAddctfcSize;

typedef struct NhuTFCS_ReconfAdd
{
 TknPres pres;
 NhuTFCS_ReconfAddctfcSize ctfcSize;
} NhuTFCS_ReconfAdd;


typedef TknU32 NhuTFCS_Removaltfci;

typedef struct NhuTFCS_Removal
{
 TknPres pres;
 NhuTFCS_Removaltfci tfci;
} NhuTFCS_Removal;

typedef struct NhuTFCS_RemovalLst
{
 TknU16 noComp;
 NhuTFCS_Removal *member;
}NhuTFCS_RemovalLst;

typedef struct NhuExplicitTFCS_Cfgreplacement
{
 TknPres pres;
 NhuTFCS_RemovalLst tfcsRemoval;
 NhuTFCS_ReconfAdd tfcsAdd;
} NhuExplicitTFCS_Cfgreplacement;

typedef struct NhuExplicitTFCS_Cfg
{
 TknU8 choice;
 union {
  NhuTFCS_ReconfAdd complete;
  NhuTFCS_ReconfAdd addition;
  NhuTFCS_RemovalLst removal;
  NhuExplicitTFCS_Cfgreplacement replacement;
 } val;
} NhuExplicitTFCS_Cfg;


typedef enum enumNhuSplitTyp
{
 NhuSplitTyphardSplitEnum,
 NhuSplitTyplogicalSplitEnum
} EnumNhuSplitTyp;
typedef TknU32 NhuSplitTyp;


typedef TknU32 NhuTFCS_InfoForDSCHctfc2bit;


typedef TknU32 NhuTFCS_InfoForDSCHctfc4bit;


typedef TknU32 NhuTFCS_InfoForDSCHctfc6bit;


typedef TknU32 NhuTFCS_InfoForDSCHctfc8bit;


typedef TknU32 NhuTFCS_InfoForDSCHctfc12bit;


typedef TknU32 NhuTFCS_InfoForDSCHctfc16bit;


typedef TknU32 NhuTFCS_InfoForDSCHctfc24bit;

typedef struct NhuTFCS_InfoForDSCH
{
 TknU8 choice;
 union {
  NhuTFCS_InfoForDSCHctfc2bit ctfc2bit;
  NhuTFCS_InfoForDSCHctfc4bit ctfc4bit;
  NhuTFCS_InfoForDSCHctfc6bit ctfc6bit;
  NhuTFCS_InfoForDSCHctfc8bit ctfc8bit;
  NhuTFCS_InfoForDSCHctfc12bit ctfc12bit;
  NhuTFCS_InfoForDSCHctfc16bit ctfc16bit;
  NhuTFCS_InfoForDSCHctfc24bit ctfc24bit;
 } val;
} NhuTFCS_InfoForDSCH;


typedef TknU32 NhuTFCI_RangemaxTFCIField2Value;

typedef struct NhuTFCI_Range
{
 TknPres pres;
 NhuTFCI_RangemaxTFCIField2Value maxTFCIField2Value;
 NhuTFCS_InfoForDSCH tfcs_InfoForDSCH;
} NhuTFCI_Range;

typedef struct NhuTFCI_RangeLst
{
 TknU16 noComp;
 NhuTFCI_Range *member;
}NhuTFCI_RangeLst;

typedef struct NhuTFCI_Field2_Info
{
 TknU8 choice;
 union {
  NhuTFCI_RangeLst tfci_Range;
  NhuExplicitTFCS_Cfg explicit_config;
 } val;
} NhuTFCI_Field2_Info;


typedef TknU32 NhuSplitTFCI_Signallingtfci_Field2_Length;

typedef struct NhuSplitTFCI_Signalling
{
 TknPres pres;
 NhuSplitTyp splitTyp;
 NhuSplitTFCI_Signallingtfci_Field2_Length tfci_Field2_Length;
 NhuExplicitTFCS_Cfg tfci_Field1_Info;
 NhuTFCI_Field2_Info tfci_Field2_Info;
} NhuSplitTFCI_Signalling;

typedef struct NhuTFCS
{
 TknU8 choice;
 union {
  NhuExplicitTFCS_Cfg normalTFCI_Signalling;
  NhuSplitTFCI_Signalling dummy;
 } val;
} NhuTFCS;


typedef TknU32 NhuTFCS_IdentityPlain;


typedef TknU8 NhuTFCS_IdentitysharedChannelIndicator;

typedef struct NhuTFCS_Identity
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuTFCS_IdentitysharedChannelIndicator sharedChannelIndicator;
} NhuTFCS_Identity;

typedef struct NhuIvdualUL_CCTrCH_Info
{
 TknPres pres;
 NhuTFCS_Identity ul_TFCS_Identity;
 NhuTFCS ul_TFCS;
 NhuTFC_Subset tfc_Subset;
} NhuIvdualUL_CCTrCH_Info;

typedef struct NhuIvdualUL_CCTrCH_InfoLst
{
 TknU16 noComp;
 NhuIvdualUL_CCTrCH_Info *member;
}NhuIvdualUL_CCTrCH_InfoLst;

typedef struct NhuUL_CmnTransChInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuTFCS ul_TFCS;
} NhuUL_CmnTransChInfomodeSpecificInfofdd;

typedef struct NhuUL_CmnTransChInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuIvdualUL_CCTrCH_InfoLst individualUL_CCTrCH_InfoLst;
} NhuUL_CmnTransChInfomodeSpecificInfotdd;

typedef struct NhuUL_CmnTransChInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_CmnTransChInfomodeSpecificInfofdd fdd;
  NhuUL_CmnTransChInfomodeSpecificInfotdd tdd;
 } val;
} NhuUL_CmnTransChInfomodeSpecificInfo;

typedef struct NhuUL_CmnTransChInfo
{
 TknPres pres;
 NhuTFC_Subset tfc_Subset;
 NhuTFCS prach_TFCS;
 NhuUL_CmnTransChInfomodeSpecificInfo modeSpecificInfo;
} NhuUL_CmnTransChInfo;


typedef TknU32 NhuBitModeRLC_SizeInfosizeTyp1;


typedef TknU32 NhuBitModeRLC_SizeInfosizeTyp2part1;


typedef TknU32 NhuBitModeRLC_SizeInfosizeTyp2part2;

typedef struct NhuBitModeRLC_SizeInfosizeTyp2
{
 TknPres pres;
 NhuBitModeRLC_SizeInfosizeTyp2part1 part1;
 NhuBitModeRLC_SizeInfosizeTyp2part2 part2;
} NhuBitModeRLC_SizeInfosizeTyp2;


typedef TknU32 NhuBitModeRLC_SizeInfosizeTyp3part1;


typedef TknU32 NhuBitModeRLC_SizeInfosizeTyp3part2;

typedef struct NhuBitModeRLC_SizeInfosizeTyp3
{
 TknPres pres;
 NhuBitModeRLC_SizeInfosizeTyp3part1 part1;
 NhuBitModeRLC_SizeInfosizeTyp3part2 part2;
} NhuBitModeRLC_SizeInfosizeTyp3;


typedef TknU32 NhuBitModeRLC_SizeInfosizeTyp4part1;


typedef TknU32 NhuBitModeRLC_SizeInfosizeTyp4part2;

typedef struct NhuBitModeRLC_SizeInfosizeTyp4
{
 TknPres pres;
 NhuBitModeRLC_SizeInfosizeTyp4part1 part1;
 NhuBitModeRLC_SizeInfosizeTyp4part2 part2;
} NhuBitModeRLC_SizeInfosizeTyp4;

typedef struct NhuBitModeRLC_SizeInfo
{
 TknU8 choice;
 union {
  NhuBitModeRLC_SizeInfosizeTyp1 sizeTyp1;
  NhuBitModeRLC_SizeInfosizeTyp2 sizeTyp2;
  NhuBitModeRLC_SizeInfosizeTyp3 sizeTyp3;
  NhuBitModeRLC_SizeInfosizeTyp4 sizeTyp4;
 } val;
} NhuBitModeRLC_SizeInfo;


typedef TknU32 NhuNumberOfTportBlockssmall;


typedef TknU32 NhuNumberOfTportBlockslarge;

typedef struct NhuNumberOfTportBlocks
{
 TknU8 choice;
 union {
  NhuNumberOfTportBlockssmall small;
  NhuNumberOfTportBlockslarge large;
 } val;
} NhuNumberOfTportBlocks;


typedef TknU32 NhuLogChannelByRBlogChOfRb;

typedef struct NhuLogChannelByRB
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuLogChannelByRBlogChOfRb logChOfRb;
} NhuLogChannelByRB;

typedef struct NhuLogChannelLstexplicitLst
{
 TknU16 noComp;
 NhuLogChannelByRB *member;
}NhuLogChannelLstexplicitLst;

typedef struct NhuLogChannelLst
{
 TknU8 choice;
 union {
  NhuLogChannelLstexplicitLst explicitLst;
 } val;
} NhuLogChannelLst;

typedef struct NhuDedicatedDynamicTF_Inforlc_Size
{
 TknU8 choice;
 union {
  NhuBitModeRLC_SizeInfo bitMode;
  NhuOctetModeRLC_SizeInfoTyp1 octetModeTyp1;
 } val;
} NhuDedicatedDynamicTF_Inforlc_Size;

typedef struct NhuDedicatedDynamicTF_InfonumberOfTbSizeLst
{
 TknU16 noComp;
 NhuNumberOfTportBlocks *member;
}NhuDedicatedDynamicTF_InfonumberOfTbSizeLst;

typedef struct NhuDedicatedDynamicTF_Info
{
 TknPres pres;
 NhuDedicatedDynamicTF_Inforlc_Size rlc_Size;
 NhuDedicatedDynamicTF_InfonumberOfTbSizeLst numberOfTbSizeLst;
 NhuLogChannelLst logicalChannelLst;
} NhuDedicatedDynamicTF_Info;

typedef struct NhuDedicatedDynamicTF_InfoLst
{
 TknU16 noComp;
 NhuDedicatedDynamicTF_Info *member;
}NhuDedicatedDynamicTF_InfoLst;


typedef enum enumNhuTransmissionTimeInterval
{
 NhuTransmissionTimeIntervaltti10Enum,
 NhuTransmissionTimeIntervaltti20Enum,
 NhuTransmissionTimeIntervaltti40Enum,
 NhuTransmissionTimeIntervaltti80Enum
} EnumNhuTransmissionTimeInterval;
typedef TknU32 NhuTransmissionTimeInterval;

typedef struct NhuNumberOfTbSizeAndTTILstMember
{
 TknPres pres;
 NhuNumberOfTportBlocks numberOfTportBlocks;
 NhuTransmissionTimeInterval transmissionTimeInterval;
} NhuNumberOfTbSizeAndTTILstMember;

typedef struct NhuNumberOfTbSizeAndTTILst
{
 TknU16 noComp;
 NhuNumberOfTbSizeAndTTILstMember *member;
}NhuNumberOfTbSizeAndTTILst;

typedef struct NhuDedicatedDynamicTF_Info_DynamicTTIrlc_Size
{
 TknU8 choice;
 union {
  NhuBitModeRLC_SizeInfo bitMode;
  NhuOctetModeRLC_SizeInfoTyp1 octetModeTyp1;
 } val;
} NhuDedicatedDynamicTF_Info_DynamicTTIrlc_Size;

typedef struct NhuDedicatedDynamicTF_Info_DynamicTTI
{
 TknPres pres;
 NhuDedicatedDynamicTF_Info_DynamicTTIrlc_Size rlc_Size;
 NhuNumberOfTbSizeAndTTILst numberOfTbSizeAndTTILst;
 NhuLogChannelLst logicalChannelLst;
} NhuDedicatedDynamicTF_Info_DynamicTTI;

typedef struct NhuDedicatedDynamicTF_InfoLst_DynamicTTI
{
 TknU16 noComp;
 NhuDedicatedDynamicTF_Info_DynamicTTI *member;
}NhuDedicatedDynamicTF_InfoLst_DynamicTTI;


typedef enum enumNhuCodingRate
{
 NhuCodingRatehalfEnum,
 NhuCodingRatethirdEnum
} EnumNhuCodingRate;
typedef TknU32 NhuCodingRate;

typedef struct NhuChannelCodingTyp
{
 TknU8 choice;
 union {
  NhuCodingRate convolutional;
 } val;
} NhuChannelCodingTyp;


typedef TknU32 NhuRateMatchingAttribute;


typedef enum enumNhuCRC_Size
{
 NhuCRC_Sizecrc0Enum,
 NhuCRC_Sizecrc8Enum,
 NhuCRC_Sizecrc12Enum,
 NhuCRC_Sizecrc16Enum,
 NhuCRC_Sizecrc24Enum
} EnumNhuCRC_Size;
typedef TknU32 NhuCRC_Size;

typedef struct NhuSemistaticTF_Info
{
 TknPres pres;
 NhuChannelCodingTyp channelCodingTyp;
 NhuRateMatchingAttribute rateMatchingAttribute;
 NhuCRC_Size crc_Size;
} NhuSemistaticTF_Info;

typedef struct NhuDedicatedTransChTFStti
{
 TknU8 choice;
 union {
  NhuDedicatedDynamicTF_InfoLst tti10;
  NhuDedicatedDynamicTF_InfoLst tti20;
  NhuDedicatedDynamicTF_InfoLst tti40;
  NhuDedicatedDynamicTF_InfoLst tti80;
  NhuDedicatedDynamicTF_InfoLst_DynamicTTI dynamic;
 } val;
} NhuDedicatedTransChTFStti;

typedef struct NhuDedicatedTransChTFS
{
 TknPres pres;
 NhuDedicatedTransChTFStti tti;
 NhuSemistaticTF_Info semistaticTF_Info;
} NhuDedicatedTransChTFS;


typedef TknU32 NhuOctetModeRLC_SizeInfoTyp2sizeTyp1;


typedef TknU32 NhuOctetModeRLC_SizeInfoTyp2sizeTyp2;


typedef TknU32 NhuOctetModeRLC_SizeInfoTyp2sizeTyp3;

typedef struct NhuOctetModeRLC_SizeInfoTyp2
{
 TknU8 choice;
 union {
  NhuOctetModeRLC_SizeInfoTyp2sizeTyp1 sizeTyp1;
  NhuOctetModeRLC_SizeInfoTyp2sizeTyp2 sizeTyp2;
  NhuOctetModeRLC_SizeInfoTyp2sizeTyp3 sizeTyp3;
 } val;
} NhuOctetModeRLC_SizeInfoTyp2;

typedef struct NhuCmnDynamicTF_Inforlc_Sizefdd
{
 TknPres pres;
 NhuOctetModeRLC_SizeInfoTyp2 octetModeRLC_SizeInfoTyp2;
} NhuCmnDynamicTF_Inforlc_Sizefdd;

typedef struct NhuCmnDynamicTF_Inforlc_SizetddcommonTDD_Choice
{
 TknU8 choice;
 union {
  NhuBitModeRLC_SizeInfo bitModeRLC_SizeInfo;
  NhuOctetModeRLC_SizeInfoTyp1 octetModeRLC_SizeInfoTyp1;
 } val;
} NhuCmnDynamicTF_Inforlc_SizetddcommonTDD_Choice;

typedef struct NhuCmnDynamicTF_Inforlc_Sizetdd
{
 TknPres pres;
 NhuCmnDynamicTF_Inforlc_SizetddcommonTDD_Choice commonTDD_Choice;
} NhuCmnDynamicTF_Inforlc_Sizetdd;

typedef struct NhuCmnDynamicTF_Inforlc_Size
{
 TknU8 choice;
 union {
  NhuCmnDynamicTF_Inforlc_Sizefdd fdd;
  NhuCmnDynamicTF_Inforlc_Sizetdd tdd;
 } val;
} NhuCmnDynamicTF_Inforlc_Size;

typedef struct NhuCmnDynamicTF_InfonumberOfTbSizeLst
{
 TknU16 noComp;
 NhuNumberOfTportBlocks *member;
}NhuCmnDynamicTF_InfonumberOfTbSizeLst;

typedef struct NhuCmnDynamicTF_Info
{
 TknPres pres;
 NhuCmnDynamicTF_Inforlc_Size rlc_Size;
 NhuCmnDynamicTF_InfonumberOfTbSizeLst numberOfTbSizeLst;
 NhuLogChannelLst logicalChannelLst;
} NhuCmnDynamicTF_Info;

typedef struct NhuCmnDynamicTF_InfoLst
{
 TknU16 noComp;
 NhuCmnDynamicTF_Info *member;
}NhuCmnDynamicTF_InfoLst;

typedef struct NhuCmnDynamicTF_Info_DynamicTTIcommonTDD_Choice
{
 TknU8 choice;
 union {
  NhuBitModeRLC_SizeInfo bitModeRLC_SizeInfo;
  NhuOctetModeRLC_SizeInfoTyp1 octetModeRLC_SizeInfoTyp1;
 } val;
} NhuCmnDynamicTF_Info_DynamicTTIcommonTDD_Choice;

typedef struct NhuCmnDynamicTF_Info_DynamicTTI
{
 TknPres pres;
 NhuCmnDynamicTF_Info_DynamicTTIcommonTDD_Choice commonTDD_Choice;
 NhuNumberOfTbSizeAndTTILst numberOfTbSizeAndTTILst;
 NhuLogChannelLst logicalChannelLst;
} NhuCmnDynamicTF_Info_DynamicTTI;

typedef struct NhuCmnDynamicTF_InfoLst_DynamicTTI
{
 TknU16 noComp;
 NhuCmnDynamicTF_Info_DynamicTTI *member;
}NhuCmnDynamicTF_InfoLst_DynamicTTI;

typedef struct NhuCmnTransChTFStti
{
 TknU8 choice;
 union {
  NhuCmnDynamicTF_InfoLst tti10;
  NhuCmnDynamicTF_InfoLst tti20;
  NhuCmnDynamicTF_InfoLst tti40;
  NhuCmnDynamicTF_InfoLst tti80;
  NhuCmnDynamicTF_InfoLst_DynamicTTI dynamic;
 } val;
} NhuCmnTransChTFStti;

typedef struct NhuCmnTransChTFS
{
 TknPres pres;
 NhuCmnTransChTFStti tti;
 NhuSemistaticTF_Info semistaticTF_Info;
} NhuCmnTransChTFS;

typedef struct NhuTportFormatSet
{
 TknU8 choice;
 union {
  NhuDedicatedTransChTFS dedicatedTransChTFS;
  NhuCmnTransChTFS commonTransChTFS;
 } val;
} NhuTportFormatSet;

typedef struct NhuUL_AddReconfTransChInfo
{
 TknPres pres;
 NhuUL_TrCH_Typ ul_TportChannelTyp;
 NhuTportChannelIdentity transportChannelIdentity;
 NhuTportFormatSet transportFormatSet;
} NhuUL_AddReconfTransChInfo;

typedef struct NhuUL_AddReconfTransChInfoLst
{
 TknU16 noComp;
 NhuUL_AddReconfTransChInfo *member;
}NhuUL_AddReconfTransChInfoLst;

typedef struct NhuIvdualDL_CCTrCH_Infotfcs_SignallingMode
{
 TknU8 choice;
 union {
  NhuTFCS explicit_config;
  NhuTFCS_Identity sameAsUL;
 } val;
} NhuIvdualDL_CCTrCH_Infotfcs_SignallingMode;

typedef struct NhuIvdualDL_CCTrCH_Info
{
 TknPres pres;
 NhuTFCS_Identity dl_TFCS_Identity;
 NhuIvdualDL_CCTrCH_Infotfcs_SignallingMode tfcs_SignallingMode;
} NhuIvdualDL_CCTrCH_Info;

typedef struct NhuIvdualDL_CCTrCH_InfoLst
{
 TknU16 noComp;
 NhuIvdualDL_CCTrCH_Info *member;
}NhuIvdualDL_CCTrCH_InfoLst;

typedef struct NhuDL_CmnTransChInfomodeSpecificInfofdddl_Params
{
 TknU8 choice;
 union {
  NhuTFCS dl_DCH_TFCS;
 } val;
} NhuDL_CmnTransChInfomodeSpecificInfofdddl_Params;

typedef struct NhuDL_CmnTransChInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuDL_CmnTransChInfomodeSpecificInfofdddl_Params dl_Params;
} NhuDL_CmnTransChInfomodeSpecificInfofdd;

typedef struct NhuDL_CmnTransChInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuIvdualDL_CCTrCH_InfoLst individualDL_CCTrCH_InfoLst;
} NhuDL_CmnTransChInfomodeSpecificInfotdd;

typedef struct NhuDL_CmnTransChInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_CmnTransChInfomodeSpecificInfofdd fdd;
  NhuDL_CmnTransChInfomodeSpecificInfotdd tdd;
 } val;
} NhuDL_CmnTransChInfomodeSpecificInfo;

typedef struct NhuDL_CmnTransChInfo
{
 TknPres pres;
 NhuTFCS sccpch_TFCS;
 NhuDL_CmnTransChInfomodeSpecificInfo modeSpecificInfo;
} NhuDL_CmnTransChInfo;


typedef enum enumNhuDL_TrCH_Typ
{
 NhuDL_TrCH_TypdchEnum,
 NhuDL_TrCH_TypdschEnum
} EnumNhuDL_TrCH_Typ;
typedef TknU32 NhuDL_TrCH_Typ;

typedef struct NhuUL_TportChannelIdentity
{
 TknPres pres;
 NhuUL_TrCH_Typ ul_TportChannelTyp;
 NhuTportChannelIdentity ul_TportChannelIdentity;
} NhuUL_TportChannelIdentity;


typedef TknS32 NhuBLER_QualityValue;

typedef struct NhuQualityTgt
{
 TknPres pres;
 NhuBLER_QualityValue bler_QualityValue;
} NhuQualityTgt;


typedef enum enumNhuMessTyp
{
 NhuMessTyptransportFormatCombinationCntrlEnum
} EnumNhuMessTyp;
typedef TknU32 NhuMessTyp;

typedef struct NhuUL_CntrlledTrChLst
{
 TknU16 noComp;
 NhuTportChannelIdentity *member;
}NhuUL_CntrlledTrChLst;

typedef struct NhuTM_SignallingInfotm_SignallingModemode2
{
 TknPres pres;
 NhuUL_CntrlledTrChLst ul_controlledTrChLst;
} NhuTM_SignallingInfotm_SignallingModemode2;

typedef struct NhuTM_SignallingInfotm_SignallingMode
{
 TknU8 choice;
 union {
  NhuTM_SignallingInfotm_SignallingModemode2 mode2;
 } val;
} NhuTM_SignallingInfotm_SignallingMode;

typedef struct NhuTM_SignallingInfo
{
 TknPres pres;
 NhuMessTyp messTyp;
 NhuTM_SignallingInfotm_SignallingMode tm_SignallingMode;
} NhuTM_SignallingInfo;

typedef struct NhuDL_AddReconfTransChInfotfs_SignallingMode
{
 TknU8 choice;
 union {
  NhuTportFormatSet explicit_config;
  NhuUL_TportChannelIdentity sameAsULTrCH;
 } val;
} NhuDL_AddReconfTransChInfotfs_SignallingMode;

typedef struct NhuDL_AddReconfTransChInfo
{
 TknPres pres;
 NhuDL_TrCH_Typ dl_TportChannelTyp;
 NhuTportChannelIdentity dl_transportChannelIdentity;
 NhuDL_AddReconfTransChInfotfs_SignallingMode tfs_SignallingMode;
 NhuQualityTgt dch_QualityTgt;
 NhuTM_SignallingInfo dummy;
} NhuDL_AddReconfTransChInfo;

typedef struct NhuDL_AddReconfTransChInfoLst
{
 TknU16 noComp;
 NhuDL_AddReconfTransChInfo *member;
}NhuDL_AddReconfTransChInfoLst;

typedef struct NhuPreDefTransChCfg
{
 TknPres pres;
 NhuUL_CmnTransChInfo ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst ul_AddReconfTrChInfoLst;
 NhuDL_CmnTransChInfo dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst dl_TrChInfoLst;
} NhuPreDefTransChCfg;


typedef TknS32 NhuConstantValueTdd;

typedef struct NhuUL_DPCH_PowerCntrlInfoPredeffdd
{
 TknPres pres;
 NhuPowerCntrlAlgorithm powerCntrlAlgorithm;
} NhuUL_DPCH_PowerCntrlInfoPredeffdd;

typedef struct NhuUL_DPCH_PowerCntrlInfoPredeftdd
{
 TknPres pres;
 NhuConstantValueTdd dpch_ConstantValue;
} NhuUL_DPCH_PowerCntrlInfoPredeftdd;

typedef struct NhuUL_DPCH_PowerCntrlInfoPredef
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfoPredeffdd fdd;
  NhuUL_DPCH_PowerCntrlInfoPredeftdd tdd;
 } val;
} NhuUL_DPCH_PowerCntrlInfoPredef;


typedef enum enumNhuPuncturingLimit
{
 NhuPuncturingLimitpl0_40Enum,
 NhuPuncturingLimitpl0_44Enum,
 NhuPuncturingLimitpl0_48Enum,
 NhuPuncturingLimitpl0_52Enum,
 NhuPuncturingLimitpl0_56Enum,
 NhuPuncturingLimitpl0_60Enum,
 NhuPuncturingLimitpl0_64Enum,
 NhuPuncturingLimitpl0_68Enum,
 NhuPuncturingLimitpl0_72Enum,
 NhuPuncturingLimitpl0_76Enum,
 NhuPuncturingLimitpl0_80Enum,
 NhuPuncturingLimitpl0_84Enum,
 NhuPuncturingLimitpl0_88Enum,
 NhuPuncturingLimitpl0_92Enum,
 NhuPuncturingLimitpl0_96Enum,
 NhuPuncturingLimitpl1Enum
} EnumNhuPuncturingLimit;
typedef TknU32 NhuPuncturingLimit;


typedef enum enumNhuSecondInterleavingMode
{
 NhuSecondInterleavingModeframeRelatedEnum,
 NhuSecondInterleavingModetimeslotRelatedEnum
} EnumNhuSecondInterleavingMode;
typedef TknU32 NhuSecondInterleavingMode;


typedef enum enumNhuTFCI_Coding
{
 NhuTFCI_Codingtfci_bits_4Enum,
 NhuTFCI_Codingtfci_bits_8Enum,
 NhuTFCI_Codingtfci_bits_16Enum,
 NhuTFCI_Codingtfci_bits_32Enum
} EnumNhuTFCI_Coding;
typedef TknU32 NhuTFCI_Coding;


typedef TknU32 NhuRepetitionPeriodAndLengthrepetitionPeriod2;


typedef TknU32 NhuRepetitionPeriodAndLengthrepetitionPeriod4;


typedef TknU32 NhuRepetitionPeriodAndLengthrepetitionPeriod8;


typedef TknU32 NhuRepetitionPeriodAndLengthrepetitionPeriod16;


typedef TknU32 NhuRepetitionPeriodAndLengthrepetitionPeriod32;


typedef TknU32 NhuRepetitionPeriodAndLengthrepetitionPeriod64;

typedef struct NhuRepetitionPeriodAndLength
{
 TknU8 choice;
 union {
  NhuRepetitionPeriodAndLengthrepetitionPeriod2 repetitionPeriod2;
  NhuRepetitionPeriodAndLengthrepetitionPeriod4 repetitionPeriod4;
  NhuRepetitionPeriodAndLengthrepetitionPeriod8 repetitionPeriod8;
  NhuRepetitionPeriodAndLengthrepetitionPeriod16 repetitionPeriod16;
  NhuRepetitionPeriodAndLengthrepetitionPeriod32 repetitionPeriod32;
  NhuRepetitionPeriodAndLengthrepetitionPeriod64 repetitionPeriod64;
 } val;
} NhuRepetitionPeriodAndLength;

typedef struct NhuCmnTimeslotInfo
{
 TknPres pres;
 NhuSecondInterleavingMode secondInterleavingMode;
 NhuTFCI_Coding tfci_Coding;
 NhuPuncturingLimit puncturingLimit;
 NhuRepetitionPeriodAndLength repetitionPeriodAndLength;
} NhuCmnTimeslotInfo;


typedef TknU8 NhuUL_DPCH_InfoPredefmodeSpecificInfofddtfci_Existence;

typedef struct NhuUL_DPCH_InfoPredefmodeSpecificInfofdd
{
 TknPres pres;
 NhuUL_DPCH_InfoPredefmodeSpecificInfofddtfci_Existence tfci_Existence;
 NhuPuncturingLimit puncturingLimit;
} NhuUL_DPCH_InfoPredefmodeSpecificInfofdd;

typedef struct NhuUL_DPCH_InfoPredefmodeSpecificInfotdd
{
 TknPres pres;
 NhuCmnTimeslotInfo commonTimeslotInfo;
} NhuUL_DPCH_InfoPredefmodeSpecificInfotdd;

typedef struct NhuUL_DPCH_InfoPredefmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_DPCH_InfoPredefmodeSpecificInfofdd fdd;
  NhuUL_DPCH_InfoPredefmodeSpecificInfotdd tdd;
 } val;
} NhuUL_DPCH_InfoPredefmodeSpecificInfo;

typedef struct NhuUL_DPCH_InfoPredef
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfoPredef ul_DPCH_PowerCntrlInfo;
 NhuUL_DPCH_InfoPredefmodeSpecificInfo modeSpecificInfo;
} NhuUL_DPCH_InfoPredef;


typedef enum enumNhuPilotBits128
{
 NhuPilotBits128pb4Enum,
 NhuPilotBits128pb8Enum
} EnumNhuPilotBits128;
typedef TknU32 NhuPilotBits128;


typedef enum enumNhuPilotBits256
{
 NhuPilotBits256pb2Enum,
 NhuPilotBits256pb4Enum,
 NhuPilotBits256pb8Enum
} EnumNhuPilotBits256;
typedef TknU32 NhuPilotBits256;

typedef struct NhuSF512_AndPilot
{
 TknU8 choice;
 union {
  NhuPilotBits128 sfd128;
  NhuPilotBits256 sfd256;
 } val;
} NhuSF512_AndPilot;


typedef enum enumNhuPositionFixedOrFlexible
{
 NhuPositionFixedOrFlexiblefixedEnum,
 NhuPositionFixedOrFlexibleflexibleEnum
} EnumNhuPositionFixedOrFlexible;
typedef TknU32 NhuPositionFixedOrFlexible;


typedef TknU8 NhuDL_DPCH_InfoCmnPredefmodeSpecificInfofddtfci_Existence;

typedef struct NhuDL_DPCH_InfoCmnPredefmodeSpecificInfofdd
{
 TknPres pres;
 NhuSF512_AndPilot spreadingFactorAndPilot;
 NhuPositionFixedOrFlexible positionFixedOrFlexible;
 NhuDL_DPCH_InfoCmnPredefmodeSpecificInfofddtfci_Existence tfci_Existence;
} NhuDL_DPCH_InfoCmnPredefmodeSpecificInfofdd;

typedef struct NhuDL_DPCH_InfoCmnPredefmodeSpecificInfotdd
{
 TknPres pres;
 NhuCmnTimeslotInfo commonTimeslotInfo;
} NhuDL_DPCH_InfoCmnPredefmodeSpecificInfotdd;

typedef struct NhuDL_DPCH_InfoCmnPredefmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmnPredefmodeSpecificInfofdd fdd;
  NhuDL_DPCH_InfoCmnPredefmodeSpecificInfotdd tdd;
 } val;
} NhuDL_DPCH_InfoCmnPredefmodeSpecificInfo;

typedef struct NhuDL_DPCH_InfoCmnPredef
{
 TknPres pres;
 NhuDL_DPCH_InfoCmnPredefmodeSpecificInfo modeSpecificInfo;
} NhuDL_DPCH_InfoCmnPredef;

typedef struct NhuDL_CmnInfoPredef
{
 TknPres pres;
 NhuDL_DPCH_InfoCmnPredef dl_DPCH_InfoCmn;
} NhuDL_CmnInfoPredef;

typedef struct NhuPreDefPhyChCfg
{
 TknPres pres;
 NhuUL_DPCH_InfoPredef ul_DPCH_InfoPredef;
 NhuDL_CmnInfoPredef dl_CmnInfoPredef;
} NhuPreDefPhyChCfg;

typedef struct NhuPreDefRadioCfg
{
 TknPres pres;
 NhuPredefinedRB_Cfg predefinedRB_Cfg;
 NhuPreDefTransChCfg preDefTransChCfg;
 NhuPreDefPhyChCfg preDefPhyChCfg;
} NhuPreDefRadioCfg;


typedef enum enumNhuNumberOfTPC_Bits
{
 NhuNumberOfTPC_Bitstpc4Enum
} EnumNhuNumberOfTPC_Bits;
typedef TknU32 NhuNumberOfTPC_Bits;

typedef struct NhuUL_DPCH_InfoPredef_v770extmodeSpecificInfofdd
{
 TknPres pres;
 NhuNumberOfTPC_Bits numberOfTPC_Bits;
} NhuUL_DPCH_InfoPredef_v770extmodeSpecificInfofdd;

typedef struct NhuUL_DPCH_InfoPredef_v770extmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_DPCH_InfoPredef_v770extmodeSpecificInfofdd fdd;
 } val;
} NhuUL_DPCH_InfoPredef_v770extmodeSpecificInfo;

typedef struct NhuUL_DPCH_InfoPredef_v770ext
{
 TknPres pres;
 NhuUL_DPCH_InfoPredef_v770extmodeSpecificInfo modeSpecificInfo;
} NhuUL_DPCH_InfoPredef_v770ext;

typedef struct NhuPreDefPhyChCfg_v770ext
{
 TknPres pres;
 NhuUL_DPCH_InfoPredef_v770ext ul_DPCH_InfoPredef;
} NhuPreDefPhyChCfg_v770ext;

typedef struct NhuPreDefRadioCfg_v770ext
{
 TknPres pres;
 NhuPreDefPhyChCfg_v770ext preDefPhyChCfg;
} NhuPreDefRadioCfg_v770ext;


typedef enum enumNhuMAC_hs_WindowSize_r9
{
 NhuMAC_hs_WindowSize_r9mws4Enum,
 NhuMAC_hs_WindowSize_r9mws6Enum,
 NhuMAC_hs_WindowSize_r9mws8Enum,
 NhuMAC_hs_WindowSize_r9mws12Enum,
 NhuMAC_hs_WindowSize_r9mws16Enum,
 NhuMAC_hs_WindowSize_r9mws24Enum,
 NhuMAC_hs_WindowSize_r9mws32Enum,
 NhuMAC_hs_WindowSize_r9mw64Enum,
 NhuMAC_hs_WindowSize_r9mw128Enum
} EnumNhuMAC_hs_WindowSize_r9;
typedef TknU32 NhuMAC_hs_WindowSize_r9;

typedef struct NhuPreDefRadioCfg_v920ext
{
 TknPres pres;
 NhuMAC_hs_WindowSize_r9 mac_ehsWindowSize;
} NhuPreDefRadioCfg_v920ext;

typedef struct NhuPredefinedConfigStatusInfoother
{
 TknU8 choice;
 union {
  NhuPredefinedConfigValueTag storedWithDifferentValueTag;
 } val;
} NhuPredefinedConfigStatusInfoother;

typedef struct NhuPredefinedConfigStatusInfo
{
 TknU8 choice;
 union {
  NhuPredefinedConfigStatusInfoother other;
 } val;
} NhuPredefinedConfigStatusInfo;

typedef struct NhuPredefinedConfigStatusLst
{
 TknU16 noComp;
 NhuPredefinedConfigStatusInfo *member;
}NhuPredefinedConfigStatusLst;

typedef struct NhuPredefinedConfigValueTagLst
{
 TknU16 noComp;
 NhuPredefinedConfigValueTag *member;
}NhuPredefinedConfigValueTagLst;


typedef TknU32 NhuPredefinedConfigSetWithDifferentValueTagstartPosition;

typedef struct NhuPredefinedConfigSetWithDifferentValueTag
{
 TknPres pres;
 NhuPredefinedConfigSetWithDifferentValueTagstartPosition startPosition;
 NhuPredefinedConfigValueTagLst valueTagLst;
} NhuPredefinedConfigSetWithDifferentValueTag;

typedef struct NhuPredefinedConfigSetsWithDifferentValueTag
{
 TknU16 noComp;
 NhuPredefinedConfigSetWithDifferentValueTag *member;
}NhuPredefinedConfigSetsWithDifferentValueTag;

typedef struct NhuPredefinedConfigStatusLstVarSz
{
 TknU16 noComp;
 NhuPredefinedConfigStatusInfo *member;
}NhuPredefinedConfigStatusLstVarSz;

typedef struct NhuPredefinedConfigStatusLstComp
{
 TknPres pres;
 NhuPredefinedConfigSetsWithDifferentValueTag setsWithDifferentValueTag;
 NhuPredefinedConfigStatusLstVarSz otherEntries;
} NhuPredefinedConfigStatusLstComp;

typedef struct NhuRAB_Info
{
 TknPres pres;
 NhuRAB_Identity rab_Identity;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuNAS_Synchronisation_Indicator nas_Synchronisation_Indicator;
 NhuRe_EstablishmentTimer re_EstablishmentTimer;
} NhuRAB_Info;


typedef TknStrOSXL NhuMBMS_SessionIdentity;
typedef struct NhuRAB_Info_r6_ext
{
 TknPres pres;
 NhuMBMS_SessionIdentity mbms_SessionIdentity;
} NhuRAB_Info_r6_ext;


typedef TknStrOSXL NhuRAB_Info_v6b0extmbms_ServiceIdentity;
typedef struct NhuRAB_Info_v6b0ext
{
 TknPres pres;
 NhuRAB_Info_v6b0extmbms_ServiceIdentity mbms_ServiceIdentity;
} NhuRAB_Info_v6b0ext;

typedef struct NhuRAB_Info_r6
{
 TknPres pres;
 NhuRAB_Identity rab_Identity;
 NhuMBMS_SessionIdentity mbms_SessionIdentity;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuNAS_Synchronisation_Indicator nas_Synchronisation_Indicator;
 NhuRe_EstablishmentTimer re_EstablishmentTimer;
} NhuRAB_Info_r6;


typedef TknStrOSXL NhuRAB_Info_r7mbms_ServiceIdentity;
typedef struct NhuRAB_Info_r7
{
 TknPres pres;
 NhuRAB_Identity rab_Identity;
 NhuMBMS_SessionIdentity mbms_SessionIdentity;
 NhuRAB_Info_r7mbms_ServiceIdentity mbms_ServiceIdentity;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuNAS_Synchronisation_Indicator nas_Synchronisation_Indicator;
 NhuRe_EstablishmentTimer re_EstablishmentTimer;
} NhuRAB_Info_r7;

typedef struct NhuRAB_InfoLst
{
 TknU16 noComp;
 NhuRAB_Info *member;
}NhuRAB_InfoLst;

typedef struct NhuRAB_InfoLst_r6
{
 TknU16 noComp;
 NhuRAB_Info_r6 *member;
}NhuRAB_InfoLst_r6;

typedef struct NhuRAB_InfoReconfig
{
 TknPres pres;
 NhuRAB_Identity rab_Identity;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuNAS_Synchronisation_Indicator nas_Synchronisation_Indicator;
} NhuRAB_InfoReconfig;

typedef struct NhuRAB_InfoReconfigLst
{
 TknU16 noComp;
 NhuRAB_InfoReconfig *member;
}NhuRAB_InfoReconfigLst;

typedef struct NhuRAB_InfoReconfig_r8
{
 TknPres pres;
 NhuRAB_Identity rab_Identity;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuNAS_Synchronisation_Indicator nas_Synchronisation_Indicator;
 NhuCS_HSPA_Info cs_HSPA_Info;
} NhuRAB_InfoReconfig_r8;

typedef struct NhuRAB_InfoReconfigLst_r8
{
 TknU16 noComp;
 NhuRAB_InfoReconfig_r8 *member;
}NhuRAB_InfoReconfigLst_r8;

typedef struct NhuRAB_Info_Post
{
 TknPres pres;
 NhuRAB_Identity rab_Identity;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuNAS_Synchronisation_Indicator nas_Synchronisation_Indicator;
} NhuRAB_Info_Post;


typedef TknStrOSXL NhuRAB_InfoMBMSPtpmbms_ServiceIdentity;
typedef struct NhuRAB_InfoMBMSPtp
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRAB_InfoMBMSPtpmbms_ServiceIdentity mbms_ServiceIdentity;
 NhuMBMS_SessionIdentity mbms_SessionIdentity;
} NhuRAB_InfoMBMSPtp;

typedef struct NhuRAB_InfoMBMSPtpLst
{
 TknU16 noComp;
 NhuRAB_InfoMBMSPtp *member;
}NhuRAB_InfoMBMSPtpLst;

typedef struct NhuRAB_InfoSetup
{
 TknPres pres;
 NhuRAB_Info rab_Info;
 NhuRB_InfoSetupLst rb_InfoSetupLst;
} NhuRAB_InfoSetup;

typedef struct NhuRB_InfoSetup_r4
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_Info_r4 pdcp_Info;
 NhuRLC_InfoChoice rlc_InfoChoice;
 NhuRB_MappingInfo rb_MappingInfo;
} NhuRB_InfoSetup_r4;

typedef struct NhuRB_InfoSetupLst_r4
{
 TknU16 noComp;
 NhuRB_InfoSetup_r4 *member;
}NhuRB_InfoSetupLst_r4;

typedef struct NhuRAB_InfoSetup_r4
{
 TknPres pres;
 NhuRAB_Info rab_Info;
 NhuRB_InfoSetupLst_r4 rb_InfoSetupLst;
} NhuRAB_InfoSetup_r4;


typedef TknU8 NhuRLC_Info_r5rlc_OneSidedReEst;

typedef struct NhuRLC_Info_r5
{
 TknPres pres;
 NhuUL_RLC_Mode ul_RLC_Mode;
 NhuDL_RLC_Mode_r5 dl_RLC_Mode;
 NhuRLC_Info_r5rlc_OneSidedReEst rlc_OneSidedReEst;
} NhuRLC_Info_r5;

typedef struct NhuRLC_InfoChoice_r5
{
 TknU8 choice;
 union {
  NhuRLC_Info_r5 rlc_Info;
  NhuRB_Identity same_as_RB;
 } val;
} NhuRLC_InfoChoice_r5;

typedef struct NhuRB_MappingOption_r5
{
 TknPres pres;
 NhuUL_LogChannelMappings ul_LogChannelMappings;
 NhuDL_LogChannelMappingLst_r5 dl_LogChannelMappingLst;
} NhuRB_MappingOption_r5;

typedef struct NhuRB_MappingInfo_r5
{
 TknU16 noComp;
 NhuRB_MappingOption_r5 *member;
}NhuRB_MappingInfo_r5;

typedef struct NhuRB_InfoSetup_r5
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_Info_r4 pdcp_Info;
 NhuRLC_InfoChoice_r5 rlc_InfoChoice;
 NhuRB_MappingInfo_r5 rb_MappingInfo;
} NhuRB_InfoSetup_r5;

typedef struct NhuRB_InfoSetupLst_r5
{
 TknU16 noComp;
 NhuRB_InfoSetup_r5 *member;
}NhuRB_InfoSetupLst_r5;

typedef struct NhuRAB_InfoSetup_r5
{
 TknPres pres;
 NhuRAB_Info rab_Info;
 NhuRB_InfoSetupLst_r5 rb_InfoSetupLst;
} NhuRAB_InfoSetup_r5;

typedef struct NhuRAB_InfoSetup_r6_ext
{
 TknPres pres;
 NhuRAB_Info_r6_ext rab_Info_r6_ext;
} NhuRAB_InfoSetup_r6_ext;


typedef TknU8 NhuRLC_Info_r6rlc_OneSidedReEst;


typedef enum enumNhuRLC_Info_r6altE_bitInterpretation
{
 NhuRLC_Info_r6altE_bitInterpretationtrueEnum
} EnumNhuRLC_Info_r6altE_bitInterpretation;
typedef TknU32 NhuRLC_Info_r6altE_bitInterpretation;

typedef struct NhuRLC_Info_r6
{
 TknPres pres;
 NhuUL_RLC_Mode ul_RLC_Mode;
 NhuDL_RLC_Mode_r6 dl_RLC_Mode;
 NhuRLC_Info_r6rlc_OneSidedReEst rlc_OneSidedReEst;
 NhuRLC_Info_r6altE_bitInterpretation altE_bitInterpretation;
} NhuRLC_Info_r6;

typedef struct NhuRLC_InfoChoice_r6
{
 TknU8 choice;
 union {
  NhuRLC_Info_r6 rlc_Info;
  NhuRB_Identity same_as_RB;
 } val;
} NhuRLC_InfoChoice_r6;


typedef TknU32 NhuE_DCH_MAC_d_FlowIdentity;


typedef NhuOctetModeRLC_SizeInfoTyp1 NhuRLC_PDU_Size;
typedef struct NhuRLC_PDU_SizeLst
{
 TknU16 noComp;
 NhuRLC_PDU_Size *member;
}NhuRLC_PDU_SizeLst;

typedef struct NhuUL_LogChannelMapping_r6ul_TrCH_Typdch_rach_uschrlc_SizeLst
{
 TknU8 choice;
 union {
  NhuRLC_SizeExplicitLst explicitLst;
 } val;
} NhuUL_LogChannelMapping_r6ul_TrCH_Typdch_rach_uschrlc_SizeLst;

typedef struct NhuUL_LogChannelMapping_r6ul_TrCH_Typdch_rach_usch
{
 TknPres pres;
 NhuUL_TportChannelTyp ul_TportChannelTyp;
 NhuLogChannelIdentity logicalChannelIdentity;
 NhuUL_LogChannelMapping_r6ul_TrCH_Typdch_rach_uschrlc_SizeLst rlc_SizeLst;
} NhuUL_LogChannelMapping_r6ul_TrCH_Typdch_rach_usch;


typedef TknU8 NhuUL_LogChannelMapping_r6ul_TrCH_Type_dchincludeInSchedulingInfo;

typedef struct NhuUL_LogChannelMapping_r6ul_TrCH_Type_dch
{
 TknPres pres;
 NhuLogChannelIdentity logicalChannelIdentity;
 NhuE_DCH_MAC_d_FlowIdentity e_DCH_MAC_d_FlowIdentity;
 NhuDDI ddi;
 NhuRLC_PDU_SizeLst rlc_PDU_SizeLst;
 NhuUL_LogChannelMapping_r6ul_TrCH_Type_dchincludeInSchedulingInfo includeInSchedulingInfo;
} NhuUL_LogChannelMapping_r6ul_TrCH_Type_dch;

typedef struct NhuUL_LogChannelMapping_r6ul_TrCH_Typ
{
 TknU8 choice;
 union {
  NhuUL_LogChannelMapping_r6ul_TrCH_Typdch_rach_usch dch_rach_usch;
  NhuUL_LogChannelMapping_r6ul_TrCH_Type_dch e_dch;
 } val;
} NhuUL_LogChannelMapping_r6ul_TrCH_Typ;

typedef struct NhuUL_LogChannelMapping_r6
{
 TknPres pres;
 NhuUL_LogChannelMapping_r6ul_TrCH_Typ ul_TrCH_Typ;
 NhuMAC_LogChannelPriority mac_LogChannelPriority;
} NhuUL_LogChannelMapping_r6;


typedef TknU8 NhuUL_LogChannelMappingLst_r6rlc_LogChannelMappingIndicator;

typedef struct NhuUL_LogChannelMappingLst_r6ul_LogChannelMapping
{
 TknU16 noComp;
 NhuUL_LogChannelMapping_r6 *member;
}NhuUL_LogChannelMappingLst_r6ul_LogChannelMapping;

typedef struct NhuUL_LogChannelMappingLst_r6
{
 TknPres pres;
 NhuUL_LogChannelMappingLst_r6rlc_LogChannelMappingIndicator rlc_LogChannelMappingIndicator;
 NhuUL_LogChannelMappingLst_r6ul_LogChannelMapping ul_LogChannelMapping;
} NhuUL_LogChannelMappingLst_r6;

typedef struct NhuUL_LogChannelMappings_r6
{
 TknU8 choice;
 union {
  NhuUL_LogChannelMapping_r6 oneLogChannel;
  NhuUL_LogChannelMappingLst_r6 twoLogChannels;
 } val;
} NhuUL_LogChannelMappings_r6;

typedef struct NhuRB_MappingOption_r6
{
 TknPres pres;
 NhuUL_LogChannelMappings_r6 ul_LogChannelMappings;
 NhuDL_LogChannelMappingLst_r5 dl_LogChannelMappingLst;
} NhuRB_MappingOption_r6;

typedef struct NhuRB_MappingInfo_r6
{
 TknU16 noComp;
 NhuRB_MappingOption_r6 *member;
}NhuRB_MappingInfo_r6;

typedef struct NhuRB_InfoSetup_r6
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_Info_r4 pdcp_Info;
 NhuRLC_InfoChoice_r6 rlc_InfoChoice;
 NhuRB_MappingInfo_r6 rb_MappingInfo;
} NhuRB_InfoSetup_r6;

typedef struct NhuRB_InfoSetupLst_r6
{
 TknU16 noComp;
 NhuRB_InfoSetup_r6 *member;
}NhuRB_InfoSetupLst_r6;

typedef struct NhuRAB_InfoSetup_r6
{
 TknPres pres;
 NhuRAB_Info_r6 rab_Info;
 NhuRB_InfoSetupLst_r6 rb_InfoSetupLst;
} NhuRAB_InfoSetup_r6;

typedef struct NhuRAB_InfoSetup_v6b0ext
{
 TknPres pres;
 NhuRAB_Info_v6b0ext rab_Info_v6b0ext;
} NhuRAB_InfoSetup_v6b0ext;


typedef TknU8 NhuRLC_Info_r7rlc_OneSidedReEst;


typedef enum enumNhuRLC_Info_r7altE_bitInterpretation
{
 NhuRLC_Info_r7altE_bitInterpretationtrueEnum
} EnumNhuRLC_Info_r7altE_bitInterpretation;
typedef TknU32 NhuRLC_Info_r7altE_bitInterpretation;


typedef enum enumNhuRLC_Info_r7useSpecialValueOfHEField
{
 NhuRLC_Info_r7useSpecialValueOfHEFieldtrueEnum
} EnumNhuRLC_Info_r7useSpecialValueOfHEField;
typedef TknU32 NhuRLC_Info_r7useSpecialValueOfHEField;

typedef struct NhuRLC_Info_r7
{
 TknPres pres;
 NhuUL_RLC_Mode ul_RLC_Mode;
 NhuDL_RLC_Mode_r7 dl_RLC_Mode;
 NhuRLC_Info_r7rlc_OneSidedReEst rlc_OneSidedReEst;
 NhuRLC_Info_r7altE_bitInterpretation altE_bitInterpretation;
 NhuRLC_Info_r7useSpecialValueOfHEField useSpecialValueOfHEField;
} NhuRLC_Info_r7;

typedef struct NhuRLC_InfoChoice_r7
{
 TknU8 choice;
 union {
  NhuRLC_Info_r7 rlc_Info;
  NhuRB_Identity same_as_RB;
 } val;
} NhuRLC_InfoChoice_r7;

typedef struct NhuRB_MappingOption_r7
{
 TknPres pres;
 NhuUL_LogChannelMappings_r6 ul_LogChannelMappings;
 NhuDL_LogChannelMappingLst_r7 dl_LogChannelMappingLst;
} NhuRB_MappingOption_r7;

typedef struct NhuRB_MappingInfo_r7
{
 TknU16 noComp;
 NhuRB_MappingOption_r7 *member;
}NhuRB_MappingInfo_r7;

typedef struct NhuRB_InfoSetup_r7
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_Info_r4 pdcp_Info;
 NhuRLC_InfoChoice_r7 rlc_InfoChoice;
 NhuRB_MappingInfo_r7 rb_MappingInfo;
} NhuRB_InfoSetup_r7;

typedef struct NhuRB_InfoSetupLst_r7
{
 TknU16 noComp;
 NhuRB_InfoSetup_r7 *member;
}NhuRB_InfoSetupLst_r7;

typedef struct NhuRAB_InfoSetup_r7
{
 TknPres pres;
 NhuRAB_Info_r7 rab_Info;
 NhuRB_InfoSetupLst_r7 rb_InfoSetupLst;
} NhuRAB_InfoSetup_r7;


typedef enum enumNhuRLC_PDU_SizeConstraintlengthIndicatorSize
{
 NhuRLC_PDU_SizeConstraintlengthIndicatorSizesize7Enum,
 NhuRLC_PDU_SizeConstraintlengthIndicatorSizesize15Enum
} EnumNhuRLC_PDU_SizeConstraintlengthIndicatorSize;
typedef TknU32 NhuRLC_PDU_SizeConstraintlengthIndicatorSize;


typedef TknU32 NhuRLC_PDU_SizeConstraintminRLC_PDU_Size;


typedef TknU32 NhuRLC_PDU_SizeConstraintlargestRLC_PDU_Size;

typedef struct NhuRLC_PDU_SizeConstraint
{
 TknPres pres;
 NhuRLC_PDU_SizeConstraintlengthIndicatorSize lengthIndicatorSize;
 NhuRLC_PDU_SizeConstraintminRLC_PDU_Size minRLC_PDU_Size;
 NhuRLC_PDU_SizeConstraintlargestRLC_PDU_Size largestRLC_PDU_Size;
} NhuRLC_PDU_SizeConstraint;

typedef struct NhuUL_LogChannelMapping_r8ul_TrCH_Typdch_rach_uschrlc_SizeLst
{
 TknU8 choice;
 union {
  NhuRLC_SizeExplicitLst explicitLst;
 } val;
} NhuUL_LogChannelMapping_r8ul_TrCH_Typdch_rach_uschrlc_SizeLst;

typedef struct NhuUL_LogChannelMapping_r8ul_TrCH_Typdch_rach_usch
{
 TknPres pres;
 NhuUL_TportChannelTyp ul_TportChannelTyp;
 NhuLogChannelIdentity logicalChannelIdentity;
 NhuUL_LogChannelMapping_r8ul_TrCH_Typdch_rach_uschrlc_SizeLst rlc_SizeLst;
} NhuUL_LogChannelMapping_r8ul_TrCH_Typdch_rach_usch;

typedef struct NhuUL_LogChannelMapping_r8ul_TrCH_Type_dchrlc_PDU_SizefixedSize
{
 TknPres pres;
 NhuDDI ddi;
 NhuRLC_PDU_SizeLst rlc_PDU_SizeLst;
} NhuUL_LogChannelMapping_r8ul_TrCH_Type_dchrlc_PDU_SizefixedSize;

typedef struct NhuUL_LogChannelMapping_r8ul_TrCH_Type_dchrlc_PDU_Size
{
 TknU8 choice;
 union {
  NhuUL_LogChannelMapping_r8ul_TrCH_Type_dchrlc_PDU_SizefixedSize fixedSize;
  NhuRLC_PDU_SizeConstraint flexibleSize;
 } val;
} NhuUL_LogChannelMapping_r8ul_TrCH_Type_dchrlc_PDU_Size;


typedef TknU8 NhuUL_LogChannelMapping_r8ul_TrCH_Type_dchincludeInSchedulingInfo;

typedef struct NhuUL_LogChannelMapping_r8ul_TrCH_Type_dch
{
 TknPres pres;
 NhuLogChannelIdentity logicalChannelIdentity;
 NhuE_DCH_MAC_d_FlowIdentity e_DCH_MAC_d_FlowIdentity;
 NhuUL_LogChannelMapping_r8ul_TrCH_Type_dchrlc_PDU_Size rlc_PDU_Size;
 NhuUL_LogChannelMapping_r8ul_TrCH_Type_dchincludeInSchedulingInfo includeInSchedulingInfo;
} NhuUL_LogChannelMapping_r8ul_TrCH_Type_dch;

typedef struct NhuUL_LogChannelMapping_r8ul_TrCH_Typ
{
 TknU8 choice;
 union {
  NhuUL_LogChannelMapping_r8ul_TrCH_Typdch_rach_usch dch_rach_usch;
  NhuUL_LogChannelMapping_r8ul_TrCH_Type_dch e_dch;
 } val;
} NhuUL_LogChannelMapping_r8ul_TrCH_Typ;

typedef struct NhuUL_LogChannelMapping_r8
{
 TknPres pres;
 NhuUL_LogChannelMapping_r8ul_TrCH_Typ ul_TrCH_Typ;
 NhuMAC_LogChannelPriority mac_LogChannelPriority;
} NhuUL_LogChannelMapping_r8;


typedef TknU8 NhuUL_LogChannelMappingLst_r8rlc_LogChannelMappingIndicator;

typedef struct NhuUL_LogChannelMappingLst_r8ul_LogChannelMapping
{
 TknU16 noComp;
 NhuUL_LogChannelMapping_r8 *member;
}NhuUL_LogChannelMappingLst_r8ul_LogChannelMapping;

typedef struct NhuUL_LogChannelMappingLst_r8
{
 TknPres pres;
 NhuUL_LogChannelMappingLst_r8rlc_LogChannelMappingIndicator rlc_LogChannelMappingIndicator;
 NhuUL_LogChannelMappingLst_r8ul_LogChannelMapping ul_LogChannelMapping;
} NhuUL_LogChannelMappingLst_r8;

typedef struct NhuUL_LogChannelMappings_r8
{
 TknU8 choice;
 union {
  NhuUL_LogChannelMapping_r8 oneLogChannel;
  NhuUL_LogChannelMappingLst_r8 twoLogChannels;
 } val;
} NhuUL_LogChannelMappings_r8;

typedef struct NhuRB_MappingOption_r8
{
 TknPres pres;
 NhuUL_LogChannelMappings_r8 ul_LogChannelMappings;
 NhuDL_LogChannelMappingLst_r7 dl_LogChannelMappingLst;
} NhuRB_MappingOption_r8;

typedef struct NhuRB_MappingInfo_r8
{
 TknU16 noComp;
 NhuRB_MappingOption_r8 *member;
}NhuRB_MappingInfo_r8;

typedef struct NhuRB_InfoSetup_r8
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_Info_r4 pdcp_Info;
 NhuRLC_InfoChoice_r7 rlc_InfoChoice;
 NhuRB_MappingInfo_r8 rb_MappingInfo;
} NhuRB_InfoSetup_r8;

typedef struct NhuRB_InfoSetupLst_r8
{
 TknU16 noComp;
 NhuRB_InfoSetup_r8 *member;
}NhuRB_InfoSetupLst_r8;

typedef struct NhuRAB_InfoSetup_r8
{
 TknPres pres;
 NhuRAB_Info_r7 rab_Info;
 NhuCS_HSPA_Info cs_HSPA_Info;
 NhuRAB_InfoReplace rab_InfoReplace;
 NhuRB_InfoSetupLst_r8 rb_InfoSetupLst;
} NhuRAB_InfoSetup_r8;

typedef struct NhuRAB_InfoSetup_v820ext
{
 TknPres pres;
 NhuCS_HSPA_Info cs_HSPA_Info;
} NhuRAB_InfoSetup_v820ext;

typedef struct NhuRAB_InfoSetupLst
{
 TknU16 noComp;
 NhuRAB_InfoSetup *member;
}NhuRAB_InfoSetupLst;

typedef struct NhuRAB_InfoSetupLst_r4
{
 TknU16 noComp;
 NhuRAB_InfoSetup_r4 *member;
}NhuRAB_InfoSetupLst_r4;

typedef struct NhuRAB_InfoSetupLst_r5
{
 TknU16 noComp;
 NhuRAB_InfoSetup_r5 *member;
}NhuRAB_InfoSetupLst_r5;

typedef struct NhuRAB_InfoSetupLst_r6
{
 TknU16 noComp;
 NhuRAB_InfoSetup_r6 *member;
}NhuRAB_InfoSetupLst_r6;

typedef struct NhuRAB_InfoSetupLst_r6_ext
{
 TknU16 noComp;
 NhuRAB_InfoSetup_r6_ext *member;
}NhuRAB_InfoSetupLst_r6_ext;

typedef struct NhuRAB_InfoSetupLst_v6b0ext
{
 TknU16 noComp;
 NhuRAB_InfoSetup_v6b0ext *member;
}NhuRAB_InfoSetupLst_v6b0ext;

typedef struct NhuRAB_InfoSetupLst_r7
{
 TknU16 noComp;
 NhuRAB_InfoSetup_r7 *member;
}NhuRAB_InfoSetupLst_r7;

typedef struct NhuRAB_InfoSetupLst_r8
{
 TknU16 noComp;
 NhuRAB_InfoSetup_r8 *member;
}NhuRAB_InfoSetupLst_r8;

typedef struct NhuRAB_InfoSetupLst_v820ext
{
 TknU16 noComp;
 NhuRAB_InfoSetup_v820ext *member;
}NhuRAB_InfoSetupLst_v820ext;

typedef struct NhuRB_COUNT_C_Info
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuCOUNT_C count_C_UL;
 NhuCOUNT_C count_C_DL;
} NhuRB_COUNT_C_Info;

typedef struct NhuRB_COUNT_C_InfoLst
{
 TknU16 noComp;
 NhuRB_COUNT_C_Info *member;
}NhuRB_COUNT_C_InfoLst;

typedef struct NhuRB_COUNT_C_MSB_Info
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuCOUNT_C_MSB count_C_MSB_UL;
 NhuCOUNT_C_MSB count_C_MSB_DL;
} NhuRB_COUNT_C_MSB_Info;

typedef struct NhuRB_COUNT_C_MSB_InfoLst
{
 TknU16 noComp;
 NhuRB_COUNT_C_MSB_Info *member;
}NhuRB_COUNT_C_MSB_InfoLst;

typedef struct NhuRB_IdentityLst
{
 TknU16 noComp;
 NhuRB_Identity *member;
}NhuRB_IdentityLst;

typedef struct NhuRB_InfoAffected
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRB_MappingInfo rb_MappingInfo;
} NhuRB_InfoAffected;

typedef struct NhuRB_InfoAffected_r5
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRB_MappingInfo_r5 rb_MappingInfo;
} NhuRB_InfoAffected_r5;

typedef struct NhuRB_InfoAffected_r6
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRB_MappingInfo_r6 rb_MappingInfo;
} NhuRB_InfoAffected_r6;

typedef struct NhuRB_InfoAffected_r7
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRB_MappingInfo_r7 rb_MappingInfo;
} NhuRB_InfoAffected_r7;

typedef struct NhuRB_InfoAffected_r8
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRB_MappingInfo_r8 rb_MappingInfo;
} NhuRB_InfoAffected_r8;

typedef struct NhuRB_InfoAffectedLst
{
 TknU16 noComp;
 NhuRB_InfoAffected *member;
}NhuRB_InfoAffectedLst;

typedef struct NhuRB_InfoAffectedLst_r5
{
 TknU16 noComp;
 NhuRB_InfoAffected_r5 *member;
}NhuRB_InfoAffectedLst_r5;

typedef struct NhuRB_InfoAffectedLst_r6
{
 TknU16 noComp;
 NhuRB_InfoAffected_r6 *member;
}NhuRB_InfoAffectedLst_r6;

typedef struct NhuRB_InfoAffectedLst_r7
{
 TknU16 noComp;
 NhuRB_InfoAffected_r7 *member;
}NhuRB_InfoAffectedLst_r7;

typedef struct NhuRB_InfoAffectedLst_r8
{
 TknU16 noComp;
 NhuRB_InfoAffected_r8 *member;
}NhuRB_InfoAffectedLst_r8;

typedef struct NhuRB_InfoChanged_r6rb_Change
{
 TknU8 choice;
 union {
  NhuRB_Identity re_mapToDefaultRb;
 } val;
} NhuRB_InfoChanged_r6rb_Change;

typedef struct NhuRB_InfoChanged_r6
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRB_InfoChanged_r6rb_Change rb_Change;
} NhuRB_InfoChanged_r6;

typedef struct NhuRB_InfoChangedLst_r6
{
 TknU16 noComp;
 NhuRB_InfoChanged_r6 *member;
}NhuRB_InfoChangedLst_r6;


typedef enum enumNhuRB_StopContinue
{
 NhuRB_StopContinuestopRBEnum,
 NhuRB_StopContinuecontinueRBEnum
} EnumNhuRB_StopContinue;
typedef TknU32 NhuRB_StopContinue;

typedef struct NhuRB_InfoReconfig
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_InfoReconfig pdcp_Info;
 NhuPDCP_SN_Info pdcp_SN_Info;
 NhuRLC_Info rlc_Info;
 NhuRB_MappingInfo rb_MappingInfo;
 NhuRB_StopContinue rb_StopContinue;
} NhuRB_InfoReconfig;

typedef struct NhuRB_InfoReconfig_r4
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_InfoReconfig_r4 pdcp_Info;
 NhuPDCP_SN_Info pdcp_SN_Info;
 NhuRLC_Info rlc_Info;
 NhuRB_MappingInfo rb_MappingInfo;
 NhuRB_StopContinue rb_StopContinue;
} NhuRB_InfoReconfig_r4;

typedef struct NhuRB_InfoReconfig_r5
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_InfoReconfig_r4 pdcp_Info;
 NhuPDCP_SN_Info pdcp_SN_Info;
 NhuRLC_Info_r5 rlc_Info;
 NhuRB_MappingInfo_r5 rb_MappingInfo;
 NhuRB_StopContinue rb_StopContinue;
} NhuRB_InfoReconfig_r5;

typedef struct NhuRB_InfoReconfig_r6
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_InfoReconfig_r4 pdcp_Info;
 NhuPDCP_SN_Info pdcp_SN_Info;
 NhuRLC_Info_r6 rlc_Info;
 NhuRB_MappingInfo_r6 rb_MappingInfo;
 NhuRB_StopContinue rb_StopContinue;
} NhuRB_InfoReconfig_r6;

typedef struct NhuRB_InfoReconfig_r7
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_InfoReconfig_r4 pdcp_Info;
 NhuPDCP_SN_Info pdcp_SN_Info;
 NhuRLC_Info_r7 rlc_Info;
 NhuRB_MappingInfo_r7 rb_MappingInfo;
 NhuRB_StopContinue rb_StopContinue;
} NhuRB_InfoReconfig_r7;

typedef struct NhuRB_InfoReconfig_r8
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuPDCP_InfoReconfig_r4 pdcp_Info;
 NhuPDCP_SN_Info pdcp_SN_Info;
 NhuRLC_Info_r7 rlc_Info;
 NhuRB_MappingInfo_r8 rb_MappingInfo;
 NhuRB_StopContinue rb_StopContinue;
} NhuRB_InfoReconfig_r8;

typedef struct NhuRB_InfoReconfigLst
{
 TknU16 noComp;
 NhuRB_InfoReconfig *member;
}NhuRB_InfoReconfigLst;

typedef struct NhuRB_InfoReconfigLst_r4
{
 TknU16 noComp;
 NhuRB_InfoReconfig_r4 *member;
}NhuRB_InfoReconfigLst_r4;

typedef struct NhuRB_InfoReconfigLst_r5
{
 TknU16 noComp;
 NhuRB_InfoReconfig_r5 *member;
}NhuRB_InfoReconfigLst_r5;

typedef struct NhuRB_InfoReconfigLst_r6
{
 TknU16 noComp;
 NhuRB_InfoReconfig_r6 *member;
}NhuRB_InfoReconfigLst_r6;

typedef struct NhuRB_InfoReconfigLst_r7
{
 TknU16 noComp;
 NhuRB_InfoReconfig_r7 *member;
}NhuRB_InfoReconfigLst_r7;

typedef struct NhuRB_InfoReconfigLst_r8
{
 TknU16 noComp;
 NhuRB_InfoReconfig_r8 *member;
}NhuRB_InfoReconfigLst_r8;

typedef struct NhuRB_InfoRlsLst
{
 TknU16 noComp;
 NhuRB_Identity *member;
}NhuRB_InfoRlsLst;


typedef enum enumNhuTimerOSD_r6
{
 NhuTimerOSD_r6ms40Enum,
 NhuTimerOSD_r6ms80Enum,
 NhuTimerOSD_r6ms120Enum,
 NhuTimerOSD_r6ms160Enum,
 NhuTimerOSD_r6ms240Enum,
 NhuTimerOSD_r6ms320Enum,
 NhuTimerOSD_r6ms480Enum,
 NhuTimerOSD_r6ms640Enum,
 NhuTimerOSD_r6ms960Enum,
 NhuTimerOSD_r6ms1280Enum,
 NhuTimerOSD_r6ms1920Enum,
 NhuTimerOSD_r6ms2560Enum,
 NhuTimerOSD_r6ms3840Enum,
 NhuTimerOSD_r6ms5120Enum
} EnumNhuTimerOSD_r6;
typedef TknU32 NhuTimerOSD_r6;


typedef enum enumNhuWindowSizeOSD_r6
{
 NhuWindowSizeOSD_r6ws8Enum,
 NhuWindowSizeOSD_r6ws16Enum,
 NhuWindowSizeOSD_r6ws32Enum,
 NhuWindowSizeOSD_r6ws40Enum,
 NhuWindowSizeOSD_r6ws48Enum,
 NhuWindowSizeOSD_r6ws56Enum,
 NhuWindowSizeOSD_r6ws64Enum
} EnumNhuWindowSizeOSD_r6;
typedef TknU32 NhuWindowSizeOSD_r6;

typedef struct NhuUM_RLC_OutOSeqDlvry_Info_r6
{
 TknPres pres;
 NhuTimerOSD_r6 timer_OSD;
 NhuWindowSizeOSD_r6 windowSize_OSD;
} NhuUM_RLC_OutOSeqDlvry_Info_r6;

typedef struct NhuRLC_Info_MCCH_r6
{
 TknPres pres;
 NhuDL_UM_RLC_LI_size dl_UM_RLC_LI_size;
 NhuUM_RLC_OutOSeqDlvry_Info_r6 dl_UM_RLC_OutOSeqDlvry_Info;
} NhuRLC_Info_MCCH_r6;

typedef struct NhuRLC_Info_MSCH_r6
{
 TknPres pres;
 NhuDL_UM_RLC_LI_size dl_UM_RLC_LI_size;
} NhuRLC_Info_MSCH_r6;


typedef enum enumNhuTimerDAR_r6
{
 NhuTimerDAR_r6ms40Enum,
 NhuTimerDAR_r6ms80Enum,
 NhuTimerDAR_r6ms120Enum,
 NhuTimerDAR_r6ms160Enum,
 NhuTimerDAR_r6ms240Enum,
 NhuTimerDAR_r6ms320Enum,
 NhuTimerDAR_r6ms480Enum,
 NhuTimerDAR_r6ms640Enum,
 NhuTimerDAR_r6ms960Enum,
 NhuTimerDAR_r6ms1280Enum,
 NhuTimerDAR_r6ms1920Enum,
 NhuTimerDAR_r6ms2560Enum,
 NhuTimerDAR_r6ms3840Enum,
 NhuTimerDAR_r6ms5120Enum
} EnumNhuTimerDAR_r6;
typedef TknU32 NhuTimerDAR_r6;


typedef enum enumNhuWindowSizeDAR_r6
{
 NhuWindowSizeDAR_r6ws4Enum,
 NhuWindowSizeDAR_r6ws8Enum,
 NhuWindowSizeDAR_r6ws16Enum,
 NhuWindowSizeDAR_r6ws32Enum,
 NhuWindowSizeDAR_r6ws40Enum,
 NhuWindowSizeDAR_r6ws48Enum,
 NhuWindowSizeDAR_r6ws56Enum,
 NhuWindowSizeDAR_r6ws64Enum
} EnumNhuWindowSizeDAR_r6;
typedef TknU32 NhuWindowSizeDAR_r6;

typedef struct NhuUM_RLC_DuplAvoid_Reord_Info_r6
{
 TknPres pres;
 NhuTimerDAR_r6 timer_DAR;
 NhuWindowSizeDAR_r6 widowSize_DAR;
} NhuUM_RLC_DuplAvoid_Reord_Info_r6;

typedef struct NhuRLC_Info_MTCH_r6
{
 TknPres pres;
 NhuDL_UM_RLC_LI_size dl_UM_RLC_LI_size;
 NhuUM_RLC_DuplAvoid_Reord_Info_r6 dl_UM_RLC_DuplAvoid_Reord_Info;
} NhuRLC_Info_MTCH_r6;

typedef struct NhuSRB_InfoSetup_r5
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRLC_InfoChoice_r5 rlc_InfoChoice;
 NhuRB_MappingInfo_r5 rb_MappingInfo;
} NhuSRB_InfoSetup_r5;

typedef struct NhuSRB_InfoSetup_r6
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRLC_InfoChoice_r6 rlc_InfoChoice;
 NhuRB_MappingInfo_r6 rb_MappingInfo;
} NhuSRB_InfoSetup_r6;

typedef struct NhuSRB_InfoSetup_r7
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRLC_InfoChoice_r7 rlc_InfoChoice;
 NhuRB_MappingInfo_r7 rb_MappingInfo;
} NhuSRB_InfoSetup_r7;

typedef struct NhuSRB_InfoSetup_r8
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRLC_InfoChoice_r7 rlc_InfoChoice;
 NhuRB_MappingInfo_r8 rb_MappingInfo;
} NhuSRB_InfoSetup_r8;

typedef struct NhuSRB_InfoSetupLst_r5
{
 TknU16 noComp;
 NhuSRB_InfoSetup_r5 *member;
}NhuSRB_InfoSetupLst_r5;

typedef struct NhuSRB_InfoSetupLst_r6
{
 TknU16 noComp;
 NhuSRB_InfoSetup_r6 *member;
}NhuSRB_InfoSetupLst_r6;

typedef struct NhuSRB_InfoSetupLst_r7
{
 TknU16 noComp;
 NhuSRB_InfoSetup_r7 *member;
}NhuSRB_InfoSetupLst_r7;

typedef struct NhuSRB_InfoSetupLst_r8
{
 TknU16 noComp;
 NhuSRB_InfoSetup_r8 *member;
}NhuSRB_InfoSetupLst_r8;

typedef struct NhuSRB_InfoSetupLst2
{
 TknU16 noComp;
 NhuSRB_InfoSetup *member;
}NhuSRB_InfoSetupLst2;

typedef struct NhuSRB_InfoSetupLst2_r6
{
 TknU16 noComp;
 NhuSRB_InfoSetup_r6 *member;
}NhuSRB_InfoSetupLst2_r6;

typedef struct NhuSRB_InfoSetupLst2_r7
{
 TknU16 noComp;
 NhuSRB_InfoSetup_r7 *member;
}NhuSRB_InfoSetupLst2_r7;

typedef struct NhuSRB_InfoSetupLst2_r8
{
 TknU16 noComp;
 NhuSRB_InfoSetup_r8 *member;
}NhuSRB_InfoSetupLst2_r8;

typedef struct NhuUL_CounterSynchronisationInfo
{
 TknPres pres;
 NhuRB_WithPDCP_InfoLst rB_WithPDCP_InfoLst;
 NhuSTARTLst startLst;
} NhuUL_CounterSynchronisationInfo;


typedef enum enumNhuT1_RlsTimer
{
 NhuT1_RlsTimerrt10Enum,
 NhuT1_RlsTimerrt20Enum,
 NhuT1_RlsTimerrt30Enum,
 NhuT1_RlsTimerrt40Enum,
 NhuT1_RlsTimerrt50Enum,
 NhuT1_RlsTimerrt60Enum,
 NhuT1_RlsTimerrt70Enum,
 NhuT1_RlsTimerrt80Enum,
 NhuT1_RlsTimerrt90Enum,
 NhuT1_RlsTimerrt100Enum,
 NhuT1_RlsTimerrt120Enum,
 NhuT1_RlsTimerrt140Enum,
 NhuT1_RlsTimerrt160Enum,
 NhuT1_RlsTimerrt200Enum,
 NhuT1_RlsTimerrt300Enum,
 NhuT1_RlsTimerrt400Enum
} EnumNhuT1_RlsTimer;
typedef TknU32 NhuT1_RlsTimer;


typedef enum enumNhuMAC_hs_WindowSize
{
 NhuMAC_hs_WindowSizemws4Enum,
 NhuMAC_hs_WindowSizemws6Enum,
 NhuMAC_hs_WindowSizemws8Enum,
 NhuMAC_hs_WindowSizemws12Enum,
 NhuMAC_hs_WindowSizemws16Enum,
 NhuMAC_hs_WindowSizemws24Enum,
 NhuMAC_hs_WindowSizemws32Enum
} EnumNhuMAC_hs_WindowSize;
typedef TknU32 NhuMAC_hs_WindowSize;


typedef TknU32 NhuMAC_d_PDUsizeInfomac_d_PDU_Size;


typedef TknU32 NhuMAC_d_PDUsizeInfomac_d_PDU_Idx;

typedef struct NhuMAC_d_PDUsizeInfo
{
 TknPres pres;
 NhuMAC_d_PDUsizeInfomac_d_PDU_Size mac_d_PDU_Size;
 NhuMAC_d_PDUsizeInfomac_d_PDU_Idx mac_d_PDU_Idx;
} NhuMAC_d_PDUsizeInfo;

typedef struct NhuMAC_d_PDU_SizeInfo_Lst
{
 TknU16 noComp;
 NhuMAC_d_PDUsizeInfo *member;
}NhuMAC_d_PDU_SizeInfo_Lst;


typedef TknU32 NhuMAC_hs_AddReconfQueuemac_hsQueueId;

typedef struct NhuMAC_hs_AddReconfQueue
{
 TknPres pres;
 NhuMAC_hs_AddReconfQueuemac_hsQueueId mac_hsQueueId;
 NhuMAC_d_FlowIdentity mac_dFlowId;
 NhuT1_RlsTimer reorderingRlsTimer;
 NhuMAC_hs_WindowSize mac_hsWindowSize;
 NhuMAC_d_PDU_SizeInfo_Lst mac_d_PDU_SizeInfo_Lst;
} NhuMAC_hs_AddReconfQueue;

typedef struct NhuMAC_hs_AddReconfQueue_Lst
{
 TknU16 noComp;
 NhuMAC_hs_AddReconfQueue *member;
}NhuMAC_hs_AddReconfQueue_Lst;


typedef TknU32 NhuMAC_hs_DelQueuemac_hsQueueId;

typedef struct NhuMAC_hs_DelQueue
{
 TknPres pres;
 NhuMAC_hs_DelQueuemac_hsQueueId mac_hsQueueId;
} NhuMAC_hs_DelQueue;

typedef struct NhuMAC_hs_DelQueue_Lst
{
 TknU16 noComp;
 NhuMAC_hs_DelQueue *member;
}NhuMAC_hs_DelQueue_Lst;

typedef struct NhuAddOrReconfMAC_dFlow
{
 TknPres pres;
 NhuMAC_hs_AddReconfQueue_Lst mac_hs_AddReconfQueue_Lst;
 NhuMAC_hs_DelQueue_Lst mac_hs_DelQueue_Lst;
} NhuAddOrReconfMAC_dFlow;


typedef enum enumNhuTreset_ResetTimer
{
 NhuTreset_ResetTimerrt1Enum,
 NhuTreset_ResetTimerrt2Enum,
 NhuTreset_ResetTimerrt3Enum,
 NhuTreset_ResetTimerrt4Enum
} EnumNhuTreset_ResetTimer;
typedef TknU32 NhuTreset_ResetTimer;

typedef struct NhuMAC_ehs_AddReconfReordQ
{
 TknPres pres;
 NhuMAC_ehs_QueueId mac_ehs_QueueId;
 NhuT1_RlsTimer reorderingRlsTimer;
 NhuTreset_ResetTimer reorderingResetTimer;
 NhuMAC_hs_WindowSize mac_ehsWindowSize;
} NhuMAC_ehs_AddReconfReordQ;

typedef struct NhuMAC_ehs_AddReconfReordQ_Lst
{
 TknU16 noComp;
 NhuMAC_ehs_AddReconfReordQ *member;
}NhuMAC_ehs_AddReconfReordQ_Lst;

typedef struct NhuMAC_ehs_DelReordQ
{
 TknPres pres;
 NhuMAC_ehs_QueueId mac_ehs_QueueId;
} NhuMAC_ehs_DelReordQ;

typedef struct NhuMAC_ehs_DelReordQ_Lst
{
 TknU16 noComp;
 NhuMAC_ehs_DelReordQ *member;
}NhuMAC_ehs_DelReordQ_Lst;

typedef struct NhuAddOrReconfMAC_ehs_ReordQ
{
 TknPres pres;
 NhuMAC_ehs_AddReconfReordQ_Lst mac_ehs_AddReconfQueue_Lst;
 NhuMAC_ehs_DelReordQ_Lst dummy;
} NhuAddOrReconfMAC_ehs_ReordQ;

typedef struct NhuMAC_ehs_AddReconfReordQ_r9
{
 TknPres pres;
 NhuMAC_ehs_QueueId mac_ehs_QueueId;
 NhuT1_RlsTimer reorderingRlsTimer;
 NhuTreset_ResetTimer reorderingResetTimer;
 NhuMAC_hs_WindowSize_r9 mac_ehsWindowSize;
} NhuMAC_ehs_AddReconfReordQ_r9;

typedef struct NhuMAC_ehs_AddReconfReordQ_Lst_r9
{
 TknU16 noComp;
 NhuMAC_ehs_AddReconfReordQ_r9 *member;
}NhuMAC_ehs_AddReconfReordQ_Lst_r9;

typedef struct NhuAddOrReconfMAC_ehs_ReordQ_r9
{
 TknPres pres;
 NhuMAC_ehs_AddReconfReordQ_Lst_r9 mac_ehs_AddReconfQueue_Lst;
} NhuAddOrReconfMAC_ehs_ReordQ_r9;


typedef enum enumNhuMAC_hs_WindowSize_r11
{
 NhuMAC_hs_WindowSize_r11mws4Enum,
 NhuMAC_hs_WindowSize_r11mws6Enum,
 NhuMAC_hs_WindowSize_r11mws8Enum,
 NhuMAC_hs_WindowSize_r11mws12Enum,
 NhuMAC_hs_WindowSize_r11mws16Enum,
 NhuMAC_hs_WindowSize_r11mws24Enum,
 NhuMAC_hs_WindowSize_r11mws32Enum,
 NhuMAC_hs_WindowSize_r11mw64Enum,
 NhuMAC_hs_WindowSize_r11mw128Enum,
 NhuMAC_hs_WindowSize_r11mw256Enum
} EnumNhuMAC_hs_WindowSize_r11;
typedef TknU32 NhuMAC_hs_WindowSize_r11;

typedef struct NhuMAC_ehs_AddReconfReordQ_r11
{
 TknPres pres;
 NhuMAC_ehs_QueueId mac_ehs_QueueId;
 NhuT1_RlsTimer reorderingRlsTimer;
 NhuTreset_ResetTimer reorderingResetTimer;
 NhuMAC_hs_WindowSize_r11 mac_ehsWindowSize;
} NhuMAC_ehs_AddReconfReordQ_r11;

typedef struct NhuMAC_ehs_AddReconfReordQ_Lst_r11
{
 TknU16 noComp;
 NhuMAC_ehs_AddReconfReordQ_r11 *member;
}NhuMAC_ehs_AddReconfReordQ_Lst_r11;

typedef struct NhuAddOrReconfMAC_ehs_ReordQ_r11
{
 TknPres pres;
 NhuMAC_ehs_AddReconfReordQ_Lst_r11 mac_ehs_AddReconfQueue_Lst;
} NhuAddOrReconfMAC_ehs_ReordQ_r11;


typedef TknU32 NhuE_DCH_MAC_d_FlowPowerOffset;


typedef TknU32 NhuE_DCH_MAC_d_FlowMaxRetrans;


typedef TknStrBSXL NhuE_DCH_MAC_d_FlowMultiplexingLst;

typedef enum enumNhuE_DCH_MAC_d_FlowRetransTimer
{
 NhuE_DCH_MAC_d_FlowRetransTimerms10Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms15Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms20Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms25Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms30Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms35Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms40Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms45Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms50Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms55Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms60Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms65Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms70Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms75Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms80Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms85Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms90Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms95Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms100Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms110Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms120Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms140Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms160Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms200Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms240Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms280Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms320Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms400Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms480Enum,
 NhuE_DCH_MAC_d_FlowRetransTimerms560Enum
} EnumNhuE_DCH_MAC_d_FlowRetransTimer;
typedef TknU32 NhuE_DCH_MAC_d_FlowRetransTimer;

typedef struct NhuCmn_E_DCH_MAC_d_Flow
{
 TknPres pres;
 NhuE_DCH_MAC_d_FlowIdentity mac_d_FlowIdentity;
 NhuE_DCH_MAC_d_FlowPowerOffset mac_d_FlowPowerOffset;
 NhuE_DCH_MAC_d_FlowMaxRetrans mac_d_FlowMaxRetrans;
 NhuE_DCH_MAC_d_FlowMultiplexingLst mac_d_FlowMultiplexingLst;
 NhuE_DCH_MAC_d_FlowRetransTimer e_dch_mac_d_flow_retransmission_timer;
} NhuCmn_E_DCH_MAC_d_Flow;

typedef struct NhuCmn_E_DCH_MAC_d_FlowLst
{
 TknU16 noComp;
 NhuCmn_E_DCH_MAC_d_Flow *member;
}NhuCmn_E_DCH_MAC_d_FlowLst;

typedef struct NhuCmnTransChTFS_LCRtti
{
 TknU8 choice;
 union {
  NhuCmnDynamicTF_InfoLst tti5;
  NhuCmnDynamicTF_InfoLst tti10;
  NhuCmnDynamicTF_InfoLst tti20;
  NhuCmnDynamicTF_InfoLst tti40;
  NhuCmnDynamicTF_InfoLst tti80;
  NhuCmnDynamicTF_InfoLst_DynamicTTI dynamic;
 } val;
} NhuCmnTransChTFS_LCRtti;

typedef struct NhuCmnTransChTFS_LCR
{
 TknPres pres;
 NhuCmnTransChTFS_LCRtti tti;
 NhuSemistaticTF_Info semistaticTF_Info;
} NhuCmnTransChTFS_LCR;

typedef struct NhuCmn_MAC_ehs_ReorderingQueue
{
 TknPres pres;
 NhuMAC_ehs_QueueId mac_ehs_QueueId;
 NhuT1_RlsTimer t1_RlsTimer;
 NhuTreset_ResetTimer reorderingResetTimer;
 NhuMAC_hs_WindowSize mac_ehsWindowSize;
} NhuCmn_MAC_ehs_ReorderingQueue;

typedef struct NhuCmn_MAC_ehs_ReorderingQueueLst
{
 TknU16 noComp;
 NhuCmn_MAC_ehs_ReorderingQueue *member;
}NhuCmn_MAC_ehs_ReorderingQueueLst;


typedef TknU32 NhuCPCH_SetID;

typedef struct NhuDL_AddReconfTransChInfo2tfs_SignallingMode
{
 TknU8 choice;
 union {
  NhuTportFormatSet explicit_config;
  NhuUL_TportChannelIdentity sameAsULTrCH;
 } val;
} NhuDL_AddReconfTransChInfo2tfs_SignallingMode;

typedef struct NhuDL_AddReconfTransChInfo2
{
 TknPres pres;
 NhuDL_TrCH_Typ dl_TportChannelTyp;
 NhuTportChannelIdentity transportChannelIdentity;
 NhuDL_AddReconfTransChInfo2tfs_SignallingMode tfs_SignallingMode;
 NhuQualityTgt qualityTgt;
} NhuDL_AddReconfTransChInfo2;

typedef struct NhuDL_AddReconfTransChInfo2Lst
{
 TknU16 noComp;
 NhuDL_AddReconfTransChInfo2 *member;
}NhuDL_AddReconfTransChInfo2Lst;

typedef struct NhuDL_AddReconfTransChInfo_r4tfs_SignallingMode
{
 TknU8 choice;
 union {
  NhuTportFormatSet explicit_config;
  NhuUL_TportChannelIdentity sameAsULTrCH;
 } val;
} NhuDL_AddReconfTransChInfo_r4tfs_SignallingMode;

typedef struct NhuDL_AddReconfTransChInfo_r4
{
 TknPres pres;
 NhuDL_TrCH_Typ dl_TportChannelTyp;
 NhuTportChannelIdentity dl_transportChannelIdentity;
 NhuDL_AddReconfTransChInfo_r4tfs_SignallingMode tfs_SignallingMode;
 NhuQualityTgt dch_QualityTgt;
} NhuDL_AddReconfTransChInfo_r4;

typedef struct NhuDL_AddReconfTransChInfoLst_r4
{
 TknU16 noComp;
 NhuDL_AddReconfTransChInfo_r4 *member;
}NhuDL_AddReconfTransChInfoLst_r4;

typedef struct NhuDL_TrCH_TypId1_r5
{
 TknU8 choice;
 union {
  NhuTportChannelIdentity dch;
  NhuTportChannelIdentity dsch;
 } val;
} NhuDL_TrCH_TypId1_r5;


typedef enum enumNhuHARQMemorySize
{
 NhuHARQMemorySizehms800Enum,
 NhuHARQMemorySizehms1600Enum,
 NhuHARQMemorySizehms2400Enum,
 NhuHARQMemorySizehms3200Enum,
 NhuHARQMemorySizehms4000Enum,
 NhuHARQMemorySizehms4800Enum,
 NhuHARQMemorySizehms5600Enum,
 NhuHARQMemorySizehms6400Enum,
 NhuHARQMemorySizehms7200Enum,
 NhuHARQMemorySizehms8000Enum,
 NhuHARQMemorySizehms8800Enum,
 NhuHARQMemorySizehms9600Enum,
 NhuHARQMemorySizehms10400Enum,
 NhuHARQMemorySizehms11200Enum,
 NhuHARQMemorySizehms12000Enum,
 NhuHARQMemorySizehms12800Enum,
 NhuHARQMemorySizehms13600Enum,
 NhuHARQMemorySizehms14400Enum,
 NhuHARQMemorySizehms15200Enum,
 NhuHARQMemorySizehms16000Enum,
 NhuHARQMemorySizehms17600Enum,
 NhuHARQMemorySizehms19200Enum,
 NhuHARQMemorySizehms20800Enum,
 NhuHARQMemorySizehms22400Enum,
 NhuHARQMemorySizehms24000Enum,
 NhuHARQMemorySizehms25600Enum,
 NhuHARQMemorySizehms27200Enum,
 NhuHARQMemorySizehms28800Enum,
 NhuHARQMemorySizehms30400Enum,
 NhuHARQMemorySizehms32000Enum,
 NhuHARQMemorySizehms36000Enum,
 NhuHARQMemorySizehms40000Enum,
 NhuHARQMemorySizehms44000Enum,
 NhuHARQMemorySizehms48000Enum,
 NhuHARQMemorySizehms52000Enum,
 NhuHARQMemorySizehms56000Enum,
 NhuHARQMemorySizehms60000Enum,
 NhuHARQMemorySizehms64000Enum,
 NhuHARQMemorySizehms68000Enum,
 NhuHARQMemorySizehms72000Enum,
 NhuHARQMemorySizehms76000Enum,
 NhuHARQMemorySizehms80000Enum,
 NhuHARQMemorySizehms88000Enum,
 NhuHARQMemorySizehms96000Enum,
 NhuHARQMemorySizehms104000Enum,
 NhuHARQMemorySizehms112000Enum,
 NhuHARQMemorySizehms120000Enum,
 NhuHARQMemorySizehms128000Enum,
 NhuHARQMemorySizehms136000Enum,
 NhuHARQMemorySizehms144000Enum,
 NhuHARQMemorySizehms152000Enum,
 NhuHARQMemorySizehms160000Enum,
 NhuHARQMemorySizehms176000Enum,
 NhuHARQMemorySizehms192000Enum,
 NhuHARQMemorySizehms208000Enum,
 NhuHARQMemorySizehms224000Enum,
 NhuHARQMemorySizehms240000Enum,
 NhuHARQMemorySizehms256000Enum,
 NhuHARQMemorySizehms272000Enum,
 NhuHARQMemorySizehms288000Enum,
 NhuHARQMemorySizehms304000Enum
} EnumNhuHARQMemorySize;
typedef TknU32 NhuHARQMemorySize;


typedef TknU32 NhuHARQ_InfonumberOfProcesses;

typedef struct NhuHARQ_InfomemoryPartitioningexplicit
{
 TknU16 noComp;
 NhuHARQMemorySize *member;
}NhuHARQ_InfomemoryPartitioningexplicit;

typedef struct NhuHARQ_InfomemoryPartitioning
{
 TknU8 choice;
 union {
  NhuHARQ_InfomemoryPartitioningexplicit explict;
 } val;
} NhuHARQ_InfomemoryPartitioning;

typedef struct NhuHARQ_Info
{
 TknPres pres;
 NhuHARQ_InfonumberOfProcesses numberOfProcesses;
 NhuHARQ_InfomemoryPartitioning memoryPartitioning;
} NhuHARQ_Info;

typedef struct NhuHSDSCH_Info
{
 TknPres pres;
 NhuHARQ_Info harqInfo;
 NhuAddOrReconfMAC_dFlow addOrReconfMAC_dFlow;
} NhuHSDSCH_Info;

typedef struct NhuDL_AddReconfTransChInfo_r5tfs_SignallingMode
{
 TknU8 choice;
 union {
  NhuTportFormatSet explicit_config;
  NhuUL_TportChannelIdentity sameAsULTrCH;
  NhuHSDSCH_Info hsdsch;
 } val;
} NhuDL_AddReconfTransChInfo_r5tfs_SignallingMode;

typedef struct NhuDL_AddReconfTransChInfo_r5
{
 TknPres pres;
 NhuDL_TrCH_TypId1_r5 dl_TportChannelTyp;
 NhuDL_AddReconfTransChInfo_r5tfs_SignallingMode tfs_SignallingMode;
 NhuQualityTgt dch_QualityTgt;
} NhuDL_AddReconfTransChInfo_r5;

typedef struct NhuDL_AddReconfTransChInfoLst_r5
{
 TknU16 noComp;
 NhuDL_AddReconfTransChInfo_r5 *member;
}NhuDL_AddReconfTransChInfoLst_r5;


typedef enum enumNhuHARQ_Info_r7numberOfProcesses
{
 NhuHARQ_Info_r7numberOfProcessesn1Enum,
 NhuHARQ_Info_r7numberOfProcessesn2Enum,
 NhuHARQ_Info_r7numberOfProcessesn3Enum,
 NhuHARQ_Info_r7numberOfProcessesn4Enum,
 NhuHARQ_Info_r7numberOfProcessesn5Enum,
 NhuHARQ_Info_r7numberOfProcessesn6Enum,
 NhuHARQ_Info_r7numberOfProcessesn7Enum,
 NhuHARQ_Info_r7numberOfProcessesn8Enum,
 NhuHARQ_Info_r7numberOfProcessesn12Enum,
 NhuHARQ_Info_r7numberOfProcessesn14Enum,
 NhuHARQ_Info_r7numberOfProcessesn16Enum
} EnumNhuHARQ_Info_r7numberOfProcesses;
typedef TknU32 NhuHARQ_Info_r7numberOfProcesses;

typedef struct NhuHARQ_Info_r7memoryPartitioningexplicitmemorySize
{
 TknU16 noComp;
 NhuHARQMemorySize *member;
}NhuHARQ_Info_r7memoryPartitioningexplicitmemorySize;

typedef struct NhuHARQ_Info_r7memoryPartitioningexplicitadditionalMemorySizesForMIMO
{
 TknU16 noComp;
 NhuHARQMemorySize *member;
}NhuHARQ_Info_r7memoryPartitioningexplicitadditionalMemorySizesForMIMO;

typedef struct NhuHARQ_Info_r7memoryPartitioningexplicit
{
 TknPres pres;
 NhuHARQ_Info_r7memoryPartitioningexplicitmemorySize memorySize;
 NhuHARQ_Info_r7memoryPartitioningexplicitadditionalMemorySizesForMIMO additionalMemorySizesForMIMO;
} NhuHARQ_Info_r7memoryPartitioningexplicit;

typedef struct NhuHARQ_Info_r7memoryPartitioning
{
 TknU8 choice;
 union {
  NhuHARQ_Info_r7memoryPartitioningexplicit explict;
 } val;
} NhuHARQ_Info_r7memoryPartitioning;

typedef struct NhuHARQ_Info_r7
{
 TknPres pres;
 NhuHARQ_Info_r7numberOfProcesses numberOfProcesses;
 NhuHARQ_Info_r7memoryPartitioning memoryPartitioning;
} NhuHARQ_Info_r7;

typedef struct NhuHSDSCH_Info_r7dl_MAC_HeaderTyp
{
 TknU8 choice;
 union {
  NhuAddOrReconfMAC_dFlow mac_hs;
  NhuAddOrReconfMAC_ehs_ReordQ mac_ehs;
 } val;
} NhuHSDSCH_Info_r7dl_MAC_HeaderTyp;

typedef struct NhuHSDSCH_Info_r7
{
 TknPres pres;
 NhuHARQ_Info_r7 harqInfo;
 NhuHSDSCH_Info_r7dl_MAC_HeaderTyp dl_MAC_HeaderTyp;
} NhuHSDSCH_Info_r7;

typedef struct NhuDL_AddReconfTransChInfo_r7tfs_SignallingMode
{
 TknU8 choice;
 union {
  NhuTportFormatSet explicit_config;
  NhuUL_TportChannelIdentity sameAsULTrCH;
  NhuHSDSCH_Info_r7 hsdsch;
 } val;
} NhuDL_AddReconfTransChInfo_r7tfs_SignallingMode;

typedef struct NhuDL_AddReconfTransChInfo_r7
{
 TknPres pres;
 NhuDL_TrCH_TypId1_r5 dl_TportChannelTyp;
 NhuDL_AddReconfTransChInfo_r7tfs_SignallingMode tfs_SignallingMode;
 NhuQualityTgt dch_QualityTgt;
} NhuDL_AddReconfTransChInfo_r7;

typedef struct NhuDL_AddReconfTransChInfoLst_r7
{
 TknU16 noComp;
 NhuDL_AddReconfTransChInfo_r7 *member;
}NhuDL_AddReconfTransChInfoLst_r7;

typedef struct NhuHSDSCH_Info_r9dl_MAC_HeaderTyp
{
 TknU8 choice;
 union {
  NhuAddOrReconfMAC_dFlow mac_hs;
  NhuAddOrReconfMAC_ehs_ReordQ_r9 mac_ehs;
 } val;
} NhuHSDSCH_Info_r9dl_MAC_HeaderTyp;

typedef struct NhuHSDSCH_Info_r9
{
 TknPres pres;
 NhuHARQ_Info_r7 harqInfo;
 NhuHSDSCH_Info_r9dl_MAC_HeaderTyp dl_MAC_HeaderTyp;
} NhuHSDSCH_Info_r9;

typedef struct NhuDL_AddReconfTransChInfo_r9tfs_SignallingMode
{
 TknU8 choice;
 union {
  NhuTportFormatSet explicit_config;
  NhuUL_TportChannelIdentity sameAsULTrCH;
  NhuHSDSCH_Info_r9 hsdsch;
 } val;
} NhuDL_AddReconfTransChInfo_r9tfs_SignallingMode;

typedef struct NhuDL_AddReconfTransChInfo_r9
{
 TknPres pres;
 NhuDL_TrCH_TypId1_r5 dl_TportChannelTyp;
 NhuDL_AddReconfTransChInfo_r9tfs_SignallingMode tfs_SignallingMode;
 NhuQualityTgt dch_QualityTgt;
} NhuDL_AddReconfTransChInfo_r9;

typedef struct NhuDL_AddReconfTransChInfoLst_r9
{
 TknU16 noComp;
 NhuDL_AddReconfTransChInfo_r9 *member;
}NhuDL_AddReconfTransChInfoLst_r9;

typedef struct NhuHSDSCH_Info_r11dl_MAC_HeaderTyp
{
 TknU8 choice;
 union {
  NhuAddOrReconfMAC_dFlow mac_hs;
  NhuAddOrReconfMAC_ehs_ReordQ_r11 mac_ehs;
 } val;
} NhuHSDSCH_Info_r11dl_MAC_HeaderTyp;

typedef struct NhuHSDSCH_Info_r11
{
 TknPres pres;
 NhuHARQ_Info_r7 harqInfo;
 NhuHSDSCH_Info_r11dl_MAC_HeaderTyp dl_MAC_HeaderTyp;
} NhuHSDSCH_Info_r11;

typedef struct NhuDL_AddReconfTransChInfo_r11tfs_SignallingMode
{
 TknU8 choice;
 union {
  NhuTportFormatSet explicit_config;
  NhuUL_TportChannelIdentity sameAsULTrCH;
  NhuHSDSCH_Info_r11 hsdsch;
 } val;
} NhuDL_AddReconfTransChInfo_r11tfs_SignallingMode;

typedef struct NhuDL_AddReconfTransChInfo_r11
{
 TknPres pres;
 NhuDL_TrCH_TypId1_r5 dl_TportChannelTyp;
 NhuDL_AddReconfTransChInfo_r11tfs_SignallingMode tfs_SignallingMode;
 NhuQualityTgt dch_QualityTgt;
} NhuDL_AddReconfTransChInfo_r11;

typedef struct NhuDL_AddReconfTransChInfoLst_r11
{
 TknU16 noComp;
 NhuDL_AddReconfTransChInfo_r11 *member;
}NhuDL_AddReconfTransChInfoLst_r11;

typedef struct NhuDL_CmnTransChInfo_r4modeSpecificInfofdddl_Paramsdl_DCH_TFCS
{
 TknPres pres;
 NhuTFCS tfcs;
} NhuDL_CmnTransChInfo_r4modeSpecificInfofdddl_Paramsdl_DCH_TFCS;

typedef struct NhuDL_CmnTransChInfo_r4modeSpecificInfofdddl_Params
{
 TknU8 choice;
 union {
  NhuDL_CmnTransChInfo_r4modeSpecificInfofdddl_Paramsdl_DCH_TFCS dl_DCH_TFCS;
 } val;
} NhuDL_CmnTransChInfo_r4modeSpecificInfofdddl_Params;

typedef struct NhuDL_CmnTransChInfo_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuDL_CmnTransChInfo_r4modeSpecificInfofdddl_Params dl_Params;
} NhuDL_CmnTransChInfo_r4modeSpecificInfofdd;

typedef struct NhuDL_CmnTransChInfo_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuIvdualDL_CCTrCH_InfoLst individualDL_CCTrCH_InfoLst;
} NhuDL_CmnTransChInfo_r4modeSpecificInfotdd;

typedef struct NhuDL_CmnTransChInfo_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_CmnTransChInfo_r4modeSpecificInfofdd fdd;
  NhuDL_CmnTransChInfo_r4modeSpecificInfotdd tdd;
 } val;
} NhuDL_CmnTransChInfo_r4modeSpecificInfo;

typedef struct NhuDL_CmnTransChInfo_r4
{
 TknPres pres;
 NhuTFCS sccpch_TFCS;
 NhuDL_CmnTransChInfo_r4modeSpecificInfo modeSpecificInfo;
} NhuDL_CmnTransChInfo_r4;

typedef struct NhuDL_TportChannelIdentity
{
 TknPres pres;
 NhuDL_TrCH_Typ dl_TportChannelTyp;
 NhuTportChannelIdentity dl_TportChannelIdentity;
} NhuDL_TportChannelIdentity;

typedef struct NhuDL_DeletedTransChInfoLst
{
 TknU16 noComp;
 NhuDL_TportChannelIdentity *member;
}NhuDL_DeletedTransChInfoLst;

typedef struct NhuDL_TrCH_TypId2_r5
{
 TknU8 choice;
 union {
  NhuTportChannelIdentity dch;
  NhuTportChannelIdentity dsch;
  NhuMAC_d_FlowIdentity hsdsch;
 } val;
} NhuDL_TrCH_TypId2_r5;

typedef struct NhuDL_TportChannelIdentity_r5
{
 TknPres pres;
 NhuDL_TrCH_TypId2_r5 dl_TportChannelTyp;
} NhuDL_TportChannelIdentity_r5;

typedef struct NhuDL_DeletedTransChInfoLst_r5
{
 TknU16 noComp;
 NhuDL_TportChannelIdentity_r5 *member;
}NhuDL_DeletedTransChInfoLst_r5;

typedef struct NhuDL_TrCH_TypId2_r7hsdsch
{
 TknU8 choice;
 union {
  NhuMAC_d_FlowIdentity mac_hs;
  NhuMAC_ehs_QueueId mac_ehs;
 } val;
} NhuDL_TrCH_TypId2_r7hsdsch;

typedef struct NhuDL_TrCH_TypId2_r7
{
 TknU8 choice;
 union {
  NhuTportChannelIdentity dch;
  NhuTportChannelIdentity dsch;
  NhuDL_TrCH_TypId2_r7hsdsch hsdsch;
 } val;
} NhuDL_TrCH_TypId2_r7;

typedef struct NhuDL_TportChannelIdentity_r7
{
 TknPres pres;
 NhuDL_TrCH_TypId2_r7 dl_TportChannelTyp;
} NhuDL_TportChannelIdentity_r7;

typedef struct NhuDL_DeletedTransChInfoLst_r7
{
 TknU16 noComp;
 NhuDL_TportChannelIdentity_r7 *member;
}NhuDL_DeletedTransChInfoLst_r7;


typedef TknU32 NhuDRAC_ClassIdentity;


typedef TknU32 NhuTransmissionTimeValidity;


typedef TknU32 NhuTimeDurationBeforeRetry;

typedef struct NhuDRAC_StaticInfo
{
 TknPres pres;
 NhuTransmissionTimeValidity transmissionTimeValidity;
 NhuTimeDurationBeforeRetry timeDurationBeforeRetry;
 NhuDRAC_ClassIdentity drac_ClassIdentity;
} NhuDRAC_StaticInfo;

typedef struct NhuDRAC_StaticInfoLst
{
 TknU16 noComp;
 NhuDRAC_StaticInfo *member;
}NhuDRAC_StaticInfoLst;


typedef TknU32 NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTypnon_ScheduledTransGrantInfomaxMAC_e_PDUContents;


typedef TknStrBSXL NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTypnon_ScheduledTransGrantInfoms2_NonSchedTransmGrantHARQAlloc;
typedef struct NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTypnon_ScheduledTransGrantInfo
{
 TknPres pres;
 NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTypnon_ScheduledTransGrantInfomaxMAC_e_PDUContents maxMAC_e_PDUContents;
 NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTypnon_ScheduledTransGrantInfoms2_NonSchedTransmGrantHARQAlloc ms2_NonSchedTransmGrantHARQAlloc;
} NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTypnon_ScheduledTransGrantInfo;

typedef struct NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTyp
{
 TknU8 choice;
 union {
  NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTypnon_ScheduledTransGrantInfo non_ScheduledTransGrantInfo;
 } val;
} NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTyp;

typedef struct NhuE_DCH_AddReconf_MAC_d_Flow
{
 TknPres pres;
 NhuE_DCH_MAC_d_FlowIdentity mac_d_FlowIdentity;
 NhuE_DCH_MAC_d_FlowPowerOffset mac_d_FlowPowerOffset;
 NhuE_DCH_MAC_d_FlowMaxRetrans mac_d_FlowMaxRetrans;
 NhuE_DCH_MAC_d_FlowMultiplexingLst mac_d_FlowMultiplexingLst;
 NhuE_DCH_AddReconf_MAC_d_FlowtransmissionGrantTyp transmissionGrantTyp;
} NhuE_DCH_AddReconf_MAC_d_Flow;


typedef TknU32 NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfofddmaxMAC_e_PDUContents;


typedef TknStrBSXL NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfofddms2_NonSchedTransmGrantHARQAlloc;
typedef struct NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfofddmaxMAC_e_PDUContents maxMAC_e_PDUContents;
 NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfofddms2_NonSchedTransmGrantHARQAlloc ms2_NonSchedTransmGrantHARQAlloc;
} NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfofdd;

typedef struct NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfofdd fdd;
 } val;
} NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfo;

typedef struct NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfo
{
 TknPres pres;
 NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfomodeSpecificInfo modeSpecificInfo;
} NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfo;

typedef struct NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTyp
{
 TknU8 choice;
 union {
  NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTypnon_ScheduledTransGrantInfo non_ScheduledTransGrantInfo;
 } val;
} NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTyp;

typedef struct NhuE_DCH_AddReconf_MAC_d_Flow_r7
{
 TknPres pres;
 NhuE_DCH_MAC_d_FlowIdentity mac_d_FlowIdentity;
 NhuE_DCH_MAC_d_FlowPowerOffset mac_d_FlowPowerOffset;
 NhuE_DCH_MAC_d_FlowMaxRetrans mac_d_FlowMaxRetrans;
 NhuE_DCH_MAC_d_FlowRetransTimer mac_d_FlowRetransTimer;
 NhuE_DCH_MAC_d_FlowMultiplexingLst mac_d_FlowMultiplexingLst;
 NhuE_DCH_AddReconf_MAC_d_Flow_r7transmissionGrantTyp transmissionGrantTyp;
} NhuE_DCH_AddReconf_MAC_d_Flow_r7;

typedef struct NhuE_DCH_AddReconf_MAC_d_FlowLst
{
 TknU16 noComp;
 NhuE_DCH_AddReconf_MAC_d_Flow *member;
}NhuE_DCH_AddReconf_MAC_d_FlowLst;

typedef struct NhuE_DCH_AddReconf_MAC_d_FlowLst_r7
{
 TknU16 noComp;
 NhuE_DCH_AddReconf_MAC_d_Flow_r7 *member;
}NhuE_DCH_AddReconf_MAC_d_FlowLst_r7;


typedef enum enumNhuE_DCH_TTI
{
 NhuE_DCH_TTItti2Enum,
 NhuE_DCH_TTItti10Enum
} EnumNhuE_DCH_TTI;
typedef TknU32 NhuE_DCH_TTI;

typedef struct NhuPowerOffsetInfoShortmodeSpecificInfofdd
{
 TknPres pres;
 NhuGainFactor gainFactorBetaC;
} NhuPowerOffsetInfoShortmodeSpecificInfofdd;

typedef struct NhuPowerOffsetInfoShortmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuPowerOffsetInfoShortmodeSpecificInfofdd fdd;
 } val;
} NhuPowerOffsetInfoShortmodeSpecificInfo;

typedef struct NhuPowerOffsetInfoShort
{
 TknPres pres;
 NhuTFC_Value referenceTFC;
 NhuPowerOffsetInfoShortmodeSpecificInfo modeSpecificInfo;
 NhuGainFactor gainFactorBetaD;
} NhuPowerOffsetInfoShort;

typedef struct NhuTFC_SubsetLstMembermodeSpecificInfotdd
{
 TknPres pres;
 NhuTFCS_Identity tfcs_ID;
} NhuTFC_SubsetLstMembermodeSpecificInfotdd;

typedef struct NhuTFC_SubsetLstMembermodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuTFC_SubsetLstMembermodeSpecificInfotdd tdd;
 } val;
} NhuTFC_SubsetLstMembermodeSpecificInfo;

typedef struct NhuTFC_SubsetLstMember
{
 TknPres pres;
 NhuTFC_SubsetLstMembermodeSpecificInfo modeSpecificInfo;
 NhuTFC_Subset tfc_Subset;
} NhuTFC_SubsetLstMember;

typedef struct NhuTFC_SubsetLst
{
 TknU16 noComp;
 NhuTFC_SubsetLstMember *member;
}NhuTFC_SubsetLst;

typedef struct NhuTportFormatSet_LCR
{
 TknU8 choice;
 union {
  NhuDedicatedTransChTFS dedicatedTransChTFS;
  NhuCmnTransChTFS_LCR commonTransChTFS_LCR;
 } val;
} NhuTportFormatSet_LCR;

typedef struct NhuUL_AddReconfTransChInfo_r6dch_usch
{
 TknPres pres;
 NhuUL_TrCH_Typ ul_TportChannelTyp;
 NhuTportChannelIdentity transportChannelIdentity;
 NhuTportFormatSet transportFormatSet;
} NhuUL_AddReconfTransChInfo_r6dch_usch;


typedef enum enumNhuUL_AddReconfTransChInfo_r6e_dchharq_Info
{
 NhuUL_AddReconfTransChInfo_r6e_dchharq_Inforv0Enum,
 NhuUL_AddReconfTransChInfo_r6e_dchharq_InforvtableEnum
} EnumNhuUL_AddReconfTransChInfo_r6e_dchharq_Info;
typedef TknU32 NhuUL_AddReconfTransChInfo_r6e_dchharq_Info;

typedef struct NhuUL_AddReconfTransChInfo_r6e_dch
{
 TknPres pres;
 NhuE_DCH_TTI tti;
 NhuUL_AddReconfTransChInfo_r6e_dchharq_Info harq_Info;
 NhuE_DCH_AddReconf_MAC_d_FlowLst addReconf_MAC_d_FlowLst;
} NhuUL_AddReconfTransChInfo_r6e_dch;

typedef struct NhuUL_AddReconfTransChInfo_r6
{
 TknU8 choice;
 union {
  NhuUL_AddReconfTransChInfo_r6dch_usch dch_usch;
  NhuUL_AddReconfTransChInfo_r6e_dch e_dch;
 } val;
} NhuUL_AddReconfTransChInfo_r6;

typedef struct NhuUL_AddReconfTransChInfoLst_r6
{
 TknU16 noComp;
 NhuUL_AddReconfTransChInfo_r6 *member;
}NhuUL_AddReconfTransChInfoLst_r6;

typedef struct NhuUL_AddReconfTransChInfo_r7dch_usch
{
 TknPres pres;
 NhuUL_TrCH_Typ ul_TportChannelTyp;
 NhuTportChannelIdentity transportChannelIdentity;
 NhuTportFormatSet transportFormatSet;
} NhuUL_AddReconfTransChInfo_r7dch_usch;

typedef struct NhuUL_AddReconfTransChInfo_r7e_dchmodeSpecificfdd
{
 TknPres pres;
 NhuE_DCH_TTI tti;
} NhuUL_AddReconfTransChInfo_r7e_dchmodeSpecificfdd;

typedef struct NhuUL_AddReconfTransChInfo_r7e_dchmodeSpecific
{
 TknU8 choice;
 union {
  NhuUL_AddReconfTransChInfo_r7e_dchmodeSpecificfdd fdd;
 } val;
} NhuUL_AddReconfTransChInfo_r7e_dchmodeSpecific;


typedef enum enumNhuUL_AddReconfTransChInfo_r7e_dchharq_Info
{
 NhuUL_AddReconfTransChInfo_r7e_dchharq_Inforv0Enum,
 NhuUL_AddReconfTransChInfo_r7e_dchharq_InforvtableEnum
} EnumNhuUL_AddReconfTransChInfo_r7e_dchharq_Info;
typedef TknU32 NhuUL_AddReconfTransChInfo_r7e_dchharq_Info;

typedef struct NhuUL_AddReconfTransChInfo_r7e_dch
{
 TknPres pres;
 NhuUL_AddReconfTransChInfo_r7e_dchmodeSpecific modeSpecific;
 NhuUL_AddReconfTransChInfo_r7e_dchharq_Info harq_Info;
 NhuE_DCH_AddReconf_MAC_d_FlowLst_r7 addReconf_MAC_d_FlowLst;
} NhuUL_AddReconfTransChInfo_r7e_dch;

typedef struct NhuUL_AddReconfTransChInfo_r7
{
 TknU8 choice;
 union {
  NhuUL_AddReconfTransChInfo_r7dch_usch dch_usch;
  NhuUL_AddReconfTransChInfo_r7e_dch e_dch;
 } val;
} NhuUL_AddReconfTransChInfo_r7;

typedef struct NhuUL_AddReconfTransChInfoLst_r7
{
 TknU16 noComp;
 NhuUL_AddReconfTransChInfo_r7 *member;
}NhuUL_AddReconfTransChInfoLst_r7;

typedef struct NhuUL_AddReconfTransChInfo_r8dch_usch
{
 TknPres pres;
 NhuUL_TrCH_Typ ul_TportChannelTyp;
 NhuTportChannelIdentity transportChannelIdentity;
 NhuTportFormatSet transportFormatSet;
} NhuUL_AddReconfTransChInfo_r8dch_usch;


typedef enum enumNhuUL_AddReconfTransChInfo_r8e_dchul_MAC_HeaderTyp
{
 NhuUL_AddReconfTransChInfo_r8e_dchul_MAC_HeaderTypmac_iisEnum
} EnumNhuUL_AddReconfTransChInfo_r8e_dchul_MAC_HeaderTyp;
typedef TknU32 NhuUL_AddReconfTransChInfo_r8e_dchul_MAC_HeaderTyp;

typedef struct NhuUL_AddReconfTransChInfo_r8e_dchmodeSpecificfdd
{
 TknPres pres;
 NhuE_DCH_TTI tti;
} NhuUL_AddReconfTransChInfo_r8e_dchmodeSpecificfdd;

typedef struct NhuUL_AddReconfTransChInfo_r8e_dchmodeSpecific
{
 TknU8 choice;
 union {
  NhuUL_AddReconfTransChInfo_r8e_dchmodeSpecificfdd fdd;
 } val;
} NhuUL_AddReconfTransChInfo_r8e_dchmodeSpecific;


typedef enum enumNhuUL_AddReconfTransChInfo_r8e_dchharq_Info
{
 NhuUL_AddReconfTransChInfo_r8e_dchharq_Inforv0Enum,
 NhuUL_AddReconfTransChInfo_r8e_dchharq_InforvtableEnum
} EnumNhuUL_AddReconfTransChInfo_r8e_dchharq_Info;
typedef TknU32 NhuUL_AddReconfTransChInfo_r8e_dchharq_Info;

typedef struct NhuUL_AddReconfTransChInfo_r8e_dch
{
 TknPres pres;
 NhuUL_AddReconfTransChInfo_r8e_dchul_MAC_HeaderTyp ul_MAC_HeaderTyp;
 NhuUL_AddReconfTransChInfo_r8e_dchmodeSpecific modeSpecific;
 NhuUL_AddReconfTransChInfo_r8e_dchharq_Info harq_Info;
 NhuE_DCH_AddReconf_MAC_d_FlowLst_r7 addReconf_MAC_d_FlowLst;
} NhuUL_AddReconfTransChInfo_r8e_dch;

typedef struct NhuUL_AddReconfTransChInfo_r8
{
 TknU8 choice;
 union {
  NhuUL_AddReconfTransChInfo_r8dch_usch dch_usch;
  NhuUL_AddReconfTransChInfo_r8e_dch e_dch;
 } val;
} NhuUL_AddReconfTransChInfo_r8;

typedef struct NhuUL_AddReconfTransChInfoLst_r8
{
 TknU16 noComp;
 NhuUL_AddReconfTransChInfo_r8 *member;
}NhuUL_AddReconfTransChInfoLst_r8;

typedef struct NhuUL_CmnTransChInfo_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuTFCS ul_TFCS;
} NhuUL_CmnTransChInfo_r4modeSpecificInfofdd;

typedef struct NhuUL_CmnTransChInfo_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuIvdualUL_CCTrCH_InfoLst individualUL_CCTrCH_InfoLst;
} NhuUL_CmnTransChInfo_r4modeSpecificInfotdd;

typedef struct NhuUL_CmnTransChInfo_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_CmnTransChInfo_r4modeSpecificInfofdd fdd;
  NhuUL_CmnTransChInfo_r4modeSpecificInfotdd tdd;
 } val;
} NhuUL_CmnTransChInfo_r4modeSpecificInfo;

typedef struct NhuUL_CmnTransChInfo_r4
{
 TknPres pres;
 NhuTFC_Subset tfc_Subset;
 NhuTFCS prach_TFCS;
 NhuUL_CmnTransChInfo_r4modeSpecificInfo modeSpecificInfo;
 NhuTFC_SubsetLst tfc_SubsetLst;
} NhuUL_CmnTransChInfo_r4;

typedef struct NhuUL_DeletedTransChInfoLst
{
 TknU16 noComp;
 NhuUL_TportChannelIdentity *member;
}NhuUL_DeletedTransChInfoLst;

typedef struct NhuUL_TportChannelIdentity_r6dch_usch
{
 TknPres pres;
 NhuUL_TrCH_Typ ul_TportChannelTyp;
 NhuTportChannelIdentity ul_TportChannelIdentity;
} NhuUL_TportChannelIdentity_r6dch_usch;

typedef struct NhuUL_TportChannelIdentity_r6
{
 TknU8 choice;
 union {
  NhuUL_TportChannelIdentity_r6dch_usch dch_usch;
  NhuE_DCH_MAC_d_FlowIdentity e_dch;
 } val;
} NhuUL_TportChannelIdentity_r6;

typedef struct NhuUL_DeletedTransChInfoLst_r6
{
 TknU16 noComp;
 NhuUL_TportChannelIdentity_r6 *member;
}NhuUL_DeletedTransChInfoLst_r6;

typedef struct NhuUSCH_TportChannelsInfoMember
{
 TknPres pres;
 NhuTportChannelIdentity usch_TportChannelIdentity;
 NhuTportFormatSet usch_TFS;
} NhuUSCH_TportChannelsInfoMember;

typedef struct NhuUSCH_TportChannelsInfo
{
 TknU16 noComp;
 NhuUSCH_TportChannelsInfoMember *member;
}NhuUSCH_TportChannelsInfo;


typedef TknU32 NhuACK_NACK_repetitionFactor;


typedef TknU32 NhuAC_To_ASC_Mapping;

typedef struct NhuAC_To_ASC_MappingTable
{
 TknU16 noComp;
 NhuAC_To_ASC_Mapping *member;
}NhuAC_To_ASC_MappingTable;


typedef TknU32 NhuAccessServiceClass_FDDavailableSignatureStartIdx;


typedef TknU32 NhuAccessServiceClass_FDDavailableSignatureEndIdx;


typedef TknStrBSXL NhuAccessServiceClass_FDDassignedSubChannelNumber;
typedef struct NhuAccessServiceClass_FDD
{
 TknPres pres;
 NhuAccessServiceClass_FDDavailableSignatureStartIdx availableSignatureStartIdx;
 NhuAccessServiceClass_FDDavailableSignatureEndIdx availableSignatureEndIdx;
 NhuAccessServiceClass_FDDassignedSubChannelNumber assignedSubChannelNumber;
} NhuAccessServiceClass_FDD;


typedef TknStrBSXL NhuAccessServiceClass_TDDchannelisationCodeIndices;

typedef enum enumNhuAccessServiceClass_TDDsubchannelSizesize2subchannels
{
 NhuAccessServiceClass_TDDsubchannelSizesize2subchannelssubch0Enum,
 NhuAccessServiceClass_TDDsubchannelSizesize2subchannelssubch1Enum
} EnumNhuAccessServiceClass_TDDsubchannelSizesize2subchannels;
typedef TknU32 NhuAccessServiceClass_TDDsubchannelSizesize2subchannels;

typedef struct NhuAccessServiceClass_TDDsubchannelSizesize2
{
 TknPres pres;
 NhuAccessServiceClass_TDDsubchannelSizesize2subchannels subchannels;
} NhuAccessServiceClass_TDDsubchannelSizesize2;


typedef TknStrBSXL NhuAccessServiceClass_TDDsubchannelSizesize4subchannels;
typedef struct NhuAccessServiceClass_TDDsubchannelSizesize4
{
 TknPres pres;
 NhuAccessServiceClass_TDDsubchannelSizesize4subchannels subchannels;
} NhuAccessServiceClass_TDDsubchannelSizesize4;


typedef TknStrBSXL NhuAccessServiceClass_TDDsubchannelSizesize8subchannels;
typedef struct NhuAccessServiceClass_TDDsubchannelSizesize8
{
 TknPres pres;
 NhuAccessServiceClass_TDDsubchannelSizesize8subchannels subchannels;
} NhuAccessServiceClass_TDDsubchannelSizesize8;

typedef struct NhuAccessServiceClass_TDDsubchannelSize
{
 TknU8 choice;
 union {
  NhuAccessServiceClass_TDDsubchannelSizesize2 size2;
  NhuAccessServiceClass_TDDsubchannelSizesize4 size4;
  NhuAccessServiceClass_TDDsubchannelSizesize8 size8;
 } val;
} NhuAccessServiceClass_TDDsubchannelSize;

typedef struct NhuAccessServiceClass_TDD
{
 TknPres pres;
 NhuAccessServiceClass_TDDchannelisationCodeIndices channelisationCodeIndices;
 NhuAccessServiceClass_TDDsubchannelSize subchannelSize;
} NhuAccessServiceClass_TDD;


typedef TknStrBSXL NhuAccessServiceClass_TDD_r7channelisationCodeIndices;

typedef enum enumNhuAccessServiceClass_TDD_r7subchannelSizesize2subchannels
{
 NhuAccessServiceClass_TDD_r7subchannelSizesize2subchannelssubch0Enum,
 NhuAccessServiceClass_TDD_r7subchannelSizesize2subchannelssubch1Enum
} EnumNhuAccessServiceClass_TDD_r7subchannelSizesize2subchannels;
typedef TknU32 NhuAccessServiceClass_TDD_r7subchannelSizesize2subchannels;

typedef struct NhuAccessServiceClass_TDD_r7subchannelSizesize2
{
 TknPres pres;
 NhuAccessServiceClass_TDD_r7subchannelSizesize2subchannels subchannels;
} NhuAccessServiceClass_TDD_r7subchannelSizesize2;


typedef TknStrBSXL NhuAccessServiceClass_TDD_r7subchannelSizesize4subchannels;
typedef struct NhuAccessServiceClass_TDD_r7subchannelSizesize4
{
 TknPres pres;
 NhuAccessServiceClass_TDD_r7subchannelSizesize4subchannels subchannels;
} NhuAccessServiceClass_TDD_r7subchannelSizesize4;


typedef TknStrBSXL NhuAccessServiceClass_TDD_r7subchannelSizesize8subchannels;
typedef struct NhuAccessServiceClass_TDD_r7subchannelSizesize8
{
 TknPres pres;
 NhuAccessServiceClass_TDD_r7subchannelSizesize8subchannels subchannels;
} NhuAccessServiceClass_TDD_r7subchannelSizesize8;


typedef TknStrBSXL NhuAccessServiceClass_TDD_r7subchannelSizesize16subchannels;
typedef struct NhuAccessServiceClass_TDD_r7subchannelSizesize16
{
 TknPres pres;
 NhuAccessServiceClass_TDD_r7subchannelSizesize16subchannels subchannels;
} NhuAccessServiceClass_TDD_r7subchannelSizesize16;

typedef struct NhuAccessServiceClass_TDD_r7subchannelSize
{
 TknU8 choice;
 union {
  NhuAccessServiceClass_TDD_r7subchannelSizesize2 size2;
  NhuAccessServiceClass_TDD_r7subchannelSizesize4 size4;
  NhuAccessServiceClass_TDD_r7subchannelSizesize8 size8;
  NhuAccessServiceClass_TDD_r7subchannelSizesize16 size16;
 } val;
} NhuAccessServiceClass_TDD_r7subchannelSize;

typedef struct NhuAccessServiceClass_TDD_r7
{
 TknPres pres;
 NhuAccessServiceClass_TDD_r7channelisationCodeIndices channelisationCodeIndices;
 NhuAccessServiceClass_TDD_r7subchannelSize subchannelSize;
} NhuAccessServiceClass_TDD_r7;


typedef TknStrBSXL NhuAccessServiceClass_TDD_LCR_r4availableSYNC_UlCodesIndics;

typedef enum enumNhuAccessServiceClass_TDD_LCR_r4subchannelSizesize2subchannels
{
 NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize2subchannelssubch0Enum,
 NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize2subchannelssubch1Enum
} EnumNhuAccessServiceClass_TDD_LCR_r4subchannelSizesize2subchannels;
typedef TknU32 NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize2subchannels;

typedef struct NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize2
{
 TknPres pres;
 NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize2subchannels subchannels;
} NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize2;


typedef TknStrBSXL NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize4subchannels;
typedef struct NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize4
{
 TknPres pres;
 NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize4subchannels subchannels;
} NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize4;


typedef TknStrBSXL NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize8subchannels;
typedef struct NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize8
{
 TknPres pres;
 NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize8subchannels subchannels;
} NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize8;

typedef struct NhuAccessServiceClass_TDD_LCR_r4subchannelSize
{
 TknU8 choice;
 union {
  NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize2 size2;
  NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize4 size4;
  NhuAccessServiceClass_TDD_LCR_r4subchannelSizesize8 size8;
 } val;
} NhuAccessServiceClass_TDD_LCR_r4subchannelSize;

typedef struct NhuAccessServiceClass_TDD_LCR_r4
{
 TknPres pres;
 NhuAccessServiceClass_TDD_LCR_r4availableSYNC_UlCodesIndics availableSYNC_UlCodesIndics;
 NhuAccessServiceClass_TDD_LCR_r4subchannelSize subchannelSize;
} NhuAccessServiceClass_TDD_LCR_r4;


typedef TknU32 NhuActvnTimeOffset;

typedef struct NhuDynamicTFInfoCCCH
{
 TknPres pres;
 NhuOctetModeRLC_SizeInfoTyp2 octetModeRLC_SizeInfoTyp2;
} NhuDynamicTFInfoCCCH;

typedef struct NhuAdditionalPRACH_TF_and_TFCS_CCCH_IEs
{
 TknPres pres;
 NhuPowerOffsetInfo powerOffsetInfo;
 NhuDynamicTFInfoCCCH dynamicTFInfoCCCH;
} NhuAdditionalPRACH_TF_and_TFCS_CCCH_IEs;

typedef struct NhuAdditionalPRACH_TF_and_TFCS_CCCH
{
 TknPres pres;
 NhuAdditionalPRACH_TF_and_TFCS_CCCH_IEs additionalPRACH_TF_and_TFCS_CCCH_IEs;
} NhuAdditionalPRACH_TF_and_TFCS_CCCH;

typedef struct NhuAdditionalPRACH_TF_and_TFCS_CCCH_Lst
{
 TknU16 noComp;
 NhuAdditionalPRACH_TF_and_TFCS_CCCH *member;
}NhuAdditionalPRACH_TF_and_TFCS_CCCH_Lst;


typedef enum enumNhuHS_DSCH_TBSizeTable
{
 NhuHS_DSCH_TBSizeTableoctetAlignedEnum
} EnumNhuHS_DSCH_TBSizeTable;
typedef TknU32 NhuHS_DSCH_TBSizeTable;


typedef TknU32 NhuPrimaryScramblingCode;

typedef struct NhuPrimaryCPICH_Info
{
 TknPres pres;
 NhuPrimaryScramblingCode primaryScramblingCode;
} NhuPrimaryCPICH_Info;


typedef TknU32 NhuSecondaryScramblingCode;


typedef TknU32 NhuHS_SCCH_Codes;


typedef TknS32 NhuMeasurementPowerOffset;


typedef enum enumNhuMIMO_N_M_Ratio
{
 NhuMIMO_N_M_Ratiomnm1_2Enum,
 NhuMIMO_N_M_Ratiomnm2_3Enum,
 NhuMIMO_N_M_Ratiomnm3_4Enum,
 NhuMIMO_N_M_Ratiomnm4_5Enum,
 NhuMIMO_N_M_Ratiomnm5_6Enum,
 NhuMIMO_N_M_Ratiomnm6_7Enum,
 NhuMIMO_N_M_Ratiomnm7_8Enum,
 NhuMIMO_N_M_Ratiomnm8_9Enum,
 NhuMIMO_N_M_Ratiomnm9_10Enum,
 NhuMIMO_N_M_Ratiomnm1_1Enum
} EnumNhuMIMO_N_M_Ratio;
typedef TknU32 NhuMIMO_N_M_Ratio;


typedef TknU32 NhuChannelisationCode256;


typedef TknS32 NhuS_CPICH_PowerOffset_MIMO;

typedef struct NhuMIMO_PilotCfg_r9secondCPICH_PatterndiversityPattern
{
 TknPres pres;
 NhuChannelisationCode256 channelisationCode;
 NhuS_CPICH_PowerOffset_MIMO s_cpich_PowerOffset_Mimo;
} NhuMIMO_PilotCfg_r9secondCPICH_PatterndiversityPattern;

typedef struct NhuMIMO_PilotCfg_r9secondCPICH_Pattern
{
 TknU8 choice;
 union {
  NhuMIMO_PilotCfg_r9secondCPICH_PatterndiversityPattern diversityPattern;
 } val;
} NhuMIMO_PilotCfg_r9secondCPICH_Pattern;

typedef struct NhuMIMO_PilotCfg_r9
{
 TknPres pres;
 NhuMIMO_PilotCfg_r9secondCPICH_Pattern secondCPICH_Pattern;
} NhuMIMO_PilotCfg_r9;


typedef enum enumNhuSecondaryCellMIMOparametersFDD_r10newCfgprecodingWeightSetRestrn
{
 NhuSecondaryCellMIMOparametersFDD_r10newCfgprecodingWeightSetRestrntrueEnum
} EnumNhuSecondaryCellMIMOparametersFDD_r10newCfgprecodingWeightSetRestrn;
typedef TknU32 NhuSecondaryCellMIMOparametersFDD_r10newCfgprecodingWeightSetRestrn;

typedef struct NhuSecondaryCellMIMOparametersFDD_r10newCfg
{
 TknPres pres;
 NhuMIMO_N_M_Ratio mimoN_M_Ratio;
 NhuMIMO_PilotCfg_r9 mimoPilotCfg;
 NhuSecondaryCellMIMOparametersFDD_r10newCfgprecodingWeightSetRestrn precodingWeightSetRestrn;
} NhuSecondaryCellMIMOparametersFDD_r10newCfg;

typedef struct NhuSecondaryCellMIMOparametersFDD_r10
{
 TknU8 choice;
 union {
  NhuSecondaryCellMIMOparametersFDD_r10newCfg newCfg;
 } val;
} NhuSecondaryCellMIMOparametersFDD_r10;


typedef enum enumNhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdl_64QAM_Configured
{
 NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdl_64QAM_ConfiguredtrueEnum
} EnumNhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdl_64QAM_Configured;
typedef TknU32 NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdl_64QAM_Configured;

typedef struct NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfghS_SCCHChannelisationCodeInfo
{
 TknU16 noComp;
 NhuHS_SCCH_Codes *member;
}NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfghS_SCCHChannelisationCodeInfo;


typedef enum enumNhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCell
{
 NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCelldifferentEnum
} EnumNhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCell;
typedef TknU32 NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCell;

typedef struct NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfg
{
 TknPres pres;
 NhuH_RNTI new_H_RNTI;
 NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdl_64QAM_Configured dl_64QAM_Configured;
 NhuHS_DSCH_TBSizeTable hs_DSCH_TBSizeTable;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuSecondaryScramblingCode dl_ScramblingCode;
 NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfghS_SCCHChannelisationCodeInfo hS_SCCHChannelisationCodeInfo;
 NhuMeasurementPowerOffset measurementPowerOffset;
 NhuUARFCN uarfcn_DL;
 NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCell differentTxModeFromServingHS_DSCHCell;
} NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfg;

typedef struct NhuDL_SecondaryCellInfoFDD_r10configurationInfo
{
 TknU8 choice;
 union {
  NhuDL_SecondaryCellInfoFDD_r10configurationInfonewCfg newCfg;
 } val;
} NhuDL_SecondaryCellInfoFDD_r10configurationInfo;

typedef struct NhuDL_SecondaryCellInfoFDD_r10
{
 TknPres pres;
 NhuDL_SecondaryCellInfoFDD_r10configurationInfo configurationInfo;
 NhuSecondaryCellMIMOparametersFDD_r10 secondaryCellMIMOparameters;
} NhuDL_SecondaryCellInfoFDD_r10;

typedef struct NhuAdditionalDLSecCellInfoFDD
{
 TknPres pres;
 NhuDL_SecondaryCellInfoFDD_r10 dl_SecondaryCellInfoFDD;
} NhuAdditionalDLSecCellInfoFDD;

typedef struct NhuAdditionalDLSecCellInfoLstFDD
{
 TknU16 noComp;
 NhuAdditionalDLSecCellInfoFDD *member;
}NhuAdditionalDLSecCellInfoLstFDD;

typedef struct NhuAdditionalDLSecCellInfoLstFDD2
{
 TknU16 noComp;
 NhuAdditionalDLSecCellInfoFDD *member;
}NhuAdditionalDLSecCellInfoLstFDD2;


typedef enum enumNhuAICH_TransmissionTiming
{
 NhuAICH_TransmissionTiminge0Enum,
 NhuAICH_TransmissionTiminge1Enum
} EnumNhuAICH_TransmissionTiming;
typedef TknU32 NhuAICH_TransmissionTiming;


typedef TknU8 NhuAICH_Infosttd_Indicator;

typedef struct NhuAICH_Info
{
 TknPres pres;
 NhuChannelisationCode256 channelisationCode256;
 NhuAICH_Infosttd_Indicator sttd_Indicator;
 NhuAICH_TransmissionTiming aich_TransmissionTiming;
} NhuAICH_Info;


typedef TknS32 NhuAICH_PowerOffset;


typedef TknU32 NhuAllocnPeriodInfoallocationActvnTime;


typedef TknU32 NhuAllocnPeriodInfoallocationDuration;

typedef struct NhuAllocnPeriodInfo
{
 TknPres pres;
 NhuAllocnPeriodInfoallocationActvnTime allocationActvnTime;
 NhuAllocnPeriodInfoallocationDuration allocationDuration;
} NhuAllocnPeriodInfo;


typedef TknU32 NhuAlpha;


typedef TknU32 NhuAP_AICH_ChannelisationCode;


typedef TknU32 NhuAP_PreambleScramblingCode;


typedef TknU32 NhuAP_Signature;


typedef TknU32 NhuAP_Subchannel;

typedef struct NhuAvailableAP_SubchannelLst
{
 TknU16 noComp;
 NhuAP_Subchannel *member;
}NhuAvailableAP_SubchannelLst;

typedef struct NhuAP_Signature_VCAM
{
 TknPres pres;
 NhuAP_Signature ap_Signature;
 NhuAvailableAP_SubchannelLst availableAP_SubchannelLst;
} NhuAP_Signature_VCAM;

typedef struct NhuASCSetting_FDD
{
 TknPres pres;
 NhuAccessServiceClass_FDD accessServiceClass_FDD;
} NhuASCSetting_FDD;

typedef struct NhuASCSetting_TDD
{
 TknPres pres;
 NhuAccessServiceClass_TDD accessServiceClass_TDD;
} NhuASCSetting_TDD;

typedef struct NhuASCSetting_TDD_r7
{
 TknPres pres;
 NhuAccessServiceClass_TDD_r7 accessServiceClass_TDD;
} NhuASCSetting_TDD_r7;

typedef struct NhuASCSetting_TDD_LCR_r4
{
 TknPres pres;
 NhuAccessServiceClass_TDD_LCR_r4 accessServiceClass_TDD_LCR;
} NhuASCSetting_TDD_LCR_r4;

typedef struct NhuAvailableAP_Signature_VCAMLst
{
 TknU16 noComp;
 NhuAP_Signature_VCAM *member;
}NhuAvailableAP_Signature_VCAMLst;

typedef struct NhuAvailableAP_SignatureLst
{
 TknU16 noComp;
 NhuAP_Signature *member;
}NhuAvailableAP_SignatureLst;


typedef enum enumNhuMinimumSpreadingFactor
{
 NhuMinimumSpreadingFactorsf4Enum,
 NhuMinimumSpreadingFactorsf8Enum,
 NhuMinimumSpreadingFactorsf16Enum,
 NhuMinimumSpreadingFactorsf32Enum,
 NhuMinimumSpreadingFactorsf64Enum,
 NhuMinimumSpreadingFactorsf128Enum,
 NhuMinimumSpreadingFactorsf256Enum
} EnumNhuMinimumSpreadingFactor;
typedef TknU32 NhuMinimumSpreadingFactor;


typedef TknU32 NhuNF_Max;


typedef TknU32 NhuMaxAvailablePCPCH_Number;

typedef struct NhuAvailableMinimumSF_VCAM
{
 TknPres pres;
 NhuMinimumSpreadingFactor minimumSpreadingFactor;
 NhuNF_Max nf_Max;
 NhuMaxAvailablePCPCH_Number maxAvailablePCPCH_Number;
 NhuAvailableAP_Signature_VCAMLst availableAP_Signature_VCAMLst;
} NhuAvailableMinimumSF_VCAM;

typedef struct NhuAvailableMinimumSF_LstVCAM
{
 TknU16 noComp;
 NhuAvailableMinimumSF_VCAM *member;
}NhuAvailableMinimumSF_LstVCAM;


typedef TknStrBSXL NhuAvailableSignatures;

typedef TknStrBSXL NhuAvailableSubChannelNumbers;

typedef enum enumNhuBEACON_PL_Est
{
 NhuBEACON_PL_EsttrueEnum
} EnumNhuBEACON_PL_Est;
typedef TknU32 NhuBEACON_PL_Est;


typedef enum enumNhuBurstTyp
{
 NhuBurstTyptype1Enum,
 NhuBurstTyptype2Enum
} EnumNhuBurstTyp;
typedef TknU32 NhuBurstTyp;


typedef TknS32 NhuBler_Tgt;


typedef TknS32 NhuDPCCH_PowerOffset;


typedef TknU32 NhuSRB_delay;


typedef TknU32 NhuUL_TgtSIR;


typedef TknU32 NhuTimeslotNumber;


typedef TknS32 NhuTDD_UL_Interference;

typedef struct NhuIvdualTS_Interference
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
 NhuTDD_UL_Interference ul_TimeslotInterference;
} NhuIvdualTS_Interference;

typedef struct NhuIvdualTS_InterferenceLst
{
 TknU16 noComp;
 NhuIvdualTS_Interference *member;
}NhuIvdualTS_InterferenceLst;


typedef TknU32 NhuPrimaryCCPCH_TX_Power;

typedef struct NhuUL_DPCH_PowerCntrlInfofdd
{
 TknPres pres;
 NhuDPCCH_PowerOffset dpcch_PowerOffset;
 NhuPC_Preamble pc_Preamble;
 NhuSRB_delay sRB_delay;
 NhuPowerCntrlAlgorithm powerCntrlAlgorithm;
} NhuUL_DPCH_PowerCntrlInfofdd;

typedef struct NhuUL_DPCH_PowerCntrlInfotddul_OL_PC_SignallingindividuallySignalled
{
 TknPres pres;
 NhuIvdualTS_InterferenceLst individualTS_InterferenceLst;
 NhuConstantValueTdd dpch_ConstantValue;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
} NhuUL_DPCH_PowerCntrlInfotddul_OL_PC_SignallingindividuallySignalled;

typedef struct NhuUL_DPCH_PowerCntrlInfotddul_OL_PC_Signalling
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfotddul_OL_PC_SignallingindividuallySignalled individuallySignalled;
 } val;
} NhuUL_DPCH_PowerCntrlInfotddul_OL_PC_Signalling;

typedef struct NhuUL_DPCH_PowerCntrlInfotdd
{
 TknPres pres;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuUL_DPCH_PowerCntrlInfotddul_OL_PC_Signalling ul_OL_PC_Signalling;
} NhuUL_DPCH_PowerCntrlInfotdd;

typedef struct NhuUL_DPCH_PowerCntrlInfo
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfofdd fdd;
  NhuUL_DPCH_PowerCntrlInfotdd tdd;
 } val;
} NhuUL_DPCH_PowerCntrlInfo;

typedef struct NhuCCTrCH_PowerCntrlInfo
{
 TknPres pres;
 NhuTFCS_Identity tfcs_Identity;
 NhuUL_DPCH_PowerCntrlInfo ul_DPCH_PowerCntrlInfo;
} NhuCCTrCH_PowerCntrlInfo;


typedef TknS32 NhuConstantValue;


typedef TknU32 NhuTPC_StepSizeTDD;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r4fdd
{
 TknPres pres;
 NhuDPCCH_PowerOffset dpcch_PowerOffset;
 NhuPC_Preamble pc_Preamble;
 NhuSRB_delay sRB_delay;
 NhuPowerCntrlAlgorithm powerCntrlAlgorithm;
} NhuUL_DPCH_PowerCntrlInfo_r4fdd;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384
{
 TknPres pres;
 NhuIvdualTS_InterferenceLst individualTS_InterferenceLst;
 NhuConstantValue dpch_ConstantValue;
} NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128
{
 TknPres pres;
 NhuTPC_StepSizeTDD tpc_StepSize;
} NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalledtddOption
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384 tdd384;
  NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128 tdd128;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalledtddOption;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalled
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalledtddOption tddOption;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
} NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalled;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_Signalling
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_SignallingindividuallySignalled individuallySignalled;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_Signalling;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r4tdd
{
 TknPres pres;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuUL_DPCH_PowerCntrlInfo_r4tddul_OL_PC_Signalling ul_OL_PC_Signalling;
} NhuUL_DPCH_PowerCntrlInfo_r4tdd;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r4
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r4fdd fdd;
  NhuUL_DPCH_PowerCntrlInfo_r4tdd tdd;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r4;

typedef struct NhuCCTrCH_PowerCntrlInfo_r4
{
 TknPres pres;
 NhuTFCS_Identity tfcs_Identity;
 NhuUL_DPCH_PowerCntrlInfo_r4 ul_DPCH_PowerCntrlInfo;
} NhuCCTrCH_PowerCntrlInfo_r4;


typedef TknU32 NhuDeltaACK;


typedef TknU32 NhuDeltaNACK;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r5fdd
{
 TknPres pres;
 NhuDPCCH_PowerOffset dpcch_PowerOffset;
 NhuPC_Preamble pc_Preamble;
 NhuSRB_delay sRB_delay;
 NhuPowerCntrlAlgorithm powerCntrlAlgorithm;
 NhuDeltaACK deltaACK;
 NhuDeltaNACK deltaNACK;
 NhuACK_NACK_repetitionFactor ack_NACK_repetition_factor;
} NhuUL_DPCH_PowerCntrlInfo_r5fdd;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384
{
 TknPres pres;
 NhuIvdualTS_InterferenceLst individualTS_InterferenceLst;
 NhuConstantValue dpch_ConstantValue;
} NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128
{
 TknPres pres;
 NhuTPC_StepSizeTDD tpc_StepSize;
} NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalledtddOption
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384 tdd384;
  NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128 tdd128;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalledtddOption;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalled
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalledtddOption tddOption;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
} NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalled;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_Signalling
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_SignallingindividuallySignalled individuallySignalled;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_Signalling;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r5tdd
{
 TknPres pres;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuUL_DPCH_PowerCntrlInfo_r5tddul_OL_PC_Signalling ul_OL_PC_Signalling;
} NhuUL_DPCH_PowerCntrlInfo_r5tdd;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r5
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r5fdd fdd;
  NhuUL_DPCH_PowerCntrlInfo_r5tdd tdd;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r5;

typedef struct NhuCCTrCH_PowerCntrlInfo_r5
{
 TknPres pres;
 NhuTFCS_Identity tfcs_Identity;
 NhuUL_DPCH_PowerCntrlInfo_r5 ul_DPCH_PowerCntrlInfo;
} NhuCCTrCH_PowerCntrlInfo_r5;


typedef TknU32 NhuHARQ_Preamble_Mode;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r7fdd
{
 TknPres pres;
 NhuDPCCH_PowerOffset dpcch_PowerOffset;
 NhuPC_Preamble pc_Preamble;
 NhuSRB_delay sRB_delay;
 NhuPowerCntrlAlgorithm powerCntrlAlgorithm;
 NhuDeltaACK deltaACK;
 NhuDeltaNACK deltaNACK;
 NhuACK_NACK_repetitionFactor ack_NACK_repetition_factor;
 NhuHARQ_Preamble_Mode harq_Preamble_Mode;
} NhuUL_DPCH_PowerCntrlInfo_r7fdd;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384
{
 TknPres pres;
 NhuIvdualTS_InterferenceLst individualTS_InterferenceLst;
 NhuConstantValue dpch_ConstantValue;
} NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd768
{
 TknPres pres;
 NhuIvdualTS_InterferenceLst individualTS_InterferenceLst;
 NhuConstantValue dpch_ConstantValue;
} NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd768;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128
{
 TknPres pres;
 NhuBEACON_PL_Est beaconPLEst;
 NhuTPC_StepSizeTDD tpc_StepSize;
} NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOption
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384 tdd384;
  NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd768 tdd768;
  NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128 tdd128;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOption;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalled
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalledtddOption tddOption;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
} NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalled;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_Signalling
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_SignallingindividuallySignalled individuallySignalled;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_Signalling;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r7tdd
{
 TknPres pres;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuUL_DPCH_PowerCntrlInfo_r7tddul_OL_PC_Signalling ul_OL_PC_Signalling;
} NhuUL_DPCH_PowerCntrlInfo_r7tdd;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r7
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r7fdd fdd;
  NhuUL_DPCH_PowerCntrlInfo_r7tdd tdd;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r7;

typedef struct NhuCCTrCH_PowerCntrlInfo_r7
{
 TknPres pres;
 NhuTFCS_Identity tfcs_Identity;
 NhuUL_DPCH_PowerCntrlInfo_r7 ul_DPCH_PowerCntrlInfo;
} NhuCCTrCH_PowerCntrlInfo_r7;


typedef TknU32 NhuCD_AccessSlotSubchannel;

typedef struct NhuCD_AccessSlotSubchannelLst
{
 TknU16 noComp;
 NhuCD_AccessSlotSubchannel *member;
}NhuCD_AccessSlotSubchannelLst;


typedef TknU32 NhuCD_CA_ICH_ChannelisationCode;


typedef TknU32 NhuCD_PreambleScramblingCode;


typedef TknU32 NhuCD_SignatureCode;

typedef struct NhuCD_SignatureCodeLst
{
 TknU16 noComp;
 NhuCD_SignatureCode *member;
}NhuCD_SignatureCodeLst;


typedef TknU32 NhuMidambleShiftLong;


typedef TknU32 NhuCellParamsID;

typedef struct NhuCellAndChannelIdentity
{
 TknPres pres;
 NhuBurstTyp burstTyp;
 NhuMidambleShiftLong midambleShift;
 NhuTimeslotNumber timeslot;
 NhuCellParamsID cellParamsID;
} NhuCellAndChannelIdentity;


typedef TknU32 NhuCfntargetsfnframeoffset;

typedef struct NhuChannelAssignmentActive
{
 TknU8 choice;
 union {
  NhuAvailableMinimumSF_LstVCAM isActive;
 } val;
} NhuChannelAssignmentActive;

typedef struct NhuChannelReqParamsForUCSM
{
 TknPres pres;
 NhuAvailableAP_SignatureLst availableAP_SignatureLst;
 NhuAvailableAP_SubchannelLst availableAP_SubchannelLst;
} NhuChannelReqParamsForUCSM;


typedef enum enumNhuClosedLoopTimingAdjMode
{
 NhuClosedLoopTimingAdjModeslot1Enum,
 NhuClosedLoopTimingAdjModeslot2Enum
} EnumNhuClosedLoopTimingAdjMode;
typedef TknU32 NhuClosedLoopTimingAdjMode;


typedef TknU32 NhuCodeNumberDSCH;


typedef enum enumNhuSF_PDSCH
{
 NhuSF_PDSCHsfp4Enum,
 NhuSF_PDSCHsfp8Enum,
 NhuSF_PDSCHsfp16Enum,
 NhuSF_PDSCHsfp32Enum,
 NhuSF_PDSCHsfp64Enum,
 NhuSF_PDSCHsfp128Enum,
 NhuSF_PDSCHsfp256Enum
} EnumNhuSF_PDSCH;
typedef TknU32 NhuSF_PDSCH;


typedef TknU32 NhuMultiCodeInfo;

typedef struct NhuPDSCH_CodeMap
{
 TknPres pres;
 NhuSF_PDSCH spreadingFactor;
 NhuMultiCodeInfo multiCodeInfo;
 NhuCodeNumberDSCH codeNumberStart;
 NhuCodeNumberDSCH codeNumberStop;
} NhuPDSCH_CodeMap;

typedef struct NhuPDSCH_CodeMapLst
{
 TknU16 noComp;
 NhuPDSCH_CodeMap *member;
}NhuPDSCH_CodeMapLst;

typedef struct NhuCodeRange
{
 TknPres pres;
 NhuPDSCH_CodeMapLst pdsch_CodeMapLst;
} NhuCodeRange;


typedef enum enumNhuHS_ChannelisationCode_LCR
{
 NhuHS_ChannelisationCode_LCRcc16_1Enum,
 NhuHS_ChannelisationCode_LCRcc16_2Enum,
 NhuHS_ChannelisationCode_LCRcc16_3Enum,
 NhuHS_ChannelisationCode_LCRcc16_4Enum,
 NhuHS_ChannelisationCode_LCRcc16_5Enum,
 NhuHS_ChannelisationCode_LCRcc16_6Enum,
 NhuHS_ChannelisationCode_LCRcc16_7Enum,
 NhuHS_ChannelisationCode_LCRcc16_8Enum,
 NhuHS_ChannelisationCode_LCRcc16_9Enum,
 NhuHS_ChannelisationCode_LCRcc16_10Enum,
 NhuHS_ChannelisationCode_LCRcc16_11Enum,
 NhuHS_ChannelisationCode_LCRcc16_12Enum,
 NhuHS_ChannelisationCode_LCRcc16_13Enum,
 NhuHS_ChannelisationCode_LCRcc16_14Enum,
 NhuHS_ChannelisationCode_LCRcc16_15Enum,
 NhuHS_ChannelisationCode_LCRcc16_16Enum
} EnumNhuHS_ChannelisationCode_LCR;
typedef TknU32 NhuHS_ChannelisationCode_LCR;

typedef struct NhuCodeResourceInfo_TDD128
{
 TknPres pres;
 NhuHS_ChannelisationCode_LCR start_code;
 NhuHS_ChannelisationCode_LCR stop_code;
} NhuCodeResourceInfo_TDD128;


typedef enum enumNhuCodeWordSet
{
 NhuCodeWordSetlongCWSEnum,
 NhuCodeWordSetmediumCWSEnum,
 NhuCodeWordSetshortCWSEnum,
 NhuCodeWordSetssdtOffEnum
} EnumNhuCodeWordSet;
typedef TknU32 NhuCodeWordSet;


typedef TknU32 NhuE_HICH_RGCH_SignatureSequence;

typedef struct NhuE_RGCH_Info_CmnEdch
{
 TknPres pres;
 NhuE_HICH_RGCH_SignatureSequence signatureSequence;
} NhuE_RGCH_Info_CmnEdch;


typedef TknU32 NhuE_HICH_ChannelisationCode;

typedef struct NhuE_HICH_Info_CmnEdch
{
 TknPres pres;
 NhuE_HICH_ChannelisationCode channelisationCode;
 NhuE_HICH_RGCH_SignatureSequence signatureSequence;
} NhuE_HICH_Info_CmnEdch;

typedef struct NhuUL_DPCH_CodeInfoForCmnEDCH
{
 TknPres pres;
 NhuScramblingCodeTyp ul_DPCCHscramblingCodeTyp;
 NhuUL_ScramblingCode ul_DPCCHscramblingCode;
} NhuUL_DPCH_CodeInfoForCmnEDCH;


typedef TknU32 NhuCmn_E_DCH_ResourceInfoLsts_offset;


typedef TknU32 NhuCmn_E_DCH_ResourceInfoLstf_dpch_ChannelisationCodeNumber;

typedef struct NhuCmn_E_DCH_ResourceInfoLst
{
 TknPres pres;
 NhuCmn_E_DCH_ResourceInfoLsts_offset s_offset;
 NhuCmn_E_DCH_ResourceInfoLstf_dpch_ChannelisationCodeNumber f_dpch_ChannelisationCodeNumber;
 NhuE_RGCH_Info_CmnEdch e_RGCH_Info;
 NhuE_HICH_Info_CmnEdch e_hich_Info;
 NhuUL_DPCH_CodeInfoForCmnEDCH ul_DPCH_CodeInfoForCmnEDCH;
} NhuCmn_E_DCH_ResourceInfoLst;


typedef TknU32 NhuCmn_E_RNTI_InfoMembernumber_of_group;


typedef TknU32 NhuCmn_E_RNTI_InfoMembernumber_of_ENRTI_per_group;

typedef struct NhuCmn_E_RNTI_InfoMember
{
 TknPres pres;
 NhuE_RNTI starting_E_RNTI;
 NhuCmn_E_RNTI_InfoMembernumber_of_group number_of_group;
 NhuCmn_E_RNTI_InfoMembernumber_of_ENRTI_per_group number_of_ENRTI_per_group;
} NhuCmn_E_RNTI_InfoMember;

typedef struct NhuCmn_E_RNTI_Info
{
 TknU16 noComp;
 NhuCmn_E_RNTI_InfoMember *member;
}NhuCmn_E_RNTI_Info;

typedef struct NhuCmnTimeslotInfoMBMS
{
 TknPres pres;
 NhuSecondInterleavingMode secondInterleavingMode;
 NhuTFCI_Coding tfci_Coding;
 NhuPuncturingLimit puncturingLimit;
} NhuCmnTimeslotInfoMBMS;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod2offset;

typedef struct NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod2
{
 TknPres pres;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod2offset offset;
} NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod2;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod4length;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod4offset;

typedef struct NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod4
{
 TknPres pres;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod4length length;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod4offset offset;
} NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod4;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod8length;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod8offset;

typedef struct NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod8
{
 TknPres pres;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod8length length;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod8offset offset;
} NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod8;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod16length;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod16offset;

typedef struct NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod16
{
 TknPres pres;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod16length length;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod16offset offset;
} NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod16;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod32length;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod32offset;

typedef struct NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod32
{
 TknPres pres;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod32length length;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod32offset offset;
} NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod32;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod64length;


typedef TknU32 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod64offset;

typedef struct NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod64
{
 TknPres pres;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod64length length;
 NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod64offset offset;
} NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod64;

typedef struct NhuRepetitionPeriodLengthAndOffset
{
 TknU8 choice;
 union {
  NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod2 repetitionPeriod2;
  NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod4 repetitionPeriod4;
  NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod8 repetitionPeriod8;
  NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod16 repetitionPeriod16;
  NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod32 repetitionPeriod32;
  NhuRepetitionPeriodLengthAndOffsetrepetitionPeriod64 repetitionPeriod64;
 } val;
} NhuRepetitionPeriodLengthAndOffset;

typedef struct NhuCmnTimeslotInfoSCCPCH
{
 TknPres pres;
 NhuSecondInterleavingMode secondInterleavingMode;
 NhuTFCI_Coding tfci_Coding;
 NhuPuncturingLimit puncturingLimit;
 NhuRepetitionPeriodLengthAndOffset repetitionPeriodLengthAndOffset;
} NhuCmnTimeslotInfoSCCPCH;


typedef enum enumNhuCntrlChannelDRXCycle_TDD128
{
 NhuCntrlChannelDRXCycle_TDD128sub_frames_1Enum,
 NhuCntrlChannelDRXCycle_TDD128sub_frames_2Enum,
 NhuCntrlChannelDRXCycle_TDD128sub_frames_4Enum,
 NhuCntrlChannelDRXCycle_TDD128sub_frames_8Enum,
 NhuCntrlChannelDRXCycle_TDD128sub_frames_16Enum,
 NhuCntrlChannelDRXCycle_TDD128sub_frames_32Enum,
 NhuCntrlChannelDRXCycle_TDD128sub_frames_64Enum,
 NhuCntrlChannelDRXCycle_TDD128spare1Enum
} EnumNhuCntrlChannelDRXCycle_TDD128;
typedef TknU32 NhuCntrlChannelDRXCycle_TDD128;


typedef enum enumNhuEnablingDelay_TDD128
{
 NhuEnablingDelay_TDD128radio_frames_0Enum,
 NhuEnablingDelay_TDD128radio_frames_1Enum,
 NhuEnablingDelay_TDD128radio_frames_2Enum,
 NhuEnablingDelay_TDD128radio_frames_4Enum,
 NhuEnablingDelay_TDD128radio_frames_8Enum,
 NhuEnablingDelay_TDD128radio_frames_16Enum,
 NhuEnablingDelay_TDD128radio_frames_32Enum,
 NhuEnablingDelay_TDD128radio_frames_64Enum,
 NhuEnablingDelay_TDD128radio_frames_128Enum,
 NhuEnablingDelay_TDD128spare7Enum,
 NhuEnablingDelay_TDD128spare6Enum,
 NhuEnablingDelay_TDD128spare5Enum,
 NhuEnablingDelay_TDD128spare4Enum,
 NhuEnablingDelay_TDD128spare3Enum,
 NhuEnablingDelay_TDD128spare2Enum,
 NhuEnablingDelay_TDD128infinityEnum
} EnumNhuEnablingDelay_TDD128;
typedef TknU32 NhuEnablingDelay_TDD128;


typedef enum enumNhuHS_SCCH_DRX_InactivityThreshold_TDD128
{
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_1Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_2Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_4Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_8Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_16Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_32Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_64Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_128Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_256Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128sub_frames_512Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128spare6Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128spare5Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128spare4Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128spare3Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128spare2Enum,
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128infinityEnum
} EnumNhuHS_SCCH_DRX_InactivityThreshold_TDD128;
typedef TknU32 NhuHS_SCCH_DRX_InactivityThreshold_TDD128;


typedef TknU32 NhuHS_SCCH_DRX_Info_TDD128hS_SCCH_DRX_Offset;

typedef struct NhuHS_SCCH_DRX_Info_TDD128
{
 TknPres pres;
 NhuCntrlChannelDRXCycle_TDD128 hS_SCCH_DRX_Cycle;
 NhuHS_SCCH_DRX_InactivityThreshold_TDD128 hS_SCCH_DRX_InactivityThreshold;
 NhuHS_SCCH_DRX_Info_TDD128hS_SCCH_DRX_Offset hS_SCCH_DRX_Offset;
} NhuHS_SCCH_DRX_Info_TDD128;


typedef enum enumNhuE_AGCH_InactivityMonitorThreshold_TDD128
{
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_0Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_1Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_2Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_4Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_8Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_16Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_32Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_64Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_128Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_256Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128radio_frames_512Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128spare5Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128spare4Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128spare3Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128spare2Enum,
 NhuE_AGCH_InactivityMonitorThreshold_TDD128infinityEnum
} EnumNhuE_AGCH_InactivityMonitorThreshold_TDD128;
typedef TknU32 NhuE_AGCH_InactivityMonitorThreshold_TDD128;


typedef TknU32 NhuE_AGCH_DRX_Info_TDD128e_AGCH_DRX_InfoType_AGCH_DRX_Paramse_AGCH_DRX_Offset;

typedef struct NhuE_AGCH_DRX_Info_TDD128e_AGCH_DRX_InfoType_AGCH_DRX_Params
{
 TknPres pres;
 NhuCntrlChannelDRXCycle_TDD128 e_AGCH_DRX_Cycle;
 NhuE_AGCH_InactivityMonitorThreshold_TDD128 e_AGCH_InactivityMonitorThreshold;
 NhuE_AGCH_DRX_Info_TDD128e_AGCH_DRX_InfoType_AGCH_DRX_Paramse_AGCH_DRX_Offset e_AGCH_DRX_Offset;
} NhuE_AGCH_DRX_Info_TDD128e_AGCH_DRX_InfoType_AGCH_DRX_Params;

typedef struct NhuE_AGCH_DRX_Info_TDD128e_AGCH_DRX_InfoTyp
{
 TknU8 choice;
 union {
  NhuE_AGCH_DRX_Info_TDD128e_AGCH_DRX_InfoType_AGCH_DRX_Params e_AGCH_DRX_Params;
 } val;
} NhuE_AGCH_DRX_Info_TDD128e_AGCH_DRX_InfoTyp;

typedef struct NhuE_AGCH_DRX_Info_TDD128
{
 TknPres pres;
 NhuE_AGCH_DRX_Info_TDD128e_AGCH_DRX_InfoTyp e_AGCH_DRX_InfoTyp;
} NhuE_AGCH_DRX_Info_TDD128;

typedef struct NhuCntrlChannelDRXInfo_TDD128_r8controlChannelDrxOperationcontinue
{
 TknPres pres;
 NhuEnablingDelay_TDD128 enablingDelay;
} NhuCntrlChannelDRXInfo_TDD128_r8controlChannelDrxOperationcontinue;

typedef struct NhuCntrlChannelDRXInfo_TDD128_r8controlChannelDrxOperationnewOperation
{
 TknPres pres;
 NhuHS_SCCH_DRX_Info_TDD128 hS_SCCH_Drx_Info;
 NhuE_AGCH_DRX_Info_TDD128 e_AGCH_Drx_Info;
 NhuEnablingDelay_TDD128 enablingDelay;
} NhuCntrlChannelDRXInfo_TDD128_r8controlChannelDrxOperationnewOperation;

typedef struct NhuCntrlChannelDRXInfo_TDD128_r8controlChannelDrxOperation
{
 TknU8 choice;
 union {
  NhuCntrlChannelDRXInfo_TDD128_r8controlChannelDrxOperationcontinue continu;
  NhuCntrlChannelDRXInfo_TDD128_r8controlChannelDrxOperationnewOperation newOperation;
 } val;
} NhuCntrlChannelDRXInfo_TDD128_r8controlChannelDrxOperation;

typedef struct NhuCntrlChannelDRXInfo_TDD128_r8
{
 TknPres pres;
 NhuCntrlChannelDRXInfo_TDD128_r8controlChannelDrxOperation controlChannelDrxOperation;
} NhuCntrlChannelDRXInfo_TDD128_r8;


typedef TknU32 NhuDynamicPersistenceLvl;

typedef struct NhuDynamicPersistenceLvlTF_Lst
{
 TknU16 noComp;
 NhuDynamicPersistenceLvl *member;
}NhuDynamicPersistenceLvlTF_Lst;

typedef struct NhuCPCH_PersistenceLvls
{
 TknPres pres;
 NhuCPCH_SetID cpch_SetID;
 NhuDynamicPersistenceLvlTF_Lst dynamicPersistenceLvlTF_Lst;
} NhuCPCH_PersistenceLvls;

typedef struct NhuCPCH_PersistenceLvlsLst
{
 TknU16 noComp;
 NhuCPCH_PersistenceLvls *member;
}NhuCPCH_PersistenceLvlsLst;


typedef TknS32 NhuDeltaPp_m;


typedef enum enumNhuUL_DPCCH_SlotFormat
{
 NhuUL_DPCCH_SlotFormatslf0Enum,
 NhuUL_DPCCH_SlotFormatslf1Enum,
 NhuUL_DPCCH_SlotFormatslf2Enum
} EnumNhuUL_DPCCH_SlotFormat;
typedef TknU32 NhuUL_DPCCH_SlotFormat;


typedef TknU32 NhuN_StartMsg;


typedef TknU32 NhuN_EOT;


typedef enum enumNhuCPCH_StatusIndMode
{
 NhuCPCH_StatusIndModepa_modeEnum,
 NhuCPCH_StatusIndModepamsf_modeEnum
} EnumNhuCPCH_StatusIndMode;
typedef TknU32 NhuCPCH_StatusIndMode;


typedef enum enumNhuPCP_Length
{
 NhuPCP_Lengthas0Enum,
 NhuPCP_Lengthas8Enum
} EnumNhuPCP_Length;
typedef TknU32 NhuPCP_Length;

typedef struct NhuUCSM_Info
{
 TknPres pres;
 NhuMinimumSpreadingFactor minimumSpreadingFactor;
 NhuNF_Max nf_Max;
 NhuChannelReqParamsForUCSM channelReqParamsForUCSM;
} NhuUCSM_Info;


typedef TknU32 NhuPCPCH_ChannelInfopcpch_UL_ScramblingCode;


typedef TknU32 NhuPCPCH_ChannelInfopcpch_DL_ChannelisationCode;

typedef struct NhuPCPCH_ChannelInfo
{
 TknPres pres;
 NhuPCPCH_ChannelInfopcpch_UL_ScramblingCode pcpch_UL_ScramblingCode;
 NhuPCPCH_ChannelInfopcpch_DL_ChannelisationCode pcpch_DL_ChannelisationCode;
 NhuSecondaryScramblingCode pcpch_DL_ScramblingCode;
 NhuPCP_Length pcp_Length;
 NhuUCSM_Info ucsm_Info;
} NhuPCPCH_ChannelInfo;

typedef struct NhuPCPCH_ChannelInfoLst
{
 TknU16 noComp;
 NhuPCPCH_ChannelInfo *member;
}NhuPCPCH_ChannelInfoLst;

typedef struct NhuCPCH_SetInfo
{
 TknPres pres;
 NhuCPCH_SetID cpch_SetID;
 NhuTportFormatSet transportFormatSet;
 NhuTFCS tfcs;
 NhuAP_PreambleScramblingCode ap_PreambleScramblingCode;
 NhuAP_AICH_ChannelisationCode ap_AICH_ChannelisationCode;
 NhuCD_PreambleScramblingCode cd_PreambleScramblingCode;
 NhuCD_CA_ICH_ChannelisationCode cd_CA_ICH_ChannelisationCode;
 NhuCD_AccessSlotSubchannelLst cd_AccessSlotSubchannelLst;
 NhuCD_SignatureCodeLst cd_SignatureCodeLst;
 NhuDeltaPp_m deltaPp_m;
 NhuUL_DPCCH_SlotFormat ul_DPCCH_SlotFormat;
 NhuN_StartMsg n_StartMsg;
 NhuN_EOT n_EOT;
 NhuChannelAssignmentActive channelAssignmentActive;
 NhuCPCH_StatusIndMode cpch_StatusIndMode;
 NhuPCPCH_ChannelInfoLst pcpch_ChannelInfoLst;
} NhuCPCH_SetInfo;

typedef struct NhuCPCH_SetInfoLst
{
 TknU16 noComp;
 NhuCPCH_SetInfo *member;
}NhuCPCH_SetInfoLst;


typedef enum enumNhuCQI_DTX_Timer
{
 NhuCQI_DTX_Timersub_frames_0Enum,
 NhuCQI_DTX_Timersub_frames_1Enum,
 NhuCQI_DTX_Timersub_frames_2Enum,
 NhuCQI_DTX_Timersub_frames_4Enum,
 NhuCQI_DTX_Timersub_frames_8Enum,
 NhuCQI_DTX_Timersub_frames_16Enum,
 NhuCQI_DTX_Timersub_frames_32Enum,
 NhuCQI_DTX_Timersub_frames_64Enum,
 NhuCQI_DTX_Timersub_frames_128Enum,
 NhuCQI_DTX_Timersub_frames_256Enum,
 NhuCQI_DTX_Timersub_frames_512Enum,
 NhuCQI_DTX_Timersub_frames_InfinityEnum,
 NhuCQI_DTX_Timerspare4Enum,
 NhuCQI_DTX_Timerspare3Enum,
 NhuCQI_DTX_Timerspare2Enum,
 NhuCQI_DTX_Timerspare1Enum
} EnumNhuCQI_DTX_Timer;
typedef TknU32 NhuCQI_DTX_Timer;


typedef TknU32 NhuCQI_RepetitionFactor;


typedef TknS32 NhuCSICH_PowerOffset;


typedef TknU32 NhuDefaultDPCH_OffsetValueFDD;


typedef TknU32 NhuDefaultDPCH_OffsetValueTDD;


typedef TknU32 NhuDeltaCQI;


typedef TknU32 NhuDeltaSIR;


typedef TknS32 NhuDHS_Sync;


typedef TknU32 NhuDurationTimeInfo;

typedef struct NhuTimeInfo
{
 TknPres pres;
 NhuActvnTime activationTime;
 NhuDurationTimeInfo durationTimeInfo;
} NhuTimeInfo;


typedef enum enumNhuMidambleCfgBurstTyp1and3
{
 NhuMidambleCfgBurstTyp1and3ms4Enum,
 NhuMidambleCfgBurstTyp1and3ms8Enum,
 NhuMidambleCfgBurstTyp1and3ms16Enum
} EnumNhuMidambleCfgBurstTyp1and3;
typedef TknU32 NhuMidambleCfgBurstTyp1and3;


typedef enum enumNhuMidambleCfgBurstTyp2
{
 NhuMidambleCfgBurstTyp2ms3Enum,
 NhuMidambleCfgBurstTyp2ms6Enum
} EnumNhuMidambleCfgBurstTyp2;
typedef TknU32 NhuMidambleCfgBurstTyp2;


typedef TknU32 NhuMidambleShiftShort;

typedef struct NhuMidambleShiftAndBurstTypburstTyptype1midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftLong midambleShift;
} NhuMidambleShiftAndBurstTypburstTyptype1midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTypburstTyptype1midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTypburstTyptype1midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTypburstTyptype1midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTypburstTyptype1
{
 TknPres pres;
 NhuMidambleCfgBurstTyp1and3 midambleCfgBurstTyp1and3;
 NhuMidambleShiftAndBurstTypburstTyptype1midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTypburstTyptype1;

typedef struct NhuMidambleShiftAndBurstTypburstTyptype2midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftShort midambleShift;
} NhuMidambleShiftAndBurstTypburstTyptype2midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTypburstTyptype2midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTypburstTyptype2midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTypburstTyptype2midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTypburstTyptype2
{
 TknPres pres;
 NhuMidambleCfgBurstTyp2 midambleCfgBurstTyp2;
 NhuMidambleShiftAndBurstTypburstTyptype2midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTypburstTyptype2;

typedef struct NhuMidambleShiftAndBurstTypburstTyptype3midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftLong midambleShift;
} NhuMidambleShiftAndBurstTypburstTyptype3midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTypburstTyptype3midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTypburstTyptype3midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTypburstTyptype3midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTypburstTyptype3
{
 TknPres pres;
 NhuMidambleCfgBurstTyp1and3 midambleCfgBurstTyp1and3;
 NhuMidambleShiftAndBurstTypburstTyptype3midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTypburstTyptype3;

typedef struct NhuMidambleShiftAndBurstTypburstTyp
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTypburstTyptype1 type1;
  NhuMidambleShiftAndBurstTypburstTyptype2 type2;
  NhuMidambleShiftAndBurstTypburstTyptype3 type3;
 } val;
} NhuMidambleShiftAndBurstTypburstTyp;

typedef struct NhuMidambleShiftAndBurstTyp
{
 TknPres pres;
 NhuMidambleShiftAndBurstTypburstTyp burstTyp;
} NhuMidambleShiftAndBurstTyp;


typedef TknU8 NhuIvdualTimeslotInfotfci_Existence;

typedef struct NhuIvdualTimeslotInfo
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
 NhuIvdualTimeslotInfotfci_Existence tfci_Existence;
 NhuMidambleShiftAndBurstTyp midambleShiftAndBurstTyp;
} NhuIvdualTimeslotInfo;


typedef enum enumNhuDL_TS_ChannelisationCode
{
 NhuDL_TS_ChannelisationCodecc16_1Enum,
 NhuDL_TS_ChannelisationCodecc16_2Enum,
 NhuDL_TS_ChannelisationCodecc16_3Enum,
 NhuDL_TS_ChannelisationCodecc16_4Enum,
 NhuDL_TS_ChannelisationCodecc16_5Enum,
 NhuDL_TS_ChannelisationCodecc16_6Enum,
 NhuDL_TS_ChannelisationCodecc16_7Enum,
 NhuDL_TS_ChannelisationCodecc16_8Enum,
 NhuDL_TS_ChannelisationCodecc16_9Enum,
 NhuDL_TS_ChannelisationCodecc16_10Enum,
 NhuDL_TS_ChannelisationCodecc16_11Enum,
 NhuDL_TS_ChannelisationCodecc16_12Enum,
 NhuDL_TS_ChannelisationCodecc16_13Enum,
 NhuDL_TS_ChannelisationCodecc16_14Enum,
 NhuDL_TS_ChannelisationCodecc16_15Enum,
 NhuDL_TS_ChannelisationCodecc16_16Enum
} EnumNhuDL_TS_ChannelisationCode;
typedef TknU32 NhuDL_TS_ChannelisationCode;

typedef struct NhuDL_TS_ChannelisationCodesShortcodesRepresentationconsecutive
{
 TknPres pres;
 NhuDL_TS_ChannelisationCode firstChannelisationCode;
 NhuDL_TS_ChannelisationCode lastChannelisationCode;
} NhuDL_TS_ChannelisationCodesShortcodesRepresentationconsecutive;


typedef TknStrBSXL NhuDL_TS_ChannelisationCodesShortcodesRepresentationbitmap;
typedef struct NhuDL_TS_ChannelisationCodesShortcodesRepresentation
{
 TknU8 choice;
 union {
  NhuDL_TS_ChannelisationCodesShortcodesRepresentationconsecutive consecutive;
  NhuDL_TS_ChannelisationCodesShortcodesRepresentationbitmap bitmap;
 } val;
} NhuDL_TS_ChannelisationCodesShortcodesRepresentation;

typedef struct NhuDL_TS_ChannelisationCodesShort
{
 TknPres pres;
 NhuDL_TS_ChannelisationCodesShortcodesRepresentation codesRepresentation;
} NhuDL_TS_ChannelisationCodesShort;

typedef struct NhuDlnkAdditionalTimeslotsparameterssameAsLast
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
} NhuDlnkAdditionalTimeslotsparameterssameAsLast;

typedef struct NhuDlnkAdditionalTimeslotsparametersnewParams
{
 TknPres pres;
 NhuIvdualTimeslotInfo individualTimeslotInfo;
 NhuDL_TS_ChannelisationCodesShort dl_TS_ChannelisationCodesShort;
} NhuDlnkAdditionalTimeslotsparametersnewParams;

typedef struct NhuDlnkAdditionalTimeslotsparameters
{
 TknU8 choice;
 union {
  NhuDlnkAdditionalTimeslotsparameterssameAsLast sameAsLast;
  NhuDlnkAdditionalTimeslotsparametersnewParams newParams;
 } val;
} NhuDlnkAdditionalTimeslotsparameters;

typedef struct NhuDlnkAdditionalTimeslots
{
 TknPres pres;
 NhuDlnkAdditionalTimeslotsparameters parameters;
} NhuDlnkAdditionalTimeslots;


typedef TknU32 NhuDlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotsconsecutive;

typedef struct NhuDlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotstimeslotLst
{
 TknU16 noComp;
 NhuDlnkAdditionalTimeslots *member;
}NhuDlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotstimeslotLst;

typedef struct NhuDlnkTimeslotsCodesmoreTimeslotsadditionalTimeslots
{
 TknU8 choice;
 union {
  NhuDlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotsconsecutive consecutive;
  NhuDlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotstimeslotLst timeslotLst;
 } val;
} NhuDlnkTimeslotsCodesmoreTimeslotsadditionalTimeslots;

typedef struct NhuDlnkTimeslotsCodesmoreTimeslots
{
 TknU8 choice;
 union {
  NhuDlnkTimeslotsCodesmoreTimeslotsadditionalTimeslots additionalTimeslots;
 } val;
} NhuDlnkTimeslotsCodesmoreTimeslots;

typedef struct NhuDlnkTimeslotsCodes
{
 TknPres pres;
 NhuIvdualTimeslotInfo firstIvdualTimeslotInfo;
 NhuDL_TS_ChannelisationCodesShort dl_TS_ChannelisationCodesShort;
 NhuDlnkTimeslotsCodesmoreTimeslots moreTimeslots;
} NhuDlnkTimeslotsCodes;

typedef struct NhuUL_CCTrChTPCLst
{
 TknU16 noComp;
 NhuTFCS_Identity *member;
}NhuUL_CCTrChTPCLst;

typedef struct NhuDL_CCTrCh
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuTimeInfo timeInfo;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuDlnkTimeslotsCodes dl_CCTrCH_TimeslotsCodes;
 NhuUL_CCTrChTPCLst ul_CCTrChTPCLst;
} NhuDL_CCTrCh;


typedef TknU32 NhuTimeslotNumber_LCR_r4;


typedef TknU32 NhuMidambleShiftAndBurstTyp_LCR_r4midambleAllocnModeueSpecificMidamblemidambleShift;

typedef struct NhuMidambleShiftAndBurstTyp_LCR_r4midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_LCR_r4midambleAllocnModeueSpecificMidamblemidambleShift midambleShift;
} NhuMidambleShiftAndBurstTyp_LCR_r4midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_LCR_r4midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_LCR_r4midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_LCR_r4midambleAllocnMode;


typedef TknU32 NhuMidambleShiftAndBurstTyp_LCR_r4midambleCfg;

typedef struct NhuMidambleShiftAndBurstTyp_LCR_r4
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_LCR_r4midambleAllocnMode midambleAllocnMode;
 NhuMidambleShiftAndBurstTyp_LCR_r4midambleCfg midambleCfg;
} NhuMidambleShiftAndBurstTyp_LCR_r4;


typedef TknU8 NhuIvdualTimeslotInfo_LCR_r4tfci_Existence;


typedef enum enumNhuIvdualTimeslotInfo_LCR_r4modulation
{
 NhuIvdualTimeslotInfo_LCR_r4modulationmod_QPSKEnum,
 NhuIvdualTimeslotInfo_LCR_r4modulationmod_8PSKEnum
} EnumNhuIvdualTimeslotInfo_LCR_r4modulation;
typedef TknU32 NhuIvdualTimeslotInfo_LCR_r4modulation;


typedef enum enumNhuIvdualTimeslotInfo_LCR_r4ss_TPC_Symbols
{
 NhuIvdualTimeslotInfo_LCR_r4ss_TPC_SymbolszeroEnum,
 NhuIvdualTimeslotInfo_LCR_r4ss_TPC_SymbolsoneEnum,
 NhuIvdualTimeslotInfo_LCR_r4ss_TPC_SymbolssixteenOverSFEnum
} EnumNhuIvdualTimeslotInfo_LCR_r4ss_TPC_Symbols;
typedef TknU32 NhuIvdualTimeslotInfo_LCR_r4ss_TPC_Symbols;


typedef TknU32 NhuIvdualTimeslotInfo_LCR_r4additionalSS_TPC_Symbols;

typedef struct NhuIvdualTimeslotInfo_LCR_r4
{
 TknPres pres;
 NhuTimeslotNumber_LCR_r4 timeslotNumber;
 NhuIvdualTimeslotInfo_LCR_r4tfci_Existence tfci_Existence;
 NhuMidambleShiftAndBurstTyp_LCR_r4 midambleShiftAndBurstTyp;
 NhuIvdualTimeslotInfo_LCR_r4modulation modulation;
 NhuIvdualTimeslotInfo_LCR_r4ss_TPC_Symbols ss_TPC_Symbols;
 NhuIvdualTimeslotInfo_LCR_r4additionalSS_TPC_Symbols additionalSS_TPC_Symbols;
} NhuIvdualTimeslotInfo_LCR_r4;

typedef struct NhuDlnkAdditionalTimeslots_LCR_r4parameterssameAsLast
{
 TknPres pres;
 NhuTimeslotNumber_LCR_r4 timeslotNumber;
} NhuDlnkAdditionalTimeslots_LCR_r4parameterssameAsLast;

typedef struct NhuDlnkAdditionalTimeslots_LCR_r4parametersnewParams
{
 TknPres pres;
 NhuIvdualTimeslotInfo_LCR_r4 individualTimeslotInfo;
 NhuDL_TS_ChannelisationCodesShort dl_TS_ChannelisationCodesShort;
} NhuDlnkAdditionalTimeslots_LCR_r4parametersnewParams;

typedef struct NhuDlnkAdditionalTimeslots_LCR_r4parameters
{
 TknU8 choice;
 union {
  NhuDlnkAdditionalTimeslots_LCR_r4parameterssameAsLast sameAsLast;
  NhuDlnkAdditionalTimeslots_LCR_r4parametersnewParams newParams;
 } val;
} NhuDlnkAdditionalTimeslots_LCR_r4parameters;

typedef struct NhuDlnkAdditionalTimeslots_LCR_r4
{
 TknPres pres;
 NhuDlnkAdditionalTimeslots_LCR_r4parameters parameters;
} NhuDlnkAdditionalTimeslots_LCR_r4;


typedef TknU32 NhuDlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotsconsecutive;

typedef struct NhuDlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotstimeslotLst
{
 TknU16 noComp;
 NhuDlnkAdditionalTimeslots_LCR_r4 *member;
}NhuDlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotstimeslotLst;

typedef struct NhuDlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslots
{
 TknU8 choice;
 union {
  NhuDlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotsconsecutive consecutive;
  NhuDlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotstimeslotLst timeslotLst;
 } val;
} NhuDlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslots;

typedef struct NhuDlnkTimeslotsCodes_LCR_r4moreTimeslots
{
 TknU8 choice;
 union {
  NhuDlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslots additionalTimeslots;
 } val;
} NhuDlnkTimeslotsCodes_LCR_r4moreTimeslots;

typedef struct NhuDlnkTimeslotsCodes_LCR_r4
{
 TknPres pres;
 NhuIvdualTimeslotInfo_LCR_r4 firstIvdualTimeslotInfo;
 NhuDL_TS_ChannelisationCodesShort dl_TS_ChannelisationCodesShort;
 NhuDlnkTimeslotsCodes_LCR_r4moreTimeslots moreTimeslots;
} NhuDlnkTimeslotsCodes_LCR_r4;

typedef struct NhuDL_CCTrCh_r4tddOptiontdd384
{
 TknPres pres;
 NhuDlnkTimeslotsCodes dl_CCTrCH_TimeslotsCodes;
} NhuDL_CCTrCh_r4tddOptiontdd384;

typedef struct NhuDL_CCTrCh_r4tddOptiontdd128
{
 TknPres pres;
 NhuDlnkTimeslotsCodes_LCR_r4 dl_CCTrCH_TimeslotsCodes;
} NhuDL_CCTrCh_r4tddOptiontdd128;

typedef struct NhuDL_CCTrCh_r4tddOption
{
 TknU8 choice;
 union {
  NhuDL_CCTrCh_r4tddOptiontdd384 tdd384;
  NhuDL_CCTrCh_r4tddOptiontdd128 tdd128;
 } val;
} NhuDL_CCTrCh_r4tddOption;

typedef struct NhuDL_CCTrCh_r4
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuTimeInfo timeInfo;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuDL_CCTrCh_r4tddOption tddOption;
 NhuUL_CCTrChTPCLst ul_CCTrChTPCLst;
} NhuDL_CCTrCh_r4;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyptype1midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftLong midambleShift;
} NhuMidambleShiftAndBurstTyp_r7burstTyptype1midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyptype1midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_r7burstTyptype1midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_r7burstTyptype1midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyptype1
{
 TknPres pres;
 NhuMidambleCfgBurstTyp1and3 midambleCfgBurstTyp1and3;
 NhuMidambleShiftAndBurstTyp_r7burstTyptype1midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_r7burstTyptype1;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyptype2midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftShort midambleShift;
} NhuMidambleShiftAndBurstTyp_r7burstTyptype2midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyptype2midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_r7burstTyptype2midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_r7burstTyptype2midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyptype2
{
 TknPres pres;
 NhuMidambleCfgBurstTyp2 midambleCfgBurstTyp2;
 NhuMidambleShiftAndBurstTyp_r7burstTyptype2midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_r7burstTyptype2;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyptype3midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftLong midambleShift;
} NhuMidambleShiftAndBurstTyp_r7burstTyptype3midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyptype3midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_r7burstTyptype3midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_r7burstTyptype3midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyptype3
{
 TknPres pres;
 NhuMidambleCfgBurstTyp1and3 midambleCfgBurstTyp1and3;
 NhuMidambleShiftAndBurstTyp_r7burstTyptype3midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_r7burstTyptype3;

typedef struct NhuMidambleShiftAndBurstTyp_r7burstTyp
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_r7burstTyptype1 type1;
  NhuMidambleShiftAndBurstTyp_r7burstTyptype2 type2;
  NhuMidambleShiftAndBurstTyp_r7burstTyptype3 type3;
 } val;
} NhuMidambleShiftAndBurstTyp_r7burstTyp;

typedef struct NhuMidambleShiftAndBurstTyp_r7
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_r7burstTyp burstTyp;
} NhuMidambleShiftAndBurstTyp_r7;


typedef TknU8 NhuIvdualTimeslotInfo_r7tfci_Existence;

typedef struct NhuIvdualTimeslotInfo_r7
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
 NhuIvdualTimeslotInfo_r7tfci_Existence tfci_Existence;
 NhuMidambleShiftAndBurstTyp_r7 midambleShiftAndBurstTyp;
} NhuIvdualTimeslotInfo_r7;

typedef struct NhuDlnkAdditionalTimeslots_r7parameterssameAsLast
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
} NhuDlnkAdditionalTimeslots_r7parameterssameAsLast;

typedef struct NhuDlnkAdditionalTimeslots_r7parametersnewParams
{
 TknPres pres;
 NhuIvdualTimeslotInfo_r7 individualTimeslotInfo;
 NhuDL_TS_ChannelisationCodesShort dl_TS_ChannelisationCodesShort;
} NhuDlnkAdditionalTimeslots_r7parametersnewParams;

typedef struct NhuDlnkAdditionalTimeslots_r7parameters
{
 TknU8 choice;
 union {
  NhuDlnkAdditionalTimeslots_r7parameterssameAsLast sameAsLast;
  NhuDlnkAdditionalTimeslots_r7parametersnewParams newParams;
 } val;
} NhuDlnkAdditionalTimeslots_r7parameters;

typedef struct NhuDlnkAdditionalTimeslots_r7
{
 TknPres pres;
 NhuDlnkAdditionalTimeslots_r7parameters parameters;
} NhuDlnkAdditionalTimeslots_r7;


typedef TknU32 NhuDlnkTimeslotsCodes_r7moreTimeslotsadditionalTimeslotsconsecutive;

typedef struct NhuDlnkTimeslotsCodes_r7moreTimeslotsadditionalTimeslotstimeslotLst
{
 TknU16 noComp;
 NhuDlnkAdditionalTimeslots_r7 *member;
}NhuDlnkTimeslotsCodes_r7moreTimeslotsadditionalTimeslotstimeslotLst;

typedef struct NhuDlnkTimeslotsCodes_r7moreTimeslotsadditionalTimeslots
{
 TknU8 choice;
 union {
  NhuDlnkTimeslotsCodes_r7moreTimeslotsadditionalTimeslotsconsecutive consecutive;
  NhuDlnkTimeslotsCodes_r7moreTimeslotsadditionalTimeslotstimeslotLst timeslotLst;
 } val;
} NhuDlnkTimeslotsCodes_r7moreTimeslotsadditionalTimeslots;

typedef struct NhuDlnkTimeslotsCodes_r7moreTimeslots
{
 TknU8 choice;
 union {
  NhuDlnkTimeslotsCodes_r7moreTimeslotsadditionalTimeslots additionalTimeslots;
 } val;
} NhuDlnkTimeslotsCodes_r7moreTimeslots;

typedef struct NhuDlnkTimeslotsCodes_r7
{
 TknPres pres;
 NhuIvdualTimeslotInfo_r7 firstIvdualTimeslotInfo;
 NhuDL_TS_ChannelisationCodesShort dl_TS_ChannelisationCodesShort;
 NhuDlnkTimeslotsCodes_r7moreTimeslots moreTimeslots;
} NhuDlnkTimeslotsCodes_r7;


typedef enum enumNhuMidambleCfgBurstTyp2_VHCR
{
 NhuMidambleCfgBurstTyp2_VHCRms4Enum,
 NhuMidambleCfgBurstTyp2_VHCRms8Enum
} EnumNhuMidambleCfgBurstTyp2_VHCR;
typedef TknU32 NhuMidambleCfgBurstTyp2_VHCR;


typedef TknU32 NhuMidambleShiftShort_VHCR;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyptype1midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftLong midambleShift;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyptype1midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyptype1midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_VHCRburstTyptype1midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyptype1midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyptype1
{
 TknPres pres;
 NhuMidambleCfgBurstTyp1and3 midambleCfgBurstTyp1and3;
 NhuMidambleShiftAndBurstTyp_VHCRburstTyptype1midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyptype1;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyptype2midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftShort_VHCR midambleShift;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyptype2midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyptype2midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_VHCRburstTyptype2midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyptype2midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyptype2
{
 TknPres pres;
 NhuMidambleCfgBurstTyp2_VHCR midambleCfgBurstTyp2;
 NhuMidambleShiftAndBurstTyp_VHCRburstTyptype2midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyptype2;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyptype3midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftLong midambleShift;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyptype3midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyptype3midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_VHCRburstTyptype3midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyptype3midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyptype3
{
 TknPres pres;
 NhuMidambleCfgBurstTyp1and3 midambleCfgBurstTyp1and3;
 NhuMidambleShiftAndBurstTyp_VHCRburstTyptype3midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyptype3;

typedef struct NhuMidambleShiftAndBurstTyp_VHCRburstTyp
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_VHCRburstTyptype1 type1;
  NhuMidambleShiftAndBurstTyp_VHCRburstTyptype2 type2;
  NhuMidambleShiftAndBurstTyp_VHCRburstTyptype3 type3;
 } val;
} NhuMidambleShiftAndBurstTyp_VHCRburstTyp;

typedef struct NhuMidambleShiftAndBurstTyp_VHCR
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_VHCRburstTyp burstTyp;
} NhuMidambleShiftAndBurstTyp_VHCR;


typedef TknU8 NhuIvdualTimeslotInfo_VHCRtfci_Existence;

typedef struct NhuIvdualTimeslotInfo_VHCR
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
 NhuIvdualTimeslotInfo_VHCRtfci_Existence tfci_Existence;
 NhuMidambleShiftAndBurstTyp_VHCR midambleShiftAndBurstTyp_VHCR;
} NhuIvdualTimeslotInfo_VHCR;


typedef enum enumNhuDL_TS_ChannelisationCode_VHCR
{
 NhuDL_TS_ChannelisationCode_VHCRcc32_1Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_2Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_3Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_4Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc132_5Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_6Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_7Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_8Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_9Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_10Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_11Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_12Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_13Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_14Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_15Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_16Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_17Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_18Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_19Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_20Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_21Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_22Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_23Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_24Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_25Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_26Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_27Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_28Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_29Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_30Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_31Enum,
 NhuDL_TS_ChannelisationCode_VHCRcc32_32Enum
} EnumNhuDL_TS_ChannelisationCode_VHCR;
typedef TknU32 NhuDL_TS_ChannelisationCode_VHCR;

typedef struct NhuDL_TS_ChannelisationCodesShort_VHCRcodesRepresentationconsecutive
{
 TknPres pres;
 NhuDL_TS_ChannelisationCode_VHCR firstChannelisationCode;
 NhuDL_TS_ChannelisationCode_VHCR lastChannelisationCode;
} NhuDL_TS_ChannelisationCodesShort_VHCRcodesRepresentationconsecutive;


typedef TknStrBSXL NhuDL_TS_ChannelisationCodesShort_VHCRcodesRepresentationbitmap;
typedef struct NhuDL_TS_ChannelisationCodesShort_VHCRcodesRepresentation
{
 TknU8 choice;
 union {
  NhuDL_TS_ChannelisationCodesShort_VHCRcodesRepresentationconsecutive consecutive;
  NhuDL_TS_ChannelisationCodesShort_VHCRcodesRepresentationbitmap bitmap;
 } val;
} NhuDL_TS_ChannelisationCodesShort_VHCRcodesRepresentation;

typedef struct NhuDL_TS_ChannelisationCodesShort_VHCR
{
 TknPres pres;
 NhuDL_TS_ChannelisationCodesShort_VHCRcodesRepresentation codesRepresentation;
} NhuDL_TS_ChannelisationCodesShort_VHCR;

typedef struct NhuDlnkAdditionalTimeslots_VHCRparameterssameAsLast
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
} NhuDlnkAdditionalTimeslots_VHCRparameterssameAsLast;

typedef struct NhuDlnkAdditionalTimeslots_VHCRparametersnewParams
{
 TknPres pres;
 NhuIvdualTimeslotInfo_VHCR individualTimeslotInfo;
 NhuDL_TS_ChannelisationCodesShort_VHCR dl_TS_ChannelisationCodesShort;
} NhuDlnkAdditionalTimeslots_VHCRparametersnewParams;

typedef struct NhuDlnkAdditionalTimeslots_VHCRparameters
{
 TknU8 choice;
 union {
  NhuDlnkAdditionalTimeslots_VHCRparameterssameAsLast sameAsLast;
  NhuDlnkAdditionalTimeslots_VHCRparametersnewParams newParams;
 } val;
} NhuDlnkAdditionalTimeslots_VHCRparameters;

typedef struct NhuDlnkAdditionalTimeslots_VHCR
{
 TknPres pres;
 NhuDlnkAdditionalTimeslots_VHCRparameters parameters;
} NhuDlnkAdditionalTimeslots_VHCR;


typedef TknU32 NhuDlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotsconsecutive;

typedef struct NhuDlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotstimeslotLst
{
 TknU16 noComp;
 NhuDlnkAdditionalTimeslots_VHCR *member;
}NhuDlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotstimeslotLst;

typedef struct NhuDlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslots
{
 TknU8 choice;
 union {
  NhuDlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotsconsecutive consecutive;
  NhuDlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotstimeslotLst timeslotLst;
 } val;
} NhuDlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslots;

typedef struct NhuDlnkTimeslotsCodes_VHCRmoreTimeslots
{
 TknU8 choice;
 union {
  NhuDlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslots additionalTimeslots;
 } val;
} NhuDlnkTimeslotsCodes_VHCRmoreTimeslots;

typedef struct NhuDlnkTimeslotsCodes_VHCR
{
 TknPres pres;
 NhuIvdualTimeslotInfo_VHCR firstIvdualTimeslotInfo;
 NhuDL_TS_ChannelisationCodesShort_VHCR dl_TS_ChannelisationCodesShort;
 NhuDlnkTimeslotsCodes_VHCRmoreTimeslots moreTimeslots;
} NhuDlnkTimeslotsCodes_VHCR;

typedef struct NhuDL_CCTrCh_r7tddOptiontdd384
{
 TknPres pres;
 NhuDlnkTimeslotsCodes_r7 dl_CCTrCH_TimeslotsCodes;
} NhuDL_CCTrCh_r7tddOptiontdd384;

typedef struct NhuDL_CCTrCh_r7tddOptiontdd768
{
 TknPres pres;
 NhuDlnkTimeslotsCodes_VHCR dl_CCTrCH_TimeslotsCodes;
} NhuDL_CCTrCh_r7tddOptiontdd768;

typedef struct NhuDL_CCTrCh_r7tddOptiontdd128
{
 TknPres pres;
 NhuDlnkTimeslotsCodes_LCR_r4 dl_CCTrCH_TimeslotsCodes;
} NhuDL_CCTrCh_r7tddOptiontdd128;

typedef struct NhuDL_CCTrCh_r7tddOption
{
 TknU8 choice;
 union {
  NhuDL_CCTrCh_r7tddOptiontdd384 tdd384;
  NhuDL_CCTrCh_r7tddOptiontdd768 tdd768;
  NhuDL_CCTrCh_r7tddOptiontdd128 tdd128;
 } val;
} NhuDL_CCTrCh_r7tddOption;

typedef struct NhuDL_CCTrCh_r7
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuTimeInfo timeInfo;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuDL_CCTrCh_r7tddOption tddOption;
 NhuUL_CCTrChTPCLst ul_CCTrChTPCLst;
} NhuDL_CCTrCh_r7;

typedef struct NhuDL_CCTrChLst
{
 TknU16 noComp;
 NhuDL_CCTrCh *member;
}NhuDL_CCTrChLst;

typedef struct NhuDL_CCTrChLst_r7
{
 TknU16 noComp;
 NhuDL_CCTrCh_r7 *member;
}NhuDL_CCTrChLst_r7;

typedef struct NhuDL_CCTrChLst_r4
{
 TknU16 noComp;
 NhuDL_CCTrCh_r4 *member;
}NhuDL_CCTrChLst_r4;

typedef struct NhuDL_CCTrChLstToRemove
{
 TknU16 noComp;
 NhuTFCS_IdentityPlain *member;
}NhuDL_CCTrChLstToRemove;


typedef TknU32 NhuSF512_AndCodeNumbersf4;


typedef TknU32 NhuSF512_AndCodeNumbersf8;


typedef TknU32 NhuSF512_AndCodeNumbersf16;


typedef TknU32 NhuSF512_AndCodeNumbersf32;


typedef TknU32 NhuSF512_AndCodeNumbersf64;


typedef TknU32 NhuSF512_AndCodeNumbersf128;


typedef TknU32 NhuSF512_AndCodeNumbersf256;


typedef TknU32 NhuSF512_AndCodeNumbersf512;

typedef struct NhuSF512_AndCodeNumber
{
 TknU8 choice;
 union {
  NhuSF512_AndCodeNumbersf4 sf4;
  NhuSF512_AndCodeNumbersf8 sf8;
  NhuSF512_AndCodeNumbersf16 sf16;
  NhuSF512_AndCodeNumbersf32 sf32;
  NhuSF512_AndCodeNumbersf64 sf64;
  NhuSF512_AndCodeNumbersf128 sf128;
  NhuSF512_AndCodeNumbersf256 sf256;
  NhuSF512_AndCodeNumbersf512 sf512;
 } val;
} NhuSF512_AndCodeNumber;


typedef enum enumNhuScramblingCodeChange
{
 NhuScramblingCodeChangecodeChangeEnum,
 NhuScramblingCodeChangenoCodeChangeEnum
} EnumNhuScramblingCodeChange;
typedef TknU32 NhuScramblingCodeChange;

typedef struct NhuDL_ChannelisationCode
{
 TknPres pres;
 NhuSecondaryScramblingCode secondaryScramblingCode;
 NhuSF512_AndCodeNumber sf_AndCodeNumber;
 NhuScramblingCodeChange scramblingCodeChange;
} NhuDL_ChannelisationCode;

typedef struct NhuDL_ChannelisationCodeLst
{
 TknU16 noComp;
 NhuDL_ChannelisationCode *member;
}NhuDL_ChannelisationCodeLst;


typedef enum enumNhuDPC_Mode
{
 NhuDPC_ModesingleTPCEnum,
 NhuDPC_ModetpcTripletInSoftEnum
} EnumNhuDPC_Mode;
typedef TknU32 NhuDPC_Mode;

typedef struct NhuDL_DPCH_PowerCntrlInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuDPC_Mode dpc_Mode;
} NhuDL_DPCH_PowerCntrlInfomodeSpecificInfofdd;

typedef struct NhuDL_DPCH_PowerCntrlInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuTPC_StepSizeTDD tpc_StepSizeTDD;
} NhuDL_DPCH_PowerCntrlInfomodeSpecificInfotdd;

typedef struct NhuDL_DPCH_PowerCntrlInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_DPCH_PowerCntrlInfomodeSpecificInfofdd fdd;
  NhuDL_DPCH_PowerCntrlInfomodeSpecificInfotdd tdd;
 } val;
} NhuDL_DPCH_PowerCntrlInfomodeSpecificInfo;

typedef struct NhuDL_DPCH_PowerCntrlInfo
{
 TknPres pres;
 NhuDL_DPCH_PowerCntrlInfomodeSpecificInfo modeSpecificInfo;
} NhuDL_DPCH_PowerCntrlInfo;


typedef TknU32 NhuPowerOffsetPilot_pdpdch;

typedef struct NhuRestrictedTrCH
{
 TknPres pres;
 NhuDL_TrCH_Typ dl_restrictedTrCh_Typ;
 NhuTportChannelIdentity restrictedDL_TrCH_Identity;
 NhuAllowedTFI_Lst allowedTFILst;
} NhuRestrictedTrCH;

typedef struct NhuRestrictedTrCH_InfoLst
{
 TknU16 noComp;
 NhuRestrictedTrCH *member;
}NhuRestrictedTrCH_InfoLst;

typedef struct NhuDl_rate_matching_restriction
{
 TknPres pres;
 NhuRestrictedTrCH_InfoLst restrictedTrCH_InfoLst;
} NhuDl_rate_matching_restriction;

typedef struct NhuDL_DPCH_InfoCmncfnHandlinginitialise
{
 TknPres pres;
 NhuCfntargetsfnframeoffset dummy;
} NhuDL_DPCH_InfoCmncfnHandlinginitialise;

typedef struct NhuDL_DPCH_InfoCmncfnHandling
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmncfnHandlinginitialise initialise;
 } val;
} NhuDL_DPCH_InfoCmncfnHandling;


typedef TknU8 NhuDL_DPCH_InfoCmnmodeSpecificInfofddtfci_Existence;

typedef struct NhuDL_DPCH_InfoCmnmodeSpecificInfofdd
{
 TknPres pres;
 NhuDL_DPCH_PowerCntrlInfo dl_DPCH_PowerCntrlInfo;
 NhuPowerOffsetPilot_pdpdch powerOffsetPilot_pdpdch;
 NhuDl_rate_matching_restriction dl_rate_matching_restriction;
 NhuSF512_AndPilot spreadingFactorAndPilot;
 NhuPositionFixedOrFlexible positionFixedOrFlexible;
 NhuDL_DPCH_InfoCmnmodeSpecificInfofddtfci_Existence tfci_Existence;
} NhuDL_DPCH_InfoCmnmodeSpecificInfofdd;

typedef struct NhuDL_DPCH_InfoCmnmodeSpecificInfotdd
{
 TknPres pres;
 NhuDL_DPCH_PowerCntrlInfo dl_DPCH_PowerCntrlInfo;
} NhuDL_DPCH_InfoCmnmodeSpecificInfotdd;

typedef struct NhuDL_DPCH_InfoCmnmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmnmodeSpecificInfofdd fdd;
  NhuDL_DPCH_InfoCmnmodeSpecificInfotdd tdd;
 } val;
} NhuDL_DPCH_InfoCmnmodeSpecificInfo;

typedef struct NhuDL_DPCH_InfoCmn
{
 TknPres pres;
 NhuDL_DPCH_InfoCmncfnHandling cfnHandling;
 NhuDL_DPCH_InfoCmnmodeSpecificInfo modeSpecificInfo;
} NhuDL_DPCH_InfoCmn;


typedef TknU32 NhuTGCFN;


typedef enum enumNhuTGMP
{
 NhuTGMPtdd_MeasurementEnum,
 NhuTGMPfdd_MeasurementEnum,
 NhuTGMPgsm_CarrierRSSIMeasurementEnum,
 NhuTGMPgsm_initialBSICIdentificationEnum,
 NhuTGMPgsmBSICReconfirmationEnum,
 NhuTGMPmulti_carrierEnum
} EnumNhuTGMP;
typedef TknU32 NhuTGMP;


typedef TknU32 NhuTGPRC;


typedef TknU32 NhuTGSN;


typedef TknU32 NhuTGL;


typedef TknU32 NhuTGD;


typedef TknU32 NhuTGPL;


typedef enum enumNhuRPP
{
 NhuRPPmode0Enum,
 NhuRPPmode1Enum
} EnumNhuRPP;
typedef TknU32 NhuRPP;


typedef enum enumNhuITP
{
 NhuITPmode0Enum,
 NhuITPmode1Enum
} EnumNhuITP;
typedef TknU32 NhuITP;


typedef enum enumNhuUL_CompressedModeMethod
{
 NhuUL_CompressedModeMethodsf_2Enum,
 NhuUL_CompressedModeMethodhigherLyrSchedulingEnum
} EnumNhuUL_CompressedModeMethod;
typedef TknU32 NhuUL_CompressedModeMethod;


typedef enum enumNhuDL_CompressedModeMethod
{
 NhuDL_CompressedModeMethoddummyEnum,
 NhuDL_CompressedModeMethodsf_2Enum,
 NhuDL_CompressedModeMethodhigherLyrSchedulingEnum
} EnumNhuDL_CompressedModeMethod;
typedef TknU32 NhuDL_CompressedModeMethod;

typedef struct NhuUL_DL_Modeul_and_dl
{
 TknPres pres;
 NhuUL_CompressedModeMethod ul;
 NhuDL_CompressedModeMethod dl;
} NhuUL_DL_Modeul_and_dl;

typedef struct NhuUL_DL_Mode
{
 TknU8 choice;
 union {
  NhuUL_CompressedModeMethod ul;
  NhuDL_CompressedModeMethod dl;
  NhuUL_DL_Modeul_and_dl ul_and_dl;
 } val;
} NhuUL_DL_Mode;


typedef enum enumNhuDL_FrameTyp
{
 NhuDL_FrameTypdl_FrameTypAEnum,
 NhuDL_FrameTypdl_FrameTypBEnum
} EnumNhuDL_FrameTyp;
typedef TknU32 NhuDL_FrameTyp;


typedef TknU32 NhuNidentifyAbort;


typedef TknU32 NhuTreconfirmAbort;

typedef struct NhuTGPS_CfgParams
{
 TknPres pres;
 NhuTGMP tgmp;
 NhuTGPRC tgprc;
 NhuTGSN tgsn;
 NhuTGL tgl1;
 NhuTGL tgl2;
 NhuTGD tgd;
 NhuTGPL tgpl1;
 NhuTGPL dummy;
 NhuRPP rpp;
 NhuITP itp;
 NhuUL_DL_Mode ul_DL_Mode;
 NhuDL_FrameTyp dl_FrameTyp;
 NhuDeltaSIR deltaSIR1;
 NhuDeltaSIR deltaSIRAfter1;
 NhuDeltaSIR deltaSIR2;
 NhuDeltaSIR deltaSIRAfter2;
 NhuNidentifyAbort nidentifyAbort;
 NhuTreconfirmAbort treconfirmAbort;
} NhuTGPS_CfgParams;

typedef struct NhuTGP_Sequencetgps_Statusactivate
{
 TknPres pres;
 NhuTGCFN tgcfn;
} NhuTGP_Sequencetgps_Statusactivate;

typedef struct NhuTGP_Sequencetgps_Status
{
 TknU8 choice;
 union {
  NhuTGP_Sequencetgps_Statusactivate activate;
 } val;
} NhuTGP_Sequencetgps_Status;

typedef struct NhuTGP_Sequence
{
 TknPres pres;
 NhuTGPSI tgpsi;
 NhuTGP_Sequencetgps_Status tgps_Status;
 NhuTGPS_CfgParams tgps_CfgParams;
} NhuTGP_Sequence;

typedef struct NhuTGP_SequenceLst
{
 TknU16 noComp;
 NhuTGP_Sequence *member;
}NhuTGP_SequenceLst;

typedef struct NhuDPCH_CompressedModeInfo
{
 TknPres pres;
 NhuTGP_SequenceLst tgp_SequenceLst;
} NhuDPCH_CompressedModeInfo;


typedef enum enumNhuTX_DiversityMode
{
 NhuTX_DiversityModenoDiversityEnum,
 NhuTX_DiversityModesttdEnum,
 NhuTX_DiversityModeclosedLoopMode1Enum,
 NhuTX_DiversityModedummyEnum
} EnumNhuTX_DiversityMode;
typedef TknU32 NhuTX_DiversityMode;


typedef enum enumNhuS_Field
{
 NhuS_Fielde1bitEnum,
 NhuS_Fielde2bitsEnum
} EnumNhuS_Field;
typedef TknU32 NhuS_Field;

typedef struct NhuSSDT_Info
{
 TknPres pres;
 NhuS_Field s_Field;
 NhuCodeWordSet codeWordSet;
} NhuSSDT_Info;

typedef struct NhuDL_CmnInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuDefaultDPCH_OffsetValueFDD defaultDPCH_OffsetValue;
 NhuDPCH_CompressedModeInfo dpch_CompressedModeInfo;
 NhuTX_DiversityMode tx_DiversityMode;
 NhuSSDT_Info dummy;
} NhuDL_CmnInfomodeSpecificInfofdd;

typedef struct NhuDL_CmnInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuDefaultDPCH_OffsetValueTDD defaultDPCH_OffsetValue;
} NhuDL_CmnInfomodeSpecificInfotdd;

typedef struct NhuDL_CmnInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_CmnInfomodeSpecificInfofdd fdd;
  NhuDL_CmnInfomodeSpecificInfotdd tdd;
 } val;
} NhuDL_CmnInfomodeSpecificInfo;

typedef struct NhuDL_CmnInfo
{
 TknPres pres;
 NhuDL_DPCH_InfoCmn dl_DPCH_InfoCmn;
 NhuDL_CmnInfomodeSpecificInfo modeSpecificInfo;
} NhuDL_CmnInfo;

typedef struct NhuDL_DPCH_InfoCmn_r4cfnHandlinginitialise
{
 TknPres pres;
 NhuCfntargetsfnframeoffset dummy;
} NhuDL_DPCH_InfoCmn_r4cfnHandlinginitialise;

typedef struct NhuDL_DPCH_InfoCmn_r4cfnHandling
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmn_r4cfnHandlinginitialise initialise;
 } val;
} NhuDL_DPCH_InfoCmn_r4cfnHandling;


typedef TknU8 NhuDL_DPCH_InfoCmn_r4modeSpecificInfofddtfci_Existence;

typedef struct NhuDL_DPCH_InfoCmn_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuDL_DPCH_PowerCntrlInfo dl_DPCH_PowerCntrlInfo;
 NhuPowerOffsetPilot_pdpdch powerOffsetPilot_pdpdch;
 NhuDl_rate_matching_restriction dl_rate_matching_restriction;
 NhuSF512_AndPilot spreadingFactorAndPilot;
 NhuPositionFixedOrFlexible positionFixedOrFlexible;
 NhuDL_DPCH_InfoCmn_r4modeSpecificInfofddtfci_Existence tfci_Existence;
} NhuDL_DPCH_InfoCmn_r4modeSpecificInfofdd;

typedef struct NhuDL_DPCH_InfoCmn_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuDL_DPCH_PowerCntrlInfo dl_DPCH_PowerCntrlInfo;
} NhuDL_DPCH_InfoCmn_r4modeSpecificInfotdd;

typedef struct NhuDL_DPCH_InfoCmn_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmn_r4modeSpecificInfofdd fdd;
  NhuDL_DPCH_InfoCmn_r4modeSpecificInfotdd tdd;
 } val;
} NhuDL_DPCH_InfoCmn_r4modeSpecificInfo;

typedef struct NhuDL_DPCH_InfoCmn_r4
{
 TknPres pres;
 NhuDL_DPCH_InfoCmn_r4cfnHandling cfnHandling;
 NhuDL_DPCH_InfoCmn_r4modeSpecificInfo modeSpecificInfo;
 NhuMAC_d_HFN_initial_value mac_d_HFN_initial_value;
} NhuDL_DPCH_InfoCmn_r4;


typedef enum enumNhuSSDT_UL
{
 NhuSSDT_ULulEnum,
 NhuSSDT_ULul_AndDLEnum
} EnumNhuSSDT_UL;
typedef TknU32 NhuSSDT_UL;

typedef struct NhuSSDT_Info_r4
{
 TknPres pres;
 NhuS_Field s_Field;
 NhuCodeWordSet codeWordSet;
 NhuSSDT_UL ssdt_UL_r4;
} NhuSSDT_Info_r4;

typedef struct NhuDL_CmnInfo_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuDefaultDPCH_OffsetValueFDD defaultDPCH_OffsetValue;
 NhuDPCH_CompressedModeInfo dpch_CompressedModeInfo;
 NhuTX_DiversityMode tx_DiversityMode;
 NhuSSDT_Info_r4 dummy;
} NhuDL_CmnInfo_r4modeSpecificInfofdd;


typedef TknU8 NhuDL_CmnInfo_r4modeSpecificInfotddtddOptiontdd128tstd_Indicator;

typedef struct NhuDL_CmnInfo_r4modeSpecificInfotddtddOptiontdd128
{
 TknPres pres;
 NhuDL_CmnInfo_r4modeSpecificInfotddtddOptiontdd128tstd_Indicator tstd_Indicator;
} NhuDL_CmnInfo_r4modeSpecificInfotddtddOptiontdd128;

typedef struct NhuDL_CmnInfo_r4modeSpecificInfotddtddOption
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r4modeSpecificInfotddtddOptiontdd128 tdd128;
 } val;
} NhuDL_CmnInfo_r4modeSpecificInfotddtddOption;

typedef struct NhuDL_CmnInfo_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuDL_CmnInfo_r4modeSpecificInfotddtddOption tddOption;
 NhuDefaultDPCH_OffsetValueTDD defaultDPCH_OffsetValue;
} NhuDL_CmnInfo_r4modeSpecificInfotdd;

typedef struct NhuDL_CmnInfo_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r4modeSpecificInfofdd fdd;
  NhuDL_CmnInfo_r4modeSpecificInfotdd tdd;
 } val;
} NhuDL_CmnInfo_r4modeSpecificInfo;

typedef struct NhuDL_CmnInfo_r4
{
 TknPres pres;
 NhuDL_DPCH_InfoCmn_r4 dl_DPCH_InfoCmn;
 NhuDL_CmnInfo_r4modeSpecificInfo modeSpecificInfo;
} NhuDL_CmnInfo_r4;

typedef struct NhuDL_CmnInfo_r5modeSpecificInfofdd
{
 TknPres pres;
 NhuDefaultDPCH_OffsetValueFDD defaultDPCH_OffsetValue;
 NhuDPCH_CompressedModeInfo dpch_CompressedModeInfo;
 NhuTX_DiversityMode tx_DiversityMode;
 NhuSSDT_Info_r4 dummy;
} NhuDL_CmnInfo_r5modeSpecificInfofdd;


typedef TknU8 NhuDL_CmnInfo_r5modeSpecificInfotddtddOptiontdd128tstd_Indicator;

typedef struct NhuDL_CmnInfo_r5modeSpecificInfotddtddOptiontdd128
{
 TknPres pres;
 NhuDL_CmnInfo_r5modeSpecificInfotddtddOptiontdd128tstd_Indicator tstd_Indicator;
} NhuDL_CmnInfo_r5modeSpecificInfotddtddOptiontdd128;

typedef struct NhuDL_CmnInfo_r5modeSpecificInfotddtddOption
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r5modeSpecificInfotddtddOptiontdd128 tdd128;
 } val;
} NhuDL_CmnInfo_r5modeSpecificInfotddtddOption;

typedef struct NhuDL_CmnInfo_r5modeSpecificInfotdd
{
 TknPres pres;
 NhuDL_CmnInfo_r5modeSpecificInfotddtddOption tddOption;
 NhuDefaultDPCH_OffsetValueTDD defaultDPCH_OffsetValue;
} NhuDL_CmnInfo_r5modeSpecificInfotdd;

typedef struct NhuDL_CmnInfo_r5modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r5modeSpecificInfofdd fdd;
  NhuDL_CmnInfo_r5modeSpecificInfotdd tdd;
 } val;
} NhuDL_CmnInfo_r5modeSpecificInfo;


typedef enum enumNhuDL_CmnInfo_r5mac_hsResetIndicator
{
 NhuDL_CmnInfo_r5mac_hsResetIndicatortrueEnum
} EnumNhuDL_CmnInfo_r5mac_hsResetIndicator;
typedef TknU32 NhuDL_CmnInfo_r5mac_hsResetIndicator;

typedef struct NhuDL_CmnInfo_r5
{
 TknPres pres;
 NhuDL_DPCH_InfoCmn_r4 dl_DPCH_InfoCmn;
 NhuDL_CmnInfo_r5modeSpecificInfo modeSpecificInfo;
 NhuDL_CmnInfo_r5mac_hsResetIndicator mac_hsResetIndicator;
} NhuDL_CmnInfo_r5;


typedef enum enumNhuTimingMaintainedSynchInd
{
 NhuTimingMaintainedSynchIndfalseEnum
} EnumNhuTimingMaintainedSynchInd;
typedef TknU32 NhuTimingMaintainedSynchInd;

typedef struct NhuDL_DPCH_InfoCmn_r6cfnHandlingmaintain
{
 TknPres pres;
 NhuTimingMaintainedSynchInd timingmaintainedsynchind;
} NhuDL_DPCH_InfoCmn_r6cfnHandlingmaintain;

typedef struct NhuDL_DPCH_InfoCmn_r6cfnHandling
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmn_r6cfnHandlingmaintain maintain;
 } val;
} NhuDL_DPCH_InfoCmn_r6cfnHandling;


typedef TknU8 NhuDL_DPCH_InfoCmn_r6modeSpecificInfofddtfci_Existence;

typedef struct NhuDL_DPCH_InfoCmn_r6modeSpecificInfofdd
{
 TknPres pres;
 NhuDL_DPCH_PowerCntrlInfo dl_DPCH_PowerCntrlInfo;
 NhuPowerOffsetPilot_pdpdch powerOffsetPilot_pdpdch;
 NhuDl_rate_matching_restriction dl_rate_matching_restriction;
 NhuSF512_AndPilot spreadingFactorAndPilot;
 NhuPositionFixedOrFlexible positionFixedOrFlexible;
 NhuDL_DPCH_InfoCmn_r6modeSpecificInfofddtfci_Existence tfci_Existence;
} NhuDL_DPCH_InfoCmn_r6modeSpecificInfofdd;

typedef struct NhuDL_DPCH_InfoCmn_r6modeSpecificInfotdd
{
 TknPres pres;
 NhuDL_DPCH_PowerCntrlInfo dl_DPCH_PowerCntrlInfo;
} NhuDL_DPCH_InfoCmn_r6modeSpecificInfotdd;

typedef struct NhuDL_DPCH_InfoCmn_r6modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmn_r6modeSpecificInfofdd fdd;
  NhuDL_DPCH_InfoCmn_r6modeSpecificInfotdd tdd;
 } val;
} NhuDL_DPCH_InfoCmn_r6modeSpecificInfo;

typedef struct NhuDL_DPCH_InfoCmn_r6
{
 TknPres pres;
 NhuDL_DPCH_InfoCmn_r6cfnHandling cfnHandling;
 NhuDL_DPCH_InfoCmn_r6modeSpecificInfo modeSpecificInfo;
 NhuMAC_d_HFN_initial_value mac_d_HFN_initial_value;
} NhuDL_DPCH_InfoCmn_r6;

typedef struct NhuDL_FDPCH_InfoCmn_r6cfnHandlingmaintain
{
 TknPres pres;
 NhuTimingMaintainedSynchInd timingmaintainedsynchind;
} NhuDL_FDPCH_InfoCmn_r6cfnHandlingmaintain;

typedef struct NhuDL_FDPCH_InfoCmn_r6cfnHandling
{
 TknU8 choice;
 union {
  NhuDL_FDPCH_InfoCmn_r6cfnHandlingmaintain maintain;
 } val;
} NhuDL_FDPCH_InfoCmn_r6cfnHandling;


typedef TknU32 NhuDL_FDPCH_InfoCmn_r6dl_FDPCH_TPCcommandErrRate;

typedef struct NhuDL_FDPCH_InfoCmn_r6
{
 TknPres pres;
 NhuDL_FDPCH_InfoCmn_r6cfnHandling cfnHandling;
 NhuDL_DPCH_PowerCntrlInfo dl_FDPCH_PowerCntrlInfo;
 NhuDL_FDPCH_InfoCmn_r6dl_FDPCH_TPCcommandErrRate dl_FDPCH_TPCcommandErrRate;
} NhuDL_FDPCH_InfoCmn_r6;

typedef struct NhuDL_CmnInfo_r6dl_dpchInfoCmn
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmn_r6 dl_DPCH_InfoCmn;
  NhuDL_FDPCH_InfoCmn_r6 dl_FDPCH_InfoCmn;
 } val;
} NhuDL_CmnInfo_r6dl_dpchInfoCmn;

typedef struct NhuDL_CmnInfo_r6modeSpecificInfofdd
{
 TknPres pres;
 NhuDefaultDPCH_OffsetValueFDD defaultDPCH_OffsetValue;
 NhuDPCH_CompressedModeInfo dpch_CompressedModeInfo;
 NhuTX_DiversityMode tx_DiversityMode;
} NhuDL_CmnInfo_r6modeSpecificInfofdd;


typedef TknU8 NhuDL_CmnInfo_r6modeSpecificInfotddtddOptiontdd128tstd_Indicator;

typedef struct NhuDL_CmnInfo_r6modeSpecificInfotddtddOptiontdd128
{
 TknPres pres;
 NhuDL_CmnInfo_r6modeSpecificInfotddtddOptiontdd128tstd_Indicator tstd_Indicator;
} NhuDL_CmnInfo_r6modeSpecificInfotddtddOptiontdd128;

typedef struct NhuDL_CmnInfo_r6modeSpecificInfotddtddOption
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r6modeSpecificInfotddtddOptiontdd128 tdd128;
 } val;
} NhuDL_CmnInfo_r6modeSpecificInfotddtddOption;

typedef struct NhuDL_CmnInfo_r6modeSpecificInfotdd
{
 TknPres pres;
 NhuDL_CmnInfo_r6modeSpecificInfotddtddOption tddOption;
 NhuDefaultDPCH_OffsetValueTDD defaultDPCH_OffsetValue;
} NhuDL_CmnInfo_r6modeSpecificInfotdd;

typedef struct NhuDL_CmnInfo_r6modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r6modeSpecificInfofdd fdd;
  NhuDL_CmnInfo_r6modeSpecificInfotdd tdd;
 } val;
} NhuDL_CmnInfo_r6modeSpecificInfo;


typedef enum enumNhuDL_CmnInfo_r6mac_hsResetIndicator
{
 NhuDL_CmnInfo_r6mac_hsResetIndicatortrueEnum
} EnumNhuDL_CmnInfo_r6mac_hsResetIndicator;
typedef TknU32 NhuDL_CmnInfo_r6mac_hsResetIndicator;


typedef enum enumNhuDL_CmnInfo_r6postVerificationPeriod
{
 NhuDL_CmnInfo_r6postVerificationPeriodtrueEnum
} EnumNhuDL_CmnInfo_r6postVerificationPeriod;
typedef TknU32 NhuDL_CmnInfo_r6postVerificationPeriod;

typedef struct NhuDL_CmnInfo_r6
{
 TknPres pres;
 NhuDL_CmnInfo_r6dl_dpchInfoCmn dl_dpchInfoCmn;
 NhuDL_CmnInfo_r6modeSpecificInfo modeSpecificInfo;
 NhuDL_CmnInfo_r6mac_hsResetIndicator mac_hsResetIndicator;
 NhuDL_CmnInfo_r6postVerificationPeriod postVerificationPeriod;
} NhuDL_CmnInfo_r6;

typedef struct NhuDL_CmnInfo_r7dl_dpchInfoCmn
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmn_r6 dl_DPCH_InfoCmn;
  NhuDL_FDPCH_InfoCmn_r6 dl_FDPCH_InfoCmn;
 } val;
} NhuDL_CmnInfo_r7dl_dpchInfoCmn;

typedef struct NhuDL_CmnInfo_r7modeSpecificInfofdd
{
 TknPres pres;
 NhuDefaultDPCH_OffsetValueFDD defaultDPCH_OffsetValue;
 NhuDPCH_CompressedModeInfo dpch_CompressedModeInfo;
 NhuTX_DiversityMode tx_DiversityMode;
} NhuDL_CmnInfo_r7modeSpecificInfofdd;


typedef TknU8 NhuDL_CmnInfo_r7modeSpecificInfotddtddOptiontdd128tstd_Indicator;

typedef struct NhuDL_CmnInfo_r7modeSpecificInfotddtddOptiontdd128
{
 TknPres pres;
 NhuDL_CmnInfo_r7modeSpecificInfotddtddOptiontdd128tstd_Indicator tstd_Indicator;
} NhuDL_CmnInfo_r7modeSpecificInfotddtddOptiontdd128;

typedef struct NhuDL_CmnInfo_r7modeSpecificInfotddtddOption
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r7modeSpecificInfotddtddOptiontdd128 tdd128;
 } val;
} NhuDL_CmnInfo_r7modeSpecificInfotddtddOption;

typedef struct NhuDL_CmnInfo_r7modeSpecificInfotdd
{
 TknPres pres;
 NhuDL_CmnInfo_r7modeSpecificInfotddtddOption tddOption;
 NhuDefaultDPCH_OffsetValueTDD defaultDPCH_OffsetValue;
} NhuDL_CmnInfo_r7modeSpecificInfotdd;

typedef struct NhuDL_CmnInfo_r7modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r7modeSpecificInfofdd fdd;
  NhuDL_CmnInfo_r7modeSpecificInfotdd tdd;
 } val;
} NhuDL_CmnInfo_r7modeSpecificInfo;


typedef enum enumNhuDL_CmnInfo_r7mac_hsResetIndicator
{
 NhuDL_CmnInfo_r7mac_hsResetIndicatortrueEnum
} EnumNhuDL_CmnInfo_r7mac_hsResetIndicator;
typedef TknU32 NhuDL_CmnInfo_r7mac_hsResetIndicator;


typedef enum enumNhuDL_CmnInfo_r7postVerificationPeriod
{
 NhuDL_CmnInfo_r7postVerificationPeriodtrueEnum
} EnumNhuDL_CmnInfo_r7postVerificationPeriod;
typedef TknU32 NhuDL_CmnInfo_r7postVerificationPeriod;

typedef struct NhuDL_CmnInfo_r7
{
 TknPres pres;
 NhuDL_CmnInfo_r7dl_dpchInfoCmn dl_dpchInfoCmn;
 NhuDL_CmnInfo_r7modeSpecificInfo modeSpecificInfo;
 NhuDL_CmnInfo_r7mac_hsResetIndicator mac_hsResetIndicator;
 NhuDL_CmnInfo_r7postVerificationPeriod postVerificationPeriod;
} NhuDL_CmnInfo_r7;


typedef enum enumNhuTGMP_r8
{
 NhuTGMP_r8tdd_MeasurementEnum,
 NhuTGMP_r8fdd_MeasurementEnum,
 NhuTGMP_r8gsm_CarrierRSSIMeasurementEnum,
 NhuTGMP_r8gsm_initialBSICIdentificationEnum,
 NhuTGMP_r8gsmBSICReconfirmationEnum,
 NhuTGMP_r8multi_carrierEnum,
 NhuTGMP_r8e_UTRAEnum,
 NhuTGMP_r8spareEnum
} EnumNhuTGMP_r8;
typedef TknU32 NhuTGMP_r8;

typedef struct NhuTGPS_CfgParams_r8
{
 TknPres pres;
 NhuTGMP_r8 tgmp;
 NhuTGPRC tgprc;
 NhuTGSN tgsn;
 NhuTGL tgl1;
 NhuTGL tgl2;
 NhuTGD tgd;
 NhuTGPL tgpl1;
 NhuRPP rpp;
 NhuITP itp;
 NhuUL_DL_Mode ul_DL_Mode;
 NhuDL_FrameTyp dl_FrameTyp;
 NhuDeltaSIR deltaSIR1;
 NhuDeltaSIR deltaSIRAfter1;
 NhuDeltaSIR deltaSIR2;
 NhuDeltaSIR deltaSIRAfter2;
 NhuNidentifyAbort nidentifyAbort;
 NhuTreconfirmAbort treconfirmAbort;
} NhuTGPS_CfgParams_r8;

typedef struct NhuTGP_Sequence_r8tgps_Statusactivate
{
 TknPres pres;
 NhuTGCFN tgcfn;
} NhuTGP_Sequence_r8tgps_Statusactivate;

typedef struct NhuTGP_Sequence_r8tgps_Status
{
 TknU8 choice;
 union {
  NhuTGP_Sequence_r8tgps_Statusactivate activate;
 } val;
} NhuTGP_Sequence_r8tgps_Status;

typedef struct NhuTGP_Sequence_r8
{
 TknPres pres;
 NhuTGPSI tgpsi;
 NhuTGP_Sequence_r8tgps_Status tgps_Status;
 NhuTGPS_CfgParams_r8 tgps_CfgParams;
} NhuTGP_Sequence_r8;

typedef struct NhuTGP_SequenceLst_r8
{
 TknU16 noComp;
 NhuTGP_Sequence_r8 *member;
}NhuTGP_SequenceLst_r8;

typedef struct NhuDPCH_CompressedModeInfo_r8
{
 TknPres pres;
 NhuTGP_SequenceLst_r8 tgp_SequenceLst;
} NhuDPCH_CompressedModeInfo_r8;

typedef struct NhuDL_CmnInfo_r8dl_dpchInfoCmn
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmn_r6 dl_DPCH_InfoCmn;
  NhuDL_FDPCH_InfoCmn_r6 dl_FDPCH_InfoCmn;
 } val;
} NhuDL_CmnInfo_r8dl_dpchInfoCmn;

typedef struct NhuDL_CmnInfo_r8modeSpecificInfofdd
{
 TknPres pres;
 NhuDefaultDPCH_OffsetValueFDD defaultDPCH_OffsetValue;
 NhuDPCH_CompressedModeInfo_r8 dpch_CompressedModeInfo;
 NhuTX_DiversityMode tx_DiversityMode;
} NhuDL_CmnInfo_r8modeSpecificInfofdd;


typedef TknU8 NhuDL_CmnInfo_r8modeSpecificInfotddtddOptiontdd128tstd_Indicator;

typedef struct NhuDL_CmnInfo_r8modeSpecificInfotddtddOptiontdd128
{
 TknPres pres;
 NhuDL_CmnInfo_r8modeSpecificInfotddtddOptiontdd128tstd_Indicator tstd_Indicator;
} NhuDL_CmnInfo_r8modeSpecificInfotddtddOptiontdd128;

typedef struct NhuDL_CmnInfo_r8modeSpecificInfotddtddOption
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r8modeSpecificInfotddtddOptiontdd128 tdd128;
 } val;
} NhuDL_CmnInfo_r8modeSpecificInfotddtddOption;

typedef struct NhuDL_CmnInfo_r8modeSpecificInfotdd
{
 TknPres pres;
 NhuDL_CmnInfo_r8modeSpecificInfotddtddOption tddOption;
 NhuDefaultDPCH_OffsetValueTDD defaultDPCH_OffsetValue;
} NhuDL_CmnInfo_r8modeSpecificInfotdd;

typedef struct NhuDL_CmnInfo_r8modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r8modeSpecificInfofdd fdd;
  NhuDL_CmnInfo_r8modeSpecificInfotdd tdd;
 } val;
} NhuDL_CmnInfo_r8modeSpecificInfo;


typedef enum enumNhuDL_CmnInfo_r8mac_hsResetIndicator
{
 NhuDL_CmnInfo_r8mac_hsResetIndicatortrueEnum
} EnumNhuDL_CmnInfo_r8mac_hsResetIndicator;
typedef TknU32 NhuDL_CmnInfo_r8mac_hsResetIndicator;


typedef enum enumNhuDL_CmnInfo_r8postVerificationPeriod
{
 NhuDL_CmnInfo_r8postVerificationPeriodtrueEnum
} EnumNhuDL_CmnInfo_r8postVerificationPeriod;
typedef TknU32 NhuDL_CmnInfo_r8postVerificationPeriod;

typedef struct NhuDL_CmnInfo_r8
{
 TknPres pres;
 NhuDL_CmnInfo_r8dl_dpchInfoCmn dl_dpchInfoCmn;
 NhuDL_CmnInfo_r8modeSpecificInfo modeSpecificInfo;
 NhuDL_CmnInfo_r8mac_hsResetIndicator mac_hsResetIndicator;
 NhuDL_CmnInfo_r8postVerificationPeriod postVerificationPeriod;
} NhuDL_CmnInfo_r8;


typedef enum enumNhuTGPS_CfgParams_r10freqSpecificCompressedMode
{
 NhuTGPS_CfgParams_r10freqSpecificCompressedModetrueEnum
} EnumNhuTGPS_CfgParams_r10freqSpecificCompressedMode;
typedef TknU32 NhuTGPS_CfgParams_r10freqSpecificCompressedMode;

typedef struct NhuTGPS_CfgParams_r10
{
 TknPres pres;
 NhuTGMP_r8 tgmp;
 NhuTGPS_CfgParams_r10freqSpecificCompressedMode freqSpecificCompressedMode;
 NhuTGPRC tgprc;
 NhuTGSN tgsn;
 NhuTGL tgl1;
 NhuTGL tgl2;
 NhuTGD tgd;
 NhuTGPL tgpl1;
 NhuRPP rpp;
 NhuITP itp;
 NhuUL_DL_Mode ul_DL_Mode;
 NhuDL_FrameTyp dl_FrameTyp;
 NhuDeltaSIR deltaSIR1;
 NhuDeltaSIR deltaSIRAfter1;
 NhuDeltaSIR deltaSIR2;
 NhuDeltaSIR deltaSIRAfter2;
 NhuNidentifyAbort nidentifyAbort;
 NhuTreconfirmAbort treconfirmAbort;
} NhuTGPS_CfgParams_r10;

typedef struct NhuTGP_Sequence_r10tgps_Statusactivate
{
 TknPres pres;
 NhuTGCFN tgcfn;
} NhuTGP_Sequence_r10tgps_Statusactivate;

typedef struct NhuTGP_Sequence_r10tgps_Status
{
 TknU8 choice;
 union {
  NhuTGP_Sequence_r10tgps_Statusactivate activate;
 } val;
} NhuTGP_Sequence_r10tgps_Status;

typedef struct NhuTGP_Sequence_r10
{
 TknPres pres;
 NhuTGPSI tgpsi;
 NhuTGP_Sequence_r10tgps_Status tgps_Status;
 NhuTGPS_CfgParams_r10 tgps_CfgParams;
} NhuTGP_Sequence_r10;

typedef struct NhuTGP_SequenceLst_r10
{
 TknU16 noComp;
 NhuTGP_Sequence_r10 *member;
}NhuTGP_SequenceLst_r10;

typedef struct NhuDPCH_CompressedModeInfo_r10
{
 TknPres pres;
 NhuTGP_SequenceLst_r10 tgp_SequenceLst;
} NhuDPCH_CompressedModeInfo_r10;

typedef struct NhuDL_CmnInfo_r10dl_dpchInfoCmn
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoCmn_r6 dl_DPCH_InfoCmn;
  NhuDL_FDPCH_InfoCmn_r6 dl_FDPCH_InfoCmn;
 } val;
} NhuDL_CmnInfo_r10dl_dpchInfoCmn;

typedef struct NhuDL_CmnInfo_r10modeSpecificInfofdd
{
 TknPres pres;
 NhuDefaultDPCH_OffsetValueFDD defaultDPCH_OffsetValue;
 NhuDPCH_CompressedModeInfo_r10 dpch_CompressedModeInfo;
 NhuTX_DiversityMode tx_DiversityMode;
} NhuDL_CmnInfo_r10modeSpecificInfofdd;


typedef TknU8 NhuDL_CmnInfo_r10modeSpecificInfotddtddOptiontdd128tstd_Indicator;

typedef struct NhuDL_CmnInfo_r10modeSpecificInfotddtddOptiontdd128
{
 TknPres pres;
 NhuDL_CmnInfo_r10modeSpecificInfotddtddOptiontdd128tstd_Indicator tstd_Indicator;
} NhuDL_CmnInfo_r10modeSpecificInfotddtddOptiontdd128;

typedef struct NhuDL_CmnInfo_r10modeSpecificInfotddtddOption
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r10modeSpecificInfotddtddOptiontdd128 tdd128;
 } val;
} NhuDL_CmnInfo_r10modeSpecificInfotddtddOption;

typedef struct NhuDL_CmnInfo_r10modeSpecificInfotdd
{
 TknPres pres;
 NhuDL_CmnInfo_r10modeSpecificInfotddtddOption tddOption;
 NhuDefaultDPCH_OffsetValueTDD defaultDPCH_OffsetValue;
} NhuDL_CmnInfo_r10modeSpecificInfotdd;

typedef struct NhuDL_CmnInfo_r10modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_CmnInfo_r10modeSpecificInfofdd fdd;
  NhuDL_CmnInfo_r10modeSpecificInfotdd tdd;
 } val;
} NhuDL_CmnInfo_r10modeSpecificInfo;


typedef enum enumNhuDL_CmnInfo_r10mac_hsResetIndicator
{
 NhuDL_CmnInfo_r10mac_hsResetIndicatortrueEnum
} EnumNhuDL_CmnInfo_r10mac_hsResetIndicator;
typedef TknU32 NhuDL_CmnInfo_r10mac_hsResetIndicator;


typedef enum enumNhuDL_CmnInfo_r10postVerificationPeriod
{
 NhuDL_CmnInfo_r10postVerificationPeriodtrueEnum
} EnumNhuDL_CmnInfo_r10postVerificationPeriod;
typedef TknU32 NhuDL_CmnInfo_r10postVerificationPeriod;

typedef struct NhuDL_CmnInfo_r10
{
 TknPres pres;
 NhuDL_CmnInfo_r10dl_dpchInfoCmn dl_dpchInfoCmn;
 NhuDL_CmnInfo_r10modeSpecificInfo modeSpecificInfo;
 NhuDL_CmnInfo_r10mac_hsResetIndicator mac_hsResetIndicator;
 NhuDL_CmnInfo_r10postVerificationPeriod postVerificationPeriod;
} NhuDL_CmnInfo_r10;

typedef struct NhuDL_DPCH_InfoCmnPost
{
 TknPres pres;
 NhuDL_DPCH_PowerCntrlInfo dl_DPCH_PowerCntrlInfo;
} NhuDL_DPCH_InfoCmnPost;

typedef struct NhuDL_CmnInfoPost
{
 TknPres pres;
 NhuDL_DPCH_InfoCmnPost dl_DPCH_InfoCmn;
} NhuDL_CmnInfoPost;


typedef enum enumNhuPCPICH_UsageForChannelEst
{
 NhuPCPICH_UsageForChannelEstmayBeUsedEnum,
 NhuPCPICH_UsageForChannelEstshallNotBeUsedEnum
} EnumNhuPCPICH_UsageForChannelEst;
typedef TknU32 NhuPCPICH_UsageForChannelEst;


typedef TknU32 NhuDPCH_FrameOffset;

typedef struct NhuSecondaryCPICH_Info
{
 TknPres pres;
 NhuSecondaryScramblingCode secondaryDL_ScramblingCode;
 NhuChannelisationCode256 channelisationCode;
} NhuSecondaryCPICH_Info;


typedef TknU32 NhuTPC_CombinationIdx;


typedef enum enumNhuSSDT_CellIdentity
{
 NhuSSDT_CellIdentityssdt_id_aEnum,
 NhuSSDT_CellIdentityssdt_id_bEnum,
 NhuSSDT_CellIdentityssdt_id_cEnum,
 NhuSSDT_CellIdentityssdt_id_dEnum,
 NhuSSDT_CellIdentityssdt_id_eEnum,
 NhuSSDT_CellIdentityssdt_id_fEnum,
 NhuSSDT_CellIdentityssdt_id_gEnum,
 NhuSSDT_CellIdentityssdt_id_hEnum
} EnumNhuSSDT_CellIdentity;
typedef TknU32 NhuSSDT_CellIdentity;

typedef struct NhuDL_DPCH_InfoPerRLfdd
{
 TknPres pres;
 NhuPCPICH_UsageForChannelEst pCPICH_UsageForChannelEst;
 NhuDPCH_FrameOffset dpch_FrameOffset;
 NhuSecondaryCPICH_Info secondaryCPICH_Info;
 NhuDL_ChannelisationCodeLst dl_ChannelisationCodeLst;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
 NhuSSDT_CellIdentity dummy;
 NhuClosedLoopTimingAdjMode closedLoopTimingAdjMode;
} NhuDL_DPCH_InfoPerRLfdd;

typedef struct NhuDL_DPCH_InfoPerRLtdd
{
 TknPres pres;
 NhuDL_CCTrChLst dl_CCTrChLstToEstablish;
 NhuDL_CCTrChLstToRemove dl_CCTrChLstToRemove;
} NhuDL_DPCH_InfoPerRLtdd;

typedef struct NhuDL_DPCH_InfoPerRL
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoPerRLfdd fdd;
  NhuDL_DPCH_InfoPerRLtdd tdd;
 } val;
} NhuDL_DPCH_InfoPerRL;

typedef struct NhuDL_DPCH_InfoPerRL_r4fdd
{
 TknPres pres;
 NhuPCPICH_UsageForChannelEst pCPICH_UsageForChannelEst;
 NhuDPCH_FrameOffset dpch_FrameOffset;
 NhuSecondaryCPICH_Info secondaryCPICH_Info;
 NhuDL_ChannelisationCodeLst dl_ChannelisationCodeLst;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
 NhuSSDT_CellIdentity dummy;
 NhuClosedLoopTimingAdjMode closedLoopTimingAdjMode;
} NhuDL_DPCH_InfoPerRL_r4fdd;

typedef struct NhuDL_DPCH_InfoPerRL_r4tdd
{
 TknPres pres;
 NhuDL_CCTrChLst_r4 dl_CCTrChLstToEstablish;
 NhuDL_CCTrChLstToRemove dl_CCTrChLstToRemove;
} NhuDL_DPCH_InfoPerRL_r4tdd;

typedef struct NhuDL_DPCH_InfoPerRL_r4
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoPerRL_r4fdd fdd;
  NhuDL_DPCH_InfoPerRL_r4tdd tdd;
 } val;
} NhuDL_DPCH_InfoPerRL_r4;


typedef TknU32 NhuPowerOffsetTPC_pdpdch;

typedef struct NhuDL_DPCH_InfoPerRL_r5fdd
{
 TknPres pres;
 NhuPCPICH_UsageForChannelEst pCPICH_UsageForChannelEst;
 NhuDPCH_FrameOffset dpch_FrameOffset;
 NhuSecondaryCPICH_Info secondaryCPICH_Info;
 NhuDL_ChannelisationCodeLst dl_ChannelisationCodeLst;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
 NhuPowerOffsetTPC_pdpdch powerOffsetTPC_pdpdch;
 NhuSSDT_CellIdentity dummy;
 NhuClosedLoopTimingAdjMode closedLoopTimingAdjMode;
} NhuDL_DPCH_InfoPerRL_r5fdd;

typedef struct NhuDL_DPCH_InfoPerRL_r5tdd
{
 TknPres pres;
 NhuDL_CCTrChLst_r4 dl_CCTrChLstToEstablish;
 NhuDL_CCTrChLstToRemove dl_CCTrChLstToRemove;
} NhuDL_DPCH_InfoPerRL_r5tdd;

typedef struct NhuDL_DPCH_InfoPerRL_r5
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoPerRL_r5fdd fdd;
  NhuDL_DPCH_InfoPerRL_r5tdd tdd;
 } val;
} NhuDL_DPCH_InfoPerRL_r5;

typedef struct NhuDL_DPCH_InfoPerRL_r6fdd
{
 TknPres pres;
 NhuPCPICH_UsageForChannelEst pCPICH_UsageForChannelEst;
 NhuDPCH_FrameOffset dpch_FrameOffset;
 NhuSecondaryCPICH_Info secondaryCPICH_Info;
 NhuDL_ChannelisationCodeLst dl_ChannelisationCodeLst;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
 NhuPowerOffsetTPC_pdpdch powerOffsetTPC_pdpdch;
 NhuClosedLoopTimingAdjMode closedLoopTimingAdjMode;
} NhuDL_DPCH_InfoPerRL_r6fdd;

typedef struct NhuDL_DPCH_InfoPerRL_r6tdd
{
 TknPres pres;
 NhuDL_CCTrChLst_r4 dl_CCTrChLstToEstablish;
 NhuDL_CCTrChLstToRemove dl_CCTrChLstToRemove;
} NhuDL_DPCH_InfoPerRL_r6tdd;

typedef struct NhuDL_DPCH_InfoPerRL_r6
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoPerRL_r6fdd fdd;
  NhuDL_DPCH_InfoPerRL_r6tdd tdd;
 } val;
} NhuDL_DPCH_InfoPerRL_r6;

typedef struct NhuDL_DPCH_InfoPerRL_r7fdd
{
 TknPres pres;
 NhuPCPICH_UsageForChannelEst pCPICH_UsageForChannelEst;
 NhuDPCH_FrameOffset dpch_FrameOffset;
 NhuSecondaryCPICH_Info secondaryCPICH_Info;
 NhuDL_ChannelisationCodeLst dl_ChannelisationCodeLst;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
 NhuPowerOffsetTPC_pdpdch powerOffsetTPC_pdpdch;
 NhuClosedLoopTimingAdjMode closedLoopTimingAdjMode;
} NhuDL_DPCH_InfoPerRL_r7fdd;

typedef struct NhuDL_DPCH_InfoPerRL_r7tdd
{
 TknPres pres;
 NhuDL_CCTrChLst_r7 dl_CCTrChLstToEstablish;
 NhuDL_CCTrChLstToRemove dl_CCTrChLstToRemove;
} NhuDL_DPCH_InfoPerRL_r7tdd;

typedef struct NhuDL_DPCH_InfoPerRL_r7
{
 TknU8 choice;
 union {
  NhuDL_DPCH_InfoPerRL_r7fdd fdd;
  NhuDL_DPCH_InfoPerRL_r7tdd tdd;
 } val;
} NhuDL_DPCH_InfoPerRL_r7;


typedef TknU32 NhuDL_FDPCH_InfoPerRL_r6dl_ChannelisationCode;

typedef struct NhuDL_FDPCH_InfoPerRL_r6
{
 TknPres pres;
 NhuPCPICH_UsageForChannelEst pCPICH_UsageForChannelEst;
 NhuDPCH_FrameOffset fdpch_FrameOffset;
 NhuSecondaryCPICH_Info secondaryCPICH_Info;
 NhuSecondaryScramblingCode secondaryScramblingCode;
 NhuDL_FDPCH_InfoPerRL_r6dl_ChannelisationCode dl_ChannelisationCode;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
} NhuDL_FDPCH_InfoPerRL_r6;


typedef TknU32 NhuFDPCH_SlotFormat;


typedef enum enumNhuSTTDInd
{
 NhuSTTDIndtrueEnum
} EnumNhuSTTDInd;
typedef TknU32 NhuSTTDInd;


typedef TknU32 NhuDL_FDPCH_InfoPerRL_r7dl_ChannelisationCode;

typedef struct NhuDL_FDPCH_InfoPerRL_r7
{
 TknPres pres;
 NhuPCPICH_UsageForChannelEst pCPICH_UsageForChannelEst;
 NhuDPCH_FrameOffset fdpch_FrameOffset;
 NhuFDPCH_SlotFormat fdpch_SlotFormat;
 NhuSecondaryCPICH_Info secondaryCPICH_Info;
 NhuSecondaryScramblingCode secondaryScramblingCode;
 NhuDL_FDPCH_InfoPerRL_r7dl_ChannelisationCode dl_ChannelisationCode;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
 NhuSTTDInd sttdInd;
} NhuDL_FDPCH_InfoPerRL_r7;

typedef struct NhuDL_DPCH_InfoPerRL_PostFDD
{
 TknPres pres;
 NhuPCPICH_UsageForChannelEst pCPICH_UsageForChannelEst;
 NhuDL_ChannelisationCode dl_ChannelisationCode;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
} NhuDL_DPCH_InfoPerRL_PostFDD;

typedef struct NhuDL_DPCH_InfoPerRL_PostTDD
{
 TknPres pres;
 NhuDlnkTimeslotsCodes dl_DPCH_TimeslotsCodes;
} NhuDL_DPCH_InfoPerRL_PostTDD;

typedef struct NhuDL_DPCH_InfoPerRL_PostTDD_LCR_r4
{
 TknPres pres;
 NhuDlnkTimeslotsCodes_LCR_r4 dl_CCTrCH_TimeslotsCodes;
} NhuDL_DPCH_InfoPerRL_PostTDD_LCR_r4;


typedef enum enumNhuOutofSyncWindow
{
 NhuOutofSyncWindowms40Enum,
 NhuOutofSyncWindowms80Enum,
 NhuOutofSyncWindowms160Enum,
 NhuOutofSyncWindowms320Enum,
 NhuOutofSyncWindowms640Enum,
 NhuOutofSyncWindowspare3Enum,
 NhuOutofSyncWindowspare2Enum,
 NhuOutofSyncWindowspare1Enum
} EnumNhuOutofSyncWindow;
typedef TknU32 NhuOutofSyncWindow;

typedef struct NhuMidambleShiftAndBurstTyp_DLburstTyptype1midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftLong midambleShift;
} NhuMidambleShiftAndBurstTyp_DLburstTyptype1midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_DLburstTyptype1midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_DLburstTyptype1midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_DLburstTyptype1midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_DLburstTyptype1
{
 TknPres pres;
 NhuMidambleCfgBurstTyp1and3 midambleCfgBurstTyp1and3;
 NhuMidambleShiftAndBurstTyp_DLburstTyptype1midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_DLburstTyptype1;

typedef struct NhuMidambleShiftAndBurstTyp_DLburstTyptype2midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftShort midambleShift;
} NhuMidambleShiftAndBurstTyp_DLburstTyptype2midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_DLburstTyptype2midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_DLburstTyptype2midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_DLburstTyptype2midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_DLburstTyptype2
{
 TknPres pres;
 NhuMidambleCfgBurstTyp2 midambleCfgBurstTyp2;
 NhuMidambleShiftAndBurstTyp_DLburstTyptype2midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_DLburstTyptype2;

typedef struct NhuMidambleShiftAndBurstTyp_DLburstTyp
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_DLburstTyptype1 type1;
  NhuMidambleShiftAndBurstTyp_DLburstTyptype2 type2;
 } val;
} NhuMidambleShiftAndBurstTyp_DLburstTyp;

typedef struct NhuMidambleShiftAndBurstTyp_DL
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_DLburstTyp burstTyp;
} NhuMidambleShiftAndBurstTyp_DL;

typedef struct NhuDL_HSPDSCH_TS_CfgMember
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
 NhuMidambleShiftAndBurstTyp_DL midambleShiftAndBurstTyp;
} NhuDL_HSPDSCH_TS_CfgMember;

typedef struct NhuDL_HSPDSCH_TS_Cfg
{
 TknU16 noComp;
 NhuDL_HSPDSCH_TS_CfgMember *member;
}NhuDL_HSPDSCH_TS_Cfg;

typedef struct NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype1midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftLong midambleShift;
} NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype1midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype1midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype1midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype1midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype1
{
 TknPres pres;
 NhuMidambleCfgBurstTyp1and3 midambleCfgBurstTyp1and3;
 NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype1midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype1;

typedef struct NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype2midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftShort_VHCR midambleShift;
} NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype2midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype2midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype2midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype2midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype2
{
 TknPres pres;
 NhuMidambleCfgBurstTyp2_VHCR midambleCfgBurstTyp2;
 NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype2midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype2;

typedef struct NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyp
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype1 type1;
  NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyptype2 type2;
 } val;
} NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyp;

typedef struct NhuMidambleShiftAndBurstTyp_DL_VHCR
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_DL_VHCRburstTyp burstTyp;
} NhuMidambleShiftAndBurstTyp_DL_VHCR;

typedef struct NhuDL_HSPDSCH_TS_Cfg_VHCRMember
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
 NhuMidambleShiftAndBurstTyp_DL_VHCR midambleShiftAndBurstTyp;
} NhuDL_HSPDSCH_TS_Cfg_VHCRMember;

typedef struct NhuDL_HSPDSCH_TS_Cfg_VHCR
{
 TknU16 noComp;
 NhuDL_HSPDSCH_TS_Cfg_VHCRMember *member;
}NhuDL_HSPDSCH_TS_Cfg_VHCR;


typedef TknU32 NhuDSCH_RadioLinkId;

typedef struct NhuRL_IdLst
{
 TknU16 noComp;
 NhuPrimaryCPICH_Info *member;
}NhuRL_IdLst;

typedef struct NhuPDSCH_SHO_DCH_Info
{
 TknPres pres;
 NhuDSCH_RadioLinkId dsch_RadioLinkId;
 NhuRL_IdLst rl_IdLst;
} NhuPDSCH_SHO_DCH_Info;


typedef TknU32 NhuMaxTFCI_Field2Value;

typedef struct NhuDSCH_Mapping
{
 TknPres pres;
 NhuMaxTFCI_Field2Value maxTFCI_Field2Value;
 NhuSF_PDSCH spreadingFactor;
 NhuCodeNumberDSCH codeNumber;
 NhuMultiCodeInfo multiCodeInfo;
} NhuDSCH_Mapping;

typedef struct NhuDSCH_MappingLst
{
 TknU16 noComp;
 NhuDSCH_Mapping *member;
}NhuDSCH_MappingLst;

typedef struct NhuPDSCH_CodeInfo
{
 TknPres pres;
 NhuSF_PDSCH spreadingFactor;
 NhuCodeNumberDSCH codeNumber;
 NhuMultiCodeInfo multiCodeInfo;
} NhuPDSCH_CodeInfo;

typedef struct NhuPDSCH_CodeInfoLst
{
 TknU16 noComp;
 NhuPDSCH_CodeInfo *member;
}NhuPDSCH_CodeInfoLst;

typedef struct NhuReplacedPDSCH_CodeInfo
{
 TknPres pres;
 NhuMaxTFCI_Field2Value tfci_Field2;
 NhuSF_PDSCH spreadingFactor;
 NhuCodeNumberDSCH codeNumber;
 NhuMultiCodeInfo multiCodeInfo;
} NhuReplacedPDSCH_CodeInfo;

typedef struct NhuReplacedPDSCH_CodeInfoLst
{
 TknU16 noComp;
 NhuReplacedPDSCH_CodeInfo *member;
}NhuReplacedPDSCH_CodeInfoLst;

typedef struct NhuPDSCH_CodeMappingsignallingMethod
{
 TknU8 choice;
 union {
  NhuCodeRange codeRange;
  NhuDSCH_MappingLst tfci_Range;
  NhuPDSCH_CodeInfoLst explicit_config;
  NhuReplacedPDSCH_CodeInfoLst replace;
 } val;
} NhuPDSCH_CodeMappingsignallingMethod;

typedef struct NhuPDSCH_CodeMapping
{
 TknPres pres;
 NhuSecondaryScramblingCode dl_ScramblingCode;
 NhuPDSCH_CodeMappingsignallingMethod signallingMethod;
} NhuPDSCH_CodeMapping;

typedef struct NhuDL_PDSCH_Info
{
 TknPres pres;
 NhuPDSCH_SHO_DCH_Info dummy1;
 NhuPDSCH_CodeMapping dummy2;
} NhuDL_PDSCH_Info;


typedef enum enumNhuDL_SecondaryCellInfoFDDnewCfgdl_64QAM_Configured
{
 NhuDL_SecondaryCellInfoFDDnewCfgdl_64QAM_ConfiguredtrueEnum
} EnumNhuDL_SecondaryCellInfoFDDnewCfgdl_64QAM_Configured;
typedef TknU32 NhuDL_SecondaryCellInfoFDDnewCfgdl_64QAM_Configured;

typedef struct NhuDL_SecondaryCellInfoFDDnewCfghS_SCCHChannelisationCodeInfo
{
 TknU16 noComp;
 NhuHS_SCCH_Codes *member;
}NhuDL_SecondaryCellInfoFDDnewCfghS_SCCHChannelisationCodeInfo;

typedef struct NhuDL_SecondaryCellInfoFDDnewCfg
{
 TknPres pres;
 NhuH_RNTI new_H_RNTI;
 NhuDL_SecondaryCellInfoFDDnewCfgdl_64QAM_Configured dl_64QAM_Configured;
 NhuHS_DSCH_TBSizeTable hs_DSCH_TBSizeTable;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuSecondaryScramblingCode dl_ScramblingCode;
 NhuDL_SecondaryCellInfoFDDnewCfghS_SCCHChannelisationCodeInfo hS_SCCHChannelisationCodeInfo;
 NhuMeasurementPowerOffset measurementPowerOffset;
 NhuUARFCN uarfcn_DL;
} NhuDL_SecondaryCellInfoFDDnewCfg;

typedef struct NhuDL_SecondaryCellInfoFDD
{
 TknU8 choice;
 union {
  NhuDL_SecondaryCellInfoFDDnewCfg newCfg;
 } val;
} NhuDL_SecondaryCellInfoFDD;


typedef enum enumNhuDL_SecondaryCellInfoFDD_v890extdifferentTxModeFromServingHS_DSCHCell
{
 NhuDL_SecondaryCellInfoFDD_v890extdifferentTxModeFromServingHS_DSCHCelldifferentEnum
} EnumNhuDL_SecondaryCellInfoFDD_v890extdifferentTxModeFromServingHS_DSCHCell;
typedef TknU32 NhuDL_SecondaryCellInfoFDD_v890extdifferentTxModeFromServingHS_DSCHCell;

typedef struct NhuDL_SecondaryCellInfoFDD_v890ext
{
 TknPres pres;
 NhuDL_SecondaryCellInfoFDD_v890extdifferentTxModeFromServingHS_DSCHCell differentTxModeFromServingHS_DSCHCell;
} NhuDL_SecondaryCellInfoFDD_v890ext;

typedef struct NhuSecondaryCellMIMOparametersFDDnewCfg
{
 TknPres pres;
 NhuMIMO_N_M_Ratio mimoN_M_Ratio;
 NhuMIMO_PilotCfg_r9 mimoPilotCfg;
} NhuSecondaryCellMIMOparametersFDDnewCfg;

typedef struct NhuSecondaryCellMIMOparametersFDD
{
 TknU8 choice;
 union {
  NhuSecondaryCellMIMOparametersFDDnewCfg newCfg;
 } val;
} NhuSecondaryCellMIMOparametersFDD;


typedef enum enumNhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdl_64QAM_Configured
{
 NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdl_64QAM_ConfiguredtrueEnum
} EnumNhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdl_64QAM_Configured;
typedef TknU32 NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdl_64QAM_Configured;

typedef struct NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfghS_SCCHChannelisationCodeInfo
{
 TknU16 noComp;
 NhuHS_SCCH_Codes *member;
}NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfghS_SCCHChannelisationCodeInfo;


typedef enum enumNhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCell
{
 NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCelldifferentEnum
} EnumNhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCell;
typedef TknU32 NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCell;

typedef struct NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfg
{
 TknPres pres;
 NhuH_RNTI new_H_RNTI;
 NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdl_64QAM_Configured dl_64QAM_Configured;
 NhuHS_DSCH_TBSizeTable hs_DSCH_TBSizeTable;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuSecondaryScramblingCode dl_ScramblingCode;
 NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfghS_SCCHChannelisationCodeInfo hS_SCCHChannelisationCodeInfo;
 NhuMeasurementPowerOffset measurementPowerOffset;
 NhuUARFCN uarfcn_DL;
 NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfgdifferentTxModeFromServingHS_DSCHCell differentTxModeFromServingHS_DSCHCell;
} NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfg;

typedef struct NhuDL_SecondaryCellInfoFDD_r9configurationInfo
{
 TknU8 choice;
 union {
  NhuDL_SecondaryCellInfoFDD_r9configurationInfonewCfg newCfg;
 } val;
} NhuDL_SecondaryCellInfoFDD_r9configurationInfo;

typedef struct NhuDL_SecondaryCellInfoFDD_r9
{
 TknPres pres;
 NhuDL_SecondaryCellInfoFDD_r9configurationInfo configurationInfo;
 NhuSecondaryCellMIMOparametersFDD secondaryCellMIMOparameters;
} NhuDL_SecondaryCellInfoFDD_r9;

typedef struct NhuDL_TPC_PowerOffsetPerRL
{
 TknPres pres;
 NhuPowerOffsetTPC_pdpdch powerOffsetTPC_pdpdch;
} NhuDL_TPC_PowerOffsetPerRL;

typedef struct NhuDL_TPC_PowerOffsetPerRL_Lst
{
 TknU16 noComp;
 NhuDL_TPC_PowerOffsetPerRL *member;
}NhuDL_TPC_PowerOffsetPerRL_Lst;


typedef TknU32 NhuDL_ChannelCodes_MBSFN_IMB384firstChannelisationCode;


typedef TknU32 NhuDL_ChannelCodes_MBSFN_IMB384lastChannelisationCode;

typedef struct NhuDL_ChannelCodes_MBSFN_IMB384
{
 TknPres pres;
 NhuDL_ChannelCodes_MBSFN_IMB384firstChannelisationCode firstChannelisationCode;
 NhuDL_ChannelCodes_MBSFN_IMB384lastChannelisationCode lastChannelisationCode;
} NhuDL_ChannelCodes_MBSFN_IMB384;


typedef TknS32 NhuDPCCH_PowerOffset2;


typedef TknU32 NhuTGPS_Recfgn_CFN;

typedef struct NhuTGP_SequenceShorttgps_Statusactivate
{
 TknPres pres;
 NhuTGCFN tgcfn;
} NhuTGP_SequenceShorttgps_Statusactivate;

typedef struct NhuTGP_SequenceShorttgps_Status
{
 TknU8 choice;
 union {
  NhuTGP_SequenceShorttgps_Statusactivate activate;
 } val;
} NhuTGP_SequenceShorttgps_Status;

typedef struct NhuTGP_SequenceShort
{
 TknPres pres;
 NhuTGPSI tgpsi;
 NhuTGP_SequenceShorttgps_Status tgps_Status;
} NhuTGP_SequenceShort;

typedef struct NhuDPCH_CompressedModeStatusInfotgp_SequenceShortLst
{
 TknU16 noComp;
 NhuTGP_SequenceShort *member;
}NhuDPCH_CompressedModeStatusInfotgp_SequenceShortLst;

typedef struct NhuDPCH_CompressedModeStatusInfo
{
 TknPres pres;
 NhuTGPS_Recfgn_CFN tgps_Recfgn_CFN;
 NhuDPCH_CompressedModeStatusInfotgp_SequenceShortLst tgp_SequenceShortLst;
} NhuDPCH_CompressedModeStatusInfo;

typedef struct NhuTGP_SequenceShort_r10tgps_Statusactivate
{
 TknPres pres;
 NhuTGCFN tgcfn;
} NhuTGP_SequenceShort_r10tgps_Statusactivate;

typedef struct NhuTGP_SequenceShort_r10tgps_Status
{
 TknU8 choice;
 union {
  NhuTGP_SequenceShort_r10tgps_Statusactivate activate;
 } val;
} NhuTGP_SequenceShort_r10tgps_Status;


typedef enum enumNhuTGP_SequenceShort_r10freqSpecificCompressedMode
{
 NhuTGP_SequenceShort_r10freqSpecificCompressedModetrueEnum
} EnumNhuTGP_SequenceShort_r10freqSpecificCompressedMode;
typedef TknU32 NhuTGP_SequenceShort_r10freqSpecificCompressedMode;

typedef struct NhuTGP_SequenceShort_r10
{
 TknPres pres;
 NhuTGPSI tgpsi;
 NhuTGP_SequenceShort_r10tgps_Status tgps_Status;
 NhuTGP_SequenceShort_r10freqSpecificCompressedMode freqSpecificCompressedMode;
} NhuTGP_SequenceShort_r10;

typedef struct NhuDPCH_CompressedModeStatusInfo_r10tgp_SequenceShortLst
{
 TknU16 noComp;
 NhuTGP_SequenceShort_r10 *member;
}NhuDPCH_CompressedModeStatusInfo_r10tgp_SequenceShortLst;

typedef struct NhuDPCH_CompressedModeStatusInfo_r10
{
 TknPres pres;
 NhuTGPS_Recfgn_CFN tgps_Recfgn_CFN;
 NhuDPCH_CompressedModeStatusInfo_r10tgp_SequenceShortLst tgp_SequenceShortLst;
} NhuDPCH_CompressedModeStatusInfo_r10;


typedef enum enumNhuUE_DRX_Cycle_InactivityThreshold
{
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_0Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_1Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_2Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_4Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_8Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_16Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_32Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_64Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_128Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_256Enum,
 NhuUE_DRX_Cycle_InactivityThresholdsub_frames_512Enum,
 NhuUE_DRX_Cycle_InactivityThresholdspare5Enum,
 NhuUE_DRX_Cycle_InactivityThresholdspare4Enum,
 NhuUE_DRX_Cycle_InactivityThresholdspare3Enum,
 NhuUE_DRX_Cycle_InactivityThresholdspare2Enum,
 NhuUE_DRX_Cycle_InactivityThresholdspare1Enum
} EnumNhuUE_DRX_Cycle_InactivityThreshold;
typedef TknU32 NhuUE_DRX_Cycle_InactivityThreshold;


typedef enum enumNhuUE_DRX_Cycle
{
 NhuUE_DRX_Cyclesub_frames_4Enum,
 NhuUE_DRX_Cyclesub_frames_5Enum,
 NhuUE_DRX_Cyclesub_frames_8Enum,
 NhuUE_DRX_Cyclesub_frames_10Enum,
 NhuUE_DRX_Cyclesub_frames_16Enum,
 NhuUE_DRX_Cyclesub_frames_20Enum,
 NhuUE_DRX_Cyclespare2Enum,
 NhuUE_DRX_Cyclespare1Enum
} EnumNhuUE_DRX_Cycle;
typedef TknU32 NhuUE_DRX_Cycle;


typedef enum enumNhuUE_GrantMonitoring_InactivityThreshold
{
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_0Enum,
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_1Enum,
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_2Enum,
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_4Enum,
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_8Enum,
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_16Enum,
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_32Enum,
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_64Enum,
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_128Enum,
 NhuUE_GrantMonitoring_InactivityThresholde_dch_tti_256Enum,
 NhuUE_GrantMonitoring_InactivityThresholdspare6Enum,
 NhuUE_GrantMonitoring_InactivityThresholdspare5Enum,
 NhuUE_GrantMonitoring_InactivityThresholdspare4Enum,
 NhuUE_GrantMonitoring_InactivityThresholdspare3Enum,
 NhuUE_GrantMonitoring_InactivityThresholdspare2Enum,
 NhuUE_GrantMonitoring_InactivityThresholdspare1Enum
} EnumNhuUE_GrantMonitoring_InactivityThreshold;
typedef TknU32 NhuUE_GrantMonitoring_InactivityThreshold;


typedef TknU8 NhuDRX_Infoue_drx_GrantMonitoring;

typedef struct NhuDRX_Info
{
 TknPres pres;
 NhuUE_DRX_Cycle ue_drx_Cycle;
 NhuUE_DRX_Cycle_InactivityThreshold ue_drx_Cycle_InactivityThreshold;
 NhuUE_GrantMonitoring_InactivityThreshold ue_GrantMonitoring_InactivityThreshold;
 NhuDRX_Infoue_drx_GrantMonitoring ue_drx_GrantMonitoring;
} NhuDRX_Info;

typedef struct NhuDSCH_TportChannelsInfoMember
{
 TknPres pres;
 NhuTportChannelIdentity dsch_transport_channel_identity;
 NhuTportFormatSet dsch_TFS;
} NhuDSCH_TportChannelsInfoMember;

typedef struct NhuDSCH_TportChannelsInfo
{
 TknU16 noComp;
 NhuDSCH_TportChannelsInfoMember *member;
}NhuDSCH_TportChannelsInfo;


typedef enum enumNhuUE_DTX_Cycle1_10ms
{
 NhuUE_DTX_Cycle1_10mssub_frames_1Enum,
 NhuUE_DTX_Cycle1_10mssub_frames_5Enum,
 NhuUE_DTX_Cycle1_10mssub_frames_10Enum,
 NhuUE_DTX_Cycle1_10mssub_frames_20Enum
} EnumNhuUE_DTX_Cycle1_10ms;
typedef TknU32 NhuUE_DTX_Cycle1_10ms;


typedef enum enumNhuUE_DTX_Cycle2_10ms
{
 NhuUE_DTX_Cycle2_10mssub_frames_5Enum,
 NhuUE_DTX_Cycle2_10mssub_frames_10Enum,
 NhuUE_DTX_Cycle2_10mssub_frames_20Enum,
 NhuUE_DTX_Cycle2_10mssub_frames_40Enum,
 NhuUE_DTX_Cycle2_10mssub_frames_80Enum,
 NhuUE_DTX_Cycle2_10mssub_frames_160Enum,
 NhuUE_DTX_Cycle2_10msspare2Enum,
 NhuUE_DTX_Cycle2_10msspare1Enum
} EnumNhuUE_DTX_Cycle2_10ms;
typedef TknU32 NhuUE_DTX_Cycle2_10ms;


typedef enum enumNhuMAC_DTX_Cycle_10ms
{
 NhuMAC_DTX_Cycle_10mssub_frames_5Enum,
 NhuMAC_DTX_Cycle_10mssub_frames_10Enum,
 NhuMAC_DTX_Cycle_10mssub_frames_20Enum,
 NhuMAC_DTX_Cycle_10msspare1Enum
} EnumNhuMAC_DTX_Cycle_10ms;
typedef TknU32 NhuMAC_DTX_Cycle_10ms;

typedef struct NhuDTX_E_DCH_TTI_10ms
{
 TknPres pres;
 NhuUE_DTX_Cycle1_10ms ue_dtx_Cycle1_10ms;
 NhuUE_DTX_Cycle2_10ms ue_dtx_Cycle2_10ms;
 NhuMAC_DTX_Cycle_10ms mac_dtx_Cycle_10ms;
} NhuDTX_E_DCH_TTI_10ms;


typedef enum enumNhuUE_DTX_Cycle1_2ms
{
 NhuUE_DTX_Cycle1_2mssub_frames_1Enum,
 NhuUE_DTX_Cycle1_2mssub_frames_4Enum,
 NhuUE_DTX_Cycle1_2mssub_frames_5Enum,
 NhuUE_DTX_Cycle1_2mssub_frames_8Enum,
 NhuUE_DTX_Cycle1_2mssub_frames_10Enum,
 NhuUE_DTX_Cycle1_2mssub_frames_16Enum,
 NhuUE_DTX_Cycle1_2mssub_frames_20Enum,
 NhuUE_DTX_Cycle1_2msspare1Enum
} EnumNhuUE_DTX_Cycle1_2ms;
typedef TknU32 NhuUE_DTX_Cycle1_2ms;


typedef enum enumNhuUE_DTX_Cycle2_2ms
{
 NhuUE_DTX_Cycle2_2mssub_frames_4Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_5Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_8Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_10Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_16Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_20Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_32Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_40Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_64Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_80Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_128Enum,
 NhuUE_DTX_Cycle2_2mssub_frames_160Enum,
 NhuUE_DTX_Cycle2_2msspare4Enum,
 NhuUE_DTX_Cycle2_2msspare3Enum,
 NhuUE_DTX_Cycle2_2msspare2Enum,
 NhuUE_DTX_Cycle2_2msspare1Enum
} EnumNhuUE_DTX_Cycle2_2ms;
typedef TknU32 NhuUE_DTX_Cycle2_2ms;


typedef enum enumNhuMAC_DTX_Cycle_2ms
{
 NhuMAC_DTX_Cycle_2mssub_frames_1Enum,
 NhuMAC_DTX_Cycle_2mssub_frames_4Enum,
 NhuMAC_DTX_Cycle_2mssub_frames_5Enum,
 NhuMAC_DTX_Cycle_2mssub_frames_8Enum,
 NhuMAC_DTX_Cycle_2mssub_frames_10Enum,
 NhuMAC_DTX_Cycle_2mssub_frames_16Enum,
 NhuMAC_DTX_Cycle_2mssub_frames_20Enum,
 NhuMAC_DTX_Cycle_2msspare1Enum
} EnumNhuMAC_DTX_Cycle_2ms;
typedef TknU32 NhuMAC_DTX_Cycle_2ms;

typedef struct NhuDTX_E_DCH_TTI_2ms
{
 TknPres pres;
 NhuUE_DTX_Cycle1_2ms ue_dtx_Cycle1_2ms;
 NhuUE_DTX_Cycle2_2ms ue_dtx_Cycle2_2ms;
 NhuMAC_DTX_Cycle_2ms mac_dtx_Cycle_2ms;
} NhuDTX_E_DCH_TTI_2ms;


typedef enum enumNhuUE_DTX_Cycle2InactivityThreshold
{
 NhuUE_DTX_Cycle2InactivityThresholde_dch_tti_1Enum,
 NhuUE_DTX_Cycle2InactivityThresholde_dch_tti_4Enum,
 NhuUE_DTX_Cycle2InactivityThresholde_dch_tti_8Enum,
 NhuUE_DTX_Cycle2InactivityThresholde_dch_tti_16Enum,
 NhuUE_DTX_Cycle2InactivityThresholde_dch_tti_32Enum,
 NhuUE_DTX_Cycle2InactivityThresholde_dch_tti_64Enum,
 NhuUE_DTX_Cycle2InactivityThresholde_dch_tti_128Enum,
 NhuUE_DTX_Cycle2InactivityThresholde_dch_tti_256Enum,
 NhuUE_DTX_Cycle2InactivityThresholdspare8Enum,
 NhuUE_DTX_Cycle2InactivityThresholdspare7Enum,
 NhuUE_DTX_Cycle2InactivityThresholdspare6Enum,
 NhuUE_DTX_Cycle2InactivityThresholdspare5Enum,
 NhuUE_DTX_Cycle2InactivityThresholdspare4Enum,
 NhuUE_DTX_Cycle2InactivityThresholdspare3Enum,
 NhuUE_DTX_Cycle2InactivityThresholdspare2Enum,
 NhuUE_DTX_Cycle2InactivityThresholdspare1Enum
} EnumNhuUE_DTX_Cycle2InactivityThreshold;
typedef TknU32 NhuUE_DTX_Cycle2InactivityThreshold;


typedef enum enumNhuUE_DTX_long_preamble_length
{
 NhuUE_DTX_long_preamble_lengthslots_4Enum,
 NhuUE_DTX_long_preamble_lengthslots_15Enum
} EnumNhuUE_DTX_long_preamble_length;
typedef TknU32 NhuUE_DTX_long_preamble_length;


typedef enum enumNhuMAC_InactivityThreshold
{
 NhuMAC_InactivityThresholde_dch_tti_1Enum,
 NhuMAC_InactivityThresholde_dch_tti_2Enum,
 NhuMAC_InactivityThresholde_dch_tti_4Enum,
 NhuMAC_InactivityThresholde_dch_tti_8Enum,
 NhuMAC_InactivityThresholde_dch_tti_16Enum,
 NhuMAC_InactivityThresholde_dch_tti_32Enum,
 NhuMAC_InactivityThresholde_dch_tti_64Enum,
 NhuMAC_InactivityThresholde_dch_tti_128Enum,
 NhuMAC_InactivityThresholde_dch_tti_256Enum,
 NhuMAC_InactivityThresholde_dch_tti_512Enum,
 NhuMAC_InactivityThresholde_dch_tti_InfinityEnum,
 NhuMAC_InactivityThresholdspare5Enum,
 NhuMAC_InactivityThresholdspare4Enum,
 NhuMAC_InactivityThresholdspare3Enum,
 NhuMAC_InactivityThresholdspare2Enum,
 NhuMAC_InactivityThresholdspare1Enum
} EnumNhuMAC_InactivityThreshold;
typedef TknU32 NhuMAC_InactivityThreshold;


typedef enum enumNhuUE_DPCCH_Burst
{
 NhuUE_DPCCH_Burstsub_frames_1Enum,
 NhuUE_DPCCH_Burstsub_frames_2Enum,
 NhuUE_DPCCH_Burstsub_frames_5Enum,
 NhuUE_DPCCH_Burstspare1Enum
} EnumNhuUE_DPCCH_Burst;
typedef TknU32 NhuUE_DPCCH_Burst;

typedef struct NhuDTX_Infoe_dch_TTI_Length
{
 TknU8 choice;
 union {
  NhuDTX_E_DCH_TTI_10ms dtx_e_dch_TTI_10ms;
  NhuDTX_E_DCH_TTI_2ms dtx_e_dch_TTI_2ms;
 } val;
} NhuDTX_Infoe_dch_TTI_Length;


typedef TknU32 NhuDTX_Infoue_dtx_cycle2DefaultSG;

typedef struct NhuDTX_Info
{
 TknPres pres;
 NhuDTX_Infoe_dch_TTI_Length e_dch_TTI_Length;
 NhuUE_DTX_Cycle2InactivityThreshold ue_dtx_cycle2InactivityThreshold;
 NhuDTX_Infoue_dtx_cycle2DefaultSG ue_dtx_cycle2DefaultSG;
 NhuUE_DTX_long_preamble_length ue_dtx_long_preamble_length;
 NhuMAC_InactivityThreshold mac_InactivityThreshold;
 NhuCQI_DTX_Timer cqi_dtx_Timer;
 NhuUE_DPCCH_Burst ue_dpcch_Burst1;
 NhuUE_DPCCH_Burst ue_dpcch_Burst2;
} NhuDTX_Info;


typedef enum enumNhuUlnk_DPCCH_Slot_Format_Info
{
 NhuUlnk_DPCCH_Slot_Format_Infoslot_format_1Enum,
 NhuUlnk_DPCCH_Slot_Format_InfodummyEnum,
 NhuUlnk_DPCCH_Slot_Format_Infoslot_format_4Enum,
 NhuUlnk_DPCCH_Slot_Format_Infospare1Enum
} EnumNhuUlnk_DPCCH_Slot_Format_Info;
typedef TknU32 NhuUlnk_DPCCH_Slot_Format_Info;

typedef struct NhuDTX_DRX_Info_r7
{
 TknPres pres;
 NhuDTX_Info dtx_Info;
 NhuDRX_Info drx_Info;
 NhuUlnk_DPCCH_Slot_Format_Info uplink_DPCCHSlotFormatInfo;
} NhuDTX_DRX_Info_r7;

typedef struct NhuDynamicPersistenceLvlLst
{
 TknU16 noComp;
 NhuDynamicPersistenceLvl *member;
}NhuDynamicPersistenceLvlLst;


typedef TknU32 NhuE_AGCH_ChannelisationCode;


typedef enum enumNhuMidambleCfgBurstTyp1
{
 NhuMidambleCfgBurstTyp1ms4Enum,
 NhuMidambleCfgBurstTyp1ms8Enum,
 NhuMidambleCfgBurstTyp1ms16Enum
} EnumNhuMidambleCfgBurstTyp1;
typedef TknU32 NhuMidambleCfgBurstTyp1;

typedef struct NhuMidambleShiftAndBurstTyp_EDCHburstTyptype1midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftLong midambleShift;
} NhuMidambleShiftAndBurstTyp_EDCHburstTyptype1midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_EDCHburstTyptype1midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_EDCHburstTyptype1midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_EDCHburstTyptype1midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_EDCHburstTyptype1
{
 TknPres pres;
 NhuMidambleCfgBurstTyp1 midambleCfgBurstTyp1;
 NhuMidambleShiftAndBurstTyp_EDCHburstTyptype1midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_EDCHburstTyptype1;

typedef struct NhuMidambleShiftAndBurstTyp_EDCHburstTyptype2midambleAllocnModeueSpecificMidamble
{
 TknPres pres;
 NhuMidambleShiftShort midambleShift;
} NhuMidambleShiftAndBurstTyp_EDCHburstTyptype2midambleAllocnModeueSpecificMidamble;

typedef struct NhuMidambleShiftAndBurstTyp_EDCHburstTyptype2midambleAllocnMode
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_EDCHburstTyptype2midambleAllocnModeueSpecificMidamble ueSpecificMidamble;
 } val;
} NhuMidambleShiftAndBurstTyp_EDCHburstTyptype2midambleAllocnMode;

typedef struct NhuMidambleShiftAndBurstTyp_EDCHburstTyptype2
{
 TknPres pres;
 NhuMidambleCfgBurstTyp2 midambleCfgBurstTyp2;
 NhuMidambleShiftAndBurstTyp_EDCHburstTyptype2midambleAllocnMode midambleAllocnMode;
} NhuMidambleShiftAndBurstTyp_EDCHburstTyptype2;

typedef struct NhuMidambleShiftAndBurstTyp_EDCHburstTyp
{
 TknU8 choice;
 union {
  NhuMidambleShiftAndBurstTyp_EDCHburstTyptype1 type1;
  NhuMidambleShiftAndBurstTyp_EDCHburstTyptype2 type2;
 } val;
} NhuMidambleShiftAndBurstTyp_EDCHburstTyp;

typedef struct NhuMidambleShiftAndBurstTyp_EDCH
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_EDCHburstTyp burstTyp;
} NhuMidambleShiftAndBurstTyp_EDCH;


typedef TknU32 NhuE_AGCH_IvdualtS_number;

typedef struct NhuE_AGCH_Ivdual
{
 TknPres pres;
 NhuE_AGCH_IvdualtS_number tS_number;
 NhuDL_TS_ChannelisationCode channelisation_code;
 NhuMidambleShiftAndBurstTyp_EDCH midambleShiftAndBurstTyp;
} NhuE_AGCH_Ivdual;


typedef TknU32 NhuE_AGCH_Ivdual_VHCRtS_number;

typedef struct NhuE_AGCH_Ivdual_VHCR
{
 TknPres pres;
 NhuE_AGCH_Ivdual_VHCRtS_number tS_number;
 NhuDL_TS_ChannelisationCode_VHCR channelisation_code;
 NhuMidambleShiftAndBurstTyp_EDCH midambleShiftAndBurstTyp;
} NhuE_AGCH_Ivdual_VHCR;

typedef struct NhuE_AGCH_Set_Config
{
 TknU16 noComp;
 NhuE_AGCH_Ivdual *member;
}NhuE_AGCH_Set_Config;

typedef struct NhuE_AGCH_Set_Config_VHCR
{
 TknU16 noComp;
 NhuE_AGCH_Ivdual_VHCR *member;
}NhuE_AGCH_Set_Config_VHCR;

typedef struct NhuE_HICH_Info
{
 TknPres pres;
 NhuE_HICH_ChannelisationCode channelisationCode;
 NhuE_HICH_RGCH_SignatureSequence signatureSequence;
} NhuE_HICH_Info;


typedef TknU32 NhuE_RGCH_CombinationIdx;

typedef struct NhuE_RGCH_Info
{
 TknPres pres;
 NhuE_HICH_RGCH_SignatureSequence signatureSequence;
 NhuE_RGCH_CombinationIdx rg_CombinationIdx;
} NhuE_RGCH_Info;

typedef struct NhuE_DCH_RL_InfoOtherCelle_HICH_Info
{
 TknU8 choice;
 union {
  NhuE_HICH_Info e_HICH_Info;
 } val;
} NhuE_DCH_RL_InfoOtherCelle_HICH_Info;

typedef struct NhuE_DCH_RL_InfoOtherCelle_RGCH_Info
{
 TknU8 choice;
 union {
  NhuE_RGCH_Info e_RGCH_Info;
 } val;
} NhuE_DCH_RL_InfoOtherCelle_RGCH_Info;

typedef struct NhuE_DCH_RL_InfoOtherCell
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuE_DCH_RL_InfoOtherCelle_HICH_Info e_HICH_Info;
 NhuE_DCH_RL_InfoOtherCelle_RGCH_Info e_RGCH_Info;
} NhuE_DCH_RL_InfoOtherCell;

typedef struct NhuE_DCH_RL_InfoOtherCell_SecULFreqe_RGCH_Info
{
 TknU8 choice;
 union {
  NhuE_RGCH_Info e_RGCH_Info;
 } val;
} NhuE_DCH_RL_InfoOtherCell_SecULFreqe_RGCH_Info;

typedef struct NhuE_DCH_RL_InfoOtherCell_SecULFreq
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuE_HICH_Info e_HICH_Info;
 NhuE_DCH_RL_InfoOtherCell_SecULFreqe_RGCH_Info e_RGCH_Info;
} NhuE_DCH_RL_InfoOtherCell_SecULFreq;


typedef TknU32 NhuE_DPCCH_DPCCH_PowerOffset;


typedef TknU32 NhuE_DPDCH_Reference_E_TFCI_r7reference_E_TFCI;


typedef TknU32 NhuE_DPDCH_Reference_E_TFCI_r7reference_E_TFCI_PO_r7;

typedef struct NhuE_DPDCH_Reference_E_TFCI_r7
{
 TknPres pres;
 NhuE_DPDCH_Reference_E_TFCI_r7reference_E_TFCI reference_E_TFCI;
 NhuE_DPDCH_Reference_E_TFCI_r7reference_E_TFCI_PO_r7 reference_E_TFCI_PO_r7;
} NhuE_DPDCH_Reference_E_TFCI_r7;

typedef struct NhuE_DPDCH_Reference_E_TFCILst_r7
{
 TknU16 noComp;
 NhuE_DPDCH_Reference_E_TFCI_r7 *member;
}NhuE_DPDCH_Reference_E_TFCILst_r7;

typedef struct NhuE_DCH_RL_InfoSameServingCell
{
 TknPres pres;
 NhuE_DPCCH_DPCCH_PowerOffset e_DPCCH_DPCCH_PowerOffset;
 NhuE_DPDCH_Reference_E_TFCILst_r7 reference_E_TFCIs;
} NhuE_DCH_RL_InfoSameServingCell;


typedef TknU32 NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod2;


typedef TknU32 NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod4;


typedef TknU32 NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod8;


typedef TknU32 NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod16;


typedef TknU32 NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod32;

typedef struct NhuRepetitionPeriodAndLengthForSPS
{
 TknU8 choice;
 union {
  NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod2 repetitionPeriod2;
  NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod4 repetitionPeriod4;
  NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod8 repetitionPeriod8;
  NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod16 repetitionPeriod16;
  NhuRepetitionPeriodAndLengthForSPSrepetitionPeriod32 repetitionPeriod32;
 } val;
} NhuRepetitionPeriodAndLengthForSPS;

typedef struct NhuE_DCH_TxPatternLst_TDD128Member
{
 TknPres pres;
 NhuRepetitionPeriodAndLengthForSPS repetitionPeriodAndLength;
} NhuE_DCH_TxPatternLst_TDD128Member;

typedef struct NhuE_DCH_TxPatternLst_TDD128
{
 TknU16 noComp;
 NhuE_DCH_TxPatternLst_TDD128Member *member;
}NhuE_DCH_TxPatternLst_TDD128;


typedef enum enumNhuHappyBit_DelayCondition
{
 NhuHappyBit_DelayConditionms2Enum,
 NhuHappyBit_DelayConditionms10Enum,
 NhuHappyBit_DelayConditionms20Enum,
 NhuHappyBit_DelayConditionms50Enum,
 NhuHappyBit_DelayConditionms100Enum,
 NhuHappyBit_DelayConditionms200Enum,
 NhuHappyBit_DelayConditionms500Enum,
 NhuHappyBit_DelayConditionms1000Enum
} EnumNhuHappyBit_DelayCondition;
typedef TknU32 NhuHappyBit_DelayCondition;

typedef struct NhuE_DPCCH_Info
{
 TknPres pres;
 NhuE_DPCCH_DPCCH_PowerOffset e_DPCCH_DPCCH_PowerOffset;
 NhuHappyBit_DelayCondition happyBit_DelayCondition;
} NhuE_DPCCH_Info;


typedef TknU32 NhuE_TFC_Boost_Info_r7e_TFCI_Boost;


typedef TknU32 NhuE_TFC_Boost_Info_r7delta_T2TP;

typedef struct NhuE_TFC_Boost_Info_r7
{
 TknPres pres;
 NhuE_TFC_Boost_Info_r7e_TFCI_Boost e_TFCI_Boost;
 NhuE_TFC_Boost_Info_r7delta_T2TP delta_T2TP;
} NhuE_TFC_Boost_Info_r7;


typedef TknU8 NhuE_DPDCH_PowerInterpolation;

typedef struct NhuE_DPCCH_Info_r7
{
 TknPres pres;
 NhuE_DPCCH_DPCCH_PowerOffset e_DPCCH_DPCCH_PowerOffset;
 NhuHappyBit_DelayCondition happyBit_DelayCondition;
 NhuE_TFC_Boost_Info_r7 e_TFC_Boost_Info;
 NhuE_DPDCH_PowerInterpolation e_DPDCH_PowerInterpolation;
} NhuE_DPCCH_Info_r7;


typedef TknU32 NhuE_TFCI_TableIdx;


typedef TknU32 NhuE_DPDCH_Reference_E_TFCIreference_E_TFCI;


typedef TknU32 NhuE_DPDCH_Reference_E_TFCIreference_E_TFCI_PO;

typedef struct NhuE_DPDCH_Reference_E_TFCI
{
 TknPres pres;
 NhuE_DPDCH_Reference_E_TFCIreference_E_TFCI reference_E_TFCI;
 NhuE_DPDCH_Reference_E_TFCIreference_E_TFCI_PO reference_E_TFCI_PO;
} NhuE_DPDCH_Reference_E_TFCI;

typedef struct NhuE_DPDCH_Reference_E_TFCILst
{
 TknU16 noComp;
 NhuE_DPDCH_Reference_E_TFCI *member;
}NhuE_DPDCH_Reference_E_TFCILst;


typedef enum enumNhuE_DPDCH_MaxChannelisationCodes
{
 NhuE_DPDCH_MaxChannelisationCodessf256Enum,
 NhuE_DPDCH_MaxChannelisationCodessf128Enum,
 NhuE_DPDCH_MaxChannelisationCodessf64Enum,
 NhuE_DPDCH_MaxChannelisationCodessf32Enum,
 NhuE_DPDCH_MaxChannelisationCodessf16Enum,
 NhuE_DPDCH_MaxChannelisationCodessf8Enum,
 NhuE_DPDCH_MaxChannelisationCodessf4Enum,
 NhuE_DPDCH_MaxChannelisationCodessf4x2Enum,
 NhuE_DPDCH_MaxChannelisationCodessf2x2Enum,
 NhuE_DPDCH_MaxChannelisationCodessf4x2_and_sf2x2Enum
} EnumNhuE_DPDCH_MaxChannelisationCodes;
typedef TknU32 NhuE_DPDCH_MaxChannelisationCodes;


typedef TknU32 NhuE_DPDCH_PL_NonMax;


typedef enum enumNhuE_DPDCH_PeriodicyOfSchedInfo
{
 NhuE_DPDCH_PeriodicyOfSchedInfoeveryEDCHTTIEnum,
 NhuE_DPDCH_PeriodicyOfSchedInfoms4Enum,
 NhuE_DPDCH_PeriodicyOfSchedInfoms10Enum,
 NhuE_DPDCH_PeriodicyOfSchedInfoms20Enum,
 NhuE_DPDCH_PeriodicyOfSchedInfoms50Enum,
 NhuE_DPDCH_PeriodicyOfSchedInfoms100Enum,
 NhuE_DPDCH_PeriodicyOfSchedInfoms200Enum,
 NhuE_DPDCH_PeriodicyOfSchedInfoms500Enum,
 NhuE_DPDCH_PeriodicyOfSchedInfoms1000Enum
} EnumNhuE_DPDCH_PeriodicyOfSchedInfo;
typedef TknU32 NhuE_DPDCH_PeriodicyOfSchedInfo;


typedef TknU32 NhuE_DPDCH_SchedulingInfoCfgpowerOffsetForSchedInfo;

typedef struct NhuE_DPDCH_SchedulingInfoCfg
{
 TknPres pres;
 NhuE_DPDCH_PeriodicyOfSchedInfo periodicityOfSchedInfo_NoGrant;
 NhuE_DPDCH_PeriodicyOfSchedInfo periodicityOfSchedInfo_Grant;
 NhuE_DPDCH_SchedulingInfoCfgpowerOffsetForSchedInfo powerOffsetForSchedInfo;
} NhuE_DPDCH_SchedulingInfoCfg;


typedef TknU32 NhuE_DPDCH_InfothreeIdxStepThreshold;


typedef TknU32 NhuE_DPDCH_InfotwoIdxStepThreshold;

typedef struct NhuE_DPDCH_Info
{
 TknPres pres;
 NhuE_TFCI_TableIdx e_TFCI_TableIdx;
 NhuE_DCH_MinimumSet_E_TFCI e_DCH_MinimumSet_E_TFCI;
 NhuE_DPDCH_Reference_E_TFCILst reference_E_TFCIs;
 NhuE_DPDCH_MaxChannelisationCodes maxChannelisationCodes;
 NhuE_DPDCH_PL_NonMax pl_NonMax;
 NhuE_DPDCH_SchedulingInfoCfg schedulingInfoCfg;
 NhuE_DPDCH_InfothreeIdxStepThreshold threeIdxStepThreshold;
 NhuE_DPDCH_InfotwoIdxStepThreshold twoIdxStepThreshold;
} NhuE_DPDCH_Info;


typedef TknU32 NhuE_DPDCH_Info_r7threeIdxStepThreshold;


typedef TknU32 NhuE_DPDCH_Info_r7twoIdxStepThreshold;

typedef struct NhuE_DPDCH_Info_r7
{
 TknPres pres;
 NhuE_TFCI_TableIdx e_TFCI_TableIdx;
 NhuE_DCH_MinimumSet_E_TFCI e_DCH_MinimumSet_E_TFCI;
 NhuE_DPDCH_Reference_E_TFCILst_r7 reference_E_TFCIs;
 NhuE_DPDCH_MaxChannelisationCodes maxChannelisationCodes;
 NhuE_DPDCH_PL_NonMax pl_NonMax;
 NhuE_DPDCH_SchedulingInfoCfg schedulingInfoCfg;
 NhuE_DPDCH_Info_r7threeIdxStepThreshold threeIdxStepThreshold;
 NhuE_DPDCH_Info_r7twoIdxStepThreshold twoIdxStepThreshold;
} NhuE_DPDCH_Info_r7;


typedef TknU32 NhuE_DPDCH_Info_r8threeIdxStepThreshold;


typedef TknU32 NhuE_DPDCH_Info_r8twoIdxStepThreshold;

typedef struct NhuE_DPDCH_Info_r8
{
 TknPres pres;
 NhuE_TFCI_TableIdx e_TFCI_TableIdx;
 NhuE_DCH_MinimumSet_E_TFCI e_DCH_MinimumSet_E_TFCI;
 NhuE_DPDCH_Reference_E_TFCILst_r7 reference_E_TFCIs;
 NhuMinReduced_E_DPDCH_GainFactor minReduced_E_DPDCH_GainFactor;
 NhuE_DPDCH_MaxChannelisationCodes maxChannelisationCodes;
 NhuE_DPDCH_PL_NonMax pl_NonMax;
 NhuE_DPDCH_SchedulingInfoCfg schedulingInfoCfg;
 NhuE_DPDCH_Info_r8threeIdxStepThreshold threeIdxStepThreshold;
 NhuE_DPDCH_Info_r8twoIdxStepThreshold twoIdxStepThreshold;
} NhuE_DPDCH_Info_r8;


typedef TknStrBSXL NhuE_DPDCH_SchedulingTransmCfgms2_SchedTransmGrantHARQAlloc;

typedef TknU32 NhuE_DPDCH_SchedulingTransmCfgservingGrantvalue;


typedef enum enumNhuE_DPDCH_SchedulingTransmCfgservingGrantprimary_Secondary_GrantSelector
{
 NhuE_DPDCH_SchedulingTransmCfgservingGrantprimary_Secondary_GrantSelectorprimaryEnum,
 NhuE_DPDCH_SchedulingTransmCfgservingGrantprimary_Secondary_GrantSelectorsecondaryEnum
} EnumNhuE_DPDCH_SchedulingTransmCfgservingGrantprimary_Secondary_GrantSelector;
typedef TknU32 NhuE_DPDCH_SchedulingTransmCfgservingGrantprimary_Secondary_GrantSelector;

typedef struct NhuE_DPDCH_SchedulingTransmCfgservingGrant
{
 TknPres pres;
 NhuE_DPDCH_SchedulingTransmCfgservingGrantvalue value;
 NhuE_DPDCH_SchedulingTransmCfgservingGrantprimary_Secondary_GrantSelector primary_Secondary_GrantSelector;
} NhuE_DPDCH_SchedulingTransmCfgservingGrant;

typedef struct NhuE_DPDCH_SchedulingTransmCfg
{
 TknPres pres;
 NhuE_DPDCH_SchedulingTransmCfgms2_SchedTransmGrantHARQAlloc ms2_SchedTransmGrantHARQAlloc;
 NhuE_DPDCH_SchedulingTransmCfgservingGrant servingGrant;
} NhuE_DPDCH_SchedulingTransmCfg;


typedef TknU32 NhuE_HICH_Info_TDD384_768n_E_HICH;


typedef TknU32 NhuE_HICH_Info_TDD384_768tS_Number;

typedef struct NhuE_HICH_Info_TDD384_768modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDL_TS_ChannelisationCode tdd384;
  NhuDL_TS_ChannelisationCode_VHCR tdd768;
 } val;
} NhuE_HICH_Info_TDD384_768modeSpecificInfo;


typedef enum enumNhuE_HICH_Info_TDD384_768burst_Typ
{
 NhuE_HICH_Info_TDD384_768burst_Typtype1Enum,
 NhuE_HICH_Info_TDD384_768burst_Typtype2Enum
} EnumNhuE_HICH_Info_TDD384_768burst_Typ;
typedef TknU32 NhuE_HICH_Info_TDD384_768burst_Typ;


typedef enum enumNhuE_HICH_Info_TDD384_768midamble_Allocn_Mode
{
 NhuE_HICH_Info_TDD384_768midamble_Allocn_ModedefaultEnum,
 NhuE_HICH_Info_TDD384_768midamble_Allocn_ModecommonEnum
} EnumNhuE_HICH_Info_TDD384_768midamble_Allocn_Mode;
typedef TknU32 NhuE_HICH_Info_TDD384_768midamble_Allocn_Mode;

typedef struct NhuE_HICH_Info_TDD384_768
{
 TknPres pres;
 NhuE_HICH_Info_TDD384_768n_E_HICH n_E_HICH;
 NhuE_HICH_Info_TDD384_768tS_Number tS_Number;
 NhuE_HICH_Info_TDD384_768modeSpecificInfo modeSpecificInfo;
 NhuE_HICH_Info_TDD384_768burst_Typ burst_Typ;
 NhuE_HICH_Info_TDD384_768midamble_Allocn_Mode midamble_Allocn_Mode;
} NhuE_HICH_Info_TDD384_768;


typedef TknU32 NhuE_PUCH_TS_Slotsts_Number;

typedef struct NhuE_PUCH_TS_Slots
{
 TknPres pres;
 NhuE_PUCH_TS_Slotsts_Number ts_Number;
 NhuMidambleShiftAndBurstTyp_EDCH midambleShiftAndBurstTyp;
} NhuE_PUCH_TS_Slots;

typedef struct NhuPRACH_Partitioning_LCR_r4
{
 TknU16 noComp;
 NhuASCSetting_TDD_LCR_r4 *member;
}NhuPRACH_Partitioning_LCR_r4;


typedef NhuPRACH_Partitioning_LCR_r4 NhuE_RUCCH_AccessServiceClass;

typedef enum enumNhuPersistenceScalingFactor
{
 NhuPersistenceScalingFactorpsf0_9Enum,
 NhuPersistenceScalingFactorpsf0_8Enum,
 NhuPersistenceScalingFactorpsf0_7Enum,
 NhuPersistenceScalingFactorpsf0_6Enum,
 NhuPersistenceScalingFactorpsf0_5Enum,
 NhuPersistenceScalingFactorpsf0_4Enum,
 NhuPersistenceScalingFactorpsf0_3Enum,
 NhuPersistenceScalingFactorpsf0_2Enum
} EnumNhuPersistenceScalingFactor;
typedef TknU32 NhuPersistenceScalingFactor;


typedef enum enumNhuSF16Codes
{
 NhuSF16Codescc16_1Enum,
 NhuSF16Codescc16_2Enum,
 NhuSF16Codescc16_3Enum,
 NhuSF16Codescc16_4Enum,
 NhuSF16Codescc16_5Enum,
 NhuSF16Codescc16_6Enum,
 NhuSF16Codescc16_7Enum,
 NhuSF16Codescc16_8Enum
} EnumNhuSF16Codes;
typedef TknU32 NhuSF16Codes;


typedef enum enumNhuSF8Codes
{
 NhuSF8Codescc8_1Enum,
 NhuSF8Codescc8_2Enum,
 NhuSF8Codescc8_3Enum,
 NhuSF8Codescc8_4Enum,
 NhuSF8Codescc8_5Enum,
 NhuSF8Codescc8_6Enum,
 NhuSF8Codescc8_7Enum,
 NhuSF8Codescc8_8Enum
} EnumNhuSF8Codes;
typedef TknU32 NhuSF8Codes;


typedef enum enumNhuSF32Codes
{
 NhuSF32Codescc32_1Enum,
 NhuSF32Codescc32_2Enum,
 NhuSF32Codescc32_3Enum,
 NhuSF32Codescc32_4Enum,
 NhuSF32Codescc32_5Enum,
 NhuSF32Codescc32_6Enum,
 NhuSF32Codescc32_7Enum,
 NhuSF32Codescc32_8Enum,
 NhuSF32Codescc32_9Enum,
 NhuSF32Codescc32_10Enum,
 NhuSF32Codescc32_11Enum,
 NhuSF32Codescc32_12Enum,
 NhuSF32Codescc32_13Enum,
 NhuSF32Codescc32_14Enum,
 NhuSF32Codescc32_15Enum,
 NhuSF32Codescc32_16Enum
} EnumNhuSF32Codes;
typedef TknU32 NhuSF32Codes;


typedef enum enumNhuSF16Codes2
{
 NhuSF16Codes2cc16_1Enum,
 NhuSF16Codes2cc16_2Enum,
 NhuSF16Codes2cc16_3Enum,
 NhuSF16Codes2cc16_4Enum,
 NhuSF16Codes2cc16_5Enum,
 NhuSF16Codes2cc16_6Enum,
 NhuSF16Codes2cc16_7Enum,
 NhuSF16Codes2cc16_8Enum,
 NhuSF16Codes2cc16_9Enum,
 NhuSF16Codes2cc16_10Enum,
 NhuSF16Codes2cc16_11Enum,
 NhuSF16Codes2cc16_12Enum,
 NhuSF16Codes2cc16_13Enum,
 NhuSF16Codes2cc16_14Enum,
 NhuSF16Codes2cc16_15Enum,
 NhuSF16Codes2cc16_16Enum
} EnumNhuSF16Codes2;
typedef TknU32 NhuSF16Codes2;

typedef struct NhuPersistenceScalingFactorLst
{
 TknU16 noComp;
 NhuPersistenceScalingFactor *member;
}NhuPersistenceScalingFactorLst;


typedef TknStrBSXL NhuSync_UL_Codes_Bitmap;

typedef TknU32 NhuSYNC_UL_InfoForE_RUCCHprxUpPCHdes;


typedef TknU32 NhuSYNC_UL_InfoForE_RUCCHpowerRampStep;


typedef enum enumNhuSYNC_UL_InfoForE_RUCCHmax_SYNC_UL_Transmissions
{
 NhuSYNC_UL_InfoForE_RUCCHmax_SYNC_UL_Transmissionstr1Enum,
 NhuSYNC_UL_InfoForE_RUCCHmax_SYNC_UL_Transmissionstr2Enum,
 NhuSYNC_UL_InfoForE_RUCCHmax_SYNC_UL_Transmissionstr4Enum,
 NhuSYNC_UL_InfoForE_RUCCHmax_SYNC_UL_Transmissionstr8Enum
} EnumNhuSYNC_UL_InfoForE_RUCCHmax_SYNC_UL_Transmissions;
typedef TknU32 NhuSYNC_UL_InfoForE_RUCCHmax_SYNC_UL_Transmissions;


typedef TknU32 NhuSYNC_UL_InfoForE_RUCCHmmax;

typedef struct NhuSYNC_UL_InfoForE_RUCCH
{
 TknPres pres;
 NhuSYNC_UL_InfoForE_RUCCHprxUpPCHdes prxUpPCHdes;
 NhuSYNC_UL_InfoForE_RUCCHpowerRampStep powerRampStep;
 NhuSYNC_UL_InfoForE_RUCCHmax_SYNC_UL_Transmissions max_SYNC_UL_Transmissions;
 NhuSync_UL_Codes_Bitmap e_RUCCH_Sync_UL_Codes_Bitmap;
 NhuSYNC_UL_InfoForE_RUCCHmmax mmax;
} NhuSYNC_UL_InfoForE_RUCCH;


typedef TknU32 NhuTimeslotNumber_PRACH_LCR_r4;


typedef enum enumNhuTDD_PRACH_CCode_LCR_r4
{
 NhuTDD_PRACH_CCode_LCR_r4cc4_1Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc4_2Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc4_3Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc4_4Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc8_1Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc8_2Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc8_3Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc8_4Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc8_5Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc8_6Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc8_7Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc8_8Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_1Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_2Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_3Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_4Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_5Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_6Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_7Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_8Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_9Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_10Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_11Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_12Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_13Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_14Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_15Enum,
 NhuTDD_PRACH_CCode_LCR_r4cc16_16Enum
} EnumNhuTDD_PRACH_CCode_LCR_r4;
typedef TknU32 NhuTDD_PRACH_CCode_LCR_r4;

typedef struct NhuPRACH_ChanCodes_Lst_LCR
{
 TknU16 noComp;
 NhuTDD_PRACH_CCode_LCR_r4 *member;
}NhuPRACH_ChanCodes_Lst_LCR;


typedef enum enumNhuTDD_FPACH_CCode16_r4
{
 NhuTDD_FPACH_CCode16_r4cc16_1Enum,
 NhuTDD_FPACH_CCode16_r4cc16_2Enum,
 NhuTDD_FPACH_CCode16_r4cc16_3Enum,
 NhuTDD_FPACH_CCode16_r4cc16_4Enum,
 NhuTDD_FPACH_CCode16_r4cc16_5Enum,
 NhuTDD_FPACH_CCode16_r4cc16_6Enum,
 NhuTDD_FPACH_CCode16_r4cc16_7Enum,
 NhuTDD_FPACH_CCode16_r4cc16_8Enum,
 NhuTDD_FPACH_CCode16_r4cc16_9Enum,
 NhuTDD_FPACH_CCode16_r4cc16_10Enum,
 NhuTDD_FPACH_CCode16_r4cc16_11Enum,
 NhuTDD_FPACH_CCode16_r4cc16_12Enum,
 NhuTDD_FPACH_CCode16_r4cc16_13Enum,
 NhuTDD_FPACH_CCode16_r4cc16_14Enum,
 NhuTDD_FPACH_CCode16_r4cc16_15Enum,
 NhuTDD_FPACH_CCode16_r4cc16_16Enum
} EnumNhuTDD_FPACH_CCode16_r4;
typedef TknU32 NhuTDD_FPACH_CCode16_r4;


typedef TknU32 NhuWi_LCR;

typedef struct NhuFPACH_Info_r4
{
 TknPres pres;
 NhuTimeslotNumber_LCR_r4 timeslot;
 NhuTDD_FPACH_CCode16_r4 channelisationCode;
 NhuMidambleShiftAndBurstTyp_LCR_r4 midambleShiftAndBurstTyp;
 NhuWi_LCR wi;
} NhuFPACH_Info_r4;

typedef struct NhuPRACH_Info_LCR
{
 TknPres pres;
 NhuTimeslotNumber_PRACH_LCR_r4 timeslot;
 NhuPRACH_ChanCodes_Lst_LCR prach_ChanCodes_list_LCR;
 NhuMidambleShiftAndBurstTyp_LCR_r4 midambleShiftAndBurstTyp;
 NhuFPACH_Info_r4 fpach_Info;
} NhuPRACH_Info_LCR;

typedef struct NhuPRACH_Info_LCR_Lst
{
 TknU16 noComp;
 NhuPRACH_Info_LCR *member;
}NhuPRACH_Info_LCR_Lst;


typedef TknS32 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_ConstantValue;


typedef enum enumNhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCH
{
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCHms40Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCHms80Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCHms120Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCHms160Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCHms200Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCHms240Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCHms280Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCHms320Enum
} EnumNhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCH;
typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCH;


typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_TS_Number;


typedef enum enumNhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_Midamble
{
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_MidambledirectEnum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_Midambledirect_InvertedEnum
} EnumNhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_Midamble;
typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_Midamble;


typedef enum enumNhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_adv
{
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_advsec1Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_advsec2Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_advsec4Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_advsec8Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_advsec16Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_advsec32Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_advsec128Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_advinfinityEnum
} EnumNhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_adv;
typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_adv;


typedef enum enumNhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHED
{
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHEDzeroEnum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHEDms40Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHEDms80Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHEDms160Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHEDms250Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHEDsec1Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHEDsec2Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHEDsec4Enum
} EnumNhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHED;
typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHED;

typedef struct NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd384sF16
{
 TknU16 noComp;
 NhuSF16Codes *member;
}NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd384sF16;

typedef struct NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd384sF8
{
 TknU16 noComp;
 NhuSF8Codes *member;
}NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd384sF8;

typedef struct NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd384
{
 TknU8 choice;
 union {
  NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd384sF16 sF16;
  NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd384sF8 sF8;
 } val;
} NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd384;

typedef struct NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd768sF32
{
 TknU16 noComp;
 NhuSF32Codes *member;
}NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd768sF32;

typedef struct NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd768sF816
{
 TknU16 noComp;
 NhuSF16Codes2 *member;
}NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd768sF816;

typedef struct NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd768
{
 TknU8 choice;
 union {
  NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd768sF32 sF32;
  NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd768sF816 sF816;
 } val;
} NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd768;

typedef struct NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd384 tdd384;
  NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfotdd768 tdd768;
 } val;
} NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfo;

typedef struct NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768
{
 TknPres pres;
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_ConstantValue e_RUCCH_ConstantValue;
 NhuPersistenceScalingFactor e_RUCCH_PersistenceScalingFactor;
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_RUCCH t_RUCCH;
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_TS_Number e_RUCCH_TS_Number;
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768e_RUCCH_Midamble e_RUCCH_Midamble;
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_adv t_adv;
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768t_SCHED t_SCHED;
 NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768modeSpecificInfo modeSpecificInfo;
} NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768;


typedef enum enumNhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCH
{
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms20Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms40Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms60Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms80Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms120Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms160Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms200Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms240Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms280Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms320Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms400Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms500Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms600Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms800Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms1000Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCHms2000Enum
} EnumNhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCH;
typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCH;


typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd128n_RUCCH;


typedef enum enumNhuE_RUCCH_InfomodeSpecificInfotdd128t_WAIT
{
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAITeveryEDCHTTIEnum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAITms40Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAITms80Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAITms160Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAITms320Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAITms640Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAITms1000Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAITms2000Enum
} EnumNhuE_RUCCH_InfomodeSpecificInfotdd128t_WAIT;
typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAIT;


typedef enum enumNhuE_RUCCH_InfomodeSpecificInfotdd128t_SI
{
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_SIeveryEDCHTTIEnum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_SIms20Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_SIms40Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_SIms60Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_SIms80Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_SIms160Enum,
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_SIms200Enum
} EnumNhuE_RUCCH_InfomodeSpecificInfotdd128t_SI;
typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd128t_SI;


typedef TknU32 NhuE_RUCCH_InfomodeSpecificInfotdd128extendedEstimationWindow;

typedef struct NhuE_RUCCH_InfomodeSpecificInfotdd128
{
 TknPres pres;
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_RUCCH t_RUCCH;
 NhuE_RUCCH_InfomodeSpecificInfotdd128n_RUCCH n_RUCCH;
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_WAIT t_WAIT;
 NhuE_RUCCH_InfomodeSpecificInfotdd128t_SI t_SI;
 NhuE_RUCCH_InfomodeSpecificInfotdd128extendedEstimationWindow extendedEstimationWindow;
 NhuE_RUCCH_AccessServiceClass e_RUCCH_AccessServiceClass;
 NhuPersistenceScalingFactorLst e_RUCCH_PersistenceScalingFactor;
 NhuSYNC_UL_InfoForE_RUCCH sync_UL_InfoForE_RUCCH;
 NhuPRACH_Info_LCR_Lst prach_information;
} NhuE_RUCCH_InfomodeSpecificInfotdd128;

typedef struct NhuE_RUCCH_InfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuE_RUCCH_InfomodeSpecificInfotdd384_tdd768 tdd384_tdd768;
  NhuE_RUCCH_InfomodeSpecificInfotdd128 tdd128;
 } val;
} NhuE_RUCCH_InfomodeSpecificInfo;

typedef struct NhuE_RUCCH_Info
{
 TknPres pres;
 NhuE_RUCCH_InfomodeSpecificInfo modeSpecificInfo;
} NhuE_RUCCH_Info;


typedef enum enumNhuE_RUCCH_Info_TDD128t_RUCCH
{
 NhuE_RUCCH_Info_TDD128t_RUCCHms20Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms40Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms60Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms80Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms120Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms160Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms200Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms240Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms280Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms320Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms400Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms500Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms600Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms800Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms1000Enum,
 NhuE_RUCCH_Info_TDD128t_RUCCHms2000Enum
} EnumNhuE_RUCCH_Info_TDD128t_RUCCH;
typedef TknU32 NhuE_RUCCH_Info_TDD128t_RUCCH;


typedef TknU32 NhuE_RUCCH_Info_TDD128n_RUCCH;


typedef enum enumNhuE_RUCCH_Info_TDD128t_WAIT
{
 NhuE_RUCCH_Info_TDD128t_WAITeveryEDCHTTIEnum,
 NhuE_RUCCH_Info_TDD128t_WAITms40Enum,
 NhuE_RUCCH_Info_TDD128t_WAITms80Enum,
 NhuE_RUCCH_Info_TDD128t_WAITms160Enum,
 NhuE_RUCCH_Info_TDD128t_WAITms320Enum,
 NhuE_RUCCH_Info_TDD128t_WAITms640Enum,
 NhuE_RUCCH_Info_TDD128t_WAITms1000Enum,
 NhuE_RUCCH_Info_TDD128t_WAITms2000Enum
} EnumNhuE_RUCCH_Info_TDD128t_WAIT;
typedef TknU32 NhuE_RUCCH_Info_TDD128t_WAIT;


typedef enum enumNhuE_RUCCH_Info_TDD128t_SI
{
 NhuE_RUCCH_Info_TDD128t_SIeveryEDCHTTIEnum,
 NhuE_RUCCH_Info_TDD128t_SIms20Enum,
 NhuE_RUCCH_Info_TDD128t_SIms40Enum,
 NhuE_RUCCH_Info_TDD128t_SIms60Enum,
 NhuE_RUCCH_Info_TDD128t_SIms80Enum,
 NhuE_RUCCH_Info_TDD128t_SIms160Enum,
 NhuE_RUCCH_Info_TDD128t_SIms200Enum
} EnumNhuE_RUCCH_Info_TDD128t_SI;
typedef TknU32 NhuE_RUCCH_Info_TDD128t_SI;


typedef TknU32 NhuE_RUCCH_Info_TDD128extendedEstimationWindow;

typedef struct NhuE_RUCCH_Info_TDD128
{
 TknPres pres;
 NhuE_RUCCH_Info_TDD128t_RUCCH t_RUCCH;
 NhuE_RUCCH_Info_TDD128n_RUCCH n_RUCCH;
 NhuE_RUCCH_Info_TDD128t_WAIT t_WAIT;
 NhuE_RUCCH_Info_TDD128t_SI t_SI;
 NhuE_RUCCH_Info_TDD128extendedEstimationWindow extendedEstimationWindow;
 NhuE_RUCCH_AccessServiceClass e_RUCCH_AccessServiceClass;
 NhuPersistenceScalingFactorLst e_RUCCH_PersistenceScalingFactor;
 NhuSYNC_UL_InfoForE_RUCCH sync_UL_InfoForE_RUCCH;
 NhuPRACH_Info_LCR_Lst prach_information;
} NhuE_RUCCH_Info_TDD128;


typedef TknU32 NhuReference_Beta_QPSKreference_Code_Rate;


typedef TknS32 NhuReference_Beta_QPSKreference_Beta;

typedef struct NhuReference_Beta_QPSK
{
 TknPres pres;
 NhuReference_Beta_QPSKreference_Code_Rate reference_Code_Rate;
 NhuReference_Beta_QPSKreference_Beta reference_Beta;
} NhuReference_Beta_QPSK;


typedef TknU32 NhuReference_Beta_16QAMreference_Code_Rate;


typedef TknS32 NhuReference_Beta_16QAMreference_Beta;

typedef struct NhuReference_Beta_16QAM
{
 TknPres pres;
 NhuReference_Beta_16QAMreference_Code_Rate reference_Code_Rate;
 NhuReference_Beta_16QAMreference_Beta reference_Beta;
} NhuReference_Beta_16QAM;

typedef struct NhuE_TFCS_Inforeference_Beta_QPSK_Lst
{
 TknU16 noComp;
 NhuReference_Beta_QPSK *member;
}NhuE_TFCS_Inforeference_Beta_QPSK_Lst;

typedef struct NhuE_TFCS_Inforeference_Beta_16QAM_Lst
{
 TknU16 noComp;
 NhuReference_Beta_16QAM *member;
}NhuE_TFCS_Inforeference_Beta_16QAM_Lst;

typedef struct NhuE_TFCS_Info
{
 TknPres pres;
 NhuE_TFCS_Inforeference_Beta_QPSK_Lst reference_Beta_QPSK_Lst;
 NhuE_TFCS_Inforeference_Beta_16QAM_Lst reference_Beta_16QAM_Lst;
} NhuE_TFCS_Info;


typedef enum enumNhuEnablingDelay
{
 NhuEnablingDelayradio_frames_0Enum,
 NhuEnablingDelayradio_frames_1Enum,
 NhuEnablingDelayradio_frames_2Enum,
 NhuEnablingDelayradio_frames_4Enum,
 NhuEnablingDelayradio_frames_8Enum,
 NhuEnablingDelayradio_frames_16Enum,
 NhuEnablingDelayradio_frames_32Enum,
 NhuEnablingDelayradio_frames_64Enum,
 NhuEnablingDelayradio_frames_128Enum,
 NhuEnablingDelayspare7Enum,
 NhuEnablingDelayspare6Enum,
 NhuEnablingDelayspare5Enum,
 NhuEnablingDelayspare4Enum,
 NhuEnablingDelayspare3Enum,
 NhuEnablingDelayspare2Enum,
 NhuEnablingDelayspare1Enum
} EnumNhuEnablingDelay;
typedef TknU32 NhuEnablingDelay;


typedef TknU32 NhuEXT_UL_TimingAdvancemodeSpecificInfotdd384ex_ul_TimingAdvance;

typedef struct NhuEXT_UL_TimingAdvancemodeSpecificInfotdd384
{
 TknPres pres;
 NhuEXT_UL_TimingAdvancemodeSpecificInfotdd384ex_ul_TimingAdvance ex_ul_TimingAdvance;
} NhuEXT_UL_TimingAdvancemodeSpecificInfotdd384;


typedef TknU32 NhuEXT_UL_TimingAdvancemodeSpecificInfotdd768ex_ul_TimingAdvance;

typedef struct NhuEXT_UL_TimingAdvancemodeSpecificInfotdd768
{
 TknPres pres;
 NhuEXT_UL_TimingAdvancemodeSpecificInfotdd768ex_ul_TimingAdvance ex_ul_TimingAdvance;
} NhuEXT_UL_TimingAdvancemodeSpecificInfotdd768;

typedef struct NhuEXT_UL_TimingAdvancemodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuEXT_UL_TimingAdvancemodeSpecificInfotdd384 tdd384;
  NhuEXT_UL_TimingAdvancemodeSpecificInfotdd768 tdd768;
 } val;
} NhuEXT_UL_TimingAdvancemodeSpecificInfo;

typedef struct NhuEXT_UL_TimingAdvance
{
 TknPres pres;
 NhuEXT_UL_TimingAdvancemodeSpecificInfo modeSpecificInfo;
} NhuEXT_UL_TimingAdvance;


typedef TknU8 NhuFACH_PCH_Infoctch_Indicator;

typedef struct NhuFACH_PCH_Info
{
 TknPres pres;
 NhuTportFormatSet transportFormatSet;
 NhuTportChannelIdentity transportChannelIdentity;
 NhuFACH_PCH_Infoctch_Indicator ctch_Indicator;
} NhuFACH_PCH_Info;

typedef struct NhuFACH_PCH_InfoLst
{
 TknU16 noComp;
 NhuFACH_PCH_Info *member;
}NhuFACH_PCH_InfoLst;


typedef enum enumNhuFeedback_cycle
{
 NhuFeedback_cyclefc0Enum,
 NhuFeedback_cyclefc2Enum,
 NhuFeedback_cyclefc4Enum,
 NhuFeedback_cyclefc8Enum,
 NhuFeedback_cyclefc10Enum,
 NhuFeedback_cyclefc20Enum,
 NhuFeedback_cyclefc40Enum,
 NhuFeedback_cyclefc80Enum,
 NhuFeedback_cyclefc160Enum
} EnumNhuFeedback_cycle;
typedef TknU32 NhuFeedback_cycle;


typedef enum enumNhuFeedback_cycle_r7
{
 NhuFeedback_cycle_r7fc0Enum,
 NhuFeedback_cycle_r7fc2Enum,
 NhuFeedback_cycle_r7fc4Enum,
 NhuFeedback_cycle_r7fc8Enum,
 NhuFeedback_cycle_r7fc10Enum,
 NhuFeedback_cycle_r7fc20Enum,
 NhuFeedback_cycle_r7fc40Enum,
 NhuFeedback_cycle_r7fc80Enum,
 NhuFeedback_cycle_r7fc160Enum,
 NhuFeedback_cycle_r7fc16Enum,
 NhuFeedback_cycle_r7fc32Enum,
 NhuFeedback_cycle_r7fc64Enum,
 NhuFeedback_cycle_r7spare4Enum,
 NhuFeedback_cycle_r7spare3Enum,
 NhuFeedback_cycle_r7spare2Enum,
 NhuFeedback_cycle_r7spare1Enum
} EnumNhuFeedback_cycle_r7;
typedef TknU32 NhuFeedback_cycle_r7;


typedef TknU32 NhuFTPICH_SlotFormat;


typedef TknU32 NhuFTPICH_FrameOffset;


typedef TknU32 NhuF_TPICH_Infoftpich_CodeNumber;


typedef enum enumNhuF_TPICH_Infoftpich_ReliabilityWindowSize
{
 NhuF_TPICH_Infoftpich_ReliabilityWindowSizeslots_3Enum,
 NhuF_TPICH_Infoftpich_ReliabilityWindowSizeslots_240Enum
} EnumNhuF_TPICH_Infoftpich_ReliabilityWindowSize;
typedef TknU32 NhuF_TPICH_Infoftpich_ReliabilityWindowSize;

typedef struct NhuF_TPICH_Info
{
 TknPres pres;
 NhuFTPICH_SlotFormat ftpich_SlotFormat;
 NhuF_TPICH_Infoftpich_CodeNumber ftpich_CodeNumber;
 NhuFTPICH_FrameOffset ftpich_FrameOffset;
 NhuF_TPICH_Infoftpich_ReliabilityWindowSize ftpich_ReliabilityWindowSize;
} NhuF_TPICH_Info;


typedef TknU32 NhuFrequencyIdxForEnhancedMeas;

typedef struct NhuFreqIdxLstForEnhancedMeas
{
 TknU16 noComp;
 NhuFrequencyIdxForEnhancedMeas *member;
}NhuFreqIdxLstForEnhancedMeas;

typedef struct NhuHS_ChannelisationCodeSetInfo_LCR
{
 TknPres pres;
 NhuHS_ChannelisationCode_LCR startCode;
 NhuHS_ChannelisationCode_LCR stopCode;
} NhuHS_ChannelisationCodeSetInfo_LCR;

typedef struct NhuHS_SCCH_SysInfohS_SCCHChannelisationCodeInfo
{
 TknU16 noComp;
 NhuHS_SCCH_Codes *member;
}NhuHS_SCCH_SysInfohS_SCCHChannelisationCodeInfo;

typedef struct NhuHS_SCCH_SysInfo
{
 TknPres pres;
 NhuSecondaryScramblingCode dl_ScramblingCode;
 NhuHS_SCCH_SysInfohS_SCCHChannelisationCodeInfo hS_SCCHChannelisationCodeInfo;
} NhuHS_SCCH_SysInfo;

typedef struct NhuHS_DSCH_CmnSysInfocommon_H_RNTI_information
{
 TknU16 noComp;
 NhuH_RNTI *member;
}NhuHS_DSCH_CmnSysInfocommon_H_RNTI_information;

typedef struct NhuHS_DSCH_CmnSysInfo
{
 TknPres pres;
 NhuCmnRBMappingInfo ccch_MappingInfo;
 NhuCmnRBMappingInfo srb1_MappingInfo;
 NhuCmn_MAC_ehs_ReorderingQueueLst common_MAC_ehs_ReorderingQueueLst;
 NhuHS_SCCH_SysInfo hs_scch_SysInfo;
 NhuHARQ_Info harq_SysInfo;
 NhuHS_DSCH_CmnSysInfocommon_H_RNTI_information common_H_RNTI_information;
 NhuH_RNTI bcchSpecific_H_RNTI;
} NhuHS_DSCH_CmnSysInfo;


typedef enum enumNhuHS_DSCH_DrxBurstFach
{
 NhuHS_DSCH_DrxBurstFachf1Enum,
 NhuHS_DSCH_DrxBurstFachf2Enum,
 NhuHS_DSCH_DrxBurstFachf4Enum,
 NhuHS_DSCH_DrxBurstFachf8Enum,
 NhuHS_DSCH_DrxBurstFachf16Enum,
 NhuHS_DSCH_DrxBurstFachspare3Enum,
 NhuHS_DSCH_DrxBurstFachspare2Enum,
 NhuHS_DSCH_DrxBurstFachspare1Enum
} EnumNhuHS_DSCH_DrxBurstFach;
typedef TknU32 NhuHS_DSCH_DrxBurstFach;


typedef enum enumNhuHS_DSCH_DrxCycleFach
{
 NhuHS_DSCH_DrxCycleFachf4Enum,
 NhuHS_DSCH_DrxCycleFachf8Enum,
 NhuHS_DSCH_DrxCycleFachf16Enum,
 NhuHS_DSCH_DrxCycleFachf32Enum
} EnumNhuHS_DSCH_DrxCycleFach;
typedef TknU32 NhuHS_DSCH_DrxCycleFach;


typedef TknU8 NhuHS_DSCH_DrxCellfach_infodrxInterruption_hs_dsch;

typedef struct NhuHS_DSCH_DrxCellfach_info
{
 TknPres pres;
 NhuT_321 t_321;
 NhuHS_DSCH_DrxCycleFach hs_dsch_DrxCycleFach;
 NhuHS_DSCH_DrxBurstFach hs_dsch_DrxBurstFach;
 NhuHS_DSCH_DrxCellfach_infodrxInterruption_hs_dsch drxInterruption_hs_dsch;
} NhuHS_DSCH_DrxCellfach_info;

typedef struct NhuHS_DSCH_DrxCellfach_info_TDD128
{
 TknPres pres;
 NhuT_321 t_321;
 NhuHS_DSCH_DrxCycleFach hs_dsch_DrxCycleFach;
 NhuHS_DSCH_DrxBurstFach hs_dsch_DrxBurstFach;
} NhuHS_DSCH_DrxCellfach_info_TDD128;


typedef enum enumNhuPI_CountPerFrame
{
 NhuPI_CountPerFramee18Enum,
 NhuPI_CountPerFramee36Enum,
 NhuPI_CountPerFramee72Enum,
 NhuPI_CountPerFramee144Enum
} EnumNhuPI_CountPerFrame;
typedef TknU32 NhuPI_CountPerFrame;


typedef enum enumNhuTDD_PICH_CCode
{
 NhuTDD_PICH_CCodecc16_1Enum,
 NhuTDD_PICH_CCodecc16_2Enum,
 NhuTDD_PICH_CCodecc16_3Enum,
 NhuTDD_PICH_CCodecc16_4Enum,
 NhuTDD_PICH_CCodecc16_5Enum,
 NhuTDD_PICH_CCodecc16_6Enum,
 NhuTDD_PICH_CCodecc16_7Enum,
 NhuTDD_PICH_CCodecc16_8Enum,
 NhuTDD_PICH_CCodecc16_9Enum,
 NhuTDD_PICH_CCodecc16_10Enum,
 NhuTDD_PICH_CCodecc16_11Enum,
 NhuTDD_PICH_CCodecc16_12Enum,
 NhuTDD_PICH_CCodecc16_13Enum,
 NhuTDD_PICH_CCodecc16_14Enum,
 NhuTDD_PICH_CCodecc16_15Enum,
 NhuTDD_PICH_CCodecc16_16Enum
} EnumNhuTDD_PICH_CCode;
typedef TknU32 NhuTDD_PICH_CCode;


typedef TknU32 NhuRepPerLengthOffset_PICHrpp4_2;


typedef TknU32 NhuRepPerLengthOffset_PICHrpp8_2;


typedef TknU32 NhuRepPerLengthOffset_PICHrpp8_4;


typedef TknU32 NhuRepPerLengthOffset_PICHrpp16_2;


typedef TknU32 NhuRepPerLengthOffset_PICHrpp16_4;


typedef TknU32 NhuRepPerLengthOffset_PICHrpp32_2;


typedef TknU32 NhuRepPerLengthOffset_PICHrpp32_4;


typedef TknU32 NhuRepPerLengthOffset_PICHrpp64_2;


typedef TknU32 NhuRepPerLengthOffset_PICHrpp64_4;

typedef struct NhuRepPerLengthOffset_PICH
{
 TknU8 choice;
 union {
  NhuRepPerLengthOffset_PICHrpp4_2 rpp4_2;
  NhuRepPerLengthOffset_PICHrpp8_2 rpp8_2;
  NhuRepPerLengthOffset_PICHrpp8_4 rpp8_4;
  NhuRepPerLengthOffset_PICHrpp16_2 rpp16_2;
  NhuRepPerLengthOffset_PICHrpp16_4 rpp16_4;
  NhuRepPerLengthOffset_PICHrpp32_2 rpp32_2;
  NhuRepPerLengthOffset_PICHrpp32_4 rpp32_4;
  NhuRepPerLengthOffset_PICHrpp64_2 rpp64_2;
  NhuRepPerLengthOffset_PICHrpp64_4 rpp64_4;
 } val;
} NhuRepPerLengthOffset_PICH;


typedef enum enumNhuPagIndicatorLength
{
 NhuPagIndicatorLengthpi4Enum,
 NhuPagIndicatorLengthpi8Enum,
 NhuPagIndicatorLengthpi16Enum
} EnumNhuPagIndicatorLength;
typedef TknU32 NhuPagIndicatorLength;


typedef enum enumNhuN_GAP
{
 NhuN_GAPf2Enum,
 NhuN_GAPf4Enum,
 NhuN_GAPf8Enum
} EnumNhuN_GAP;
typedef TknU32 NhuN_GAP;


typedef TknU32 NhuN_PCH;


typedef TknU8 NhuPICH_Infofddsttd_Indicator;

typedef struct NhuPICH_Infofdd
{
 TknPres pres;
 NhuChannelisationCode256 channelisationCode256;
 NhuPI_CountPerFrame pi_CountPerFrame;
 NhuPICH_Infofddsttd_Indicator sttd_Indicator;
} NhuPICH_Infofdd;

typedef struct NhuPICH_Infotdd
{
 TknPres pres;
 NhuTDD_PICH_CCode channelisationCode;
 NhuTimeslotNumber timeslot;
 NhuMidambleShiftAndBurstTyp midambleShiftAndBurstTyp;
 NhuRepPerLengthOffset_PICH repetitionPeriodLengthOffset;
 NhuPagIndicatorLength pagingIndicatorLength;
 NhuN_GAP n_GAP;
 NhuN_PCH n_PCH;
} NhuPICH_Infotdd;

typedef struct NhuPICH_Info
{
 TknU8 choice;
 union {
  NhuPICH_Infofdd fdd;
  NhuPICH_Infotdd tdd;
 } val;
} NhuPICH_Info;


typedef TknU32 NhuPICH_ForHSDPASuppPaghs_pdschChannelisationCode;

typedef struct NhuPICH_ForHSDPASuppPag
{
 TknPres pres;
 NhuPICH_Info hsdpa_AssociatedPichInfo;
 NhuPICH_ForHSDPASuppPaghs_pdschChannelisationCode hs_pdschChannelisationCode;
} NhuPICH_ForHSDPASuppPag;


typedef TknU32 NhuTportBlockSizeIdx;

typedef struct NhuHS_DSCH_PagSysInfopich_ForHSDPASuppPagLst
{
 TknU16 noComp;
 NhuPICH_ForHSDPASuppPag *member;
}NhuHS_DSCH_PagSysInfopich_ForHSDPASuppPagLst;


typedef TknU32 NhuHS_DSCH_PagSysInfonumberOfPcchTransmissions;

typedef struct NhuHS_DSCH_PagSysInfotransportBlockSizeLst
{
 TknU16 noComp;
 NhuTportBlockSizeIdx *member;
}NhuHS_DSCH_PagSysInfotransportBlockSizeLst;

typedef struct NhuHS_DSCH_PagSysInfo
{
 TknPres pres;
 NhuSecondaryScramblingCode dlScramblingCode;
 NhuHS_DSCH_PagSysInfopich_ForHSDPASuppPagLst pich_ForHSDPASuppPagLst;
 NhuHS_DSCH_PagSysInfonumberOfPcchTransmissions numberOfPcchTransmissions;
 NhuHS_DSCH_PagSysInfotransportBlockSizeLst transportBlockSizeLst;
} NhuHS_DSCH_PagSysInfo;

typedef struct NhuHS_DSCH_RxPatternLst_TDD128Member
{
 TknPres pres;
 NhuRepetitionPeriodAndLengthForSPS repetitionPeriodAndLength;
} NhuHS_DSCH_RxPatternLst_TDD128Member;

typedef struct NhuHS_DSCH_RxPatternLst_TDD128
{
 TknU16 noComp;
 NhuHS_DSCH_RxPatternLst_TDD128Member *member;
}NhuHS_DSCH_RxPatternLst_TDD128;


typedef TknU32 NhuHS_DSCH_TbsLst_TDD128Memberhs_dsch_TBSizeIdx;

typedef struct NhuHS_DSCH_TbsLst_TDD128Member
{
 TknPres pres;
 NhuHS_DSCH_TbsLst_TDD128Memberhs_dsch_TBSizeIdx hs_dsch_TBSizeIdx;
} NhuHS_DSCH_TbsLst_TDD128Member;

typedef struct NhuHS_DSCH_TbsLst_TDD128
{
 TknU16 noComp;
 NhuHS_DSCH_TbsLst_TDD128Member *member;
}NhuHS_DSCH_TbsLst_TDD128;


typedef TknU32 NhuHS_SCCH_LessTFSLstMemberhs_scch_LessTFSI;


typedef TknU8 NhuHS_SCCH_LessTFSLstMemberhs_scch_LessSecondCodeSupport;

typedef struct NhuHS_SCCH_LessTFSLstMember
{
 TknPres pres;
 NhuHS_SCCH_LessTFSLstMemberhs_scch_LessTFSI hs_scch_LessTFSI;
 NhuHS_SCCH_LessTFSLstMemberhs_scch_LessSecondCodeSupport hs_scch_LessSecondCodeSupport;
} NhuHS_SCCH_LessTFSLstMember;

typedef struct NhuHS_SCCH_LessTFSLst
{
 TknU16 noComp;
 NhuHS_SCCH_LessTFSLstMember *member;
}NhuHS_SCCH_LessTFSLst;


typedef TknU32 NhuHS_SCCH_Less_NewOperationhs_pdsch_CodeIdx;

typedef struct NhuHS_SCCH_Less_NewOperation
{
 TknPres pres;
 NhuHS_SCCH_Less_NewOperationhs_pdsch_CodeIdx hs_pdsch_CodeIdx;
 NhuHS_SCCH_LessTFSLst hs_scch_LessTFS;
} NhuHS_SCCH_Less_NewOperation;

typedef struct NhuHS_SCCH_LessInfo_r7hs_scchLessOperation
{
 TknU8 choice;
 union {
  NhuHS_SCCH_Less_NewOperation newOperation;
 } val;
} NhuHS_SCCH_LessInfo_r7hs_scchLessOperation;

typedef struct NhuHS_SCCH_LessInfo_r7
{
 TknPres pres;
 NhuHS_SCCH_LessInfo_r7hs_scchLessOperation hs_scchLessOperation;
} NhuHS_SCCH_LessInfo_r7;


typedef TknU32 NhuHS_SICH_ReferenceSignalInfoLstMembermidambleCfg;


typedef TknU32 NhuHS_SICH_ReferenceSignalInfoLstMembermidambleShift;


typedef TknU32 NhuHS_SICH_ReferenceSignalInfoLstMembertimeSlot;

typedef struct NhuHS_SICH_ReferenceSignalInfoLstMember
{
 TknPres pres;
 NhuHS_SICH_ReferenceSignalInfoLstMembermidambleCfg midambleCfg;
 NhuHS_SICH_ReferenceSignalInfoLstMembermidambleShift midambleShift;
 NhuHS_SICH_ReferenceSignalInfoLstMembertimeSlot timeSlot;
} NhuHS_SICH_ReferenceSignalInfoLstMember;

typedef struct NhuHS_SICH_ReferenceSignalInfoLst
{
 TknU16 noComp;
 NhuHS_SICH_ReferenceSignalInfoLstMember *member;
}NhuHS_SICH_ReferenceSignalInfoLst;


typedef TknS32 NhuHS_SICH_Power_Cntrl_Info_TDD384ul_target_SIR;

typedef struct NhuHS_SICH_Power_Cntrl_Info_TDD384
{
 TknPres pres;
 NhuHS_SICH_Power_Cntrl_Info_TDD384ul_target_SIR ul_target_SIR;
 NhuConstantValue hs_sich_ConstantValue;
} NhuHS_SICH_Power_Cntrl_Info_TDD384;


typedef TknS32 NhuHS_SICH_Power_Cntrl_Info_TDD768ul_target_SIR;

typedef struct NhuHS_SICH_Power_Cntrl_Info_TDD768
{
 TknPres pres;
 NhuHS_SICH_Power_Cntrl_Info_TDD768ul_target_SIR ul_target_SIR;
 NhuConstantValue hs_sich_ConstantValue;
} NhuHS_SICH_Power_Cntrl_Info_TDD768;


typedef enum enumNhuIvdualTimeslotInfo_LCR_r4_extmodulation
{
 NhuIvdualTimeslotInfo_LCR_r4_extmodulationmod_QPSKEnum,
 NhuIvdualTimeslotInfo_LCR_r4_extmodulationmod_8PSKEnum
} EnumNhuIvdualTimeslotInfo_LCR_r4_extmodulation;
typedef TknU32 NhuIvdualTimeslotInfo_LCR_r4_extmodulation;


typedef enum enumNhuIvdualTimeslotInfo_LCR_r4_extss_TPC_Symbols
{
 NhuIvdualTimeslotInfo_LCR_r4_extss_TPC_SymbolszeroEnum,
 NhuIvdualTimeslotInfo_LCR_r4_extss_TPC_SymbolsoneEnum,
 NhuIvdualTimeslotInfo_LCR_r4_extss_TPC_SymbolssixteenOverSFEnum
} EnumNhuIvdualTimeslotInfo_LCR_r4_extss_TPC_Symbols;
typedef TknU32 NhuIvdualTimeslotInfo_LCR_r4_extss_TPC_Symbols;

typedef struct NhuIvdualTimeslotInfo_LCR_r4_ext
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_LCR_r4 midambleShiftAndBurstTyp;
 NhuIvdualTimeslotInfo_LCR_r4_extmodulation modulation;
 NhuIvdualTimeslotInfo_LCR_r4_extss_TPC_Symbols ss_TPC_Symbols;
} NhuIvdualTimeslotInfo_LCR_r4_ext;


typedef TknU32 NhuMaxPowerIncrease_r4;

typedef struct NhuMeasurement_Feedback_InfomodeSpecificInfofdd
{
 TknPres pres;
 NhuMeasurementPowerOffset measurementPowerOffset;
 NhuFeedback_cycle feedback_cycle;
 NhuCQI_RepetitionFactor cqi_RepetitionFactor;
 NhuDeltaCQI deltaCQI;
} NhuMeasurement_Feedback_InfomodeSpecificInfofdd;

typedef struct NhuMeasurement_Feedback_InfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuMeasurement_Feedback_InfomodeSpecificInfofdd fdd;
 } val;
} NhuMeasurement_Feedback_InfomodeSpecificInfo;

typedef struct NhuMeasurement_Feedback_Info
{
 TknPres pres;
 NhuMeasurement_Feedback_InfomodeSpecificInfo modeSpecificInfo;
} NhuMeasurement_Feedback_Info;

typedef struct NhuMeasurement_Feedback_Info_r7modeSpecificInfofdd
{
 TknPres pres;
 NhuMeasurementPowerOffset measurementPowerOffset;
 NhuFeedback_cycle_r7 feedback_cycle;
 NhuCQI_RepetitionFactor cqi_RepetitionFactor;
 NhuDeltaCQI deltaCQI;
} NhuMeasurement_Feedback_Info_r7modeSpecificInfofdd;

typedef struct NhuMeasurement_Feedback_Info_r7modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuMeasurement_Feedback_Info_r7modeSpecificInfofdd fdd;
 } val;
} NhuMeasurement_Feedback_Info_r7modeSpecificInfo;

typedef struct NhuMeasurement_Feedback_Info_r7
{
 TknPres pres;
 NhuMeasurement_Feedback_Info_r7modeSpecificInfo modeSpecificInfo;
} NhuMeasurement_Feedback_Info_r7;


typedef enum enumNhuMIMO_Operation
{
 NhuMIMO_OperationstartEnum,
 NhuMIMO_OperationcontinueEnum
} EnumNhuMIMO_Operation;
typedef TknU32 NhuMIMO_Operation;

typedef struct NhuMIMO_PilotCfgsecondCPICH_PatterndiversityPattern
{
 TknPres pres;
 NhuChannelisationCode256 channelisationCode;
} NhuMIMO_PilotCfgsecondCPICH_PatterndiversityPattern;

typedef struct NhuMIMO_PilotCfgsecondCPICH_Pattern
{
 TknU8 choice;
 union {
  NhuMIMO_PilotCfgsecondCPICH_PatterndiversityPattern diversityPattern;
 } val;
} NhuMIMO_PilotCfgsecondCPICH_Pattern;

typedef struct NhuMIMO_PilotCfg
{
 TknPres pres;
 NhuMIMO_PilotCfgsecondCPICH_Pattern secondCPICH_Pattern;
} NhuMIMO_PilotCfg;

typedef struct NhuMIMO_Params_r7
{
 TknPres pres;
 NhuMIMO_Operation mimoOperation;
 NhuMIMO_N_M_Ratio mimoN_M_Ratio;
 NhuMIMO_PilotCfg mimoPilotCfg;
} NhuMIMO_Params_r7;

typedef struct NhuMIMO_PilotCfg_v7f0ext
{
 TknPres pres;
 NhuS_CPICH_PowerOffset_MIMO s_cpich_PowerOffset_Mimo;
} NhuMIMO_PilotCfg_v7f0ext;


typedef NhuMIMO_PilotCfg_v7f0ext NhuMIMO_Params_v7f0ext;

typedef enum enumNhuMIMO_Params_v7g0extprecodingWeightSetRestrn
{
 NhuMIMO_Params_v7g0extprecodingWeightSetRestrntrueEnum
} EnumNhuMIMO_Params_v7g0extprecodingWeightSetRestrn;
typedef TknU32 NhuMIMO_Params_v7g0extprecodingWeightSetRestrn;

typedef struct NhuMIMO_Params_v7g0ext
{
 TknPres pres;
 NhuMIMO_Params_v7g0extprecodingWeightSetRestrn precodingWeightSetRestrn;
} NhuMIMO_Params_v7g0ext;

typedef struct NhuMIMO_Params_r8modeSpecificInfofdd
{
 TknPres pres;
 NhuMIMO_N_M_Ratio mimoN_M_Ratio;
 NhuMIMO_PilotCfg mimoPilotCfg;
} NhuMIMO_Params_r8modeSpecificInfofdd;


typedef enum enumNhuMIMO_Params_r8modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStream
{
 NhuMIMO_Params_r8modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStreamsf1Enum,
 NhuMIMO_Params_r8modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStreamsf1sf16Enum
} EnumNhuMIMO_Params_r8modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStream;
typedef TknU32 NhuMIMO_Params_r8modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStream;

typedef struct NhuMIMO_Params_r8modeSpecificInfotddtdd128
{
 TknPres pres;
 NhuMIMO_Params_r8modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStream mimoSFModeForHSPDSCHDualStream;
 NhuHS_SICH_ReferenceSignalInfoLst hs_sich_ReferenceSignalInfoLst;
} NhuMIMO_Params_r8modeSpecificInfotddtdd128;

typedef struct NhuMIMO_Params_r8modeSpecificInfotdd
{
 TknU8 choice;
 union {
  NhuMIMO_Params_r8modeSpecificInfotddtdd128 tdd128;
 } val;
} NhuMIMO_Params_r8modeSpecificInfotdd;

typedef struct NhuMIMO_Params_r8modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuMIMO_Params_r8modeSpecificInfofdd fdd;
  NhuMIMO_Params_r8modeSpecificInfotdd tdd;
 } val;
} NhuMIMO_Params_r8modeSpecificInfo;

typedef struct NhuMIMO_Params_r8
{
 TknPres pres;
 NhuMIMO_Operation mimoOperation;
 NhuMIMO_Params_r8modeSpecificInfo modeSpecificInfo;
} NhuMIMO_Params_r8;


typedef enum enumNhuMIMO_Params_r9modeSpecificInfofddprecodingWeightSetRestrn
{
 NhuMIMO_Params_r9modeSpecificInfofddprecodingWeightSetRestrntrueEnum
} EnumNhuMIMO_Params_r9modeSpecificInfofddprecodingWeightSetRestrn;
typedef TknU32 NhuMIMO_Params_r9modeSpecificInfofddprecodingWeightSetRestrn;

typedef struct NhuMIMO_Params_r9modeSpecificInfofdd
{
 TknPres pres;
 NhuMIMO_N_M_Ratio mimoN_M_Ratio;
 NhuMIMO_PilotCfg_r9 mimoPilotCfg;
 NhuMIMO_Params_r9modeSpecificInfofddprecodingWeightSetRestrn precodingWeightSetRestrn;
} NhuMIMO_Params_r9modeSpecificInfofdd;


typedef enum enumNhuMIMO_Params_r9modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStream
{
 NhuMIMO_Params_r9modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStreamsf1Enum,
 NhuMIMO_Params_r9modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStreamsf1sf16Enum
} EnumNhuMIMO_Params_r9modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStream;
typedef TknU32 NhuMIMO_Params_r9modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStream;

typedef struct NhuMIMO_Params_r9modeSpecificInfotddtdd128
{
 TknPres pres;
 NhuMIMO_Params_r9modeSpecificInfotddtdd128mimoSFModeForHSPDSCHDualStream mimoSFModeForHSPDSCHDualStream;
 NhuHS_SICH_ReferenceSignalInfoLst hs_sich_ReferenceSignalInfoLst;
} NhuMIMO_Params_r9modeSpecificInfotddtdd128;

typedef struct NhuMIMO_Params_r9modeSpecificInfotdd
{
 TknU8 choice;
 union {
  NhuMIMO_Params_r9modeSpecificInfotddtdd128 tdd128;
 } val;
} NhuMIMO_Params_r9modeSpecificInfotdd;

typedef struct NhuMIMO_Params_r9modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuMIMO_Params_r9modeSpecificInfofdd fdd;
  NhuMIMO_Params_r9modeSpecificInfotdd tdd;
 } val;
} NhuMIMO_Params_r9modeSpecificInfo;

typedef struct NhuMIMO_Params_r9
{
 TknPres pres;
 NhuMIMO_Operation mimoOperation;
 NhuMIMO_Params_r9modeSpecificInfo modeSpecificInfo;
} NhuMIMO_Params_r9;


typedef TknU32 NhuUpPCHposition_LCR;

typedef struct NhuMulti_frequencyInfo_LCR_r7
{
 TknPres pres;
 NhuFrequencyInfoTDD secondFrequencyInfo;
 NhuFrequencyInfoTDD fPachFrequencyInfo;
 NhuUpPCHposition_LCR upPCHpositionInfo;
} NhuMulti_frequencyInfo_LCR_r7;


typedef enum enumNhuMU_MIMO_Operation
{
 NhuMU_MIMO_OperationuLEnum,
 NhuMU_MIMO_OperationdLEnum,
 NhuMU_MIMO_OperationuLandDLEnum,
 NhuMU_MIMO_OperationspareEnum
} EnumNhuMU_MIMO_Operation;
typedef TknU32 NhuMU_MIMO_Operation;


typedef TknU32 NhuStandaloneMidambleInfo_TDD128midambleCfg;


typedef TknU32 NhuStandaloneMidambleInfo_TDD128midambleShift;


typedef TknStrBSXL NhuStandaloneMidambleInfo_TDD128timeSlotInfo;

typedef TknU32 NhuStandaloneMidambleInfo_TDD128subframeNum;


typedef enum enumNhuStandaloneMidambleInfo_TDD128repetitionPeriod
{
 NhuStandaloneMidambleInfo_TDD128repetitionPeriodv1Enum,
 NhuStandaloneMidambleInfo_TDD128repetitionPeriodv2Enum,
 NhuStandaloneMidambleInfo_TDD128repetitionPeriodv4Enum,
 NhuStandaloneMidambleInfo_TDD128repetitionPeriodv8Enum,
 NhuStandaloneMidambleInfo_TDD128repetitionPeriodv16Enum,
 NhuStandaloneMidambleInfo_TDD128repetitionPeriodv32Enum,
 NhuStandaloneMidambleInfo_TDD128repetitionPeriodv64Enum,
 NhuStandaloneMidambleInfo_TDD128repetitionPeriodspareEnum
} EnumNhuStandaloneMidambleInfo_TDD128repetitionPeriod;
typedef TknU32 NhuStandaloneMidambleInfo_TDD128repetitionPeriod;


typedef TknS32 NhuStandaloneMidambleInfo_TDD128referenceBeta;

typedef struct NhuStandaloneMidambleInfo_TDD128
{
 TknPres pres;
 NhuStandaloneMidambleInfo_TDD128midambleCfg midambleCfg;
 NhuStandaloneMidambleInfo_TDD128midambleShift midambleShift;
 NhuStandaloneMidambleInfo_TDD128timeSlotInfo timeSlotInfo;
 NhuActvnTime activationTime;
 NhuStandaloneMidambleInfo_TDD128subframeNum subframeNum;
 NhuStandaloneMidambleInfo_TDD128repetitionPeriod repetitionPeriod;
 NhuStandaloneMidambleInfo_TDD128referenceBeta referenceBeta;
} NhuStandaloneMidambleInfo_TDD128;

typedef struct NhuMU_MIMO_Info_TDD128newCfg
{
 TknPres pres;
 NhuMU_MIMO_Operation mu_MIMO_Operation;
 NhuStandaloneMidambleInfo_TDD128 standaloneMidambleInfo;
} NhuMU_MIMO_Info_TDD128newCfg;

typedef struct NhuMU_MIMO_Info_TDD128
{
 TknU8 choice;
 union {
  NhuMU_MIMO_Info_TDD128newCfg newCfg;
 } val;
} NhuMU_MIMO_Info_TDD128;


typedef TknU32 NhuNB01;


typedef TknU32 NhuUE_DTX_DRX_Offset;

typedef struct NhuNewTiming
{
 TknPres pres;
 NhuEnablingDelay enablingDelay;
 NhuUE_DTX_DRX_Offset ue_dtx_drx_Offset;
} NhuNewTiming;


typedef TknU32 NhuNumberOfDPDCH;


typedef TknU32 NhuNumberOfFBI_Bits;

typedef struct NhuOpenLoopPowerCntrl_TDD
{
 TknPres pres;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuAlpha alpha;
 NhuConstantValueTdd prach_ConstantValue;
 NhuConstantValueTdd dpch_ConstantValue;
 NhuConstantValueTdd pusch_ConstantValue;
} NhuOpenLoopPowerCntrl_TDD;

typedef struct NhuOpenLoopPowerCntrl_IPDL_TDD_r4
{
 TknPres pres;
 NhuAlpha ipdl_alpha;
 NhuMaxPowerIncrease_r4 maxPowerIncrease;
} NhuOpenLoopPowerCntrl_IPDL_TDD_r4;

typedef struct NhuPDSCH_PowerCntrlInfo
{
 TknPres pres;
 NhuTPC_StepSizeTDD tpc_StepSizeTDD;
 NhuUL_CCTrChTPCLst ul_CCTrChTPCLst;
} NhuPDSCH_PowerCntrlInfo;


typedef TknU32 NhuPDSCH_Identity;

typedef struct NhuPDSCH_Info
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuDlnkTimeslotsCodes pdsch_TimeslotsCodes;
} NhuPDSCH_Info;

typedef struct NhuPDSCH_CapacityAllocnInfoconfigurationold_Cfg
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuPDSCH_Identity pdsch_Identity;
} NhuPDSCH_CapacityAllocnInfoconfigurationold_Cfg;

typedef struct NhuPDSCH_CapacityAllocnInfoconfigurationnew_Cfg
{
 TknPres pres;
 NhuPDSCH_Info pdsch_Info;
 NhuPDSCH_Identity pdsch_Identity;
} NhuPDSCH_CapacityAllocnInfoconfigurationnew_Cfg;

typedef struct NhuPDSCH_CapacityAllocnInfoconfiguration
{
 TknU8 choice;
 union {
  NhuPDSCH_CapacityAllocnInfoconfigurationold_Cfg old_Cfg;
  NhuPDSCH_CapacityAllocnInfoconfigurationnew_Cfg new_Cfg;
 } val;
} NhuPDSCH_CapacityAllocnInfoconfiguration;

typedef struct NhuPDSCH_CapacityAllocnInfo
{
 TknPres pres;
 NhuPDSCH_PowerCntrlInfo pdsch_PowerCntrlInfo;
 NhuAllocnPeriodInfo pdsch_AllocnPeriodInfo;
 NhuPDSCH_CapacityAllocnInfoconfiguration configuration;
} NhuPDSCH_CapacityAllocnInfo;

typedef struct NhuPDSCH_Info_r4tddOptiontdd384
{
 TknPres pres;
 NhuDlnkTimeslotsCodes pdsch_TimeslotsCodes;
} NhuPDSCH_Info_r4tddOptiontdd384;

typedef struct NhuPDSCH_Info_r4tddOptiontdd128
{
 TknPres pres;
 NhuDlnkTimeslotsCodes_LCR_r4 pdsch_TimeslotsCodes;
} NhuPDSCH_Info_r4tddOptiontdd128;

typedef struct NhuPDSCH_Info_r4tddOption
{
 TknU8 choice;
 union {
  NhuPDSCH_Info_r4tddOptiontdd384 tdd384;
  NhuPDSCH_Info_r4tddOptiontdd128 tdd128;
 } val;
} NhuPDSCH_Info_r4tddOption;

typedef struct NhuPDSCH_Info_r4
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuPDSCH_Info_r4tddOption tddOption;
} NhuPDSCH_Info_r4;

typedef struct NhuPDSCH_CapacityAllocnInfo_r4configurationold_Cfg
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuPDSCH_Identity pdsch_Identity;
} NhuPDSCH_CapacityAllocnInfo_r4configurationold_Cfg;

typedef struct NhuPDSCH_CapacityAllocnInfo_r4configurationnew_Cfg
{
 TknPres pres;
 NhuPDSCH_Info_r4 pdsch_Info;
 NhuPDSCH_Identity pdsch_Identity;
 NhuPDSCH_PowerCntrlInfo pdsch_PowerCntrlInfo;
} NhuPDSCH_CapacityAllocnInfo_r4configurationnew_Cfg;

typedef struct NhuPDSCH_CapacityAllocnInfo_r4configuration
{
 TknU8 choice;
 union {
  NhuPDSCH_CapacityAllocnInfo_r4configurationold_Cfg old_Cfg;
  NhuPDSCH_CapacityAllocnInfo_r4configurationnew_Cfg new_Cfg;
 } val;
} NhuPDSCH_CapacityAllocnInfo_r4configuration;

typedef struct NhuPDSCH_CapacityAllocnInfo_r4
{
 TknPres pres;
 NhuAllocnPeriodInfo pdsch_AllocnPeriodInfo;
 NhuPDSCH_CapacityAllocnInfo_r4configuration configuration;
} NhuPDSCH_CapacityAllocnInfo_r4;

typedef struct NhuPDSCH_Info_r7tddOptiontdd384
{
 TknPres pres;
 NhuDlnkTimeslotsCodes pdsch_TimeslotsCodes;
} NhuPDSCH_Info_r7tddOptiontdd384;

typedef struct NhuPDSCH_Info_r7tddOptiontdd768
{
 TknPres pres;
 NhuDlnkTimeslotsCodes_VHCR pdsch_TimeslotsCodes;
} NhuPDSCH_Info_r7tddOptiontdd768;

typedef struct NhuPDSCH_Info_r7tddOptiontdd128
{
 TknPres pres;
 NhuDlnkTimeslotsCodes_LCR_r4 pdsch_TimeslotsCodes;
} NhuPDSCH_Info_r7tddOptiontdd128;

typedef struct NhuPDSCH_Info_r7tddOption
{
 TknU8 choice;
 union {
  NhuPDSCH_Info_r7tddOptiontdd384 tdd384;
  NhuPDSCH_Info_r7tddOptiontdd768 tdd768;
  NhuPDSCH_Info_r7tddOptiontdd128 tdd128;
 } val;
} NhuPDSCH_Info_r7tddOption;

typedef struct NhuPDSCH_Info_r7
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuPDSCH_Info_r7tddOption tddOption;
} NhuPDSCH_Info_r7;

typedef struct NhuPDSCH_CapacityAllocnInfo_r7configurationold_Cfg
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuPDSCH_Identity pdsch_Identity;
} NhuPDSCH_CapacityAllocnInfo_r7configurationold_Cfg;

typedef struct NhuPDSCH_CapacityAllocnInfo_r7configurationnew_Cfg
{
 TknPres pres;
 NhuPDSCH_Info_r7 pdsch_Info;
 NhuPDSCH_Identity pdsch_Identity;
 NhuPDSCH_PowerCntrlInfo pdsch_PowerCntrlInfo;
} NhuPDSCH_CapacityAllocnInfo_r7configurationnew_Cfg;

typedef struct NhuPDSCH_CapacityAllocnInfo_r7configuration
{
 TknU8 choice;
 union {
  NhuPDSCH_CapacityAllocnInfo_r7configurationold_Cfg old_Cfg;
  NhuPDSCH_CapacityAllocnInfo_r7configurationnew_Cfg new_Cfg;
 } val;
} NhuPDSCH_CapacityAllocnInfo_r7configuration;

typedef struct NhuPDSCH_CapacityAllocnInfo_r7
{
 TknPres pres;
 NhuAllocnPeriodInfo pdsch_AllocnPeriodInfo;
 NhuPDSCH_CapacityAllocnInfo_r7configuration configuration;
} NhuPDSCH_CapacityAllocnInfo_r7;

typedef struct NhuPDSCH_Info_LCR_r4
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuDlnkTimeslotsCodes_LCR_r4 pdsch_TimeslotsCodes;
} NhuPDSCH_Info_LCR_r4;

typedef struct NhuPDSCH_SysInfo
{
 TknPres pres;
 NhuPDSCH_Identity pdsch_Identity;
 NhuPDSCH_Info pdsch_Info;
 NhuTportFormatSet dsch_TFS;
 NhuTFCS dsch_TFCS;
} NhuPDSCH_SysInfo;

typedef struct NhuPDSCH_SysInfo_VHCR_r7
{
 TknPres pres;
 NhuPDSCH_Identity pdsch_Identity;
 NhuPDSCH_Info_r7 pdsch_Info;
 NhuDSCH_TportChannelsInfo dsch_TportChannelsInfo;
 NhuTFCS dsch_TFCS;
} NhuPDSCH_SysInfo_VHCR_r7;

typedef struct NhuPDSCH_SysInfo_HCR_r5
{
 TknPres pres;
 NhuPDSCH_Identity pdsch_Identity;
 NhuPDSCH_Info pdsch_Info;
 NhuDSCH_TportChannelsInfo dsch_TportChannelsInfo;
 NhuTFCS dsch_TFCS;
} NhuPDSCH_SysInfo_HCR_r5;

typedef struct NhuPDSCH_SysInfo_LCR_r4
{
 TknPres pres;
 NhuPDSCH_Identity pdsch_Identity;
 NhuPDSCH_Info_LCR_r4 pdsch_Info;
 NhuTportFormatSet dsch_TFS;
 NhuTFCS dsch_TFCS;
} NhuPDSCH_SysInfo_LCR_r4;

typedef struct NhuPDSCH_SysInfoLst
{
 TknU16 noComp;
 NhuPDSCH_SysInfo *member;
}NhuPDSCH_SysInfoLst;

typedef struct NhuPDSCH_SysInfoLst_VHCR_r7
{
 TknU16 noComp;
 NhuPDSCH_SysInfo_VHCR_r7 *member;
}NhuPDSCH_SysInfoLst_VHCR_r7;

typedef struct NhuPDSCH_SysInfoLst_HCR_r5
{
 TknU16 noComp;
 NhuPDSCH_SysInfo_HCR_r5 *member;
}NhuPDSCH_SysInfoLst_HCR_r5;

typedef struct NhuPDSCH_SysInfoLst_LCR_r4
{
 TknU16 noComp;
 NhuPDSCH_SysInfo_LCR_r4 *member;
}NhuPDSCH_SysInfoLst_LCR_r4;


typedef TknU32 NhuSFN_TimeInfoactivationTimeSFN;

typedef struct NhuSFN_TimeInfo
{
 TknPres pres;
 NhuSFN_TimeInfoactivationTimeSFN activationTimeSFN;
 NhuDurationTimeInfo physChDuration;
} NhuSFN_TimeInfo;

typedef struct NhuPDSCH_SysInfoLst_SFNMember
{
 TknPres pres;
 NhuPDSCH_SysInfo pdsch_SysInfo;
 NhuSFN_TimeInfo sfn_TimeInfo;
} NhuPDSCH_SysInfoLst_SFNMember;

typedef struct NhuPDSCH_SysInfoLst_SFN
{
 TknU16 noComp;
 NhuPDSCH_SysInfoLst_SFNMember *member;
}NhuPDSCH_SysInfoLst_SFN;

typedef struct NhuPDSCH_SysInfoLst_SFN_HCR_r5Member
{
 TknPres pres;
 NhuPDSCH_SysInfo_HCR_r5 pdsch_SysInfo;
 NhuSFN_TimeInfo sfn_TimeInfo;
} NhuPDSCH_SysInfoLst_SFN_HCR_r5Member;

typedef struct NhuPDSCH_SysInfoLst_SFN_HCR_r5
{
 TknU16 noComp;
 NhuPDSCH_SysInfoLst_SFN_HCR_r5Member *member;
}NhuPDSCH_SysInfoLst_SFN_HCR_r5;

typedef struct NhuPDSCH_SysInfoLst_SFN_LCR_r4Member
{
 TknPres pres;
 NhuPDSCH_SysInfo_LCR_r4 pdsch_SysInfo;
 NhuSFN_TimeInfo sfn_TimeInfo;
} NhuPDSCH_SysInfoLst_SFN_LCR_r4Member;

typedef struct NhuPDSCH_SysInfoLst_SFN_LCR_r4
{
 TknU16 noComp;
 NhuPDSCH_SysInfoLst_SFN_LCR_r4Member *member;
}NhuPDSCH_SysInfoLst_SFN_LCR_r4;

typedef struct NhuPichChannelisationCodeLst_LCR_r4
{
 TknU16 noComp;
 NhuDL_TS_ChannelisationCode *member;
}NhuPichChannelisationCodeLst_LCR_r4;

typedef struct NhuPICH_Info_LCR_r4
{
 TknPres pres;
 NhuTimeslotNumber_LCR_r4 timeslot;
 NhuPichChannelisationCodeLst_LCR_r4 pichChannelisationCodeLst_LCR_r4;
 NhuMidambleShiftAndBurstTyp_LCR_r4 midambleShiftAndBurstTyp;
 NhuRepPerLengthOffset_PICH repetitionPeriodLengthOffset;
 NhuPagIndicatorLength pagingIndicatorLength;
 NhuN_GAP n_GAP;
 NhuN_PCH n_PCH;
} NhuPICH_Info_LCR_r4;

typedef struct NhuPICH_ForHSDPASuppPag_TDD128implicit
{
 TknPres pres;
 NhuOccurrenceSequenceNumberOfPICH occurrenceSequenceNumberOfPICH;
} NhuPICH_ForHSDPASuppPag_TDD128implicit;

typedef struct NhuPICH_ForHSDPASuppPag_TDD128
{
 TknU8 choice;
 union {
  NhuPICH_ForHSDPASuppPag_TDD128implicit implicit;
  NhuPICH_Info_LCR_r4 explict;
 } val;
} NhuPICH_ForHSDPASuppPag_TDD128;


typedef enum enumNhuTDD768_PICH_CCode
{
 NhuTDD768_PICH_CCodecc32_1Enum,
 NhuTDD768_PICH_CCodecc32_2Enum,
 NhuTDD768_PICH_CCodecc32_3Enum,
 NhuTDD768_PICH_CCodecc32_4Enum,
 NhuTDD768_PICH_CCodecc32_5Enum,
 NhuTDD768_PICH_CCodecc32_6Enum,
 NhuTDD768_PICH_CCodecc32_7Enum,
 NhuTDD768_PICH_CCodecc32_8Enum,
 NhuTDD768_PICH_CCodecc32_9Enum,
 NhuTDD768_PICH_CCodecc32_10Enum,
 NhuTDD768_PICH_CCodecc32_11Enum,
 NhuTDD768_PICH_CCodecc32_12Enum,
 NhuTDD768_PICH_CCodecc32_13Enum,
 NhuTDD768_PICH_CCodecc32_14Enum,
 NhuTDD768_PICH_CCodecc32_15Enum,
 NhuTDD768_PICH_CCodecc32_16Enum,
 NhuTDD768_PICH_CCodecc32_17Enum,
 NhuTDD768_PICH_CCodecc32_18Enum,
 NhuTDD768_PICH_CCodecc32_19Enum,
 NhuTDD768_PICH_CCodecc32_20Enum,
 NhuTDD768_PICH_CCodecc32_21Enum,
 NhuTDD768_PICH_CCodecc32_22Enum,
 NhuTDD768_PICH_CCodecc32_23Enum,
 NhuTDD768_PICH_CCodecc32_24Enum,
 NhuTDD768_PICH_CCodecc32_25Enum,
 NhuTDD768_PICH_CCodecc32_26Enum,
 NhuTDD768_PICH_CCodecc32_27Enum,
 NhuTDD768_PICH_CCodecc32_28Enum,
 NhuTDD768_PICH_CCodecc32_29Enum,
 NhuTDD768_PICH_CCodecc32_30Enum,
 NhuTDD768_PICH_CCodecc32_31Enum,
 NhuTDD768_PICH_CCodecc32_32Enum
} EnumNhuTDD768_PICH_CCode;
typedef TknU32 NhuTDD768_PICH_CCode;

typedef struct NhuPICH_Info_HCR_VHCR_r7channelisationCode
{
 TknU8 choice;
 union {
  NhuTDD_PICH_CCode tdd384;
  NhuTDD768_PICH_CCode tdd768;
 } val;
} NhuPICH_Info_HCR_VHCR_r7channelisationCode;

typedef struct NhuPICH_Info_HCR_VHCR_r7
{
 TknPres pres;
 NhuPICH_Info_HCR_VHCR_r7channelisationCode channelisationCode;
 NhuTimeslotNumber timeslot;
 NhuMidambleShiftAndBurstTyp midambleShiftAndBurstTyp;
 NhuRepPerLengthOffset_PICH repetitionPeriodLengthOffset;
 NhuPagIndicatorLength pagingIndicatorLength;
 NhuN_GAP n_GAP;
 NhuN_PCH n_PCH;
} NhuPICH_Info_HCR_VHCR_r7;


typedef TknS32 NhuPICH_PowerOffset;


typedef TknU32 NhuTPC_CmdTgtRate;


typedef TknU32 NhuPLCCH_InfoplcchSequenceNumber;

typedef struct NhuPLCCH_Info
{
 TknPres pres;
 NhuPLCCH_InfoplcchSequenceNumber plcchSequenceNumber;
 NhuTimeslotNumber_LCR_r4 timeslotNumber;
 NhuDL_TS_ChannelisationCode channelisationCode;
 NhuTPC_CmdTgtRate tpcCmdTgtRate;
} NhuPLCCH_Info;


typedef TknU32 NhuPowerCntrlGAP;


typedef TknU32 NhuPowerRampStep;

typedef struct NhuPRACH_ChanCodes_LCR_r4
{
 TknU16 noComp;
 NhuTDD_PRACH_CCode_LCR_r4 *member;
}NhuPRACH_ChanCodes_LCR_r4;

typedef struct NhuPRACH_Definition_LCR_r4
{
 TknPres pres;
 NhuTimeslotNumber_PRACH_LCR_r4 timeslot;
 NhuPRACH_ChanCodes_LCR_r4 prach_ChanCodes_LCR;
 NhuMidambleShiftAndBurstTyp_LCR_r4 midambleShiftAndBurstTyp;
 NhuFPACH_Info_r4 fpach_Info;
} NhuPRACH_Definition_LCR_r4;


typedef enum enumNhuPRACH_Midamble
{
 NhuPRACH_MidambledirectEnum,
 NhuPRACH_Midambledirect_InvertedEnum
} EnumNhuPRACH_Midamble;
typedef TknU32 NhuPRACH_Midamble;

typedef struct NhuPRACH_Partitioningfdd
{
 TknU16 noComp;
 NhuASCSetting_FDD *member;
}NhuPRACH_Partitioningfdd;

typedef struct NhuPRACH_Partitioningtdd
{
 TknU16 noComp;
 NhuASCSetting_TDD *member;
}NhuPRACH_Partitioningtdd;

typedef struct NhuPRACH_Partitioning
{
 TknU8 choice;
 union {
  NhuPRACH_Partitioningfdd fdd;
  NhuPRACH_Partitioningtdd tdd;
 } val;
} NhuPRACH_Partitioning;

typedef struct NhuPRACH_Partitioning_r7fdd
{
 TknU16 noComp;
 NhuASCSetting_FDD *member;
}NhuPRACH_Partitioning_r7fdd;

typedef struct NhuPRACH_Partitioning_r7tdd
{
 TknU16 noComp;
 NhuASCSetting_TDD_r7 *member;
}NhuPRACH_Partitioning_r7tdd;

typedef struct NhuPRACH_Partitioning_r7
{
 TknU8 choice;
 union {
  NhuPRACH_Partitioning_r7fdd fdd;
  NhuPRACH_Partitioning_r7tdd tdd;
 } val;
} NhuPRACH_Partitioning_r7;


typedef TknU32 NhuPreambleRetransMax;

typedef struct NhuPRACH_PowerOffset
{
 TknPres pres;
 NhuPowerRampStep powerRampStep;
 NhuPreambleRetransMax preambleRetransMax;
} NhuPRACH_PowerOffset;


typedef TknU32 NhuPreambleScramblingCodeWordNumber;


typedef TknS32 NhuPrimaryCPICH_TX_Power;


typedef TknU32 NhuRACH_TransmissionParamsmmax;

typedef struct NhuRACH_TransmissionParams
{
 TknPres pres;
 NhuRACH_TransmissionParamsmmax mmax;
 NhuNB01 nb01Min;
 NhuNB01 nb01Max;
} NhuRACH_TransmissionParams;


typedef TknU8 NhuPRACH_PreambleForEnhancedUlnke_ai_Ind;


typedef TknS32 NhuPRACH_PreambleForEnhancedUlnkpowerOffsetPp_e;

typedef struct NhuPRACH_PreambleForEnhancedUlnk
{
 TknPres pres;
 NhuAvailableSignatures availableSignatures;
 NhuPRACH_PreambleForEnhancedUlnke_ai_Ind e_ai_Ind;
 NhuPreambleScramblingCodeWordNumber preambleScramblingCodeWordNumber;
 NhuAvailableSubChannelNumbers availableSubChannelNumbers;
 NhuPRACH_Partitioning_r7 prach_Partitioning;
 NhuPersistenceScalingFactorLst persistenceScalingFactorLst;
 NhuAC_To_ASC_MappingTable ac_To_ASC_MappingTable;
 NhuPrimaryCPICH_TX_Power primaryCPICH_TX_Power;
 NhuConstantValue constantValue;
 NhuPRACH_PowerOffset prach_PowerOffset;
 NhuRACH_TransmissionParams rach_TransmissionParams;
 NhuAICH_Info aich_Info;
 NhuPRACH_PreambleForEnhancedUlnkpowerOffsetPp_e powerOffsetPp_e;
} NhuPRACH_PreambleForEnhancedUlnk;


typedef enum enumNhuSF_PRACH
{
 NhuSF_PRACHsfpr32Enum,
 NhuSF_PRACHsfpr64Enum,
 NhuSF_PRACHsfpr128Enum,
 NhuSF_PRACHsfpr256Enum
} EnumNhuSF_PRACH;
typedef TknU32 NhuSF_PRACH;


typedef enum enumNhuTDD_PRACH_CCode8
{
 NhuTDD_PRACH_CCode8cc8_1Enum,
 NhuTDD_PRACH_CCode8cc8_2Enum,
 NhuTDD_PRACH_CCode8cc8_3Enum,
 NhuTDD_PRACH_CCode8cc8_4Enum,
 NhuTDD_PRACH_CCode8cc8_5Enum,
 NhuTDD_PRACH_CCode8cc8_6Enum,
 NhuTDD_PRACH_CCode8cc8_7Enum,
 NhuTDD_PRACH_CCode8cc8_8Enum
} EnumNhuTDD_PRACH_CCode8;
typedef TknU32 NhuTDD_PRACH_CCode8;


typedef enum enumNhuTDD_PRACH_CCode16
{
 NhuTDD_PRACH_CCode16cc16_1Enum,
 NhuTDD_PRACH_CCode16cc16_2Enum,
 NhuTDD_PRACH_CCode16cc16_3Enum,
 NhuTDD_PRACH_CCode16cc16_4Enum,
 NhuTDD_PRACH_CCode16cc16_5Enum,
 NhuTDD_PRACH_CCode16cc16_6Enum,
 NhuTDD_PRACH_CCode16cc16_7Enum,
 NhuTDD_PRACH_CCode16cc16_8Enum,
 NhuTDD_PRACH_CCode16cc16_9Enum,
 NhuTDD_PRACH_CCode16cc16_10Enum,
 NhuTDD_PRACH_CCode16cc16_11Enum,
 NhuTDD_PRACH_CCode16cc16_12Enum,
 NhuTDD_PRACH_CCode16cc16_13Enum,
 NhuTDD_PRACH_CCode16cc16_14Enum,
 NhuTDD_PRACH_CCode16cc16_15Enum,
 NhuTDD_PRACH_CCode16cc16_16Enum
} EnumNhuTDD_PRACH_CCode16;
typedef TknU32 NhuTDD_PRACH_CCode16;

typedef struct NhuTDD_PRACH_CCodeLstsf8
{
 TknU16 noComp;
 NhuTDD_PRACH_CCode8 *member;
}NhuTDD_PRACH_CCodeLstsf8;

typedef struct NhuTDD_PRACH_CCodeLstsf16
{
 TknU16 noComp;
 NhuTDD_PRACH_CCode16 *member;
}NhuTDD_PRACH_CCodeLstsf16;

typedef struct NhuTDD_PRACH_CCodeLst
{
 TknU8 choice;
 union {
  NhuTDD_PRACH_CCodeLstsf8 sf8;
  NhuTDD_PRACH_CCodeLstsf16 sf16;
 } val;
} NhuTDD_PRACH_CCodeLst;

typedef struct NhuPRACH_RACH_InfomodeSpecificInfofdd
{
 TknPres pres;
 NhuAvailableSignatures availableSignatures;
 NhuSF_PRACH availableSF;
 NhuPreambleScramblingCodeWordNumber preambleScramblingCodeWordNumber;
 NhuPuncturingLimit puncturingLimit;
 NhuAvailableSubChannelNumbers availableSubChannelNumbers;
} NhuPRACH_RACH_InfomodeSpecificInfofdd;

typedef struct NhuPRACH_RACH_InfomodeSpecificInfotdd
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
 NhuTDD_PRACH_CCodeLst channelisationCodeLst;
 NhuPRACH_Midamble prach_Midamble;
} NhuPRACH_RACH_InfomodeSpecificInfotdd;

typedef struct NhuPRACH_RACH_InfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuPRACH_RACH_InfomodeSpecificInfofdd fdd;
  NhuPRACH_RACH_InfomodeSpecificInfotdd tdd;
 } val;
} NhuPRACH_RACH_InfomodeSpecificInfo;

typedef struct NhuPRACH_RACH_Info
{
 TknPres pres;
 NhuPRACH_RACH_InfomodeSpecificInfo modeSpecificInfo;
} NhuPRACH_RACH_Info;


typedef enum enumNhuTDD768_PRACH_CCode32
{
 NhuTDD768_PRACH_CCode32cc32_1Enum,
 NhuTDD768_PRACH_CCode32cc32_2Enum,
 NhuTDD768_PRACH_CCode32cc32_3Enum,
 NhuTDD768_PRACH_CCode32cc32_4Enum,
 NhuTDD768_PRACH_CCode32cc32_5Enum,
 NhuTDD768_PRACH_CCode32cc32_6Enum,
 NhuTDD768_PRACH_CCode32cc32_7Enum,
 NhuTDD768_PRACH_CCode32cc32_8Enum,
 NhuTDD768_PRACH_CCode32cc32_9Enum,
 NhuTDD768_PRACH_CCode32cc32_10Enum,
 NhuTDD768_PRACH_CCode32cc32_11Enum,
 NhuTDD768_PRACH_CCode32cc32_12Enum,
 NhuTDD768_PRACH_CCode32cc32_13Enum,
 NhuTDD768_PRACH_CCode32cc32_14Enum,
 NhuTDD768_PRACH_CCode32cc32_15Enum,
 NhuTDD768_PRACH_CCode32cc32_16Enum
} EnumNhuTDD768_PRACH_CCode32;
typedef TknU32 NhuTDD768_PRACH_CCode32;


typedef enum enumNhuTDD768_PRACH_CCode16
{
 NhuTDD768_PRACH_CCode16cc16_1Enum,
 NhuTDD768_PRACH_CCode16cc16_2Enum,
 NhuTDD768_PRACH_CCode16cc16_3Enum,
 NhuTDD768_PRACH_CCode16cc16_4Enum,
 NhuTDD768_PRACH_CCode16cc16_5Enum,
 NhuTDD768_PRACH_CCode16cc16_6Enum,
 NhuTDD768_PRACH_CCode16cc16_7Enum,
 NhuTDD768_PRACH_CCode16cc16_8Enum,
 NhuTDD768_PRACH_CCode16cc16_9Enum,
 NhuTDD768_PRACH_CCode16cc16_10Enum,
 NhuTDD768_PRACH_CCode16cc16_11Enum,
 NhuTDD768_PRACH_CCode16cc16_12Enum,
 NhuTDD768_PRACH_CCode16cc16_13Enum,
 NhuTDD768_PRACH_CCode16cc16_14Enum,
 NhuTDD768_PRACH_CCode16cc16_15Enum,
 NhuTDD768_PRACH_CCode16cc16_16Enum
} EnumNhuTDD768_PRACH_CCode16;
typedef TknU32 NhuTDD768_PRACH_CCode16;

typedef struct NhuTDD768_PRACH_CCodeLstsf32
{
 TknU16 noComp;
 NhuTDD768_PRACH_CCode32 *member;
}NhuTDD768_PRACH_CCodeLstsf32;

typedef struct NhuTDD768_PRACH_CCodeLstsf16
{
 TknU16 noComp;
 NhuTDD768_PRACH_CCode16 *member;
}NhuTDD768_PRACH_CCodeLstsf16;

typedef struct NhuTDD768_PRACH_CCodeLst
{
 TknU8 choice;
 union {
  NhuTDD768_PRACH_CCodeLstsf32 sf32;
  NhuTDD768_PRACH_CCodeLstsf16 sf16;
 } val;
} NhuTDD768_PRACH_CCodeLst;

typedef struct NhuPRACH_RACH_Info_VHCR_r7
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
 NhuTDD768_PRACH_CCodeLst channelisationCodeLst;
 NhuPRACH_Midamble prach_Midamble;
} NhuPRACH_RACH_Info_VHCR_r7;

typedef struct NhuPRACH_RACH_Info_LCR_v770ext
{
 TknPres pres;
 NhuSync_UL_Codes_Bitmap e_RUCCH_Sync_UL_Codes_Bitmap;
} NhuPRACH_RACH_Info_LCR_v770ext;


typedef TknU32 NhuSYNC_UL_Info_r4prxUpPCHdes;


typedef TknU32 NhuSYNC_UL_Info_r4powerRampStep;


typedef enum enumNhuSYNC_UL_Info_r4max_SYNC_UL_Transmissions
{
 NhuSYNC_UL_Info_r4max_SYNC_UL_Transmissionstr1Enum,
 NhuSYNC_UL_Info_r4max_SYNC_UL_Transmissionstr2Enum,
 NhuSYNC_UL_Info_r4max_SYNC_UL_Transmissionstr4Enum,
 NhuSYNC_UL_Info_r4max_SYNC_UL_Transmissionstr8Enum
} EnumNhuSYNC_UL_Info_r4max_SYNC_UL_Transmissions;
typedef TknU32 NhuSYNC_UL_Info_r4max_SYNC_UL_Transmissions;


typedef TknU32 NhuSYNC_UL_Info_r4mmax;

typedef struct NhuSYNC_UL_Info_r4
{
 TknPres pres;
 NhuSync_UL_Codes_Bitmap sync_UL_Codes_Bitmap;
 NhuSYNC_UL_Info_r4prxUpPCHdes prxUpPCHdes;
 NhuSYNC_UL_Info_r4powerRampStep powerRampStep;
 NhuSYNC_UL_Info_r4max_SYNC_UL_Transmissions max_SYNC_UL_Transmissions;
 NhuSYNC_UL_Info_r4mmax mmax;
} NhuSYNC_UL_Info_r4;

typedef struct NhuPRACH_RACH_Info_LCR_r4prach_DefinitionLst
{
 TknU16 noComp;
 NhuPRACH_Definition_LCR_r4 *member;
}NhuPRACH_RACH_Info_LCR_r4prach_DefinitionLst;

typedef struct NhuPRACH_RACH_Info_LCR_r4
{
 TknPres pres;
 NhuSYNC_UL_Info_r4 sync_UL_Info;
 NhuPRACH_RACH_Info_LCR_r4prach_DefinitionLst prach_DefinitionLst;
} NhuPRACH_RACH_Info_LCR_r4;

typedef struct NhuPRACH_SysInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_TX_Power primaryCPICH_TX_Power;
 NhuConstantValue constantValue;
 NhuPRACH_PowerOffset prach_PowerOffset;
 NhuRACH_TransmissionParams rach_TransmissionParams;
 NhuAICH_Info aich_Info;
} NhuPRACH_SysInfomodeSpecificInfofdd;

typedef struct NhuPRACH_SysInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuPRACH_SysInfomodeSpecificInfofdd fdd;
 } val;
} NhuPRACH_SysInfomodeSpecificInfo;

typedef struct NhuPRACH_SysInfo
{
 TknPres pres;
 NhuPRACH_RACH_Info prach_RACH_Info;
 NhuTportChannelIdentity transportChannelIdentity;
 NhuTportFormatSet rach_TportFormatSet;
 NhuTFCS rach_TFCS;
 NhuPRACH_Partitioning prach_Partitioning;
 NhuPersistenceScalingFactorLst persistenceScalingFactorLst;
 NhuAC_To_ASC_MappingTable ac_To_ASC_MappingTable;
 NhuPRACH_SysInfomodeSpecificInfo modeSpecificInfo;
} NhuPRACH_SysInfo;

typedef struct NhuPRACH_SysInfo_VHCR_r7
{
 TknPres pres;
 NhuPRACH_RACH_Info_VHCR_r7 prach_RACH_Info;
 NhuPRACH_Partitioning_r7 prach_Partitioning;
} NhuPRACH_SysInfo_VHCR_r7;

typedef struct NhuPRACH_SysInfo_LCR_r4
{
 TknPres pres;
 NhuPRACH_RACH_Info_LCR_r4 prach_RACH_Info_LCR;
 NhuTportFormatSet_LCR rach_TportFormatSet_LCR;
 NhuPRACH_Partitioning_LCR_r4 prach_Partitioning_LCR;
} NhuPRACH_SysInfo_LCR_r4;

typedef struct NhuPRACH_SysInfo_LCR_v770ext
{
 TknPres pres;
 NhuPRACH_RACH_Info_LCR_v770ext prach_RACH_Info_LCR;
} NhuPRACH_SysInfo_LCR_v770ext;

typedef struct NhuPRACH_SysInfoLst
{
 TknU16 noComp;
 NhuPRACH_SysInfo *member;
}NhuPRACH_SysInfoLst;

typedef struct NhuPRACH_SysInfoLst_VHCR_r7
{
 TknU16 noComp;
 NhuPRACH_SysInfo_VHCR_r7 *member;
}NhuPRACH_SysInfoLst_VHCR_r7;

typedef struct NhuPRACH_SysInfoLst_LCR_r4
{
 TknU16 noComp;
 NhuPRACH_SysInfo_LCR_r4 *member;
}NhuPRACH_SysInfoLst_LCR_r4;

typedef struct NhuPRACH_SysInfoLst_LCR_v770ext
{
 TknU16 noComp;
 NhuPRACH_SysInfo_LCR_v770ext *member;
}NhuPRACH_SysInfoLst_LCR_v770ext;


typedef TknU32 NhuTimeslotSync2;


typedef TknU8 NhuPrimaryCCPCH_Infofddtx_DiversityIndicator;

typedef struct NhuPrimaryCCPCH_Infofdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Infofddtx_DiversityIndicator tx_DiversityIndicator;
} NhuPrimaryCCPCH_Infofdd;

typedef struct NhuPrimaryCCPCH_InfotddsyncCasesyncCase1
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
} NhuPrimaryCCPCH_InfotddsyncCasesyncCase1;

typedef struct NhuPrimaryCCPCH_InfotddsyncCasesyncCase2
{
 TknPres pres;
 NhuTimeslotSync2 timeslotSync2;
} NhuPrimaryCCPCH_InfotddsyncCasesyncCase2;

typedef struct NhuPrimaryCCPCH_InfotddsyncCase
{
 TknU8 choice;
 union {
  NhuPrimaryCCPCH_InfotddsyncCasesyncCase1 syncCase1;
  NhuPrimaryCCPCH_InfotddsyncCasesyncCase2 syncCase2;
 } val;
} NhuPrimaryCCPCH_InfotddsyncCase;


typedef TknU8 NhuPrimaryCCPCH_Infotddsctd_Indicator;

typedef struct NhuPrimaryCCPCH_Infotdd
{
 TknPres pres;
 NhuPrimaryCCPCH_InfotddsyncCase syncCase;
 NhuCellParamsID cellParamsID;
 NhuPrimaryCCPCH_Infotddsctd_Indicator sctd_Indicator;
} NhuPrimaryCCPCH_Infotdd;

typedef struct NhuPrimaryCCPCH_Info
{
 TknU8 choice;
 union {
  NhuPrimaryCCPCH_Infofdd fdd;
  NhuPrimaryCCPCH_Infotdd tdd;
 } val;
} NhuPrimaryCCPCH_Info;


typedef TknU8 NhuPrimaryCCPCH_Info_r4fddtx_DiversityIndicator;

typedef struct NhuPrimaryCCPCH_Info_r4fdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Info_r4fddtx_DiversityIndicator tx_DiversityIndicator;
} NhuPrimaryCCPCH_Info_r4fdd;

typedef struct NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768syncCasesyncCase1
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
} NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768syncCasesyncCase1;

typedef struct NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768syncCasesyncCase2
{
 TknPres pres;
 NhuTimeslotSync2 timeslotSync2;
} NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768syncCasesyncCase2;

typedef struct NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768syncCase
{
 TknU8 choice;
 union {
  NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768syncCasesyncCase1 syncCase1;
  NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768syncCasesyncCase2 syncCase2;
 } val;
} NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768syncCase;

typedef struct NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768
{
 TknPres pres;
 NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768syncCase syncCase;
} NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768;


typedef TknU8 NhuPrimaryCCPCH_Info_r4tddtddOptiontdd128tstd_Indicator;

typedef struct NhuPrimaryCCPCH_Info_r4tddtddOptiontdd128
{
 TknPres pres;
 NhuPrimaryCCPCH_Info_r4tddtddOptiontdd128tstd_Indicator tstd_Indicator;
} NhuPrimaryCCPCH_Info_r4tddtddOptiontdd128;

typedef struct NhuPrimaryCCPCH_Info_r4tddtddOption
{
 TknU8 choice;
 union {
  NhuPrimaryCCPCH_Info_r4tddtddOptiontdd384_tdd768 tdd384_tdd768;
  NhuPrimaryCCPCH_Info_r4tddtddOptiontdd128 tdd128;
 } val;
} NhuPrimaryCCPCH_Info_r4tddtddOption;


typedef TknU8 NhuPrimaryCCPCH_Info_r4tddsctd_Indicator;

typedef struct NhuPrimaryCCPCH_Info_r4tdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Info_r4tddtddOption tddOption;
 NhuCellParamsID cellParamsID;
 NhuPrimaryCCPCH_Info_r4tddsctd_Indicator sctd_Indicator;
} NhuPrimaryCCPCH_Info_r4tdd;

typedef struct NhuPrimaryCCPCH_Info_r4
{
 TknU8 choice;
 union {
  NhuPrimaryCCPCH_Info_r4fdd fdd;
  NhuPrimaryCCPCH_Info_r4tdd tdd;
 } val;
} NhuPrimaryCCPCH_Info_r4;


typedef TknU8 NhuPrimaryCCPCH_Info_LCR_r4tstd_Indicator;


typedef TknU8 NhuPrimaryCCPCH_Info_LCR_r4sctd_Indicator;

typedef struct NhuPrimaryCCPCH_Info_LCR_r4
{
 TknPres pres;
 NhuPrimaryCCPCH_Info_LCR_r4tstd_Indicator tstd_Indicator;
 NhuCellParamsID cellParamsID;
 NhuPrimaryCCPCH_Info_LCR_r4sctd_Indicator sctd_Indicator;
} NhuPrimaryCCPCH_Info_LCR_r4;


typedef TknU8 NhuPrimaryCCPCH_Info_LCR_r4_exttstd_Indicator;

typedef struct NhuPrimaryCCPCH_Info_LCR_r4_ext
{
 TknPres pres;
 NhuPrimaryCCPCH_Info_LCR_r4_exttstd_Indicator tstd_Indicator;
} NhuPrimaryCCPCH_Info_LCR_r4_ext;

typedef struct NhuPrimaryCCPCH_InfoPostsyncCasesyncCase1
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
} NhuPrimaryCCPCH_InfoPostsyncCasesyncCase1;

typedef struct NhuPrimaryCCPCH_InfoPostsyncCasesyncCase2
{
 TknPres pres;
 NhuTimeslotSync2 timeslotSync2;
} NhuPrimaryCCPCH_InfoPostsyncCasesyncCase2;

typedef struct NhuPrimaryCCPCH_InfoPostsyncCase
{
 TknU8 choice;
 union {
  NhuPrimaryCCPCH_InfoPostsyncCasesyncCase1 syncCase1;
  NhuPrimaryCCPCH_InfoPostsyncCasesyncCase2 syncCase2;
 } val;
} NhuPrimaryCCPCH_InfoPostsyncCase;


typedef TknU8 NhuPrimaryCCPCH_InfoPostsctd_Indicator;

typedef struct NhuPrimaryCCPCH_InfoPost
{
 TknPres pres;
 NhuPrimaryCCPCH_InfoPostsyncCase syncCase;
 NhuCellParamsID cellParamsID;
 NhuPrimaryCCPCH_InfoPostsctd_Indicator sctd_Indicator;
} NhuPrimaryCCPCH_InfoPost;


typedef TknU8 NhuPrimaryCCPCH_InfoPostTDD_LCR_r4tstd_Indicator;


typedef TknU8 NhuPrimaryCCPCH_InfoPostTDD_LCR_r4sctd_Indicator;

typedef struct NhuPrimaryCCPCH_InfoPostTDD_LCR_r4
{
 TknPres pres;
 NhuPrimaryCCPCH_InfoPostTDD_LCR_r4tstd_Indicator tstd_Indicator;
 NhuCellParamsID cellParamsID;
 NhuPrimaryCCPCH_InfoPostTDD_LCR_r4sctd_Indicator sctd_Indicator;
} NhuPrimaryCCPCH_InfoPostTDD_LCR_r4;


typedef TknU32 NhuPUSCH_Identity;


typedef enum enumNhuUL_TS_ChannelisationCode
{
 NhuUL_TS_ChannelisationCodecc1_1Enum,
 NhuUL_TS_ChannelisationCodecc2_1Enum,
 NhuUL_TS_ChannelisationCodecc2_2Enum,
 NhuUL_TS_ChannelisationCodecc4_1Enum,
 NhuUL_TS_ChannelisationCodecc4_2Enum,
 NhuUL_TS_ChannelisationCodecc4_3Enum,
 NhuUL_TS_ChannelisationCodecc4_4Enum,
 NhuUL_TS_ChannelisationCodecc8_1Enum,
 NhuUL_TS_ChannelisationCodecc8_2Enum,
 NhuUL_TS_ChannelisationCodecc8_3Enum,
 NhuUL_TS_ChannelisationCodecc8_4Enum,
 NhuUL_TS_ChannelisationCodecc8_5Enum,
 NhuUL_TS_ChannelisationCodecc8_6Enum,
 NhuUL_TS_ChannelisationCodecc8_7Enum,
 NhuUL_TS_ChannelisationCodecc8_8Enum,
 NhuUL_TS_ChannelisationCodecc16_1Enum,
 NhuUL_TS_ChannelisationCodecc16_2Enum,
 NhuUL_TS_ChannelisationCodecc16_3Enum,
 NhuUL_TS_ChannelisationCodecc16_4Enum,
 NhuUL_TS_ChannelisationCodecc16_5Enum,
 NhuUL_TS_ChannelisationCodecc16_6Enum,
 NhuUL_TS_ChannelisationCodecc16_7Enum,
 NhuUL_TS_ChannelisationCodecc16_8Enum,
 NhuUL_TS_ChannelisationCodecc16_9Enum,
 NhuUL_TS_ChannelisationCodecc16_10Enum,
 NhuUL_TS_ChannelisationCodecc16_11Enum,
 NhuUL_TS_ChannelisationCodecc16_12Enum,
 NhuUL_TS_ChannelisationCodecc16_13Enum,
 NhuUL_TS_ChannelisationCodecc16_14Enum,
 NhuUL_TS_ChannelisationCodecc16_15Enum,
 NhuUL_TS_ChannelisationCodecc16_16Enum
} EnumNhuUL_TS_ChannelisationCode;
typedef TknU32 NhuUL_TS_ChannelisationCode;

typedef struct NhuUL_TS_ChannelisationCodeLst
{
 TknU16 noComp;
 NhuUL_TS_ChannelisationCode *member;
}NhuUL_TS_ChannelisationCodeLst;

typedef struct NhuUlnkAdditionalTimeslotsparameterssameAsLast
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
} NhuUlnkAdditionalTimeslotsparameterssameAsLast;

typedef struct NhuUlnkAdditionalTimeslotsparametersnewParams
{
 TknPres pres;
 NhuIvdualTimeslotInfo individualTimeslotInfo;
 NhuUL_TS_ChannelisationCodeLst ul_TS_ChannelisationCodeLst;
} NhuUlnkAdditionalTimeslotsparametersnewParams;

typedef struct NhuUlnkAdditionalTimeslotsparameters
{
 TknU8 choice;
 union {
  NhuUlnkAdditionalTimeslotsparameterssameAsLast sameAsLast;
  NhuUlnkAdditionalTimeslotsparametersnewParams newParams;
 } val;
} NhuUlnkAdditionalTimeslotsparameters;

typedef struct NhuUlnkAdditionalTimeslots
{
 TknPres pres;
 NhuUlnkAdditionalTimeslotsparameters parameters;
} NhuUlnkAdditionalTimeslots;


typedef TknU8 NhuUlnkTimeslotsCodesdynamicSFusage;


typedef TknU32 NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotsconsecutivenumAdditionalTimeslots;

typedef struct NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotsconsecutive
{
 TknPres pres;
 NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotsconsecutivenumAdditionalTimeslots numAdditionalTimeslots;
} NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotsconsecutive;

typedef struct NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotstimeslotLst
{
 TknU16 noComp;
 NhuUlnkAdditionalTimeslots *member;
}NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotstimeslotLst;

typedef struct NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslots
{
 TknU8 choice;
 union {
  NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotsconsecutive consecutive;
  NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslotstimeslotLst timeslotLst;
 } val;
} NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslots;

typedef struct NhuUlnkTimeslotsCodesmoreTimeslots
{
 TknU8 choice;
 union {
  NhuUlnkTimeslotsCodesmoreTimeslotsadditionalTimeslots additionalTimeslots;
 } val;
} NhuUlnkTimeslotsCodesmoreTimeslots;

typedef struct NhuUlnkTimeslotsCodes
{
 TknPres pres;
 NhuUlnkTimeslotsCodesdynamicSFusage dynamicSFusage;
 NhuIvdualTimeslotInfo firstIvdualTimeslotInfo;
 NhuUL_TS_ChannelisationCodeLst ul_TS_ChannelisationCodeLst;
 NhuUlnkTimeslotsCodesmoreTimeslots moreTimeslots;
} NhuUlnkTimeslotsCodes;

typedef struct NhuPUSCH_Info
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuUlnkTimeslotsCodes pusch_TimeslotsCodes;
} NhuPUSCH_Info;

typedef struct NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignmentconfigurationold_Cfg
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuPUSCH_Identity pusch_Identity;
} NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignmentconfigurationold_Cfg;

typedef struct NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignmentconfigurationnew_Cfg
{
 TknPres pres;
 NhuPUSCH_Info pusch_Info;
 NhuPUSCH_Identity pusch_Identity;
} NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignmentconfigurationnew_Cfg;

typedef struct NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignmentconfiguration
{
 TknU8 choice;
 union {
  NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignmentconfigurationold_Cfg old_Cfg;
  NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignmentconfigurationnew_Cfg new_Cfg;
 } val;
} NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignmentconfiguration;

typedef struct NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignment
{
 TknPres pres;
 NhuAllocnPeriodInfo pusch_AllocnPeriodInfo;
 NhuUL_TgtSIR pusch_PowerCntrlInfo;
 NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignmentconfiguration configuration;
} NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignment;

typedef struct NhuPUSCH_CapacityAllocnInfopusch_Allocn
{
 TknU8 choice;
 union {
  NhuPUSCH_CapacityAllocnInfopusch_Allocnpusch_AllocnAssignment pusch_AllocnAssignment;
 } val;
} NhuPUSCH_CapacityAllocnInfopusch_Allocn;

typedef struct NhuPUSCH_CapacityAllocnInfo
{
 TknPres pres;
 NhuPUSCH_CapacityAllocnInfopusch_Allocn pusch_Allocn;
} NhuPUSCH_CapacityAllocnInfo;

typedef struct NhuPUSCH_PowerCntrlInfo_r4tddOptiontdd128
{
 TknPres pres;
 NhuTPC_StepSizeTDD tpc_StepSize;
} NhuPUSCH_PowerCntrlInfo_r4tddOptiontdd128;

typedef struct NhuPUSCH_PowerCntrlInfo_r4tddOption
{
 TknU8 choice;
 union {
  NhuPUSCH_PowerCntrlInfo_r4tddOptiontdd128 tdd128;
 } val;
} NhuPUSCH_PowerCntrlInfo_r4tddOption;

typedef struct NhuPUSCH_PowerCntrlInfo_r4
{
 TknPres pres;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuPUSCH_PowerCntrlInfo_r4tddOption tddOption;
} NhuPUSCH_PowerCntrlInfo_r4;

typedef struct NhuUlnkAdditionalTimeslots_LCR_r4parameterssameAsLast
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
} NhuUlnkAdditionalTimeslots_LCR_r4parameterssameAsLast;

typedef struct NhuUlnkAdditionalTimeslots_LCR_r4parametersnewParams
{
 TknPres pres;
 NhuIvdualTimeslotInfo_LCR_r4 individualTimeslotInfo;
 NhuUL_TS_ChannelisationCodeLst ul_TS_ChannelisationCodeLst;
} NhuUlnkAdditionalTimeslots_LCR_r4parametersnewParams;

typedef struct NhuUlnkAdditionalTimeslots_LCR_r4parameters
{
 TknU8 choice;
 union {
  NhuUlnkAdditionalTimeslots_LCR_r4parameterssameAsLast sameAsLast;
  NhuUlnkAdditionalTimeslots_LCR_r4parametersnewParams newParams;
 } val;
} NhuUlnkAdditionalTimeslots_LCR_r4parameters;

typedef struct NhuUlnkAdditionalTimeslots_LCR_r4
{
 TknPres pres;
 NhuUlnkAdditionalTimeslots_LCR_r4parameters parameters;
} NhuUlnkAdditionalTimeslots_LCR_r4;


typedef TknU8 NhuUlnkTimeslotsCodes_LCR_r4dynamicSFusage;


typedef TknU32 NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotsconsecutivenumAdditionalTimeslots;

typedef struct NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotsconsecutive
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotsconsecutivenumAdditionalTimeslots numAdditionalTimeslots;
} NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotsconsecutive;

typedef struct NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotstimeslotLst
{
 TknU16 noComp;
 NhuUlnkAdditionalTimeslots_LCR_r4 *member;
}NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotstimeslotLst;

typedef struct NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslots
{
 TknU8 choice;
 union {
  NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotsconsecutive consecutive;
  NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslotstimeslotLst timeslotLst;
 } val;
} NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslots;

typedef struct NhuUlnkTimeslotsCodes_LCR_r4moreTimeslots
{
 TknU8 choice;
 union {
  NhuUlnkTimeslotsCodes_LCR_r4moreTimeslotsadditionalTimeslots additionalTimeslots;
 } val;
} NhuUlnkTimeslotsCodes_LCR_r4moreTimeslots;

typedef struct NhuUlnkTimeslotsCodes_LCR_r4
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_LCR_r4dynamicSFusage dynamicSFusage;
 NhuIvdualTimeslotInfo_LCR_r4 firstIvdualTimeslotInfo;
 NhuUL_TS_ChannelisationCodeLst ul_TS_ChannelisationCodeLst;
 NhuUlnkTimeslotsCodes_LCR_r4moreTimeslots moreTimeslots;
} NhuUlnkTimeslotsCodes_LCR_r4;

typedef struct NhuPUSCH_Info_r4tddOptiontdd384
{
 TknPres pres;
 NhuUlnkTimeslotsCodes pusch_TimeslotsCodes;
} NhuPUSCH_Info_r4tddOptiontdd384;

typedef struct NhuPUSCH_Info_r4tddOptiontdd128
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_LCR_r4 pusch_TimeslotsCodes;
} NhuPUSCH_Info_r4tddOptiontdd128;

typedef struct NhuPUSCH_Info_r4tddOption
{
 TknU8 choice;
 union {
  NhuPUSCH_Info_r4tddOptiontdd384 tdd384;
  NhuPUSCH_Info_r4tddOptiontdd128 tdd128;
 } val;
} NhuPUSCH_Info_r4tddOption;

typedef struct NhuPUSCH_Info_r4
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuPUSCH_Info_r4tddOption tddOption;
} NhuPUSCH_Info_r4;

typedef struct NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignmentconfigurationold_Cfg
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuPUSCH_Identity pusch_Identity;
} NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignmentconfigurationold_Cfg;

typedef struct NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignmentconfigurationnew_Cfg
{
 TknPres pres;
 NhuPUSCH_Info_r4 pusch_Info;
 NhuPUSCH_Identity pusch_Identity;
} NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignmentconfigurationnew_Cfg;

typedef struct NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignmentconfiguration
{
 TknU8 choice;
 union {
  NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignmentconfigurationold_Cfg old_Cfg;
  NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignmentconfigurationnew_Cfg new_Cfg;
 } val;
} NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignmentconfiguration;

typedef struct NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignment
{
 TknPres pres;
 NhuAllocnPeriodInfo pusch_AllocnPeriodInfo;
 NhuPUSCH_PowerCntrlInfo_r4 pusch_PowerCntrlInfo;
 NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignmentconfiguration configuration;
} NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignment;

typedef struct NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocn
{
 TknU8 choice;
 union {
  NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocnpusch_AllocnAssignment pusch_AllocnAssignment;
 } val;
} NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocn;

typedef struct NhuPUSCH_CapacityAllocnInfo_r4
{
 TknPres pres;
 NhuPUSCH_CapacityAllocnInfo_r4pusch_Allocn pusch_Allocn;
} NhuPUSCH_CapacityAllocnInfo_r4;

typedef struct NhuPUSCH_PowerCntrlInfo_r7tddOptiontdd128
{
 TknPres pres;
 NhuTPC_StepSizeTDD tpc_StepSize;
} NhuPUSCH_PowerCntrlInfo_r7tddOptiontdd128;

typedef struct NhuPUSCH_PowerCntrlInfo_r7tddOption
{
 TknU8 choice;
 union {
  NhuPUSCH_PowerCntrlInfo_r7tddOptiontdd128 tdd128;
 } val;
} NhuPUSCH_PowerCntrlInfo_r7tddOption;

typedef struct NhuPUSCH_PowerCntrlInfo_r7
{
 TknPres pres;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuPUSCH_PowerCntrlInfo_r7tddOption tddOption;
} NhuPUSCH_PowerCntrlInfo_r7;


typedef enum enumNhuUL_TS_ChannelisationCode_VHCR
{
 NhuUL_TS_ChannelisationCode_VHCRcc1_1Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc2_1Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc2_2Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc4_1Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc4_2Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc4_3Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc4_4Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc8_1Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc8_2Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc8_3Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc8_4Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc8_5Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc8_6Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc8_7Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc8_8Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_1Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_2Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_3Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_4Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_5Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_6Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_7Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_8Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_9Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_10Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_11Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_12Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_13Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_14Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_15Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc16_16Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_1Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_2Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_3Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_4Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_5Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_6Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_7Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_8Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_9Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_10Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_11Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_12Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_13Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_14Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_15Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_16Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_17Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_18Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_19Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_20Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_21Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_22Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_23Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_24Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_25Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_26Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_27Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_28Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_29Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_30Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_31Enum,
 NhuUL_TS_ChannelisationCode_VHCRcc32_32Enum
} EnumNhuUL_TS_ChannelisationCode_VHCR;
typedef TknU32 NhuUL_TS_ChannelisationCode_VHCR;

typedef struct NhuUL_TS_ChannelisationCodeLst_VHCR
{
 TknU16 noComp;
 NhuUL_TS_ChannelisationCode_VHCR *member;
}NhuUL_TS_ChannelisationCodeLst_VHCR;

typedef struct NhuUlnkAdditionalTimeslots_VHCRparameterssameAsLast
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
} NhuUlnkAdditionalTimeslots_VHCRparameterssameAsLast;

typedef struct NhuUlnkAdditionalTimeslots_VHCRparametersnewParams
{
 TknPres pres;
 NhuIvdualTimeslotInfo_VHCR individualTimeslotInfo;
 NhuUL_TS_ChannelisationCodeLst ul_TS_ChannelisationCodeLst;
} NhuUlnkAdditionalTimeslots_VHCRparametersnewParams;

typedef struct NhuUlnkAdditionalTimeslots_VHCRparameters
{
 TknU8 choice;
 union {
  NhuUlnkAdditionalTimeslots_VHCRparameterssameAsLast sameAsLast;
  NhuUlnkAdditionalTimeslots_VHCRparametersnewParams newParams;
 } val;
} NhuUlnkAdditionalTimeslots_VHCRparameters;

typedef struct NhuUlnkAdditionalTimeslots_VHCR
{
 TknPres pres;
 NhuUlnkAdditionalTimeslots_VHCRparameters parameters;
} NhuUlnkAdditionalTimeslots_VHCR;


typedef TknU8 NhuUlnkTimeslotsCodes_VHCRdynamicSFusage;


typedef TknU32 NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotsconsecutivenumAdditionalTimeslots;

typedef struct NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotsconsecutive
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotsconsecutivenumAdditionalTimeslots numAdditionalTimeslots;
} NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotsconsecutive;

typedef struct NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotstimeslotLst
{
 TknU16 noComp;
 NhuUlnkAdditionalTimeslots_VHCR *member;
}NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotstimeslotLst;

typedef struct NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslots
{
 TknU8 choice;
 union {
  NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotsconsecutive consecutive;
  NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslotstimeslotLst timeslotLst;
 } val;
} NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslots;

typedef struct NhuUlnkTimeslotsCodes_VHCRmoreTimeslots
{
 TknU8 choice;
 union {
  NhuUlnkTimeslotsCodes_VHCRmoreTimeslotsadditionalTimeslots additionalTimeslots;
 } val;
} NhuUlnkTimeslotsCodes_VHCRmoreTimeslots;

typedef struct NhuUlnkTimeslotsCodes_VHCR
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_VHCRdynamicSFusage dynamicSFusage;
 NhuIvdualTimeslotInfo_VHCR firstIvdualTimeslotInfo;
 NhuUL_TS_ChannelisationCodeLst_VHCR ul_TS_ChannelisationCodeLst;
 NhuUlnkTimeslotsCodes_VHCRmoreTimeslots moreTimeslots;
} NhuUlnkTimeslotsCodes_VHCR;

typedef struct NhuPUSCH_Info_VHCR
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuUlnkTimeslotsCodes_VHCR pusch_TimeslotsCodes_VHCR;
} NhuPUSCH_Info_VHCR;

typedef struct NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignmentconfigurationold_Cfg
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuPUSCH_Identity pusch_Identity;
} NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignmentconfigurationold_Cfg;

typedef struct NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignmentconfigurationnew_Cfg
{
 TknPres pres;
 NhuPUSCH_Info_VHCR pusch_Info;
 NhuPUSCH_Identity pusch_Identity;
} NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignmentconfigurationnew_Cfg;

typedef struct NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignmentconfiguration
{
 TknU8 choice;
 union {
  NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignmentconfigurationold_Cfg old_Cfg;
  NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignmentconfigurationnew_Cfg new_Cfg;
 } val;
} NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignmentconfiguration;

typedef struct NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignment
{
 TknPres pres;
 NhuAllocnPeriodInfo pusch_AllocnPeriodInfo;
 NhuPUSCH_PowerCntrlInfo_r7 pusch_PowerCntrlInfo;
 NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignmentconfiguration configuration;
} NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignment;

typedef struct NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocn
{
 TknU8 choice;
 union {
  NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocnpusch_AllocnAssignment pusch_AllocnAssignment;
 } val;
} NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocn;

typedef struct NhuPUSCH_CapacityAllocnInfo_r7
{
 TknPres pres;
 NhuPUSCH_CapacityAllocnInfo_r7pusch_Allocn pusch_Allocn;
} NhuPUSCH_CapacityAllocnInfo_r7;

typedef struct NhuPUSCH_Info_LCR_r4
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuUlnkTimeslotsCodes_LCR_r4 pusch_TimeslotsCodes;
} NhuPUSCH_Info_LCR_r4;

typedef struct NhuPUSCH_SysInfo
{
 TknPres pres;
 NhuPUSCH_Identity pusch_Identity;
 NhuPUSCH_Info pusch_Info;
 NhuTportFormatSet usch_TFS;
 NhuTFCS usch_TFCS;
} NhuPUSCH_SysInfo;

typedef struct NhuPUSCH_SysInfo_VHCR
{
 TknPres pres;
 NhuPUSCH_Identity pusch_Identity;
 NhuPUSCH_Info_VHCR pusch_Info_VHCR;
 NhuUSCH_TportChannelsInfo usch_TportChannelsInfo;
 NhuTFCS usch_TFCS;
} NhuPUSCH_SysInfo_VHCR;

typedef struct NhuPUSCH_SysInfo_HCR_r5
{
 TknPres pres;
 NhuPUSCH_Identity pusch_Identity;
 NhuPUSCH_Info pusch_Info;
 NhuUSCH_TportChannelsInfo usch_TportChannelsInfo;
 NhuTFCS usch_TFCS;
} NhuPUSCH_SysInfo_HCR_r5;

typedef struct NhuPUSCH_SysInfo_LCR_r4
{
 TknPres pres;
 NhuPUSCH_Identity pusch_Identity;
 NhuPUSCH_Info_LCR_r4 pusch_Info;
 NhuTportFormatSet usch_TFS;
 NhuTFCS usch_TFCS;
} NhuPUSCH_SysInfo_LCR_r4;

typedef struct NhuPUSCH_SysInfoLst
{
 TknU16 noComp;
 NhuPUSCH_SysInfo *member;
}NhuPUSCH_SysInfoLst;

typedef struct NhuPUSCH_SysInfoLst_HCR_r5
{
 TknU16 noComp;
 NhuPUSCH_SysInfo_HCR_r5 *member;
}NhuPUSCH_SysInfoLst_HCR_r5;

typedef struct NhuPUSCH_SysInfoLst_LCR_r4
{
 TknU16 noComp;
 NhuPUSCH_SysInfo_LCR_r4 *member;
}NhuPUSCH_SysInfoLst_LCR_r4;

typedef struct NhuPUSCH_SysInfoLst_SFNMember
{
 TknPres pres;
 NhuPUSCH_SysInfo pusch_SysInfo;
 NhuSFN_TimeInfo sfn_TimeInfo;
} NhuPUSCH_SysInfoLst_SFNMember;

typedef struct NhuPUSCH_SysInfoLst_SFN
{
 TknU16 noComp;
 NhuPUSCH_SysInfoLst_SFNMember *member;
}NhuPUSCH_SysInfoLst_SFN;

typedef struct NhuPUSCH_SysInfoLst_SFN_HCR_r5Member
{
 TknPres pres;
 NhuPUSCH_SysInfo_HCR_r5 pusch_SysInfo;
 NhuSFN_TimeInfo sfn_TimeInfo;
} NhuPUSCH_SysInfoLst_SFN_HCR_r5Member;

typedef struct NhuPUSCH_SysInfoLst_SFN_HCR_r5
{
 TknU16 noComp;
 NhuPUSCH_SysInfoLst_SFN_HCR_r5Member *member;
}NhuPUSCH_SysInfoLst_SFN_HCR_r5;

typedef struct NhuPUSCH_SysInfoLst_SFN_LCR_r4Member
{
 TknPres pres;
 NhuPUSCH_SysInfo_LCR_r4 pusch_SysInfo;
 NhuSFN_TimeInfo sfn_TimeInfo;
} NhuPUSCH_SysInfoLst_SFN_LCR_r4Member;

typedef struct NhuPUSCH_SysInfoLst_SFN_LCR_r4
{
 TknU16 noComp;
 NhuPUSCH_SysInfoLst_SFN_LCR_r4Member *member;
}NhuPUSCH_SysInfoLst_SFN_LCR_r4;

typedef struct NhuPUSCH_SysInfoLst_SFN_VHCRMember
{
 TknPres pres;
 NhuPUSCH_SysInfo_VHCR pusch_SysInfo_VHCR;
 NhuSFN_TimeInfo sfn_TimeInfo;
} NhuPUSCH_SysInfoLst_SFN_VHCRMember;

typedef struct NhuPUSCH_SysInfoLst_SFN_VHCR
{
 TknU16 noComp;
 NhuPUSCH_SysInfoLst_SFN_VHCRMember *member;
}NhuPUSCH_SysInfoLst_SFN_VHCR;


typedef TknU32 NhuReducedScramblingCodeNumber;


typedef TknU32 NhuRepPerLengthOffset_MICHrpp4_2;


typedef TknU32 NhuRepPerLengthOffset_MICHrpp8_2;


typedef TknU32 NhuRepPerLengthOffset_MICHrpp8_4;


typedef TknU32 NhuRepPerLengthOffset_MICHrpp16_2;


typedef TknU32 NhuRepPerLengthOffset_MICHrpp16_4;


typedef TknU32 NhuRepPerLengthOffset_MICHrpp32_2;


typedef TknU32 NhuRepPerLengthOffset_MICHrpp32_4;


typedef TknU32 NhuRepPerLengthOffset_MICHrpp64_2;


typedef TknU32 NhuRepPerLengthOffset_MICHrpp64_4;

typedef struct NhuRepPerLengthOffset_MICH
{
 TknU8 choice;
 union {
  NhuRepPerLengthOffset_MICHrpp4_2 rpp4_2;
  NhuRepPerLengthOffset_MICHrpp8_2 rpp8_2;
  NhuRepPerLengthOffset_MICHrpp8_4 rpp8_4;
  NhuRepPerLengthOffset_MICHrpp16_2 rpp16_2;
  NhuRepPerLengthOffset_MICHrpp16_4 rpp16_4;
  NhuRepPerLengthOffset_MICHrpp32_2 rpp32_2;
  NhuRepPerLengthOffset_MICHrpp32_4 rpp32_4;
  NhuRepPerLengthOffset_MICHrpp64_2 rpp64_2;
  NhuRepPerLengthOffset_MICHrpp64_4 rpp64_4;
 } val;
} NhuRepPerLengthOffset_MICH;

typedef struct NhuRL_RemovalInfoLst
{
 TknU16 noComp;
 NhuPrimaryCPICH_Info *member;
}NhuRL_RemovalInfoLst;

typedef struct NhuRL_RemovalInfoLst_SecULFreq
{
 TknU16 noComp;
 NhuPrimaryCPICH_Info *member;
}NhuRL_RemovalInfoLst_SecULFreq;


typedef enum enumNhuSCCPCH_ChannelisationCode
{
 NhuSCCPCH_ChannelisationCodecc16_1Enum,
 NhuSCCPCH_ChannelisationCodecc16_2Enum,
 NhuSCCPCH_ChannelisationCodecc16_3Enum,
 NhuSCCPCH_ChannelisationCodecc16_4Enum,
 NhuSCCPCH_ChannelisationCodecc16_5Enum,
 NhuSCCPCH_ChannelisationCodecc16_6Enum,
 NhuSCCPCH_ChannelisationCodecc16_7Enum,
 NhuSCCPCH_ChannelisationCodecc16_8Enum,
 NhuSCCPCH_ChannelisationCodecc16_9Enum,
 NhuSCCPCH_ChannelisationCodecc16_10Enum,
 NhuSCCPCH_ChannelisationCodecc16_11Enum,
 NhuSCCPCH_ChannelisationCodecc16_12Enum,
 NhuSCCPCH_ChannelisationCodecc16_13Enum,
 NhuSCCPCH_ChannelisationCodecc16_14Enum,
 NhuSCCPCH_ChannelisationCodecc16_15Enum,
 NhuSCCPCH_ChannelisationCodecc16_16Enum
} EnumNhuSCCPCH_ChannelisationCode;
typedef TknU32 NhuSCCPCH_ChannelisationCode;


typedef enum enumNhuSCCPCH_ChannelisationCode_VHCR
{
 NhuSCCPCH_ChannelisationCode_VHCRcc32_1Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_2Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_3Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_4Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_5Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_6Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_7Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_8Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_9Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_10Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_11Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_12Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_13Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_14Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_15Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_16Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_17Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_18Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_19Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_20Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_21Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_22Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_23Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_24Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_25Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_26Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_27Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_28Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_29Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_30Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_31Enum,
 NhuSCCPCH_ChannelisationCode_VHCRcc32_32Enum
} EnumNhuSCCPCH_ChannelisationCode_VHCR;
typedef TknU32 NhuSCCPCH_ChannelisationCode_VHCR;

typedef struct NhuSCCPCH_ChannelisationCodeLst
{
 TknU16 noComp;
 NhuSCCPCH_ChannelisationCode *member;
}NhuSCCPCH_ChannelisationCodeLst;

typedef struct NhuSCCPCH_ChannelisationCodeLst_VHCR
{
 TknU16 noComp;
 NhuSCCPCH_ChannelisationCode_VHCR *member;
}NhuSCCPCH_ChannelisationCodeLst_VHCR;


typedef TknU32 NhuSF256_AndCodeNumbersf4;


typedef TknU32 NhuSF256_AndCodeNumbersf8;


typedef TknU32 NhuSF256_AndCodeNumbersf16;


typedef TknU32 NhuSF256_AndCodeNumbersf32;


typedef TknU32 NhuSF256_AndCodeNumbersf64;


typedef TknU32 NhuSF256_AndCodeNumbersf128;


typedef TknU32 NhuSF256_AndCodeNumbersf256;

typedef struct NhuSF256_AndCodeNumber
{
 TknU8 choice;
 union {
  NhuSF256_AndCodeNumbersf4 sf4;
  NhuSF256_AndCodeNumbersf8 sf8;
  NhuSF256_AndCodeNumbersf16 sf16;
  NhuSF256_AndCodeNumbersf32 sf32;
  NhuSF256_AndCodeNumbersf64 sf64;
  NhuSF256_AndCodeNumbersf128 sf128;
  NhuSF256_AndCodeNumbersf256 sf256;
 } val;
} NhuSF256_AndCodeNumber;


typedef TknU32 NhuTimingOffset;


typedef TknU8 NhuSecondaryCCPCH_InfomodeSpecificInfofddsttd_Indicator;


typedef TknU8 NhuSecondaryCCPCH_InfomodeSpecificInfofddpilotSymbolExistence;


typedef TknU8 NhuSecondaryCCPCH_InfomodeSpecificInfofddtfci_Existence;

typedef struct NhuSecondaryCCPCH_InfomodeSpecificInfofdd
{
 TknPres pres;
 NhuPCPICH_UsageForChannelEst dummy1;
 NhuSecondaryCPICH_Info dummy2;
 NhuSecondaryScramblingCode secondaryScramblingCode;
 NhuSecondaryCCPCH_InfomodeSpecificInfofddsttd_Indicator sttd_Indicator;
 NhuSF256_AndCodeNumber sf_AndCodeNumber;
 NhuSecondaryCCPCH_InfomodeSpecificInfofddpilotSymbolExistence pilotSymbolExistence;
 NhuSecondaryCCPCH_InfomodeSpecificInfofddtfci_Existence tfci_Existence;
 NhuPositionFixedOrFlexible positionFixedOrFlexible;
 NhuTimingOffset timingOffset;
} NhuSecondaryCCPCH_InfomodeSpecificInfofdd;

typedef struct NhuSecondaryCCPCH_InfomodeSpecificInfotdd
{
 TknPres pres;
 NhuCmnTimeslotInfoSCCPCH commonTimeslotInfo;
 NhuIvdualTimeslotInfo individualTimeslotInfo;
 NhuSCCPCH_ChannelisationCodeLst channelisationCode;
} NhuSecondaryCCPCH_InfomodeSpecificInfotdd;

typedef struct NhuSecondaryCCPCH_InfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuSecondaryCCPCH_InfomodeSpecificInfofdd fdd;
  NhuSecondaryCCPCH_InfomodeSpecificInfotdd tdd;
 } val;
} NhuSecondaryCCPCH_InfomodeSpecificInfo;

typedef struct NhuSecondaryCCPCH_Info
{
 TknPres pres;
 NhuSecondaryCCPCH_InfomodeSpecificInfo modeSpecificInfo;
} NhuSecondaryCCPCH_Info;

typedef struct NhuSCCPCH_SysInfo
{
 TknPres pres;
 NhuSecondaryCCPCH_Info secondaryCCPCH_Info;
 NhuTFCS tfcs;
 NhuFACH_PCH_InfoLst fach_PCH_InfoLst;
 NhuPICH_Info pich_Info;
} NhuSCCPCH_SysInfo;

typedef struct NhuSecondaryCCPCH_Info_LCR_r4_ext
{
 TknPres pres;
 NhuIvdualTimeslotInfo_LCR_r4_ext individualTimeslotLCR_Ext;
} NhuSecondaryCCPCH_Info_LCR_r4_ext;

typedef struct NhuSCCPCH_SysInfo_LCR_r4_ext
{
 TknPres pres;
 NhuSecondaryCCPCH_Info_LCR_r4_ext secondaryCCPCH_LCR_Extns;
 NhuPICH_Info_LCR_r4 pich_Info;
} NhuSCCPCH_SysInfo_LCR_r4_ext;

typedef struct NhuSecondaryCCPCH_Info_HCR_VHCR_r7modeSpecificInfotdd384
{
 TknPres pres;
 NhuIvdualTimeslotInfo_r7 individualTimeslotInfo;
 NhuSCCPCH_ChannelisationCodeLst channelisationCode;
} NhuSecondaryCCPCH_Info_HCR_VHCR_r7modeSpecificInfotdd384;

typedef struct NhuSecondaryCCPCH_Info_HCR_VHCR_r7modeSpecificInfotdd768
{
 TknPres pres;
 NhuIvdualTimeslotInfo_VHCR individualTimeslotInfo;
 NhuSCCPCH_ChannelisationCodeLst_VHCR channelisationCode;
} NhuSecondaryCCPCH_Info_HCR_VHCR_r7modeSpecificInfotdd768;

typedef struct NhuSecondaryCCPCH_Info_HCR_VHCR_r7modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuSecondaryCCPCH_Info_HCR_VHCR_r7modeSpecificInfotdd384 tdd384;
  NhuSecondaryCCPCH_Info_HCR_VHCR_r7modeSpecificInfotdd768 tdd768;
 } val;
} NhuSecondaryCCPCH_Info_HCR_VHCR_r7modeSpecificInfo;

typedef struct NhuSecondaryCCPCH_Info_HCR_VHCR_r7
{
 TknPres pres;
 NhuSecondaryCCPCH_Info_HCR_VHCR_r7modeSpecificInfo modeSpecificInfo;
} NhuSecondaryCCPCH_Info_HCR_VHCR_r7;

typedef struct NhuSCCPCH_SysInfo_HCR_VHCR_r7
{
 TknPres pres;
 NhuSecondaryCCPCH_Info_HCR_VHCR_r7 secondaryCCPCH_Info;
 NhuTFCS tfcs;
 NhuFACH_PCH_InfoLst fach_PCH_InfoLst;
 NhuPICH_Info_HCR_VHCR_r7 pich_Info;
} NhuSCCPCH_SysInfo_HCR_VHCR_r7;

typedef struct NhuSCCPCH_SysInfoLst
{
 TknU16 noComp;
 NhuSCCPCH_SysInfo *member;
}NhuSCCPCH_SysInfoLst;

typedef struct NhuSCCPCH_SysInfoLst_HCR_VHCR_r7
{
 TknU16 noComp;
 NhuSCCPCH_SysInfo_HCR_VHCR_r7 *member;
}NhuSCCPCH_SysInfoLst_HCR_VHCR_r7;

typedef struct NhuSCCPCH_SysInfoLst_LCR_r4_ext
{
 TknU16 noComp;
 NhuSCCPCH_SysInfo_LCR_r4_ext *member;
}NhuSCCPCH_SysInfoLst_LCR_r4_ext;


typedef TknU8 NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfofddsttd_Indicator;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfofdd
{
 TknPres pres;
 NhuSecondaryScramblingCode secondaryScramblingCode;
 NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfofddsttd_Indicator sttd_Indicator;
 NhuSF256_AndCodeNumber sf_AndCodeNumber;
 NhuTimingOffset timingOffset;
} NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfofdd;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfotdd384
{
 TknPres pres;
 NhuCmnTimeslotInfoMBMS commonTimeslotInfoMBMS;
 NhuDlnkTimeslotsCodes downlinkTimeslotsCodes;
} NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfotdd384;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfotdd128
{
 TknPres pres;
 NhuCmnTimeslotInfoMBMS commonTimeslotInfoMBMS;
 NhuDlnkTimeslotsCodes_LCR_r4 downlinkTimeslotsCodes;
} NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfotdd128;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfofdd fdd;
  NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfotdd384 tdd384;
  NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfotdd128 tdd128;
 } val;
} NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfo;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r6
{
 TknPres pres;
 NhuSecondaryCCPCHInfo_MBMS_r6modeSpecificInfo modeSpecificInfo;
} NhuSecondaryCCPCHInfo_MBMS_r6;


typedef enum enumNhuMBMS_TCTF_Presence
{
 NhuMBMS_TCTF_PresencefalseEnum
} EnumNhuMBMS_TCTF_Presence;
typedef TknU32 NhuMBMS_TCTF_Presence;


typedef TknU32 NhuMBMS_MCCH_CfgInfo_r6accessInfoPeriodCoefficient;


typedef TknU32 NhuMBMS_MCCH_CfgInfo_r6repetitionPeriodCoefficient;


typedef TknU32 NhuMBMS_MCCH_CfgInfo_r6modificationPeriodCoefficient;

typedef struct NhuMBMS_MCCH_CfgInfo_r6
{
 TknPres pres;
 NhuMBMS_MCCH_CfgInfo_r6accessInfoPeriodCoefficient accessInfoPeriodCoefficient;
 NhuMBMS_MCCH_CfgInfo_r6repetitionPeriodCoefficient repetitionPeriodCoefficient;
 NhuMBMS_MCCH_CfgInfo_r6modificationPeriodCoefficient modificationPeriodCoefficient;
 NhuRLC_Info_MCCH_r6 rlc_Info;
 NhuMBMS_TCTF_Presence tctf_Presence;
} NhuMBMS_MCCH_CfgInfo_r6;

typedef struct NhuMBMS_FACHCarryingMTCH_Lst
{
 TknU16 noComp;
 NhuTportFormatSet *member;
}NhuMBMS_FACHCarryingMTCH_Lst;


typedef TknU32 NhuMBMS_MSCHSchedulingInfoschedulingPeriod_32_Offset;


typedef TknU32 NhuMBMS_MSCHSchedulingInfoschedulingPeriod_64_Offset;


typedef TknU32 NhuMBMS_MSCHSchedulingInfoschedulingPeriod_128_Offset;


typedef TknU32 NhuMBMS_MSCHSchedulingInfoschedulingPeriod_256_Offset;


typedef TknU32 NhuMBMS_MSCHSchedulingInfoschedulingPeriod_512_Offset;


typedef TknU32 NhuMBMS_MSCHSchedulingInfoschedulingPeriod_1024_Offset;

typedef struct NhuMBMS_MSCHSchedulingInfo
{
 TknU8 choice;
 union {
  NhuMBMS_MSCHSchedulingInfoschedulingPeriod_32_Offset schedulingPeriod_32_Offset;
  NhuMBMS_MSCHSchedulingInfoschedulingPeriod_64_Offset schedulingPeriod_64_Offset;
  NhuMBMS_MSCHSchedulingInfoschedulingPeriod_128_Offset schedulingPeriod_128_Offset;
  NhuMBMS_MSCHSchedulingInfoschedulingPeriod_256_Offset schedulingPeriod_256_Offset;
  NhuMBMS_MSCHSchedulingInfoschedulingPeriod_512_Offset schedulingPeriod_512_Offset;
  NhuMBMS_MSCHSchedulingInfoschedulingPeriod_1024_Offset schedulingPeriod_1024_Offset;
 } val;
} NhuMBMS_MSCHSchedulingInfo;

typedef struct NhuMBMS_MSCH_CfgInfo_r6
{
 TknPres pres;
 NhuMBMS_MSCHSchedulingInfo mschShedulingInfo;
 NhuRLC_Info_MSCH_r6 rlc_Info;
 NhuMBMS_TCTF_Presence tctf_Presence;
} NhuMBMS_MSCH_CfgInfo_r6;

typedef struct NhuSCCPCH_SysInfo_MBMS_r6fachCarryingMCCH
{
 TknPres pres;
 NhuTportFormatSet mcch_transportFormatSet;
 NhuMBMS_MCCH_CfgInfo_r6 mcch_CfgInfo;
} NhuSCCPCH_SysInfo_MBMS_r6fachCarryingMCCH;

typedef struct NhuSCCPCH_SysInfo_MBMS_r6fachCarryingMSCH
{
 TknPres pres;
 NhuTportFormatSet msch_transportFormatSet;
 NhuMBMS_MSCH_CfgInfo_r6 dummy;
} NhuSCCPCH_SysInfo_MBMS_r6fachCarryingMSCH;

typedef struct NhuSCCPCH_SysInfo_MBMS_r6
{
 TknPres pres;
 NhuSecondaryCCPCHInfo_MBMS_r6 secondaryCCPCHInfo_MBMS;
 NhuTFCS transportFormatCombinationSet;
 NhuSCCPCH_SysInfo_MBMS_r6fachCarryingMCCH fachCarryingMCCH;
 NhuMBMS_FACHCarryingMTCH_Lst fachCarryingMTCH_Lst;
 NhuSCCPCH_SysInfo_MBMS_r6fachCarryingMSCH fachCarryingMSCH;
} NhuSCCPCH_SysInfo_MBMS_r6;


typedef enum enumNhuTimeSlotLCR_ext
{
 NhuTimeSlotLCR_extts7Enum,
 NhuTimeSlotLCR_extspare3Enum,
 NhuTimeSlotLCR_extspare2Enum,
 NhuTimeSlotLCR_extspare1Enum
} EnumNhuTimeSlotLCR_ext;
typedef TknU32 NhuTimeSlotLCR_ext;


typedef TknU8 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofddsttd_Indicator;


typedef TknS32 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofddmodulationmod16QAM;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofddmodulation
{
 TknU8 choice;
 union {
  NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofddmodulationmod16QAM mod16QAM;
 } val;
} NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofddmodulation;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofdd
{
 TknPres pres;
 NhuSecondaryScramblingCode secondaryScramblingCode;
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofddsttd_Indicator sttd_Indicator;
 NhuSF256_AndCodeNumber sf_AndCodeNumber;
 NhuTimingOffset timingOffset;
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofddmodulation modulation;
} NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofdd;


typedef enum enumNhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd384modulation
{
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd384modulationmodQPSKEnum,
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd384modulationmod16QAMEnum
} EnumNhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd384modulation;
typedef TknU32 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd384modulation;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd384
{
 TknPres pres;
 NhuCmnTimeslotInfoMBMS commonTimeslotInfoMBMS;
 NhuDlnkTimeslotsCodes_r7 downlinkTimeslotsCodes;
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd384modulation modulation;
} NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd384;


typedef enum enumNhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd768modulation
{
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd768modulationmodQPSKEnum,
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd768modulationmod16QAMEnum
} EnumNhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd768modulation;
typedef TknU32 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd768modulation;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd768
{
 TknPres pres;
 NhuCmnTimeslotInfoMBMS commonTimeslotInfoMBMS;
 NhuDlnkTimeslotsCodes_VHCR downlinkTimeslotsCodes;
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd768modulation modulation;
} NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd768;


typedef enum enumNhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd128modulation
{
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd128modulationmodQPSKEnum,
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd128modulationmod16QAMEnum
} EnumNhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd128modulation;
typedef TknU32 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd128modulation;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd128
{
 TknPres pres;
 NhuCmnTimeslotInfoMBMS commonTimeslotInfoMBMS;
 NhuDlnkTimeslotsCodes_LCR_r4 downlinkTimeslotsCodes;
 NhuTimeSlotLCR_ext mbsfnSpecialTimeSlot;
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd128modulation modulation;
} NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd128;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfofdd fdd;
  NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd384 tdd384;
  NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd768 tdd768;
  NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfotdd128 tdd128;
 } val;
} NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfo;

typedef struct NhuSecondaryCCPCHInfo_MBMS_r7
{
 TknPres pres;
 NhuSecondaryCCPCHInfo_MBMS_r7modeSpecificInfo modeSpecificInfo;
} NhuSecondaryCCPCHInfo_MBMS_r7;

typedef struct NhuSCCPCH_SysInfo_MBMS_r7fachCarryingMCCH
{
 TknPres pres;
 NhuTportFormatSet mcch_transportFormatSet;
 NhuMBMS_MCCH_CfgInfo_r6 mcch_CfgInfo;
} NhuSCCPCH_SysInfo_MBMS_r7fachCarryingMCCH;

typedef struct NhuSCCPCH_SysInfo_MBMS_r7fachCarryingMSCH
{
 TknPres pres;
 NhuTportFormatSet msch_transportFormatSet;
} NhuSCCPCH_SysInfo_MBMS_r7fachCarryingMSCH;

typedef struct NhuSCCPCH_SysInfo_MBMS_r7
{
 TknPres pres;
 NhuSecondaryCCPCHInfo_MBMS_r7 secondaryCCPCHInfo_MBMS;
 NhuTFCS transportFormatCombinationSet;
 NhuSCCPCH_SysInfo_MBMS_r7fachCarryingMCCH fachCarryingMCCH;
 NhuMBMS_FACHCarryingMTCH_Lst fachCarryingMTCH_Lst;
 NhuSCCPCH_SysInfo_MBMS_r7fachCarryingMSCH fachCarryingMSCH;
} NhuSCCPCH_SysInfo_MBMS_r7;


typedef TknU8 NhuSecondaryCCPCH_Info_r4modeSpecificInfofddsttd_Indicator;


typedef TknU8 NhuSecondaryCCPCH_Info_r4modeSpecificInfofddpilotSymbolExistence;


typedef TknU8 NhuSecondaryCCPCH_Info_r4modeSpecificInfofddtfci_Existence;

typedef struct NhuSecondaryCCPCH_Info_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuSecondaryScramblingCode secondaryScramblingCode;
 NhuSecondaryCCPCH_Info_r4modeSpecificInfofddsttd_Indicator sttd_Indicator;
 NhuSF256_AndCodeNumber sf_AndCodeNumber;
 NhuSecondaryCCPCH_Info_r4modeSpecificInfofddpilotSymbolExistence pilotSymbolExistence;
 NhuSecondaryCCPCH_Info_r4modeSpecificInfofddtfci_Existence tfci_Existence;
 NhuPositionFixedOrFlexible positionFixedOrFlexible;
 NhuTimingOffset timingOffset;
} NhuSecondaryCCPCH_Info_r4modeSpecificInfofdd;

typedef struct NhuSecondaryCCPCH_Info_r4modeSpecificInfotddtddOptiontdd384
{
 TknPres pres;
 NhuIvdualTimeslotInfo individualTimeslotInfo;
} NhuSecondaryCCPCH_Info_r4modeSpecificInfotddtddOptiontdd384;

typedef struct NhuSecondaryCCPCH_Info_r4modeSpecificInfotddtddOptiontdd128
{
 TknPres pres;
 NhuIvdualTimeslotInfo_LCR_r4 individualTimeslotInfo;
} NhuSecondaryCCPCH_Info_r4modeSpecificInfotddtddOptiontdd128;

typedef struct NhuSecondaryCCPCH_Info_r4modeSpecificInfotddtddOption
{
 TknU8 choice;
 union {
  NhuSecondaryCCPCH_Info_r4modeSpecificInfotddtddOptiontdd384 tdd384;
  NhuSecondaryCCPCH_Info_r4modeSpecificInfotddtddOptiontdd128 tdd128;
 } val;
} NhuSecondaryCCPCH_Info_r4modeSpecificInfotddtddOption;

typedef struct NhuSecondaryCCPCH_Info_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuCmnTimeslotInfoSCCPCH commonTimeslotInfo;
 NhuSecondaryCCPCH_Info_r4modeSpecificInfotddtddOption tddOption;
 NhuSCCPCH_ChannelisationCodeLst channelisationCode;
} NhuSecondaryCCPCH_Info_r4modeSpecificInfotdd;

typedef struct NhuSecondaryCCPCH_Info_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuSecondaryCCPCH_Info_r4modeSpecificInfofdd fdd;
  NhuSecondaryCCPCH_Info_r4modeSpecificInfotdd tdd;
 } val;
} NhuSecondaryCCPCH_Info_r4modeSpecificInfo;

typedef struct NhuSecondaryCCPCH_Info_r4
{
 TknPres pres;
 NhuSecondaryCCPCH_Info_r4modeSpecificInfo modeSpecificInfo;
} NhuSecondaryCCPCH_Info_r4;


typedef TknU32 NhuSecondaryCCPCHFrameTyp2InfosubFrameNumber;


typedef TknS32 NhuSecondaryCCPCHFrameTyp2Infomodulationmod16QAMcpich_SecCCPCH_PowerOffset;

typedef struct NhuSecondaryCCPCHFrameTyp2Infomodulationmod16QAM
{
 TknPres pres;
 NhuSecondaryCCPCHFrameTyp2Infomodulationmod16QAMcpich_SecCCPCH_PowerOffset cpich_SecCCPCH_PowerOffset;
} NhuSecondaryCCPCHFrameTyp2Infomodulationmod16QAM;

typedef struct NhuSecondaryCCPCHFrameTyp2Infomodulation
{
 TknU8 choice;
 union {
  NhuSecondaryCCPCHFrameTyp2Infomodulationmod16QAM mod16QAM;
 } val;
} NhuSecondaryCCPCHFrameTyp2Infomodulation;

typedef struct NhuSecondaryCCPCHFrameTyp2Info
{
 TknPres pres;
 NhuSecondaryCCPCHFrameTyp2InfosubFrameNumber subFrameNumber;
 NhuDL_ChannelCodes_MBSFN_IMB384 dl_ChannelisationCodes;
 NhuSecondaryCCPCHFrameTyp2Infomodulation modulation;
} NhuSecondaryCCPCHFrameTyp2Info;


typedef TknU8 NhuSecondaryCCPCHInfoDiff_MBMSsttd_Indicator;

typedef struct NhuSecondaryCCPCHInfoDiff_MBMS
{
 TknPres pres;
 NhuSecondaryScramblingCode secondaryScramblingCode;
 NhuSecondaryCCPCHInfoDiff_MBMSsttd_Indicator sttd_Indicator;
 NhuSF256_AndCodeNumber sf_AndCodeNumber;
 NhuTimingOffset timingOffset;
} NhuSecondaryCCPCHInfoDiff_MBMS;


typedef enum enumNhuSecondaryCellMIMOparametersFDD_v950extprecodingWeightSetRestrn
{
 NhuSecondaryCellMIMOparametersFDD_v950extprecodingWeightSetRestrntrueEnum
} EnumNhuSecondaryCellMIMOparametersFDD_v950extprecodingWeightSetRestrn;
typedef TknU32 NhuSecondaryCellMIMOparametersFDD_v950extprecodingWeightSetRestrn;

typedef struct NhuSecondaryCellMIMOparametersFDD_v950ext
{
 TknPres pres;
 NhuSecondaryCellMIMOparametersFDD_v950extprecodingWeightSetRestrn precodingWeightSetRestrn;
} NhuSecondaryCellMIMOparametersFDD_v950ext;


typedef TknU8 NhuServingCellChangeMACreset;


typedef enum enumNhuServingCellChangeMsgTyp
{
 NhuServingCellChangeMsgTypradioBrSetupEnum,
 NhuServingCellChangeMsgTypradioBrRecfgnEnum,
 NhuServingCellChangeMsgTyptransportChannelRecfgnEnum,
 NhuServingCellChangeMsgTypphysicalChannelRecfgnEnum
} EnumNhuServingCellChangeMsgTyp;
typedef TknU32 NhuServingCellChangeMsgTyp;


typedef TknU32 NhuServingCellChangeTrId;

typedef struct NhuServingCellChangeParams
{
 TknPres pres;
 NhuServingCellChangeMACreset servingCellChangeMACreset;
 NhuServingCellChangeMsgTyp servingCellChangeMsgTyp;
 NhuServingCellChangeTrId servingCellChangeTrId;
} NhuServingCellChangeParams;


typedef TknU32 NhuSpecialBurstScheduling;


typedef enum enumNhuSpreadingFactor
{
 NhuSpreadingFactorsf4Enum,
 NhuSpreadingFactorsf8Enum,
 NhuSpreadingFactorsf16Enum,
 NhuSpreadingFactorsf32Enum,
 NhuSpreadingFactorsf64Enum,
 NhuSpreadingFactorsf128Enum,
 NhuSpreadingFactorsf256Enum
} EnumNhuSpreadingFactor;
typedef TknU32 NhuSpreadingFactor;


typedef enum enumNhuSYNC_UL_Procedure_r4max_SYNC_UL_Transmissions
{
 NhuSYNC_UL_Procedure_r4max_SYNC_UL_Transmissionstr1Enum,
 NhuSYNC_UL_Procedure_r4max_SYNC_UL_Transmissionstr2Enum,
 NhuSYNC_UL_Procedure_r4max_SYNC_UL_Transmissionstr4Enum,
 NhuSYNC_UL_Procedure_r4max_SYNC_UL_Transmissionstr8Enum
} EnumNhuSYNC_UL_Procedure_r4max_SYNC_UL_Transmissions;
typedef TknU32 NhuSYNC_UL_Procedure_r4max_SYNC_UL_Transmissions;


typedef TknU32 NhuSYNC_UL_Procedure_r4powerRampStep;

typedef struct NhuSYNC_UL_Procedure_r4
{
 TknPres pres;
 NhuSYNC_UL_Procedure_r4max_SYNC_UL_Transmissions max_SYNC_UL_Transmissions;
 NhuSYNC_UL_Procedure_r4powerRampStep powerRampStep;
} NhuSYNC_UL_Procedure_r4;


typedef TknStrBSXL NhuSynchronisationParams_r4sync_UL_CodesBitmap;

typedef TknU32 NhuSynchronisationParams_r4prxUpPCHdes;

typedef struct NhuSynchronisationParams_r4
{
 TknPres pres;
 NhuSynchronisationParams_r4sync_UL_CodesBitmap sync_UL_CodesBitmap;
 NhuFPACH_Info_r4 fpach_Info;
 NhuSynchronisationParams_r4prxUpPCHdes prxUpPCHdes;
 NhuSYNC_UL_Procedure_r4 sync_UL_Procedure;
} NhuSynchronisationParams_r4;

typedef struct NhuTDD_MBSFNTSlotInfo
{
 TknPres pres;
 NhuTimeslotNumber timeSlotNumber;
 NhuCellParamsID cellParamsID;
} NhuTDD_MBSFNTSlotInfo;

typedef struct NhuTDD_MBSFNInfo
{
 TknU16 noComp;
 NhuTDD_MBSFNTSlotInfo *member;
}NhuTDD_MBSFNInfo;


typedef enum enumNhuTFC_CntrlDuration
{
 NhuTFC_CntrlDurationtfc_cd1Enum,
 NhuTFC_CntrlDurationtfc_cd2Enum,
 NhuTFC_CntrlDurationtfc_cd4Enum,
 NhuTFC_CntrlDurationtfc_cd8Enum,
 NhuTFC_CntrlDurationtfc_cd16Enum,
 NhuTFC_CntrlDurationtfc_cd24Enum,
 NhuTFC_CntrlDurationtfc_cd32Enum,
 NhuTFC_CntrlDurationtfc_cd48Enum,
 NhuTFC_CntrlDurationtfc_cd64Enum,
 NhuTFC_CntrlDurationtfc_cd128Enum,
 NhuTFC_CntrlDurationtfc_cd192Enum,
 NhuTFC_CntrlDurationtfc_cd256Enum,
 NhuTFC_CntrlDurationtfc_cd512Enum
} EnumNhuTFC_CntrlDuration;
typedef TknU32 NhuTFC_CntrlDuration;

typedef struct NhuTimeslotLst
{
 TknU16 noComp;
 NhuTimeslotNumber *member;
}NhuTimeslotLst;

typedef struct NhuTimeslotLst_r4tdd384
{
 TknU16 noComp;
 NhuTimeslotNumber *member;
}NhuTimeslotLst_r4tdd384;

typedef struct NhuTimeslotLst_r4tdd128
{
 TknU16 noComp;
 NhuTimeslotNumber_LCR_r4 *member;
}NhuTimeslotLst_r4tdd128;

typedef struct NhuTimeslotLst_r4
{
 TknU8 choice;
 union {
  NhuTimeslotLst_r4tdd384 tdd384;
  NhuTimeslotLst_r4tdd128 tdd128;
 } val;
} NhuTimeslotLst_r4;

typedef struct NhuDTX_DRX_TimingInfo_r7timing
{
 TknU8 choice;
 union {
  NhuNewTiming newTiming;
 } val;
} NhuDTX_DRX_TimingInfo_r7timing;

typedef struct NhuDTX_DRX_TimingInfo_r7
{
 TknPres pres;
 NhuDTX_DRX_TimingInfo_r7timing timing;
} NhuDTX_DRX_TimingInfo_r7;


typedef TknU32 NhuUL_16QAM_Settingsbeta_Ed_Gain_E_AGCH_Table_Selection;

typedef struct NhuUL_16QAM_Settings
{
 TknPres pres;
 NhuUL_16QAM_Settingsbeta_Ed_Gain_E_AGCH_Table_Selection beta_Ed_Gain_E_AGCH_Table_Selection;
} NhuUL_16QAM_Settings;


typedef enum enumNhuUL_16QAM_Configmac_es_e_resetIndicator
{
 NhuUL_16QAM_Configmac_es_e_resetIndicatortrueEnum
} EnumNhuUL_16QAM_Configmac_es_e_resetIndicator;
typedef TknU32 NhuUL_16QAM_Configmac_es_e_resetIndicator;

typedef struct NhuUL_16QAM_Config
{
 TknPres pres;
 NhuUL_16QAM_Settings ul_16QAM_Settings;
 NhuE_TFCI_TableIdx e_TFCI_TableIdx;
 NhuUL_16QAM_Configmac_es_e_resetIndicator mac_es_e_resetIndicator;
} NhuUL_16QAM_Config;

typedef struct NhuUL_CCTrCH
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuTimeInfo timeInfo;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuUlnkTimeslotsCodes ul_CCTrCH_TimeslotsCodes;
} NhuUL_CCTrCH;

typedef struct NhuUL_CCTrCH_r4tddOptiontdd384
{
 TknPres pres;
 NhuUlnkTimeslotsCodes ul_CCTrCH_TimeslotsCodes;
} NhuUL_CCTrCH_r4tddOptiontdd384;

typedef struct NhuUL_CCTrCH_r4tddOptiontdd128
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_LCR_r4 ul_CCTrCH_TimeslotsCodes;
} NhuUL_CCTrCH_r4tddOptiontdd128;

typedef struct NhuUL_CCTrCH_r4tddOption
{
 TknU8 choice;
 union {
  NhuUL_CCTrCH_r4tddOptiontdd384 tdd384;
  NhuUL_CCTrCH_r4tddOptiontdd128 tdd128;
 } val;
} NhuUL_CCTrCH_r4tddOption;

typedef struct NhuUL_CCTrCH_r4
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuTimeInfo timeInfo;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuUL_CCTrCH_r4tddOption tddOption;
} NhuUL_CCTrCH_r4;

typedef struct NhuUL_TS_ChannelisationCodeLst_r7Member
{
 TknPres pres;
 NhuUL_TS_ChannelisationCode ul_TS_Channelisation_Code;
 NhuPLCCH_Info plcch_info;
} NhuUL_TS_ChannelisationCodeLst_r7Member;

typedef struct NhuUL_TS_ChannelisationCodeLst_r7
{
 TknU16 noComp;
 NhuUL_TS_ChannelisationCodeLst_r7Member *member;
}NhuUL_TS_ChannelisationCodeLst_r7;

typedef struct NhuUlnkAdditionalTimeslots_LCR_r7parameterssameAsLast
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
} NhuUlnkAdditionalTimeslots_LCR_r7parameterssameAsLast;

typedef struct NhuUlnkAdditionalTimeslots_LCR_r7parametersnewParams
{
 TknPres pres;
 NhuIvdualTimeslotInfo_LCR_r4 individualTimeslotInfo;
 NhuUL_TS_ChannelisationCodeLst_r7 ul_TS_ChannelisationCodeLst;
} NhuUlnkAdditionalTimeslots_LCR_r7parametersnewParams;

typedef struct NhuUlnkAdditionalTimeslots_LCR_r7parameters
{
 TknU8 choice;
 union {
  NhuUlnkAdditionalTimeslots_LCR_r7parameterssameAsLast sameAsLast;
  NhuUlnkAdditionalTimeslots_LCR_r7parametersnewParams newParams;
 } val;
} NhuUlnkAdditionalTimeslots_LCR_r7parameters;

typedef struct NhuUlnkAdditionalTimeslots_LCR_r7
{
 TknPres pres;
 NhuUlnkAdditionalTimeslots_LCR_r7parameters parameters;
} NhuUlnkAdditionalTimeslots_LCR_r7;


typedef TknU8 NhuUlnkTimeslotsCodes_LCR_r7dynamicSFusage;


typedef TknU32 NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslotsconsecutivenumAdditionalTimeslots;

typedef struct NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslotsconsecutive
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslotsconsecutivenumAdditionalTimeslots numAdditionalTimeslots;
} NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslotsconsecutive;

typedef struct NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslotstimeslotLst
{
 TknU16 noComp;
 NhuUlnkAdditionalTimeslots_LCR_r7 *member;
}NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslotstimeslotLst;

typedef struct NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslots
{
 TknU8 choice;
 union {
  NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslotsconsecutive consecutive;
  NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslotstimeslotLst timeslotLst;
 } val;
} NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslots;

typedef struct NhuUlnkTimeslotsCodes_LCR_r7moreTimeslots
{
 TknU8 choice;
 union {
  NhuUlnkTimeslotsCodes_LCR_r7moreTimeslotsadditionalTimeslots additionalTimeslots;
 } val;
} NhuUlnkTimeslotsCodes_LCR_r7moreTimeslots;

typedef struct NhuUlnkTimeslotsCodes_LCR_r7
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_LCR_r7dynamicSFusage dynamicSFusage;
 NhuIvdualTimeslotInfo_LCR_r4 firstIvdualTimeslotInfo;
 NhuUL_TS_ChannelisationCodeLst_r7 ul_TS_ChannelisationCodeLst;
 NhuUlnkTimeslotsCodes_LCR_r7moreTimeslots moreTimeslots;
} NhuUlnkTimeslotsCodes_LCR_r7;

typedef struct NhuUL_CCTrCH_r7tddOptiontdd384
{
 TknPres pres;
 NhuUlnkTimeslotsCodes ul_CCTrCH_TimeslotsCodes;
} NhuUL_CCTrCH_r7tddOptiontdd384;

typedef struct NhuUL_CCTrCH_r7tddOptiontdd768
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_VHCR ul_CCTrCH_TimeslotsCodes;
} NhuUL_CCTrCH_r7tddOptiontdd768;

typedef struct NhuUL_CCTrCH_r7tddOptiontdd128
{
 TknPres pres;
 NhuUlnkTimeslotsCodes_LCR_r7 ul_CCTrCH_TimeslotsCodes;
} NhuUL_CCTrCH_r7tddOptiontdd128;

typedef struct NhuUL_CCTrCH_r7tddOption
{
 TknU8 choice;
 union {
  NhuUL_CCTrCH_r7tddOptiontdd384 tdd384;
  NhuUL_CCTrCH_r7tddOptiontdd768 tdd768;
  NhuUL_CCTrCH_r7tddOptiontdd128 tdd128;
 } val;
} NhuUL_CCTrCH_r7tddOption;

typedef struct NhuUL_CCTrCH_r7
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuTimeInfo timeInfo;
 NhuCmnTimeslotInfo commonTimeslotInfo;
 NhuUL_CCTrCH_r7tddOption tddOption;
} NhuUL_CCTrCH_r7;

typedef struct NhuUL_CCTrCHLst
{
 TknU16 noComp;
 NhuUL_CCTrCH *member;
}NhuUL_CCTrCHLst;

typedef struct NhuUL_CCTrCHLst_r4
{
 TknU16 noComp;
 NhuUL_CCTrCH_r4 *member;
}NhuUL_CCTrCHLst_r4;

typedef struct NhuUL_CCTrCHLst_r7
{
 TknU16 noComp;
 NhuUL_CCTrCH_r7 *member;
}NhuUL_CCTrCHLst_r7;

typedef struct NhuUL_CCTrCHLstToRemove
{
 TknU16 noComp;
 NhuTFCS_IdentityPlain *member;
}NhuUL_CCTrCHLstToRemove;


typedef TknU32 NhuUL_TimingAdvance;

typedef struct NhuUL_TimingAdvanceCntrlenabled
{
 TknPres pres;
 NhuUL_TimingAdvance ul_TimingAdvance;
 NhuActvnTime activationTime;
} NhuUL_TimingAdvanceCntrlenabled;

typedef struct NhuUL_TimingAdvanceCntrl
{
 TknU8 choice;
 union {
  NhuUL_TimingAdvanceCntrlenabled enabled;
 } val;
} NhuUL_TimingAdvanceCntrl;


typedef TknU8 NhuUL_DPCH_InfomodeSpecificInfofddtfci_Existence;

typedef struct NhuUL_DPCH_InfomodeSpecificInfofdd
{
 TknPres pres;
 NhuScramblingCodeTyp scramblingCodeTyp;
 NhuUL_ScramblingCode scramblingCode;
 NhuNumberOfDPDCH numberOfDPDCH;
 NhuSpreadingFactor spreadingFactor;
 NhuUL_DPCH_InfomodeSpecificInfofddtfci_Existence tfci_Existence;
 NhuNumberOfFBI_Bits numberOfFBI_Bits;
 NhuPuncturingLimit puncturingLimit;
} NhuUL_DPCH_InfomodeSpecificInfofdd;

typedef struct NhuUL_DPCH_InfomodeSpecificInfotdd
{
 TknPres pres;
 NhuUL_TimingAdvanceCntrl ul_TimingAdvance;
 NhuUL_CCTrCHLst ul_CCTrCHLst;
 NhuUL_CCTrCHLstToRemove ul_CCTrCHLstToRemove;
} NhuUL_DPCH_InfomodeSpecificInfotdd;

typedef struct NhuUL_DPCH_InfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_DPCH_InfomodeSpecificInfofdd fdd;
  NhuUL_DPCH_InfomodeSpecificInfotdd tdd;
 } val;
} NhuUL_DPCH_InfomodeSpecificInfo;

typedef struct NhuUL_DPCH_Info
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfo ul_DPCH_PowerCntrlInfo;
 NhuUL_DPCH_InfomodeSpecificInfo modeSpecificInfo;
} NhuUL_DPCH_Info;

typedef struct NhuUL_ChannelRequirement
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info ul_DPCH_Info;
  NhuCPCH_SetInfo dummy;
 } val;
} NhuUL_ChannelRequirement;


typedef TknU32 NhuUL_SynchronisationParams_r4stepSize;


typedef TknU32 NhuUL_SynchronisationParams_r4frequency;

typedef struct NhuUL_SynchronisationParams_r4
{
 TknPres pres;
 NhuUL_SynchronisationParams_r4stepSize stepSize;
 NhuUL_SynchronisationParams_r4frequency frequency;
} NhuUL_SynchronisationParams_r4;

typedef struct NhuUL_TimingAdvanceCntrl_r4enabledtddOptiontdd384
{
 TknPres pres;
 NhuUL_TimingAdvance ul_TimingAdvance;
 NhuActvnTime activationTime;
} NhuUL_TimingAdvanceCntrl_r4enabledtddOptiontdd384;

typedef struct NhuUL_TimingAdvanceCntrl_r4enabledtddOptiontdd128
{
 TknPres pres;
 NhuUL_SynchronisationParams_r4 ul_SynchronisationParams;
 NhuSynchronisationParams_r4 synchronisationParams;
} NhuUL_TimingAdvanceCntrl_r4enabledtddOptiontdd128;

typedef struct NhuUL_TimingAdvanceCntrl_r4enabledtddOption
{
 TknU8 choice;
 union {
  NhuUL_TimingAdvanceCntrl_r4enabledtddOptiontdd384 tdd384;
  NhuUL_TimingAdvanceCntrl_r4enabledtddOptiontdd128 tdd128;
 } val;
} NhuUL_TimingAdvanceCntrl_r4enabledtddOption;

typedef struct NhuUL_TimingAdvanceCntrl_r4enabled
{
 TknPres pres;
 NhuUL_TimingAdvanceCntrl_r4enabledtddOption tddOption;
} NhuUL_TimingAdvanceCntrl_r4enabled;

typedef struct NhuUL_TimingAdvanceCntrl_r4
{
 TknU8 choice;
 union {
  NhuUL_TimingAdvanceCntrl_r4enabled enabled;
 } val;
} NhuUL_TimingAdvanceCntrl_r4;


typedef TknU8 NhuUL_DPCH_Info_r4modeSpecificInfofddtfci_Existence;

typedef struct NhuUL_DPCH_Info_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuScramblingCodeTyp scramblingCodeTyp;
 NhuUL_ScramblingCode scramblingCode;
 NhuNumberOfDPDCH numberOfDPDCH;
 NhuSpreadingFactor spreadingFactor;
 NhuUL_DPCH_Info_r4modeSpecificInfofddtfci_Existence tfci_Existence;
 NhuNumberOfFBI_Bits numberOfFBI_Bits;
 NhuPuncturingLimit puncturingLimit;
} NhuUL_DPCH_Info_r4modeSpecificInfofdd;

typedef struct NhuUL_DPCH_Info_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuUL_TimingAdvanceCntrl_r4 ul_TimingAdvance;
 NhuUL_CCTrCHLst_r4 ul_CCTrCHLst;
 NhuUL_CCTrCHLstToRemove ul_CCTrCHLstToRemove;
} NhuUL_DPCH_Info_r4modeSpecificInfotdd;

typedef struct NhuUL_DPCH_Info_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r4modeSpecificInfofdd fdd;
  NhuUL_DPCH_Info_r4modeSpecificInfotdd tdd;
 } val;
} NhuUL_DPCH_Info_r4modeSpecificInfo;

typedef struct NhuUL_DPCH_Info_r4
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfo_r4 ul_DPCH_PowerCntrlInfo;
 NhuUL_DPCH_Info_r4modeSpecificInfo modeSpecificInfo;
} NhuUL_DPCH_Info_r4;

typedef struct NhuUL_ChannelRequirement_r4
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r4 ul_DPCH_Info;
  NhuCPCH_SetInfo dummy;
 } val;
} NhuUL_ChannelRequirement_r4;


typedef TknU8 NhuUL_DPCH_Info_r5modeSpecificInfofddtfci_Existence;

typedef struct NhuUL_DPCH_Info_r5modeSpecificInfofdd
{
 TknPres pres;
 NhuScramblingCodeTyp scramblingCodeTyp;
 NhuUL_ScramblingCode scramblingCode;
 NhuNumberOfDPDCH numberOfDPDCH;
 NhuSpreadingFactor spreadingFactor;
 NhuUL_DPCH_Info_r5modeSpecificInfofddtfci_Existence tfci_Existence;
 NhuNumberOfFBI_Bits numberOfFBI_Bits;
 NhuPuncturingLimit puncturingLimit;
} NhuUL_DPCH_Info_r5modeSpecificInfofdd;

typedef struct NhuUL_DPCH_Info_r5modeSpecificInfotdd
{
 TknPres pres;
 NhuUL_TimingAdvanceCntrl_r4 ul_TimingAdvance;
 NhuUL_CCTrCHLst_r4 ul_CCTrCHLst;
 NhuUL_CCTrCHLstToRemove ul_CCTrCHLstToRemove;
} NhuUL_DPCH_Info_r5modeSpecificInfotdd;

typedef struct NhuUL_DPCH_Info_r5modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r5modeSpecificInfofdd fdd;
  NhuUL_DPCH_Info_r5modeSpecificInfotdd tdd;
 } val;
} NhuUL_DPCH_Info_r5modeSpecificInfo;

typedef struct NhuUL_DPCH_Info_r5
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfo_r5 ul_DPCH_PowerCntrlInfo;
 NhuUL_DPCH_Info_r5modeSpecificInfo modeSpecificInfo;
} NhuUL_DPCH_Info_r5;

typedef struct NhuUL_ChannelRequirement_r5
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r5 ul_DPCH_Info;
  NhuCPCH_SetInfo dummy;
 } val;
} NhuUL_ChannelRequirement_r5;

typedef struct NhuUL_ChannelRequirementWithCPCH_SetID
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info ul_DPCH_Info;
  NhuCPCH_SetInfo dummy1;
  NhuCPCH_SetID dummy2;
 } val;
} NhuUL_ChannelRequirementWithCPCH_SetID;

typedef struct NhuUL_ChannelRequirementWithCPCH_SetID_r4
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r4 ul_DPCH_Info;
  NhuCPCH_SetInfo dummy1;
  NhuCPCH_SetID dummy2;
 } val;
} NhuUL_ChannelRequirementWithCPCH_SetID_r4;

typedef struct NhuUL_ChannelRequirementWithCPCH_SetID_r5
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r5 ul_DPCH_Info;
  NhuCPCH_SetInfo dummy1;
  NhuCPCH_SetID dummy2;
 } val;
} NhuUL_ChannelRequirementWithCPCH_SetID_r5;


typedef TknU32 NhuS_DPCCH_DPCCH_PowerOffset;

typedef struct NhuS_DPCCH_Info
{
 TknPres pres;
 NhuS_DPCCH_DPCCH_PowerOffset s_DPCCH_DPCCH_PowerOffset;
} NhuS_DPCCH_Info;


typedef enum enumNhuUL_CLTD_InfoFDDconfigurationInfonewCfginitial_CLTD_ActvnState
{
 NhuUL_CLTD_InfoFDDconfigurationInfonewCfginitial_CLTD_ActvnStatefirst_stateEnum,
 NhuUL_CLTD_InfoFDDconfigurationInfonewCfginitial_CLTD_ActvnStatefourth_stateEnum
} EnumNhuUL_CLTD_InfoFDDconfigurationInfonewCfginitial_CLTD_ActvnState;
typedef TknU32 NhuUL_CLTD_InfoFDDconfigurationInfonewCfginitial_CLTD_ActvnState;

typedef struct NhuUL_CLTD_InfoFDDconfigurationInfonewCfg
{
 TknPres pres;
 NhuS_DPCCH_Info s_dpcch_Info;
 NhuF_TPICH_Info f_tpich_Info;
 NhuUL_CLTD_InfoFDDconfigurationInfonewCfginitial_CLTD_ActvnState initial_CLTD_ActvnState;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUL_CLTD_InfoFDDconfigurationInfonewCfg;

typedef struct NhuUL_CLTD_InfoFDDconfigurationInfo
{
 TknU8 choice;
 union {
  NhuUL_CLTD_InfoFDDconfigurationInfonewCfg newCfg;
 } val;
} NhuUL_CLTD_InfoFDDconfigurationInfo;

typedef struct NhuUL_CLTD_InfoFDD
{
 TknU8 choice;
 union {
  NhuUL_CLTD_InfoFDDconfigurationInfo configurationInfo;
 } val;
} NhuUL_CLTD_InfoFDD;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r6fdd
{
 TknPres pres;
 NhuDPCCH_PowerOffset dpcch_PowerOffset;
 NhuPC_Preamble pc_Preamble;
 NhuSRB_delay sRB_delay;
 NhuPowerCntrlAlgorithm powerCntrlAlgorithm;
 NhuDeltaACK deltaACK;
 NhuDeltaNACK deltaNACK;
 NhuACK_NACK_repetitionFactor ack_NACK_repetition_factor;
 NhuHARQ_Preamble_Mode harq_Preamble_Mode;
} NhuUL_DPCH_PowerCntrlInfo_r6fdd;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384
{
 TknPres pres;
 NhuIvdualTS_InterferenceLst individualTS_InterferenceLst;
 NhuConstantValue dpch_ConstantValue;
} NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128
{
 TknPres pres;
 NhuBEACON_PL_Est beaconPLEst;
 NhuTPC_StepSizeTDD tpc_StepSize;
} NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalledtddOption
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd384 tdd384;
  NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalledtddOptiontdd128 tdd128;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalledtddOption;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalled
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalledtddOption tddOption;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
} NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalled;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_Signalling
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_SignallingindividuallySignalled individuallySignalled;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_Signalling;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r6tdd
{
 TknPres pres;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuUL_DPCH_PowerCntrlInfo_r6tddul_OL_PC_Signalling ul_OL_PC_Signalling;
} NhuUL_DPCH_PowerCntrlInfo_r6tdd;

typedef struct NhuUL_DPCH_PowerCntrlInfo_r6
{
 TknU8 choice;
 union {
  NhuUL_DPCH_PowerCntrlInfo_r6fdd fdd;
  NhuUL_DPCH_PowerCntrlInfo_r6tdd tdd;
 } val;
} NhuUL_DPCH_PowerCntrlInfo_r6;


typedef TknU8 NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencepresenttfci_Existence;

typedef struct NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencepresent
{
 TknPres pres;
 NhuNumberOfDPDCH numberOfDPDCH;
 NhuSpreadingFactor spreadingFactor;
 NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencepresenttfci_Existence tfci_Existence;
 NhuNumberOfFBI_Bits numberOfFBI_Bits;
 NhuPuncturingLimit puncturingLimit;
} NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencepresent;


typedef TknU8 NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencenotPresenttfci_Existence;

typedef struct NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencenotPresent
{
 TknPres pres;
 NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencenotPresenttfci_Existence tfci_Existence;
 NhuNumberOfFBI_Bits numberOfFBI_Bits;
} NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencenotPresent;

typedef struct NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresence
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencepresent present;
  NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresencenotPresent notPresent;
 } val;
} NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresence;

typedef struct NhuUL_DPCH_Info_r6modeSpecificInfofdd
{
 TknPres pres;
 NhuScramblingCodeTyp scramblingCodeTyp;
 NhuUL_ScramblingCode scramblingCode;
 NhuUL_DPCH_Info_r6modeSpecificInfofdddpdchPresence dpdchPresence;
} NhuUL_DPCH_Info_r6modeSpecificInfofdd;

typedef struct NhuUL_DPCH_Info_r6modeSpecificInfotdd
{
 TknPres pres;
 NhuUL_TimingAdvanceCntrl_r4 ul_TimingAdvance;
 NhuUL_CCTrCHLst_r4 ul_CCTrCHLst;
 NhuUL_CCTrCHLstToRemove ul_CCTrCHLstToRemove;
} NhuUL_DPCH_Info_r6modeSpecificInfotdd;

typedef struct NhuUL_DPCH_Info_r6modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r6modeSpecificInfofdd fdd;
  NhuUL_DPCH_Info_r6modeSpecificInfotdd tdd;
 } val;
} NhuUL_DPCH_Info_r6modeSpecificInfo;

typedef struct NhuUL_DPCH_Info_r6
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfo_r6 ul_DPCH_PowerCntrlInfo;
 NhuUL_DPCH_Info_r6modeSpecificInfo modeSpecificInfo;
} NhuUL_DPCH_Info_r6;

typedef struct NhuUL_TimingAdvanceCntrl_r7enabledtddOptiontdd384
{
 TknPres pres;
 NhuUL_TimingAdvance ul_TimingAdvance;
 NhuEXT_UL_TimingAdvance ext_UL_TimingAdvance;
 NhuActvnTime activationTime;
} NhuUL_TimingAdvanceCntrl_r7enabledtddOptiontdd384;

typedef struct NhuUL_TimingAdvanceCntrl_r7enabledtddOptiontdd768
{
 TknPres pres;
 NhuEXT_UL_TimingAdvance ext_UL_TimingAdvance;
 NhuActvnTime activationTime;
} NhuUL_TimingAdvanceCntrl_r7enabledtddOptiontdd768;

typedef struct NhuUL_TimingAdvanceCntrl_r7enabledtddOptiontdd128
{
 TknPres pres;
 NhuUL_SynchronisationParams_r4 ul_SynchronisationParams;
 NhuSynchronisationParams_r4 synchronisationParams;
} NhuUL_TimingAdvanceCntrl_r7enabledtddOptiontdd128;

typedef struct NhuUL_TimingAdvanceCntrl_r7enabledtddOption
{
 TknU8 choice;
 union {
  NhuUL_TimingAdvanceCntrl_r7enabledtddOptiontdd384 tdd384;
  NhuUL_TimingAdvanceCntrl_r7enabledtddOptiontdd768 tdd768;
  NhuUL_TimingAdvanceCntrl_r7enabledtddOptiontdd128 tdd128;
 } val;
} NhuUL_TimingAdvanceCntrl_r7enabledtddOption;

typedef struct NhuUL_TimingAdvanceCntrl_r7enabled
{
 TknPres pres;
 NhuUL_TimingAdvanceCntrl_r7enabledtddOption tddOption;
} NhuUL_TimingAdvanceCntrl_r7enabled;

typedef struct NhuUL_TimingAdvanceCntrl_r7
{
 TknU8 choice;
 union {
  NhuUL_TimingAdvanceCntrl_r7enabled enabled;
 } val;
} NhuUL_TimingAdvanceCntrl_r7;


typedef TknU8 NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencepresenttfci_Existence;

typedef struct NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencepresent
{
 TknPres pres;
 NhuNumberOfDPDCH numberOfDPDCH;
 NhuSpreadingFactor spreadingFactor;
 NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencepresenttfci_Existence tfci_Existence;
 NhuNumberOfFBI_Bits numberOfFBI_Bits;
 NhuNumberOfTPC_Bits numberOfTPC_Bits;
 NhuPuncturingLimit puncturingLimit;
} NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencepresent;


typedef TknU8 NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencenotPresenttfci_Existence;

typedef struct NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencenotPresent
{
 TknPres pres;
 NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencenotPresenttfci_Existence tfci_Existence;
 NhuNumberOfFBI_Bits numberOfFBI_Bits;
 NhuNumberOfTPC_Bits numberOfTPC_Bits;
} NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencenotPresent;

typedef struct NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresence
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencepresent present;
  NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresencenotPresent notPresent;
 } val;
} NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresence;

typedef struct NhuUL_DPCH_Info_r7modeSpecificInfofdd
{
 TknPres pres;
 NhuScramblingCodeTyp scramblingCodeTyp;
 NhuUL_ScramblingCode scramblingCode;
 NhuUL_DPCH_Info_r7modeSpecificInfofdddpdchPresence dpdchPresence;
} NhuUL_DPCH_Info_r7modeSpecificInfofdd;

typedef struct NhuUL_DPCH_Info_r7modeSpecificInfotdd
{
 TknPres pres;
 NhuUL_TimingAdvanceCntrl_r7 ul_TimingAdvance;
 NhuUL_CCTrCHLst_r7 ul_CCTrCHLst;
 NhuUL_CCTrCHLstToRemove ul_CCTrCHLstToRemove;
} NhuUL_DPCH_Info_r7modeSpecificInfotdd;

typedef struct NhuUL_DPCH_Info_r7modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUL_DPCH_Info_r7modeSpecificInfofdd fdd;
  NhuUL_DPCH_Info_r7modeSpecificInfotdd tdd;
 } val;
} NhuUL_DPCH_Info_r7modeSpecificInfo;

typedef struct NhuUL_DPCH_Info_r7
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfo_r7 ul_DPCH_PowerCntrlInfo;
 NhuUL_DPCH_Info_r7modeSpecificInfo modeSpecificInfo;
} NhuUL_DPCH_Info_r7;

typedef struct NhuUL_DPCH_PowerCntrlInfoPostFDD
{
 TknPres pres;
 NhuDPCCH_PowerOffset2 dpcch_PowerOffset;
 NhuPC_Preamble pc_Preamble;
 NhuSRB_delay sRB_delay;
} NhuUL_DPCH_PowerCntrlInfoPostFDD;

typedef struct NhuUL_DPCH_InfoPostFDD
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfoPostFDD ul_DPCH_PowerCntrlInfo;
 NhuScramblingCodeTyp scramblingCodeTyp;
 NhuReducedScramblingCodeNumber reducedScramblingCodeNumber;
 NhuSpreadingFactor spreadingFactor;
} NhuUL_DPCH_InfoPostFDD;

typedef struct NhuUL_DPCH_PowerCntrlInfoPostTDD
{
 TknPres pres;
 NhuUL_TgtSIR ul_TgtSIR;
 NhuTDD_UL_Interference ul_TimeslotInterference;
} NhuUL_DPCH_PowerCntrlInfoPostTDD;

typedef struct NhuUL_DPCH_InfoPostTDD
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfoPostTDD ul_DPCH_PowerCntrlInfo;
 NhuUL_TimingAdvanceCntrl ul_TimingAdvance;
 NhuUlnkTimeslotsCodes ul_CCTrCH_TimeslotsCodes;
} NhuUL_DPCH_InfoPostTDD;

typedef struct NhuUL_DPCH_PowerCntrlInfoPostTDD_LCR_r4
{
 TknPres pres;
 NhuUL_TgtSIR ul_TgtSIR;
} NhuUL_DPCH_PowerCntrlInfoPostTDD_LCR_r4;

typedef struct NhuUL_TimingAdvanceCntrl_LCR_r4enabled
{
 TknPres pres;
 NhuUL_SynchronisationParams_r4 ul_SynchronisationParams;
 NhuSynchronisationParams_r4 synchronisationParams;
} NhuUL_TimingAdvanceCntrl_LCR_r4enabled;

typedef struct NhuUL_TimingAdvanceCntrl_LCR_r4
{
 TknU8 choice;
 union {
  NhuUL_TimingAdvanceCntrl_LCR_r4enabled enabled;
 } val;
} NhuUL_TimingAdvanceCntrl_LCR_r4;

typedef struct NhuUL_DPCH_InfoPostTDD_LCR_r4
{
 TknPres pres;
 NhuUL_DPCH_PowerCntrlInfoPostTDD_LCR_r4 ul_DPCH_PowerCntrlInfo;
 NhuUL_TimingAdvanceCntrl_LCR_r4 ul_TimingAdvance;
 NhuUlnkTimeslotsCodes_LCR_r4 ul_CCTrCH_TimeslotsCodes;
} NhuUL_DPCH_InfoPostTDD_LCR_r4;

typedef struct NhuUL_DPCHpowerCntrlInfoForCmnEDCH
{
 TknPres pres;
 NhuPowerCntrlAlgorithm powerCntrlAlgorithm;
 NhuDeltaACK deltaACK;
 NhuDeltaNACK deltaNACK;
 NhuACK_NACK_repetitionFactor ack_NACK_repetition_factor;
} NhuUL_DPCHpowerCntrlInfoForCmnEDCH;

typedef struct NhuUL_MulticarrierEDCH_Deletelist_TDD128
{
 TknU16 noComp;
 NhuUARFCN *member;
}NhuUL_MulticarrierEDCH_Deletelist_TDD128;


typedef TknS32 NhuUL_Interference;


typedef TknU32 NhuSatID;


typedef enum enumNhuDopplerUncertainty
{
 NhuDopplerUncertaintyhz12_5Enum,
 NhuDopplerUncertaintyhz25Enum,
 NhuDopplerUncertaintyhz50Enum,
 NhuDopplerUncertaintyhz100Enum,
 NhuDopplerUncertaintyhz200Enum,
 NhuDopplerUncertaintyspare3Enum,
 NhuDopplerUncertaintyspare2Enum,
 NhuDopplerUncertaintyspare1Enum
} EnumNhuDopplerUncertainty;
typedef TknU32 NhuDopplerUncertainty;


typedef TknS32 NhuExtraDopplerInfodoppler1stOrder;

typedef struct NhuExtraDopplerInfo
{
 TknPres pres;
 NhuExtraDopplerInfodoppler1stOrder doppler1stOrder;
 NhuDopplerUncertainty dopplerUncertainty;
} NhuExtraDopplerInfo;


typedef enum enumNhuCodePhaseSearchWindow
{
 NhuCodePhaseSearchWindoww1023Enum,
 NhuCodePhaseSearchWindoww1Enum,
 NhuCodePhaseSearchWindoww2Enum,
 NhuCodePhaseSearchWindoww3Enum,
 NhuCodePhaseSearchWindoww4Enum,
 NhuCodePhaseSearchWindoww6Enum,
 NhuCodePhaseSearchWindoww8Enum,
 NhuCodePhaseSearchWindoww12Enum,
 NhuCodePhaseSearchWindoww16Enum,
 NhuCodePhaseSearchWindoww24Enum,
 NhuCodePhaseSearchWindoww32Enum,
 NhuCodePhaseSearchWindoww48Enum,
 NhuCodePhaseSearchWindoww64Enum,
 NhuCodePhaseSearchWindoww96Enum,
 NhuCodePhaseSearchWindoww128Enum,
 NhuCodePhaseSearchWindoww192Enum
} EnumNhuCodePhaseSearchWindow;
typedef TknU32 NhuCodePhaseSearchWindow;


typedef TknU32 NhuAzimuthAndElevationazimuth;


typedef TknU32 NhuAzimuthAndElevationelevation;

typedef struct NhuAzimuthAndElevation
{
 TknPres pres;
 NhuAzimuthAndElevationazimuth azimuth;
 NhuAzimuthAndElevationelevation elevation;
} NhuAzimuthAndElevation;


typedef TknS32 NhuAcquisitionSatInfodoppler0thOrder;


typedef TknU32 NhuAcquisitionSatInfocodePhase;


typedef TknU32 NhuAcquisitionSatInfointegerCodePhase;


typedef TknU32 NhuAcquisitionSatInfogps_BitNumber;

typedef struct NhuAcquisitionSatInfo
{
 TknPres pres;
 NhuSatID satID;
 NhuAcquisitionSatInfodoppler0thOrder doppler0thOrder;
 NhuExtraDopplerInfo extraDopplerInfo;
 NhuAcquisitionSatInfocodePhase codePhase;
 NhuAcquisitionSatInfointegerCodePhase integerCodePhase;
 NhuAcquisitionSatInfogps_BitNumber gps_BitNumber;
 NhuCodePhaseSearchWindow codePhaseSearchWindow;
 NhuAzimuthAndElevation azimuthAndElevation;
} NhuAcquisitionSatInfo;


typedef TknU32 NhuAzimuthAndElevation_va40extazimuthLSB;


typedef TknU32 NhuAzimuthAndElevation_va40extelevationLSB;

typedef struct NhuAzimuthAndElevation_va40ext
{
 TknPres pres;
 NhuAzimuthAndElevation_va40extazimuthLSB azimuthLSB;
 NhuAzimuthAndElevation_va40extelevationLSB elevationLSB;
} NhuAzimuthAndElevation_va40ext;

typedef struct NhuAcquisitionSatInfo_va40ext
{
 TknPres pres;
 NhuAzimuthAndElevation_va40ext azimuthAndElevation;
} NhuAcquisitionSatInfo_va40ext;


typedef TknU32 NhuAzimuthAndElevation_r10azimuth;


typedef TknU32 NhuAzimuthAndElevation_r10elevation;


typedef TknU32 NhuAzimuthAndElevation_r10azimuthLSB;


typedef TknU32 NhuAzimuthAndElevation_r10elevationLSB;

typedef struct NhuAzimuthAndElevation_r10
{
 TknPres pres;
 NhuAzimuthAndElevation_r10azimuth azimuth;
 NhuAzimuthAndElevation_r10elevation elevation;
 NhuAzimuthAndElevation_r10azimuthLSB azimuthLSB;
 NhuAzimuthAndElevation_r10elevationLSB elevationLSB;
} NhuAzimuthAndElevation_r10;


typedef TknS32 NhuAcquisitionSatInfo_r10doppler0thOrder;


typedef TknU32 NhuAcquisitionSatInfo_r10codePhase;


typedef TknU32 NhuAcquisitionSatInfo_r10integerCodePhase;


typedef TknU32 NhuAcquisitionSatInfo_r10gps_BitNumber;

typedef struct NhuAcquisitionSatInfo_r10
{
 TknPres pres;
 NhuSatID satID;
 NhuAcquisitionSatInfo_r10doppler0thOrder doppler0thOrder;
 NhuExtraDopplerInfo extraDopplerInfo;
 NhuAcquisitionSatInfo_r10codePhase codePhase;
 NhuAcquisitionSatInfo_r10integerCodePhase integerCodePhase;
 NhuAcquisitionSatInfo_r10gps_BitNumber gps_BitNumber;
 NhuCodePhaseSearchWindow codePhaseSearchWindow;
 NhuAzimuthAndElevation_r10 azimuthAndElevation;
} NhuAcquisitionSatInfo_r10;

typedef struct NhuAcquisitionSatInfoLst
{
 TknU16 noComp;
 NhuAcquisitionSatInfo *member;
}NhuAcquisitionSatInfoLst;

typedef struct NhuAcquisitionSatInfoLst_va40ext
{
 TknU16 noComp;
 NhuAcquisitionSatInfo_va40ext *member;
}NhuAcquisitionSatInfoLst_va40ext;

typedef struct NhuAcquisitionSatInfoLst_r10
{
 TknU16 noComp;
 NhuAcquisitionSatInfo_r10 *member;
}NhuAcquisitionSatInfoLst_r10;


typedef TknU32 NhuMeasurementIdentity;

typedef struct NhuAdditionalMeasurementID_Lst
{
 TknU16 noComp;
 NhuMeasurementIdentity *member;
}NhuAdditionalMeasurementID_Lst;


typedef TknU32 NhuMeasurementIdentity_r9;

typedef struct NhuAdditionalMeasurementID_Lst_r9
{
 TknU16 noComp;
 NhuMeasurementIdentity_r9 *member;
}NhuAdditionalMeasurementID_Lst_r9;


typedef TknU32 NhuAlmanacSatInfodataID;


typedef TknStrBSXL NhuAlmanacSatInfoe;

typedef TknStrBSXL NhuAlmanacSatInfot_oa;

typedef TknStrBSXL NhuAlmanacSatInfodeltaI;

typedef TknStrBSXL NhuAlmanacSatInfoomegaDot;

typedef TknStrBSXL NhuAlmanacSatInfosatHealth;

typedef TknStrBSXL NhuAlmanacSatInfoa_Sqrt;

typedef TknStrBSXL NhuAlmanacSatInfoomega0;

typedef TknStrBSXL NhuAlmanacSatInfom0;

typedef TknStrBSXL NhuAlmanacSatInfoomega;

typedef TknStrBSXL NhuAlmanacSatInfoaf0;

typedef TknStrBSXL NhuAlmanacSatInfoaf1;
typedef struct NhuAlmanacSatInfo
{
 TknPres pres;
 NhuAlmanacSatInfodataID dataID;
 NhuSatID satID;
 NhuAlmanacSatInfoe e;
 NhuAlmanacSatInfot_oa t_oa;
 NhuAlmanacSatInfodeltaI deltaI;
 NhuAlmanacSatInfoomegaDot omegaDot;
 NhuAlmanacSatInfosatHealth satHealth;
 NhuAlmanacSatInfoa_Sqrt a_Sqrt;
 NhuAlmanacSatInfoomega0 omega0;
 NhuAlmanacSatInfom0 m0;
 NhuAlmanacSatInfoomega omega;
 NhuAlmanacSatInfoaf0 af0;
 NhuAlmanacSatInfoaf1 af1;
} NhuAlmanacSatInfo;

typedef struct NhuAlmanacSatInfoLst
{
 TknU16 noComp;
 NhuAlmanacSatInfo *member;
}NhuAlmanacSatInfoLst;


typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmDataID;

typedef TknU32 NhuGANSS_SAT_Info_Almanac_SBASecefsvID;


typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmHealth;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmXg;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmYg;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmZg;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmXgdot;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmYgDot;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmZgDot;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmTo;
typedef struct NhuGANSS_SAT_Info_Almanac_SBASecef
{
 TknPres pres;
 NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmDataID sbasAlmDataID;
 NhuGANSS_SAT_Info_Almanac_SBASecefsvID svID;
 NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmHealth sbasAlmHealth;
 NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmXg sbasAlmXg;
 NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmYg sbasAlmYg;
 NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmZg sbasAlmZg;
 NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmXgdot sbasAlmXgdot;
 NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmYgDot sbasAlmYgDot;
 NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmZgDot sbasAlmZgDot;
 NhuGANSS_SAT_Info_Almanac_SBASecefsbasAlmTo sbasAlmTo;
} NhuGANSS_SAT_Info_Almanac_SBASecef;

typedef struct NhuGANSS_SAT_Info_Almanac_SBASecefLst
{
 TknU16 noComp;
 NhuGANSS_SAT_Info_Almanac_SBASecef *member;
}NhuGANSS_SAT_Info_Almanac_SBASecefLst;

typedef struct NhuALM_ECEFsbasAlmanacSet
{
 TknPres pres;
 NhuGANSS_SAT_Info_Almanac_SBASecefLst sat_info_SBASecefLst;
} NhuALM_ECEFsbasAlmanacSet;


typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmNA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmnA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmHA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmLambdaA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmTlambdaA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmDeltaIA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAkmDeltaTA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmDeltaTdotA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmEpsilonA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmOmegaA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmTauA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmCA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmMA;
typedef struct NhuGANSS_SAT_Info_Almanac_GLOkp
{
 TknPres pres;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmNA gloAlmNA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmnA gloAlmnA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmHA gloAlmHA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmLambdaA gloAlmLambdaA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmTlambdaA gloAlmTlambdaA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmDeltaIA gloAlmDeltaIA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAkmDeltaTA gloAkmDeltaTA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmDeltaTdotA gloAlmDeltaTdotA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmEpsilonA gloAlmEpsilonA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmOmegaA gloAlmOmegaA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmTauA gloAlmTauA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmCA gloAlmCA;
 NhuGANSS_SAT_Info_Almanac_GLOkpgloAlmMA gloAlmMA;
} NhuGANSS_SAT_Info_Almanac_GLOkp;

typedef struct NhuGANSS_SAT_Info_Almanac_GLOkpLst
{
 TknU16 noComp;
 NhuGANSS_SAT_Info_Almanac_GLOkp *member;
}NhuGANSS_SAT_Info_Almanac_GLOkpLst;

typedef struct NhuALM_GlonassAlmanacSet
{
 TknPres pres;
 NhuGANSS_SAT_Info_Almanac_GLOkpLst sat_info_GLOkpLst;
} NhuALM_GlonassAlmanacSet;


typedef TknU32 NhuGANSS_SAT_Info_Almanac_KpsvId;


typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_alm_e;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_delta_I_alm;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_omegadot_alm;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_svhealth_alm;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_delta_a_sqrt_alm;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_omegazero_alm;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_m_zero_alm;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_omega_alm;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_af_zero_alm;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_Kpganss_af_one_alm;
typedef struct NhuGANSS_SAT_Info_Almanac_Kp
{
 TknPres pres;
 NhuGANSS_SAT_Info_Almanac_KpsvId svId;
 NhuGANSS_SAT_Info_Almanac_Kpganss_alm_e ganss_alm_e;
 NhuGANSS_SAT_Info_Almanac_Kpganss_delta_I_alm ganss_delta_I_alm;
 NhuGANSS_SAT_Info_Almanac_Kpganss_omegadot_alm ganss_omegadot_alm;
 NhuGANSS_SAT_Info_Almanac_Kpganss_svhealth_alm ganss_svhealth_alm;
 NhuGANSS_SAT_Info_Almanac_Kpganss_delta_a_sqrt_alm ganss_delta_a_sqrt_alm;
 NhuGANSS_SAT_Info_Almanac_Kpganss_omegazero_alm ganss_omegazero_alm;
 NhuGANSS_SAT_Info_Almanac_Kpganss_m_zero_alm ganss_m_zero_alm;
 NhuGANSS_SAT_Info_Almanac_Kpganss_omega_alm ganss_omega_alm;
 NhuGANSS_SAT_Info_Almanac_Kpganss_af_zero_alm ganss_af_zero_alm;
 NhuGANSS_SAT_Info_Almanac_Kpganss_af_one_alm ganss_af_one_alm;
} NhuGANSS_SAT_Info_Almanac_Kp;

typedef struct NhuGANSS_SAT_Info_Almanac_KpLst
{
 TknU16 noComp;
 NhuGANSS_SAT_Info_Almanac_Kp *member;
}NhuGANSS_SAT_Info_Almanac_KpLst;


typedef TknU32 NhuALM_keplerianParamst_oa;


typedef TknU32 NhuALM_keplerianParamsiod_a;

typedef struct NhuALM_keplerianParams
{
 TknPres pres;
 NhuALM_keplerianParamst_oa t_oa;
 NhuALM_keplerianParamsiod_a iod_a;
 NhuGANSS_SAT_Info_Almanac_KpLst sat_info_kpLst;
} NhuALM_keplerianParams;


typedef TknU32 NhuGANSS_SAT_Info_Almanac_MIDIkpsvID;


typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmE;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmDeltaI;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmOmegaDot;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmSqrtA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmOmega0;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmOmega;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmMo;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmaf0;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmaf1;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmL1Health;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmL2Health;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmL5Health;
typedef struct NhuGANSS_SAT_Info_Almanac_MIDIkp
{
 TknPres pres;
 NhuGANSS_SAT_Info_Almanac_MIDIkpsvID svID;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmE midiAlmE;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmDeltaI midiAlmDeltaI;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmOmegaDot midiAlmOmegaDot;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmSqrtA midiAlmSqrtA;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmOmega0 midiAlmOmega0;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmOmega midiAlmOmega;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmMo midiAlmMo;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmaf0 midiAlmaf0;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmaf1 midiAlmaf1;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmL1Health midiAlmL1Health;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmL2Health midiAlmL2Health;
 NhuGANSS_SAT_Info_Almanac_MIDIkpmidiAlmL5Health midiAlmL5Health;
} NhuGANSS_SAT_Info_Almanac_MIDIkp;

typedef struct NhuGANSS_SAT_Info_Almanac_MIDIkpLst
{
 TknU16 noComp;
 NhuGANSS_SAT_Info_Almanac_MIDIkp *member;
}NhuGANSS_SAT_Info_Almanac_MIDIkpLst;


typedef TknU32 NhuALM_MidiAlmanacSett_oa;

typedef struct NhuALM_MidiAlmanacSet
{
 TknPres pres;
 NhuALM_MidiAlmanacSett_oa t_oa;
 NhuGANSS_SAT_Info_Almanac_MIDIkpLst sat_info_MIDIkpLst;
} NhuALM_MidiAlmanacSet;


typedef TknU32 NhuGANSS_SAT_Info_Almanac_NAVkpsvID;


typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmE;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmDeltaI;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmOMEGADOT;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmSVHealth;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmSqrtA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmOMEGAo;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmOmega;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmMo;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmaf0;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmaf1;
typedef struct NhuGANSS_SAT_Info_Almanac_NAVkp
{
 TknPres pres;
 NhuGANSS_SAT_Info_Almanac_NAVkpsvID svID;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmE navAlmE;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmDeltaI navAlmDeltaI;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmOMEGADOT navAlmOMEGADOT;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmSVHealth navAlmSVHealth;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmSqrtA navAlmSqrtA;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmOMEGAo navAlmOMEGAo;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmOmega navAlmOmega;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmMo navAlmMo;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmaf0 navAlmaf0;
 NhuGANSS_SAT_Info_Almanac_NAVkpnavAlmaf1 navAlmaf1;
} NhuGANSS_SAT_Info_Almanac_NAVkp;

typedef struct NhuGANSS_SAT_Info_Almanac_NAVkpLst
{
 TknU16 noComp;
 NhuGANSS_SAT_Info_Almanac_NAVkp *member;
}NhuGANSS_SAT_Info_Almanac_NAVkpLst;


typedef TknU32 NhuALM_NAVKeplerianSett_oa;

typedef struct NhuALM_NAVKeplerianSet
{
 TknPres pres;
 NhuALM_NAVKeplerianSett_oa t_oa;
 NhuGANSS_SAT_Info_Almanac_NAVkpLst sat_info_NAVkpLst;
} NhuALM_NAVKeplerianSet;


typedef TknU32 NhuGANSS_SAT_Info_Almanac_REDkpsvID;


typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_REDkpredAlmDeltaA;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_REDkpredAlmOmega0;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_REDkpredAlmPhi0;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_REDkpredAlmL1Health;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_REDkpredAlmL2Health;

typedef TknStrBSXL NhuGANSS_SAT_Info_Almanac_REDkpredAlmL5Health;
typedef struct NhuGANSS_SAT_Info_Almanac_REDkp
{
 TknPres pres;
 NhuGANSS_SAT_Info_Almanac_REDkpsvID svID;
 NhuGANSS_SAT_Info_Almanac_REDkpredAlmDeltaA redAlmDeltaA;
 NhuGANSS_SAT_Info_Almanac_REDkpredAlmOmega0 redAlmOmega0;
 NhuGANSS_SAT_Info_Almanac_REDkpredAlmPhi0 redAlmPhi0;
 NhuGANSS_SAT_Info_Almanac_REDkpredAlmL1Health redAlmL1Health;
 NhuGANSS_SAT_Info_Almanac_REDkpredAlmL2Health redAlmL2Health;
 NhuGANSS_SAT_Info_Almanac_REDkpredAlmL5Health redAlmL5Health;
} NhuGANSS_SAT_Info_Almanac_REDkp;

typedef struct NhuGANSS_SAT_Info_Almanac_REDkpLst
{
 TknU16 noComp;
 NhuGANSS_SAT_Info_Almanac_REDkp *member;
}NhuGANSS_SAT_Info_Almanac_REDkpLst;


typedef TknU32 NhuALM_ReducedKeplerianSett_oa;

typedef struct NhuALM_ReducedKeplerianSet
{
 TknPres pres;
 NhuALM_ReducedKeplerianSett_oa t_oa;
 NhuGANSS_SAT_Info_Almanac_REDkpLst sat_info_REDkpLst;
} NhuALM_ReducedKeplerianSet;


typedef TknU32 NhuAuxInfoGANSS_ID1_elementsvID;


typedef TknStrBSXL NhuAuxInfoGANSS_ID1_elementsignalsAvailable;
typedef struct NhuAuxInfoGANSS_ID1_element
{
 TknPres pres;
 NhuAuxInfoGANSS_ID1_elementsvID svID;
 NhuAuxInfoGANSS_ID1_elementsignalsAvailable signalsAvailable;
} NhuAuxInfoGANSS_ID1_element;

typedef struct NhuAuxInfoGANSS_ID1
{
 TknU16 noComp;
 NhuAuxInfoGANSS_ID1_element *member;
}NhuAuxInfoGANSS_ID1;


typedef TknU32 NhuAuxInfoGANSS_ID3_elementsvID;


typedef TknStrBSXL NhuAuxInfoGANSS_ID3_elementsignalsAvailable;

typedef TknS32 NhuAuxInfoGANSS_ID3_elementchannelNumber;

typedef struct NhuAuxInfoGANSS_ID3_element
{
 TknPres pres;
 NhuAuxInfoGANSS_ID3_elementsvID svID;
 NhuAuxInfoGANSS_ID3_elementsignalsAvailable signalsAvailable;
 NhuAuxInfoGANSS_ID3_elementchannelNumber channelNumber;
} NhuAuxInfoGANSS_ID3_element;

typedef struct NhuAuxInfoGANSS_ID3
{
 TknU16 noComp;
 NhuAuxInfoGANSS_ID3_element *member;
}NhuAuxInfoGANSS_ID3;


typedef enum enumNhuAverageRLC_BufferPayload
{
 NhuAverageRLC_BufferPayloadpla0Enum,
 NhuAverageRLC_BufferPayloadpla4Enum,
 NhuAverageRLC_BufferPayloadpla8Enum,
 NhuAverageRLC_BufferPayloadpla16Enum,
 NhuAverageRLC_BufferPayloadpla32Enum,
 NhuAverageRLC_BufferPayloadpla64Enum,
 NhuAverageRLC_BufferPayloadpla128Enum,
 NhuAverageRLC_BufferPayloadpla256Enum,
 NhuAverageRLC_BufferPayloadpla512Enum,
 NhuAverageRLC_BufferPayloadpla1024Enum,
 NhuAverageRLC_BufferPayloadpla2kEnum,
 NhuAverageRLC_BufferPayloadpla4kEnum,
 NhuAverageRLC_BufferPayloadpla8kEnum,
 NhuAverageRLC_BufferPayloadpla16kEnum,
 NhuAverageRLC_BufferPayloadpla32kEnum,
 NhuAverageRLC_BufferPayloadpla64kEnum,
 NhuAverageRLC_BufferPayloadpla128kEnum,
 NhuAverageRLC_BufferPayloadpla256kEnum,
 NhuAverageRLC_BufferPayloadpla512kEnum,
 NhuAverageRLC_BufferPayloadpla1024kEnum,
 NhuAverageRLC_BufferPayloadspare12Enum,
 NhuAverageRLC_BufferPayloadspare11Enum,
 NhuAverageRLC_BufferPayloadspare10Enum,
 NhuAverageRLC_BufferPayloadspare9Enum,
 NhuAverageRLC_BufferPayloadspare8Enum,
 NhuAverageRLC_BufferPayloadspare7Enum,
 NhuAverageRLC_BufferPayloadspare6Enum,
 NhuAverageRLC_BufferPayloadspare5Enum,
 NhuAverageRLC_BufferPayloadspare4Enum,
 NhuAverageRLC_BufferPayloadspare3Enum,
 NhuAverageRLC_BufferPayloadspare2Enum,
 NhuAverageRLC_BufferPayloadspare1Enum
} EnumNhuAverageRLC_BufferPayload;
typedef TknU32 NhuAverageRLC_BufferPayload;

typedef TknU32 NhuBadSatLstMember;

typedef struct NhuBadSatLst
{
 TknU16 noComp;
 NhuBadSatLstMember *member;
}NhuBadSatLst;


typedef TknU32 NhuDL_TportChannelBLER;

typedef struct NhuBLER_MeasurementResults
{
 TknPres pres;
 NhuTportChannelIdentity transportChannelIdentity;
 NhuDL_TportChannelBLER dl_TportChannelBLER;
} NhuBLER_MeasurementResults;

typedef struct NhuBLER_MeasurementResultsLst
{
 TknU16 noComp;
 NhuBLER_MeasurementResults *member;
}NhuBLER_MeasurementResultsLst;

typedef struct NhuBLER_TransChIdLst
{
 TknU16 noComp;
 NhuTportChannelIdentity *member;
}NhuBLER_TransChIdLst;


typedef enum enumNhuBSIC_VerificationReqd
{
 NhuBSIC_VerificationReqdrequiredEnum,
 NhuBSIC_VerificationReqdnotReqdEnum
} EnumNhuBSIC_VerificationReqd;
typedef TknU32 NhuBSIC_VerificationReqd;


typedef TknU32 NhuBSICReportedverifiedBSIC;

typedef struct NhuBSICReported
{
 TknU8 choice;
 union {
  NhuBSICReportedverifiedBSIC verifiedBSIC;
  NhuBCCH_ARFCN nonVerifiedBSIC;
 } val;
} NhuBSICReported;


typedef TknU32 NhuBurstModeParamsburstStart;


typedef TknU32 NhuBurstModeParamsburstLength;


typedef TknU32 NhuBurstModeParamsburstFreq;

typedef struct NhuBurstModeParams
{
 TknPres pres;
 NhuBurstModeParamsburstStart burstStart;
 NhuBurstModeParamsburstLength burstLength;
 NhuBurstModeParamsburstFreq burstFreq;
} NhuBurstModeParams;


typedef enum enumNhuTrgCondition2
{
 NhuTrgCondition2activeSetCellsOnlyEnum,
 NhuTrgCondition2monitoredSetCellsOnlyEnum,
 NhuTrgCondition2activeSetAndMonitoredSetCellsEnum,
 NhuTrgCondition2detectedSetCellsOnlyEnum,
 NhuTrgCondition2detectedSetAndMonitoredSetCellsEnum
} EnumNhuTrgCondition2;
typedef TknU32 NhuTrgCondition2;


typedef TknU32 NhuRprtngRange;

typedef struct NhuForbiddenAffectCell
{
 TknU8 choice;
 union {
  NhuPrimaryCPICH_Info fdd;
  NhuPrimaryCCPCH_Info tdd;
 } val;
} NhuForbiddenAffectCell;

typedef struct NhuForbiddenAffectCellLst
{
 TknU16 noComp;
 NhuForbiddenAffectCell *member;
}NhuForbiddenAffectCellLst;


typedef TknU32 NhuW;


typedef enum enumNhuReportDeactivationThreshold
{
 NhuReportDeactivationThresholdnotApplicableEnum,
 NhuReportDeactivationThresholdt1Enum,
 NhuReportDeactivationThresholdt2Enum,
 NhuReportDeactivationThresholdt3Enum,
 NhuReportDeactivationThresholdt4Enum,
 NhuReportDeactivationThresholdt5Enum,
 NhuReportDeactivationThresholdt6Enum,
 NhuReportDeactivationThresholdt7Enum
} EnumNhuReportDeactivationThreshold;
typedef TknU32 NhuReportDeactivationThreshold;


typedef enum enumNhuRprtngAmount
{
 NhuRprtngAmountra1Enum,
 NhuRprtngAmountra2Enum,
 NhuRprtngAmountra4Enum,
 NhuRprtngAmountra8Enum,
 NhuRprtngAmountra16Enum,
 NhuRprtngAmountra32Enum,
 NhuRprtngAmountra64Enum,
 NhuRprtngAmountra_InfinityEnum
} EnumNhuRprtngAmount;
typedef TknU32 NhuRprtngAmount;


typedef enum enumNhuRprtngInterval
{
 NhuRprtngIntervalnoPeriodicalreportingEnum,
 NhuRprtngIntervalri0_25Enum,
 NhuRprtngIntervalri0_5Enum,
 NhuRprtngIntervalri1Enum,
 NhuRprtngIntervalri2Enum,
 NhuRprtngIntervalri4Enum,
 NhuRprtngIntervalri8Enum,
 NhuRprtngIntervalri16Enum
} EnumNhuRprtngInterval;
typedef TknU32 NhuRprtngInterval;

typedef struct NhuEvent1a
{
 TknPres pres;
 NhuTrgCondition2 triggeringCondition;
 NhuRprtngRange reportingRange;
 NhuForbiddenAffectCellLst forbiddenAffectCellLst;
 NhuW w;
 NhuReportDeactivationThreshold reportDeactivationThreshold;
 NhuRprtngAmount reportingAmount;
 NhuRprtngInterval reportingInterval;
} NhuEvent1a;


typedef enum enumNhuTrgCondition1
{
 NhuTrgCondition1activeSetCellsOnlyEnum,
 NhuTrgCondition1monitoredSetCellsOnlyEnum,
 NhuTrgCondition1activeSetAndMonitoredSetCellsEnum
} EnumNhuTrgCondition1;
typedef TknU32 NhuTrgCondition1;

typedef struct NhuEvent1b
{
 TknPres pres;
 NhuTrgCondition1 triggeringCondition;
 NhuRprtngRange reportingRange;
 NhuForbiddenAffectCellLst forbiddenAffectCellLst;
 NhuW w;
} NhuEvent1b;


typedef enum enumNhuReplacementActvnThreshold
{
 NhuReplacementActvnThresholdnotApplicableEnum,
 NhuReplacementActvnThresholdt1Enum,
 NhuReplacementActvnThresholdt2Enum,
 NhuReplacementActvnThresholdt3Enum,
 NhuReplacementActvnThresholdt4Enum,
 NhuReplacementActvnThresholdt5Enum,
 NhuReplacementActvnThresholdt6Enum,
 NhuReplacementActvnThresholdt7Enum
} EnumNhuReplacementActvnThreshold;
typedef TknU32 NhuReplacementActvnThreshold;

typedef struct NhuEvent1c
{
 TknPres pres;
 NhuReplacementActvnThreshold replacementActvnThreshold;
 NhuRprtngAmount reportingAmount;
 NhuRprtngInterval reportingInterval;
} NhuEvent1c;


typedef TknS32 NhuThresholdUsedFrequency;

typedef struct NhuEvent1e
{
 TknPres pres;
 NhuTrgCondition2 triggeringCondition;
 NhuThresholdUsedFrequency thresholdUsedFrequency;
} NhuEvent1e;

typedef struct NhuEvent1f
{
 TknPres pres;
 NhuTrgCondition1 triggeringCondition;
 NhuThresholdUsedFrequency thresholdUsedFrequency;
} NhuEvent1f;

typedef struct NhuIntraFreqEvent
{
 TknU8 choice;
 union {
  NhuEvent1a e1a;
  NhuEvent1b e1b;
  NhuEvent1c e1c;
  NhuEvent1e e1e;
  NhuEvent1f e1f;
  NhuThresholdUsedFrequency e1h;
  NhuThresholdUsedFrequency e1i;
 } val;
} NhuIntraFreqEvent;





typedef enum enumNhu3gTimeToTrigger
{
 Nhu3gTimeToTriggerttt0Enum,
 Nhu3gTimeToTriggerttt10Enum,
 Nhu3gTimeToTriggerttt20Enum,
 Nhu3gTimeToTriggerttt40Enum,
 Nhu3gTimeToTriggerttt60Enum,
 Nhu3gTimeToTriggerttt80Enum,
 Nhu3gTimeToTriggerttt100Enum,
 Nhu3gTimeToTriggerttt120Enum,
 Nhu3gTimeToTriggerttt160Enum,
 Nhu3gTimeToTriggerttt200Enum,
 Nhu3gTimeToTriggerttt240Enum,
 Nhu3gTimeToTriggertt320Enum,
 Nhu3gTimeToTriggerttt640Enum,
 Nhu3gTimeToTriggerttt1280Enum,
 Nhu3gTimeToTriggerttt2560Enum,
 Nhu3gTimeToTriggerttt5000Enum
} EnumNhu3gTimeToTrigger;
typedef TknU32 Nhu3gTimeToTrigger;


typedef enum enumNhuMaxNumberOfRprtngCellsTyp1
{
 NhuMaxNumberOfRprtngCellsTyp1e1Enum,
 NhuMaxNumberOfRprtngCellsTyp1e2Enum,
 NhuMaxNumberOfRprtngCellsTyp1e3Enum,
 NhuMaxNumberOfRprtngCellsTyp1e4Enum,
 NhuMaxNumberOfRprtngCellsTyp1e5Enum,
 NhuMaxNumberOfRprtngCellsTyp1e6Enum
} EnumNhuMaxNumberOfRprtngCellsTyp1;
typedef TknU32 NhuMaxNumberOfRprtngCellsTyp1;


typedef enum enumNhuMaxNumberOfRprtngCellsTyp3
{
 NhuMaxNumberOfRprtngCellsTyp3viactCellsPlus1Enum,
 NhuMaxNumberOfRprtngCellsTyp3viactCellsPlus2Enum,
 NhuMaxNumberOfRprtngCellsTyp3viactCellsPlus3Enum,
 NhuMaxNumberOfRprtngCellsTyp3viactCellsPlus4Enum,
 NhuMaxNumberOfRprtngCellsTyp3viactCellsPlus5Enum,
 NhuMaxNumberOfRprtngCellsTyp3viactCellsPlus6Enum
} EnumNhuMaxNumberOfRprtngCellsTyp3;
typedef TknU32 NhuMaxNumberOfRprtngCellsTyp3;


typedef enum enumNhuMaxNumberOfRprtngCellsTyp2
{
 NhuMaxNumberOfRprtngCellsTyp2e1Enum,
 NhuMaxNumberOfRprtngCellsTyp2e2Enum,
 NhuMaxNumberOfRprtngCellsTyp2e3Enum,
 NhuMaxNumberOfRprtngCellsTyp2e4Enum,
 NhuMaxNumberOfRprtngCellsTyp2e5Enum,
 NhuMaxNumberOfRprtngCellsTyp2e6Enum,
 NhuMaxNumberOfRprtngCellsTyp2e7Enum,
 NhuMaxNumberOfRprtngCellsTyp2e8Enum,
 NhuMaxNumberOfRprtngCellsTyp2e9Enum,
 NhuMaxNumberOfRprtngCellsTyp2e10Enum,
 NhuMaxNumberOfRprtngCellsTyp2e11Enum,
 NhuMaxNumberOfRprtngCellsTyp2e12Enum
} EnumNhuMaxNumberOfRprtngCellsTyp2;
typedef TknU32 NhuMaxNumberOfRprtngCellsTyp2;

typedef struct NhuRprtngCellStatus
{
 TknU8 choice;
 union {
  NhuMaxNumberOfRprtngCellsTyp1 withinActiveSet;
  NhuMaxNumberOfRprtngCellsTyp1 withinMonitoredSetUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp1 withinActiveAndOrMonitoredUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp1 withinDetectedSetUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp1 withinMonitoredAndOrDetectedUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp3 allActiveplusMonitoredSet;
  NhuMaxNumberOfRprtngCellsTyp3 allActivePlusDetectedSet;
  NhuMaxNumberOfRprtngCellsTyp3 allActivePlusMonitoredAndOrDetectedSet;
  NhuMaxNumberOfRprtngCellsTyp1 withinVirtualActSet;
  NhuMaxNumberOfRprtngCellsTyp1 withinMonitoredSetNonUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp1 withinMonitoredAndOrVirtualActiveSetNonUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp3 allVirtualActSetplusMonitoredSetNonUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp2 withinActSetOrVirtualActSet_InterRATcells;
  NhuMaxNumberOfRprtngCellsTyp2 withinActSetAndOrMonitoredUsedFreqOrVirtualActSetAndOrMonitoredNonUsedFreq;
 } val;
} NhuRprtngCellStatus;

typedef struct NhuIntraFreqEventCriteria
{
 TknPres pres;
 NhuIntraFreqEvent event;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuIntraFreqEventCriteria;

typedef struct NhuIntraFreqEventCriteriaLst
{
 TknU16 noComp;
 NhuIntraFreqEventCriteria *member;
}NhuIntraFreqEventCriteriaLst;

typedef struct NhuIntraFreqRprtngCriteria
{
 TknPres pres;
 NhuIntraFreqEventCriteriaLst eventCriteriaLst;
} NhuIntraFreqRprtngCriteria;


typedef enum enumNhuRprtngIntervalLong
{
 NhuRprtngIntervalLongril0Enum,
 NhuRprtngIntervalLongril0_25Enum,
 NhuRprtngIntervalLongril0_5Enum,
 NhuRprtngIntervalLongril1Enum,
 NhuRprtngIntervalLongril2Enum,
 NhuRprtngIntervalLongril3Enum,
 NhuRprtngIntervalLongril4Enum,
 NhuRprtngIntervalLongril6Enum,
 NhuRprtngIntervalLongril8Enum,
 NhuRprtngIntervalLongril12Enum,
 NhuRprtngIntervalLongril16Enum,
 NhuRprtngIntervalLongril20Enum,
 NhuRprtngIntervalLongril24Enum,
 NhuRprtngIntervalLongril28Enum,
 NhuRprtngIntervalLongril32Enum,
 NhuRprtngIntervalLongril64Enum
} EnumNhuRprtngIntervalLong;
typedef TknU32 NhuRprtngIntervalLong;

typedef struct NhuPeriodicalRprtngCriteria
{
 TknPres pres;
 NhuRprtngAmount reportingAmount;
 NhuRprtngIntervalLong reportingInterval;
} NhuPeriodicalRprtngCriteria;

typedef struct NhuCellDCH_ReportCriteria
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria intraFreqRprtngCriteria;
  NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 } val;
} NhuCellDCH_ReportCriteria;

typedef struct NhuForbiddenAffectCell_LCR_r4
{
 TknPres pres;
 NhuPrimaryCCPCH_Info_LCR_r4 tdd;
} NhuForbiddenAffectCell_LCR_r4;

typedef struct NhuForbiddenAffectCellLst_LCR_r4
{
 TknU16 noComp;
 NhuForbiddenAffectCell_LCR_r4 *member;
}NhuForbiddenAffectCellLst_LCR_r4;

typedef struct NhuEvent1a_LCR_r4
{
 TknPres pres;
 NhuTrgCondition2 triggeringCondition;
 NhuRprtngRange reportingRange;
 NhuForbiddenAffectCellLst_LCR_r4 forbiddenAffectCellLst;
 NhuW w;
 NhuReportDeactivationThreshold reportDeactivationThreshold;
 NhuRprtngAmount reportingAmount;
 NhuRprtngInterval reportingInterval;
} NhuEvent1a_LCR_r4;

typedef struct NhuEvent1b_LCR_r4
{
 TknPres pres;
 NhuTrgCondition1 triggeringCondition;
 NhuRprtngRange reportingRange;
 NhuForbiddenAffectCellLst_LCR_r4 forbiddenAffectCellLst;
 NhuW w;
} NhuEvent1b_LCR_r4;

typedef struct NhuIntraFreqEvent_LCR_r4
{
 TknU8 choice;
 union {
  NhuEvent1a_LCR_r4 e1a;
  NhuEvent1b_LCR_r4 e1b;
  NhuEvent1c e1c;
  NhuEvent1e e1e;
  NhuEvent1f e1f;
  NhuThresholdUsedFrequency e1h;
  NhuThresholdUsedFrequency e1i;
 } val;
} NhuIntraFreqEvent_LCR_r4;

typedef struct NhuIntraFreqEventCriteria_LCR_r4
{
 TknPres pres;
 NhuIntraFreqEvent_LCR_r4 event;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuIntraFreqEventCriteria_LCR_r4;

typedef struct NhuIntraFreqEventCriteriaLst_LCR_r4
{
 TknU16 noComp;
 NhuIntraFreqEventCriteria_LCR_r4 *member;
}NhuIntraFreqEventCriteriaLst_LCR_r4;

typedef struct NhuIntraFreqRprtngCriteria_LCR_r4
{
 TknPres pres;
 NhuIntraFreqEventCriteriaLst_LCR_r4 eventCriteriaLst;
} NhuIntraFreqRprtngCriteria_LCR_r4;

typedef struct NhuCellDCH_ReportCriteria_LCR_r4
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_LCR_r4 intraFreqRprtngCriteria;
  NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 } val;
} NhuCellDCH_ReportCriteria_LCR_r4;


typedef TknU32 NhuMeasurementOccasionPatternParametermeasurement_Occasion_Coeff;


typedef TknU32 NhuMeasurementOccasionPatternParametermeasurement_Occasion_Offset;


typedef TknU32 NhuMeasurementOccasionPatternParametermeasurement_Occasion_Length;


typedef TknStrBSXL NhuMeasurementOccasionPatternParametertimeslotBitmap;
typedef struct NhuMeasurementOccasionPatternParameter
{
 TknPres pres;
 NhuMeasurementOccasionPatternParametermeasurement_Occasion_Coeff measurement_Occasion_Coeff;
 NhuMeasurementOccasionPatternParametermeasurement_Occasion_Offset measurement_Occasion_Offset;
 NhuMeasurementOccasionPatternParametermeasurement_Occasion_Length measurement_Occasion_Length;
 NhuMeasurementOccasionPatternParametertimeslotBitmap timeslotBitmap;
} NhuMeasurementOccasionPatternParameter;


typedef TknU32 NhuCellDCHMeasOccasionPattern_LCRpatternId;


typedef enum enumNhuCellDCHMeasOccasionPattern_LCRstatusFlag
{
 NhuCellDCHMeasOccasionPattern_LCRstatusFlagactivateEnum,
 NhuCellDCHMeasOccasionPattern_LCRstatusFlagdeactivateEnum
} EnumNhuCellDCHMeasOccasionPattern_LCRstatusFlag;
typedef TknU32 NhuCellDCHMeasOccasionPattern_LCRstatusFlag;


typedef TknStrBSXL NhuCellDCHMeasOccasionPattern_LCRmeasurementPurpose;
typedef struct NhuCellDCHMeasOccasionPattern_LCR
{
 TknPres pres;
 NhuCellDCHMeasOccasionPattern_LCRpatternId patternId;
 NhuCellDCHMeasOccasionPattern_LCRstatusFlag statusFlag;
 NhuCellDCHMeasOccasionPattern_LCRmeasurementPurpose measurementPurpose;
 NhuMeasurementOccasionPatternParameter measurementOccasionPatternParameter;
} NhuCellDCHMeasOccasionPattern_LCR;

typedef struct NhuCellDCHMeasOccasionInfo_TDD128_r9cellDCHMeasOccasionSequenceLst
{
 TknU16 noComp;
 NhuCellDCHMeasOccasionPattern_LCR *member;
}NhuCellDCHMeasOccasionInfo_TDD128_r9cellDCHMeasOccasionSequenceLst;

typedef struct NhuCellDCHMeasOccasionInfo_TDD128_r9
{
 TknPres pres;
 NhuCellDCHMeasOccasionInfo_TDD128_r9cellDCHMeasOccasionSequenceLst cellDCHMeasOccasionSequenceLst;
} NhuCellDCHMeasOccasionInfo_TDD128_r9;


typedef TknS32 NhuCellIvdualOffset;


typedef TknU32 NhuReferenceTimeDifferenceToCellaccuracy40;


typedef TknU32 NhuReferenceTimeDifferenceToCellaccuracy256;


typedef TknU32 NhuReferenceTimeDifferenceToCellaccuracy2560;

typedef struct NhuReferenceTimeDifferenceToCell
{
 TknU8 choice;
 union {
  NhuReferenceTimeDifferenceToCellaccuracy40 accuracy40;
  NhuReferenceTimeDifferenceToCellaccuracy256 accuracy256;
  NhuReferenceTimeDifferenceToCellaccuracy2560 accuracy2560;
 } val;
} NhuReferenceTimeDifferenceToCell;

typedef struct NhuTimeslotInfo
{
 TknPres pres;
 NhuTimeslotNumber timeslotNumber;
 NhuBurstTyp burstTyp;
} NhuTimeslotInfo;

typedef struct NhuTimeslotInfoLst
{
 TknU16 noComp;
 NhuTimeslotInfo *member;
}NhuTimeslotInfoLst;


typedef TknU8 NhuCellInfomodeSpecificInfofddreadSFN_Indicator;


typedef TknU8 NhuCellInfomodeSpecificInfofddtx_DiversityIndicator;

typedef struct NhuCellInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuPrimaryCPICH_TX_Power primaryCPICH_TX_Power;
 NhuCellInfomodeSpecificInfofddreadSFN_Indicator readSFN_Indicator;
 NhuCellInfomodeSpecificInfofddtx_DiversityIndicator tx_DiversityIndicator;
} NhuCellInfomodeSpecificInfofdd;


typedef TknU8 NhuCellInfomodeSpecificInfotddreadSFN_Indicator;

typedef struct NhuCellInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Info primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst timeslotInfoLst;
 NhuCellInfomodeSpecificInfotddreadSFN_Indicator readSFN_Indicator;
} NhuCellInfomodeSpecificInfotdd;

typedef struct NhuCellInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellInfomodeSpecificInfofdd fdd;
  NhuCellInfomodeSpecificInfotdd tdd;
 } val;
} NhuCellInfomodeSpecificInfo;

typedef struct NhuCellInfo
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuCellInfomodeSpecificInfo modeSpecificInfo;
} NhuCellInfo;

typedef struct NhuTimeslotInfo_LCR_r4
{
 TknPres pres;
 NhuTimeslotNumber_LCR_r4 timeslotNumber;
} NhuTimeslotInfo_LCR_r4;

typedef struct NhuTimeslotInfoLst_r4tdd384
{
 TknU16 noComp;
 NhuTimeslotInfo *member;
}NhuTimeslotInfoLst_r4tdd384;

typedef struct NhuTimeslotInfoLst_r4tdd128
{
 TknU16 noComp;
 NhuTimeslotInfo_LCR_r4 *member;
}NhuTimeslotInfoLst_r4tdd128;

typedef struct NhuTimeslotInfoLst_r4
{
 TknU8 choice;
 union {
  NhuTimeslotInfoLst_r4tdd384 tdd384;
  NhuTimeslotInfoLst_r4tdd128 tdd128;
 } val;
} NhuTimeslotInfoLst_r4;


typedef TknU8 NhuCellInfo_r4modeSpecificInfofddreadSFN_Indicator;


typedef TknU8 NhuCellInfo_r4modeSpecificInfofddtx_DiversityIndicator;

typedef struct NhuCellInfo_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuPrimaryCPICH_TX_Power primaryCPICH_TX_Power;
 NhuCellInfo_r4modeSpecificInfofddreadSFN_Indicator readSFN_Indicator;
 NhuCellInfo_r4modeSpecificInfofddtx_DiversityIndicator tx_DiversityIndicator;
} NhuCellInfo_r4modeSpecificInfofdd;


typedef TknU8 NhuCellInfo_r4modeSpecificInfotddreadSFN_Indicator;

typedef struct NhuCellInfo_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Info_r4 primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst_r4 timeslotInfoLst;
 NhuCellInfo_r4modeSpecificInfotddreadSFN_Indicator readSFN_Indicator;
} NhuCellInfo_r4modeSpecificInfotdd;

typedef struct NhuCellInfo_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellInfo_r4modeSpecificInfofdd fdd;
  NhuCellInfo_r4modeSpecificInfotdd tdd;
 } val;
} NhuCellInfo_r4modeSpecificInfo;

typedef struct NhuCellInfo_r4
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuCellInfo_r4modeSpecificInfo modeSpecificInfo;
} NhuCellInfo_r4;


typedef TknS32 NhuQ_OffsetS_N;


typedef enum enumNhuTemporaryOffset1
{
 NhuTemporaryOffset1to3Enum,
 NhuTemporaryOffset1to6Enum,
 NhuTemporaryOffset1to9Enum,
 NhuTemporaryOffset1to12Enum,
 NhuTemporaryOffset1to15Enum,
 NhuTemporaryOffset1to18Enum,
 NhuTemporaryOffset1to21Enum,
 NhuTemporaryOffset1infiniteEnum
} EnumNhuTemporaryOffset1;
typedef TknU32 NhuTemporaryOffset1;

typedef struct NhuPenaltyTime_RSCP
{
 TknU8 choice;
 union {
  NhuTemporaryOffset1 pt10;
  NhuTemporaryOffset1 pt20;
  NhuTemporaryOffset1 pt30;
  NhuTemporaryOffset1 pt40;
  NhuTemporaryOffset1 pt50;
  NhuTemporaryOffset1 pt60;
 } val;
} NhuPenaltyTime_RSCP;

typedef struct NhuHCS_CellReselectInfo_RSCP
{
 TknPres pres;
 NhuPenaltyTime_RSCP penaltyTime;
} NhuHCS_CellReselectInfo_RSCP;

typedef struct NhuHCS_NeighbouringCellInfo_RSCP
{
 TknPres pres;
 NhuHCS_PRIO hcs_PRIO;
 NhuQ_HCS q_HCS;
 NhuHCS_CellReselectInfo_RSCP hcs_CellReselectInfo;
} NhuHCS_NeighbouringCellInfo_RSCP;

typedef struct NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfofdd
{
 TknPres pres;
 NhuQ_QualMin q_QualMin;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfofdd;

typedef struct NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfotdd
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfotdd;

typedef struct NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfogsm
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfogsm;

typedef struct NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfofdd fdd;
  NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfotdd tdd;
  NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfogsm gsm;
 } val;
} NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfo;

typedef struct NhuCellSelectReselectInfoMC_RSCP
{
 TknPres pres;
 NhuQ_OffsetS_N q_OffsetS_N;
 NhuMaxAllowedUL_TX_Power maxAllowedUL_TX_Power;
 NhuHCS_NeighbouringCellInfo_RSCP hcs_NeighbouringCellInfo_RSCP;
 NhuCellSelectReselectInfoMC_RSCPmodeSpecificInfo modeSpecificInfo;
} NhuCellSelectReselectInfoMC_RSCP;

typedef struct NhuCellInfo_LCR_r8_ext
{
 TknPres pres;
 NhuCellSelectReselectInfoMC_RSCP cellSelectionReselectionInfo;
} NhuCellInfo_LCR_r8_ext;


typedef TknU8 NhuCellInfo_r9modeSpecificInfofddreadSFN_Indicator;


typedef TknU8 NhuCellInfo_r9modeSpecificInfofddtx_DiversityIndicator;

typedef struct NhuCellInfo_r9modeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuPrimaryCPICH_TX_Power primaryCPICH_TX_Power;
 NhuCellInfo_r9modeSpecificInfofddreadSFN_Indicator readSFN_Indicator;
 NhuCellInfo_r9modeSpecificInfofddtx_DiversityIndicator tx_DiversityIndicator;
} NhuCellInfo_r9modeSpecificInfofdd;


typedef TknU8 NhuCellInfo_r9modeSpecificInfotddreadSFN_Indicator;

typedef struct NhuCellInfo_r9modeSpecificInfotdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Info_r4 primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst_r4 timeslotInfoLst;
 NhuCellInfo_r9modeSpecificInfotddreadSFN_Indicator readSFN_Indicator;
} NhuCellInfo_r9modeSpecificInfotdd;

typedef struct NhuCellInfo_r9modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellInfo_r9modeSpecificInfofdd fdd;
  NhuCellInfo_r9modeSpecificInfotdd tdd;
 } val;
} NhuCellInfo_r9modeSpecificInfo;

typedef struct NhuCellInfo_r9
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuCellInfo_r9modeSpecificInfo modeSpecificInfo;
 NhuCellSelectReselectInfoMC_RSCP cellSelectionReselectionInfo;
} NhuCellInfo_r9;

typedef struct NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfofdd
{
 TknPres pres;
 NhuQ_QualMin q_QualMin;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfofdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfotdd
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfotdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfogsm
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfogsm;

typedef struct NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfofdd fdd;
  NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfotdd tdd;
  NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfogsm gsm;
 } val;
} NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfo;

typedef struct NhuCellSelectReselectInfoSIB_11_12_RSCP
{
 TknPres pres;
 NhuQ_OffsetS_N q_OffsetS_N;
 NhuMaxAllowedUL_TX_Power maxAllowedUL_TX_Power;
 NhuCellSelectReselectInfoSIB_11_12_RSCPmodeSpecificInfo modeSpecificInfo;
} NhuCellSelectReselectInfoSIB_11_12_RSCP;


typedef TknU8 NhuCellInfoSI_RSCPmodeSpecificInfofddreadSFN_Indicator;


typedef TknU8 NhuCellInfoSI_RSCPmodeSpecificInfofddtx_DiversityIndicator;

typedef struct NhuCellInfoSI_RSCPmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuPrimaryCPICH_TX_Power primaryCPICH_TX_Power;
 NhuCellInfoSI_RSCPmodeSpecificInfofddreadSFN_Indicator readSFN_Indicator;
 NhuCellInfoSI_RSCPmodeSpecificInfofddtx_DiversityIndicator tx_DiversityIndicator;
} NhuCellInfoSI_RSCPmodeSpecificInfofdd;


typedef TknU8 NhuCellInfoSI_RSCPmodeSpecificInfotddreadSFN_Indicator;

typedef struct NhuCellInfoSI_RSCPmodeSpecificInfotdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Info primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst timeslotInfoLst;
 NhuCellInfoSI_RSCPmodeSpecificInfotddreadSFN_Indicator readSFN_Indicator;
} NhuCellInfoSI_RSCPmodeSpecificInfotdd;

typedef struct NhuCellInfoSI_RSCPmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellInfoSI_RSCPmodeSpecificInfofdd fdd;
  NhuCellInfoSI_RSCPmodeSpecificInfotdd tdd;
 } val;
} NhuCellInfoSI_RSCPmodeSpecificInfo;

typedef struct NhuCellInfoSI_RSCP
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuCellInfoSI_RSCPmodeSpecificInfo modeSpecificInfo;
 NhuCellSelectReselectInfoSIB_11_12_RSCP cellSelectionReselectionInfo;
} NhuCellInfoSI_RSCP;

typedef struct NhuTimeslotInfoLst_LCR_r4
{
 TknU16 noComp;
 NhuTimeslotInfo_LCR_r4 *member;
}NhuTimeslotInfoLst_LCR_r4;


typedef TknU8 NhuCellInfoSI_RSCP_LCR_r4readSFN_Indicator;

typedef struct NhuCellInfoSI_RSCP_LCR_r4
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuPrimaryCCPCH_Info_LCR_r4 primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst_LCR_r4 timeslotInfoLst;
 NhuCellInfoSI_RSCP_LCR_r4readSFN_Indicator readSFN_Indicator;
 NhuCellSelectReselectInfoSIB_11_12_RSCP cellSelectionReselectionInfo;
} NhuCellInfoSI_RSCP_LCR_r4;

typedef struct NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfofdd
{
 TknPres pres;
 NhuQ_QualMin q_QualMin;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfofdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfotdd
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfotdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfogsm
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfogsm;

typedef struct NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfofdd fdd;
  NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfotdd tdd;
  NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfogsm gsm;
 } val;
} NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfo;

typedef struct NhuCellSelectReselectInfoSIB_11_12_ECN0
{
 TknPres pres;
 NhuQ_OffsetS_N q_Offset1S_N;
 NhuQ_OffsetS_N q_Offset2S_N;
 NhuMaxAllowedUL_TX_Power maxAllowedUL_TX_Power;
 NhuCellSelectReselectInfoSIB_11_12_ECN0modeSpecificInfo modeSpecificInfo;
} NhuCellSelectReselectInfoSIB_11_12_ECN0;


typedef TknU8 NhuCellInfoSI_ECN0modeSpecificInfofddreadSFN_Indicator;


typedef TknU8 NhuCellInfoSI_ECN0modeSpecificInfofddtx_DiversityIndicator;

typedef struct NhuCellInfoSI_ECN0modeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuPrimaryCPICH_TX_Power primaryCPICH_TX_Power;
 NhuCellInfoSI_ECN0modeSpecificInfofddreadSFN_Indicator readSFN_Indicator;
 NhuCellInfoSI_ECN0modeSpecificInfofddtx_DiversityIndicator tx_DiversityIndicator;
} NhuCellInfoSI_ECN0modeSpecificInfofdd;


typedef TknU8 NhuCellInfoSI_ECN0modeSpecificInfotddreadSFN_Indicator;

typedef struct NhuCellInfoSI_ECN0modeSpecificInfotdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Info primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst timeslotInfoLst;
 NhuCellInfoSI_ECN0modeSpecificInfotddreadSFN_Indicator readSFN_Indicator;
} NhuCellInfoSI_ECN0modeSpecificInfotdd;

typedef struct NhuCellInfoSI_ECN0modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellInfoSI_ECN0modeSpecificInfofdd fdd;
  NhuCellInfoSI_ECN0modeSpecificInfotdd tdd;
 } val;
} NhuCellInfoSI_ECN0modeSpecificInfo;

typedef struct NhuCellInfoSI_ECN0
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuCellInfoSI_ECN0modeSpecificInfo modeSpecificInfo;
 NhuCellSelectReselectInfoSIB_11_12_ECN0 cellSelectionReselectionInfo;
} NhuCellInfoSI_ECN0;


typedef TknU8 NhuCellInfoSI_ECN0_LCR_r4readSFN_Indicator;

typedef struct NhuCellInfoSI_ECN0_LCR_r4
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuPrimaryCCPCH_Info_LCR_r4 primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst_LCR_r4 timeslotInfoLst;
 NhuCellInfoSI_ECN0_LCR_r4readSFN_Indicator readSFN_Indicator;
 NhuCellSelectReselectInfoSIB_11_12_ECN0 cellSelectionReselectionInfo;
} NhuCellInfoSI_ECN0_LCR_r4;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfofdd
{
 TknPres pres;
 NhuQ_QualMin q_QualMin;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfofdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfotdd
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfotdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfogsm
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfogsm;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfofdd fdd;
  NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfotdd tdd;
  NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfogsm gsm;
 } val;
} NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfo;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_RSCP
{
 TknPres pres;
 NhuQ_OffsetS_N q_OffsetS_N;
 NhuMaxAllowedUL_TX_Power maxAllowedUL_TX_Power;
 NhuHCS_NeighbouringCellInfo_RSCP hcs_NeighbouringCellInfo_RSCP;
 NhuCellSelectReselectInfoSIB_11_12_HCS_RSCPmodeSpecificInfo modeSpecificInfo;
} NhuCellSelectReselectInfoSIB_11_12_HCS_RSCP;


typedef TknU8 NhuCellInfoSI_HCS_RSCPmodeSpecificInfofddreadSFN_Indicator;


typedef TknU8 NhuCellInfoSI_HCS_RSCPmodeSpecificInfofddtx_DiversityIndicator;

typedef struct NhuCellInfoSI_HCS_RSCPmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuPrimaryCPICH_TX_Power primaryCPICH_TX_Power;
 NhuCellInfoSI_HCS_RSCPmodeSpecificInfofddreadSFN_Indicator readSFN_Indicator;
 NhuCellInfoSI_HCS_RSCPmodeSpecificInfofddtx_DiversityIndicator tx_DiversityIndicator;
} NhuCellInfoSI_HCS_RSCPmodeSpecificInfofdd;


typedef TknU8 NhuCellInfoSI_HCS_RSCPmodeSpecificInfotddreadSFN_Indicator;

typedef struct NhuCellInfoSI_HCS_RSCPmodeSpecificInfotdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Info primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst timeslotInfoLst;
 NhuCellInfoSI_HCS_RSCPmodeSpecificInfotddreadSFN_Indicator readSFN_Indicator;
} NhuCellInfoSI_HCS_RSCPmodeSpecificInfotdd;

typedef struct NhuCellInfoSI_HCS_RSCPmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellInfoSI_HCS_RSCPmodeSpecificInfofdd fdd;
  NhuCellInfoSI_HCS_RSCPmodeSpecificInfotdd tdd;
 } val;
} NhuCellInfoSI_HCS_RSCPmodeSpecificInfo;

typedef struct NhuCellInfoSI_HCS_RSCP
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuCellInfoSI_HCS_RSCPmodeSpecificInfo modeSpecificInfo;
 NhuCellSelectReselectInfoSIB_11_12_HCS_RSCP cellSelectionReselectionInfo;
} NhuCellInfoSI_HCS_RSCP;


typedef TknU8 NhuCellInfoSI_HCS_RSCP_LCR_r4readSFN_Indicator;

typedef struct NhuCellInfoSI_HCS_RSCP_LCR_r4
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuPrimaryCCPCH_Info_LCR_r4 primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst_LCR_r4 timeslotInfoLst;
 NhuCellInfoSI_HCS_RSCP_LCR_r4readSFN_Indicator readSFN_Indicator;
 NhuCellSelectReselectInfoSIB_11_12_HCS_RSCP cellSelectionReselectionInfo;
} NhuCellInfoSI_HCS_RSCP_LCR_r4;


typedef enum enumNhuTemporaryOffset2
{
 NhuTemporaryOffset2to2Enum,
 NhuTemporaryOffset2to3Enum,
 NhuTemporaryOffset2to4Enum,
 NhuTemporaryOffset2to6Enum,
 NhuTemporaryOffset2to8Enum,
 NhuTemporaryOffset2to10Enum,
 NhuTemporaryOffset2to12Enum,
 NhuTemporaryOffset2infiniteEnum
} EnumNhuTemporaryOffset2;
typedef TknU32 NhuTemporaryOffset2;

typedef struct NhuTemporaryOffsetLst
{
 TknPres pres;
 NhuTemporaryOffset1 temporaryOffset1;
 NhuTemporaryOffset2 temporaryOffset2;
} NhuTemporaryOffsetLst;

typedef struct NhuPenaltyTime_ECN0
{
 TknU8 choice;
 union {
  NhuTemporaryOffsetLst pt10;
  NhuTemporaryOffsetLst pt20;
  NhuTemporaryOffsetLst pt30;
  NhuTemporaryOffsetLst pt40;
  NhuTemporaryOffsetLst pt50;
  NhuTemporaryOffsetLst pt60;
 } val;
} NhuPenaltyTime_ECN0;

typedef struct NhuHCS_CellReselectInfo_ECN0
{
 TknPres pres;
 NhuPenaltyTime_ECN0 penaltyTime;
} NhuHCS_CellReselectInfo_ECN0;

typedef struct NhuHCS_NeighbouringCellInfo_ECN0
{
 TknPres pres;
 NhuHCS_PRIO hcs_PRIO;
 NhuQ_HCS q_HCS;
 NhuHCS_CellReselectInfo_ECN0 hcs_CellReselectInfo;
} NhuHCS_NeighbouringCellInfo_ECN0;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfofdd
{
 TknPres pres;
 NhuQ_QualMin q_QualMin;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfofdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfotdd
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfotdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfogsm
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfogsm;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfofdd fdd;
  NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfotdd tdd;
  NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfogsm gsm;
 } val;
} NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfo;

typedef struct NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0
{
 TknPres pres;
 NhuQ_OffsetS_N q_Offset1S_N;
 NhuQ_OffsetS_N q_Offset2S_N;
 NhuMaxAllowedUL_TX_Power maxAllowedUL_TX_Power;
 NhuHCS_NeighbouringCellInfo_ECN0 hcs_NeighbouringCellInfo_ECN0;
 NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0modeSpecificInfo modeSpecificInfo;
} NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0;


typedef TknU8 NhuCellInfoSI_HCS_ECN0modeSpecificInfofddreadSFN_Indicator;


typedef TknU8 NhuCellInfoSI_HCS_ECN0modeSpecificInfofddtx_DiversityIndicator;

typedef struct NhuCellInfoSI_HCS_ECN0modeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuPrimaryCPICH_TX_Power primaryCPICH_TX_Power;
 NhuCellInfoSI_HCS_ECN0modeSpecificInfofddreadSFN_Indicator readSFN_Indicator;
 NhuCellInfoSI_HCS_ECN0modeSpecificInfofddtx_DiversityIndicator tx_DiversityIndicator;
} NhuCellInfoSI_HCS_ECN0modeSpecificInfofdd;


typedef TknU8 NhuCellInfoSI_HCS_ECN0modeSpecificInfotddreadSFN_Indicator;

typedef struct NhuCellInfoSI_HCS_ECN0modeSpecificInfotdd
{
 TknPres pres;
 NhuPrimaryCCPCH_Info primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst timeslotInfoLst;
 NhuCellInfoSI_HCS_ECN0modeSpecificInfotddreadSFN_Indicator readSFN_Indicator;
} NhuCellInfoSI_HCS_ECN0modeSpecificInfotdd;

typedef struct NhuCellInfoSI_HCS_ECN0modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellInfoSI_HCS_ECN0modeSpecificInfofdd fdd;
  NhuCellInfoSI_HCS_ECN0modeSpecificInfotdd tdd;
 } val;
} NhuCellInfoSI_HCS_ECN0modeSpecificInfo;

typedef struct NhuCellInfoSI_HCS_ECN0
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuCellInfoSI_HCS_ECN0modeSpecificInfo modeSpecificInfo;
 NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0 cellSelectionReselectionInfo;
} NhuCellInfoSI_HCS_ECN0;


typedef TknU8 NhuCellInfoSI_HCS_ECN0_LCR_r4readSFN_Indicator;

typedef struct NhuCellInfoSI_HCS_ECN0_LCR_r4
{
 TknPres pres;
 NhuCellIvdualOffset cellIvdualOffset;
 NhuReferenceTimeDifferenceToCell referenceTimeDifferenceToCell;
 NhuPrimaryCCPCH_Info_LCR_r4 primaryCCPCH_Info;
 NhuPrimaryCCPCH_TX_Power primaryCCPCH_TX_Power;
 NhuTimeslotInfoLst_LCR_r4 timeslotInfoLst;
 NhuCellInfoSI_HCS_ECN0_LCR_r4readSFN_Indicator readSFN_Indicator;
 NhuCellSelectReselectInfoSIB_11_12_HCS_ECN0 cellSelectionReselectionInfo;
} NhuCellInfoSI_HCS_ECN0_LCR_r4;


typedef TknU32 NhuSFN_SFN_ObsTimeDifference1;


typedef TknU32 NhuSFN_SFN_ObsTimeDifference2;

typedef struct NhuSFN_SFN_ObsTimeDifference
{
 TknU8 choice;
 union {
  NhuSFN_SFN_ObsTimeDifference1 type1;
  NhuSFN_SFN_ObsTimeDifference2 type2;
 } val;
} NhuSFN_SFN_ObsTimeDifference;


typedef TknU32 NhuCountC_SFN_Frame_differencecountC_SFN_High;


typedef TknU32 NhuCountC_SFN_Frame_differenceoff;

typedef struct NhuCountC_SFN_Frame_difference
{
 TknPres pres;
 NhuCountC_SFN_Frame_differencecountC_SFN_High countC_SFN_High;
 NhuCountC_SFN_Frame_differenceoff off;
} NhuCountC_SFN_Frame_difference;


typedef TknU32 NhuCellSynchronisationInfomodeSpecificInfofddtm;

typedef struct NhuCellSynchronisationInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuCountC_SFN_Frame_difference countC_SFN_Frame_difference;
 NhuCellSynchronisationInfomodeSpecificInfofddtm tm;
} NhuCellSynchronisationInfomodeSpecificInfofdd;

typedef struct NhuCellSynchronisationInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuCountC_SFN_Frame_difference countC_SFN_Frame_difference;
} NhuCellSynchronisationInfomodeSpecificInfotdd;

typedef struct NhuCellSynchronisationInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellSynchronisationInfomodeSpecificInfofdd fdd;
  NhuCellSynchronisationInfomodeSpecificInfotdd tdd;
 } val;
} NhuCellSynchronisationInfomodeSpecificInfo;

typedef struct NhuCellSynchronisationInfo
{
 TknPres pres;
 NhuCellSynchronisationInfomodeSpecificInfo modeSpecificInfo;
} NhuCellSynchronisationInfo;


typedef TknU32 NhuCPICH_Ec_N0;


typedef TknU32 NhuCPICH_RSCP;


typedef TknU32 NhuPathloss;


typedef TknU32 NhuPrimaryCCPCH_RSCP;


typedef TknU32 NhuTimeslotISCP;

typedef struct NhuTimeslotISCP_Lst
{
 TknU16 noComp;
 NhuTimeslotISCP *member;
}NhuTimeslotISCP_Lst;

typedef struct NhuCellMeasuredResultsmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuCPICH_Ec_N0 cpich_Ec_N0;
 NhuCPICH_RSCP cpich_RSCP;
 NhuPathloss pathloss;
} NhuCellMeasuredResultsmodeSpecificInfofdd;

typedef struct NhuCellMeasuredResultsmodeSpecificInfotdd
{
 TknPres pres;
 NhuCellParamsID cellParamsID;
 NhuTGSN proposedTGSN;
 NhuPrimaryCCPCH_RSCP primaryCCPCH_RSCP;
 NhuPathloss pathloss;
 NhuTimeslotISCP_Lst timeslotISCP_Lst;
} NhuCellMeasuredResultsmodeSpecificInfotdd;

typedef struct NhuCellMeasuredResultsmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellMeasuredResultsmodeSpecificInfofdd fdd;
  NhuCellMeasuredResultsmodeSpecificInfotdd tdd;
 } val;
} NhuCellMeasuredResultsmodeSpecificInfo;

typedef struct NhuCellMeasuredResults
{
 TknPres pres;
 NhuCellIdentity cellIdentity;
 NhuSFN_SFN_ObsTimeDifference dummy;
 NhuCellSynchronisationInfo cellSynchronisationInfo;
 NhuCellMeasuredResultsmodeSpecificInfo modeSpecificInfo;
} NhuCellMeasuredResults;


typedef TknS32 NhuDeltaRSCP;

typedef struct NhuDeltaRSCPPerCell
{
 TknPres pres;
 NhuDeltaRSCP deltaRSCP;
} NhuDeltaRSCPPerCell;

typedef struct NhuCellMeasuredResults_r9modeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuCPICH_Ec_N0 cpich_Ec_N0;
 NhuCPICH_RSCP cpich_RSCP;
 NhuDeltaRSCPPerCell deltaRSCPPerCell;
 NhuPathloss pathloss;
} NhuCellMeasuredResults_r9modeSpecificInfofdd;

typedef struct NhuCellMeasuredResults_r9modeSpecificInfotdd
{
 TknPres pres;
 NhuCellParamsID cellParamsID;
 NhuTGSN proposedTGSN;
 NhuPrimaryCCPCH_RSCP primaryCCPCH_RSCP;
 NhuPathloss pathloss;
 NhuTimeslotISCP_Lst timeslotISCP_Lst;
} NhuCellMeasuredResults_r9modeSpecificInfotdd;

typedef struct NhuCellMeasuredResults_r9modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellMeasuredResults_r9modeSpecificInfofdd fdd;
  NhuCellMeasuredResults_r9modeSpecificInfotdd tdd;
 } val;
} NhuCellMeasuredResults_r9modeSpecificInfo;

typedef struct NhuCellMeasuredResults_r9
{
 TknPres pres;
 NhuCellIdentity cellIdentity;
 NhuCellSynchronisationInfo cellSynchronisationInfo;
 NhuCellMeasuredResults_r9modeSpecificInfo modeSpecificInfo;
} NhuCellMeasuredResults_r9;


typedef enum enumNhuCellMeasuredResults_v920extcsgMemberInd
{
 NhuCellMeasuredResults_v920extcsgMemberIndmemberEnum
} EnumNhuCellMeasuredResults_v920extcsgMemberInd;
typedef TknU32 NhuCellMeasuredResults_v920extcsgMemberInd;

typedef struct NhuCellMeasuredResults_v920ext
{
 TknPres pres;
 NhuCSG_Identity csgIdentity;
 NhuCellMeasuredResults_v920extcsgMemberInd csgMemberInd;
} NhuCellMeasuredResults_v920ext;

typedef struct NhuCellMeasurementEventResultsfdd
{
 TknU16 noComp;
 NhuPrimaryCPICH_Info *member;
}NhuCellMeasurementEventResultsfdd;

typedef struct NhuCellMeasurementEventResultstdd
{
 TknU16 noComp;
 NhuPrimaryCCPCH_Info *member;
}NhuCellMeasurementEventResultstdd;

typedef struct NhuCellMeasurementEventResults
{
 TknU8 choice;
 union {
  NhuCellMeasurementEventResultsfdd fdd;
  NhuCellMeasurementEventResultstdd tdd;
 } val;
} NhuCellMeasurementEventResults;

typedef struct NhuCellMeasurementEventResultsOnSecUlFreqfdd
{
 TknU16 noComp;
 NhuPrimaryCPICH_Info *member;
}NhuCellMeasurementEventResultsOnSecUlFreqfdd;

typedef struct NhuCellMeasurementEventResultsOnSecUlFreq
{
 TknU8 choice;
 union {
  NhuCellMeasurementEventResultsOnSecUlFreqfdd fdd;
 } val;
} NhuCellMeasurementEventResultsOnSecUlFreq;

typedef struct NhuCellMeasurementEventResults_LCR_r4
{
 TknU16 noComp;
 NhuPrimaryCCPCH_Info_LCR_r4 *member;
}NhuCellMeasurementEventResults_LCR_r4;


typedef enum enumNhuSFN_SFN_OTD_Typ
{
 NhuSFN_SFN_OTD_TypnoReportEnum,
 NhuSFN_SFN_OTD_Typtype1Enum,
 NhuSFN_SFN_OTD_Typtype2Enum
} EnumNhuSFN_SFN_OTD_Typ;
typedef TknU32 NhuSFN_SFN_OTD_Typ;


typedef TknU8 NhuCellRprtngQuantitiescellIdentity_reportingIndicator;


typedef TknU8 NhuCellRprtngQuantitiescellSynchronisationInfoRprtngIndicator;


typedef TknU8 NhuCellRprtngQuantitiesmodeSpecificInfofddcpich_Ec_N0_reportingIndicator;


typedef TknU8 NhuCellRprtngQuantitiesmodeSpecificInfofddcpich_RSCP_reportingIndicator;


typedef TknU8 NhuCellRprtngQuantitiesmodeSpecificInfofddpathloss_reportingIndicator;

typedef struct NhuCellRprtngQuantitiesmodeSpecificInfofdd
{
 TknPres pres;
 NhuCellRprtngQuantitiesmodeSpecificInfofddcpich_Ec_N0_reportingIndicator cpich_Ec_N0_reportingIndicator;
 NhuCellRprtngQuantitiesmodeSpecificInfofddcpich_RSCP_reportingIndicator cpich_RSCP_reportingIndicator;
 NhuCellRprtngQuantitiesmodeSpecificInfofddpathloss_reportingIndicator pathloss_reportingIndicator;
} NhuCellRprtngQuantitiesmodeSpecificInfofdd;


typedef TknU8 NhuCellRprtngQuantitiesmodeSpecificInfotddtimeslotISCP_reportingIndicator;


typedef TknU8 NhuCellRprtngQuantitiesmodeSpecificInfotddproposedTGSN_RprtngReqd;


typedef TknU8 NhuCellRprtngQuantitiesmodeSpecificInfotddprimaryCCPCH_RSCP_reportingIndicator;


typedef TknU8 NhuCellRprtngQuantitiesmodeSpecificInfotddpathloss_reportingIndicator;

typedef struct NhuCellRprtngQuantitiesmodeSpecificInfotdd
{
 TknPres pres;
 NhuCellRprtngQuantitiesmodeSpecificInfotddtimeslotISCP_reportingIndicator timeslotISCP_reportingIndicator;
 NhuCellRprtngQuantitiesmodeSpecificInfotddproposedTGSN_RprtngReqd proposedTGSN_RprtngReqd;
 NhuCellRprtngQuantitiesmodeSpecificInfotddprimaryCCPCH_RSCP_reportingIndicator primaryCCPCH_RSCP_reportingIndicator;
 NhuCellRprtngQuantitiesmodeSpecificInfotddpathloss_reportingIndicator pathloss_reportingIndicator;
} NhuCellRprtngQuantitiesmodeSpecificInfotdd;

typedef struct NhuCellRprtngQuantitiesmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellRprtngQuantitiesmodeSpecificInfofdd fdd;
  NhuCellRprtngQuantitiesmodeSpecificInfotdd tdd;
 } val;
} NhuCellRprtngQuantitiesmodeSpecificInfo;

typedef struct NhuCellRprtngQuantities
{
 TknPres pres;
 NhuSFN_SFN_OTD_Typ dummy;
 NhuCellRprtngQuantitiescellIdentity_reportingIndicator cellIdentity_reportingIndicator;
 NhuCellRprtngQuantitiescellSynchronisationInfoRprtngIndicator cellSynchronisationInfoRprtngIndicator;
 NhuCellRprtngQuantitiesmodeSpecificInfo modeSpecificInfo;
} NhuCellRprtngQuantities;

typedef struct NhuCellSelectReselectInfoSIB_11_12modeSpecificInfofdd
{
 TknPres pres;
 NhuQ_QualMin q_QualMin;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12modeSpecificInfofdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12modeSpecificInfotdd
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12modeSpecificInfotdd;

typedef struct NhuCellSelectReselectInfoSIB_11_12modeSpecificInfogsm
{
 TknPres pres;
 NhuQ_RxlevMin q_RxlevMin;
} NhuCellSelectReselectInfoSIB_11_12modeSpecificInfogsm;

typedef struct NhuCellSelectReselectInfoSIB_11_12modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCellSelectReselectInfoSIB_11_12modeSpecificInfofdd fdd;
  NhuCellSelectReselectInfoSIB_11_12modeSpecificInfotdd tdd;
  NhuCellSelectReselectInfoSIB_11_12modeSpecificInfogsm gsm;
 } val;
} NhuCellSelectReselectInfoSIB_11_12modeSpecificInfo;

typedef struct NhuCellSelectReselectInfoSIB_11_12
{
 TknPres pres;
 NhuQ_OffsetS_N q_Offset1S_N;
 NhuQ_OffsetS_N q_Offset2S_N;
 NhuMaxAllowedUL_TX_Power maxAllowedUL_TX_Power;
 NhuHCS_NeighbouringCellInfo_RSCP hcs_NeighbouringCellInfo_RSCP;
 NhuCellSelectReselectInfoSIB_11_12modeSpecificInfo modeSpecificInfo;
} NhuCellSelectReselectInfoSIB_11_12;


typedef TknS32 NhuDeltaQrxlevmin;

typedef struct NhuCellSelectReselectInfo_v590ext
{
 TknPres pres;
 NhuDeltaQrxlevmin deltaQrxlevmin;
 NhuDeltaRSCP deltaQhcs;
} NhuCellSelectReselectInfo_v590ext;

typedef struct NhuCellSelectReselectInfoPCHFACH_v5b0ext
{
 TknPres pres;
 NhuQ_Hyst_S_Fine q_Hyst_l_S_PCH;
 NhuQ_Hyst_S_Fine q_Hyst_l_S_FACH;
 NhuQ_Hyst_S_Fine q_Hyst_2_S_PCH;
 NhuQ_Hyst_S_Fine q_Hyst_2_S_FACH;
 NhuT_Reselection_S t_Reselection_S_PCH;
 NhuT_Reselection_S_Fine t_Reselection_S_FACH;
} NhuCellSelectReselectInfoPCHFACH_v5b0ext;

typedef struct NhuCellSelectReselectInfoTreselectionScaling_v5c0ext
{
 TknPres pres;
 NhuT_CRMax non_HCS_t_CR_Max;
 NhuSpeedDependentScalingFactor speedDependentScalingFactor;
 NhuTreselectionScalingFactor interFrequencyTreselectionScalingFactor;
 NhuTreselectionScalingFactor interRATTreselectionScalingFactor;
} NhuCellSelectReselectInfoTreselectionScaling_v5c0ext;


typedef TknU32 NhuInterFreqCellID;

typedef struct NhuCellsForInterFreqMeasLst
{
 TknU16 noComp;
 NhuInterFreqCellID *member;
}NhuCellsForInterFreqMeasLst;


typedef TknU32 NhuInterRATCellID;

typedef struct NhuCellsForInterRATMeasLst
{
 TknU16 noComp;
 NhuInterRATCellID *member;
}NhuCellsForInterRATMeasLst;


typedef TknU32 NhuIntraFreqCellID;

typedef struct NhuCellsForIntraFreqMeasLst
{
 TknU16 noComp;
 NhuIntraFreqCellID *member;
}NhuCellsForIntraFreqMeasLst;


typedef TknU32 NhuIntraFreqCellIDOnSecULFreq;

typedef struct NhuCellsForIntraFreqMeasLstOnSecULFreq
{
 TknU16 noComp;
 NhuIntraFreqCellIDOnSecULFreq *member;
}NhuCellsForIntraFreqMeasLstOnSecULFreq;

typedef struct NhuCellToReport
{
 TknPres pres;
 NhuBSICReported bsicReported;
} NhuCellToReport;

typedef struct NhuCellToReportLst
{
 TknU16 noComp;
 NhuCellToReport *member;
}NhuCellToReportLst;


typedef TknStrBSXL NhuCNAVclockModelcnavToc;

typedef TknStrBSXL NhuCNAVclockModelcnavTop;

typedef TknStrBSXL NhuCNAVclockModelcnavURA0;

typedef TknStrBSXL NhuCNAVclockModelcnavURA1;

typedef TknStrBSXL NhuCNAVclockModelcnavURA2;

typedef TknStrBSXL NhuCNAVclockModelcnavAf2;

typedef TknStrBSXL NhuCNAVclockModelcnavAf1;

typedef TknStrBSXL NhuCNAVclockModelcnavAf0;

typedef TknStrBSXL NhuCNAVclockModelcnavTgd;

typedef TknStrBSXL NhuCNAVclockModelcnavISCl1cp;

typedef TknStrBSXL NhuCNAVclockModelcnavISCl1cd;

typedef TknStrBSXL NhuCNAVclockModelcnavISCl1ca;

typedef TknStrBSXL NhuCNAVclockModelcnavISCl2c;

typedef TknStrBSXL NhuCNAVclockModelcnavISCl5i5;

typedef TknStrBSXL NhuCNAVclockModelcnavISCl5q5;
typedef struct NhuCNAVclockModel
{
 TknPres pres;
 NhuCNAVclockModelcnavToc cnavToc;
 NhuCNAVclockModelcnavTop cnavTop;
 NhuCNAVclockModelcnavURA0 cnavURA0;
 NhuCNAVclockModelcnavURA1 cnavURA1;
 NhuCNAVclockModelcnavURA2 cnavURA2;
 NhuCNAVclockModelcnavAf2 cnavAf2;
 NhuCNAVclockModelcnavAf1 cnavAf1;
 NhuCNAVclockModelcnavAf0 cnavAf0;
 NhuCNAVclockModelcnavTgd cnavTgd;
 NhuCNAVclockModelcnavISCl1cp cnavISCl1cp;
 NhuCNAVclockModelcnavISCl1cd cnavISCl1cd;
 NhuCNAVclockModelcnavISCl1ca cnavISCl1ca;
 NhuCNAVclockModelcnavISCl2c cnavISCl2c;
 NhuCNAVclockModelcnavISCl5i5 cnavISCl5i5;
 NhuCNAVclockModelcnavISCl5q5 cnavISCl5q5;
} NhuCNAVclockModel;


typedef TknU32 NhuCSGCellInfomodeSpecificInfofddnumberOfPSCs;

typedef struct NhuCSGCellInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info startPSC;
 NhuCSGCellInfomodeSpecificInfofddnumberOfPSCs numberOfPSCs;
} NhuCSGCellInfomodeSpecificInfofdd;

typedef struct NhuCSGCellInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuCSGCellInfomodeSpecificInfofdd fdd;
 } val;
} NhuCSGCellInfomodeSpecificInfo;

typedef struct NhuCSGCellInfo
{
 TknPres pres;
 NhuCSGCellInfomodeSpecificInfo modeSpecificInfo;
} NhuCSGCellInfo;

typedef struct NhuCSGCellInfoLst
{
 TknU16 noComp;
 NhuCSGCellInfo *member;
}NhuCSGCellInfoLst;

typedef struct NhuCSGInterFreqCellInfo
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuCSGCellInfoLst cSGInterFreqCellInfoLstperFreq;
} NhuCSGInterFreqCellInfo;

typedef struct NhuCSGInterFreqCellInfoLst
{
 TknU16 noComp;
 NhuCSGInterFreqCellInfo *member;
}NhuCSGInterFreqCellInfoLst;


typedef NhuCSGCellInfoLst NhuCSGIntraFreqCellInfoLst;

typedef enum enumNhuCSGProximityDetectionuTRACSGProximityDetec
{
 NhuCSGProximityDetectionuTRACSGProximityDetecenableEnum
} EnumNhuCSGProximityDetectionuTRACSGProximityDetec;
typedef TknU32 NhuCSGProximityDetectionuTRACSGProximityDetec;


typedef enum enumNhuCSGProximityDetectione_UTRACSGProximityDetec
{
 NhuCSGProximityDetectione_UTRACSGProximityDetecenableEnum
} EnumNhuCSGProximityDetectione_UTRACSGProximityDetec;
typedef TknU32 NhuCSGProximityDetectione_UTRACSGProximityDetec;

typedef struct NhuCSGProximityDetection
{
 TknPres pres;
 NhuCSGProximityDetectionuTRACSGProximityDetec uTRACSGProximityDetec;
 NhuCSGProximityDetectione_UTRACSGProximityDetec e_UTRACSGProximityDetec;
} NhuCSGProximityDetection;


typedef enum enumNhuCSGProximityIndcSGproximityInd
{
 NhuCSGProximityIndcSGproximityIndenteringEnum,
 NhuCSGProximityIndcSGproximityIndleavingEnum
} EnumNhuCSGProximityIndcSGproximityInd;
typedef TknU32 NhuCSGProximityIndcSGproximityInd;

typedef struct NhuCSGProximityIndradioAccessTechnologyuTRA
{
 TknPres pres;
 NhuFrequencyInfo cSGFrequencyInfoUTRA;
} NhuCSGProximityIndradioAccessTechnologyuTRA;

typedef struct NhuCSGProximityIndradioAccessTechnologye_UTRA
{
 TknPres pres;
 NhuEARFCN cSGFrequencyInfoEUTRA;
} NhuCSGProximityIndradioAccessTechnologye_UTRA;

typedef struct NhuCSGProximityIndradioAccessTechnology
{
 TknU8 choice;
 union {
  NhuCSGProximityIndradioAccessTechnologyuTRA uTRA;
  NhuCSGProximityIndradioAccessTechnologye_UTRA e_UTRA;
 } val;
} NhuCSGProximityIndradioAccessTechnology;

typedef struct NhuCSGProximityInd
{
 TknPres pres;
 NhuCSGProximityIndcSGproximityInd cSGproximityInd;
 NhuCSGProximityIndradioAccessTechnology radioAccessTechnology;
} NhuCSGProximityInd;


typedef TknStrBSXL NhuDataBitAssistancedata_bits;
typedef struct NhuDataBitAssistance
{
 TknPres pres;
 NhuGANSS_Signal_Id ganss_signal_id;
 NhuDataBitAssistancedata_bits data_bits;
} NhuDataBitAssistance;

typedef struct NhuDataBitAssistanceSgnLst
{
 TknU16 noComp;
 NhuDataBitAssistance *member;
}NhuDataBitAssistanceSgnLst;


typedef TknU32 NhuDataBitAssistanceSatsatID;

typedef struct NhuDataBitAssistanceSat
{
 TknPres pres;
 NhuDataBitAssistanceSatsatID satID;
 NhuDataBitAssistanceSgnLst dataBitAssistanceSgnLst;
} NhuDataBitAssistanceSat;

typedef struct NhuDataBitAssistanceLst
{
 TknU16 noComp;
 NhuDataBitAssistanceSat *member;
}NhuDataBitAssistanceLst;


typedef TknS32 NhuDeltaPRC;


typedef TknS32 NhuDeltaRRC;


typedef TknStrBSXL NhuDeltaUT1b1;

typedef TknStrBSXL NhuDeltaUT1b2;
typedef struct NhuDeltaUT1
{
 TknPres pres;
 NhuDeltaUT1b1 b1;
 NhuDeltaUT1b2 b2;
} NhuDeltaUT1;


typedef enum enumNhuGANSS_Status_Health
{
 NhuGANSS_Status_Healthudre_scale_1dot0Enum,
 NhuGANSS_Status_Healthudre_scale_0dot75Enum,
 NhuGANSS_Status_Healthudre_scale_0dot5Enum,
 NhuGANSS_Status_Healthudre_scale_0dot3Enum,
 NhuGANSS_Status_Healthudre_scale_0dot2Enum,
 NhuGANSS_Status_Healthudre_scale_0dot1Enum,
 NhuGANSS_Status_Healthno_dataEnum,
 NhuGANSS_Status_Healthinvalid_dataEnum
} EnumNhuGANSS_Status_Health;
typedef TknU32 NhuGANSS_Status_Health;


typedef enum enumNhuUDRE
{
 NhuUDRElessThan1Enum,
 NhuUDREbetween1_and_4Enum,
 NhuUDREbetween4_and_8Enum,
 NhuUDREover8Enum
} EnumNhuUDRE;
typedef TknU32 NhuUDRE;


typedef TknU32 NhuDGANSSSignalInfosatId;


typedef TknStrBSXL NhuDGANSSSignalInfoiode_dganss;

typedef TknS32 NhuDGANSSSignalInfoganss_prc;


typedef TknS32 NhuDGANSSSignalInfoganss_rrc;

typedef struct NhuDGANSSSignalInfo
{
 TknPres pres;
 NhuDGANSSSignalInfosatId satId;
 NhuDGANSSSignalInfoiode_dganss iode_dganss;
 NhuUDRE udre;
 NhuDGANSSSignalInfoganss_prc ganss_prc;
 NhuDGANSSSignalInfoganss_rrc ganss_rrc;
} NhuDGANSSSignalInfo;

typedef struct NhuDGANSSSignalInfoLst
{
 TknU16 noComp;
 NhuDGANSSSignalInfo *member;
}NhuDGANSSSignalInfoLst;

typedef struct NhuDGANSSInfo
{
 TknPres pres;
 NhuGANSS_Signal_Id ganssSignalId;
 NhuGANSS_Status_Health ganssStatusHealth;
 NhuDGANSSSignalInfoLst dgansssignalInfoLst;
} NhuDGANSSInfo;


typedef enum enumNhuUDREGrowthRate
{
 NhuUDREGrowthRategrowth_1_5Enum,
 NhuUDREGrowthRategrowth_2Enum,
 NhuUDREGrowthRategrowth_4Enum,
 NhuUDREGrowthRategrowth_6Enum,
 NhuUDREGrowthRategrowth_8Enum,
 NhuUDREGrowthRategrowth_10Enum,
 NhuUDREGrowthRategrowth_12Enum,
 NhuUDREGrowthRategrowth_16Enum
} EnumNhuUDREGrowthRate;
typedef TknU32 NhuUDREGrowthRate;


typedef enum enumNhuUDREValidityTime
{
 NhuUDREValidityTimeval_20secEnum,
 NhuUDREValidityTimeval_40secEnum,
 NhuUDREValidityTimeval_80secEnum,
 NhuUDREValidityTimeval_160secEnum,
 NhuUDREValidityTimeval_320secEnum,
 NhuUDREValidityTimeval_640secEnum,
 NhuUDREValidityTimeval_1280secEnum,
 NhuUDREValidityTimeval_2560secEnum
} EnumNhuUDREValidityTime;
typedef TknU32 NhuUDREValidityTime;


typedef TknU32 NhuDGANSSSignalInfo_r9satId;


typedef TknStrBSXL NhuDGANSSSignalInfo_r9iode_dganss;

typedef TknS32 NhuDGANSSSignalInfo_r9ganss_prc;


typedef TknS32 NhuDGANSSSignalInfo_r9ganss_rrc;

typedef struct NhuDGANSSSignalInfo_r9
{
 TknPres pres;
 NhuDGANSSSignalInfo_r9satId satId;
 NhuDGANSSSignalInfo_r9iode_dganss iode_dganss;
 NhuUDRE udre;
 NhuDGANSSSignalInfo_r9ganss_prc ganss_prc;
 NhuDGANSSSignalInfo_r9ganss_rrc ganss_rrc;
 NhuUDREGrowthRate udreGrowthRate;
 NhuUDREValidityTime udreValidityTime;
} NhuDGANSSSignalInfo_r9;

typedef struct NhuDGANSSSignalInfoLst_r9
{
 TknU16 noComp;
 NhuDGANSSSignalInfo_r9 *member;
}NhuDGANSSSignalInfoLst_r9;

typedef struct NhuDGANSSInfo_r9
{
 TknPres pres;
 NhuGANSS_Signal_Id ganssSignalId;
 NhuGANSS_Status_Health ganssStatusHealth;
 NhuDGANSSSignalInfoLst_r9 dgansssignalInfoLst;
} NhuDGANSSInfo_r9;

typedef struct NhuDGANSSSignalInfo_v920ext
{
 TknPres pres;
 NhuUDREGrowthRate udreGrowthRate;
 NhuUDREValidityTime udreValidityTime;
} NhuDGANSSSignalInfo_v920ext;

typedef struct NhuDGANSSSignalInfoLst_v920ext
{
 TknU16 noComp;
 NhuDGANSSSignalInfo_v920ext *member;
}NhuDGANSSSignalInfoLst_v920ext;

typedef struct NhuDGANSSInfo_v920ext
{
 TknPres pres;
 NhuDGANSSSignalInfoLst_v920ext dgansssignalInfoLst;
} NhuDGANSSInfo_v920ext;

typedef struct NhuDGANSSInfoLst
{
 TknU16 noComp;
 NhuDGANSSInfo *member;
}NhuDGANSSInfoLst;

typedef struct NhuDGANSSInfoLst_r9
{
 TknU16 noComp;
 NhuDGANSSInfo_r9 *member;
}NhuDGANSSInfoLst_r9;

typedef struct NhuDGANSSInfoLst_v920ext
{
 TknU16 noComp;
 NhuDGANSSInfo_v920ext *member;
}NhuDGANSSInfoLst_v920ext;


typedef TknStrBSXL NhuDGANSS_Sig_Id_Req;

typedef TknU32 NhuIODE;


typedef TknS32 NhuPRC;


typedef TknS32 NhuRRC;

typedef struct NhuDGPS_CorrectionSatInfo
{
 TknPres pres;
 NhuSatID satID;
 NhuIODE iode;
 NhuUDRE udre;
 NhuPRC prc;
 NhuRRC rrc;
 NhuDeltaPRC dummy1;
 NhuDeltaRRC dummy2;
 NhuDeltaPRC dummy3;
 NhuDeltaRRC dummy4;
} NhuDGPS_CorrectionSatInfo;

typedef struct NhuDGPS_CorrectionSatInfo_r9
{
 TknPres pres;
 NhuSatID satID;
 NhuIODE iode;
 NhuUDRE udre;
 NhuPRC prc;
 NhuRRC rrc;
 NhuUDREGrowthRate udreGrowthRate;
 NhuUDREValidityTime udreValidityTime;
} NhuDGPS_CorrectionSatInfo_r9;

typedef struct NhuDGPS_CorrectionSatInfo_v920ext
{
 TknPres pres;
 NhuUDREGrowthRate udreGrowthRate;
 NhuUDREValidityTime udreValidityTime;
} NhuDGPS_CorrectionSatInfo_v920ext;

typedef struct NhuDGPS_CorrectionSatInfoLst
{
 TknU16 noComp;
 NhuDGPS_CorrectionSatInfo *member;
}NhuDGPS_CorrectionSatInfoLst;

typedef struct NhuDGPS_CorrectionSatInfoLst_r9
{
 TknU16 noComp;
 NhuDGPS_CorrectionSatInfo_r9 *member;
}NhuDGPS_CorrectionSatInfoLst_r9;

typedef struct NhuDGPS_CorrectionSatInfoLst_v920ext
{
 TknU16 noComp;
 NhuDGPS_CorrectionSatInfo_v920ext *member;
}NhuDGPS_CorrectionSatInfoLst_v920ext;


typedef enum enumNhuDiffCorrectionStatus
{
 NhuDiffCorrectionStatusudre_1_0Enum,
 NhuDiffCorrectionStatusudre_0_75Enum,
 NhuDiffCorrectionStatusudre_0_5Enum,
 NhuDiffCorrectionStatusudre_0_3Enum,
 NhuDiffCorrectionStatusudre_0_2Enum,
 NhuDiffCorrectionStatusudre_0_1Enum,
 NhuDiffCorrectionStatusnoDataEnum,
 NhuDiffCorrectionStatusinvalidDataEnum
} EnumNhuDiffCorrectionStatus;
typedef TknU32 NhuDiffCorrectionStatus;


typedef enum enumNhuEllipsoidPointlatitudeSign
{
 NhuEllipsoidPointlatitudeSignnorthEnum,
 NhuEllipsoidPointlatitudeSignsouthEnum
} EnumNhuEllipsoidPointlatitudeSign;
typedef TknU32 NhuEllipsoidPointlatitudeSign;


typedef TknU32 NhuEllipsoidPointlatitude;


typedef TknS32 NhuEllipsoidPointlongitude;

typedef struct NhuEllipsoidPoint
{
 TknPres pres;
 NhuEllipsoidPointlatitudeSign latitudeSign;
 NhuEllipsoidPointlatitude latitude;
 NhuEllipsoidPointlongitude longitude;
} NhuEllipsoidPoint;


typedef enum enumNhuEllipsoidPointAltitudelatitudeSign
{
 NhuEllipsoidPointAltitudelatitudeSignnorthEnum,
 NhuEllipsoidPointAltitudelatitudeSignsouthEnum
} EnumNhuEllipsoidPointAltitudelatitudeSign;
typedef TknU32 NhuEllipsoidPointAltitudelatitudeSign;


typedef TknU32 NhuEllipsoidPointAltitudelatitude;


typedef TknS32 NhuEllipsoidPointAltitudelongitude;


typedef enum enumNhuEllipsoidPointAltitudealtitudeDirection
{
 NhuEllipsoidPointAltitudealtitudeDirectionheightEnum,
 NhuEllipsoidPointAltitudealtitudeDirectiondepthEnum
} EnumNhuEllipsoidPointAltitudealtitudeDirection;
typedef TknU32 NhuEllipsoidPointAltitudealtitudeDirection;


typedef TknU32 NhuEllipsoidPointAltitudealtitude;

typedef struct NhuEllipsoidPointAltitude
{
 TknPres pres;
 NhuEllipsoidPointAltitudelatitudeSign latitudeSign;
 NhuEllipsoidPointAltitudelatitude latitude;
 NhuEllipsoidPointAltitudelongitude longitude;
 NhuEllipsoidPointAltitudealtitudeDirection altitudeDirection;
 NhuEllipsoidPointAltitudealtitude altitude;
} NhuEllipsoidPointAltitude;


typedef enum enumNhuEllipsoidPointAltitudeEllipsoidelatitudeSign
{
 NhuEllipsoidPointAltitudeEllipsoidelatitudeSignnorthEnum,
 NhuEllipsoidPointAltitudeEllipsoidelatitudeSignsouthEnum
} EnumNhuEllipsoidPointAltitudeEllipsoidelatitudeSign;
typedef TknU32 NhuEllipsoidPointAltitudeEllipsoidelatitudeSign;


typedef TknU32 NhuEllipsoidPointAltitudeEllipsoidelatitude;


typedef TknS32 NhuEllipsoidPointAltitudeEllipsoidelongitude;


typedef enum enumNhuEllipsoidPointAltitudeEllipsoidealtitudeDirection
{
 NhuEllipsoidPointAltitudeEllipsoidealtitudeDirectionheightEnum,
 NhuEllipsoidPointAltitudeEllipsoidealtitudeDirectiondepthEnum
} EnumNhuEllipsoidPointAltitudeEllipsoidealtitudeDirection;
typedef TknU32 NhuEllipsoidPointAltitudeEllipsoidealtitudeDirection;


typedef TknU32 NhuEllipsoidPointAltitudeEllipsoidealtitude;


typedef TknU32 NhuEllipsoidPointAltitudeEllipsoideuncertaintySemiMajor;


typedef TknU32 NhuEllipsoidPointAltitudeEllipsoideuncertaintySemiMinor;


typedef TknU32 NhuEllipsoidPointAltitudeEllipsoideorientationMajorAxis;


typedef TknU32 NhuEllipsoidPointAltitudeEllipsoideuncertaintyAltitude;


typedef TknU32 NhuEllipsoidPointAltitudeEllipsoideconfidence;

typedef struct NhuEllipsoidPointAltitudeEllipsoide
{
 TknPres pres;
 NhuEllipsoidPointAltitudeEllipsoidelatitudeSign latitudeSign;
 NhuEllipsoidPointAltitudeEllipsoidelatitude latitude;
 NhuEllipsoidPointAltitudeEllipsoidelongitude longitude;
 NhuEllipsoidPointAltitudeEllipsoidealtitudeDirection altitudeDirection;
 NhuEllipsoidPointAltitudeEllipsoidealtitude altitude;
 NhuEllipsoidPointAltitudeEllipsoideuncertaintySemiMajor uncertaintySemiMajor;
 NhuEllipsoidPointAltitudeEllipsoideuncertaintySemiMinor uncertaintySemiMinor;
 NhuEllipsoidPointAltitudeEllipsoideorientationMajorAxis orientationMajorAxis;
 NhuEllipsoidPointAltitudeEllipsoideuncertaintyAltitude uncertaintyAltitude;
 NhuEllipsoidPointAltitudeEllipsoideconfidence confidence;
} NhuEllipsoidPointAltitudeEllipsoide;


typedef enum enumNhuEllipsoidPointUncertCirclelatitudeSign
{
 NhuEllipsoidPointUncertCirclelatitudeSignnorthEnum,
 NhuEllipsoidPointUncertCirclelatitudeSignsouthEnum
} EnumNhuEllipsoidPointUncertCirclelatitudeSign;
typedef TknU32 NhuEllipsoidPointUncertCirclelatitudeSign;


typedef TknU32 NhuEllipsoidPointUncertCirclelatitude;


typedef TknS32 NhuEllipsoidPointUncertCirclelongitude;


typedef TknU32 NhuEllipsoidPointUncertCircleuncertaintyCode;

typedef struct NhuEllipsoidPointUncertCircle
{
 TknPres pres;
 NhuEllipsoidPointUncertCirclelatitudeSign latitudeSign;
 NhuEllipsoidPointUncertCirclelatitude latitude;
 NhuEllipsoidPointUncertCirclelongitude longitude;
 NhuEllipsoidPointUncertCircleuncertaintyCode uncertaintyCode;
} NhuEllipsoidPointUncertCircle;


typedef enum enumNhuEllipsoidPointUncertEllipselatitudeSign
{
 NhuEllipsoidPointUncertEllipselatitudeSignnorthEnum,
 NhuEllipsoidPointUncertEllipselatitudeSignsouthEnum
} EnumNhuEllipsoidPointUncertEllipselatitudeSign;
typedef TknU32 NhuEllipsoidPointUncertEllipselatitudeSign;


typedef TknU32 NhuEllipsoidPointUncertEllipselatitude;


typedef TknS32 NhuEllipsoidPointUncertEllipselongitude;


typedef TknU32 NhuEllipsoidPointUncertEllipseuncertaintySemiMajor;


typedef TknU32 NhuEllipsoidPointUncertEllipseuncertaintySemiMinor;


typedef TknU32 NhuEllipsoidPointUncertEllipseorientationMajorAxis;


typedef TknU32 NhuEllipsoidPointUncertEllipseconfidence;

typedef struct NhuEllipsoidPointUncertEllipse
{
 TknPres pres;
 NhuEllipsoidPointUncertEllipselatitudeSign latitudeSign;
 NhuEllipsoidPointUncertEllipselatitude latitude;
 NhuEllipsoidPointUncertEllipselongitude longitude;
 NhuEllipsoidPointUncertEllipseuncertaintySemiMajor uncertaintySemiMajor;
 NhuEllipsoidPointUncertEllipseuncertaintySemiMinor uncertaintySemiMinor;
 NhuEllipsoidPointUncertEllipseorientationMajorAxis orientationMajorAxis;
 NhuEllipsoidPointUncertEllipseconfidence confidence;
} NhuEllipsoidPointUncertEllipse;


typedef enum enumNhuEnvironmentCharacterisation
{
 NhuEnvironmentCharacterisationpossibleHeavyMultipathNLOSEnum,
 NhuEnvironmentCharacterisationlightMultipathLOSEnum,
 NhuEnvironmentCharacterisationnotDefinedEnum,
 NhuEnvironmentCharacterisationspareEnum
} EnumNhuEnvironmentCharacterisation;
typedef TknU32 NhuEnvironmentCharacterisation;

typedef struct NhuEutra_EventResultreportedCells
{
 TknU16 noComp;
 NhuEUTRA_PhysicalCellIdentity *member;
}NhuEutra_EventResultreportedCells;

typedef struct NhuEutra_EventResult
{
 TknPres pres;
 NhuEARFCN earfcn;
 NhuEutra_EventResultreportedCells reportedCells;
} NhuEutra_EventResult;

typedef struct NhuEutra_EventResultLst
{
 TknU16 noComp;
 NhuEutra_EventResult *member;
}NhuEutra_EventResultLst;


typedef enum enumNhuEventIDInterRAT
{
 NhuEventIDInterRATe3aEnum,
 NhuEventIDInterRATe3bEnum,
 NhuEventIDInterRATe3cEnum,
 NhuEventIDInterRATe3dEnum
} EnumNhuEventIDInterRAT;
typedef TknU32 NhuEventIDInterRAT;

typedef struct NhuEUTRA_EventResults
{
 TknPres pres;
 NhuEventIDInterRAT eventID;
 NhuEutra_EventResultLst eutra_EventResultsLst;
} NhuEUTRA_EventResults;


typedef enum enumNhuEUTRA_MeasurementBandwidth
{
 NhuEUTRA_MeasurementBandwidthmbw6Enum,
 NhuEUTRA_MeasurementBandwidthmbw15Enum,
 NhuEUTRA_MeasurementBandwidthmbw25Enum,
 NhuEUTRA_MeasurementBandwidthmbw50Enum,
 NhuEUTRA_MeasurementBandwidthmbw75Enum,
 NhuEUTRA_MeasurementBandwidthmbw100Enum
} EnumNhuEUTRA_MeasurementBandwidth;
typedef TknU32 NhuEUTRA_MeasurementBandwidth;


typedef TknU32 NhuEUTRA_FrequencyAndPriorityInfopriority;


typedef TknS32 NhuEUTRA_FrequencyAndPriorityInfoqRxLevMinEUTRA;


typedef TknU32 NhuEUTRA_FrequencyAndPriorityInfothreshXhigh;


typedef TknU32 NhuEUTRA_FrequencyAndPriorityInfothreshXlow;


typedef TknU8 NhuEUTRA_FrequencyAndPriorityInfoeutraDetection;

typedef struct NhuEUTRA_FrequencyAndPriorityInfo
{
 TknPres pres;
 NhuEARFCN earfcn;
 NhuEUTRA_MeasurementBandwidth measurementBandwidth;
 NhuEUTRA_FrequencyAndPriorityInfopriority priority;
 NhuEUTRA_FrequencyAndPriorityInfoqRxLevMinEUTRA qRxLevMinEUTRA;
 NhuEUTRA_FrequencyAndPriorityInfothreshXhigh threshXhigh;
 NhuEUTRA_FrequencyAndPriorityInfothreshXlow threshXlow;
 NhuEUTRA_BlacklistedCellPerFreqLst eutra_blackLstedCellLst;
 NhuEUTRA_FrequencyAndPriorityInfoeutraDetection eutraDetection;
} NhuEUTRA_FrequencyAndPriorityInfo;


typedef TknS32 NhuEUTRA_FrequencyAndPriorityInfo_v920extqqualMinEUTRA;


typedef TknU32 NhuEUTRA_FrequencyAndPriorityInfo_v920extthreshXhigh2;


typedef TknU32 NhuEUTRA_FrequencyAndPriorityInfo_v920extthreshXlow2;

typedef struct NhuEUTRA_FrequencyAndPriorityInfo_v920ext
{
 TknPres pres;
 NhuEUTRA_FrequencyAndPriorityInfo_v920extqqualMinEUTRA qqualMinEUTRA;
 NhuEUTRA_FrequencyAndPriorityInfo_v920extthreshXhigh2 threshXhigh2;
 NhuEUTRA_FrequencyAndPriorityInfo_v920extthreshXlow2 threshXlow2;
} NhuEUTRA_FrequencyAndPriorityInfo_v920ext;

typedef struct NhuEUTRA_FrequencyAndPriorityInfoLst
{
 TknU16 noComp;
 NhuEUTRA_FrequencyAndPriorityInfo *member;
}NhuEUTRA_FrequencyAndPriorityInfoLst;

typedef struct NhuEUTRA_FrequencyAndPriorityInfoLst_v920ext
{
 TknU16 noComp;
 NhuEUTRA_FrequencyAndPriorityInfo_v920ext *member;
}NhuEUTRA_FrequencyAndPriorityInfoLst_v920ext;

typedef struct NhuEUTRA_FrequencyRemovalremoveSomeFrequencies
{
 TknU16 noComp;
 NhuEARFCN *member;
}NhuEUTRA_FrequencyRemovalremoveSomeFrequencies;

typedef struct NhuEUTRA_FrequencyRemoval
{
 TknU8 choice;
 union {
  NhuEUTRA_FrequencyRemovalremoveSomeFrequencies removeSomeFrequencies;
 } val;
} NhuEUTRA_FrequencyRemoval;

typedef struct NhuEUTRA_FrequencyInfo
{
 TknPres pres;
 NhuEARFCN earfcn;
 NhuEUTRA_MeasurementBandwidth measurementBandwidth;
 NhuEUTRA_BlacklistedCellPerFreqLst eutra_blackLstedCellLst;
} NhuEUTRA_FrequencyInfo;

typedef struct NhuEUTRA_FrequencyInfoLst
{
 TknU16 noComp;
 NhuEUTRA_FrequencyInfo *member;
}NhuEUTRA_FrequencyInfoLst;

typedef struct NhuEUTRA_FrequencyLst
{
 TknPres pres;
 NhuEUTRA_FrequencyRemoval eutraFrequencyRemoval;
 NhuEUTRA_FrequencyInfoLst eutraNewFrequencies;
} NhuEUTRA_FrequencyLst;

typedef struct NhuEUTRA_SIAcquisition
{
 TknPres pres;
 NhuEARFCN earfcn;
 NhuEUTRA_PhysicalCellIdentity physicalCellIdentity;
} NhuEUTRA_SIAcquisition;

typedef struct NhuEUTRA_FrequencyLst_r9
{
 TknPres pres;
 NhuEUTRA_FrequencyRemoval eutraFrequencyRemoval;
 NhuEUTRA_FrequencyInfoLst eutraNewFrequencies;
 NhuEUTRA_SIAcquisition eutraSIAcquisition;
} NhuEUTRA_FrequencyLst_r9;


typedef TknU32 NhuEUTRA_MeasuredCellsrSRP;


typedef TknU32 NhuEUTRA_MeasuredCellsrSRQ;

typedef struct NhuEUTRA_MeasuredCells
{
 TknPres pres;
 NhuEUTRA_PhysicalCellIdentity physicalCellIdentity;
 NhuEUTRA_MeasuredCellsrSRP rSRP;
 NhuEUTRA_MeasuredCellsrSRQ rSRQ;
} NhuEUTRA_MeasuredCells;

typedef struct NhuEutra_MeasuredResultmeasuredEUTRACells
{
 TknU16 noComp;
 NhuEUTRA_MeasuredCells *member;
}NhuEutra_MeasuredResultmeasuredEUTRACells;

typedef struct NhuEutra_MeasuredResult
{
 TknPres pres;
 NhuEARFCN earfcn;
 NhuEutra_MeasuredResultmeasuredEUTRACells measuredEUTRACells;
} NhuEutra_MeasuredResult;

typedef struct NhuEutra_MeasuredResultLst
{
 TknU16 noComp;
 NhuEutra_MeasuredResult *member;
}NhuEutra_MeasuredResultLst;

typedef struct NhuEUTRA_MeasuredResults
{
 TknPres pres;
 NhuEutra_MeasuredResultLst eutraMeasuredResultLst;
} NhuEUTRA_MeasuredResults;


typedef TknStrBSXL NhuEUTRA_SIacquisitionResultscgiInfocellIdentity;

typedef TknStrBSXL NhuEUTRA_SIacquisitionResultscgiInfotrackingAreaCode;
typedef struct NhuEUTRA_SIacquisitionResultscgiInfo
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuEUTRA_SIacquisitionResultscgiInfocellIdentity cellIdentity;
 NhuEUTRA_SIacquisitionResultscgiInfotrackingAreaCode trackingAreaCode;
} NhuEUTRA_SIacquisitionResultscgiInfo;


typedef enum enumNhuEUTRA_SIacquisitionResultscsgMemberInd
{
 NhuEUTRA_SIacquisitionResultscsgMemberIndmemberEnum
} EnumNhuEUTRA_SIacquisitionResultscsgMemberInd;
typedef TknU32 NhuEUTRA_SIacquisitionResultscsgMemberInd;

typedef struct NhuEUTRA_SIacquisitionResults
{
 TknPres pres;
 NhuEUTRA_SIacquisitionResultscgiInfo cgiInfo;
 NhuCSG_Identity csgIdentity;
 NhuEUTRA_SIacquisitionResultscsgMemberInd csgMemberInd;
} NhuEUTRA_SIacquisitionResults;

typedef struct NhuEUTRA_MeasuredCells_v920ext
{
 TknPres pres;
 NhuEUTRA_SIacquisitionResults eutraSIacquisitionResults;
} NhuEUTRA_MeasuredCells_v920ext;

typedef struct NhuEutra_MeasuredResult_v920extmeasuredEUTRACells_v920ext
{
 TknU16 noComp;
 NhuEUTRA_MeasuredCells_v920ext *member;
}NhuEutra_MeasuredResult_v920extmeasuredEUTRACells_v920ext;

typedef struct NhuEutra_MeasuredResult_v920ext
{
 TknPres pres;
 NhuEutra_MeasuredResult_v920extmeasuredEUTRACells_v920ext measuredEUTRACells_v920ext;
} NhuEutra_MeasuredResult_v920ext;

typedef struct NhuEutra_MeasuredResultLst_v920ext
{
 TknU16 noComp;
 NhuEutra_MeasuredResult_v920ext *member;
}NhuEutra_MeasuredResultLst_v920ext;

typedef struct NhuEUTRA_MeasuredResults_v920ext
{
 TknPres pres;
 NhuEutra_MeasuredResultLst_v920ext eutraMeasuredResultLst_v920ext;
} NhuEUTRA_MeasuredResults_v920ext;

typedef struct NhuForbiddenAffectCell_r4
{
 TknU8 choice;
 union {
  NhuPrimaryCPICH_Info fdd;
  NhuPrimaryCCPCH_Info_r4 tdd;
 } val;
} NhuForbiddenAffectCell_r4;

typedef struct NhuForbiddenAffectCellLst_r4
{
 TknU16 noComp;
 NhuForbiddenAffectCell_r4 *member;
}NhuForbiddenAffectCellLst_r4;

typedef struct NhuEvent1a_r4
{
 TknPres pres;
 NhuTrgCondition2 triggeringCondition;
 NhuRprtngRange reportingRange;
 NhuForbiddenAffectCellLst_r4 forbiddenAffectCellLst;
 NhuW w;
 NhuReportDeactivationThreshold reportDeactivationThreshold;
 NhuRprtngAmount reportingAmount;
 NhuRprtngInterval reportingInterval;
} NhuEvent1a_r4;

typedef struct NhuForbiddenAffectCellOnSecULFreq
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH;
} NhuForbiddenAffectCellOnSecULFreq;

typedef struct NhuForbiddenAffectCellLstOnSecULFreq
{
 TknU16 noComp;
 NhuForbiddenAffectCellOnSecULFreq *member;
}NhuForbiddenAffectCellLstOnSecULFreq;

typedef struct NhuEvent1a_OnSecUlFreq_r9
{
 TknPres pres;
 NhuTrgCondition2 triggeringCondition;
 NhuRprtngRange reportingRange;
 NhuForbiddenAffectCellLstOnSecULFreq forbiddenAffectCellLstOnSecULFreq;
 NhuW w;
 NhuReportDeactivationThreshold reportDeactivationThreshold;
 NhuRprtngAmount reportingAmount;
 NhuRprtngInterval reportingInterval;
} NhuEvent1a_OnSecUlFreq_r9;

typedef struct NhuEvent1b_r4
{
 TknPres pres;
 NhuTrgCondition1 triggeringCondition;
 NhuRprtngRange reportingRange;
 NhuForbiddenAffectCellLst_r4 forbiddenAffectCellLst;
 NhuW w;
} NhuEvent1b_r4;

typedef struct NhuPeriodicRprtngInfo_1b
{
 TknPres pres;
 NhuRprtngAmount reportingAmount;
 NhuRprtngInterval reportingInterval;
} NhuPeriodicRprtngInfo_1b;

typedef struct NhuEvent1b_r7
{
 TknPres pres;
 NhuTrgCondition1 triggeringCondition;
 NhuRprtngRange reportingRange;
 NhuForbiddenAffectCellLst_r4 forbiddenAffectCellLst;
 NhuW w;
 NhuPeriodicRprtngInfo_1b periodicRprtngInfo_1b;
} NhuEvent1b_r7;

typedef struct NhuEvent1b_OnSecUlFreq_r9
{
 TknPres pres;
 NhuTrgCondition1 triggeringCondition;
 NhuRprtngRange reportingRange;
 NhuForbiddenAffectCellLstOnSecULFreq forbiddenAffectCellLstOnSecULFreq;
 NhuW w;
 NhuPeriodicRprtngInfo_1b periodicRprtngInfo_1b;
} NhuEvent1b_OnSecUlFreq_r9;


typedef TknU8 NhuEvent1duseCIO;

typedef struct NhuEvent1d
{
 TknPres pres;
 NhuTrgCondition2 triggeringCondition;
 NhuEvent1duseCIO useCIO;
} NhuEvent1d;


typedef TknS32 NhuThresholdUsedFrequency_r6;

typedef struct NhuEvent1e_r6
{
 TknPres pres;
 NhuTrgCondition2 triggeringCondition;
 NhuThresholdUsedFrequency_r6 thresholdUsedFrequency;
} NhuEvent1e_r6;

typedef struct NhuEvent1f_r6
{
 TknPres pres;
 NhuTrgCondition1 triggeringCondition;
 NhuThresholdUsedFrequency_r6 thresholdUsedFrequency;
} NhuEvent1f_r6;

typedef struct NhuEvent1j_r6
{
 TknPres pres;
 NhuReplacementActvnThreshold replacementActvnThreshold;
 NhuRprtngAmount reportingAmount;
 NhuRprtngInterval reportingInterval;
} NhuEvent1j_r6;


typedef TknS32 NhuThreshold;


typedef TknU32 NhuHysteresisInterFreq;

typedef struct NhuNonUsedFreqParameter
{
 TknPres pres;
 NhuThreshold nonUsedFreqThreshold;
 NhuW nonUsedFreqW;
} NhuNonUsedFreqParameter;

typedef struct NhuNonUsedFreqParameterLst
{
 TknU16 noComp;
 NhuNonUsedFreqParameter *member;
}NhuNonUsedFreqParameterLst;

typedef struct NhuEvent2a
{
 TknPres pres;
 NhuThreshold dummy;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
 NhuNonUsedFreqParameterLst nonUsedFreqParameterLst;
} NhuEvent2a;

typedef struct NhuNonUsedFreqWLst_r6
{
 TknU16 noComp;
 NhuW *member;
}NhuNonUsedFreqWLst_r6;

typedef struct NhuEvent2a_r6
{
 TknPres pres;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
 NhuNonUsedFreqWLst_r6 nonUsedFreqParameterLst;
} NhuEvent2a_r6;

typedef struct NhuRprtngCellStatus_r10
{
 TknU8 choice;
 union {
  NhuMaxNumberOfRprtngCellsTyp1 withinActiveSet;
  NhuMaxNumberOfRprtngCellsTyp1 withinMonitoredSetUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp1 withinActiveAndOrMonitoredUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp1 withinDetectedSetUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp1 withinMonitoredAndOrDetectedUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp3 allActiveplusMonitoredSet;
  NhuMaxNumberOfRprtngCellsTyp3 allActivePlusDetectedSet;
  NhuMaxNumberOfRprtngCellsTyp3 allActivePlusMonitoredAndOrDetectedSet;
  NhuMaxNumberOfRprtngCellsTyp1 withinVirtualActSet;
  NhuMaxNumberOfRprtngCellsTyp1 withinMonitoredSetNonUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp1 withinMonitoredAndOrVirtualActiveSetNonUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp3 allVirtualActSetplusMonitoredSetNonUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp2 withinActSetOrVirtualActSet_InterRATcells;
  NhuMaxNumberOfRprtngCellsTyp2 withinActSetAndOrMonitoredUsedFreqOrVirtualActSetAndOrMonitoredNonUsedFreq;
  NhuMaxNumberOfRprtngCellsTyp3 allVirtualActSetplusMonitoredSetplusDetectedSetNonUsedFreq;
 } val;
} NhuRprtngCellStatus_r10;


typedef enum enumNhuNonUsedFreq2aParameter_r10nonUsedFreqTrgConditionDetectedCells
{
 NhuNonUsedFreq2aParameter_r10nonUsedFreqTrgConditionDetectedCellstrueEnum
} EnumNhuNonUsedFreq2aParameter_r10nonUsedFreqTrgConditionDetectedCells;
typedef TknU32 NhuNonUsedFreq2aParameter_r10nonUsedFreqTrgConditionDetectedCells;

typedef struct NhuNonUsedFreq2aParameter_r10
{
 TknPres pres;
 NhuW nonUsedFreqW;
 NhuNonUsedFreq2aParameter_r10nonUsedFreqTrgConditionDetectedCells nonUsedFreqTrgConditionDetectedCells;
} NhuNonUsedFreq2aParameter_r10;

typedef struct NhuNonUsedFreq2aParameterLst_r10
{
 TknU16 noComp;
 NhuNonUsedFreq2aParameter_r10 *member;
}NhuNonUsedFreq2aParameterLst_r10;

typedef struct NhuEvent2a_r10
{
 TknPres pres;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus_r10 reportingCellStatus;
 NhuNonUsedFreq2aParameterLst_r10 nonUsedFreqParameterLst;
} NhuEvent2a_r10;

typedef struct NhuEvent2b
{
 TknPres pres;
 NhuThreshold usedFreqThreshold;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
 NhuNonUsedFreqParameterLst nonUsedFreqParameterLst;
} NhuEvent2b;


typedef TknS32 NhuThreshold_r6;

typedef struct NhuNonUsedFreqParameter_r6
{
 TknPres pres;
 NhuThreshold_r6 nonUsedFreqThreshold;
 NhuW nonUsedFreqW;
} NhuNonUsedFreqParameter_r6;

typedef struct NhuNonUsedFreqParameterLst_r6
{
 TknU16 noComp;
 NhuNonUsedFreqParameter_r6 *member;
}NhuNonUsedFreqParameterLst_r6;

typedef struct NhuEvent2b_r6
{
 TknPres pres;
 NhuThreshold_r6 usedFreqThreshold;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
 NhuNonUsedFreqParameterLst_r6 nonUsedFreqParameterLst;
} NhuEvent2b_r6;


typedef enum enumNhuNonUsedFreqParameter_r10nonUsedFreqTrgConditionDetectedCells
{
 NhuNonUsedFreqParameter_r10nonUsedFreqTrgConditionDetectedCellstrueEnum
} EnumNhuNonUsedFreqParameter_r10nonUsedFreqTrgConditionDetectedCells;
typedef TknU32 NhuNonUsedFreqParameter_r10nonUsedFreqTrgConditionDetectedCells;

typedef struct NhuNonUsedFreqParameter_r10
{
 TknPres pres;
 NhuThreshold_r6 nonUsedFreqThreshold;
 NhuW nonUsedFreqW;
 NhuNonUsedFreqParameter_r10nonUsedFreqTrgConditionDetectedCells nonUsedFreqTrgConditionDetectedCells;
} NhuNonUsedFreqParameter_r10;

typedef struct NhuNonUsedFreqParameterLst_r10
{
 TknU16 noComp;
 NhuNonUsedFreqParameter_r10 *member;
}NhuNonUsedFreqParameterLst_r10;

typedef struct NhuEvent2b_r10
{
 TknPres pres;
 NhuThreshold_r6 usedFreqThreshold;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus_r10 reportingCellStatus;
 NhuNonUsedFreqParameterLst_r10 nonUsedFreqParameterLst;
} NhuEvent2b_r10;

typedef struct NhuEvent2c
{
 TknPres pres;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
 NhuNonUsedFreqParameterLst nonUsedFreqParameterLst;
} NhuEvent2c;

typedef struct NhuEvent2c_r6
{
 TknPres pres;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
 NhuNonUsedFreqParameterLst_r6 nonUsedFreqParameterLst;
} NhuEvent2c_r6;

typedef struct NhuEvent2c_r10
{
 TknPres pres;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus_r10 reportingCellStatus;
 NhuNonUsedFreqParameterLst_r10 nonUsedFreqParameterLst;
} NhuEvent2c_r10;

typedef struct NhuEvent2d
{
 TknPres pres;
 NhuThreshold usedFreqThreshold;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuEvent2d;

typedef struct NhuEvent2d_r6
{
 TknPres pres;
 NhuThreshold_r6 usedFreqThreshold;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuEvent2d_r6;

typedef struct NhuEvent2d_r10
{
 TknPres pres;
 NhuThreshold_r6 usedFreqThreshold;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus_r10 reportingCellStatus;
} NhuEvent2d_r10;

typedef struct NhuEvent2e
{
 TknPres pres;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
 NhuNonUsedFreqParameterLst nonUsedFreqParameterLst;
} NhuEvent2e;

typedef struct NhuEvent2e_r6
{
 TknPres pres;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
 NhuNonUsedFreqParameterLst_r6 nonUsedFreqParameterLst;
} NhuEvent2e_r6;

typedef struct NhuEvent2e_r10
{
 TknPres pres;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus_r10 reportingCellStatus;
 NhuNonUsedFreqParameterLst_r10 nonUsedFreqParameterLst;
} NhuEvent2e_r10;

typedef struct NhuEvent2f
{
 TknPres pres;
 NhuThreshold usedFreqThreshold;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuEvent2f;

typedef struct NhuEvent2f_r6
{
 TknPres pres;
 NhuThreshold_r6 usedFreqThreshold;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuEvent2f_r6;

typedef struct NhuEvent2f_r10
{
 TknPres pres;
 NhuThreshold_r6 usedFreqThreshold;
 NhuW usedFreqW;
 NhuHysteresisInterFreq hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus_r10 reportingCellStatus;
} NhuEvent2f_r10;

typedef struct NhuEvent3a
{
 TknPres pres;
 NhuThreshold thresholdOwnSys;
 NhuW w;
 NhuThreshold thresholdOtherSys;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuEvent3a;

typedef struct NhuEvent3b
{
 TknPres pres;
 NhuThreshold thresholdOtherSys;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuEvent3b;

typedef struct NhuEvent3c
{
 TknPres pres;
 NhuThreshold thresholdOtherSys;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuEvent3c;

typedef struct NhuEvent3d
{
 TknPres pres;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuEvent3d;


typedef enum enumNhuEventIDInterFreq
{
 NhuEventIDInterFreqe2aEnum,
 NhuEventIDInterFreqe2bEnum,
 NhuEventIDInterFreqe2cEnum,
 NhuEventIDInterFreqe2dEnum,
 NhuEventIDInterFreqe2eEnum,
 NhuEventIDInterFreqe2fEnum,
 NhuEventIDInterFreqspare2Enum,
 NhuEventIDInterFreqspare1Enum
} EnumNhuEventIDInterFreq;
typedef TknU32 NhuEventIDInterFreq;


typedef enum enumNhuEventIDIntraFreq
{
 NhuEventIDIntraFreqe1aEnum,
 NhuEventIDIntraFreqe1bEnum,
 NhuEventIDIntraFreqe1cEnum,
 NhuEventIDIntraFreqe1dEnum,
 NhuEventIDIntraFreqe1eEnum,
 NhuEventIDIntraFreqe1fEnum,
 NhuEventIDIntraFreqe1gEnum,
 NhuEventIDIntraFreqe1hEnum,
 NhuEventIDIntraFreqe1iEnum,
 NhuEventIDIntraFreqe1jEnum,
 NhuEventIDIntraFreqspare6Enum,
 NhuEventIDIntraFreqspare5Enum,
 NhuEventIDIntraFreqspare4Enum,
 NhuEventIDIntraFreqspare3Enum,
 NhuEventIDIntraFreqspare2Enum,
 NhuEventIDIntraFreqspare1Enum
} EnumNhuEventIDIntraFreq;
typedef TknU32 NhuEventIDIntraFreq;

typedef struct NhuIntraFreqEventResults
{
 TknPres pres;
 NhuEventIDIntraFreq eventID;
 NhuCellMeasurementEventResults cellMeasurementEventResults;
} NhuIntraFreqEventResults;

typedef struct NhuInterFreqCell
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuCellMeasurementEventResults nonFreqRelatedEventResults;
} NhuInterFreqCell;

typedef struct NhuInterFreqCellLst
{
 TknU16 noComp;
 NhuInterFreqCell *member;
}NhuInterFreqCellLst;

typedef struct NhuInterFreqEventResults
{
 TknPres pres;
 NhuEventIDInterFreq eventID;
 NhuInterFreqCellLst interFreqCellLst;
} NhuInterFreqEventResults;

typedef struct NhuInterRATEventResults
{
 TknPres pres;
 NhuEventIDInterRAT eventID;
 NhuCellToReportLst cellToReportLst;
} NhuInterRATEventResults;

typedef struct NhuUL_TrCH_Identity
{
 TknU8 choice;
 union {
  NhuTportChannelIdentity dch;
  NhuTportChannelIdentity usch;
 } val;
} NhuUL_TrCH_Identity;


typedef enum enumNhuTrafficVolumeEventTyp
{
 NhuTrafficVolumeEventType4aEnum,
 NhuTrafficVolumeEventType4bEnum
} EnumNhuTrafficVolumeEventTyp;
typedef TknU32 NhuTrafficVolumeEventTyp;

typedef struct NhuTrafficVolumeEventResults
{
 TknPres pres;
 NhuUL_TrCH_Identity ul_transportChannelCausingEvent;
 NhuTrafficVolumeEventTyp trafficVolumeEventIdentity;
} NhuTrafficVolumeEventResults;

typedef struct NhuQualityEventResults
{
 TknU16 noComp;
 NhuTportChannelIdentity *member;
}NhuQualityEventResults;

typedef struct NhuUE_InternalEventResults
{
 TknU8 choice;
 union {
  NhuPrimaryCPICH_Info event6f;
  NhuPrimaryCPICH_Info event6g;
 } val;
} NhuUE_InternalEventResults;


typedef TknU32 NhuUTRAN_GPSReferenceTimeResultue_GPSTimingOfCellms_part;


typedef TknU32 NhuUTRAN_GPSReferenceTimeResultue_GPSTimingOfCellls_part;

typedef struct NhuUTRAN_GPSReferenceTimeResultue_GPSTimingOfCell
{
 TknPres pres;
 NhuUTRAN_GPSReferenceTimeResultue_GPSTimingOfCellms_part ms_part;
 NhuUTRAN_GPSReferenceTimeResultue_GPSTimingOfCellls_part ls_part;
} NhuUTRAN_GPSReferenceTimeResultue_GPSTimingOfCell;

typedef struct NhuUTRAN_GPSReferenceTimeResultmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info referenceIdentity;
} NhuUTRAN_GPSReferenceTimeResultmodeSpecificInfofdd;

typedef struct NhuUTRAN_GPSReferenceTimeResultmodeSpecificInfotdd
{
 TknPres pres;
 NhuCellParamsID referenceIdentity;
} NhuUTRAN_GPSReferenceTimeResultmodeSpecificInfotdd;

typedef struct NhuUTRAN_GPSReferenceTimeResultmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUTRAN_GPSReferenceTimeResultmodeSpecificInfofdd fdd;
  NhuUTRAN_GPSReferenceTimeResultmodeSpecificInfotdd tdd;
 } val;
} NhuUTRAN_GPSReferenceTimeResultmodeSpecificInfo;


typedef TknU32 NhuUTRAN_GPSReferenceTimeResultsfn;

typedef struct NhuUTRAN_GPSReferenceTimeResult
{
 TknPres pres;
 NhuUTRAN_GPSReferenceTimeResultue_GPSTimingOfCell ue_GPSTimingOfCell;
 NhuUTRAN_GPSReferenceTimeResultmodeSpecificInfo modeSpecificInfo;
 NhuUTRAN_GPSReferenceTimeResultsfn sfn;
} NhuUTRAN_GPSReferenceTimeResult;


typedef TknU32 NhuGPS_TOW_1msec;

typedef struct NhuPositionEstimate
{
 TknU8 choice;
 union {
  NhuEllipsoidPoint ellipsoidPoint;
  NhuEllipsoidPointUncertCircle ellipsoidPointUncertCircle;
  NhuEllipsoidPointUncertEllipse ellipsoidPointUncertEllipse;
  NhuEllipsoidPointAltitude ellipsoidPointAltitude;
  NhuEllipsoidPointAltitudeEllipsoide ellipsoidPointAltitudeEllipse;
 } val;
} NhuPositionEstimate;


typedef TknU32 NhuUE_Positioning_PositionEstimateInforeferenceTimecell_Timingsfn;

typedef struct NhuUE_Positioning_PositionEstimateInforeferenceTimecell_TimingmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUE_Positioning_PositionEstimateInforeferenceTimecell_TimingmodeSpecificInfofdd;

typedef struct NhuUE_Positioning_PositionEstimateInforeferenceTimecell_TimingmodeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity cellAndChannelIdentity;
} NhuUE_Positioning_PositionEstimateInforeferenceTimecell_TimingmodeSpecificInfotdd;

typedef struct NhuUE_Positioning_PositionEstimateInforeferenceTimecell_TimingmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_PositionEstimateInforeferenceTimecell_TimingmodeSpecificInfofdd fdd;
  NhuUE_Positioning_PositionEstimateInforeferenceTimecell_TimingmodeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_PositionEstimateInforeferenceTimecell_TimingmodeSpecificInfo;

typedef struct NhuUE_Positioning_PositionEstimateInforeferenceTimecell_Timing
{
 TknPres pres;
 NhuUE_Positioning_PositionEstimateInforeferenceTimecell_Timingsfn sfn;
 NhuUE_Positioning_PositionEstimateInforeferenceTimecell_TimingmodeSpecificInfo modeSpecificInfo;
} NhuUE_Positioning_PositionEstimateInforeferenceTimecell_Timing;

typedef struct NhuUE_Positioning_PositionEstimateInforeferenceTime
{
 TknU8 choice;
 union {
  NhuUTRAN_GPSReferenceTimeResult utran_GPSReferenceTimeResult;
  NhuGPS_TOW_1msec gps_ReferenceTimeOnly;
  NhuUE_Positioning_PositionEstimateInforeferenceTimecell_Timing cell_Timing;
 } val;
} NhuUE_Positioning_PositionEstimateInforeferenceTime;

typedef struct NhuUE_Positioning_PositionEstimateInfo
{
 TknPres pres;
 NhuUE_Positioning_PositionEstimateInforeferenceTime referenceTime;
 NhuPositionEstimate positionEstimate;
} NhuUE_Positioning_PositionEstimateInfo;


typedef TknU32 NhuUE_RX_TX_TimeDifferenceTyp2;


typedef TknStrBSXL NhuUE_Positioning_OTDOA_QualitystdResolution;

typedef TknStrBSXL NhuUE_Positioning_OTDOA_QualitynumberOfOTDOA_Measurements;

typedef TknStrBSXL NhuUE_Positioning_OTDOA_QualitystdOfOTDOA_Measurements;
typedef struct NhuUE_Positioning_OTDOA_Quality
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_QualitystdResolution stdResolution;
 NhuUE_Positioning_OTDOA_QualitynumberOfOTDOA_Measurements numberOfOTDOA_Measurements;
 NhuUE_Positioning_OTDOA_QualitystdOfOTDOA_Measurements stdOfOTDOA_Measurements;
} NhuUE_Positioning_OTDOA_Quality;

typedef struct NhuNeighbourQuality
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_Quality ue_Positioning_OTDOA_Quality;
} NhuNeighbourQuality;

typedef struct NhuUE_RX_TX_TimeDifferenceTyp2Info
{
 TknPres pres;
 NhuUE_RX_TX_TimeDifferenceTyp2 ue_RX_TX_TimeDifferenceTyp2;
 NhuNeighbourQuality neighbourQuality;
} NhuUE_RX_TX_TimeDifferenceTyp2Info;

typedef struct NhuNeighbourmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info neighbourIdentity;
 NhuUE_RX_TX_TimeDifferenceTyp2Info uE_RX_TX_TimeDifferenceTyp2Info;
} NhuNeighbourmodeSpecificInfofdd;

typedef struct NhuNeighbourmodeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity neighbourAndChannelIdentity;
} NhuNeighbourmodeSpecificInfotdd;

typedef struct NhuNeighbourmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuNeighbourmodeSpecificInfofdd fdd;
  NhuNeighbourmodeSpecificInfotdd tdd;
 } val;
} NhuNeighbourmodeSpecificInfo;

typedef struct NhuNeighbour
{
 TknPres pres;
 NhuNeighbourmodeSpecificInfo modeSpecificInfo;
 NhuNeighbourQuality neighbourQuality;
 NhuSFN_SFN_ObsTimeDifference2 sfn_SFN_ObsTimeDifference2;
} NhuNeighbour;

typedef struct NhuNeighbourLst
{
 TknU16 noComp;
 NhuNeighbour *member;
}NhuNeighbourLst;


typedef TknU32 NhuUE_Positioning_OTDOA_Measurementsfn;

typedef struct NhuUE_Positioning_OTDOA_MeasurementmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info referenceCellIDentity;
 NhuUE_RX_TX_TimeDifferenceTyp2Info ue_RX_TX_TimeDifferenceTyp2Info;
} NhuUE_Positioning_OTDOA_MeasurementmodeSpecificInfofdd;

typedef struct NhuUE_Positioning_OTDOA_MeasurementmodeSpecificInfotdd
{
 TknPres pres;
 NhuCellParamsID referenceCellIdentity;
} NhuUE_Positioning_OTDOA_MeasurementmodeSpecificInfotdd;

typedef struct NhuUE_Positioning_OTDOA_MeasurementmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_MeasurementmodeSpecificInfofdd fdd;
  NhuUE_Positioning_OTDOA_MeasurementmodeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_OTDOA_MeasurementmodeSpecificInfo;

typedef struct NhuUE_Positioning_OTDOA_Measurement
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_Measurementsfn sfn;
 NhuUE_Positioning_OTDOA_MeasurementmodeSpecificInfo modeSpecificInfo;
 NhuNeighbourLst neighbourLst;
} NhuUE_Positioning_OTDOA_Measurement;


typedef enum enumNhuMultipathIndicator
{
 NhuMultipathIndicatornmEnum,
 NhuMultipathIndicatorlowEnum,
 NhuMultipathIndicatormediumEnum,
 NhuMultipathIndicatorhighEnum
} EnumNhuMultipathIndicator;
typedef TknU32 NhuMultipathIndicator;


typedef TknU32 NhuGPS_MeasurementParamsatelliteID;


typedef TknU32 NhuGPS_MeasurementParamc_N0;


typedef TknS32 NhuGPS_MeasurementParamdoppler;


typedef TknU32 NhuGPS_MeasurementParamwholeGPS_Chips;


typedef TknU32 NhuGPS_MeasurementParamfractionalGPS_Chips;


typedef TknU32 NhuGPS_MeasurementParampseudorangeRMS_Err;

typedef struct NhuGPS_MeasurementParam
{
 TknPres pres;
 NhuGPS_MeasurementParamsatelliteID satelliteID;
 NhuGPS_MeasurementParamc_N0 c_N0;
 NhuGPS_MeasurementParamdoppler doppler;
 NhuGPS_MeasurementParamwholeGPS_Chips wholeGPS_Chips;
 NhuGPS_MeasurementParamfractionalGPS_Chips fractionalGPS_Chips;
 NhuMultipathIndicator multipathIndicator;
 NhuGPS_MeasurementParampseudorangeRMS_Err pseudorangeRMS_Err;
} NhuGPS_MeasurementParam;

typedef struct NhuGPS_MeasurementParamLst
{
 TknU16 noComp;
 NhuGPS_MeasurementParam *member;
}NhuGPS_MeasurementParamLst;

typedef struct NhuUE_Positioning_GPS_MeasurementResultsreferenceTime
{
 TknU8 choice;
 union {
  NhuUTRAN_GPSReferenceTimeResult utran_GPSReferenceTimeResult;
  NhuGPS_TOW_1msec gps_ReferenceTimeOnly;
 } val;
} NhuUE_Positioning_GPS_MeasurementResultsreferenceTime;

typedef struct NhuUE_Positioning_GPS_MeasurementResults
{
 TknPres pres;
 NhuUE_Positioning_GPS_MeasurementResultsreferenceTime referenceTime;
 NhuGPS_MeasurementParamLst gps_MeasurementParamLst;
} NhuUE_Positioning_GPS_MeasurementResults;

typedef struct NhuUE_Positioning_MeasurementEventResults
{
 TknU8 choice;
 union {
  NhuUE_Positioning_PositionEstimateInfo event7a;
  NhuUE_Positioning_OTDOA_Measurement event7b;
  NhuUE_Positioning_GPS_MeasurementResults event7c;
 } val;
} NhuUE_Positioning_MeasurementEventResults;

typedef struct NhuEventResults
{
 TknU8 choice;
 union {
  NhuIntraFreqEventResults intraFreqEventResults;
  NhuInterFreqEventResults interFreqEventResults;
  NhuInterRATEventResults interRATEventResults;
  NhuTrafficVolumeEventResults trafficVolumeEventResults;
  NhuQualityEventResults qualityEventResults;
  NhuUE_InternalEventResults ue_InternalEventResults;
  NhuUE_Positioning_MeasurementEventResults ue_positioning_MeasurementEventResults;
 } val;
} NhuEventResults;


typedef TknU32 NhuUTRAN_GANSSReferenceTimeue_GANSSTimingOfCellFramesms_Part;


typedef TknU32 NhuUTRAN_GANSSReferenceTimeue_GANSSTimingOfCellFramesls_Part;

typedef struct NhuUTRAN_GANSSReferenceTimeue_GANSSTimingOfCellFrames
{
 TknPres pres;
 NhuUTRAN_GANSSReferenceTimeue_GANSSTimingOfCellFramesms_Part ms_Part;
 NhuUTRAN_GANSSReferenceTimeue_GANSSTimingOfCellFramesls_Part ls_Part;
} NhuUTRAN_GANSSReferenceTimeue_GANSSTimingOfCellFrames;


typedef TknU32 NhuUTRAN_GANSSReferenceTimegANSS_TimeId;


typedef TknU32 NhuUTRAN_GANSSReferenceTimegANSS_TimeUncertainty;

typedef struct NhuUTRAN_GANSSReferenceTimemodefdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primary_CPICH_Info;
} NhuUTRAN_GANSSReferenceTimemodefdd;

typedef struct NhuUTRAN_GANSSReferenceTimemodetdd
{
 TknPres pres;
 NhuCellParamsID cellParams;
} NhuUTRAN_GANSSReferenceTimemodetdd;

typedef struct NhuUTRAN_GANSSReferenceTimemode
{
 TknU8 choice;
 union {
  NhuUTRAN_GANSSReferenceTimemodefdd fdd;
  NhuUTRAN_GANSSReferenceTimemodetdd tdd;
 } val;
} NhuUTRAN_GANSSReferenceTimemode;


typedef TknU32 NhuUTRAN_GANSSReferenceTimereferenceSfn;

typedef struct NhuUTRAN_GANSSReferenceTime
{
 TknPres pres;
 NhuUTRAN_GANSSReferenceTimeue_GANSSTimingOfCellFrames ue_GANSSTimingOfCellFrames;
 NhuUTRAN_GANSSReferenceTimegANSS_TimeId gANSS_TimeId;
 NhuUTRAN_GANSSReferenceTimegANSS_TimeUncertainty gANSS_TimeUncertainty;
 NhuUTRAN_GANSSReferenceTimemode mode;
 NhuUTRAN_GANSSReferenceTimereferenceSfn referenceSfn;
} NhuUTRAN_GANSSReferenceTime;


typedef TknU32 NhuGANSSReferenceTimeOnlygANSS_tod;


typedef TknU32 NhuGANSSReferenceTimeOnlygANSS_timeId;


typedef TknU32 NhuGANSSReferenceTimeOnlygANSS_tod_uncertainty;

typedef struct NhuGANSSReferenceTimeOnly
{
 TknPres pres;
 NhuGANSSReferenceTimeOnlygANSS_tod gANSS_tod;
 NhuGANSSReferenceTimeOnlygANSS_timeId gANSS_timeId;
 NhuGANSSReferenceTimeOnlygANSS_tod_uncertainty gANSS_tod_uncertainty;
} NhuGANSSReferenceTimeOnly;


typedef TknU32 NhuHorizontalVelocitybearing;


typedef TknU32 NhuHorizontalVelocityhorizontalSpeed;

typedef struct NhuHorizontalVelocity
{
 TknPres pres;
 NhuHorizontalVelocitybearing bearing;
 NhuHorizontalVelocityhorizontalSpeed horizontalSpeed;
} NhuHorizontalVelocity;


typedef enum enumNhuHorizontalWithVerticalVelocityverticalSpeedDirection
{
 NhuHorizontalWithVerticalVelocityverticalSpeedDirectionupwardEnum,
 NhuHorizontalWithVerticalVelocityverticalSpeedDirectiondownwardEnum
} EnumNhuHorizontalWithVerticalVelocityverticalSpeedDirection;
typedef TknU32 NhuHorizontalWithVerticalVelocityverticalSpeedDirection;


typedef TknU32 NhuHorizontalWithVerticalVelocitybearing;


typedef TknU32 NhuHorizontalWithVerticalVelocityhorizontalSpeed;


typedef TknU32 NhuHorizontalWithVerticalVelocityverticalSpeed;

typedef struct NhuHorizontalWithVerticalVelocity
{
 TknPres pres;
 NhuHorizontalWithVerticalVelocityverticalSpeedDirection verticalSpeedDirection;
 NhuHorizontalWithVerticalVelocitybearing bearing;
 NhuHorizontalWithVerticalVelocityhorizontalSpeed horizontalSpeed;
 NhuHorizontalWithVerticalVelocityverticalSpeed verticalSpeed;
} NhuHorizontalWithVerticalVelocity;


typedef TknU32 NhuHorizontalVelocityWithUncertaintybearing;


typedef TknU32 NhuHorizontalVelocityWithUncertaintyhorizontalSpeed;


typedef TknU32 NhuHorizontalVelocityWithUncertaintyhorizontalSpeedUncertainty;

typedef struct NhuHorizontalVelocityWithUncertainty
{
 TknPres pres;
 NhuHorizontalVelocityWithUncertaintybearing bearing;
 NhuHorizontalVelocityWithUncertaintyhorizontalSpeed horizontalSpeed;
 NhuHorizontalVelocityWithUncertaintyhorizontalSpeedUncertainty horizontalSpeedUncertainty;
} NhuHorizontalVelocityWithUncertainty;


typedef enum enumNhuHorizontalWithVerticalVelocityAndUncertaintyverticalSpeedDirection
{
 NhuHorizontalWithVerticalVelocityAndUncertaintyverticalSpeedDirectionupwardEnum,
 NhuHorizontalWithVerticalVelocityAndUncertaintyverticalSpeedDirectiondownwardEnum
} EnumNhuHorizontalWithVerticalVelocityAndUncertaintyverticalSpeedDirection;
typedef TknU32 NhuHorizontalWithVerticalVelocityAndUncertaintyverticalSpeedDirection;


typedef TknU32 NhuHorizontalWithVerticalVelocityAndUncertaintybearing;


typedef TknU32 NhuHorizontalWithVerticalVelocityAndUncertaintyhorizontalSpeed;


typedef TknU32 NhuHorizontalWithVerticalVelocityAndUncertaintyverticalSpeed;


typedef TknU32 NhuHorizontalWithVerticalVelocityAndUncertaintyhorizontalUncertaintySpeed;


typedef TknU32 NhuHorizontalWithVerticalVelocityAndUncertaintyverticalUncertaintySpeed;

typedef struct NhuHorizontalWithVerticalVelocityAndUncertainty
{
 TknPres pres;
 NhuHorizontalWithVerticalVelocityAndUncertaintyverticalSpeedDirection verticalSpeedDirection;
 NhuHorizontalWithVerticalVelocityAndUncertaintybearing bearing;
 NhuHorizontalWithVerticalVelocityAndUncertaintyhorizontalSpeed horizontalSpeed;
 NhuHorizontalWithVerticalVelocityAndUncertaintyverticalSpeed verticalSpeed;
 NhuHorizontalWithVerticalVelocityAndUncertaintyhorizontalUncertaintySpeed horizontalUncertaintySpeed;
 NhuHorizontalWithVerticalVelocityAndUncertaintyverticalUncertaintySpeed verticalUncertaintySpeed;
} NhuHorizontalWithVerticalVelocityAndUncertainty;

typedef struct NhuVelocityEstimate
{
 TknU8 choice;
 union {
  NhuHorizontalVelocity horizontalVelocity;
  NhuHorizontalWithVerticalVelocity horizontalWithVerticalVelocity;
  NhuHorizontalVelocityWithUncertainty horizontalVelocityWithUncertainty;
  NhuHorizontalWithVerticalVelocityAndUncertainty horizontalWithVerticalVelocityAndUncertainty;
 } val;
} NhuVelocityEstimate;


typedef TknU32 NhuUE_Positioning_GPS_ReferenceTimeUncertainty;

typedef struct NhuUE_Positioning_PositionEstimateInfo_v770extreferenceTimeOptionsr7referenceTime
{
 TknU8 choice;
 union {
  NhuUTRAN_GANSSReferenceTime utran_GANSSReferenceTimeResult;
  NhuGANSSReferenceTimeOnly ganssReferenceTimeOnly;
 } val;
} NhuUE_Positioning_PositionEstimateInfo_v770extreferenceTimeOptionsr7referenceTime;

typedef struct NhuUE_Positioning_PositionEstimateInfo_v770extreferenceTimeOptionsr7
{
 TknPres pres;
 NhuUE_Positioning_PositionEstimateInfo_v770extreferenceTimeOptionsr7referenceTime referenceTime;
 NhuPositionEstimate positionEstimate;
} NhuUE_Positioning_PositionEstimateInfo_v770extreferenceTimeOptionsr7;

typedef struct NhuUE_Positioning_PositionEstimateInfo_v770extreferenceTimeOptions
{
 TknU8 choice;
 union {
  NhuUE_Positioning_PositionEstimateInfo_v770extreferenceTimeOptionsr7 r7;
 } val;
} NhuUE_Positioning_PositionEstimateInfo_v770extreferenceTimeOptions;


typedef TknStrBSXL NhuUE_Positioning_PositionEstimateInfo_v770extpositionData;
typedef struct NhuUE_Positioning_PositionEstimateInfo_v770ext
{
 TknPres pres;
 NhuUE_Positioning_PositionEstimateInfo_v770extreferenceTimeOptions referenceTimeOptions;
 NhuUE_Positioning_PositionEstimateInfo_v770extpositionData positionData;
 NhuVelocityEstimate velocityEstimate;
 NhuUE_Positioning_GPS_ReferenceTimeUncertainty ue_Positioning_GPS_ReferenceTimeUncertainty;
} NhuUE_Positioning_PositionEstimateInfo_v770ext;

typedef struct NhuUE_Positioning_GPS_MeasurementResults_v770ext
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTimeUncertainty ue_Positioning_GPS_ReferenceTimeUncertainty;
} NhuUE_Positioning_GPS_MeasurementResults_v770ext;


typedef TknU32 NhuGANSSMeasurementParamsMembersatId;


typedef TknU32 NhuGANSSMeasurementParamsMembercSurNzero;


typedef enum enumNhuGANSSMeasurementParamsMembermultipathIndicator
{
 NhuGANSSMeasurementParamsMembermultipathIndicatornmEnum,
 NhuGANSSMeasurementParamsMembermultipathIndicatorlowEnum,
 NhuGANSSMeasurementParamsMembermultipathIndicatormediumEnum,
 NhuGANSSMeasurementParamsMembermultipathIndicatorhighEnum
} EnumNhuGANSSMeasurementParamsMembermultipathIndicator;
typedef TknU32 NhuGANSSMeasurementParamsMembermultipathIndicator;


typedef TknStrBSXL NhuGANSSMeasurementParamsMembercarrierQualityInd;

typedef TknU32 NhuGANSSMeasurementParamsMemberganssCodePhase;


typedef TknU32 NhuGANSSMeasurementParamsMemberganssIntegerCodePhase;


typedef TknU32 NhuGANSSMeasurementParamsMembercodePhaseRmsErr;


typedef TknS32 NhuGANSSMeasurementParamsMemberdoppler;


typedef TknU32 NhuGANSSMeasurementParamsMemberadr;

typedef struct NhuGANSSMeasurementParamsMember
{
 TknPres pres;
 NhuGANSSMeasurementParamsMembersatId satId;
 NhuGANSSMeasurementParamsMembercSurNzero cSurNzero;
 NhuGANSSMeasurementParamsMembermultipathIndicator multipathIndicator;
 NhuGANSSMeasurementParamsMembercarrierQualityInd carrierQualityInd;
 NhuGANSSMeasurementParamsMemberganssCodePhase ganssCodePhase;
 NhuGANSSMeasurementParamsMemberganssIntegerCodePhase ganssIntegerCodePhase;
 NhuGANSSMeasurementParamsMembercodePhaseRmsErr codePhaseRmsErr;
 NhuGANSSMeasurementParamsMemberdoppler doppler;
 NhuGANSSMeasurementParamsMemberadr adr;
} NhuGANSSMeasurementParamsMember;

typedef struct NhuGANSSMeasurementParams
{
 TknU16 noComp;
 NhuGANSSMeasurementParamsMember *member;
}NhuGANSSMeasurementParams;


typedef TknU32 NhuGANSSMeasurementSignalLstMemberganssCodePhaseAmbiguity;

typedef struct NhuGANSSMeasurementSignalLstMember
{
 TknPres pres;
 NhuGANSS_Signal_Id ganssSignalId;
 NhuGANSSMeasurementSignalLstMemberganssCodePhaseAmbiguity ganssCodePhaseAmbiguity;
 NhuGANSSMeasurementParams ganssMeasurementParams;
} NhuGANSSMeasurementSignalLstMember;

typedef struct NhuGANSSMeasurementSignalLst
{
 TknU16 noComp;
 NhuGANSSMeasurementSignalLstMember *member;
}NhuGANSSMeasurementSignalLst;


typedef TknU32 NhuGANSSGenericMeasurementInfoMemberganssId;

typedef struct NhuGANSSGenericMeasurementInfoMember
{
 TknPres pres;
 NhuGANSSGenericMeasurementInfoMemberganssId ganssId;
 NhuGANSSMeasurementSignalLst ganssMeasurementSignalLst;
} NhuGANSSGenericMeasurementInfoMember;

typedef struct NhuGANSSGenericMeasurementInfo
{
 TknU16 noComp;
 NhuGANSSGenericMeasurementInfoMember *member;
}NhuGANSSGenericMeasurementInfo;

typedef struct NhuUE_Positioning_GANSS_MeasuredResultsreferenceTime
{
 TknU8 choice;
 union {
  NhuUTRAN_GANSSReferenceTime utran_GANSSReferenceTimeResult;
  NhuGANSSReferenceTimeOnly ganssReferenceTimeOnly;
 } val;
} NhuUE_Positioning_GANSS_MeasuredResultsreferenceTime;

typedef struct NhuUE_Positioning_GANSS_MeasuredResults
{
 TknPres pres;
 NhuUE_Positioning_GANSS_MeasuredResultsreferenceTime referenceTime;
 NhuGANSSGenericMeasurementInfo ganssGenericMeasurementInfo;
} NhuUE_Positioning_GANSS_MeasuredResults;

typedef struct NhuUE_Positioning_MeasurementEventResults_v770ext
{
 TknU8 choice;
 union {
  NhuUE_Positioning_PositionEstimateInfo_v770ext event7a;
  NhuUE_Positioning_GPS_MeasurementResults_v770ext event7c;
  NhuUE_Positioning_GANSS_MeasuredResults event7d;
 } val;
} NhuUE_Positioning_MeasurementEventResults_v770ext;

typedef struct NhuEventResults_v770ext
{
 TknU8 choice;
 union {
  NhuUE_Positioning_MeasurementEventResults_v770ext ue_positioning_MeasurementEventResults;
 } val;
} NhuEventResults_v770ext;


typedef TknU32 NhuGANSSMeasurementParams_v860extMemberganssIntegerCodePhaseExt;

typedef struct NhuGANSSMeasurementParams_v860extMember
{
 TknPres pres;
 NhuGANSSMeasurementParams_v860extMemberganssIntegerCodePhaseExt ganssIntegerCodePhaseExt;
} NhuGANSSMeasurementParams_v860extMember;

typedef struct NhuGANSSMeasurementParams_v860ext
{
 TknU16 noComp;
 NhuGANSSMeasurementParams_v860extMember *member;
}NhuGANSSMeasurementParams_v860ext;


typedef TknU32 NhuGANSSMeasurementSignalLst_v860extMemberganssCodePhaseAmbiguityExt;

typedef struct NhuGANSSMeasurementSignalLst_v860extMember
{
 TknPres pres;
 NhuGANSSMeasurementSignalLst_v860extMemberganssCodePhaseAmbiguityExt ganssCodePhaseAmbiguityExt;
 NhuGANSSMeasurementParams_v860ext ganssMeasurementParams;
} NhuGANSSMeasurementSignalLst_v860extMember;

typedef struct NhuGANSSMeasurementSignalLst_v860ext
{
 TknU16 noComp;
 NhuGANSSMeasurementSignalLst_v860extMember *member;
}NhuGANSSMeasurementSignalLst_v860ext;

typedef struct NhuGANSSGenericMeasurementInfo_v860extMember
{
 TknPres pres;
 NhuGANSSMeasurementSignalLst_v860ext ganssMeasurementSignalLst;
} NhuGANSSGenericMeasurementInfo_v860extMember;

typedef struct NhuGANSSGenericMeasurementInfo_v860ext
{
 TknU16 noComp;
 NhuGANSSGenericMeasurementInfo_v860extMember *member;
}NhuGANSSGenericMeasurementInfo_v860ext;

typedef struct NhuUE_Positioning_GANSS_MeasuredResults_v860ext
{
 TknPres pres;
 NhuGANSSGenericMeasurementInfo_v860ext ganssGenericMeasurementInfo;
} NhuUE_Positioning_GANSS_MeasuredResults_v860ext;

typedef struct NhuUE_Positioning_MeasurementEventResults_v860ext
{
 TknU8 choice;
 union {
  NhuUE_Positioning_GANSS_MeasuredResults_v860ext event7d;
 } val;
} NhuUE_Positioning_MeasurementEventResults_v860ext;

typedef struct NhuEventResults_v860ext
{
 TknU8 choice;
 union {
  NhuUE_Positioning_MeasurementEventResults_v860ext ue_positioning_MeasurementEventResults;
 } val;
} NhuEventResults_v860ext;


typedef enum enumNhuInterFreqEventResults_va40extdetectedSetTrigger
{
 NhuInterFreqEventResults_va40extdetectedSetTriggertrueEnum
} EnumNhuInterFreqEventResults_va40extdetectedSetTrigger;
typedef TknU32 NhuInterFreqEventResults_va40extdetectedSetTrigger;

typedef struct NhuInterFreqEventResults_va40ext
{
 TknPres pres;
 NhuInterFreqEventResults_va40extdetectedSetTrigger detectedSetTrigger;
} NhuInterFreqEventResults_va40ext;

typedef struct NhuEventResults_va40ext
{
 TknU8 choice;
 union {
  NhuInterFreqEventResults_va40ext interFreqEventResults;
 } val;
} NhuEventResults_va40ext;

typedef struct NhuIntraFreqEventResultsOnSecUlFreq
{
 TknPres pres;
 NhuEventIDIntraFreq eventID;
 NhuCellMeasurementEventResultsOnSecUlFreq cellMeasurementEventResultsOnSecUlFreq;
} NhuIntraFreqEventResultsOnSecUlFreq;

typedef struct NhuEventResultsOnSecUlFreq
{
 TknPres pres;
 NhuIntraFreqEventResultsOnSecUlFreq intraFreqEventResults;
} NhuEventResultsOnSecUlFreq;


typedef TknS32 NhuExtraDopplerdopplerFirstOrder;


typedef enum enumNhuExtraDopplerdopplerUncertainty
{
 NhuExtraDopplerdopplerUncertaintydopU40Enum,
 NhuExtraDopplerdopplerUncertaintydopU20Enum,
 NhuExtraDopplerdopplerUncertaintydopU10Enum,
 NhuExtraDopplerdopplerUncertaintydopU5Enum,
 NhuExtraDopplerdopplerUncertaintydopU2_5Enum,
 NhuExtraDopplerdopplerUncertaintyspare3Enum,
 NhuExtraDopplerdopplerUncertaintyspare2Enum,
 NhuExtraDopplerdopplerUncertaintyspare1Enum
} EnumNhuExtraDopplerdopplerUncertainty;
typedef TknU32 NhuExtraDopplerdopplerUncertainty;

typedef struct NhuExtraDoppler
{
 TknPres pres;
 NhuExtraDopplerdopplerFirstOrder dopplerFirstOrder;
 NhuExtraDopplerdopplerUncertainty dopplerUncertainty;
} NhuExtraDoppler;


typedef enum enumNhu3gRAT_Typ
{
 NhuRAT_TypgsmEnum,
 NhuRAT_Typis2000Enum
} EnumNhu3gRAT_Typ;
typedef TknU32 Nhu3gRAT_Typ;


typedef TknU32 NhuFACH_MeasurementOccasionInfofACH_meas_occasion_coeff;


typedef TknU8 NhuFACH_MeasurementOccasionInfointer_freq_FDD_meas_ind;


typedef TknU8 NhuFACH_MeasurementOccasionInfointer_freq_TDD_meas_ind;

typedef struct NhuFACH_MeasurementOccasionInfointer_RAT_meas_ind
{
 TknU16 noComp;
 Nhu3gRAT_Typ *member;
}NhuFACH_MeasurementOccasionInfointer_RAT_meas_ind;

typedef struct NhuFACH_MeasurementOccasionInfo
{
 TknPres pres;
 NhuFACH_MeasurementOccasionInfofACH_meas_occasion_coeff fACH_meas_occasion_coeff;
 NhuFACH_MeasurementOccasionInfointer_freq_FDD_meas_ind inter_freq_FDD_meas_ind;
 NhuFACH_MeasurementOccasionInfointer_freq_TDD_meas_ind inter_freq_TDD_meas_ind;
 NhuFACH_MeasurementOccasionInfointer_RAT_meas_ind inter_RAT_meas_ind;
} NhuFACH_MeasurementOccasionInfo;


typedef TknU8 NhuFACH_MeasurementOccasionInfo_LCR_r4_extinter_freq_TDD128_meas_ind;

typedef struct NhuFACH_MeasurementOccasionInfo_LCR_r4_ext
{
 TknPres pres;
 NhuFACH_MeasurementOccasionInfo_LCR_r4_extinter_freq_TDD128_meas_ind inter_freq_TDD128_meas_ind;
} NhuFACH_MeasurementOccasionInfo_LCR_r4_ext;


typedef enum enumNhu3gFilterCoefficient
{
 Nhu3gFilterCoefficientfc0Enum,
 Nhu3gFilterCoefficientfc1Enum,
 Nhu3gFilterCoefficientfc2Enum,
 Nhu3gFilterCoefficientfc3Enum,
 Nhu3gFilterCoefficientfc4Enum,
 Nhu3gFilterCoefficientfc5Enum,
 Nhu3gFilterCoefficientfc6Enum,
 Nhu3gFilterCoefficientfc7Enum,
 Nhu3gFilterCoefficientfc8Enum,
 Nhu3gFilterCoefficientfc9Enum,
 Nhu3gFilterCoefficientfc11Enum,
 Nhu3gFilterCoefficientfc13Enum,
 Nhu3gFilterCoefficientfc15Enum,
 Nhu3gFilterCoefficientfc17Enum,
 Nhu3gFilterCoefficientfc19Enum,
 Nhu3gFilterCoefficientspare1Enum
} EnumNhu3gFilterCoefficient;
typedef TknU32 Nhu3gFilterCoefficient;


typedef TknU32 NhuFineSFN_SFN;


typedef enum enumNhuFreqQualityEstimateQuantity_FDD
{
 NhuFreqQualityEstimateQuantity_FDDcpich_Ec_N0Enum,
 NhuFreqQualityEstimateQuantity_FDDcpich_RSCPEnum
} EnumNhuFreqQualityEstimateQuantity_FDD;
typedef TknU32 NhuFreqQualityEstimateQuantity_FDD;


typedef enum enumNhuFreqQualityEstimateQuantity_TDD
{
 NhuFreqQualityEstimateQuantity_TDDprimaryCCPCH_RSCPEnum
} EnumNhuFreqQualityEstimateQuantity_TDD;
typedef TknU32 NhuFreqQualityEstimateQuantity_TDD;


typedef TknU32 NhuReqDataBitAssistanceganssDataBitInterval;

typedef TknU32 NhuReqDataBitAssistanceganssSatelliteInfoMember;

typedef struct NhuReqDataBitAssistanceganssSatelliteInfo
{
 TknU16 noComp;
 NhuReqDataBitAssistanceganssSatelliteInfoMember *member;
}NhuReqDataBitAssistanceganssSatelliteInfo;

typedef struct NhuReqDataBitAssistance
{
 TknPres pres;
 NhuDGANSS_Sig_Id_Req ganssSignalID;
 NhuReqDataBitAssistanceganssDataBitInterval ganssDataBitInterval;
 NhuReqDataBitAssistanceganssSatelliteInfo ganssSatelliteInfo;
} NhuReqDataBitAssistance;


typedef TknU32 NhuGanssDataBitsganssTod;

typedef struct NhuGanssDataBits
{
 TknPres pres;
 NhuGanssDataBitsganssTod ganssTod;
 NhuReqDataBitAssistance dataBitAssistance;
} NhuGanssDataBits;


typedef TknStrBSXL NhuGANSSDecipheringKeyscurrentDecipheringKey;

typedef TknStrBSXL NhuGANSSDecipheringKeysnextDecipheringKey;
typedef struct NhuGANSSDecipheringKeys
{
 TknPres pres;
 NhuGANSSDecipheringKeyscurrentDecipheringKey currentDecipheringKey;
 NhuGANSSDecipheringKeysnextDecipheringKey nextDecipheringKey;
} NhuGANSSDecipheringKeys;


typedef TknU32 NhuUE_Positioning_GANSS_TimeModelganss_timeModelreferenceTime;


typedef TknS32 NhuUE_Positioning_GANSS_TimeModelganss_t_a0;


typedef TknS32 NhuUE_Positioning_GANSS_TimeModelganss_t_a1;


typedef TknS32 NhuUE_Positioning_GANSS_TimeModelganss_t_a2;


typedef enum enumNhuUE_Positioning_GANSS_TimeModelgnss_to_id
{
 NhuUE_Positioning_GANSS_TimeModelgnss_to_idgpsEnum,
 NhuUE_Positioning_GANSS_TimeModelgnss_to_idgalileoEnum,
 NhuUE_Positioning_GANSS_TimeModelgnss_to_idqzssEnum,
 NhuUE_Positioning_GANSS_TimeModelgnss_to_idglonassEnum,
 NhuUE_Positioning_GANSS_TimeModelgnss_to_idspare4Enum,
 NhuUE_Positioning_GANSS_TimeModelgnss_to_idspare3Enum,
 NhuUE_Positioning_GANSS_TimeModelgnss_to_idspare2Enum,
 NhuUE_Positioning_GANSS_TimeModelgnss_to_idspare1Enum
} EnumNhuUE_Positioning_GANSS_TimeModelgnss_to_id;
typedef TknU32 NhuUE_Positioning_GANSS_TimeModelgnss_to_id;


typedef TknU32 NhuUE_Positioning_GANSS_TimeModelganss_wk_number;

typedef struct NhuUE_Positioning_GANSS_TimeModel
{
 TknPres pres;
 NhuUE_Positioning_GANSS_TimeModelganss_timeModelreferenceTime ganss_timeModelreferenceTime;
 NhuUE_Positioning_GANSS_TimeModelganss_t_a0 ganss_t_a0;
 NhuUE_Positioning_GANSS_TimeModelganss_t_a1 ganss_t_a1;
 NhuUE_Positioning_GANSS_TimeModelganss_t_a2 ganss_t_a2;
 NhuUE_Positioning_GANSS_TimeModelgnss_to_id gnss_to_id;
 NhuUE_Positioning_GANSS_TimeModelganss_wk_number ganss_wk_number;
} NhuUE_Positioning_GANSS_TimeModel;

typedef struct NhuGANSSTimeModelsLst
{
 TknU16 noComp;
 NhuUE_Positioning_GANSS_TimeModel *member;
}NhuGANSSTimeModelsLst;


typedef TknU32 NhuUE_Positioning_DGANSSCorrectionsdganssreferencetime;

typedef struct NhuUE_Positioning_DGANSSCorrections
{
 TknPres pres;
 NhuUE_Positioning_DGANSSCorrectionsdganssreferencetime dganssreferencetime;
 NhuDGANSSInfoLst dganssInfoLst;
} NhuUE_Positioning_DGANSSCorrections;


typedef TknStrBSXL NhuSatellite_clock_modelt_oc;

typedef TknStrBSXL NhuSatellite_clock_modelaf2;

typedef TknStrBSXL NhuSatellite_clock_modelaf1;

typedef TknStrBSXL NhuSatellite_clock_modelaf0;

typedef TknStrBSXL NhuSatellite_clock_modeltgd;

typedef TknU32 NhuSatellite_clock_modelmodel_id;

typedef struct NhuSatellite_clock_model
{
 TknPres pres;
 NhuSatellite_clock_modelt_oc t_oc;
 NhuSatellite_clock_modelaf2 af2;
 NhuSatellite_clock_modelaf1 af1;
 NhuSatellite_clock_modelaf0 af0;
 NhuSatellite_clock_modeltgd tgd;
 NhuSatellite_clock_modelmodel_id model_id;
} NhuSatellite_clock_model;

typedef struct NhuSatellite_clock_modelLst
{
 TknU16 noComp;
 NhuSatellite_clock_model *member;
}NhuSatellite_clock_modelLst;

typedef struct NhuUE_Positioning_GANSS_ClockModel
{
 TknPres pres;
 NhuSatellite_clock_modelLst satellite_clock_modelLst;
} NhuUE_Positioning_GANSS_ClockModel;


typedef TknStrBSXL NhuKeplerianParamstoe_nav;

typedef TknStrBSXL NhuKeplerianParamsganss_omega_nav;

typedef TknStrBSXL NhuKeplerianParamsdelta_n_nav;

typedef TknStrBSXL NhuKeplerianParamsm_zero_nav;

typedef TknStrBSXL NhuKeplerianParamsomegadot_nav;

typedef TknStrBSXL NhuKeplerianParamsganss_e_nav;

typedef TknStrBSXL NhuKeplerianParamsidot_nav;

typedef TknStrBSXL NhuKeplerianParamsa_sqrt_nav;

typedef TknStrBSXL NhuKeplerianParamsi_zero_nav;

typedef TknStrBSXL NhuKeplerianParamsomega_zero_nav;

typedef TknStrBSXL NhuKeplerianParamsc_rs_nav;

typedef TknStrBSXL NhuKeplerianParamsc_is_nav;

typedef TknStrBSXL NhuKeplerianParamsc_us_nav;

typedef TknStrBSXL NhuKeplerianParamsc_rc_nav;

typedef TknStrBSXL NhuKeplerianParamsc_ic_nav;

typedef TknStrBSXL NhuKeplerianParamsc_uc_nav;
typedef struct NhuKeplerianParams
{
 TknPres pres;
 NhuKeplerianParamstoe_nav toe_nav;
 NhuKeplerianParamsganss_omega_nav ganss_omega_nav;
 NhuKeplerianParamsdelta_n_nav delta_n_nav;
 NhuKeplerianParamsm_zero_nav m_zero_nav;
 NhuKeplerianParamsomegadot_nav omegadot_nav;
 NhuKeplerianParamsganss_e_nav ganss_e_nav;
 NhuKeplerianParamsidot_nav idot_nav;
 NhuKeplerianParamsa_sqrt_nav a_sqrt_nav;
 NhuKeplerianParamsi_zero_nav i_zero_nav;
 NhuKeplerianParamsomega_zero_nav omega_zero_nav;
 NhuKeplerianParamsc_rs_nav c_rs_nav;
 NhuKeplerianParamsc_is_nav c_is_nav;
 NhuKeplerianParamsc_us_nav c_us_nav;
 NhuKeplerianParamsc_rc_nav c_rc_nav;
 NhuKeplerianParamsc_ic_nav c_ic_nav;
 NhuKeplerianParamsc_uc_nav c_uc_nav;
} NhuKeplerianParams;

typedef struct NhuUE_Positioning_GANSS_OrbitModel
{
 TknPres pres;
 NhuKeplerianParams keplerianParams;
} NhuUE_Positioning_GANSS_OrbitModel;


typedef TknU32 NhuGanss_Sat_Info_NavsatId;


typedef TknStrBSXL NhuGanss_Sat_Info_NavsvHealth;

typedef TknStrBSXL NhuGanss_Sat_Info_Naviod;
typedef struct NhuGanss_Sat_Info_Nav
{
 TknPres pres;
 NhuGanss_Sat_Info_NavsatId satId;
 NhuGanss_Sat_Info_NavsvHealth svHealth;
 NhuGanss_Sat_Info_Naviod iod;
 NhuUE_Positioning_GANSS_ClockModel ganssClockModel;
 NhuUE_Positioning_GANSS_OrbitModel ganssOrbitModel;
} NhuGanss_Sat_Info_Nav;

typedef struct NhuGanss_Sat_Info_NavLst
{
 TknU16 noComp;
 NhuGanss_Sat_Info_Nav *member;
}NhuGanss_Sat_Info_NavLst;


typedef enum enumNhuUE_Positioning_GANSS_NavigationModelnon_broadcastInd
{
 NhuUE_Positioning_GANSS_NavigationModelnon_broadcastIndtrueEnum
} EnumNhuUE_Positioning_GANSS_NavigationModelnon_broadcastInd;
typedef TknU32 NhuUE_Positioning_GANSS_NavigationModelnon_broadcastInd;

typedef struct NhuUE_Positioning_GANSS_NavigationModel
{
 TknPres pres;
 NhuUE_Positioning_GANSS_NavigationModelnon_broadcastInd non_broadcastInd;
 NhuGanss_Sat_Info_NavLst ganssSatInfoNavLst;
} NhuUE_Positioning_GANSS_NavigationModel;


typedef TknU32 NhuUE_Positioning_GANSS_RealTimeIntegrityMemberbad_ganss_satId;


typedef TknStrBSXL NhuUE_Positioning_GANSS_RealTimeIntegrityMemberbad_ganss_signalId;
typedef struct NhuUE_Positioning_GANSS_RealTimeIntegrityMember
{
 TknPres pres;
 NhuUE_Positioning_GANSS_RealTimeIntegrityMemberbad_ganss_satId bad_ganss_satId;
 NhuUE_Positioning_GANSS_RealTimeIntegrityMemberbad_ganss_signalId bad_ganss_signalId;
} NhuUE_Positioning_GANSS_RealTimeIntegrityMember;

typedef struct NhuUE_Positioning_GANSS_RealTimeIntegrity
{
 TknU16 noComp;
 NhuUE_Positioning_GANSS_RealTimeIntegrityMember *member;
}NhuUE_Positioning_GANSS_RealTimeIntegrity;


typedef TknU32 NhuUE_Positioning_GANSS_Data_Bit_Assistanceganss_tod;

typedef struct NhuUE_Positioning_GANSS_Data_Bit_Assistance
{
 TknPres pres;
 NhuUE_Positioning_GANSS_Data_Bit_Assistanceganss_tod ganss_tod;
 NhuDataBitAssistanceLst dataBitAssistanceLst;
} NhuUE_Positioning_GANSS_Data_Bit_Assistance;


typedef TknU32 NhuGANSSSatelliteInfoganssSatId;


typedef TknS32 NhuGANSSSatelliteInfodopplerZeroOrder;


typedef TknU32 NhuGANSSSatelliteInfocodePhase;


typedef TknU32 NhuGANSSSatelliteInfointegerCodePhase;


typedef TknStrBSXL NhuGANSSSatelliteInfocodePhaseSearchWindow;
typedef struct NhuGANSSSatelliteInfo
{
 TknPres pres;
 NhuGANSSSatelliteInfoganssSatId ganssSatId;
 NhuGANSSSatelliteInfodopplerZeroOrder dopplerZeroOrder;
 NhuExtraDoppler extraDoppler;
 NhuGANSSSatelliteInfocodePhase codePhase;
 NhuGANSSSatelliteInfointegerCodePhase integerCodePhase;
 NhuGANSSSatelliteInfocodePhaseSearchWindow codePhaseSearchWindow;
 NhuAzimuthAndElevation azimuthandElevation;
} NhuGANSSSatelliteInfo;

typedef struct NhuGANSSSatelliteInfoLst
{
 TknU16 noComp;
 NhuGANSSSatelliteInfo *member;
}NhuGANSSSatelliteInfoLst;

typedef struct NhuUE_Positioning_GANSS_ReferenceMeasurementInfo
{
 TknPres pres;
 NhuGANSS_Signal_Id ganssSignalId;
 NhuGANSSSatelliteInfoLst satelliteInfoLst;
} NhuUE_Positioning_GANSS_ReferenceMeasurementInfo;


typedef TknU32 NhuUE_Positioning_GANSS_Almanacganss_wk_number;

typedef struct NhuUE_Positioning_GANSS_Almanac
{
 TknPres pres;
 NhuUE_Positioning_GANSS_Almanacganss_wk_number ganss_wk_number;
 NhuALM_keplerianParams alm_keplerianParams;
} NhuUE_Positioning_GANSS_Almanac;


typedef TknStrBSXL NhuUE_Positioning_GANSS_UTCModela_one_utc;

typedef TknStrBSXL NhuUE_Positioning_GANSS_UTCModela_zero_utc;

typedef TknStrBSXL NhuUE_Positioning_GANSS_UTCModelt_ot_utc;

typedef TknStrBSXL NhuUE_Positioning_GANSS_UTCModeldelta_t_ls_utc;

typedef TknStrBSXL NhuUE_Positioning_GANSS_UTCModelw_n_t_utc;

typedef TknStrBSXL NhuUE_Positioning_GANSS_UTCModelw_n_lsf_utc;

typedef TknStrBSXL NhuUE_Positioning_GANSS_UTCModeldn_utc;

typedef TknStrBSXL NhuUE_Positioning_GANSS_UTCModeldelta_t_lsf_utc;
typedef struct NhuUE_Positioning_GANSS_UTCModel
{
 TknPres pres;
 NhuUE_Positioning_GANSS_UTCModela_one_utc a_one_utc;
 NhuUE_Positioning_GANSS_UTCModela_zero_utc a_zero_utc;
 NhuUE_Positioning_GANSS_UTCModelt_ot_utc t_ot_utc;
 NhuUE_Positioning_GANSS_UTCModeldelta_t_ls_utc delta_t_ls_utc;
 NhuUE_Positioning_GANSS_UTCModelw_n_t_utc w_n_t_utc;
 NhuUE_Positioning_GANSS_UTCModelw_n_lsf_utc w_n_lsf_utc;
 NhuUE_Positioning_GANSS_UTCModeldn_utc dn_utc;
 NhuUE_Positioning_GANSS_UTCModeldelta_t_lsf_utc delta_t_lsf_utc;
} NhuUE_Positioning_GANSS_UTCModel;


typedef TknU32 NhuGANSSGenericDataganssId;

typedef struct NhuGANSSGenericData
{
 TknPres pres;
 NhuGANSSGenericDataganssId ganssId;
 NhuGANSSTimeModelsLst ganssTimeModelsLst;
 NhuUE_Positioning_DGANSSCorrections uePositioningDGANSSCorrections;
 NhuUE_Positioning_GANSS_NavigationModel uePositioningGANSSNavigationModel;
 NhuUE_Positioning_GANSS_RealTimeIntegrity uePositioningGANSSRealTimeIntegrity;
 NhuUE_Positioning_GANSS_Data_Bit_Assistance uePositioningGANSSDataBitAssistance;
 NhuUE_Positioning_GANSS_ReferenceMeasurementInfo uePositioningGANSSReferenceMeasurementInfo;
 NhuUE_Positioning_GANSS_Almanac uePositioningGANSSAlmanac;
 NhuUE_Positioning_GANSS_UTCModel uePositioningGANSSUTCModel;
} NhuGANSSGenericData;


typedef enum enumNhuUE_Positioning_GANSS_SBAS_ID
{
 NhuUE_Positioning_GANSS_SBAS_IDwaasEnum,
 NhuUE_Positioning_GANSS_SBAS_IDegnosEnum,
 NhuUE_Positioning_GANSS_SBAS_IDmsasEnum,
 NhuUE_Positioning_GANSS_SBAS_IDgaganEnum,
 NhuUE_Positioning_GANSS_SBAS_IDspare4Enum,
 NhuUE_Positioning_GANSS_SBAS_IDspare3Enum,
 NhuUE_Positioning_GANSS_SBAS_IDspare2Enum,
 NhuUE_Positioning_GANSS_SBAS_IDspare1Enum
} EnumNhuUE_Positioning_GANSS_SBAS_ID;
typedef TknU32 NhuUE_Positioning_GANSS_SBAS_ID;


typedef TknStrBSXL NhuNAVclockModelnavToc;

typedef TknStrBSXL NhuNAVclockModelnavaf2;

typedef TknStrBSXL NhuNAVclockModelnavaf1;

typedef TknStrBSXL NhuNAVclockModelnavaf0;

typedef TknStrBSXL NhuNAVclockModelnavTgd;
typedef struct NhuNAVclockModel
{
 TknPres pres;
 NhuNAVclockModelnavToc navToc;
 NhuNAVclockModelnavaf2 navaf2;
 NhuNAVclockModelnavaf1 navaf1;
 NhuNAVclockModelnavaf0 navaf0;
 NhuNAVclockModelnavTgd navTgd;
} NhuNAVclockModel;


typedef TknStrBSXL NhuGLONASSclockModelgloTau;

typedef TknStrBSXL NhuGLONASSclockModelgloGamma;

typedef TknStrBSXL NhuGLONASSclockModelgloDeltaTau;
typedef struct NhuGLONASSclockModel
{
 TknPres pres;
 NhuGLONASSclockModelgloTau gloTau;
 NhuGLONASSclockModelgloGamma gloGamma;
 NhuGLONASSclockModelgloDeltaTau gloDeltaTau;
} NhuGLONASSclockModel;


typedef TknStrBSXL NhuSBASclockModelsbasTo;

typedef TknStrBSXL NhuSBASclockModelsbasAgfo;

typedef TknStrBSXL NhuSBASclockModelsbasAgf1;
typedef struct NhuSBASclockModel
{
 TknPres pres;
 NhuSBASclockModelsbasTo sbasTo;
 NhuSBASclockModelsbasAgfo sbasAgfo;
 NhuSBASclockModelsbasAgf1 sbasAgf1;
} NhuSBASclockModel;

typedef struct NhuUE_Positioning_GANSS_AddClockModels
{
 TknPres pres;
 NhuNAVclockModel navClockModel;
 NhuCNAVclockModel cnavClockModel;
 NhuGLONASSclockModel glonassClockModel;
 NhuSBASclockModel sbasClockModel;
} NhuUE_Positioning_GANSS_AddClockModels;


typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavURA;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavFitFlag;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavToe;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavOmega;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavDeltaN;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavM0;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavOmegaADot;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavE;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavIDot;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavAPowerHalf;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavI0;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavOmegaA0;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavCrs;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavCis;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavCus;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavCrc;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavCic;

typedef TknStrBSXL NhuNavModel_NAVKeplerianSetnavCuc;
typedef struct NhuNavModel_NAVKeplerianSet
{
 TknPres pres;
 NhuNavModel_NAVKeplerianSetnavURA navURA;
 NhuNavModel_NAVKeplerianSetnavFitFlag navFitFlag;
 NhuNavModel_NAVKeplerianSetnavToe navToe;
 NhuNavModel_NAVKeplerianSetnavOmega navOmega;
 NhuNavModel_NAVKeplerianSetnavDeltaN navDeltaN;
 NhuNavModel_NAVKeplerianSetnavM0 navM0;
 NhuNavModel_NAVKeplerianSetnavOmegaADot navOmegaADot;
 NhuNavModel_NAVKeplerianSetnavE navE;
 NhuNavModel_NAVKeplerianSetnavIDot navIDot;
 NhuNavModel_NAVKeplerianSetnavAPowerHalf navAPowerHalf;
 NhuNavModel_NAVKeplerianSetnavI0 navI0;
 NhuNavModel_NAVKeplerianSetnavOmegaA0 navOmegaA0;
 NhuNavModel_NAVKeplerianSetnavCrs navCrs;
 NhuNavModel_NAVKeplerianSetnavCis navCis;
 NhuNavModel_NAVKeplerianSetnavCus navCus;
 NhuNavModel_NAVKeplerianSetnavCrc navCrc;
 NhuNavModel_NAVKeplerianSetnavCic navCic;
 NhuNavModel_NAVKeplerianSetnavCuc navCuc;
} NhuNavModel_NAVKeplerianSet;


typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavTop;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavURAindex;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavDeltaA;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavAdot;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavDeltaNo;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavDeltaNoDot;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavMo;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavE;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavOmega;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavOMEGA0;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavDeltaOmegaDot;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavIo;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavIoDot;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavCis;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavCic;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavCrs;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavCrc;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavCus;

typedef TknStrBSXL NhuNavModel_CNAVKeplerianSetcnavCuc;
typedef struct NhuNavModel_CNAVKeplerianSet
{
 TknPres pres;
 NhuNavModel_CNAVKeplerianSetcnavTop cnavTop;
 NhuNavModel_CNAVKeplerianSetcnavURAindex cnavURAindex;
 NhuNavModel_CNAVKeplerianSetcnavDeltaA cnavDeltaA;
 NhuNavModel_CNAVKeplerianSetcnavAdot cnavAdot;
 NhuNavModel_CNAVKeplerianSetcnavDeltaNo cnavDeltaNo;
 NhuNavModel_CNAVKeplerianSetcnavDeltaNoDot cnavDeltaNoDot;
 NhuNavModel_CNAVKeplerianSetcnavMo cnavMo;
 NhuNavModel_CNAVKeplerianSetcnavE cnavE;
 NhuNavModel_CNAVKeplerianSetcnavOmega cnavOmega;
 NhuNavModel_CNAVKeplerianSetcnavOMEGA0 cnavOMEGA0;
 NhuNavModel_CNAVKeplerianSetcnavDeltaOmegaDot cnavDeltaOmegaDot;
 NhuNavModel_CNAVKeplerianSetcnavIo cnavIo;
 NhuNavModel_CNAVKeplerianSetcnavIoDot cnavIoDot;
 NhuNavModel_CNAVKeplerianSetcnavCis cnavCis;
 NhuNavModel_CNAVKeplerianSetcnavCic cnavCic;
 NhuNavModel_CNAVKeplerianSetcnavCrs cnavCrs;
 NhuNavModel_CNAVKeplerianSetcnavCrc cnavCrc;
 NhuNavModel_CNAVKeplerianSetcnavCus cnavCus;
 NhuNavModel_CNAVKeplerianSetcnavCuc cnavCuc;
} NhuNavModel_CNAVKeplerianSet;


typedef TknStrBSXL NhuNavModel_GLONASSecefgloEn;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloP1;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloP2;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloM;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloX;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloXdot;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloXdotdot;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloY;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloYdot;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloYdotdot;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloZ;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloZdot;

typedef TknStrBSXL NhuNavModel_GLONASSecefgloZdotdot;
typedef struct NhuNavModel_GLONASSecef
{
 TknPres pres;
 NhuNavModel_GLONASSecefgloEn gloEn;
 NhuNavModel_GLONASSecefgloP1 gloP1;
 NhuNavModel_GLONASSecefgloP2 gloP2;
 NhuNavModel_GLONASSecefgloM gloM;
 NhuNavModel_GLONASSecefgloX gloX;
 NhuNavModel_GLONASSecefgloXdot gloXdot;
 NhuNavModel_GLONASSecefgloXdotdot gloXdotdot;
 NhuNavModel_GLONASSecefgloY gloY;
 NhuNavModel_GLONASSecefgloYdot gloYdot;
 NhuNavModel_GLONASSecefgloYdotdot gloYdotdot;
 NhuNavModel_GLONASSecefgloZ gloZ;
 NhuNavModel_GLONASSecefgloZdot gloZdot;
 NhuNavModel_GLONASSecefgloZdotdot gloZdotdot;
} NhuNavModel_GLONASSecef;


typedef TknStrBSXL NhuNavModel_SBASecefsbasTo;

typedef TknStrBSXL NhuNavModel_SBASecefsbasAccuracy;

typedef TknStrBSXL NhuNavModel_SBASecefsbasXg;

typedef TknStrBSXL NhuNavModel_SBASecefsbasYg;

typedef TknStrBSXL NhuNavModel_SBASecefsbasZg;

typedef TknStrBSXL NhuNavModel_SBASecefsbasXgDot;

typedef TknStrBSXL NhuNavModel_SBASecefsbasYgDot;

typedef TknStrBSXL NhuNavModel_SBASecefsbasZgDot;

typedef TknStrBSXL NhuNavModel_SBASecefsbasXgDotDot;

typedef TknStrBSXL NhuNavModel_SBASecefsbagYgDotDot;

typedef TknStrBSXL NhuNavModel_SBASecefsbasZgDotDot;
typedef struct NhuNavModel_SBASecef
{
 TknPres pres;
 NhuNavModel_SBASecefsbasTo sbasTo;
 NhuNavModel_SBASecefsbasAccuracy sbasAccuracy;
 NhuNavModel_SBASecefsbasXg sbasXg;
 NhuNavModel_SBASecefsbasYg sbasYg;
 NhuNavModel_SBASecefsbasZg sbasZg;
 NhuNavModel_SBASecefsbasXgDot sbasXgDot;
 NhuNavModel_SBASecefsbasYgDot sbasYgDot;
 NhuNavModel_SBASecefsbasZgDot sbasZgDot;
 NhuNavModel_SBASecefsbasXgDotDot sbasXgDotDot;
 NhuNavModel_SBASecefsbagYgDotDot sbagYgDotDot;
 NhuNavModel_SBASecefsbasZgDotDot sbasZgDotDot;
} NhuNavModel_SBASecef;

typedef struct NhuUE_Positioning_GANSS_AddOrbitModels
{
 TknPres pres;
 NhuNavModel_NAVKeplerianSet navKeplerianSet;
 NhuNavModel_CNAVKeplerianSet cnavKeplerianSet;
 NhuNavModel_GLONASSecef glonassECEF;
 NhuNavModel_SBASecef sbasECEF;
} NhuUE_Positioning_GANSS_AddOrbitModels;


typedef TknU32 NhuGanss_Sat_Info_AddNavsatId;


typedef TknStrBSXL NhuGanss_Sat_Info_AddNavsvHealth;

typedef TknStrBSXL NhuGanss_Sat_Info_AddNaviod;
typedef struct NhuGanss_Sat_Info_AddNav
{
 TknPres pres;
 NhuGanss_Sat_Info_AddNavsatId satId;
 NhuGanss_Sat_Info_AddNavsvHealth svHealth;
 NhuGanss_Sat_Info_AddNaviod iod;
 NhuUE_Positioning_GANSS_AddClockModels ganssClockModel;
 NhuUE_Positioning_GANSS_AddOrbitModels ganssOrbitModel;
} NhuGanss_Sat_Info_AddNav;

typedef struct NhuGanss_Sat_Info_AddNavLst
{
 TknU16 noComp;
 NhuGanss_Sat_Info_AddNav *member;
}NhuGanss_Sat_Info_AddNavLst;


typedef enum enumNhuUE_Positioning_GANSS_AddNavigationModelsnon_broadcastInd
{
 NhuUE_Positioning_GANSS_AddNavigationModelsnon_broadcastIndtrueEnum
} EnumNhuUE_Positioning_GANSS_AddNavigationModelsnon_broadcastInd;
typedef TknU32 NhuUE_Positioning_GANSS_AddNavigationModelsnon_broadcastInd;

typedef struct NhuUE_Positioning_GANSS_AddNavigationModels
{
 TknPres pres;
 NhuUE_Positioning_GANSS_AddNavigationModelsnon_broadcastInd non_broadcastInd;
 NhuGanss_Sat_Info_AddNavLst ganssSatInfoNavLst;
} NhuUE_Positioning_GANSS_AddNavigationModels;

typedef struct NhuUE_Positioning_GANSS_Almanac_v860ext
{
 TknPres pres;
 NhuALM_NAVKeplerianSet alm_keplerianNAVAlmanac;
 NhuALM_ReducedKeplerianSet alm_keplerianReducedAlmanac;
 NhuALM_MidiAlmanacSet alm_keplerianMidiAlmanac;
 NhuALM_GlonassAlmanacSet alm_keplerianGLONASS;
 NhuALM_ECEFsbasAlmanacSet alm_ecefSBASAlmanac;
} NhuUE_Positioning_GANSS_Almanac_v860ext;


typedef TknStrBSXL NhuUTCmodelSet1utcA0;

typedef TknStrBSXL NhuUTCmodelSet1utcA1;

typedef TknStrBSXL NhuUTCmodelSet1utcA2;

typedef TknStrBSXL NhuUTCmodelSet1utcDeltaTls;

typedef TknStrBSXL NhuUTCmodelSet1utcTot;

typedef TknStrBSXL NhuUTCmodelSet1utcWNot;

typedef TknStrBSXL NhuUTCmodelSet1utcWNlsf;

typedef TknStrBSXL NhuUTCmodelSet1utcDN;

typedef TknStrBSXL NhuUTCmodelSet1utcDeltaTlsf;
typedef struct NhuUTCmodelSet1
{
 TknPres pres;
 NhuUTCmodelSet1utcA0 utcA0;
 NhuUTCmodelSet1utcA1 utcA1;
 NhuUTCmodelSet1utcA2 utcA2;
 NhuUTCmodelSet1utcDeltaTls utcDeltaTls;
 NhuUTCmodelSet1utcTot utcTot;
 NhuUTCmodelSet1utcWNot utcWNot;
 NhuUTCmodelSet1utcWNlsf utcWNlsf;
 NhuUTCmodelSet1utcDN utcDN;
 NhuUTCmodelSet1utcDeltaTlsf utcDeltaTlsf;
} NhuUTCmodelSet1;


typedef TknStrBSXL NhuUTCmodelSet2nA;

typedef TknStrBSXL NhuUTCmodelSet2tauC;

typedef TknStrBSXL NhuUTCmodelSet2kp;
typedef struct NhuUTCmodelSet2
{
 TknPres pres;
 NhuUTCmodelSet2nA nA;
 NhuUTCmodelSet2tauC tauC;
 NhuDeltaUT1 deltaUT1;
 NhuUTCmodelSet2kp kp;
} NhuUTCmodelSet2;


typedef TknStrBSXL NhuUTCmodelSet3utcA1wnt;

typedef TknStrBSXL NhuUTCmodelSet3utcA0wnt;

typedef TknStrBSXL NhuUTCmodelSet3utcTot;

typedef TknStrBSXL NhuUTCmodelSet3utcWNt;

typedef TknStrBSXL NhuUTCmodelSet3utcDeltaTls;

typedef TknStrBSXL NhuUTCmodelSet3utcWNlsf;

typedef TknStrBSXL NhuUTCmodelSet3utcDN;

typedef TknStrBSXL NhuUTCmodelSet3utcDeltaTlsf;

typedef TknStrBSXL NhuUTCmodelSet3utcStandardID;
typedef struct NhuUTCmodelSet3
{
 TknPres pres;
 NhuUTCmodelSet3utcA1wnt utcA1wnt;
 NhuUTCmodelSet3utcA0wnt utcA0wnt;
 NhuUTCmodelSet3utcTot utcTot;
 NhuUTCmodelSet3utcWNt utcWNt;
 NhuUTCmodelSet3utcDeltaTls utcDeltaTls;
 NhuUTCmodelSet3utcWNlsf utcWNlsf;
 NhuUTCmodelSet3utcDN utcDN;
 NhuUTCmodelSet3utcDeltaTlsf utcDeltaTlsf;
 NhuUTCmodelSet3utcStandardID utcStandardID;
} NhuUTCmodelSet3;

typedef struct NhuUE_Positioning_GANSS_AddUTCModels
{
 TknPres pres;
 NhuUTCmodelSet1 utcModel1;
 NhuUTCmodelSet2 utcModel2;
 NhuUTCmodelSet3 utcModel3;
} NhuUE_Positioning_GANSS_AddUTCModels;

typedef struct NhuUE_Positioning_GANSS_AuxiliaryInfo
{
 TknU8 choice;
 union {
  NhuAuxInfoGANSS_ID1 ganssID1;
  NhuAuxInfoGANSS_ID3 ganssID3;
 } val;
} NhuUE_Positioning_GANSS_AuxiliaryInfo;

typedef struct NhuGANSSGenericData_v860ext
{
 TknPres pres;
 NhuUE_Positioning_GANSS_SBAS_ID uePositiningGANSSsbasID;
 NhuUE_Positioning_GANSS_AddNavigationModels uePositioningGANSSAddNavigationModels;
 NhuUE_Positioning_GANSS_Almanac_v860ext uePositioningGANSSAlmanac;
 NhuUE_Positioning_GANSS_AddUTCModels uePositioningGANSSAddUTCModels;
 NhuUE_Positioning_GANSS_AuxiliaryInfo uePositioningGANSSAuxiliaryInfo;
} NhuGANSSGenericData_v860ext;


typedef TknU32 NhuUE_Positioning_GANSS_Almanac_r8ganss_wk_number;

typedef struct NhuUE_Positioning_GANSS_Almanac_r8
{
 TknPres pres;
 NhuUE_Positioning_GANSS_Almanac_r8ganss_wk_number ganss_wk_number;
 NhuALM_keplerianParams alm_keplerianParams;
 NhuALM_NAVKeplerianSet alm_keplerianNAVAlmanac;
 NhuALM_ReducedKeplerianSet alm_keplerianReducedAlmanac;
 NhuALM_MidiAlmanacSet alm_keplerianMidiAlmanac;
 NhuALM_GlonassAlmanacSet alm_keplerianGLONASS;
 NhuALM_ECEFsbasAlmanacSet alm_ecefSBASAlmanac;
} NhuUE_Positioning_GANSS_Almanac_r8;


typedef TknU32 NhuGANSSGenericData_r8ganssId;

typedef struct NhuGANSSGenericData_r8
{
 TknPres pres;
 NhuGANSSGenericData_r8ganssId ganssId;
 NhuUE_Positioning_GANSS_SBAS_ID uePositiningGANSSsbasID;
 NhuGANSSTimeModelsLst ganssTimeModelsLst;
 NhuUE_Positioning_DGANSSCorrections uePositioningDGANSSCorrections;
 NhuUE_Positioning_GANSS_NavigationModel uePositioningGANSSNavigationModel;
 NhuUE_Positioning_GANSS_AddNavigationModels uePositioningGANSSAddNavigationModels;
 NhuUE_Positioning_GANSS_RealTimeIntegrity uePositioningGANSSRealTimeIntegrity;
 NhuUE_Positioning_GANSS_Data_Bit_Assistance uePositioningGANSSDataBitAssistance;
 NhuUE_Positioning_GANSS_ReferenceMeasurementInfo uePositioningGANSSReferenceMeasurementInfo;
 NhuUE_Positioning_GANSS_Almanac_r8 uePositioningGANSSAlmanac;
 NhuUE_Positioning_GANSS_UTCModel uePositioningGANSSUTCModel;
 NhuUE_Positioning_GANSS_AddUTCModels uePositioningGANSSAddUTCModels;
 NhuUE_Positioning_GANSS_AuxiliaryInfo uePositioningGANSSAuxiliaryInfo;
} NhuGANSSGenericData_r8;


typedef TknU32 NhuUE_Positioning_DGANSSCorrections_r9dganssreferencetime;

typedef struct NhuUE_Positioning_DGANSSCorrections_r9
{
 TknPres pres;
 NhuUE_Positioning_DGANSSCorrections_r9dganssreferencetime dganssreferencetime;
 NhuDGANSSInfoLst_r9 dganssInfoLst;
} NhuUE_Positioning_DGANSSCorrections_r9;


typedef TknU32 NhuGANSSGenericData_r9ganssId;

typedef struct NhuGANSSGenericData_r9
{
 TknPres pres;
 NhuGANSSGenericData_r9ganssId ganssId;
 NhuUE_Positioning_GANSS_SBAS_ID uePositiningGANSSsbasID;
 NhuGANSSTimeModelsLst ganssTimeModelsLst;
 NhuUE_Positioning_DGANSSCorrections_r9 uePositioningDGANSSCorrections;
 NhuUE_Positioning_GANSS_NavigationModel uePositioningGANSSNavigationModel;
 NhuUE_Positioning_GANSS_AddNavigationModels uePositioningGANSSAddNavigationModels;
 NhuUE_Positioning_GANSS_RealTimeIntegrity uePositioningGANSSRealTimeIntegrity;
 NhuUE_Positioning_GANSS_Data_Bit_Assistance uePositioningGANSSDataBitAssistance;
 NhuUE_Positioning_GANSS_ReferenceMeasurementInfo uePositioningGANSSReferenceMeasurementInfo;
 NhuUE_Positioning_GANSS_Almanac_r8 uePositioningGANSSAlmanac;
 NhuUE_Positioning_GANSS_UTCModel uePositioningGANSSUTCModel;
 NhuUE_Positioning_GANSS_AddUTCModels uePositioningGANSSAddUTCModels;
 NhuUE_Positioning_GANSS_AuxiliaryInfo uePositioningGANSSAuxiliaryInfo;
} NhuGANSSGenericData_r9;

typedef struct NhuUE_Positioning_DGANSSCorrections_v920ext
{
 TknPres pres;
 NhuDGANSSInfoLst_v920ext dganssInfoLst;
} NhuUE_Positioning_DGANSSCorrections_v920ext;

typedef struct NhuGANSSGenericData_v920ext
{
 TknPres pres;
 NhuUE_Positioning_DGANSSCorrections_v920ext uePositioningDGANSSCorrections;
} NhuGANSSGenericData_v920ext;


typedef TknS32 NhuUE_Positioning_GANSS_TimeModel_va40extdeltaT;

typedef struct NhuUE_Positioning_GANSS_TimeModel_va40ext
{
 TknPres pres;
 NhuUE_Positioning_GANSS_TimeModel_va40extdeltaT deltaT;
} NhuUE_Positioning_GANSS_TimeModel_va40ext;

typedef struct NhuGANSSTimeModelsLst_va40ext
{
 TknU16 noComp;
 NhuUE_Positioning_GANSS_TimeModel_va40ext *member;
}NhuGANSSTimeModelsLst_va40ext;

typedef struct NhuGANSSSatelliteInfo_va40ext
{
 TknPres pres;
 NhuAzimuthAndElevation_va40ext azimuthAndElevation;
} NhuGANSSSatelliteInfo_va40ext;

typedef struct NhuGANSSSatelliteInfoLst_va40ext
{
 TknU16 noComp;
 NhuGANSSSatelliteInfo_va40ext *member;
}NhuGANSSSatelliteInfoLst_va40ext;

typedef struct NhuUE_Positioning_GANSS_ReferenceMeasurementInfo_va40ext
{
 TknPres pres;
 NhuGANSSSatelliteInfoLst_va40ext satelliteInfoLst;
} NhuUE_Positioning_GANSS_ReferenceMeasurementInfo_va40ext;


typedef TknU8 NhuUE_Positioning_GANSS_Almanac_va40extcomplete_Almanac_Provided;

typedef struct NhuUE_Positioning_GANSS_Almanac_va40ext
{
 TknPres pres;
 NhuUE_Positioning_GANSS_Almanac_va40extcomplete_Almanac_Provided complete_Almanac_Provided;
} NhuUE_Positioning_GANSS_Almanac_va40ext;

typedef struct NhuGANSSGenericData_va40ext
{
 TknPres pres;
 NhuGANSSTimeModelsLst_va40ext ganssTimeModelsLst;
 NhuUE_Positioning_GANSS_ReferenceMeasurementInfo_va40ext uePositioningGANSSReferenceMeasurementInfo;
 NhuUE_Positioning_GANSS_Almanac_va40ext uePositioningGANSSAlmanac;
} NhuGANSSGenericData_va40ext;


typedef TknU32 NhuUE_Positioning_GANSS_TimeModel_r10ganss_timeModelreferenceTime;


typedef TknS32 NhuUE_Positioning_GANSS_TimeModel_r10ganss_t_a0;


typedef TknS32 NhuUE_Positioning_GANSS_TimeModel_r10ganss_t_a1;


typedef TknS32 NhuUE_Positioning_GANSS_TimeModel_r10ganss_t_a2;


typedef enum enumNhuUE_Positioning_GANSS_TimeModel_r10gnss_to_id
{
 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_idgpsEnum,
 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_idgalileoEnum,
 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_idqzssEnum,
 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_idglonassEnum,
 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_idspare4Enum,
 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_idspare3Enum,
 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_idspare2Enum,
 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_idspare1Enum
} EnumNhuUE_Positioning_GANSS_TimeModel_r10gnss_to_id;
typedef TknU32 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_id;


typedef TknU32 NhuUE_Positioning_GANSS_TimeModel_r10ganss_wk_number;


typedef TknS32 NhuUE_Positioning_GANSS_TimeModel_r10deltaT;

typedef struct NhuUE_Positioning_GANSS_TimeModel_r10
{
 TknPres pres;
 NhuUE_Positioning_GANSS_TimeModel_r10ganss_timeModelreferenceTime ganss_timeModelreferenceTime;
 NhuUE_Positioning_GANSS_TimeModel_r10ganss_t_a0 ganss_t_a0;
 NhuUE_Positioning_GANSS_TimeModel_r10ganss_t_a1 ganss_t_a1;
 NhuUE_Positioning_GANSS_TimeModel_r10ganss_t_a2 ganss_t_a2;
 NhuUE_Positioning_GANSS_TimeModel_r10gnss_to_id gnss_to_id;
 NhuUE_Positioning_GANSS_TimeModel_r10ganss_wk_number ganss_wk_number;
 NhuUE_Positioning_GANSS_TimeModel_r10deltaT deltaT;
} NhuUE_Positioning_GANSS_TimeModel_r10;

typedef struct NhuGANSSTimeModelsLst_r10
{
 TknU16 noComp;
 NhuUE_Positioning_GANSS_TimeModel_r10 *member;
}NhuGANSSTimeModelsLst_r10;


typedef TknU32 NhuGANSSSatelliteInfo_r10ganssSatId;


typedef TknS32 NhuGANSSSatelliteInfo_r10dopplerZeroOrder;


typedef TknU32 NhuGANSSSatelliteInfo_r10codePhase;


typedef TknU32 NhuGANSSSatelliteInfo_r10integerCodePhase;


typedef TknStrBSXL NhuGANSSSatelliteInfo_r10codePhaseSearchWindow;
typedef struct NhuGANSSSatelliteInfo_r10
{
 TknPres pres;
 NhuGANSSSatelliteInfo_r10ganssSatId ganssSatId;
 NhuGANSSSatelliteInfo_r10dopplerZeroOrder dopplerZeroOrder;
 NhuExtraDoppler extraDoppler;
 NhuGANSSSatelliteInfo_r10codePhase codePhase;
 NhuGANSSSatelliteInfo_r10integerCodePhase integerCodePhase;
 NhuGANSSSatelliteInfo_r10codePhaseSearchWindow codePhaseSearchWindow;
 NhuAzimuthAndElevation_r10 azimuthandElevation;
} NhuGANSSSatelliteInfo_r10;

typedef struct NhuGANSSSatelliteInfoLst_r10
{
 TknU16 noComp;
 NhuGANSSSatelliteInfo_r10 *member;
}NhuGANSSSatelliteInfoLst_r10;

typedef struct NhuUE_Positioning_GANSS_ReferenceMeasurementInfo_r10
{
 TknPres pres;
 NhuGANSS_Signal_Id ganssSignalId;
 NhuGANSSSatelliteInfoLst_r10 satelliteInfoLst;
} NhuUE_Positioning_GANSS_ReferenceMeasurementInfo_r10;


typedef TknU32 NhuUE_Positioning_GANSS_Almanac_r10ganss_wk_number;


typedef TknU8 NhuUE_Positioning_GANSS_Almanac_r10complete_Almanac_Provided;

typedef struct NhuUE_Positioning_GANSS_Almanac_r10
{
 TknPres pres;
 NhuUE_Positioning_GANSS_Almanac_r10ganss_wk_number ganss_wk_number;
 NhuUE_Positioning_GANSS_Almanac_r10complete_Almanac_Provided complete_Almanac_Provided;
 NhuALM_keplerianParams alm_keplerianParams;
 NhuALM_NAVKeplerianSet alm_keplerianNAVAlmanac;
 NhuALM_ReducedKeplerianSet alm_keplerianReducedAlmanac;
 NhuALM_MidiAlmanacSet alm_keplerianMidiAlmanac;
 NhuALM_GlonassAlmanacSet alm_keplerianGLONASS;
 NhuALM_ECEFsbasAlmanacSet alm_ecefSBASAlmanac;
} NhuUE_Positioning_GANSS_Almanac_r10;


typedef TknU32 NhuGANSSGenericData_r10ganssId;

typedef struct NhuGANSSGenericData_r10
{
 TknPres pres;
 NhuGANSSGenericData_r10ganssId ganssId;
 NhuUE_Positioning_GANSS_SBAS_ID uePositiningGANSSsbasID;
 NhuGANSSTimeModelsLst_r10 ganssTimeModelsLst;
 NhuUE_Positioning_DGANSSCorrections_r9 uePositioningDGANSSCorrections;
 NhuUE_Positioning_GANSS_NavigationModel uePositioningGANSSNavigationModel;
 NhuUE_Positioning_GANSS_AddNavigationModels uePositioningGANSSAddNavigationModels;
 NhuUE_Positioning_GANSS_RealTimeIntegrity uePositioningGANSSRealTimeIntegrity;
 NhuUE_Positioning_GANSS_Data_Bit_Assistance uePositioningGANSSDataBitAssistance;
 NhuUE_Positioning_GANSS_ReferenceMeasurementInfo_r10 uePositioningGANSSReferenceMeasurementInfo;
 NhuUE_Positioning_GANSS_Almanac_r10 uePositioningGANSSAlmanac;
 NhuUE_Positioning_GANSS_UTCModel uePositioningGANSSUTCModel;
 NhuUE_Positioning_GANSS_AddUTCModels uePositioningGANSSAddUTCModels;
 NhuUE_Positioning_GANSS_AuxiliaryInfo uePositioningGANSSAuxiliaryInfo;
} NhuGANSSGenericData_r10;

typedef struct NhuGANSSGenericDataLst
{
 TknU16 noComp;
 NhuGANSSGenericData *member;
}NhuGANSSGenericDataLst;

typedef struct NhuGANSSGenericDataLst_v860ext
{
 TknU16 noComp;
 NhuGANSSGenericData_v860ext *member;
}NhuGANSSGenericDataLst_v860ext;

typedef struct NhuGANSSGenericDataLst_r8
{
 TknU16 noComp;
 NhuGANSSGenericData_r8 *member;
}NhuGANSSGenericDataLst_r8;

typedef struct NhuGANSSGenericDataLst_r9
{
 TknU16 noComp;
 NhuGANSSGenericData_r9 *member;
}NhuGANSSGenericDataLst_r9;

typedef struct NhuGANSSGenericDataLst_v920ext
{
 TknU16 noComp;
 NhuGANSSGenericData_v920ext *member;
}NhuGANSSGenericDataLst_v920ext;

typedef struct NhuGANSSGenericDataLst_va40ext
{
 TknU16 noComp;
 NhuGANSSGenericData_va40ext *member;
}NhuGANSSGenericDataLst_va40ext;

typedef struct NhuGANSSGenericDataLst_r10
{
 TknU16 noComp;
 NhuGANSSGenericData_r10 *member;
}NhuGANSSGenericDataLst_r10;


typedef TknU32 NhuSatellitesLstRelatedDatasatId;


typedef TknU32 NhuSatellitesLstRelatedDataiod;

typedef struct NhuSatellitesLstRelatedData
{
 TknPres pres;
 NhuSatellitesLstRelatedDatasatId satId;
 NhuSatellitesLstRelatedDataiod iod;
} NhuSatellitesLstRelatedData;

typedef struct NhuSatellitesLstRelatedDataLst
{
 TknU16 noComp;
 NhuSatellitesLstRelatedData *member;
}NhuSatellitesLstRelatedDataLst;


typedef TknU32 NhuGanssNavigationModelAdditionalDataganssWeek;


typedef TknU32 NhuGanssNavigationModelAdditionalDataganssToe;


typedef TknU32 NhuGanssNavigationModelAdditionalDatat_toeLimit;

typedef struct NhuGanssNavigationModelAdditionalData
{
 TknPres pres;
 NhuGanssNavigationModelAdditionalDataganssWeek ganssWeek;
 NhuGanssNavigationModelAdditionalDataganssToe ganssToe;
 NhuGanssNavigationModelAdditionalDatat_toeLimit t_toeLimit;
 NhuSatellitesLstRelatedDataLst satellitesLstRelatedDataLst;
} NhuGanssNavigationModelAdditionalData;


typedef TknU32 NhuGanssReqGenericDataganssId;


typedef TknU8 NhuGanssReqGenericDataganssRealTimeIntegrity;


typedef TknU8 NhuGanssReqGenericDataganssAlmanac;


typedef TknU8 NhuGanssReqGenericDataganssNavigationModel;


typedef TknStrBSXL NhuGanssReqGenericDataganssTimeModelGNSS_GNSS;

typedef TknU8 NhuGanssReqGenericDataganssReferenceMeasurementInfo;


typedef TknU8 NhuGanssReqGenericDataganssUTCModel;

typedef struct NhuGanssReqGenericData
{
 TknPres pres;
 NhuGanssReqGenericDataganssId ganssId;
 NhuGanssReqGenericDataganssRealTimeIntegrity ganssRealTimeIntegrity;
 NhuDGANSS_Sig_Id_Req ganssDifferentialCorrection;
 NhuGanssReqGenericDataganssAlmanac ganssAlmanac;
 NhuGanssReqGenericDataganssNavigationModel ganssNavigationModel;
 NhuGanssReqGenericDataganssTimeModelGNSS_GNSS ganssTimeModelGNSS_GNSS;
 NhuGanssReqGenericDataganssReferenceMeasurementInfo ganssReferenceMeasurementInfo;
 NhuGanssDataBits ganssDataBits;
 NhuGanssReqGenericDataganssUTCModel ganssUTCModel;
 NhuGanssNavigationModelAdditionalData ganssNavigationModelAdditionalData;
} NhuGanssReqGenericData;


typedef enum enumNhuGanssReqGenericData_v860extganssAddNavigationModel
{
 NhuGanssReqGenericData_v860extganssAddNavigationModeltrueEnum
} EnumNhuGanssReqGenericData_v860extganssAddNavigationModel;
typedef TknU32 NhuGanssReqGenericData_v860extganssAddNavigationModel;


typedef enum enumNhuGanssReqGenericData_v860extganssAddUTCmodel
{
 NhuGanssReqGenericData_v860extganssAddUTCmodeltrueEnum
} EnumNhuGanssReqGenericData_v860extganssAddUTCmodel;
typedef TknU32 NhuGanssReqGenericData_v860extganssAddUTCmodel;


typedef enum enumNhuGanssReqGenericData_v860extganssAuxInfo
{
 NhuGanssReqGenericData_v860extganssAuxInfotrueEnum
} EnumNhuGanssReqGenericData_v860extganssAuxInfo;
typedef TknU32 NhuGanssReqGenericData_v860extganssAuxInfo;


typedef TknU32 NhuGanssReqGenericData_v860extganssAddADchoicesorbitModelID;


typedef TknU32 NhuGanssReqGenericData_v860extganssAddADchoicesclockModelID;


typedef TknU32 NhuGanssReqGenericData_v860extganssAddADchoicesutcModelID;


typedef TknU32 NhuGanssReqGenericData_v860extganssAddADchoicesalmanacModelID;

typedef struct NhuGanssReqGenericData_v860extganssAddADchoices
{
 TknPres pres;
 NhuGanssReqGenericData_v860extganssAddADchoicesorbitModelID orbitModelID;
 NhuGanssReqGenericData_v860extganssAddADchoicesclockModelID clockModelID;
 NhuGanssReqGenericData_v860extganssAddADchoicesutcModelID utcModelID;
 NhuGanssReqGenericData_v860extganssAddADchoicesalmanacModelID almanacModelID;
} NhuGanssReqGenericData_v860extganssAddADchoices;

typedef struct NhuGanssReqGenericData_v860ext
{
 TknPres pres;
 NhuUE_Positioning_GANSS_SBAS_ID sbasId;
 NhuGanssReqGenericData_v860extganssAddNavigationModel ganssAddNavigationModel;
 NhuGanssReqGenericData_v860extganssAddUTCmodel ganssAddUTCmodel;
 NhuGanssReqGenericData_v860extganssAuxInfo ganssAuxInfo;
 NhuGanssReqGenericData_v860extganssAddADchoices ganssAddADchoices;
} NhuGanssReqGenericData_v860ext;

typedef struct NhuGanssRqstedGenericAssistanceDataLst
{
 TknU16 noComp;
 NhuGanssReqGenericData *member;
}NhuGanssRqstedGenericAssistanceDataLst;

typedef struct NhuGanssRqstedGenericAssistanceDataLst_v860ext
{
 TknU16 noComp;
 NhuGanssReqGenericData_v860ext *member;
}NhuGanssRqstedGenericAssistanceDataLst_v860ext;


typedef TknU8 NhuGANSS_Storm_Flagstorm_flag_one;


typedef TknU8 NhuGANSS_Storm_Flagstorm_flag_two;


typedef TknU8 NhuGANSS_Storm_Flagstorm_flag_three;


typedef TknU8 NhuGANSS_Storm_Flagstorm_flag_four;


typedef TknU8 NhuGANSS_Storm_Flagstorm_flag_five;

typedef struct NhuGANSS_Storm_Flag
{
 TknPres pres;
 NhuGANSS_Storm_Flagstorm_flag_one storm_flag_one;
 NhuGANSS_Storm_Flagstorm_flag_two storm_flag_two;
 NhuGANSS_Storm_Flagstorm_flag_three storm_flag_three;
 NhuGANSS_Storm_Flagstorm_flag_four storm_flag_four;
 NhuGANSS_Storm_Flagstorm_flag_five storm_flag_five;
} NhuGANSS_Storm_Flag;


typedef TknStrBSXL NhuGSM_CarrierRSSI;

typedef TknU32 NhuObservedTimeDifferenceToGSM;


typedef TknU32 NhuGSM_MeasuredResultsdummy;

typedef struct NhuGSM_MeasuredResults
{
 TknPres pres;
 NhuGSM_CarrierRSSI gsm_CarrierRSSI;
 NhuGSM_MeasuredResultsdummy dummy;
 NhuBSICReported bsicReported;
 NhuObservedTimeDifferenceToGSM dummy2;
} NhuGSM_MeasuredResults;

typedef struct NhuGSM_MeasuredResultsLst
{
 TknU16 noComp;
 NhuGSM_MeasuredResults *member;
}NhuGSM_MeasuredResultsLst;


typedef TknU32 NhuGPS_TOW_1sec;


typedef TknStrBSXL NhuGPS_TOW_Assisttlm_Msg;

typedef TknStrBSXL NhuGPS_TOW_Assisttlm_Reserved;

typedef TknU8 NhuGPS_TOW_Assistalert;


typedef TknU8 NhuGPS_TOW_AssistantiSpoof;

typedef struct NhuGPS_TOW_Assist
{
 TknPres pres;
 NhuSatID satID;
 NhuGPS_TOW_Assisttlm_Msg tlm_Msg;
 NhuGPS_TOW_Assisttlm_Reserved tlm_Reserved;
 NhuGPS_TOW_Assistalert alert;
 NhuGPS_TOW_AssistantiSpoof antiSpoof;
} NhuGPS_TOW_Assist;

typedef struct NhuGPS_TOW_AssistLst
{
 TknU16 noComp;
 NhuGPS_TOW_Assist *member;
}NhuGPS_TOW_AssistLst;


typedef TknU32 NhuGSM_CellIDgsm_CellID;

typedef struct NhuGSM_CellID
{
 TknPres pres;
 NhuGSM_CellIDgsm_CellID gsm_CellID;
} NhuGSM_CellID;


typedef TknU32 NhuGSM_PriorityInfopriority;


typedef TknS32 NhuGSM_PriorityInfoqRxLevMinGSM;


typedef TknU32 NhuGSM_PriorityInfothreshXhigh;


typedef TknU32 NhuGSM_PriorityInfothreshXlow;

typedef struct NhuGSM_PriorityInfo
{
 TknPres pres;
 NhuGSM_CellGroup gsmCellGroup;
 NhuGSM_PriorityInfopriority priority;
 NhuGSM_PriorityInfoqRxLevMinGSM qRxLevMinGSM;
 NhuGSM_PriorityInfothreshXhigh threshXhigh;
 NhuGSM_PriorityInfothreshXlow threshXlow;
} NhuGSM_PriorityInfo;

typedef struct NhuGSM_PriorityInfoLst
{
 TknU16 noComp;
 NhuGSM_PriorityInfo *member;
}NhuGSM_PriorityInfoLst;

typedef struct NhuGSMCellGroupingLst
{
 TknU16 noComp;
 NhuGSM_CellID *member;
}NhuGSMCellGroupingLst;


typedef TknU32 NhuIdleIntervalInfok;


typedef TknU32 NhuIdleIntervalInfooffset;

typedef struct NhuIdleIntervalInfo
{
 TknPres pres;
 NhuIdleIntervalInfok k;
 NhuIdleIntervalInfooffset offset;
} NhuIdleIntervalInfo;

typedef struct NhuInterFreqCell_LCR_r4
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuCellMeasurementEventResults_LCR_r4 nonFreqRelatedEventResults;
} NhuInterFreqCell_LCR_r4;

typedef struct NhuRemovedInterFreqCellLstremoveSomeInterFreqCells
{
 TknU16 noComp;
 NhuInterFreqCellID *member;
}NhuRemovedInterFreqCellLstremoveSomeInterFreqCells;

typedef struct NhuRemovedInterFreqCellLst
{
 TknU8 choice;
 union {
  NhuRemovedInterFreqCellLstremoveSomeInterFreqCells removeSomeInterFreqCells;
 } val;
} NhuRemovedInterFreqCellLst;

typedef struct NhuNewInterFreqCell
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfo cellInfo;
} NhuNewInterFreqCell;

typedef struct NhuNewInterFreqCellLst
{
 TknU16 noComp;
 NhuNewInterFreqCell *member;
}NhuNewInterFreqCellLst;

typedef struct NhuInterFreqCellInfoLst
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellLst newInterFreqCellLst;
 NhuCellsForInterFreqMeasLst cellsForInterFreqMeasLst;
} NhuInterFreqCellInfoLst;

typedef struct NhuNewInterFreqCell_r4
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfo_r4 cellInfo;
} NhuNewInterFreqCell_r4;

typedef struct NhuNewInterFreqCellLst_r4
{
 TknU16 noComp;
 NhuNewInterFreqCell_r4 *member;
}NhuNewInterFreqCellLst_r4;

typedef struct NhuInterFreqCellInfoLst_r4
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellLst_r4 newInterFreqCellLst;
 NhuCellsForInterFreqMeasLst cellsForInterFreqMeasLst;
} NhuInterFreqCellInfoLst_r4;


typedef TknU8 NhuNewInterFreqCell_r8modeSpecificInfotdd128intraSecondaryFreqIndicator;

typedef struct NhuNewInterFreqCell_r8modeSpecificInfotdd128
{
 TknPres pres;
 NhuNewInterFreqCell_r8modeSpecificInfotdd128intraSecondaryFreqIndicator intraSecondaryFreqIndicator;
} NhuNewInterFreqCell_r8modeSpecificInfotdd128;

typedef struct NhuNewInterFreqCell_r8modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuNewInterFreqCell_r8modeSpecificInfotdd128 tdd128;
 } val;
} NhuNewInterFreqCell_r8modeSpecificInfo;

typedef struct NhuNewInterFreqCell_r8
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfo_r4 cellInfo;
 NhuNewInterFreqCell_r8modeSpecificInfo modeSpecificInfo;
} NhuNewInterFreqCell_r8;

typedef struct NhuNewInterFreqCellLst_r8
{
 TknU16 noComp;
 NhuNewInterFreqCell_r8 *member;
}NhuNewInterFreqCellLst_r8;

typedef struct NhuInterFreqCellInfoLst_r8
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellLst_r8 newInterFreqCellLst;
 NhuCellsForInterFreqMeasLst cellsForInterFreqMeasLst;
} NhuInterFreqCellInfoLst_r8;


typedef TknU8 NhuNewInterFreqCell_r9modeSpecificInfotdd128intraSecondaryFreqIndicator;

typedef struct NhuNewInterFreqCell_r9modeSpecificInfotdd128
{
 TknPres pres;
 NhuNewInterFreqCell_r9modeSpecificInfotdd128intraSecondaryFreqIndicator intraSecondaryFreqIndicator;
} NhuNewInterFreqCell_r9modeSpecificInfotdd128;

typedef struct NhuNewInterFreqCell_r9modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuNewInterFreqCell_r9modeSpecificInfotdd128 tdd128;
 } val;
} NhuNewInterFreqCell_r9modeSpecificInfo;

typedef struct NhuNewInterFreqCell_r9
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfo_r9 cellInfo;
 NhuNewInterFreqCell_r9modeSpecificInfo modeSpecificInfo;
} NhuNewInterFreqCell_r9;

typedef struct NhuNewInterFreqCellLst_r9
{
 TknU16 noComp;
 NhuNewInterFreqCell_r9 *member;
}NhuNewInterFreqCellLst_r9;

typedef struct NhuInterFreqSIAcquisitionmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryScramblingCode;
} NhuInterFreqSIAcquisitionmodeSpecificInfofdd;

typedef struct NhuInterFreqSIAcquisitionmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuInterFreqSIAcquisitionmodeSpecificInfofdd fdd;
 } val;
} NhuInterFreqSIAcquisitionmodeSpecificInfo;

typedef struct NhuInterFreqSIAcquisition
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuInterFreqSIAcquisitionmodeSpecificInfo modeSpecificInfo;
} NhuInterFreqSIAcquisition;

typedef struct NhuInterFreqCellInfoLst_r9
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellLst_r9 newInterFreqCellLst;
 NhuCellsForInterFreqMeasLst cellsForInterFreqMeasLst;
 NhuCSGInterFreqCellInfoLst cSGInterFreqCellInfoLst;
 NhuInterFreqSIAcquisition interFreqSIAcquisition;
} NhuInterFreqCellInfoLst_r9;


typedef TknU8 NhuNewInterFreqCell_r10modeSpecificInfotdd128intraSecondaryFreqIndicator;


typedef TknStrBSXL NhuNewInterFreqCell_r10modeSpecificInfotdd128sNPLMonitorSetIndicator_TDD128;
typedef struct NhuNewInterFreqCell_r10modeSpecificInfotdd128
{
 TknPres pres;
 NhuNewInterFreqCell_r10modeSpecificInfotdd128intraSecondaryFreqIndicator intraSecondaryFreqIndicator;
 NhuNewInterFreqCell_r10modeSpecificInfotdd128sNPLMonitorSetIndicator_TDD128 sNPLMonitorSetIndicator_TDD128;
} NhuNewInterFreqCell_r10modeSpecificInfotdd128;

typedef struct NhuNewInterFreqCell_r10modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuNewInterFreqCell_r10modeSpecificInfotdd128 tdd128;
 } val;
} NhuNewInterFreqCell_r10modeSpecificInfo;

typedef struct NhuNewInterFreqCell_r10
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfo_r9 cellInfo;
 NhuNewInterFreqCell_r10modeSpecificInfo modeSpecificInfo;
} NhuNewInterFreqCell_r10;

typedef struct NhuNewInterFreqCellLst_r10
{
 TknU16 noComp;
 NhuNewInterFreqCell_r10 *member;
}NhuNewInterFreqCellLst_r10;

typedef struct NhuInterFreqCellInfoLst_r10
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellLst_r10 newInterFreqCellLst;
 NhuCellsForInterFreqMeasLst cellsForInterFreqMeasLst;
 NhuCSGInterFreqCellInfoLst cSGInterFreqCellInfoLst;
 NhuInterFreqSIAcquisition interFreqSIAcquisition;
} NhuInterFreqCellInfoLst_r10;

typedef struct NhuNewInterFreqCellSI_RSCP
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfoSI_RSCP cellInfo;
} NhuNewInterFreqCellSI_RSCP;

typedef struct NhuNewInterFreqCellSI_Lst_RSCP
{
 TknU16 noComp;
 NhuNewInterFreqCellSI_RSCP *member;
}NhuNewInterFreqCellSI_Lst_RSCP;

typedef struct NhuInterFreqCellInfoSI_Lst_RSCP
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellSI_Lst_RSCP newInterFreqCellLst;
} NhuInterFreqCellInfoSI_Lst_RSCP;

typedef struct NhuNewInterFreqCellSI_ECN0
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfoSI_ECN0 cellInfo;
} NhuNewInterFreqCellSI_ECN0;

typedef struct NhuNewInterFreqCellSI_Lst_ECN0
{
 TknU16 noComp;
 NhuNewInterFreqCellSI_ECN0 *member;
}NhuNewInterFreqCellSI_Lst_ECN0;

typedef struct NhuInterFreqCellInfoSI_Lst_ECN0
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellSI_Lst_ECN0 newInterFreqCellLst;
} NhuInterFreqCellInfoSI_Lst_ECN0;

typedef struct NhuNewInterFreqCellSI_HCS_RSCP
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfoSI_HCS_RSCP cellInfo;
} NhuNewInterFreqCellSI_HCS_RSCP;

typedef struct NhuNewInterFreqCellSI_Lst_HCS_RSCP
{
 TknU16 noComp;
 NhuNewInterFreqCellSI_HCS_RSCP *member;
}NhuNewInterFreqCellSI_Lst_HCS_RSCP;

typedef struct NhuInterFreqCellInfoSI_Lst_HCS_RSCP
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellSI_Lst_HCS_RSCP newInterFreqCellLst;
} NhuInterFreqCellInfoSI_Lst_HCS_RSCP;

typedef struct NhuNewInterFreqCellSI_HCS_ECN0
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfoSI_HCS_ECN0 cellInfo;
} NhuNewInterFreqCellSI_HCS_ECN0;

typedef struct NhuNewInterFreqCellSI_Lst_HCS_ECN0
{
 TknU16 noComp;
 NhuNewInterFreqCellSI_HCS_ECN0 *member;
}NhuNewInterFreqCellSI_Lst_HCS_ECN0;

typedef struct NhuInterFreqCellInfoSI_Lst_HCS_ECN0
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellSI_Lst_HCS_ECN0 newInterFreqCellLst;
} NhuInterFreqCellInfoSI_Lst_HCS_ECN0;

typedef struct NhuNewInterFreqCellSI_RSCP_LCR_r4
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfoSI_RSCP_LCR_r4 cellInfo;
} NhuNewInterFreqCellSI_RSCP_LCR_r4;

typedef struct NhuNewInterFreqCellSI_Lst_RSCP_LCR_r4
{
 TknU16 noComp;
 NhuNewInterFreqCellSI_RSCP_LCR_r4 *member;
}NhuNewInterFreqCellSI_Lst_RSCP_LCR_r4;

typedef struct NhuInterFreqCellInfoSI_Lst_RSCP_LCR
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellSI_Lst_RSCP_LCR_r4 newInterFreqCellLst;
} NhuInterFreqCellInfoSI_Lst_RSCP_LCR;

typedef struct NhuNewInterFreqCellSI_ECN0_LCR_r4
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfoSI_ECN0_LCR_r4 cellInfo;
} NhuNewInterFreqCellSI_ECN0_LCR_r4;

typedef struct NhuNewInterFreqCellSI_Lst_ECN0_LCR_r4
{
 TknU16 noComp;
 NhuNewInterFreqCellSI_ECN0_LCR_r4 *member;
}NhuNewInterFreqCellSI_Lst_ECN0_LCR_r4;

typedef struct NhuInterFreqCellInfoSI_Lst_ECN0_LCR
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellSI_Lst_ECN0_LCR_r4 newInterFreqCellLst;
} NhuInterFreqCellInfoSI_Lst_ECN0_LCR;

typedef struct NhuNewInterFreqCellSI_HCS_RSCP_LCR_r4
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfoSI_HCS_RSCP_LCR_r4 cellInfo;
} NhuNewInterFreqCellSI_HCS_RSCP_LCR_r4;

typedef struct NhuNewInterFreqCellSI_Lst_HCS_RSCP_LCR_r4
{
 TknU16 noComp;
 NhuNewInterFreqCellSI_HCS_RSCP_LCR_r4 *member;
}NhuNewInterFreqCellSI_Lst_HCS_RSCP_LCR_r4;

typedef struct NhuInterFreqCellInfoSI_Lst_HCS_RSCP_LCR
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellSI_Lst_HCS_RSCP_LCR_r4 newInterFreqCellLst;
} NhuInterFreqCellInfoSI_Lst_HCS_RSCP_LCR;

typedef struct NhuNewInterFreqCellSI_HCS_ECN0_LCR_r4
{
 TknPres pres;
 NhuInterFreqCellID interFreqCellID;
 NhuFrequencyInfo frequencyInfo;
 NhuCellInfoSI_HCS_ECN0_LCR_r4 cellInfo;
} NhuNewInterFreqCellSI_HCS_ECN0_LCR_r4;

typedef struct NhuNewInterFreqCellSI_Lst_HCS_ECN0_LCR_r4
{
 TknU16 noComp;
 NhuNewInterFreqCellSI_HCS_ECN0_LCR_r4 *member;
}NhuNewInterFreqCellSI_Lst_HCS_ECN0_LCR_r4;

typedef struct NhuInterFreqCellInfoSI_Lst_HCS_ECN0_LCR
{
 TknPres pres;
 NhuRemovedInterFreqCellLst removedInterFreqCellLst;
 NhuNewInterFreqCellSI_Lst_HCS_ECN0_LCR_r4 newInterFreqCellLst;
} NhuInterFreqCellInfoSI_Lst_HCS_ECN0_LCR;

typedef struct NhuInterFreqCellLst_LCR_r4_ext
{
 TknU16 noComp;
 NhuInterFreqCell_LCR_r4 *member;
}NhuInterFreqCellLst_LCR_r4_ext;

typedef struct NhuInterFreqCellMeasuredResultsLst
{
 TknU16 noComp;
 NhuCellMeasuredResults *member;
}NhuInterFreqCellMeasuredResultsLst;

typedef struct NhuInterFreqCellMeasuredResultsLst_v920ext
{
 TknU16 noComp;
 NhuCellMeasuredResults_v920ext *member;
}NhuInterFreqCellMeasuredResultsLst_v920ext;

typedef struct NhuInterFreqEvent
{
 TknU8 choice;
 union {
  NhuEvent2a event2a;
  NhuEvent2b event2b;
  NhuEvent2c event2c;
  NhuEvent2d event2d;
  NhuEvent2e event2e;
  NhuEvent2f event2f;
 } val;
} NhuInterFreqEvent;

typedef struct NhuInterFreqEvent_r6
{
 TknU8 choice;
 union {
  NhuEvent2a_r6 event2a;
  NhuEvent2b_r6 event2b;
  NhuEvent2c_r6 event2c;
  NhuEvent2d_r6 event2d;
  NhuEvent2e_r6 event2e;
  NhuEvent2f_r6 event2f;
 } val;
} NhuInterFreqEvent_r6;

typedef struct NhuInterFreqEvent_r10
{
 TknU8 choice;
 union {
  NhuEvent2a_r10 event2a;
  NhuEvent2b_r10 event2b;
  NhuEvent2c_r10 event2c;
  NhuEvent2d_r10 event2d;
  NhuEvent2e_r10 event2e;
  NhuEvent2f_r10 event2f;
 } val;
} NhuInterFreqEvent_r10;

typedef struct NhuInterFreqEventLst
{
 TknU16 noComp;
 NhuInterFreqEvent *member;
}NhuInterFreqEventLst;

typedef struct NhuInterFreqEventLst_r6
{
 TknU16 noComp;
 NhuInterFreqEvent_r6 *member;
}NhuInterFreqEventLst_r6;

typedef struct NhuInterFreqEventLst_r10
{
 TknU16 noComp;
 NhuInterFreqEvent_r10 *member;
}NhuInterFreqEventLst_r10;

typedef struct NhuInterFrequencyMeasuredResultsLst_v590ext
{
 TknU16 noComp;
 NhuDeltaRSCPPerCell *member;
}NhuInterFrequencyMeasuredResultsLst_v590ext;

typedef struct NhuThreholdNonUsedFrequency_deltaLst
{
 TknU16 noComp;
 NhuDeltaRSCPPerCell *member;
}NhuThreholdNonUsedFrequency_deltaLst;

typedef struct NhuInter_FreqEventCriteria_v590ext
{
 TknPres pres;
 NhuDeltaRSCP threholdUsedFrequency_delta;
 NhuThreholdNonUsedFrequency_deltaLst threholdNonUsedFrequency_deltaLst;
} NhuInter_FreqEventCriteria_v590ext;

typedef struct NhuInter_FreqEventCriteriaLst_v590ext
{
 TknU16 noComp;
 NhuInter_FreqEventCriteria_v590ext *member;
}NhuInter_FreqEventCriteriaLst_v590ext;

typedef struct NhuIntra_FreqEventCriteriaLst_v590ext
{
 TknU16 noComp;
 NhuDeltaRSCP *member;
}NhuIntra_FreqEventCriteriaLst_v590ext;

typedef struct NhuIntraFrequencyMeasuredResultsLst_v590ext
{
 TknU16 noComp;
 NhuDeltaRSCPPerCell *member;
}NhuIntraFrequencyMeasuredResultsLst_v590ext;

typedef struct NhuInterFreqEventResults_LCR_r4_ext
{
 TknPres pres;
 NhuEventIDInterFreq eventID;
 NhuInterFreqCellLst_LCR_r4_ext interFreqCellLst;
} NhuInterFreqEventResults_LCR_r4_ext;


typedef enum enumNhuIntraFreqMeasQuantity_FDD
{
 NhuIntraFreqMeasQuantity_FDDcpich_Ec_N0Enum,
 NhuIntraFreqMeasQuantity_FDDcpich_RSCPEnum,
 NhuIntraFreqMeasQuantity_FDDpathlossEnum,
 NhuIntraFreqMeasQuantity_FDDdummyEnum
} EnumNhuIntraFreqMeasQuantity_FDD;
typedef TknU32 NhuIntraFreqMeasQuantity_FDD;


typedef enum enumNhuIntraFreqMeasQuantity_TDD
{
 NhuIntraFreqMeasQuantity_TDDprimaryCCPCH_RSCPEnum,
 NhuIntraFreqMeasQuantity_TDDpathlossEnum,
 NhuIntraFreqMeasQuantity_TDDtimeslotISCPEnum,
 NhuIntraFreqMeasQuantity_TDDdummyEnum
} EnumNhuIntraFreqMeasQuantity_TDD;
typedef TknU32 NhuIntraFreqMeasQuantity_TDD;

typedef struct NhuIntraFreqMeasQuantity_TDDLst
{
 TknU16 noComp;
 NhuIntraFreqMeasQuantity_TDD *member;
}NhuIntraFreqMeasQuantity_TDDLst;

typedef struct NhuIntraFreqMeasQuantitymodeSpecificInfofdd
{
 TknPres pres;
 NhuIntraFreqMeasQuantity_FDD intraFreqMeasQuantity_FDD;
} NhuIntraFreqMeasQuantitymodeSpecificInfofdd;

typedef struct NhuIntraFreqMeasQuantitymodeSpecificInfotdd
{
 TknPres pres;
 NhuIntraFreqMeasQuantity_TDDLst intraFreqMeasQuantity_TDDLst;
} NhuIntraFreqMeasQuantitymodeSpecificInfotdd;

typedef struct NhuIntraFreqMeasQuantitymodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuIntraFreqMeasQuantitymodeSpecificInfofdd fdd;
  NhuIntraFreqMeasQuantitymodeSpecificInfotdd tdd;
 } val;
} NhuIntraFreqMeasQuantitymodeSpecificInfo;

typedef struct NhuIntraFreqMeasQuantity
{
 TknPres pres;
 Nhu3gFilterCoefficient filterCoefficient;
 NhuIntraFreqMeasQuantitymodeSpecificInfo modeSpecificInfo;
} NhuIntraFreqMeasQuantity;

typedef struct NhuInterFreqMeasQuantityreportingCriteriaintraFreqRprtngCriteria
{
 TknPres pres;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
} NhuInterFreqMeasQuantityreportingCriteriaintraFreqRprtngCriteria;

typedef struct NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteriamodeSpecificInfofdd
{
 TknPres pres;
 NhuFreqQualityEstimateQuantity_FDD freqQualityEstimateQuantity_FDD;
} NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteriamodeSpecificInfofdd;

typedef struct NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteriamodeSpecificInfotdd
{
 TknPres pres;
 NhuFreqQualityEstimateQuantity_TDD freqQualityEstimateQuantity_TDD;
} NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteriamodeSpecificInfotdd;

typedef struct NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteriamodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteriamodeSpecificInfofdd fdd;
  NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteriamodeSpecificInfotdd tdd;
 } val;
} NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteriamodeSpecificInfo;

typedef struct NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteria
{
 TknPres pres;
 Nhu3gFilterCoefficient filterCoefficient;
 NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteriamodeSpecificInfo modeSpecificInfo;
} NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteria;

typedef struct NhuInterFreqMeasQuantityreportingCriteria
{
 TknU8 choice;
 union {
  NhuInterFreqMeasQuantityreportingCriteriaintraFreqRprtngCriteria intraFreqRprtngCriteria;
  NhuInterFreqMeasQuantityreportingCriteriainterFreqRprtngCriteria interFreqRprtngCriteria;
 } val;
} NhuInterFreqMeasQuantityreportingCriteria;

typedef struct NhuInterFreqMeasQuantity
{
 TknPres pres;
 NhuInterFreqMeasQuantityreportingCriteria reportingCriteria;
} NhuInterFreqMeasQuantity;


typedef TknU32 NhuUTRA_CarrierRSSI;

typedef struct NhuInterFreqMeasuredResults
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuUTRA_CarrierRSSI utra_CarrierRSSI;
 NhuInterFreqCellMeasuredResultsLst interFreqCellMeasuredResultsLst;
} NhuInterFreqMeasuredResults;

typedef struct NhuInterFreqMeasuredResults_v920ext
{
 TknPres pres;
 NhuInterFreqCellMeasuredResultsLst_v920ext interFreqCellMeasuredResultsLst;
} NhuInterFreqMeasuredResults_v920ext;

typedef struct NhuInterFreqMeasuredResultsLst
{
 TknU16 noComp;
 NhuInterFreqMeasuredResults *member;
}NhuInterFreqMeasuredResultsLst;

typedef struct NhuInterFreqMeasuredResultsLst_v920ext
{
 TknU16 noComp;
 NhuInterFreqMeasuredResults_v920ext *member;
}NhuInterFreqMeasuredResultsLst_v920ext;

typedef struct NhuInterFreqMeasurementSysInfo_RSCP
{
 TknPres pres;
 NhuInterFreqCellInfoSI_Lst_RSCP interFreqCellInfoSI_Lst;
} NhuInterFreqMeasurementSysInfo_RSCP;

typedef struct NhuInterFreqMeasurementSysInfo_ECN0
{
 TknPres pres;
 NhuInterFreqCellInfoSI_Lst_ECN0 interFreqCellInfoSI_Lst;
} NhuInterFreqMeasurementSysInfo_ECN0;

typedef struct NhuInterFreqMeasurementSysInfo_HCS_RSCP
{
 TknPres pres;
 NhuInterFreqCellInfoSI_Lst_HCS_RSCP interFreqCellInfoSI_Lst;
} NhuInterFreqMeasurementSysInfo_HCS_RSCP;

typedef struct NhuInterFreqMeasurementSysInfo_HCS_ECN0
{
 TknPres pres;
 NhuInterFreqCellInfoSI_Lst_HCS_ECN0 interFreqCellInfoSI_Lst;
} NhuInterFreqMeasurementSysInfo_HCS_ECN0;

typedef struct NhuInterFreqMeasurementSysInfo_RSCP_LCR_r4
{
 TknPres pres;
 NhuInterFreqCellInfoSI_Lst_RSCP_LCR interFreqCellInfoSI_Lst;
} NhuInterFreqMeasurementSysInfo_RSCP_LCR_r4;

typedef struct NhuInterFreqMeasurementSysInfo_ECN0_LCR_r4
{
 TknPres pres;
 NhuInterFreqCellInfoSI_Lst_ECN0_LCR interFreqCellInfoSI_Lst;
} NhuInterFreqMeasurementSysInfo_ECN0_LCR_r4;

typedef struct NhuInterFreqMeasurementSysInfo_HCS_RSCP_LCR_r4
{
 TknPres pres;
 NhuInterFreqCellInfoSI_Lst_HCS_RSCP_LCR interFreqCellInfoSI_Lst;
} NhuInterFreqMeasurementSysInfo_HCS_RSCP_LCR_r4;

typedef struct NhuInterFreqMeasurementSysInfo_HCS_ECN0_LCR_r4
{
 TknPres pres;
 NhuInterFreqCellInfoSI_Lst_HCS_ECN0_LCR interFreqCellInfoSI_Lst;
} NhuInterFreqMeasurementSysInfo_HCS_ECN0_LCR_r4;

typedef struct NhuInterFreqRACHRepCellsLst
{
 TknU16 noComp;
 NhuInterFreqCellID *member;
}NhuInterFreqRACHRepCellsLst;


typedef enum enumNhuInterFreqRepQuantityRACH_FDD
{
 NhuInterFreqRepQuantityRACH_FDDcpich_EcN0Enum,
 NhuInterFreqRepQuantityRACH_FDDcpich_RSCPEnum
} EnumNhuInterFreqRepQuantityRACH_FDD;
typedef TknU32 NhuInterFreqRepQuantityRACH_FDD;


typedef enum enumNhuInterFreqRepQuantityRACH_TDD
{
 NhuInterFreqRepQuantityRACH_TDDdummyEnum,
 NhuInterFreqRepQuantityRACH_TDDprimaryCCPCH_RSCPEnum
} EnumNhuInterFreqRepQuantityRACH_TDD;
typedef TknU32 NhuInterFreqRepQuantityRACH_TDD;

typedef struct NhuInterFreqRepQuantityRACH_TDDLst
{
 TknU16 noComp;
 NhuInterFreqRepQuantityRACH_TDD *member;
}NhuInterFreqRepQuantityRACH_TDDLst;


typedef TknU32 NhuMaxReportedCellsOnRACHinterFreq;

typedef struct NhuDummy_InterFreqRACHRprtngInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuInterFreqRepQuantityRACH_FDD interFreqRepQuantityRACH_FDD;
} NhuDummy_InterFreqRACHRprtngInfomodeSpecificInfofdd;

typedef struct NhuDummy_InterFreqRACHRprtngInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuInterFreqRepQuantityRACH_TDDLst interFreqRepQuantityRACH_TDDLst;
} NhuDummy_InterFreqRACHRprtngInfomodeSpecificInfotdd;

typedef struct NhuDummy_InterFreqRACHRprtngInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDummy_InterFreqRACHRprtngInfomodeSpecificInfofdd fdd;
  NhuDummy_InterFreqRACHRprtngInfomodeSpecificInfotdd tdd;
  NhuThreshold interFreqRACHRprtngThreshold;
  NhuMaxReportedCellsOnRACHinterFreq maxReportedCellsOnRACHinterFreq;
 } val;
} NhuDummy_InterFreqRACHRprtngInfomodeSpecificInfo;

typedef struct NhuDummy_InterFreqRACHRprtngInfo
{
 TknPres pres;
 NhuDummy_InterFreqRACHRprtngInfomodeSpecificInfo modeSpecificInfo;
} NhuDummy_InterFreqRACHRprtngInfo;

typedef struct NhuInterFreqRACHRprtngInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuInterFreqRepQuantityRACH_FDD interFreqRepQuantityRACH_FDD;
} NhuInterFreqRACHRprtngInfomodeSpecificInfofdd;

typedef struct NhuInterFreqRACHRprtngInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuInterFreqRepQuantityRACH_TDDLst interFreqRepQuantityRACH_TDDLst;
} NhuInterFreqRACHRprtngInfomodeSpecificInfotdd;

typedef struct NhuInterFreqRACHRprtngInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuInterFreqRACHRprtngInfomodeSpecificInfofdd fdd;
  NhuInterFreqRACHRprtngInfomodeSpecificInfotdd tdd;
 } val;
} NhuInterFreqRACHRprtngInfomodeSpecificInfo;

typedef struct NhuInterFreqRACHRprtngInfo
{
 TknPres pres;
 NhuInterFreqRACHRprtngInfomodeSpecificInfo modeSpecificInfo;
 NhuThreshold interFreqRACHRprtngThreshold;
 NhuMaxReportedCellsOnRACHinterFreq maxReportedCellsOnRACHinterFreq;
} NhuInterFreqRACHRprtngInfo;

typedef struct NhuInterFreqRprtngCriteria
{
 TknPres pres;
 NhuInterFreqEventLst interFreqEventLst;
} NhuInterFreqRprtngCriteria;

typedef struct NhuPeriodicalWithRprtngCellStatus
{
 TknPres pres;
 NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 NhuRprtngCellStatus reportingCellStatus;
} NhuPeriodicalWithRprtngCellStatus;

typedef struct NhuRprtngCellStatusOpt
{
 TknPres pres;
 NhuRprtngCellStatus reportingCellStatus;
} NhuRprtngCellStatusOpt;

typedef struct NhuInterFreqReportCriteria
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria intraFreqRprtngCriteria;
  NhuInterFreqRprtngCriteria interFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuInterFreqReportCriteria;

typedef struct NhuIntraFreqEvent_r4
{
 TknU8 choice;
 union {
  NhuEvent1a_r4 e1a;
  NhuEvent1b_r4 e1b;
  NhuEvent1c e1c;
  NhuEvent1e e1e;
  NhuEvent1f e1f;
  NhuThresholdUsedFrequency e1h;
  NhuThresholdUsedFrequency e1i;
 } val;
} NhuIntraFreqEvent_r4;

typedef struct NhuIntraFreqEventCriteria_r4
{
 TknPres pres;
 NhuIntraFreqEvent_r4 event;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuIntraFreqEventCriteria_r4;

typedef struct NhuIntraFreqEventCriteriaLst_r4
{
 TknU16 noComp;
 NhuIntraFreqEventCriteria_r4 *member;
}NhuIntraFreqEventCriteriaLst_r4;

typedef struct NhuIntraFreqRprtngCriteria_r4
{
 TknPres pres;
 NhuIntraFreqEventCriteriaLst_r4 eventCriteriaLst;
} NhuIntraFreqRprtngCriteria_r4;

typedef struct NhuInterFreqReportCriteria_r4
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_r4 intraFreqRprtngCriteria;
  NhuInterFreqRprtngCriteria interFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuInterFreqReportCriteria_r4;

typedef struct NhuIntraFreqEvent_r6
{
 TknU8 choice;
 union {
  NhuEvent1a_r4 e1a;
  NhuEvent1b_r4 e1b;
  NhuEvent1c e1c;
  NhuEvent1d e1d;
  NhuEvent1e_r6 e1e;
  NhuEvent1f_r6 e1f;
  NhuThresholdUsedFrequency_r6 e1h;
  NhuThresholdUsedFrequency_r6 e1i;
  NhuEvent1j_r6 e1j;
 } val;
} NhuIntraFreqEvent_r6;

typedef struct NhuIntraFreqEventCriteria_r6
{
 TknPres pres;
 NhuIntraFreqEvent_r6 event;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuIntraFreqEventCriteria_r6;

typedef struct NhuIntraFreqEventCriteriaLst_r6
{
 TknU16 noComp;
 NhuIntraFreqEventCriteria_r6 *member;
}NhuIntraFreqEventCriteriaLst_r6;

typedef struct NhuIntraFreqRprtngCriteria_r6
{
 TknPres pres;
 NhuIntraFreqEventCriteriaLst_r6 eventCriteriaLst;
} NhuIntraFreqRprtngCriteria_r6;

typedef struct NhuInterFreqRprtngCriteria_r6
{
 TknPres pres;
 NhuInterFreqEventLst_r6 interFreqEventLst;
} NhuInterFreqRprtngCriteria_r6;

typedef struct NhuInterFreqReportCriteria_r6
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_r6 intraFreqRprtngCriteria;
  NhuInterFreqRprtngCriteria_r6 interFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuInterFreqReportCriteria_r6;

typedef struct NhuIntraFreqEvent_r7
{
 TknU8 choice;
 union {
  NhuEvent1a_r4 e1a;
  NhuEvent1b_r7 e1b;
  NhuEvent1c e1c;
  NhuEvent1d e1d;
  NhuEvent1e_r6 e1e;
  NhuEvent1f_r6 e1f;
  NhuThresholdUsedFrequency_r6 e1h;
  NhuThresholdUsedFrequency_r6 e1i;
  NhuEvent1j_r6 e1j;
 } val;
} NhuIntraFreqEvent_r7;

typedef struct NhuIntraFreqEventCriteria_r7
{
 TknPres pres;
 NhuIntraFreqEvent_r7 event;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuIntraFreqEventCriteria_r7;

typedef struct NhuIntraFreqEventCriteriaLst_r7
{
 TknU16 noComp;
 NhuIntraFreqEventCriteria_r7 *member;
}NhuIntraFreqEventCriteriaLst_r7;

typedef struct NhuIntraFreqRprtngCriteria_r7
{
 TknPres pres;
 NhuIntraFreqEventCriteriaLst_r7 eventCriteriaLst;
} NhuIntraFreqRprtngCriteria_r7;

typedef struct NhuInterFreqReportCriteria_r7
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_r7 intraFreqRprtngCriteria;
  NhuInterFreqRprtngCriteria_r6 interFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuInterFreqReportCriteria_r7;

typedef struct NhuIntraFreqEventOnSecULFreq
{
 TknU8 choice;
 union {
  NhuEvent1a_OnSecUlFreq_r9 e1a;
  NhuEvent1b_OnSecUlFreq_r9 e1b;
  NhuEvent1c e1c;
  NhuEvent1e_r6 e1e;
  NhuEvent1f_r6 e1f;
 } val;
} NhuIntraFreqEventOnSecULFreq;

typedef struct NhuIntraFreqEventCriteriaOnSecULFreq
{
 TknPres pres;
 NhuIntraFreqEventOnSecULFreq event;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuIntraFreqEventCriteriaOnSecULFreq;

typedef struct NhuIntraFreqEventCriteriaLstOnSecULFreqintraFreqEventCriteria
{
 TknU16 noComp;
 NhuIntraFreqEventCriteriaOnSecULFreq *member;
}NhuIntraFreqEventCriteriaLstOnSecULFreqintraFreqEventCriteria;

typedef struct NhuIntraFreqEventCriteriaLstOnSecULFreq
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuIntraFreqEventCriteriaLstOnSecULFreqintraFreqEventCriteria intraFreqEventCriteria;
} NhuIntraFreqEventCriteriaLstOnSecULFreq;

typedef struct NhuIntraFreqRprtngCriteria_r9
{
 TknPres pres;
 NhuIntraFreqEventCriteriaLst_r7 eventCriteriaLst;
 NhuIntraFreqEventCriteriaLstOnSecULFreq eventCriteriaLstOnSecULFreq;
} NhuIntraFreqRprtngCriteria_r9;

typedef struct NhuInterFreqReportCriteria_r9
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_r9 intraFreqRprtngCriteria;
  NhuInterFreqRprtngCriteria_r6 interFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuInterFreqReportCriteria_r9;

typedef struct NhuInterFreqRprtngCriteria_r10
{
 TknPres pres;
 NhuInterFreqEventLst_r10 interFreqEventLst;
} NhuInterFreqRprtngCriteria_r10;

typedef struct NhuPeriodicalWithRprtngCellStatus_r10
{
 TknPres pres;
 NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 NhuRprtngCellStatus_r10 reportingCellStatus;
} NhuPeriodicalWithRprtngCellStatus_r10;

typedef struct NhuRprtngCellStatusOpt_r10
{
 TknPres pres;
 NhuRprtngCellStatus_r10 reportingCellStatus;
} NhuRprtngCellStatusOpt_r10;

typedef struct NhuInterFreqReportCriteria_r10
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_r9 intraFreqRprtngCriteria;
  NhuInterFreqRprtngCriteria_r10 interFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus_r10 periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt_r10 noRprtng;
 } val;
} NhuInterFreqReportCriteria_r10;


typedef TknU8 NhuInterFreqRprtngQuantityutra_Carrier_RSSI;


typedef TknU8 NhuInterFreqRprtngQuantityfrequencyQualityEstimate;

typedef struct NhuInterFreqRprtngQuantity
{
 TknPres pres;
 NhuInterFreqRprtngQuantityutra_Carrier_RSSI utra_Carrier_RSSI;
 NhuInterFreqRprtngQuantityfrequencyQualityEstimate frequencyQualityEstimate;
 NhuCellRprtngQuantities nonFreqRelatedQuantities;
} NhuInterFreqRprtngQuantity;


typedef enum enumNhuMeasurementValidityue_State
{
 NhuMeasurementValidityue_Statecell_DCHEnum,
 NhuMeasurementValidityue_Stateall_But_Cell_DCHEnum,
 NhuMeasurementValidityue_Stateall_StatesEnum
} EnumNhuMeasurementValidityue_State;
typedef TknU32 NhuMeasurementValidityue_State;

typedef struct NhuMeasurementValidity
{
 TknPres pres;
 NhuMeasurementValidityue_State ue_State;
} NhuMeasurementValidity;

typedef struct NhuRL_AdditionInfoLst
{
 TknU16 noComp;
 NhuPrimaryCPICH_Info *member;
}NhuRL_AdditionInfoLst;

typedef struct NhuRL_InfoLsts
{
 TknPres pres;
 NhuRL_AdditionInfoLst rl_AdditionInfoLst;
 NhuRL_RemovalInfoLst rL_RemovalInfoLst;
} NhuRL_InfoLsts;

typedef struct NhuUE_AutonomousUpdMode
{
 TknU8 choice;
 union {
  NhuRL_InfoLsts dummy2;
 } val;
} NhuUE_AutonomousUpdMode;

typedef struct NhuInterFrequencyMeasurement
{
 TknPres pres;
 NhuInterFreqCellInfoLst interFreqCellInfoLst;
 NhuInterFreqMeasQuantity interFreqMeasQuantity;
 NhuInterFreqRprtngQuantity interFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_AutonomousUpdMode interFreqSetUpd;
 NhuInterFreqReportCriteria reportCriteria;
} NhuInterFrequencyMeasurement;

typedef struct NhuInterFrequencyMeasurement_r4
{
 TknPres pres;
 NhuInterFreqCellInfoLst_r4 interFreqCellInfoLst;
 NhuInterFreqMeasQuantity interFreqMeasQuantity;
 NhuInterFreqRprtngQuantity interFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_AutonomousUpdMode interFreqSetUpd;
 NhuInterFreqReportCriteria_r4 reportCriteria;
} NhuInterFrequencyMeasurement_r4;

typedef struct NhuInterFrequencyMeasurement_r6
{
 TknPres pres;
 NhuInterFreqCellInfoLst_r4 interFreqCellInfoLst;
 NhuInterFreqMeasQuantity interFreqMeasQuantity;
 NhuInterFreqRprtngQuantity interFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_AutonomousUpdMode interFreqSetUpd;
 NhuInterFreqReportCriteria_r6 reportCriteria;
} NhuInterFrequencyMeasurement_r6;

typedef struct NhuInterFrequencyMeasurement_r7
{
 TknPres pres;
 NhuInterFreqCellInfoLst_r4 interFreqCellInfoLst;
 NhuInterFreqMeasQuantity interFreqMeasQuantity;
 NhuInterFreqRprtngQuantity interFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_AutonomousUpdMode interFreqSetUpd;
 NhuInterFreqReportCriteria_r7 reportCriteria;
} NhuInterFrequencyMeasurement_r7;


typedef TknU32 NhuInterFrequencyMeasurement_r8adjacentFrequencyIdx;

typedef struct NhuInterFrequencyMeasurement_r8
{
 TknPres pres;
 NhuInterFreqCellInfoLst_r8 interFreqCellInfoLst;
 NhuInterFreqMeasQuantity interFreqMeasQuantity;
 NhuInterFreqRprtngQuantity interFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_AutonomousUpdMode interFreqSetUpd;
 NhuInterFrequencyMeasurement_r8adjacentFrequencyIdx adjacentFrequencyIdx;
 NhuInterFreqReportCriteria_r7 reportCriteria;
} NhuInterFrequencyMeasurement_r8;


typedef TknU32 NhuInterFrequencyMeasurement_r9adjacentFrequencyIdx;


typedef TknU32 NhuInterFrequencyMeasurement_r9interBandFrequencyIdx;

typedef struct NhuInterFrequencyMeasurement_r9
{
 TknPres pres;
 NhuInterFreqCellInfoLst_r9 interFreqCellInfoLst;
 NhuInterFreqMeasQuantity interFreqMeasQuantity;
 NhuInterFreqRprtngQuantity interFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_AutonomousUpdMode interFreqSetUpd;
 NhuInterFrequencyMeasurement_r9adjacentFrequencyIdx adjacentFrequencyIdx;
 NhuInterFrequencyMeasurement_r9interBandFrequencyIdx interBandFrequencyIdx;
 NhuInterFreqReportCriteria_r9 reportCriteria;
} NhuInterFrequencyMeasurement_r9;


typedef TknU32 NhuInterFrequencyMeasurement_r10adjacentFrequencyIdx;


typedef TknU32 NhuInterFrequencyMeasurement_r10interBandFrequencyIdx;

typedef struct NhuInterFrequencyMeasurement_r10
{
 TknPres pres;
 NhuInterFreqCellInfoLst_r10 interFreqCellInfoLst;
 NhuInterFreqMeasQuantity interFreqMeasQuantity;
 NhuInterFreqRprtngQuantity interFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_AutonomousUpdMode interFreqSetUpd;
 NhuInterFrequencyMeasurement_r10adjacentFrequencyIdx adjacentFrequencyIdx;
 NhuInterFrequencyMeasurement_r10interBandFrequencyIdx interBandFrequencyIdx;
 NhuFreqIdxLstForEnhancedMeas freqIdxLstForEnhancedMeas;
 NhuInterFreqReportCriteria_r10 reportCriteria;
} NhuInterFrequencyMeasurement_r10;


typedef TknStrBSXL NhuNC_Mode;
typedef struct NhuInterRAT_TgtCellDescriptiontechnologySpecificInfogsm
{
 TknPres pres;
 NhuBSIC bsic;
 NhuFrequency_Band frequency_band;
 NhuBCCH_ARFCN bcch_ARFCN;
 NhuNC_Mode ncMode;
} NhuInterRAT_TgtCellDescriptiontechnologySpecificInfogsm;

typedef struct NhuInterRAT_TgtCellDescriptiontechnologySpecificInfo
{
 TknU8 choice;
 union {
  NhuInterRAT_TgtCellDescriptiontechnologySpecificInfogsm gsm;
 } val;
} NhuInterRAT_TgtCellDescriptiontechnologySpecificInfo;

typedef struct NhuInterRAT_TgtCellDescription
{
 TknPres pres;
 NhuInterRAT_TgtCellDescriptiontechnologySpecificInfo technologySpecificInfo;
} NhuInterRAT_TgtCellDescription;


typedef TknU32 NhuInterRATCellInfoInd;

typedef struct NhuRemovedInterRATCellLstremoveSomeInterRATCells
{
 TknU16 noComp;
 NhuInterRATCellID *member;
}NhuRemovedInterRATCellLstremoveSomeInterRATCells;

typedef struct NhuRemovedInterRATCellLst
{
 TknU8 choice;
 union {
  NhuRemovedInterRATCellLstremoveSomeInterRATCells removeSomeInterRATCells;
 } val;
} NhuRemovedInterRATCellLst;


typedef TknS32 NhuInterRATCellIvdualOffset;


typedef enum enumNhuIS_2000SpecificMeasInfo
{
 NhuIS_2000SpecificMeasInfofrequencyEnum,
 NhuIS_2000SpecificMeasInfotimeslotEnum,
 NhuIS_2000SpecificMeasInfocolourcodeEnum,
 NhuIS_2000SpecificMeasInfooutputpowerEnum,
 NhuIS_2000SpecificMeasInfopn_OffsetEnum
} EnumNhuIS_2000SpecificMeasInfo;
typedef TknU32 NhuIS_2000SpecificMeasInfo;

typedef struct NhuNewInterRATCelltechnologySpecificInfogsm
{
 TknPres pres;
 NhuCellSelectReselectInfoSIB_11_12 cellSelectionReselectionInfo;
 NhuInterRATCellIvdualOffset interRATCellIvdualOffset;
 NhuBSIC bsic;
 NhuFrequency_Band frequency_band;
 NhuBCCH_ARFCN bcch_ARFCN;
} NhuNewInterRATCelltechnologySpecificInfogsm;

typedef struct NhuNewInterRATCelltechnologySpecificInfois_2000
{
 TknPres pres;
 NhuIS_2000SpecificMeasInfo is_2000SpecificMeasInfo;
} NhuNewInterRATCelltechnologySpecificInfois_2000;

typedef struct NhuNewInterRATCelltechnologySpecificInfo
{
 TknU8 choice;
 union {
  NhuNewInterRATCelltechnologySpecificInfogsm gsm;
  NhuNewInterRATCelltechnologySpecificInfois_2000 is_2000;
 } val;
} NhuNewInterRATCelltechnologySpecificInfo;

typedef struct NhuNewInterRATCell
{
 TknPres pres;
 NhuInterRATCellID interRATCellID;
 NhuNewInterRATCelltechnologySpecificInfo technologySpecificInfo;
} NhuNewInterRATCell;

typedef struct NhuNewInterRATCellLst
{
 TknU16 noComp;
 NhuNewInterRATCell *member;
}NhuNewInterRATCellLst;

typedef struct NhuInterRATCellInfoLst
{
 TknPres pres;
 NhuRemovedInterRATCellLst removedInterRATCellLst;
 NhuNewInterRATCellLst newInterRATCellLst;
 NhuCellsForInterRATMeasLst cellsForInterRATMeasLst;
} NhuInterRATCellInfoLst;

typedef struct NhuNewInterRATCell_BtechnologySpecificInfogsm
{
 TknPres pres;
 NhuCellSelectReselectInfoSIB_11_12 cellSelectionReselectionInfo;
 NhuInterRATCellIvdualOffset interRATCellIvdualOffset;
 NhuBSIC bsic;
 NhuFrequency_Band frequency_band;
 NhuBCCH_ARFCN bcch_ARFCN;
} NhuNewInterRATCell_BtechnologySpecificInfogsm;

typedef struct NhuNewInterRATCell_BtechnologySpecificInfois_2000
{
 TknPres pres;
 NhuIS_2000SpecificMeasInfo is_2000SpecificMeasInfo;
} NhuNewInterRATCell_BtechnologySpecificInfois_2000;

typedef struct NhuNewInterRATCell_BtechnologySpecificInfo
{
 TknU8 choice;
 union {
  NhuNewInterRATCell_BtechnologySpecificInfogsm gsm;
  NhuNewInterRATCell_BtechnologySpecificInfois_2000 is_2000;
 } val;
} NhuNewInterRATCell_BtechnologySpecificInfo;

typedef struct NhuNewInterRATCell_B
{
 TknPres pres;
 NhuInterRATCellID interRATCellID;
 NhuNewInterRATCell_BtechnologySpecificInfo technologySpecificInfo;
} NhuNewInterRATCell_B;

typedef struct NhuNewInterRATCellLst_B
{
 TknU16 noComp;
 NhuNewInterRATCell_B *member;
}NhuNewInterRATCellLst_B;

typedef struct NhuInterRATCellInfoLst_B
{
 TknPres pres;
 NhuRemovedInterRATCellLst removedInterRATCellLst;
 NhuNewInterRATCellLst_B newInterRATCellLst;
} NhuInterRATCellInfoLst_B;

typedef struct NhuInterRATCellInfoLst_r4
{
 TknPres pres;
 NhuRemovedInterRATCellLst removedInterRATCellLst;
 NhuNewInterRATCellLst newInterRATCellLst;
 NhuCellsForInterRATMeasLst cellsForInterRATMeasLst;
} NhuInterRATCellInfoLst_r4;

typedef struct NhuInterRATCellInfoLst_r6
{
 TknPres pres;
 NhuRemovedInterRATCellLst removedInterRATCellLst;
 NhuNewInterRATCellLst newInterRATCellLst;
 NhuCellsForInterRATMeasLst cellsForInterRATMeasLst;
 NhuInterRATCellInfoInd interRATCellInfoInd_r6;
} NhuInterRATCellInfoLst_r6;

typedef struct NhuInterRATEvent
{
 TknU8 choice;
 union {
  NhuEvent3a event3a;
  NhuEvent3b event3b;
  NhuEvent3c event3c;
  NhuEvent3d event3d;
 } val;
} NhuInterRATEvent;

typedef struct NhuInterRATEventLst
{
 TknU16 noComp;
 NhuInterRATEvent *member;
}NhuInterRATEventLst;


typedef enum enumNhuMeasurementQuantityGSM
{
 NhuMeasurementQuantityGSMgsm_CarrierRSSIEnum,
 NhuMeasurementQuantityGSMdummyEnum
} EnumNhuMeasurementQuantityGSM;
typedef TknU32 NhuMeasurementQuantityGSM;

typedef struct NhuInterRATMeasQuantityratSpecificInfogsm
{
 TknPres pres;
 NhuMeasurementQuantityGSM measurementQuantity;
 Nhu3gFilterCoefficient filterCoefficient;
 NhuBSIC_VerificationReqd bsic_VerificationReqd;
} NhuInterRATMeasQuantityratSpecificInfogsm;


typedef TknU32 NhuInterRATMeasQuantityratSpecificInfois_2000tadd_EcIo;


typedef TknU32 NhuInterRATMeasQuantityratSpecificInfois_2000tcomp_EcIo;


typedef TknU32 NhuInterRATMeasQuantityratSpecificInfois_2000softSlope;


typedef TknU32 NhuInterRATMeasQuantityratSpecificInfois_2000addIntercept;

typedef struct NhuInterRATMeasQuantityratSpecificInfois_2000
{
 TknPres pres;
 NhuInterRATMeasQuantityratSpecificInfois_2000tadd_EcIo tadd_EcIo;
 NhuInterRATMeasQuantityratSpecificInfois_2000tcomp_EcIo tcomp_EcIo;
 NhuInterRATMeasQuantityratSpecificInfois_2000softSlope softSlope;
 NhuInterRATMeasQuantityratSpecificInfois_2000addIntercept addIntercept;
} NhuInterRATMeasQuantityratSpecificInfois_2000;

typedef struct NhuInterRATMeasQuantityratSpecificInfo
{
 TknU8 choice;
 union {
  NhuInterRATMeasQuantityratSpecificInfogsm gsm;
  NhuInterRATMeasQuantityratSpecificInfois_2000 is_2000;
 } val;
} NhuInterRATMeasQuantityratSpecificInfo;

typedef struct NhuInterRATMeasQuantity
{
 TknPres pres;
 NhuIntraFreqMeasQuantity measQuantityUTRAN_QualityEstimate;
 NhuInterRATMeasQuantityratSpecificInfo ratSpecificInfo;
} NhuInterRATMeasQuantity;


typedef enum enumNhuMeasurementQuantityEUTRA
{
 NhuMeasurementQuantityEUTRArrspEnum,
 NhuMeasurementQuantityEUTRArsrqEnum
} EnumNhuMeasurementQuantityEUTRA;
typedef TknU32 NhuMeasurementQuantityEUTRA;

typedef struct NhuInterRATMeasQuantity_r8ratSpecificInfogsm
{
 TknPres pres;
 NhuMeasurementQuantityGSM measurementQuantity;
 Nhu3gFilterCoefficient filterCoefficient;
 NhuBSIC_VerificationReqd bsic_VerificationReqd;
} NhuInterRATMeasQuantity_r8ratSpecificInfogsm;


typedef TknU32 NhuInterRATMeasQuantity_r8ratSpecificInfois_2000tadd_EcIo;


typedef TknU32 NhuInterRATMeasQuantity_r8ratSpecificInfois_2000tcomp_EcIo;


typedef TknU32 NhuInterRATMeasQuantity_r8ratSpecificInfois_2000softSlope;


typedef TknU32 NhuInterRATMeasQuantity_r8ratSpecificInfois_2000addIntercept;

typedef struct NhuInterRATMeasQuantity_r8ratSpecificInfois_2000
{
 TknPres pres;
 NhuInterRATMeasQuantity_r8ratSpecificInfois_2000tadd_EcIo tadd_EcIo;
 NhuInterRATMeasQuantity_r8ratSpecificInfois_2000tcomp_EcIo tcomp_EcIo;
 NhuInterRATMeasQuantity_r8ratSpecificInfois_2000softSlope softSlope;
 NhuInterRATMeasQuantity_r8ratSpecificInfois_2000addIntercept addIntercept;
} NhuInterRATMeasQuantity_r8ratSpecificInfois_2000;

typedef struct NhuInterRATMeasQuantity_r8ratSpecificInfoe_UTRA
{
 TknPres pres;
 NhuMeasurementQuantityEUTRA measurementQuantity;
 Nhu3gFilterCoefficient filterCoefficient;
} NhuInterRATMeasQuantity_r8ratSpecificInfoe_UTRA;

typedef struct NhuInterRATMeasQuantity_r8ratSpecificInfo
{
 TknU8 choice;
 union {
  NhuInterRATMeasQuantity_r8ratSpecificInfogsm gsm;
  NhuInterRATMeasQuantity_r8ratSpecificInfois_2000 is_2000;
  NhuInterRATMeasQuantity_r8ratSpecificInfoe_UTRA e_UTRA;
 } val;
} NhuInterRATMeasQuantity_r8ratSpecificInfo;

typedef struct NhuInterRATMeasQuantity_r8
{
 TknPres pres;
 NhuIntraFreqMeasQuantity measQuantityUTRAN_QualityEstimate;
 NhuInterRATMeasQuantity_r8ratSpecificInfo ratSpecificInfo;
} NhuInterRATMeasQuantity_r8;

typedef struct NhuInterRATMeasuredResults
{
 TknU8 choice;
 union {
  NhuGSM_MeasuredResultsLst gsm;
 } val;
} NhuInterRATMeasuredResults;

typedef struct NhuInterRATMeasuredResultsLst
{
 TknU16 noComp;
 NhuInterRATMeasuredResults *member;
}NhuInterRATMeasuredResultsLst;


typedef TknU8 NhuInterRATRprtngQuantityutran_EstimatedQuality;


typedef TknU8 NhuInterRATRprtngQuantityratSpecificInfogsmdummy;


typedef TknU8 NhuInterRATRprtngQuantityratSpecificInfogsmdummy2;


typedef TknU8 NhuInterRATRprtngQuantityratSpecificInfogsmgsm_Carrier_RSSI;

typedef struct NhuInterRATRprtngQuantityratSpecificInfogsm
{
 TknPres pres;
 NhuInterRATRprtngQuantityratSpecificInfogsmdummy dummy;
 NhuInterRATRprtngQuantityratSpecificInfogsmdummy2 dummy2;
 NhuInterRATRprtngQuantityratSpecificInfogsmgsm_Carrier_RSSI gsm_Carrier_RSSI;
} NhuInterRATRprtngQuantityratSpecificInfogsm;

typedef struct NhuInterRATRprtngQuantityratSpecificInfo
{
 TknU8 choice;
 union {
  NhuInterRATRprtngQuantityratSpecificInfogsm gsm;
 } val;
} NhuInterRATRprtngQuantityratSpecificInfo;

typedef struct NhuInterRATRprtngQuantity
{
 TknPres pres;
 NhuInterRATRprtngQuantityutran_EstimatedQuality utran_EstimatedQuality;
 NhuInterRATRprtngQuantityratSpecificInfo ratSpecificInfo;
} NhuInterRATRprtngQuantity;

typedef struct NhuInterRATRprtngCriteria
{
 TknPres pres;
 NhuInterRATEventLst interRATEventLst;
} NhuInterRATRprtngCriteria;

typedef struct NhuInterRATReportCriteria
{
 TknU8 choice;
 union {
  NhuInterRATRprtngCriteria interRATRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuInterRATReportCriteria;

typedef struct NhuInterRATMeasurement
{
 TknPres pres;
 NhuInterRATCellInfoLst interRATCellInfoLst;
 NhuInterRATMeasQuantity interRATMeasQuantity;
 NhuInterRATRprtngQuantity interRATRprtngQuantity;
 NhuInterRATReportCriteria reportCriteria;
} NhuInterRATMeasurement;

typedef struct NhuInterRATMeasurement_r4
{
 TknPres pres;
 NhuInterRATCellInfoLst_r4 interRATCellInfoLst;
 NhuInterRATMeasQuantity interRATMeasQuantity;
 NhuInterRATRprtngQuantity interRATRprtngQuantity;
 NhuInterRATReportCriteria reportCriteria;
} NhuInterRATMeasurement_r4;

typedef struct NhuInterRATMeasurement_r6
{
 TknPres pres;
 NhuInterRATCellInfoLst_r6 interRATCellInfoLst;
 NhuInterRATMeasQuantity interRATMeasQuantity;
 NhuInterRATRprtngQuantity interRATRprtngQuantity;
 NhuInterRATReportCriteria reportCriteria;
} NhuInterRATMeasurement_r6;


typedef TknU8 NhuInterRATRprtngQuantity_r8utran_EstimatedQuality;


typedef TknU8 NhuInterRATRprtngQuantity_r8ratSpecificInfogsmgsm_Carrier_RSSI;

typedef struct NhuInterRATRprtngQuantity_r8ratSpecificInfogsm
{
 TknPres pres;
 NhuInterRATRprtngQuantity_r8ratSpecificInfogsmgsm_Carrier_RSSI gsm_Carrier_RSSI;
} NhuInterRATRprtngQuantity_r8ratSpecificInfogsm;


typedef enum enumNhuInterRATRprtngQuantity_r8ratSpecificInfoeutrareportingQuantity
{
 NhuInterRATRprtngQuantity_r8ratSpecificInfoeutrareportingQuantitymeasurementQuantityEnum,
 NhuInterRATRprtngQuantity_r8ratSpecificInfoeutrareportingQuantitybothEnum
} EnumNhuInterRATRprtngQuantity_r8ratSpecificInfoeutrareportingQuantity;
typedef TknU32 NhuInterRATRprtngQuantity_r8ratSpecificInfoeutrareportingQuantity;

typedef struct NhuInterRATRprtngQuantity_r8ratSpecificInfoeutra
{
 TknPres pres;
 NhuInterRATRprtngQuantity_r8ratSpecificInfoeutrareportingQuantity reportingQuantity;
} NhuInterRATRprtngQuantity_r8ratSpecificInfoeutra;

typedef struct NhuInterRATRprtngQuantity_r8ratSpecificInfo
{
 TknU8 choice;
 union {
  NhuInterRATRprtngQuantity_r8ratSpecificInfogsm gsm;
  NhuInterRATRprtngQuantity_r8ratSpecificInfoeutra eutra;
 } val;
} NhuInterRATRprtngQuantity_r8ratSpecificInfo;

typedef struct NhuInterRATRprtngQuantity_r8
{
 TknPres pres;
 NhuInterRATRprtngQuantity_r8utran_EstimatedQuality utran_EstimatedQuality;
 NhuInterRATRprtngQuantity_r8ratSpecificInfo ratSpecificInfo;
} NhuInterRATRprtngQuantity_r8;

typedef struct NhuInterRATMeasurement_r8interRATMeasurementObjects
{
 TknU8 choice;
 union {
  NhuInterRATCellInfoLst_r6 interRATCellInfoLst;
  NhuEUTRA_FrequencyLst eutra_FrequencyLst;
 } val;
} NhuInterRATMeasurement_r8interRATMeasurementObjects;

typedef struct NhuInterRATMeasurement_r8
{
 TknPres pres;
 NhuInterRATMeasurement_r8interRATMeasurementObjects interRATMeasurementObjects;
 NhuInterRATMeasQuantity_r8 interRATMeasQuantity;
 NhuInterRATRprtngQuantity_r8 interRATRprtngQuantity;
 NhuInterRATReportCriteria reportCriteria;
 NhuIdleIntervalInfo idleIntervalInfo;
} NhuInterRATMeasurement_r8;

typedef struct NhuInterRATMeasurement_r9interRATMeasurementObjects
{
 TknU8 choice;
 union {
  NhuInterRATCellInfoLst_r6 interRATCellInfoLst;
  NhuEUTRA_FrequencyLst_r9 eutra_FrequencyLst;
 } val;
} NhuInterRATMeasurement_r9interRATMeasurementObjects;

typedef struct NhuInterRATMeasurement_r9
{
 TknPres pres;
 NhuInterRATMeasurement_r9interRATMeasurementObjects interRATMeasurementObjects;
 NhuInterRATMeasQuantity_r8 interRATMeasQuantity;
 NhuInterRATRprtngQuantity_r8 interRATRprtngQuantity;
 NhuInterRATReportCriteria reportCriteria;
 NhuIdleIntervalInfo idleIntervalInfo;
} NhuInterRATMeasurement_r9;

typedef struct NhuInterRATMeasurementSysInfo
{
 TknPres pres;
 NhuInterRATCellInfoLst interRATCellInfoLst;
} NhuInterRATMeasurementSysInfo;

typedef struct NhuInterRATMeasurementSysInfo_B
{
 TknPres pres;
 NhuInterRATCellInfoLst_B interRATCellInfoLst;
} NhuInterRATMeasurementSysInfo_B;

typedef struct NhuRemovedIntraFreqCellLstremoveSomeIntraFreqCells
{
 TknU16 noComp;
 NhuIntraFreqCellID *member;
}NhuRemovedIntraFreqCellLstremoveSomeIntraFreqCells;

typedef struct NhuRemovedIntraFreqCellLst
{
 TknU8 choice;
 union {
  NhuRemovedIntraFreqCellLstremoveSomeIntraFreqCells removeSomeIntraFreqCells;
 } val;
} NhuRemovedIntraFreqCellLst;

typedef struct NhuNewIntraFreqCell
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfo cellInfo;
} NhuNewIntraFreqCell;

typedef struct NhuNewIntraFreqCellLst
{
 TknU16 noComp;
 NhuNewIntraFreqCell *member;
}NhuNewIntraFreqCellLst;

typedef struct NhuIntraFreqCellInfoLst
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellLst newIntraFreqCellLst;
 NhuCellsForIntraFreqMeasLst cellsForIntraFreqMeasLst;
} NhuIntraFreqCellInfoLst;

typedef struct NhuNewIntraFreqCell_r4
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfo_r4 cellInfo;
} NhuNewIntraFreqCell_r4;

typedef struct NhuNewIntraFreqCellLst_r4
{
 TknU16 noComp;
 NhuNewIntraFreqCell_r4 *member;
}NhuNewIntraFreqCellLst_r4;

typedef struct NhuIntraFreqCellInfoLst_r4
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellLst_r4 newIntraFreqCellLst;
 NhuCellsForIntraFreqMeasLst cellsForIntraFreqMeasLst;
} NhuIntraFreqCellInfoLst_r4;

typedef struct NhuRemovedIntraFreqCellLstOnSecULFreqremoveSomeIntraFreqCells
{
 TknU16 noComp;
 NhuIntraFreqCellIDOnSecULFreq *member;
}NhuRemovedIntraFreqCellLstOnSecULFreqremoveSomeIntraFreqCells;

typedef struct NhuRemovedIntraFreqCellLstOnSecULFreq
{
 TknU8 choice;
 union {
  NhuRemovedIntraFreqCellLstOnSecULFreqremoveSomeIntraFreqCells removeSomeIntraFreqCells;
 } val;
} NhuRemovedIntraFreqCellLstOnSecULFreq;

typedef struct NhuNewIntraFreqCellOnSecULFreq
{
 TknPres pres;
 NhuIntraFreqCellIDOnSecULFreq intraFreqCellIDOnSecULFreq;
 NhuCellInfo_r4 cellInfo;
} NhuNewIntraFreqCellOnSecULFreq;

typedef struct NhuNewIntraFreqCellLstOnSecULFreq
{
 TknU16 noComp;
 NhuNewIntraFreqCellOnSecULFreq *member;
}NhuNewIntraFreqCellLstOnSecULFreq;

typedef struct NhuIntraFreqCellInfoLstInfoOnSecULFreq
{
 TknPres pres;
 NhuRemovedIntraFreqCellLstOnSecULFreq removedIntraFreqCellLst;
 NhuNewIntraFreqCellLstOnSecULFreq newIntraFreqCellLst;
 NhuCellsForIntraFreqMeasLstOnSecULFreq cellsForIntraFreqMeasLst;
} NhuIntraFreqCellInfoLstInfoOnSecULFreq;

typedef struct NhuIntraFreqCellInfoLstOnSecULFreq
{
 TknPres pres;
 NhuIntraFreqCellInfoLstInfoOnSecULFreq intraFreqCellInfoLstOnSecULFreq;
} NhuIntraFreqCellInfoLstOnSecULFreq;

typedef struct NhuNewIntraFreqCell_r9
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfo_r9 cellInfo;
} NhuNewIntraFreqCell_r9;

typedef struct NhuNewIntraFreqCellLst_r9
{
 TknU16 noComp;
 NhuNewIntraFreqCell_r9 *member;
}NhuNewIntraFreqCellLst_r9;

typedef struct NhuIntraFreqSIAcquisitionInfo
{
 TknU16 noComp;
 NhuPrimaryCPICH_Info *member;
}NhuIntraFreqSIAcquisitionInfo;

typedef struct NhuIntraFreqSIAcquisitionmodeSpecificInfofdd
{
 TknPres pres;
 NhuIntraFreqSIAcquisitionInfo intraFreqSIAcquisitionInfo;
} NhuIntraFreqSIAcquisitionmodeSpecificInfofdd;

typedef struct NhuIntraFreqSIAcquisitionmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuIntraFreqSIAcquisitionmodeSpecificInfofdd fdd;
 } val;
} NhuIntraFreqSIAcquisitionmodeSpecificInfo;

typedef struct NhuIntraFreqSIAcquisition
{
 TknPres pres;
 NhuIntraFreqSIAcquisitionmodeSpecificInfo modeSpecificInfo;
} NhuIntraFreqSIAcquisition;

typedef struct NhuIntraFreqCellInfoLst_r9
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellLst_r9 newIntraFreqCellLst;
 NhuCellsForIntraFreqMeasLst cellsForIntraFreqMeasLst;
 NhuCSGIntraFreqCellInfoLst cSGIntraFreqCellInfoLst;
 NhuIntraFreqSIAcquisition intraFreqSIAcquisition;
} NhuIntraFreqCellInfoLst_r9;


typedef TknStrBSXL NhuNewIntraFreqCell_r10modeSpecificInfotdd128sNPLMonitorSetIndicator_TDD128;
typedef struct NhuNewIntraFreqCell_r10modeSpecificInfotdd128
{
 TknPres pres;
 NhuNewIntraFreqCell_r10modeSpecificInfotdd128sNPLMonitorSetIndicator_TDD128 sNPLMonitorSetIndicator_TDD128;
} NhuNewIntraFreqCell_r10modeSpecificInfotdd128;

typedef struct NhuNewIntraFreqCell_r10modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuNewIntraFreqCell_r10modeSpecificInfotdd128 tdd128;
 } val;
} NhuNewIntraFreqCell_r10modeSpecificInfo;

typedef struct NhuNewIntraFreqCell_r10
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfo_r9 cellInfo;
 NhuNewIntraFreqCell_r10modeSpecificInfo modeSpecificInfo;
} NhuNewIntraFreqCell_r10;

typedef struct NhuNewIntraFreqCellLst_r10
{
 TknU16 noComp;
 NhuNewIntraFreqCell_r10 *member;
}NhuNewIntraFreqCellLst_r10;

typedef struct NhuIntraFreqCellInfoLst_r10
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellLst_r10 newIntraFreqCellLst;
 NhuCellsForIntraFreqMeasLst cellsForIntraFreqMeasLst;
 NhuCSGIntraFreqCellInfoLst cSGIntraFreqCellInfoLst;
 NhuIntraFreqSIAcquisition intraFreqSIAcquisition;
} NhuIntraFreqCellInfoLst_r10;

typedef struct NhuNewIntraFreqCellSI_RSCP
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfoSI_RSCP cellInfo;
} NhuNewIntraFreqCellSI_RSCP;

typedef struct NhuNewIntraFreqCellSI_Lst_RSCP
{
 TknU16 noComp;
 NhuNewIntraFreqCellSI_RSCP *member;
}NhuNewIntraFreqCellSI_Lst_RSCP;

typedef struct NhuIntraFreqCellInfoSI_Lst_RSCP
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellSI_Lst_RSCP newIntraFreqCellLst;
} NhuIntraFreqCellInfoSI_Lst_RSCP;

typedef struct NhuNewIntraFreqCellSI_ECN0
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfoSI_ECN0 cellInfo;
} NhuNewIntraFreqCellSI_ECN0;

typedef struct NhuNewIntraFreqCellSI_Lst_ECN0
{
 TknU16 noComp;
 NhuNewIntraFreqCellSI_ECN0 *member;
}NhuNewIntraFreqCellSI_Lst_ECN0;

typedef struct NhuIntraFreqCellInfoSI_Lst_ECN0
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellSI_Lst_ECN0 newIntraFreqCellLst;
} NhuIntraFreqCellInfoSI_Lst_ECN0;

typedef struct NhuNewIntraFreqCellSI_HCS_RSCP
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfoSI_HCS_RSCP cellInfo;
} NhuNewIntraFreqCellSI_HCS_RSCP;

typedef struct NhuNewIntraFreqCellSI_Lst_HCS_RSCP
{
 TknU16 noComp;
 NhuNewIntraFreqCellSI_HCS_RSCP *member;
}NhuNewIntraFreqCellSI_Lst_HCS_RSCP;

typedef struct NhuIntraFreqCellInfoSI_Lst_HCS_RSCP
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellSI_Lst_HCS_RSCP newIntraFreqCellLst;
} NhuIntraFreqCellInfoSI_Lst_HCS_RSCP;

typedef struct NhuNewIntraFreqCellSI_HCS_ECN0
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfoSI_HCS_ECN0 cellInfo;
} NhuNewIntraFreqCellSI_HCS_ECN0;

typedef struct NhuNewIntraFreqCellSI_Lst_HCS_ECN0
{
 TknU16 noComp;
 NhuNewIntraFreqCellSI_HCS_ECN0 *member;
}NhuNewIntraFreqCellSI_Lst_HCS_ECN0;

typedef struct NhuIntraFreqCellInfoSI_Lst_HCS_ECN0
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellSI_Lst_HCS_ECN0 newIntraFreqCellLst;
} NhuIntraFreqCellInfoSI_Lst_HCS_ECN0;

typedef struct NhuNewIntraFreqCellSI_RSCP_LCR_r4
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfoSI_RSCP_LCR_r4 cellInfo;
} NhuNewIntraFreqCellSI_RSCP_LCR_r4;

typedef struct NhuNewIntraFreqCellSI_Lst_RSCP_LCR_r4
{
 TknU16 noComp;
 NhuNewIntraFreqCellSI_RSCP_LCR_r4 *member;
}NhuNewIntraFreqCellSI_Lst_RSCP_LCR_r4;

typedef struct NhuIntraFreqCellInfoSI_Lst_RSCP_LCR_r4
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellSI_Lst_RSCP_LCR_r4 newIntraFreqCellLst;
} NhuIntraFreqCellInfoSI_Lst_RSCP_LCR_r4;

typedef struct NhuNewIntraFreqCellSI_ECN0_LCR_r4
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfoSI_ECN0_LCR_r4 cellInfo;
} NhuNewIntraFreqCellSI_ECN0_LCR_r4;

typedef struct NhuNewIntraFreqCellSI_Lst_ECN0_LCR_r4
{
 TknU16 noComp;
 NhuNewIntraFreqCellSI_ECN0_LCR_r4 *member;
}NhuNewIntraFreqCellSI_Lst_ECN0_LCR_r4;

typedef struct NhuIntraFreqCellInfoSI_Lst_ECN0_LCR_r4
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellSI_Lst_ECN0_LCR_r4 newIntraFreqCellLst;
} NhuIntraFreqCellInfoSI_Lst_ECN0_LCR_r4;

typedef struct NhuNewIntraFreqCellSI_HCS_RSCP_LCR_r4
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfoSI_HCS_RSCP_LCR_r4 cellInfo;
} NhuNewIntraFreqCellSI_HCS_RSCP_LCR_r4;

typedef struct NhuNewIntraFreqCellSI_Lst_HCS_RSCP_LCR_r4
{
 TknU16 noComp;
 NhuNewIntraFreqCellSI_HCS_RSCP_LCR_r4 *member;
}NhuNewIntraFreqCellSI_Lst_HCS_RSCP_LCR_r4;

typedef struct NhuIntraFreqCellInfoSI_Lst_HCS_RSCP_LCR_r4
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellSI_Lst_HCS_RSCP_LCR_r4 newIntraFreqCellLst;
} NhuIntraFreqCellInfoSI_Lst_HCS_RSCP_LCR_r4;

typedef struct NhuNewIntraFreqCellSI_HCS_ECN0_LCR_r4
{
 TknPres pres;
 NhuIntraFreqCellID intraFreqCellID;
 NhuCellInfoSI_HCS_ECN0_LCR_r4 cellInfo;
} NhuNewIntraFreqCellSI_HCS_ECN0_LCR_r4;

typedef struct NhuNewIntraFreqCellSI_Lst_HCS_ECN0_LCR_r4
{
 TknU16 noComp;
 NhuNewIntraFreqCellSI_HCS_ECN0_LCR_r4 *member;
}NhuNewIntraFreqCellSI_Lst_HCS_ECN0_LCR_r4;

typedef struct NhuIntraFreqCellInfoSI_Lst_HCS_ECN0_LCR_r4
{
 TknPres pres;
 NhuRemovedIntraFreqCellLst removedIntraFreqCellLst;
 NhuNewIntraFreqCellSI_Lst_HCS_ECN0_LCR_r4 newIntraFreqCellLst;
} NhuIntraFreqCellInfoSI_Lst_HCS_ECN0_LCR_r4;


typedef TknU8 NhuIntraFreqEvent_1d_r5useCIO;

typedef struct NhuIntraFreqEvent_1d_r5
{
 TknPres pres;
 NhuTrgCondition2 triggeringCondition;
 NhuIntraFreqEvent_1d_r5useCIO useCIO;
} NhuIntraFreqEvent_1d_r5;


typedef enum enumNhuIntraFreqMeasQuantity_FDD_sib3
{
 NhuIntraFreqMeasQuantity_FDD_sib3cpich_Ec_N0Enum,
 NhuIntraFreqMeasQuantity_FDD_sib3cpich_RSCPEnum
} EnumNhuIntraFreqMeasQuantity_FDD_sib3;
typedef TknU32 NhuIntraFreqMeasQuantity_FDD_sib3;

typedef enum enumNhuIntraFreqMeasQuantity_TDD_sib3LstMember
{
 NhuIntraFreqMeasQuantity_TDD_sib3LstMemberprimaryCCPCH_RSCPEnum,
 NhuIntraFreqMeasQuantity_TDD_sib3LstMembertimeslotISCPEnum
} EnumNhuIntraFreqMeasQuantity_TDD_sib3LstMember;
typedef TknU32 NhuIntraFreqMeasQuantity_TDD_sib3LstMember;

typedef struct NhuIntraFreqMeasQuantity_TDD_sib3Lst
{
 TknU16 noComp;
 NhuIntraFreqMeasQuantity_TDD_sib3LstMember *member;
}NhuIntraFreqMeasQuantity_TDD_sib3Lst;

typedef struct NhuIntraFreqMeasuredResultsLst
{
 TknU16 noComp;
 NhuCellMeasuredResults *member;
}NhuIntraFreqMeasuredResultsLst;

typedef struct NhuIntraFreqMeasuredResultsLst_v920ext
{
 TknU16 noComp;
 NhuCellMeasuredResults_v920ext *member;
}NhuIntraFreqMeasuredResultsLst_v920ext;


typedef enum enumNhuIntraFreqRepQuantityRACH_FDD
{
 NhuIntraFreqRepQuantityRACH_FDDcpich_EcN0Enum,
 NhuIntraFreqRepQuantityRACH_FDDcpich_RSCPEnum,
 NhuIntraFreqRepQuantityRACH_FDDpathlossEnum,
 NhuIntraFreqRepQuantityRACH_FDDnoReportEnum
} EnumNhuIntraFreqRepQuantityRACH_FDD;
typedef TknU32 NhuIntraFreqRepQuantityRACH_FDD;


typedef enum enumNhuIntraFreqRepQuantityRACH_TDD
{
 NhuIntraFreqRepQuantityRACH_TDDtimeslotISCPEnum,
 NhuIntraFreqRepQuantityRACH_TDDprimaryCCPCH_RSCPEnum,
 NhuIntraFreqRepQuantityRACH_TDDnoReportEnum
} EnumNhuIntraFreqRepQuantityRACH_TDD;
typedef TknU32 NhuIntraFreqRepQuantityRACH_TDD;

typedef struct NhuIntraFreqRepQuantityRACH_TDDLst
{
 TknU16 noComp;
 NhuIntraFreqRepQuantityRACH_TDD *member;
}NhuIntraFreqRepQuantityRACH_TDDLst;

typedef struct NhuIntraFreqRprtngQuantityForRACHmodeSpecificInfofdd
{
 TknPres pres;
 NhuIntraFreqRepQuantityRACH_FDD intraFreqRepQuantityRACH_FDD;
} NhuIntraFreqRprtngQuantityForRACHmodeSpecificInfofdd;

typedef struct NhuIntraFreqRprtngQuantityForRACHmodeSpecificInfotdd
{
 TknPres pres;
 NhuIntraFreqRepQuantityRACH_TDDLst intraFreqRepQuantityRACH_TDDLst;
} NhuIntraFreqRprtngQuantityForRACHmodeSpecificInfotdd;

typedef struct NhuIntraFreqRprtngQuantityForRACHmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngQuantityForRACHmodeSpecificInfofdd fdd;
  NhuIntraFreqRprtngQuantityForRACHmodeSpecificInfotdd tdd;
 } val;
} NhuIntraFreqRprtngQuantityForRACHmodeSpecificInfo;

typedef struct NhuIntraFreqRprtngQuantityForRACH
{
 TknPres pres;
 NhuSFN_SFN_OTD_Typ sfn_SFN_OTD_Typ;
 NhuIntraFreqRprtngQuantityForRACHmodeSpecificInfo modeSpecificInfo;
} NhuIntraFreqRprtngQuantityForRACH;


typedef enum enumNhuMaxReportedCellsOnRACH
{
 NhuMaxReportedCellsOnRACHnoReportEnum,
 NhuMaxReportedCellsOnRACHcurrentCellEnum,
 NhuMaxReportedCellsOnRACHcurrentAnd_1_BestNeighbourEnum,
 NhuMaxReportedCellsOnRACHcurrentAnd_2_BestNeighbourEnum,
 NhuMaxReportedCellsOnRACHcurrentAnd_3_BestNeighbourEnum,
 NhuMaxReportedCellsOnRACHcurrentAnd_4_BestNeighbourEnum,
 NhuMaxReportedCellsOnRACHcurrentAnd_5_BestNeighbourEnum,
 NhuMaxReportedCellsOnRACHcurrentAnd_6_BestNeighbourEnum
} EnumNhuMaxReportedCellsOnRACH;
typedef TknU32 NhuMaxReportedCellsOnRACH;

typedef struct NhuIntraFreqRprtngQuantity
{
 TknPres pres;
 NhuCellRprtngQuantities activeSetRprtngQuantities;
 NhuCellRprtngQuantities monitoredSetRprtngQuantities;
 NhuCellRprtngQuantities detectedSetRprtngQuantities;
} NhuIntraFreqRprtngQuantity;


typedef enum enumNhuTfrMode
{
 NhuTfrModeacknowledgedModeRLCEnum,
 NhuTfrModeunacknowledgedModeRLCEnum
} EnumNhuTfrMode;
typedef TknU32 NhuTfrMode;


typedef enum enumNhuPeriodicalOrEventTrigger
{
 NhuPeriodicalOrEventTriggerperiodicalEnum,
 NhuPeriodicalOrEventTriggereventTriggerEnum
} EnumNhuPeriodicalOrEventTrigger;
typedef TknU32 NhuPeriodicalOrEventTrigger;

typedef struct NhuMeasurementRprtngMode
{
 TknPres pres;
 NhuTfrMode measurementReportTfrMode;
 NhuPeriodicalOrEventTrigger periodicalOrEventTrigger;
} NhuMeasurementRprtngMode;

typedef struct NhuRprtngInfoForCellDCH
{
 TknPres pres;
 NhuIntraFreqRprtngQuantity intraFreqRprtngQuantity;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuCellDCH_ReportCriteria reportCriteria;
} NhuRprtngInfoForCellDCH;

typedef struct NhuIntraFreqMeasurementSysInfo_RSCP
{
 TknPres pres;
 NhuMeasurementIdentity intraFreqMeasurementID;
 NhuIntraFreqCellInfoSI_Lst_RSCP intraFreqCellInfoSI_Lst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantityForRACH intraFreqRprtngQuantityForRACH;
 NhuMaxReportedCellsOnRACH maxReportedCellsOnRACH;
 NhuRprtngInfoForCellDCH reportingInfoForCellDCH;
} NhuIntraFreqMeasurementSysInfo_RSCP;

typedef struct NhuIntraFreqMeasurementSysInfo_ECN0
{
 TknPres pres;
 NhuMeasurementIdentity intraFreqMeasurementID;
 NhuIntraFreqCellInfoSI_Lst_ECN0 intraFreqCellInfoSI_Lst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantityForRACH intraFreqRprtngQuantityForRACH;
 NhuMaxReportedCellsOnRACH maxReportedCellsOnRACH;
 NhuRprtngInfoForCellDCH reportingInfoForCellDCH;
} NhuIntraFreqMeasurementSysInfo_ECN0;

typedef struct NhuIntraFreqMeasurementSysInfo_HCS_RSCP
{
 TknPres pres;
 NhuMeasurementIdentity intraFreqMeasurementID;
 NhuIntraFreqCellInfoSI_Lst_HCS_RSCP intraFreqCellInfoSI_Lst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantityForRACH intraFreqRprtngQuantityForRACH;
 NhuMaxReportedCellsOnRACH maxReportedCellsOnRACH;
 NhuRprtngInfoForCellDCH reportingInfoForCellDCH;
} NhuIntraFreqMeasurementSysInfo_HCS_RSCP;

typedef struct NhuIntraFreqMeasurementSysInfo_HCS_ECN0
{
 TknPres pres;
 NhuMeasurementIdentity intraFreqMeasurementID;
 NhuIntraFreqCellInfoSI_Lst_HCS_ECN0 intraFreqCellInfoSI_Lst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantityForRACH intraFreqRprtngQuantityForRACH;
 NhuMaxReportedCellsOnRACH maxReportedCellsOnRACH;
 NhuRprtngInfoForCellDCH reportingInfoForCellDCH;
} NhuIntraFreqMeasurementSysInfo_HCS_ECN0;

typedef struct NhuRprtngInfoForCellDCH_LCR_r4
{
 TknPres pres;
 NhuIntraFreqRprtngQuantity intraFreqRprtngQuantity;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuCellDCH_ReportCriteria_LCR_r4 reportCriteria;
} NhuRprtngInfoForCellDCH_LCR_r4;

typedef struct NhuIntraFreqMeasurementSysInfo_RSCP_LCR_r4
{
 TknPres pres;
 NhuMeasurementIdentity intraFreqMeasurementID;
 NhuIntraFreqCellInfoSI_Lst_RSCP_LCR_r4 intraFreqCellInfoSI_Lst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantityForRACH intraFreqRprtngQuantityForRACH;
 NhuMaxReportedCellsOnRACH maxReportedCellsOnRACH;
 NhuRprtngInfoForCellDCH_LCR_r4 reportingInfoForCellDCH;
} NhuIntraFreqMeasurementSysInfo_RSCP_LCR_r4;

typedef struct NhuIntraFreqMeasurementSysInfo_ECN0_LCR_r4
{
 TknPres pres;
 NhuMeasurementIdentity intraFreqMeasurementID;
 NhuIntraFreqCellInfoSI_Lst_ECN0_LCR_r4 intraFreqCellInfoSI_Lst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantityForRACH intraFreqRprtngQuantityForRACH;
 NhuMaxReportedCellsOnRACH maxReportedCellsOnRACH;
 NhuRprtngInfoForCellDCH_LCR_r4 reportingInfoForCellDCH;
} NhuIntraFreqMeasurementSysInfo_ECN0_LCR_r4;

typedef struct NhuIntraFreqMeasurementSysInfo_HCS_RSCP_LCR_r4
{
 TknPres pres;
 NhuMeasurementIdentity intraFreqMeasurementID;
 NhuIntraFreqCellInfoSI_Lst_HCS_RSCP_LCR_r4 intraFreqCellInfoSI_Lst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantityForRACH intraFreqRprtngQuantityForRACH;
 NhuMaxReportedCellsOnRACH maxReportedCellsOnRACH;
 NhuRprtngInfoForCellDCH_LCR_r4 reportingInfoForCellDCH;
} NhuIntraFreqMeasurementSysInfo_HCS_RSCP_LCR_r4;

typedef struct NhuIntraFreqMeasurementSysInfo_HCS_ECN0_LCR_r4
{
 TknPres pres;
 NhuMeasurementIdentity intraFreqMeasurementID;
 NhuIntraFreqCellInfoSI_Lst_HCS_ECN0_LCR_r4 intraFreqCellInfoSI_Lst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantityForRACH intraFreqRprtngQuantityForRACH;
 NhuMaxReportedCellsOnRACH maxReportedCellsOnRACH;
 NhuRprtngInfoForCellDCH_LCR_r4 reportingInfoForCellDCH;
} NhuIntraFreqMeasurementSysInfo_HCS_ECN0_LCR_r4;

typedef struct NhuIntraFreqReportCriteria
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria intraFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuIntraFreqReportCriteria;

typedef struct NhuIntraFreqReportCriteria_r4
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_r4 intraFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuIntraFreqReportCriteria_r4;

typedef struct NhuIntraFreqReportCriteria_r6
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_r6 intraFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuIntraFreqReportCriteria_r6;

typedef struct NhuIntraFreqReportCriteria_r7
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_r7 intraFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuIntraFreqReportCriteria_r7;

typedef struct NhuIntraFreqReportCriteria_r9
{
 TknU8 choice;
 union {
  NhuIntraFreqRprtngCriteria_r9 intraFreqRprtngCriteria;
  NhuPeriodicalWithRprtngCellStatus periodicalRprtngCriteria;
  NhuRprtngCellStatusOpt noRprtng;
 } val;
} NhuIntraFreqReportCriteria_r9;

typedef struct NhuIntraFreqRprtngCriteria_1b_r5
{
 TknPres pres;
 NhuPeriodicRprtngInfo_1b periodicRprtngInfo_1b;
} NhuIntraFreqRprtngCriteria_1b_r5;

typedef struct NhuIntraFrequencyMeasurement
{
 TknPres pres;
 NhuIntraFreqCellInfoLst intraFreqCellInfoLst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantity intraFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuIntraFreqReportCriteria reportCriteria;
} NhuIntraFrequencyMeasurement;

typedef struct NhuIntraFrequencyMeasurement_r4
{
 TknPres pres;
 NhuIntraFreqCellInfoLst_r4 intraFreqCellInfoLst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantity intraFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuIntraFreqReportCriteria_r4 reportCriteria;
} NhuIntraFrequencyMeasurement_r4;

typedef struct NhuIntraFrequencyMeasurement_r6
{
 TknPres pres;
 NhuIntraFreqCellInfoLst_r4 intraFreqCellInfoLst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantity intraFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuIntraFreqReportCriteria_r6 reportCriteria;
} NhuIntraFrequencyMeasurement_r6;

typedef struct NhuIntraFrequencyMeasurement_r7
{
 TknPres pres;
 NhuIntraFreqCellInfoLst_r4 intraFreqCellInfoLst;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantity intraFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuIntraFreqReportCriteria_r7 reportCriteria;
} NhuIntraFrequencyMeasurement_r7;

typedef struct NhuIntraFrequencyMeasurement_r9
{
 TknPres pres;
 NhuIntraFreqCellInfoLst_r9 intraFreqCellInfoLst;
 NhuIntraFreqCellInfoLstOnSecULFreq intraFreqCellInfoLstOnSecULFreq;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantity intraFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuIntraFreqReportCriteria_r9 reportCriteria;
} NhuIntraFrequencyMeasurement_r9;

typedef struct NhuIntraFrequencyMeasurement_r10
{
 TknPres pres;
 NhuIntraFreqCellInfoLst_r10 intraFreqCellInfoLst;
 NhuIntraFreqCellInfoLstOnSecULFreq intraFreqCellInfoLstOnSecULFreq;
 NhuIntraFreqMeasQuantity intraFreqMeasQuantity;
 NhuIntraFreqRprtngQuantity intraFreqRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuIntraFreqReportCriteria_r9 reportCriteria;
} NhuIntraFrequencyMeasurement_r10;

typedef struct NhuIntraFrequencyMeasuredResultsLstOnSecULFreq
{
 TknU16 noComp;
 NhuCellMeasuredResults_r9 *member;
}NhuIntraFrequencyMeasuredResultsLstOnSecULFreq;


typedef TknS32 NhuRSCPforANRrSCP;

typedef struct NhuRSCPforANR
{
 TknPres pres;
 NhuRSCPforANRrSCP rSCP;
} NhuRSCPforANR;

typedef struct NhuLoggingAbsoluteThreshold
{
 TknU8 choice;
 union {
  NhuRSCPforANR rscpforANR;
  NhuEc_N0forANR ec_N0forANR;
 } val;
} NhuLoggingAbsoluteThreshold;


typedef TknS32 NhuLoggingRelativeThreshold;

typedef struct NhuIntraUTRAANR
{
 TknPres pres;
 NhuLoggingAbsoluteThreshold loggingAbsoluteThreshold;
 NhuLoggingRelativeThreshold loggingRelativeThreshold;
} NhuIntraUTRAANR;


typedef enum enumNhuIP_Length
{
 NhuIP_Lengthipl5Enum,
 NhuIP_Lengthipl10Enum
} EnumNhuIP_Length;
typedef TknU32 NhuIP_Length;


typedef TknU8 NhuIP_PCCPCH_r4;


typedef enum enumNhuIP_Spacing
{
 NhuIP_Spacinge5Enum,
 NhuIP_Spacinge7Enum,
 NhuIP_Spacinge10Enum,
 NhuIP_Spacinge15Enum,
 NhuIP_Spacinge20Enum,
 NhuIP_Spacinge30Enum,
 NhuIP_Spacinge40Enum,
 NhuIP_Spacinge50Enum
} EnumNhuIP_Spacing;
typedef TknU32 NhuIP_Spacing;


typedef enum enumNhuIP_Spacing_TDD
{
 NhuIP_Spacing_TDDe30Enum,
 NhuIP_Spacing_TDDe40Enum,
 NhuIP_Spacing_TDDe50Enum,
 NhuIP_Spacing_TDDe70Enum,
 NhuIP_Spacing_TDDe100Enum
} EnumNhuIP_Spacing_TDD;
typedef TknU32 NhuIP_Spacing_TDD;


typedef enum enumNhuLoggedANRCfgInfologgingDuration
{
 NhuLoggedANRCfgInfologgingDurationmin10Enum,
 NhuLoggedANRCfgInfologgingDurationmin30Enum,
 NhuLoggedANRCfgInfologgingDurationhr1Enum,
 NhuLoggedANRCfgInfologgingDurationspare2Enum,
 NhuLoggedANRCfgInfologgingDurationspare1Enum
} EnumNhuLoggedANRCfgInfologgingDuration;
typedef TknU32 NhuLoggedANRCfgInfologgingDuration;


typedef enum enumNhuLoggedANRCfgInfointerRATANRforEUTRAIndicator
{
 NhuLoggedANRCfgInfointerRATANRforEUTRAIndicatortrueEnum
} EnumNhuLoggedANRCfgInfointerRATANRforEUTRAIndicator;
typedef TknU32 NhuLoggedANRCfgInfointerRATANRforEUTRAIndicator;


typedef enum enumNhuLoggedANRCfgInfointerRATANRforGSMIndicator
{
 NhuLoggedANRCfgInfointerRATANRforGSMIndicatortrueEnum
} EnumNhuLoggedANRCfgInfointerRATANRforGSMIndicator;
typedef TknU32 NhuLoggedANRCfgInfointerRATANRforGSMIndicator;

typedef struct NhuLoggedANRCfgInfo
{
 TknPres pres;
 NhuLoggedANRCfgInfologgingDuration loggingDuration;
 NhuIntraUTRAANR intraUTRAANR;
 NhuLoggedANRCfgInfointerRATANRforEUTRAIndicator interRATANRforEUTRAIndicator;
 NhuLoggedANRCfgInfointerRATANRforGSMIndicator interRATANRforGSMIndicator;
} NhuLoggedANRCfgInfo;

typedef struct NhuLoggedUTRACellInfo
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuCellIdentity cellIdentity;
 NhuUARFCN uarfcn;
 NhuCellParamsID cellParamsID;
 NhuPrimaryScramblingCode primaryScramblingCode;
} NhuLoggedUTRACellInfo;


typedef TknStrBSXL NhuLoggedEUTRACellInfotrackingAreaCode;

typedef TknStrBSXL NhuLoggedEUTRACellInfoeutraCellIdentity;
typedef struct NhuLoggedEUTRACellInfo
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuLoggedEUTRACellInfotrackingAreaCode trackingAreaCode;
 NhuLoggedEUTRACellInfoeutraCellIdentity eutraCellIdentity;
 NhuEARFCN earfcn;
 NhuEUTRA_PhysicalCellIdentity physicalCellIdentity;
} NhuLoggedEUTRACellInfo;


typedef TknStrBSXL NhuLoggedGSMCellInfolac;

typedef TknStrBSXL NhuLoggedGSMCellInfogsmCellIdentity;
typedef struct NhuLoggedGSMCellInfo
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuLoggedGSMCellInfolac lac;
 NhuLoggedGSMCellInfogsmCellIdentity gsmCellIdentity;
 NhuBCCH_ARFCN bcch_ARFCN;
 NhuFrequency_Band bandIndicator;
 NhuBSIC bsic;
} NhuLoggedGSMCellInfo;

typedef struct NhuLoggedCellInfo
{
 TknU8 choice;
 union {
  NhuLoggedUTRACellInfo loggedUTRACellInfo;
  NhuLoggedEUTRACellInfo loggedEUTRACellInfo;
  NhuLoggedGSMCellInfo loggedGSMCellInfo;
 } val;
} NhuLoggedCellInfo;

typedef struct NhuLoggedANRReportInfo
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuCellIdentity servingCell;
 NhuLoggedCellInfo loggedCellInfo;
} NhuLoggedANRReportInfo;

typedef struct NhuLoggedANRReportInfoLst
{
 TknU16 noComp;
 NhuLoggedANRReportInfo *member;
}NhuLoggedANRReportInfoLst;


typedef TknStrOSXL NhuTraceReferencetraceId;
typedef struct NhuTraceReference
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
 NhuTraceReferencetraceId traceId;
} NhuTraceReference;


typedef TknStrOSXL NhuTraceRecordingSessiontraceRecordingSession;
typedef struct NhuTraceRecordingSession
{
 TknPres pres;
 NhuTraceRecordingSessiontraceRecordingSession traceRecordingSession;
} NhuTraceRecordingSession;


typedef TknStrOSXL NhuTCE_Idtce_Id;
typedef struct NhuTCE_Id
{
 TknPres pres;
 NhuTCE_Idtce_Id tce_Id;
} NhuTCE_Id;


typedef TknStrBSXL NhuLoggedMeasurementsCfgInfoabsoluteTimeInfo;

typedef enum enumNhuLoggedMeasurementsCfgInfologgingDuration
{
 NhuLoggedMeasurementsCfgInfologgingDurationmin10Enum,
 NhuLoggedMeasurementsCfgInfologgingDurationmin20Enum,
 NhuLoggedMeasurementsCfgInfologgingDurationmin40Enum,
 NhuLoggedMeasurementsCfgInfologgingDurationhr1Enum,
 NhuLoggedMeasurementsCfgInfologgingDurationhr1min30Enum,
 NhuLoggedMeasurementsCfgInfologgingDurationhr2Enum,
 NhuLoggedMeasurementsCfgInfologgingDurationspare2Enum,
 NhuLoggedMeasurementsCfgInfologgingDurationspare1Enum
} EnumNhuLoggedMeasurementsCfgInfologgingDuration;
typedef TknU32 NhuLoggedMeasurementsCfgInfologgingDuration;


typedef enum enumNhuLoggedMeasurementsCfgInfologgingInterval
{
 NhuLoggedMeasurementsCfgInfologgingIntervalli128Enum,
 NhuLoggedMeasurementsCfgInfologgingIntervalli256Enum,
 NhuLoggedMeasurementsCfgInfologgingIntervalli512Enum,
 NhuLoggedMeasurementsCfgInfologgingIntervalli1024Enum,
 NhuLoggedMeasurementsCfgInfologgingIntervalli2048Enum,
 NhuLoggedMeasurementsCfgInfologgingIntervalli3072Enum,
 NhuLoggedMeasurementsCfgInfologgingIntervalli4096Enum,
 NhuLoggedMeasurementsCfgInfologgingIntervalli6144Enum
} EnumNhuLoggedMeasurementsCfgInfologgingInterval;
typedef TknU32 NhuLoggedMeasurementsCfgInfologgingInterval;

typedef struct NhuLoggedMeasurementsCfgInfoareaCfgcellIDLst
{
 TknU16 noComp;
 NhuCellIdentity *member;
}NhuLoggedMeasurementsCfgInfoareaCfgcellIDLst;

typedef struct NhuLoggedMeasurementsCfgInfoareaCfglocationAreaLst
{
 TknU16 noComp;
 NhuLAI *member;
}NhuLoggedMeasurementsCfgInfoareaCfglocationAreaLst;

typedef struct NhuLoggedMeasurementsCfgInfoareaCfgroutingAreaLst
{
 TknU16 noComp;
 NhuRAI *member;
}NhuLoggedMeasurementsCfgInfoareaCfgroutingAreaLst;

typedef struct NhuLoggedMeasurementsCfgInfoareaCfg
{
 TknU8 choice;
 union {
  NhuLoggedMeasurementsCfgInfoareaCfgcellIDLst cellIDLst;
  NhuLoggedMeasurementsCfgInfoareaCfglocationAreaLst locationAreaLst;
  NhuLoggedMeasurementsCfgInfoareaCfgroutingAreaLst routingAreaLst;
 } val;
} NhuLoggedMeasurementsCfgInfoareaCfg;

typedef struct NhuLoggedMeasurementsCfgInfo
{
 TknPres pres;
 NhuLoggedMeasurementsCfgInfoabsoluteTimeInfo absoluteTimeInfo;
 NhuLoggedMeasurementsCfgInfologgingDuration loggingDuration;
 NhuLoggedMeasurementsCfgInfologgingInterval loggingInterval;
 NhuTraceReference traceReference;
 NhuTraceRecordingSession traceRecordingSession;
 NhuTCE_Id tce_Id;
 NhuLoggedMeasurementsCfgInfoareaCfg areaCfg;
} NhuLoggedMeasurementsCfgInfo;

typedef struct NhuLoggedMeasNeighbourInfo_FDD
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuCPICH_RSCP cpich_RSCP;
 NhuCPICH_Ec_N0 cpich_Ec_N0;
} NhuLoggedMeasNeighbourInfo_FDD;

typedef struct NhuLoggedMeasInterfreqInfo_FDDloggedMeasInterfreqNeighbourLst
{
 TknU16 noComp;
 NhuLoggedMeasNeighbourInfo_FDD *member;
}NhuLoggedMeasInterfreqInfo_FDDloggedMeasInterfreqNeighbourLst;

typedef struct NhuLoggedMeasInterfreqInfo_FDD
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuLoggedMeasInterfreqInfo_FDDloggedMeasInterfreqNeighbourLst loggedMeasInterfreqNeighbourLst;
} NhuLoggedMeasInterfreqInfo_FDD;

typedef struct NhuLoggedMeasInterfreqLst_FDD
{
 TknU16 noComp;
 NhuLoggedMeasInterfreqInfo_FDD *member;
}NhuLoggedMeasInterfreqLst_FDD;

typedef struct NhuLoggedMeasNeighbourMeas_TDD128
{
 TknPres pres;
 NhuCellParamsID cellParamsID;
 NhuPrimaryCCPCH_RSCP primaryCCPCH_RSCP;
} NhuLoggedMeasNeighbourMeas_TDD128;

typedef struct NhuLoggedMeasInterfreqNeighbourLst_TDD128
{
 TknU16 noComp;
 NhuLoggedMeasNeighbourMeas_TDD128 *member;
}NhuLoggedMeasInterfreqNeighbourLst_TDD128;

typedef struct NhuLoggedMeasInterfreqInfo_TDD128
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuLoggedMeasInterfreqNeighbourLst_TDD128 loggedMeasInterfreqNeighbourLst;
} NhuLoggedMeasInterfreqInfo_TDD128;


typedef TknU32 NhuLoggedMeasEUTRAFreqNeighbourInforSRP;


typedef TknU32 NhuLoggedMeasEUTRAFreqNeighbourInforSRQ;

typedef struct NhuLoggedMeasEUTRAFreqNeighbourInfo
{
 TknPres pres;
 NhuEUTRA_PhysicalCellIdentity physicalCellIdentity;
 NhuLoggedMeasEUTRAFreqNeighbourInforSRP rSRP;
 NhuLoggedMeasEUTRAFreqNeighbourInforSRQ rSRQ;
} NhuLoggedMeasEUTRAFreqNeighbourInfo;

typedef struct NhuLoggedMeasEUTRAFreqInfologgedMeasEUTRAFreqNeighbourInfoLst
{
 TknU16 noComp;
 NhuLoggedMeasEUTRAFreqNeighbourInfo *member;
}NhuLoggedMeasEUTRAFreqInfologgedMeasEUTRAFreqNeighbourInfoLst;

typedef struct NhuLoggedMeasEUTRAFreqInfo
{
 TknPres pres;
 NhuEARFCN earfcn;
 NhuLoggedMeasEUTRAFreqInfologgedMeasEUTRAFreqNeighbourInfoLst loggedMeasEUTRAFreqNeighbourInfoLst;
} NhuLoggedMeasEUTRAFreqInfo;

typedef struct NhuLoggedMeasEUTRAFreqLst
{
 TknU16 noComp;
 NhuLoggedMeasEUTRAFreqInfo *member;
}NhuLoggedMeasEUTRAFreqLst;

typedef struct NhuLoggedMeasGSMNeighbourCellsinfo
{
 TknPres pres;
 NhuBSIC bsic;
 NhuFrequency_Band frequency_band;
 NhuBCCH_ARFCN bcch_ARFCN;
 NhuGSM_CarrierRSSI gsm_CarrierRSSI;
} NhuLoggedMeasGSMNeighbourCellsinfo;

typedef struct NhuLoggedMeasGSMNeighbourCellsLst
{
 TknU16 noComp;
 NhuLoggedMeasGSMNeighbourCellsinfo *member;
}NhuLoggedMeasGSMNeighbourCellsLst;

typedef struct NhuLoggedMeasInterRATNeighbourMeas
{
 TknPres pres;
 NhuLoggedMeasEUTRAFreqLst loggedMeasEUTRAFreqLst;
 NhuLoggedMeasGSMNeighbourCellsLst loggedMeasGSMNeighbourCellsLst;
} NhuLoggedMeasInterRATNeighbourMeas;

typedef struct NhuLoggedMeasIntrafreqNeighbourLst_FDD
{
 TknU16 noComp;
 NhuLoggedMeasNeighbourInfo_FDD *member;
}NhuLoggedMeasIntrafreqNeighbourLst_FDD;

typedef struct NhuLoggedMeasIntrafreqNeighbourMeasLst_TDD128
{
 TknU16 noComp;
 NhuLoggedMeasNeighbourMeas_TDD128 *member;
}NhuLoggedMeasIntrafreqNeighbourMeasLst_TDD128;

typedef struct NhuLoggedMeasLocInfo
{
 TknU8 choice;
 union {
  NhuEllipsoidPoint ellipsoidPoint;
  NhuEllipsoidPointAltitude ellipsoidPointAltitude;
 } val;
} NhuLoggedMeasLocInfo;

typedef struct NhuLoggedMeasServingCellMeas_FDD
{
 TknPres pres;
 NhuCellIdentity cellIdentity;
 NhuCPICH_RSCP cpich_RSCP;
 NhuCPICH_Ec_N0 cpich_Ec_N0;
} NhuLoggedMeasServingCellMeas_FDD;


typedef TknU32 NhuLoggedMeasInfo_FDDrelativeTimeStamp;

typedef struct NhuLoggedMeasInfo_FDD
{
 TknPres pres;
 NhuLoggedMeasInfo_FDDrelativeTimeStamp relativeTimeStamp;
 NhuLoggedMeasServingCellMeas_FDD loggedMeasServingCellMeas;
 NhuLoggedMeasIntrafreqNeighbourLst_FDD loggedMeasIntrafreqNeighbourLst;
 NhuLoggedMeasInterfreqLst_FDD loggedMeasInterfreqLst;
 NhuLoggedMeasInterRATNeighbourMeas loggedMeasInterRATNeighbourMeas;
 NhuLoggedMeasLocInfo loggedMeasLocInfo;
} NhuLoggedMeasInfo_FDD;

typedef struct NhuLoggedMeasServingCellMeas_TDD128
{
 TknPres pres;
 NhuCellIdentity cellIdentity;
 NhuPrimaryCCPCH_RSCP primaryCCPCH_RSCP;
} NhuLoggedMeasServingCellMeas_TDD128;

typedef struct NhuLoggedMeasInterfreqLst_TDD128
{
 TknU16 noComp;
 NhuLoggedMeasInterfreqInfo_TDD128 *member;
}NhuLoggedMeasInterfreqLst_TDD128;


typedef TknU32 NhuLoggedMeasInfo_TDD128relativeTimeStamp;

typedef struct NhuLoggedMeasInfo_TDD128
{
 TknPres pres;
 NhuLoggedMeasInfo_TDD128relativeTimeStamp relativeTimeStamp;
 NhuLoggedMeasServingCellMeas_TDD128 loggedMeasServingCellMeas;
 NhuLoggedMeasIntrafreqNeighbourMeasLst_TDD128 loggedMeasIntrafreqNeighbourLst;
 NhuLoggedMeasInterfreqLst_TDD128 loggedMeasInterfreqLst;
 NhuLoggedMeasInterRATNeighbourMeas loggedMeasInterRATNeighbourMeas;
 NhuLoggedMeasLocInfo loggedMeasLocInfo;
} NhuLoggedMeasInfo_TDD128;

typedef struct NhuLoggedMeasInfoLst_FDD
{
 TknU16 noComp;
 NhuLoggedMeasInfo_FDD *member;
}NhuLoggedMeasInfoLst_FDD;

typedef struct NhuLoggedMeasInfoLst_TDD128
{
 TknU16 noComp;
 NhuLoggedMeasInfo_TDD128 *member;
}NhuLoggedMeasInfoLst_TDD128;

typedef struct NhuLoggedMeasInfoLstmodeSpecificInfofdd
{
 TknPres pres;
 NhuLoggedMeasInfoLst_FDD loggedMeasInfoLst;
} NhuLoggedMeasInfoLstmodeSpecificInfofdd;

typedef struct NhuLoggedMeasInfoLstmodeSpecificInfotdd
{
 TknPres pres;
 NhuLoggedMeasInfoLst_TDD128 loggedMeasInfoLst;
} NhuLoggedMeasInfoLstmodeSpecificInfotdd;

typedef struct NhuLoggedMeasInfoLstmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuLoggedMeasInfoLstmodeSpecificInfofdd fdd;
  NhuLoggedMeasInfoLstmodeSpecificInfotdd tdd;
 } val;
} NhuLoggedMeasInfoLstmodeSpecificInfo;

typedef struct NhuLoggedMeasInfoLst
{
 TknPres pres;
 NhuLoggedMeasInfoLstmodeSpecificInfo modeSpecificInfo;
} NhuLoggedMeasInfoLst;


typedef TknStrBSXL NhuLoggedMeasReportabsoluteTimeInfo;

typedef enum enumNhuLoggedMeasReportloggedMeasAvailable
{
 NhuLoggedMeasReportloggedMeasAvailabletrueEnum
} EnumNhuLoggedMeasReportloggedMeasAvailable;
typedef TknU32 NhuLoggedMeasReportloggedMeasAvailable;

typedef struct NhuLoggedMeasReport
{
 TknPres pres;
 NhuLoggedMeasReportabsoluteTimeInfo absoluteTimeInfo;
 NhuTraceReference traceReference;
 NhuTraceRecordingSession traceRecordingSession;
 NhuTCE_Id tce_Id;
 NhuLoggedMeasInfoLst loggedMeasInfoLst;
 NhuLoggedMeasReportloggedMeasAvailable loggedMeasAvailable;
} NhuLoggedMeasReport;


typedef enum enumNhuRLC_BuffersPayload
{
 NhuRLC_BuffersPayloadpl0Enum,
 NhuRLC_BuffersPayloadpl4Enum,
 NhuRLC_BuffersPayloadpl8Enum,
 NhuRLC_BuffersPayloadpl16Enum,
 NhuRLC_BuffersPayloadpl32Enum,
 NhuRLC_BuffersPayloadpl64Enum,
 NhuRLC_BuffersPayloadpl128Enum,
 NhuRLC_BuffersPayloadpl256Enum,
 NhuRLC_BuffersPayloadpl512Enum,
 NhuRLC_BuffersPayloadpl1024Enum,
 NhuRLC_BuffersPayloadpl2kEnum,
 NhuRLC_BuffersPayloadpl4kEnum,
 NhuRLC_BuffersPayloadpl8kEnum,
 NhuRLC_BuffersPayloadpl16kEnum,
 NhuRLC_BuffersPayloadpl32kEnum,
 NhuRLC_BuffersPayloadpl64kEnum,
 NhuRLC_BuffersPayloadpl128kEnum,
 NhuRLC_BuffersPayloadpl256kEnum,
 NhuRLC_BuffersPayloadpl512kEnum,
 NhuRLC_BuffersPayloadpl1024kEnum,
 NhuRLC_BuffersPayloadspare12Enum,
 NhuRLC_BuffersPayloadspare11Enum,
 NhuRLC_BuffersPayloadspare10Enum,
 NhuRLC_BuffersPayloadspare9Enum,
 NhuRLC_BuffersPayloadspare8Enum,
 NhuRLC_BuffersPayloadspare7Enum,
 NhuRLC_BuffersPayloadspare6Enum,
 NhuRLC_BuffersPayloadspare5Enum,
 NhuRLC_BuffersPayloadspare4Enum,
 NhuRLC_BuffersPayloadspare3Enum,
 NhuRLC_BuffersPayloadspare2Enum,
 NhuRLC_BuffersPayloadspare1Enum
} EnumNhuRLC_BuffersPayload;
typedef TknU32 NhuRLC_BuffersPayload;


typedef enum enumNhuVarianceOfRLC_BufferPayload
{
 NhuVarianceOfRLC_BufferPayloadplv0Enum,
 NhuVarianceOfRLC_BufferPayloadplv4Enum,
 NhuVarianceOfRLC_BufferPayloadplv8Enum,
 NhuVarianceOfRLC_BufferPayloadplv16Enum,
 NhuVarianceOfRLC_BufferPayloadplv32Enum,
 NhuVarianceOfRLC_BufferPayloadplv64Enum,
 NhuVarianceOfRLC_BufferPayloadplv128Enum,
 NhuVarianceOfRLC_BufferPayloadplv256Enum,
 NhuVarianceOfRLC_BufferPayloadplv512Enum,
 NhuVarianceOfRLC_BufferPayloadplv1024Enum,
 NhuVarianceOfRLC_BufferPayloadplv2kEnum,
 NhuVarianceOfRLC_BufferPayloadplv4kEnum,
 NhuVarianceOfRLC_BufferPayloadplv8kEnum,
 NhuVarianceOfRLC_BufferPayloadplv16kEnum,
 NhuVarianceOfRLC_BufferPayloadspare2Enum,
 NhuVarianceOfRLC_BufferPayloadspare1Enum
} EnumNhuVarianceOfRLC_BufferPayload;
typedef TknU32 NhuVarianceOfRLC_BufferPayload;

typedef struct NhuTrafficVolumeMeasuredResults
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRLC_BuffersPayload rlc_BuffersPayload;
 NhuAverageRLC_BufferPayload averageRLC_BufferPayload;
 NhuVarianceOfRLC_BufferPayload varianceOfRLC_BufferPayload;
} NhuTrafficVolumeMeasuredResults;

typedef struct NhuTrafficVolumeMeasuredResultsLst
{
 TknU16 noComp;
 NhuTrafficVolumeMeasuredResults *member;
}NhuTrafficVolumeMeasuredResultsLst;


typedef TknU32 NhuSIR;

typedef struct NhuSIR_TimeslotLst
{
 TknU16 noComp;
 NhuSIR *member;
}NhuSIR_TimeslotLst;

typedef struct NhuSIR_MeasurementResults
{
 TknPres pres;
 NhuTFCS_IdentityPlain tfcs_ID;
 NhuSIR_TimeslotLst sir_TimeslotLst;
} NhuSIR_MeasurementResults;

typedef struct NhuSIR_MeasurementLst
{
 TknU16 noComp;
 NhuSIR_MeasurementResults *member;
}NhuSIR_MeasurementLst;

typedef struct NhuQualityMeasuredResultsmodeSpecificInfotdd
{
 TknPres pres;
 NhuSIR_MeasurementLst sir_MeasurementResults;
} NhuQualityMeasuredResultsmodeSpecificInfotdd;

typedef struct NhuQualityMeasuredResultsmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuQualityMeasuredResultsmodeSpecificInfotdd tdd;
 } val;
} NhuQualityMeasuredResultsmodeSpecificInfo;

typedef struct NhuQualityMeasuredResults
{
 TknPres pres;
 NhuBLER_MeasurementResultsLst blerMeasurementResultsLst;
 NhuQualityMeasuredResultsmodeSpecificInfo modeSpecificInfo;
} NhuQualityMeasuredResults;


typedef TknU32 NhuUE_TransmittedPower;


typedef TknU32 NhuUE_RX_TX_TimeDifferenceTyp1;

typedef struct NhuUE_RX_TX_ReportEntry
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuUE_RX_TX_TimeDifferenceTyp1 ue_RX_TX_TimeDifferenceTyp1;
} NhuUE_RX_TX_ReportEntry;

typedef struct NhuUE_RX_TX_ReportEntryLst
{
 TknU16 noComp;
 NhuUE_RX_TX_ReportEntry *member;
}NhuUE_RX_TX_ReportEntryLst;

typedef struct NhuUE_TransmittedPowerTDD_Lst
{
 TknU16 noComp;
 NhuUE_TransmittedPower *member;
}NhuUE_TransmittedPowerTDD_Lst;

typedef struct NhuUE_InternalMeasuredResultsmodeSpecificInfofdd
{
 TknPres pres;
 NhuUE_TransmittedPower ue_TransmittedPowerFDD;
 NhuUE_RX_TX_ReportEntryLst ue_RX_TX_ReportEntryLst;
} NhuUE_InternalMeasuredResultsmodeSpecificInfofdd;

typedef struct NhuUE_InternalMeasuredResultsmodeSpecificInfotdd
{
 TknPres pres;
 NhuUE_TransmittedPowerTDD_Lst ue_TransmittedPowerTDD_Lst;
 NhuUL_TimingAdvance appliedTA;
} NhuUE_InternalMeasuredResultsmodeSpecificInfotdd;

typedef struct NhuUE_InternalMeasuredResultsmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_InternalMeasuredResultsmodeSpecificInfofdd fdd;
  NhuUE_InternalMeasuredResultsmodeSpecificInfotdd tdd;
 } val;
} NhuUE_InternalMeasuredResultsmodeSpecificInfo;

typedef struct NhuUE_InternalMeasuredResults
{
 TknPres pres;
 NhuUE_InternalMeasuredResultsmodeSpecificInfo modeSpecificInfo;
} NhuUE_InternalMeasuredResults;


typedef enum enumNhuUE_Positioning_ErrCause
{
 NhuUE_Positioning_ErrCausenotEnoughOTDOA_CellsEnum,
 NhuUE_Positioning_ErrCausenotEnoughGPS_SatellitesEnum,
 NhuUE_Positioning_ErrCauseassistanceDataMissingEnum,
 NhuUE_Positioning_ErrCausenotAccomplishedGPS_TimingOfCellFramesEnum,
 NhuUE_Positioning_ErrCauseundefinedErrEnum,
 NhuUE_Positioning_ErrCauserequestDeniedByUserEnum,
 NhuUE_Positioning_ErrCausenotProcessedAndTimeoutEnum,
 NhuUE_Positioning_ErrCausereferenceCellNotServingCellEnum
} EnumNhuUE_Positioning_ErrCause;
typedef TknU32 NhuUE_Positioning_ErrCause;

typedef struct NhuSatData
{
 TknPres pres;
 NhuSatID satID;
 NhuIODE iode;
} NhuSatData;

typedef struct NhuSatDataLst
{
 TknU16 noComp;
 NhuSatData *member;
}NhuSatDataLst;


typedef TknU32 NhuUE_Positioning_GPS_NavModelAddDataReqgps_Week;


typedef TknU32 NhuUE_Positioning_GPS_NavModelAddDataReqgps_Toe;


typedef TknU32 NhuUE_Positioning_GPS_NavModelAddDataReqtToeLimit;

typedef struct NhuUE_Positioning_GPS_NavModelAddDataReq
{
 TknPres pres;
 NhuUE_Positioning_GPS_NavModelAddDataReqgps_Week gps_Week;
 NhuUE_Positioning_GPS_NavModelAddDataReqgps_Toe gps_Toe;
 NhuUE_Positioning_GPS_NavModelAddDataReqtToeLimit tToeLimit;
 NhuSatDataLst satDataLst;
} NhuUE_Positioning_GPS_NavModelAddDataReq;


typedef TknU8 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstalmanacRqst;


typedef TknU8 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstutcModelRqst;


typedef TknU8 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstionosphericModelRqst;


typedef TknU8 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstnavigationModelRqst;


typedef TknU8 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstdgpsCorrectionsRqst;


typedef TknU8 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstreferenceLocRqst;


typedef TknU8 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstreferenceTimeRqst;


typedef TknU8 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstaquisitionAssistanceRqst;


typedef TknU8 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstrealTimeIntegrityRqst;

typedef struct NhuUE_Positioning_GPS_AdditionalAssistanceDataRqst
{
 TknPres pres;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstalmanacRqst almanacRqst;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstutcModelRqst utcModelRqst;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstionosphericModelRqst ionosphericModelRqst;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstnavigationModelRqst navigationModelRqst;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstdgpsCorrectionsRqst dgpsCorrectionsRqst;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstreferenceLocRqst referenceLocRqst;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstreferenceTimeRqst referenceTimeRqst;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstaquisitionAssistanceRqst aquisitionAssistanceRqst;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqstrealTimeIntegrityRqst realTimeIntegrityRqst;
 NhuUE_Positioning_GPS_NavModelAddDataReq navModelAddDataRqst;
} NhuUE_Positioning_GPS_AdditionalAssistanceDataRqst;

typedef struct NhuUE_Positioning_Err
{
 TknPres pres;
 NhuUE_Positioning_ErrCause errorReason;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqst ue_positioning_GPS_additionalAssistanceDataRqst;
} NhuUE_Positioning_Err;

typedef struct NhuUE_Positioning_MeasuredResults
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_Measurement ue_positioning_OTDOA_Measurement;
 NhuUE_Positioning_PositionEstimateInfo ue_positioning_PositionEstimateInfo;
 NhuUE_Positioning_GPS_MeasurementResults ue_positioning_GPS_Measurement;
 NhuUE_Positioning_Err ue_positioning_Err;
} NhuUE_Positioning_MeasuredResults;

typedef struct NhuMeasuredResults
{
 TknU8 choice;
 union {
  NhuIntraFreqMeasuredResultsLst intraFreqMeasuredResultsLst;
  NhuInterFreqMeasuredResultsLst interFreqMeasuredResultsLst;
  NhuInterRATMeasuredResultsLst interRATMeasuredResultsLst;
  NhuTrafficVolumeMeasuredResultsLst trafficVolumeMeasuredResultsLst;
  NhuQualityMeasuredResults qualityMeasuredResults;
  NhuUE_InternalMeasuredResults ue_InternalMeasuredResults;
  NhuUE_Positioning_MeasuredResults ue_positioning_MeasuredResults;
 } val;
} NhuMeasuredResults;

typedef struct NhuMeasuredResultsOnSecUlFreq
{
 TknPres pres;
 NhuIntraFrequencyMeasuredResultsLstOnSecULFreq intraFreqMeasuredResultsLst;
} NhuMeasuredResultsOnSecUlFreq;

typedef struct NhuNeighbour_v390extmodeSpecificInfofdd
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
} NhuNeighbour_v390extmodeSpecificInfofdd;

typedef struct NhuNeighbour_v390extmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuNeighbour_v390extmodeSpecificInfofdd fdd;
 } val;
} NhuNeighbour_v390extmodeSpecificInfo;

typedef struct NhuNeighbour_v390ext
{
 TknPres pres;
 NhuNeighbour_v390extmodeSpecificInfo modeSpecificInfo;
} NhuNeighbour_v390ext;

typedef struct NhuNeighbourLst_v390ext
{
 TknU16 noComp;
 NhuNeighbour_v390ext *member;
}NhuNeighbourLst_v390ext;

typedef struct NhuUE_Positioning_OTDOA_Measurement_v390ext
{
 TknPres pres;
 NhuNeighbourLst_v390ext neighbourLst_v390ext;
} NhuUE_Positioning_OTDOA_Measurement_v390ext;

typedef struct NhuUE_Positioning_MeasuredResults_v390ext
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_Measurement_v390ext ue_Positioning_OTDOA_Measurement_v390ext;
} NhuUE_Positioning_MeasuredResults_v390ext;

typedef struct NhuMeasuredResults_v390ext
{
 TknPres pres;
 NhuUE_Positioning_MeasuredResults_v390ext ue_positioning_MeasuredResults_v390ext;
} NhuMeasuredResults_v390ext;

typedef struct NhuMeasuredResults_v590ext
{
 TknU8 choice;
 union {
  NhuIntraFrequencyMeasuredResultsLst_v590ext intraFrequencyMeasuredResultsLst;
  NhuInterFrequencyMeasuredResultsLst_v590ext interFrequencyMeasuredResultsLst;
 } val;
} NhuMeasuredResults_v590ext;


typedef TknU32 NhuT_ADVinfo_extt_ADV;


typedef TknU32 NhuT_ADVinfo_extsfn;

typedef struct NhuT_ADVinfo_ext
{
 TknPres pres;
 NhuT_ADVinfo_extt_ADV t_ADV;
 NhuT_ADVinfo_extsfn sfn;
} NhuT_ADVinfo_ext;

typedef struct NhuUE_InternalMeasuredResults_v770extmodeSpecificInfotdd384_768
{
 TknPres pres;
 NhuEXT_UL_TimingAdvance appliedTA;
} NhuUE_InternalMeasuredResults_v770extmodeSpecificInfotdd384_768;

typedef struct NhuUE_InternalMeasuredResults_v770extmodeSpecificInfotdd128
{
 TknPres pres;
 NhuT_ADVinfo_ext t_ADVinfo;
} NhuUE_InternalMeasuredResults_v770extmodeSpecificInfotdd128;

typedef struct NhuUE_InternalMeasuredResults_v770extmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_InternalMeasuredResults_v770extmodeSpecificInfotdd384_768 tdd384_768;
  NhuUE_InternalMeasuredResults_v770extmodeSpecificInfotdd128 tdd128;
 } val;
} NhuUE_InternalMeasuredResults_v770extmodeSpecificInfo;

typedef struct NhuUE_InternalMeasuredResults_v770ext
{
 TknPres pres;
 NhuUE_InternalMeasuredResults_v770extmodeSpecificInfo modeSpecificInfo;
} NhuUE_InternalMeasuredResults_v770ext;


typedef enum enumNhuUE_Positioning_ErrCause_r7
{
 NhuUE_Positioning_ErrCause_r7notEnoughOTDOA_CellsEnum,
 NhuUE_Positioning_ErrCause_r7notEnoughGPS_SatellitesEnum,
 NhuUE_Positioning_ErrCause_r7assistanceDataMissingEnum,
 NhuUE_Positioning_ErrCause_r7notAccomplishedGPS_TimingOfCellFramesEnum,
 NhuUE_Positioning_ErrCause_r7undefinedErrEnum,
 NhuUE_Positioning_ErrCause_r7requestDeniedByUserEnum,
 NhuUE_Positioning_ErrCause_r7notProcessedAndTimeoutEnum,
 NhuUE_Positioning_ErrCause_r7referenceCellNotServingCellEnum,
 NhuUE_Positioning_ErrCause_r7notEnoughGANSS_SatellitesEnum,
 NhuUE_Positioning_ErrCause_r7notAccomplishedGANSS_TimingOfCellFramesEnum,
 NhuUE_Positioning_ErrCause_r7spare6Enum,
 NhuUE_Positioning_ErrCause_r7spare5Enum,
 NhuUE_Positioning_ErrCause_r7spare4Enum,
 NhuUE_Positioning_ErrCause_r7spare3Enum,
 NhuUE_Positioning_ErrCause_r7spare2Enum,
 NhuUE_Positioning_ErrCause_r7spare1Enum
} EnumNhuUE_Positioning_ErrCause_r7;
typedef TknU32 NhuUE_Positioning_ErrCause_r7;


typedef TknU8 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqstganssReferenceTime;


typedef TknU8 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqstganssreferenceLoc;


typedef TknU8 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqstganssIonosphericModel;

typedef struct NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst
{
 TknPres pres;
 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqstganssReferenceTime ganssReferenceTime;
 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqstganssreferenceLoc ganssreferenceLoc;
 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqstganssIonosphericModel ganssIonosphericModel;
 NhuGanssRqstedGenericAssistanceDataLst ganssRqstedGenericAssistanceDataLst;
} NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst;

typedef struct NhuUE_Positioning_Err_r7
{
 TknPres pres;
 NhuUE_Positioning_ErrCause_r7 errorReason;
 NhuUE_Positioning_GPS_AdditionalAssistanceDataRqst ue_positioning_GPS_additionalAssistanceDataRqst;
 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst ue_positioning_GANSS_additionalAssistanceDataRqst;
} NhuUE_Positioning_Err_r7;

typedef struct NhuUE_Positioning_MeasuredResults_v770ext
{
 TknPres pres;
 NhuUE_Positioning_PositionEstimateInfo_v770ext ue_positioning_PositionEstimateInfo;
 NhuUE_Positioning_GPS_MeasurementResults_v770ext ue_positioning_GPS_Measurement;
 NhuUE_Positioning_Err_r7 ue_positioning_Err;
 NhuUE_Positioning_GANSS_MeasuredResults ue_positioning_Ganss_MeasuredResults;
} NhuUE_Positioning_MeasuredResults_v770ext;

typedef struct NhuMeasuredResults_v770ext
{
 TknU8 choice;
 union {
  NhuUE_InternalMeasuredResults_v770ext ueInternalMeasuredResults;
  NhuUE_Positioning_MeasuredResults_v770ext ue_positioning_MeasuredResults;
 } val;
} NhuMeasuredResults_v770ext;


typedef TknStrBSXL NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860extganssAddIonoModelReq;

typedef enum enumNhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860extganssEOPreq
{
 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860extganssEOPreqtrueEnum
} EnumNhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860extganssEOPreq;
typedef TknU32 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860extganssEOPreq;

typedef struct NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860ext
{
 TknPres pres;
 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860extganssAddIonoModelReq ganssAddIonoModelReq;
 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860extganssEOPreq ganssEOPreq;
 NhuGanssRqstedGenericAssistanceDataLst_v860ext ganssRqstedGenericAssistanceDataLst;
} NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860ext;

typedef struct NhuUE_Positioning_Err_v860ext
{
 TknPres pres;
 NhuUE_Positioning_GANSS_AdditionalAssistanceDataRqst_v860ext ue_positioning_GANSS_additionalAssistanceDataRqst;
} NhuUE_Positioning_Err_v860ext;

typedef struct NhuUE_Positioning_MeasuredResults_v860ext
{
 TknPres pres;
 NhuUE_Positioning_Err_v860ext ue_positioning_Err;
 NhuUE_Positioning_GANSS_MeasuredResults_v860ext ue_positioning_Ganss_MeasurementResults;
} NhuUE_Positioning_MeasuredResults_v860ext;

typedef struct NhuMeasuredResults_v860ext
{
 TknU8 choice;
 union {
  NhuUE_Positioning_MeasuredResults_v860ext ue_positioning_MeasuredResults;
 } val;
} NhuMeasuredResults_v860ext;

typedef struct NhuMeasuredResults_v920ext
{
 TknU8 choice;
 union {
  NhuIntraFreqMeasuredResultsLst_v920ext intraFreqMeasuredResultsLst;
  NhuInterFreqMeasuredResultsLst_v920ext interFreqMeasuredResultsLst;
 } val;
} NhuMeasuredResults_v920ext;

typedef struct NhuMeasuredResultsLst_v920ext
{
 TknU16 noComp;
 NhuMeasuredResults_v920ext *member;
}NhuMeasuredResultsLst_v920ext;

typedef struct NhuMeasuredResultsLstOnSecUlFreq
{
 TknU16 noComp;
 NhuMeasuredResultsOnSecUlFreq *member;
}NhuMeasuredResultsLstOnSecUlFreq;


typedef TknU32 NhuT_ADVinfot_ADV;


typedef TknU32 NhuT_ADVinfosfn;

typedef struct NhuT_ADVinfo
{
 TknPres pres;
 NhuT_ADVinfot_ADV t_ADV;
 NhuT_ADVinfosfn sfn;
} NhuT_ADVinfo;

typedef struct NhuUE_InternalMeasuredResults_LCR_r4
{
 TknPres pres;
 NhuUE_TransmittedPowerTDD_Lst ue_TransmittedPowerTDD_Lst;
 NhuT_ADVinfo t_ADVinfo;
} NhuUE_InternalMeasuredResults_LCR_r4;

typedef struct NhuMeasuredResults_LCR_r4
{
 TknU8 choice;
 union {
  NhuIntraFreqMeasuredResultsLst intraFreqMeasuredResultsLst;
  NhuInterFreqMeasuredResultsLst interFreqMeasuredResultsLst;
  NhuInterRATMeasuredResultsLst interRATMeasuredResultsLst;
  NhuTrafficVolumeMeasuredResultsLst trafficVolumeMeasuredResultsLst;
  NhuQualityMeasuredResults qualityMeasuredResults;
  NhuUE_InternalMeasuredResults_LCR_r4 ue_InternalMeasuredResults;
  NhuUE_Positioning_MeasuredResults ue_positioniing_MeasuredResults;
 } val;
} NhuMeasuredResults_LCR_r4;

typedef struct NhuMeasuredResultsLst
{
 TknU16 noComp;
 NhuMeasuredResults *member;
}NhuMeasuredResultsLst;

typedef struct NhuMeasuredResultsLst_LCR_r4_ext
{
 TknU16 noComp;
 NhuMeasuredResults_LCR_r4 *member;
}NhuMeasuredResultsLst_LCR_r4_ext;

typedef struct NhuMeasuredResultsLst_v770xetMember
{
 TknPres pres;
 NhuMeasuredResults_v770ext measuredResults;
} NhuMeasuredResultsLst_v770xetMember;

typedef struct NhuMeasuredResultsLst_v770xet
{
 TknU16 noComp;
 NhuMeasuredResultsLst_v770xetMember *member;
}NhuMeasuredResultsLst_v770xet;

typedef struct NhuMeasuredResultsLst_v860extMember
{
 TknPres pres;
 NhuMeasuredResults_v860ext measuredResults;
} NhuMeasuredResultsLst_v860extMember;

typedef struct NhuMeasuredResultsLst_v860ext
{
 TknU16 noComp;
 NhuMeasuredResultsLst_v860extMember *member;
}NhuMeasuredResultsLst_v860ext;

typedef struct NhuMonitoredCellRACH_ResultmodeSpecificInfofddmeasurementQuantity
{
 TknU8 choice;
 union {
  NhuCPICH_Ec_N0 cpich_Ec_N0;
  NhuCPICH_RSCP cpich_RSCP;
  NhuPathloss pathloss;
 } val;
} NhuMonitoredCellRACH_ResultmodeSpecificInfofddmeasurementQuantity;

typedef struct NhuMonitoredCellRACH_ResultmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuMonitoredCellRACH_ResultmodeSpecificInfofddmeasurementQuantity measurementQuantity;
} NhuMonitoredCellRACH_ResultmodeSpecificInfofdd;

typedef struct NhuMonitoredCellRACH_ResultmodeSpecificInfotdd
{
 TknPres pres;
 NhuCellParamsID cellParamsID;
 NhuPrimaryCCPCH_RSCP primaryCCPCH_RSCP;
} NhuMonitoredCellRACH_ResultmodeSpecificInfotdd;

typedef struct NhuMonitoredCellRACH_ResultmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuMonitoredCellRACH_ResultmodeSpecificInfofdd fdd;
  NhuMonitoredCellRACH_ResultmodeSpecificInfotdd tdd;
 } val;
} NhuMonitoredCellRACH_ResultmodeSpecificInfo;

typedef struct NhuMonitoredCellRACH_Result
{
 TknPres pres;
 NhuSFN_SFN_ObsTimeDifference sfn_SFN_ObsTimeDifference;
 NhuMonitoredCellRACH_ResultmodeSpecificInfo modeSpecificInfo;
} NhuMonitoredCellRACH_Result;

typedef struct NhuMonitoredCellRACH_Lst
{
 TknU16 noComp;
 NhuMonitoredCellRACH_Result *member;
}NhuMonitoredCellRACH_Lst;

typedef struct NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfofddmeasurementQuantity
{
 TknU8 choice;
 union {
  NhuCPICH_Ec_N0 cpich_Ec_N0;
  NhuCPICH_RSCP cpich_RSCP;
  NhuPathloss pathloss;
 } val;
} NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfofddmeasurementQuantity;

typedef struct NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfofdd
{
 TknPres pres;
 NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfofddmeasurementQuantity measurementQuantity;
} NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfofdd;

typedef struct NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfotdd
{
 TknPres pres;
 NhuTimeslotISCP_Lst timeslotISCP;
 NhuPrimaryCCPCH_RSCP primaryCCPCH_RSCP;
} NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfotdd;

typedef struct NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfofdd fdd;
  NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfotdd tdd;
 } val;
} NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfo;

typedef struct NhuMeasuredResultsOnRACHcurrentCell
{
 TknPres pres;
 NhuMeasuredResultsOnRACHcurrentCellmodeSpecificInfo modeSpecificInfo;
} NhuMeasuredResultsOnRACHcurrentCell;

typedef struct NhuMeasuredResultsOnRACH
{
 TknPres pres;
 NhuMeasuredResultsOnRACHcurrentCell currentCell;
 NhuMonitoredCellRACH_Lst monitoredCells;
} NhuMeasuredResultsOnRACH;

typedef struct NhuMonitoredCellRACH_Lst_v7g0ext
{
 TknU16 noComp;
 NhuDeltaRSCPPerCell *member;
}NhuMonitoredCellRACH_Lst_v7g0ext;

typedef struct NhuMeasuredResultsOnRACH_v7g0ext
{
 TknPres pres;
 NhuDeltaRSCPPerCell currentCell_DeltaRSCP;
 NhuMonitoredCellRACH_Lst_v7g0ext monitoredCellRACH_Lst_v7g0ext;
} NhuMeasuredResultsOnRACH_v7g0ext;


typedef TknU32 NhuMeasuredResultsOnRACHinterFreqinterFreqCellInd_SIB11;


typedef TknU32 NhuMeasuredResultsOnRACHinterFreqinterFreqCellInd_SIB12;

typedef struct NhuMeasuredResultsOnRACHinterFreq
{
 TknPres pres;
 NhuMeasuredResultsOnRACHinterFreqinterFreqCellInd_SIB11 interFreqCellInd_SIB11;
 NhuMeasuredResultsOnRACHinterFreqinterFreqCellInd_SIB12 interFreqCellInd_SIB12;
 NhuInterFreqRACHRepCellsLst interFreqRACHRepCellsLst;
} NhuMeasuredResultsOnRACHinterFreq;


typedef enum enumNhuUE_Positioning_MethodTyp
{
 NhuUE_Positioning_MethodTypue_AssistedEnum,
 NhuUE_Positioning_MethodTypue_BasedEnum,
 NhuUE_Positioning_MethodTypue_BasedPreferredEnum,
 NhuUE_Positioning_MethodTypue_AssistedPreferredEnum
} EnumNhuUE_Positioning_MethodTyp;
typedef TknU32 NhuUE_Positioning_MethodTyp;


typedef enum enumNhuPositioningMethod
{
 NhuPositioningMethodotdoaEnum,
 NhuPositioningMethodgpsEnum,
 NhuPositioningMethodotdoaOrGPSEnum,
 NhuPositioningMethodcellIDEnum
} EnumNhuPositioningMethod;
typedef TknU32 NhuPositioningMethod;


typedef enum enumNhuUE_Positioning_RspTime
{
 NhuUE_Positioning_RspTimes1Enum,
 NhuUE_Positioning_RspTimes2Enum,
 NhuUE_Positioning_RspTimes4Enum,
 NhuUE_Positioning_RspTimes8Enum,
 NhuUE_Positioning_RspTimes16Enum,
 NhuUE_Positioning_RspTimes32Enum,
 NhuUE_Positioning_RspTimes64Enum,
 NhuUE_Positioning_RspTimes128Enum
} EnumNhuUE_Positioning_RspTime;
typedef TknU32 NhuUE_Positioning_RspTime;


typedef TknStrBSXL NhuUE_Positioning_Accuracy;

typedef TknU8 NhuUE_Positioning_RprtngQuantitygps_TimingOfCellWanted;


typedef TknU8 NhuUE_Positioning_RprtngQuantitydummy2;


typedef TknU8 NhuUE_Positioning_RprtngQuantityadditionalAssistanceDataRqst;

typedef struct NhuUE_Positioning_RprtngQuantity
{
 TknPres pres;
 NhuUE_Positioning_MethodTyp methodTyp;
 NhuPositioningMethod positioningMethod;
 NhuUE_Positioning_RspTime dummy1;
 NhuUE_Positioning_Accuracy horizontal_Accuracy;
 NhuUE_Positioning_RprtngQuantitygps_TimingOfCellWanted gps_TimingOfCellWanted;
 NhuUE_Positioning_RprtngQuantitydummy2 dummy2;
 NhuUE_Positioning_RprtngQuantityadditionalAssistanceDataRqst additionalAssistanceDataRqst;
 NhuEnvironmentCharacterisation environmentCharacterisation;
} NhuUE_Positioning_RprtngQuantity;


typedef enum enumNhuUE_Positioning_MeasurementInterval
{
 NhuUE_Positioning_MeasurementIntervale5Enum,
 NhuUE_Positioning_MeasurementIntervale15Enum,
 NhuUE_Positioning_MeasurementIntervale60Enum,
 NhuUE_Positioning_MeasurementIntervale300Enum,
 NhuUE_Positioning_MeasurementIntervale900Enum,
 NhuUE_Positioning_MeasurementIntervale1800Enum,
 NhuUE_Positioning_MeasurementIntervale3600Enum,
 NhuUE_Positioning_MeasurementIntervale7200Enum
} EnumNhuUE_Positioning_MeasurementInterval;
typedef TknU32 NhuUE_Positioning_MeasurementInterval;


typedef enum enumNhuThresholdPositionChange
{
 NhuThresholdPositionChangepc10Enum,
 NhuThresholdPositionChangepc20Enum,
 NhuThresholdPositionChangepc30Enum,
 NhuThresholdPositionChangepc40Enum,
 NhuThresholdPositionChangepc50Enum,
 NhuThresholdPositionChangepc100Enum,
 NhuThresholdPositionChangepc200Enum,
 NhuThresholdPositionChangepc300Enum,
 NhuThresholdPositionChangepc500Enum,
 NhuThresholdPositionChangepc1000Enum,
 NhuThresholdPositionChangepc2000Enum,
 NhuThresholdPositionChangepc5000Enum,
 NhuThresholdPositionChangepc10000Enum,
 NhuThresholdPositionChangepc20000Enum,
 NhuThresholdPositionChangepc50000Enum,
 NhuThresholdPositionChangepc100000Enum
} EnumNhuThresholdPositionChange;
typedef TknU32 NhuThresholdPositionChange;


typedef enum enumNhuThresholdSFN_SFN_Change
{
 NhuThresholdSFN_SFN_Changec0_25Enum,
 NhuThresholdSFN_SFN_Changec0_5Enum,
 NhuThresholdSFN_SFN_Changec1Enum,
 NhuThresholdSFN_SFN_Changec2Enum,
 NhuThresholdSFN_SFN_Changec3Enum,
 NhuThresholdSFN_SFN_Changec4Enum,
 NhuThresholdSFN_SFN_Changec5Enum,
 NhuThresholdSFN_SFN_Changec10Enum,
 NhuThresholdSFN_SFN_Changec20Enum,
 NhuThresholdSFN_SFN_Changec50Enum,
 NhuThresholdSFN_SFN_Changec100Enum,
 NhuThresholdSFN_SFN_Changec200Enum,
 NhuThresholdSFN_SFN_Changec500Enum,
 NhuThresholdSFN_SFN_Changec1000Enum,
 NhuThresholdSFN_SFN_Changec2000Enum,
 NhuThresholdSFN_SFN_Changec5000Enum
} EnumNhuThresholdSFN_SFN_Change;
typedef TknU32 NhuThresholdSFN_SFN_Change;


typedef enum enumNhuThresholdSFN_GPS_TOW
{
 NhuThresholdSFN_GPS_TOWms1Enum,
 NhuThresholdSFN_GPS_TOWms2Enum,
 NhuThresholdSFN_GPS_TOWms3Enum,
 NhuThresholdSFN_GPS_TOWms5Enum,
 NhuThresholdSFN_GPS_TOWms10Enum,
 NhuThresholdSFN_GPS_TOWms20Enum,
 NhuThresholdSFN_GPS_TOWms50Enum,
 NhuThresholdSFN_GPS_TOWms100Enum
} EnumNhuThresholdSFN_GPS_TOW;
typedef TknU32 NhuThresholdSFN_GPS_TOW;

typedef struct NhuUE_Positioning_EventSpecificInfo
{
 TknU8 choice;
 union {
  NhuThresholdPositionChange e7a;
  NhuThresholdSFN_SFN_Change e7b;
  NhuThresholdSFN_GPS_TOW e7c;
 } val;
} NhuUE_Positioning_EventSpecificInfo;


typedef TknU8 NhuUE_Positioning_EventParamreportFirstFix;

typedef struct NhuUE_Positioning_EventParam
{
 TknPres pres;
 NhuRprtngAmount reportingAmount;
 NhuUE_Positioning_EventParamreportFirstFix reportFirstFix;
 NhuUE_Positioning_MeasurementInterval measurementInterval;
 NhuUE_Positioning_EventSpecificInfo eventSpecificInfo;
} NhuUE_Positioning_EventParam;

typedef struct NhuUE_Positioning_EventParamLst
{
 TknU16 noComp;
 NhuUE_Positioning_EventParam *member;
}NhuUE_Positioning_EventParamLst;

typedef struct NhuUE_Positioning_ReportCriteria
{
 TknU8 choice;
 union {
  NhuUE_Positioning_EventParamLst ue_positioning_RprtngCriteria;
  NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 } val;
} NhuUE_Positioning_ReportCriteria;


typedef TknU32 NhuUE_Positioning_IPDL_Paramsip_Offset;


typedef TknU32 NhuUE_Positioning_IPDL_Paramsseed;

typedef struct NhuUE_Positioning_IPDL_Params
{
 TknPres pres;
 NhuIP_Spacing ip_Spacing;
 NhuIP_Length ip_Length;
 NhuUE_Positioning_IPDL_Paramsip_Offset ip_Offset;
 NhuUE_Positioning_IPDL_Paramsseed seed;
 NhuBurstModeParams burstModeParams;
} NhuUE_Positioning_IPDL_Params;


typedef TknU32 NhuUE_Positioning_OTDOA_ReferenceCellInfosfn;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUE_Positioning_OTDOA_ReferenceCellInfomodeSpecificInfofdd;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity cellAndChannelIdentity;
} NhuUE_Positioning_OTDOA_ReferenceCellInfomodeSpecificInfotdd;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_ReferenceCellInfomodeSpecificInfofdd fdd;
  NhuUE_Positioning_OTDOA_ReferenceCellInfomodeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_OTDOA_ReferenceCellInfomodeSpecificInfo;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfopositioningModeueBased
{
 TknPres pres;
} NhuUE_Positioning_OTDOA_ReferenceCellInfopositioningModeueBased;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfopositioningModeueAssisted
{
 TknPres pres;
} NhuUE_Positioning_OTDOA_ReferenceCellInfopositioningModeueAssisted;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfopositioningMode
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_ReferenceCellInfopositioningModeueBased ueBased;
  NhuUE_Positioning_OTDOA_ReferenceCellInfopositioningModeueAssisted ueAssisted;
 } val;
} NhuUE_Positioning_OTDOA_ReferenceCellInfopositioningMode;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfosfn sfn;
 NhuUE_Positioning_OTDOA_ReferenceCellInfomodeSpecificInfo modeSpecificInfo;
 NhuFrequencyInfo frequencyInfo;
 NhuUE_Positioning_OTDOA_ReferenceCellInfopositioningMode positioningMode;
 NhuUE_Positioning_IPDL_Params ue_positioning_IPDL_Paremeters;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo;


typedef TknU32 NhuSFN_SFN_RelTimeDifference1sfn_Offset;


typedef TknU32 NhuSFN_SFN_RelTimeDifference1sfn_sfn_Reltimedifference;

typedef struct NhuSFN_SFN_RelTimeDifference1
{
 TknPres pres;
 NhuSFN_SFN_RelTimeDifference1sfn_Offset sfn_Offset;
 NhuSFN_SFN_RelTimeDifference1sfn_sfn_Reltimedifference sfn_sfn_Reltimedifference;
} NhuSFN_SFN_RelTimeDifference1;


typedef enum enumNhuSFN_SFN_Drift
{
 NhuSFN_SFN_Driftsfnsfndrift0Enum,
 NhuSFN_SFN_Driftsfnsfndrift1Enum,
 NhuSFN_SFN_Driftsfnsfndrift2Enum,
 NhuSFN_SFN_Driftsfnsfndrift3Enum,
 NhuSFN_SFN_Driftsfnsfndrift4Enum,
 NhuSFN_SFN_Driftsfnsfndrift5Enum,
 NhuSFN_SFN_Driftsfnsfndrift8Enum,
 NhuSFN_SFN_Driftsfnsfndrift10Enum,
 NhuSFN_SFN_Driftsfnsfndrift15Enum,
 NhuSFN_SFN_Driftsfnsfndrift25Enum,
 NhuSFN_SFN_Driftsfnsfndrift35Enum,
 NhuSFN_SFN_Driftsfnsfndrift50Enum,
 NhuSFN_SFN_Driftsfnsfndrift65Enum,
 NhuSFN_SFN_Driftsfnsfndrift80Enum,
 NhuSFN_SFN_Driftsfnsfndrift100Enum,
 NhuSFN_SFN_Driftsfnsfndrift_1Enum,
 NhuSFN_SFN_Driftsfnsfndrift_2Enum,
 NhuSFN_SFN_Driftsfnsfndrift_3Enum,
 NhuSFN_SFN_Driftsfnsfndrift_4Enum,
 NhuSFN_SFN_Driftsfnsfndrift_5Enum,
 NhuSFN_SFN_Driftsfnsfndrift_8Enum,
 NhuSFN_SFN_Driftsfnsfndrift_10Enum,
 NhuSFN_SFN_Driftsfnsfndrift_15Enum,
 NhuSFN_SFN_Driftsfnsfndrift_25Enum,
 NhuSFN_SFN_Driftsfnsfndrift_35Enum,
 NhuSFN_SFN_Driftsfnsfndrift_50Enum,
 NhuSFN_SFN_Driftsfnsfndrift_65Enum,
 NhuSFN_SFN_Driftsfnsfndrift_80Enum,
 NhuSFN_SFN_Driftsfnsfndrift_100Enum
} EnumNhuSFN_SFN_Drift;
typedef TknU32 NhuSFN_SFN_Drift;


typedef enum enumNhuOTDOA_SearchWindowSize
{
 NhuOTDOA_SearchWindowSizec20Enum,
 NhuOTDOA_SearchWindowSizec40Enum,
 NhuOTDOA_SearchWindowSizec80Enum,
 NhuOTDOA_SearchWindowSizec160Enum,
 NhuOTDOA_SearchWindowSizec320Enum,
 NhuOTDOA_SearchWindowSizec640Enum,
 NhuOTDOA_SearchWindowSizec1280Enum,
 NhuOTDOA_SearchWindowSizemoreThan1280Enum
} EnumNhuOTDOA_SearchWindowSize;
typedef TknU32 NhuOTDOA_SearchWindowSize;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUE_Positioning_OTDOA_NeighbourCellInfomodeSpecificInfofdd;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity cellAndChannelIdentity;
} NhuUE_Positioning_OTDOA_NeighbourCellInfomodeSpecificInfotdd;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_NeighbourCellInfomodeSpecificInfofdd fdd;
  NhuUE_Positioning_OTDOA_NeighbourCellInfomodeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_OTDOA_NeighbourCellInfomodeSpecificInfo;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfopositioningModeueBased
{
 TknPres pres;
} NhuUE_Positioning_OTDOA_NeighbourCellInfopositioningModeueBased;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfopositioningModeueAssisted
{
 TknPres pres;
} NhuUE_Positioning_OTDOA_NeighbourCellInfopositioningModeueAssisted;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfopositioningMode
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_NeighbourCellInfopositioningModeueBased ueBased;
  NhuUE_Positioning_OTDOA_NeighbourCellInfopositioningModeueAssisted ueAssisted;
 } val;
} NhuUE_Positioning_OTDOA_NeighbourCellInfopositioningMode;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_NeighbourCellInfomodeSpecificInfo modeSpecificInfo;
 NhuFrequencyInfo frequencyInfo;
 NhuUE_Positioning_IPDL_Params ue_positioning_IPDL_Paremeters;
 NhuSFN_SFN_RelTimeDifference1 sfn_SFN_RelTimeDifference;
 NhuSFN_SFN_Drift sfn_SFN_Drift;
 NhuOTDOA_SearchWindowSize searchWindowSize;
 NhuUE_Positioning_OTDOA_NeighbourCellInfopositioningMode positioningMode;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellLst
{
 TknU16 noComp;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo *member;
}NhuUE_Positioning_OTDOA_NeighbourCellLst;

typedef struct NhuUE_Positioning_OTDOA_AssistanceData
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo ue_positioning_OTDOA_ReferenceCellInfo;
 NhuUE_Positioning_OTDOA_NeighbourCellLst ue_positioning_OTDOA_NeighbourCellLst;
} NhuUE_Positioning_OTDOA_AssistanceData;


typedef TknU32 NhuUTRAN_GPSReferenceTimeutran_GPSTimingOfCellms_part;


typedef TknU32 NhuUTRAN_GPSReferenceTimeutran_GPSTimingOfCellls_part;

typedef struct NhuUTRAN_GPSReferenceTimeutran_GPSTimingOfCell
{
 TknPres pres;
 NhuUTRAN_GPSReferenceTimeutran_GPSTimingOfCellms_part ms_part;
 NhuUTRAN_GPSReferenceTimeutran_GPSTimingOfCellls_part ls_part;
} NhuUTRAN_GPSReferenceTimeutran_GPSTimingOfCell;

typedef struct NhuUTRAN_GPSReferenceTimemodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info referenceIdentity;
} NhuUTRAN_GPSReferenceTimemodeSpecificInfofdd;

typedef struct NhuUTRAN_GPSReferenceTimemodeSpecificInfotdd
{
 TknPres pres;
 NhuCellParamsID referenceIdentity;
} NhuUTRAN_GPSReferenceTimemodeSpecificInfotdd;

typedef struct NhuUTRAN_GPSReferenceTimemodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUTRAN_GPSReferenceTimemodeSpecificInfofdd fdd;
  NhuUTRAN_GPSReferenceTimemodeSpecificInfotdd tdd;
 } val;
} NhuUTRAN_GPSReferenceTimemodeSpecificInfo;


typedef TknU32 NhuUTRAN_GPSReferenceTimesfn;

typedef struct NhuUTRAN_GPSReferenceTime
{
 TknPres pres;
 NhuUTRAN_GPSReferenceTimeutran_GPSTimingOfCell utran_GPSTimingOfCell;
 NhuUTRAN_GPSReferenceTimemodeSpecificInfo modeSpecificInfo;
 NhuUTRAN_GPSReferenceTimesfn sfn;
} NhuUTRAN_GPSReferenceTime;


typedef enum enumNhuSFN_TOW_Uncertainty
{
 NhuSFN_TOW_UncertaintylessThan10Enum,
 NhuSFN_TOW_UncertaintymoreThan10Enum
} EnumNhuSFN_TOW_Uncertainty;
typedef TknU32 NhuSFN_TOW_Uncertainty;


typedef enum enumNhuUTRAN_GPS_DriftRate
{
 NhuUTRAN_GPS_DriftRateutran_GPSDrift0Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift1Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift2Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift5Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift10Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift15Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift25Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift50Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift_1Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift_2Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift_5Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift_10Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift_15Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift_25Enum,
 NhuUTRAN_GPS_DriftRateutran_GPSDrift_50Enum
} EnumNhuUTRAN_GPS_DriftRate;
typedef TknU32 NhuUTRAN_GPS_DriftRate;


typedef TknU32 NhuUE_Positioning_GPS_ReferenceTimegps_Week;

typedef struct NhuUE_Positioning_GPS_ReferenceTime
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTimegps_Week gps_Week;
 NhuGPS_TOW_1msec gps_tow_1msec;
 NhuUTRAN_GPSReferenceTime utran_GPSReferenceTime;
 NhuSFN_TOW_Uncertainty sfn_tow_Uncertainty;
 NhuUTRAN_GPS_DriftRate utran_GPS_DriftRate;
 NhuGPS_TOW_AssistLst gps_TOW_AssistLst;
} NhuUE_Positioning_GPS_ReferenceTime;

typedef struct NhuReferenceLoc
{
 TknPres pres;
 NhuEllipsoidPointAltitudeEllipsoide ellipsoidPointAltitudeEllipsoide;
} NhuReferenceLoc;

typedef struct NhuUE_Positioning_GPS_DGPS_Corrections
{
 TknPres pres;
 NhuGPS_TOW_1sec gps_TOW;
 NhuDiffCorrectionStatus statusHealth;
 NhuDGPS_CorrectionSatInfoLst dgps_CorrectionSatInfoLst;
} NhuUE_Positioning_GPS_DGPS_Corrections;


typedef enum enumNhuSatelliteStatus
{
 NhuSatelliteStatusns_NN_UEnum,
 NhuSatelliteStatuses_SNEnum,
 NhuSatelliteStatuses_NN_UEnum,
 NhuSatelliteStatusrev2Enum,
 NhuSatelliteStatusrevEnum
} EnumNhuSatelliteStatus;
typedef TknU32 NhuSatelliteStatus;


typedef TknStrBSXL NhuSubFrame1Reservedreserved1;

typedef TknStrBSXL NhuSubFrame1Reservedreserved2;

typedef TknStrBSXL NhuSubFrame1Reservedreserved3;

typedef TknStrBSXL NhuSubFrame1Reservedreserved4;
typedef struct NhuSubFrame1Reserved
{
 TknPres pres;
 NhuSubFrame1Reservedreserved1 reserved1;
 NhuSubFrame1Reservedreserved2 reserved2;
 NhuSubFrame1Reservedreserved3 reserved3;
 NhuSubFrame1Reservedreserved4 reserved4;
} NhuSubFrame1Reserved;


typedef TknStrBSXL NhuEphemerisParametercodeOnL2;

typedef TknStrBSXL NhuEphemerisParameteruraIdx;

typedef TknStrBSXL NhuEphemerisParametersatHealth;

typedef TknStrBSXL NhuEphemerisParameteriodc;

typedef TknStrBSXL NhuEphemerisParameterl2Pflag;

typedef TknStrBSXL NhuEphemerisParametert_GD;

typedef TknStrBSXL NhuEphemerisParametert_oc;

typedef TknStrBSXL NhuEphemerisParameteraf2;

typedef TknStrBSXL NhuEphemerisParameteraf1;

typedef TknStrBSXL NhuEphemerisParameteraf0;

typedef TknStrBSXL NhuEphemerisParameterc_rs;

typedef TknStrBSXL NhuEphemerisParameterdelta_n;

typedef TknStrBSXL NhuEphemerisParameterm0;

typedef TknStrBSXL NhuEphemerisParameterc_uc;

typedef TknStrBSXL NhuEphemerisParametere;

typedef TknStrBSXL NhuEphemerisParameterc_us;

typedef TknStrBSXL NhuEphemerisParametera_Sqrt;

typedef TknStrBSXL NhuEphemerisParametert_oe;

typedef TknStrBSXL NhuEphemerisParameterfitInterval;

typedef TknStrBSXL NhuEphemerisParameteraodo;

typedef TknStrBSXL NhuEphemerisParameterc_ic;

typedef TknStrBSXL NhuEphemerisParameteromega0;

typedef TknStrBSXL NhuEphemerisParameterc_is;

typedef TknStrBSXL NhuEphemerisParameteri0;

typedef TknStrBSXL NhuEphemerisParameterc_rc;

typedef TknStrBSXL NhuEphemerisParameteromega;

typedef TknStrBSXL NhuEphemerisParameteromegaDot;

typedef TknStrBSXL NhuEphemerisParameteriDot;
typedef struct NhuEphemerisParameter
{
 TknPres pres;
 NhuEphemerisParametercodeOnL2 codeOnL2;
 NhuEphemerisParameteruraIdx uraIdx;
 NhuEphemerisParametersatHealth satHealth;
 NhuEphemerisParameteriodc iodc;
 NhuEphemerisParameterl2Pflag l2Pflag;
 NhuSubFrame1Reserved sf1Revd;
 NhuEphemerisParametert_GD t_GD;
 NhuEphemerisParametert_oc t_oc;
 NhuEphemerisParameteraf2 af2;
 NhuEphemerisParameteraf1 af1;
 NhuEphemerisParameteraf0 af0;
 NhuEphemerisParameterc_rs c_rs;
 NhuEphemerisParameterdelta_n delta_n;
 NhuEphemerisParameterm0 m0;
 NhuEphemerisParameterc_uc c_uc;
 NhuEphemerisParametere e;
 NhuEphemerisParameterc_us c_us;
 NhuEphemerisParametera_Sqrt a_Sqrt;
 NhuEphemerisParametert_oe t_oe;
 NhuEphemerisParameterfitInterval fitInterval;
 NhuEphemerisParameteraodo aodo;
 NhuEphemerisParameterc_ic c_ic;
 NhuEphemerisParameteromega0 omega0;
 NhuEphemerisParameterc_is c_is;
 NhuEphemerisParameteri0 i0;
 NhuEphemerisParameterc_rc c_rc;
 NhuEphemerisParameteromega omega;
 NhuEphemerisParameteromegaDot omegaDot;
 NhuEphemerisParameteriDot iDot;
} NhuEphemerisParameter;

typedef struct NhuNavigationModelSatInfo
{
 TknPres pres;
 NhuSatID satID;
 NhuSatelliteStatus satelliteStatus;
 NhuEphemerisParameter ephemerisParameter;
} NhuNavigationModelSatInfo;

typedef struct NhuNavigationModelSatInfoLst
{
 TknU16 noComp;
 NhuNavigationModelSatInfo *member;
}NhuNavigationModelSatInfoLst;

typedef struct NhuUE_Positioning_GPS_NavigationModel
{
 TknPres pres;
 NhuNavigationModelSatInfoLst navigationModelSatInfoLst;
} NhuUE_Positioning_GPS_NavigationModel;


typedef TknStrBSXL NhuUE_Positioning_GPS_IonosphericModelalpha0;

typedef TknStrBSXL NhuUE_Positioning_GPS_IonosphericModelalpha1;

typedef TknStrBSXL NhuUE_Positioning_GPS_IonosphericModelalpha2;

typedef TknStrBSXL NhuUE_Positioning_GPS_IonosphericModelalpha3;

typedef TknStrBSXL NhuUE_Positioning_GPS_IonosphericModelbeta0;

typedef TknStrBSXL NhuUE_Positioning_GPS_IonosphericModelbeta1;

typedef TknStrBSXL NhuUE_Positioning_GPS_IonosphericModelbeta2;

typedef TknStrBSXL NhuUE_Positioning_GPS_IonosphericModelbeta3;
typedef struct NhuUE_Positioning_GPS_IonosphericModel
{
 TknPres pres;
 NhuUE_Positioning_GPS_IonosphericModelalpha0 alpha0;
 NhuUE_Positioning_GPS_IonosphericModelalpha1 alpha1;
 NhuUE_Positioning_GPS_IonosphericModelalpha2 alpha2;
 NhuUE_Positioning_GPS_IonosphericModelalpha3 alpha3;
 NhuUE_Positioning_GPS_IonosphericModelbeta0 beta0;
 NhuUE_Positioning_GPS_IonosphericModelbeta1 beta1;
 NhuUE_Positioning_GPS_IonosphericModelbeta2 beta2;
 NhuUE_Positioning_GPS_IonosphericModelbeta3 beta3;
} NhuUE_Positioning_GPS_IonosphericModel;


typedef TknStrBSXL NhuUE_Positioning_GPS_UTC_Modela1;

typedef TknStrBSXL NhuUE_Positioning_GPS_UTC_Modela0;

typedef TknStrBSXL NhuUE_Positioning_GPS_UTC_Modelt_ot;

typedef TknStrBSXL NhuUE_Positioning_GPS_UTC_Modelwn_t;

typedef TknStrBSXL NhuUE_Positioning_GPS_UTC_Modeldelta_t_LS;

typedef TknStrBSXL NhuUE_Positioning_GPS_UTC_Modelwn_lsf;

typedef TknStrBSXL NhuUE_Positioning_GPS_UTC_Modeldn;

typedef TknStrBSXL NhuUE_Positioning_GPS_UTC_Modeldelta_t_LSF;
typedef struct NhuUE_Positioning_GPS_UTC_Model
{
 TknPres pres;
 NhuUE_Positioning_GPS_UTC_Modela1 a1;
 NhuUE_Positioning_GPS_UTC_Modela0 a0;
 NhuUE_Positioning_GPS_UTC_Modelt_ot t_ot;
 NhuUE_Positioning_GPS_UTC_Modelwn_t wn_t;
 NhuUE_Positioning_GPS_UTC_Modeldelta_t_LS delta_t_LS;
 NhuUE_Positioning_GPS_UTC_Modelwn_lsf wn_lsf;
 NhuUE_Positioning_GPS_UTC_Modeldn dn;
 NhuUE_Positioning_GPS_UTC_Modeldelta_t_LSF delta_t_LSF;
} NhuUE_Positioning_GPS_UTC_Model;


typedef TknStrBSXL NhuUE_Positioning_GPS_Almanacwn_a;

typedef TknStrBSXL NhuUE_Positioning_GPS_Almanacsv_GlobalHealth;
typedef struct NhuUE_Positioning_GPS_Almanac
{
 TknPres pres;
 NhuUE_Positioning_GPS_Almanacwn_a wn_a;
 NhuAlmanacSatInfoLst almanacSatInfoLst;
 NhuUE_Positioning_GPS_Almanacsv_GlobalHealth sv_GlobalHealth;
} NhuUE_Positioning_GPS_Almanac;

typedef struct NhuUE_Positioning_GPS_AcquisitionAssistance
{
 TknPres pres;
 NhuGPS_TOW_1msec gps_ReferenceTime;
 NhuUTRAN_GPSReferenceTime utran_GPSReferenceTime;
 NhuAcquisitionSatInfoLst satelliteInfoLst;
} NhuUE_Positioning_GPS_AcquisitionAssistance;

typedef struct NhuUE_Positioning_GPS_ReferenceCellInfomodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info referenceIdentity;
} NhuUE_Positioning_GPS_ReferenceCellInfomodeSpecificInfofdd;

typedef struct NhuUE_Positioning_GPS_ReferenceCellInfomodeSpecificInfotdd
{
 TknPres pres;
 NhuCellParamsID referenceIdentity;
} NhuUE_Positioning_GPS_ReferenceCellInfomodeSpecificInfotdd;

typedef struct NhuUE_Positioning_GPS_ReferenceCellInfomodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_GPS_ReferenceCellInfomodeSpecificInfofdd fdd;
  NhuUE_Positioning_GPS_ReferenceCellInfomodeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_GPS_ReferenceCellInfomodeSpecificInfo;

typedef struct NhuUE_Positioning_GPS_ReferenceCellInfo
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceCellInfomodeSpecificInfo modeSpecificInfo;
} NhuUE_Positioning_GPS_ReferenceCellInfo;

typedef struct NhuUE_Positioning_GPS_AssistanceData
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTime ue_positioning_GPS_ReferenceTime;
 NhuReferenceLoc ue_positioning_GPS_ReferenceLoc;
 NhuUE_Positioning_GPS_DGPS_Corrections ue_positioning_GPS_DGPS_Corrections;
 NhuUE_Positioning_GPS_NavigationModel ue_positioning_GPS_NavigationModel;
 NhuUE_Positioning_GPS_IonosphericModel ue_positioning_GPS_IonosphericModel;
 NhuUE_Positioning_GPS_UTC_Model ue_positioning_GPS_UTC_Model;
 NhuUE_Positioning_GPS_Almanac ue_positioning_GPS_Almanac;
 NhuUE_Positioning_GPS_AcquisitionAssistance ue_positioning_GPS_AcquisitionAssistance;
 NhuBadSatLst ue_positioning_GPS_Real_timeIntegrity;
 NhuUE_Positioning_GPS_ReferenceCellInfo dummy;
} NhuUE_Positioning_GPS_AssistanceData;

typedef struct NhuUE_Positioning_Measurement
{
 TknPres pres;
 NhuUE_Positioning_RprtngQuantity ue_positioning_RprtngQuantity;
 NhuUE_Positioning_ReportCriteria reportCriteria;
 NhuUE_Positioning_OTDOA_AssistanceData ue_positioning_OTDOA_AssistanceData;
 NhuUE_Positioning_GPS_AssistanceData ue_positioning_GPS_AssistanceData;
} NhuUE_Positioning_Measurement;

typedef struct NhuTrafficVolumeMeasurementObjectLst
{
 TknU16 noComp;
 NhuUL_TrCH_Identity *member;
}NhuTrafficVolumeMeasurementObjectLst;


typedef TknU32 NhuTimeInterval;

typedef struct NhuTrafficVolumeMeasQuantity
{
 TknU8 choice;
 union {
  NhuTimeInterval averageRLC_BufferPayload;
  NhuTimeInterval varianceOfRLC_BufferPayload;
 } val;
} NhuTrafficVolumeMeasQuantity;


typedef TknU8 NhuTrafficVolumeRprtngQuantityrlc_RB_BufferPayload;


typedef TknU8 NhuTrafficVolumeRprtngQuantityrlc_RB_BufferPayloadAverage;


typedef TknU8 NhuTrafficVolumeRprtngQuantityrlc_RB_BufferPayloadVariance;

typedef struct NhuTrafficVolumeRprtngQuantity
{
 TknPres pres;
 NhuTrafficVolumeRprtngQuantityrlc_RB_BufferPayload rlc_RB_BufferPayload;
 NhuTrafficVolumeRprtngQuantityrlc_RB_BufferPayloadAverage rlc_RB_BufferPayloadAverage;
 NhuTrafficVolumeRprtngQuantityrlc_RB_BufferPayloadVariance rlc_RB_BufferPayloadVariance;
} NhuTrafficVolumeRprtngQuantity;


typedef enum enumNhuTrafficVolumeThreshold
{
 NhuTrafficVolumeThresholdth8Enum,
 NhuTrafficVolumeThresholdth16Enum,
 NhuTrafficVolumeThresholdth32Enum,
 NhuTrafficVolumeThresholdth64Enum,
 NhuTrafficVolumeThresholdth128Enum,
 NhuTrafficVolumeThresholdth256Enum,
 NhuTrafficVolumeThresholdth512Enum,
 NhuTrafficVolumeThresholdth1024Enum,
 NhuTrafficVolumeThresholdth2kEnum,
 NhuTrafficVolumeThresholdth3kEnum,
 NhuTrafficVolumeThresholdth4kEnum,
 NhuTrafficVolumeThresholdth6kEnum,
 NhuTrafficVolumeThresholdth8kEnum,
 NhuTrafficVolumeThresholdth12kEnum,
 NhuTrafficVolumeThresholdth16kEnum,
 NhuTrafficVolumeThresholdth24kEnum,
 NhuTrafficVolumeThresholdth32kEnum,
 NhuTrafficVolumeThresholdth48kEnum,
 NhuTrafficVolumeThresholdth64kEnum,
 NhuTrafficVolumeThresholdth96kEnum,
 NhuTrafficVolumeThresholdth128kEnum,
 NhuTrafficVolumeThresholdth192kEnum,
 NhuTrafficVolumeThresholdth256kEnum,
 NhuTrafficVolumeThresholdth384kEnum,
 NhuTrafficVolumeThresholdth512kEnum,
 NhuTrafficVolumeThresholdth768kEnum
} EnumNhuTrafficVolumeThreshold;
typedef TknU32 NhuTrafficVolumeThreshold;


typedef enum enumNhuPendingTimeAfterTrigger
{
 NhuPendingTimeAfterTriggerptat0_25Enum,
 NhuPendingTimeAfterTriggerptat0_5Enum,
 NhuPendingTimeAfterTriggerptat1Enum,
 NhuPendingTimeAfterTriggerptat2Enum,
 NhuPendingTimeAfterTriggerptat4Enum,
 NhuPendingTimeAfterTriggerptat8Enum,
 NhuPendingTimeAfterTriggerptat16Enum
} EnumNhuPendingTimeAfterTrigger;
typedef TknU32 NhuPendingTimeAfterTrigger;


typedef enum enumNhuTX_InterruptionAfterTrigger
{
 NhuTX_InterruptionAfterTriggertxiat0_25Enum,
 NhuTX_InterruptionAfterTriggertxiat0_5Enum,
 NhuTX_InterruptionAfterTriggertxiat1Enum,
 NhuTX_InterruptionAfterTriggertxiat2Enum,
 NhuTX_InterruptionAfterTriggertxiat4Enum,
 NhuTX_InterruptionAfterTriggertxiat8Enum,
 NhuTX_InterruptionAfterTriggertxiat16Enum
} EnumNhuTX_InterruptionAfterTrigger;
typedef TknU32 NhuTX_InterruptionAfterTrigger;

typedef struct NhuTrafficVolumeEventParam
{
 TknPres pres;
 NhuTrafficVolumeEventTyp eventID;
 NhuTrafficVolumeThreshold reportingThreshold;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuPendingTimeAfterTrigger pendingTimeAfterTrigger;
 NhuTX_InterruptionAfterTrigger tx_InterruptionAfterTrigger;
} NhuTrafficVolumeEventParam;

typedef struct NhuTransChCriteriaeventSpecificParams
{
 TknU16 noComp;
 NhuTrafficVolumeEventParam *member;
}NhuTransChCriteriaeventSpecificParams;

typedef struct NhuTransChCriteria
{
 TknPres pres;
 NhuUL_TrCH_Identity ul_transportChannelID;
 NhuTransChCriteriaeventSpecificParams eventSpecificParams;
} NhuTransChCriteria;

typedef struct NhuTransChCriteriaLst
{
 TknU16 noComp;
 NhuTransChCriteria *member;
}NhuTransChCriteriaLst;

typedef struct NhuTrafficVolumeRprtngCriteria
{
 TknPres pres;
 NhuTransChCriteriaLst transChCriteriaLst;
} NhuTrafficVolumeRprtngCriteria;

typedef struct NhuTrafficVolumeReportCriteria
{
 TknU8 choice;
 union {
  NhuTrafficVolumeRprtngCriteria trafficVolumeRprtngCriteria;
  NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 } val;
} NhuTrafficVolumeReportCriteria;

typedef struct NhuTrafficVolumeMeasurement
{
 TknPres pres;
 NhuTrafficVolumeMeasurementObjectLst trafficVolumeMeasurementObjectLst;
 NhuTrafficVolumeMeasQuantity trafficVolumeMeasQuantity;
 NhuTrafficVolumeRprtngQuantity trafficVolumeRprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuTrafficVolumeReportCriteria reportCriteria;
} NhuTrafficVolumeMeasurement;


typedef NhuTFCS_IdentityPlain NhuSIR_TFCS;
typedef struct NhuSIR_TFCS_Lst
{
 TknU16 noComp;
 NhuSIR_TFCS *member;
}NhuSIR_TFCS_Lst;


typedef TknU8 NhuQualityRprtngQuantitydl_TransChBLER;

typedef struct NhuQualityRprtngQuantitymodeSpecificInfotdd
{
 TknPres pres;
 NhuSIR_TFCS_Lst sir_TFCS_Lst;
} NhuQualityRprtngQuantitymodeSpecificInfotdd;

typedef struct NhuQualityRprtngQuantitymodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuQualityRprtngQuantitymodeSpecificInfotdd tdd;
 } val;
} NhuQualityRprtngQuantitymodeSpecificInfo;

typedef struct NhuQualityRprtngQuantity
{
 TknPres pres;
 NhuQualityRprtngQuantitydl_TransChBLER dl_TransChBLER;
 NhuBLER_TransChIdLst bler_dl_TransChIdLst;
 NhuQualityRprtngQuantitymodeSpecificInfo modeSpecificInfo;
} NhuQualityRprtngQuantity;


typedef TknU32 NhuQualityRprtngCriteriaSingletotalCRC;


typedef TknU32 NhuQualityRprtngCriteriaSinglebadCRC;


typedef TknU32 NhuQualityRprtngCriteriaSinglependingAfterTrigger;

typedef struct NhuQualityRprtngCriteriaSingle
{
 TknPres pres;
 NhuTportChannelIdentity transportChannelIdentity;
 NhuQualityRprtngCriteriaSingletotalCRC totalCRC;
 NhuQualityRprtngCriteriaSinglebadCRC badCRC;
 NhuQualityRprtngCriteriaSinglependingAfterTrigger pendingAfterTrigger;
} NhuQualityRprtngCriteriaSingle;

typedef struct NhuQualityRprtngCriteria
{
 TknU16 noComp;
 NhuQualityRprtngCriteriaSingle *member;
}NhuQualityRprtngCriteria;

typedef struct NhuQualityReportCriteria
{
 TknU8 choice;
 union {
  NhuQualityRprtngCriteria qualityRprtngCriteria;
  NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 } val;
} NhuQualityReportCriteria;

typedef struct NhuQualityMeasurement
{
 TknPres pres;
 NhuQualityRprtngQuantity qualityRprtngQuantity;
 NhuQualityReportCriteria reportCriteria;
} NhuQualityMeasurement;


typedef enum enumNhuUE_MeasurementQuantity
{
 NhuUE_MeasurementQuantityue_TransmittedPowerEnum,
 NhuUE_MeasurementQuantityutra_Carrier_RSSIEnum,
 NhuUE_MeasurementQuantityue_RX_TX_TimeDifferenceEnum
} EnumNhuUE_MeasurementQuantity;
typedef TknU32 NhuUE_MeasurementQuantity;

typedef struct NhuUE_InternalMeasQuantity
{
 TknPres pres;
 NhuUE_MeasurementQuantity measurementQuantity;
 Nhu3gFilterCoefficient filterCoefficient;
} NhuUE_InternalMeasQuantity;


typedef TknU8 NhuUE_InternalRprtngQuantityue_TransmittedPower;


typedef TknU8 NhuUE_InternalRprtngQuantitymodeSpecificInfofddue_RX_TX_TimeDifference;

typedef struct NhuUE_InternalRprtngQuantitymodeSpecificInfofdd
{
 TknPres pres;
 NhuUE_InternalRprtngQuantitymodeSpecificInfofddue_RX_TX_TimeDifference ue_RX_TX_TimeDifference;
} NhuUE_InternalRprtngQuantitymodeSpecificInfofdd;


typedef TknU8 NhuUE_InternalRprtngQuantitymodeSpecificInfotddappliedTA;

typedef struct NhuUE_InternalRprtngQuantitymodeSpecificInfotdd
{
 TknPres pres;
 NhuUE_InternalRprtngQuantitymodeSpecificInfotddappliedTA appliedTA;
} NhuUE_InternalRprtngQuantitymodeSpecificInfotdd;

typedef struct NhuUE_InternalRprtngQuantitymodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_InternalRprtngQuantitymodeSpecificInfofdd fdd;
  NhuUE_InternalRprtngQuantitymodeSpecificInfotdd tdd;
 } val;
} NhuUE_InternalRprtngQuantitymodeSpecificInfo;

typedef struct NhuUE_InternalRprtngQuantity
{
 TknPres pres;
 NhuUE_InternalRprtngQuantityue_TransmittedPower ue_TransmittedPower;
 NhuUE_InternalRprtngQuantitymodeSpecificInfo modeSpecificInfo;
} NhuUE_InternalRprtngQuantity;


typedef TknS32 NhuTransmittedPowerThreshold;

typedef struct NhuUE_6AB_Event
{
 TknPres pres;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuTransmittedPowerThreshold transmittedPowerThreshold;
} NhuUE_6AB_Event;


typedef TknU32 NhuUE_RX_TX_TimeDifferenceThreshold;

typedef struct NhuUE_6FG_Event
{
 TknPres pres;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuUE_RX_TX_TimeDifferenceThreshold ue_RX_TX_TimeDifferenceThreshold;
} NhuUE_6FG_Event;

typedef struct NhuUE_InternalEventParam
{
 TknU8 choice;
 union {
  NhuUE_6AB_Event event6a;
  NhuUE_6AB_Event event6b;
  Nhu3gTimeToTrigger event6c;
  Nhu3gTimeToTrigger event6d;
  Nhu3gTimeToTrigger event6e;
  NhuUE_6FG_Event event6f;
  NhuUE_6FG_Event event6g;
 } val;
} NhuUE_InternalEventParam;

typedef struct NhuUE_InternalEventParamLst
{
 TknU16 noComp;
 NhuUE_InternalEventParam *member;
}NhuUE_InternalEventParamLst;

typedef struct NhuUE_InternalRprtngCriteria
{
 TknPres pres;
 NhuUE_InternalEventParamLst ue_InternalEventParamLst;
} NhuUE_InternalRprtngCriteria;

typedef struct NhuUE_InternalReportCriteria
{
 TknU8 choice;
 union {
  NhuUE_InternalRprtngCriteria ue_InternalRprtngCriteria;
  NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 } val;
} NhuUE_InternalReportCriteria;

typedef struct NhuUE_InternalMeasurement
{
 TknPres pres;
 NhuUE_InternalMeasQuantity ue_InternalMeasQuantity;
 NhuUE_InternalRprtngQuantity ue_InternalRprtngQuantity;
 NhuUE_InternalReportCriteria reportCriteria;
} NhuUE_InternalMeasurement;

typedef struct NhuMeasurementTyp
{
 TknU8 choice;
 union {
  NhuIntraFrequencyMeasurement intraFrequencyMeasurement;
  NhuInterFrequencyMeasurement interFrequencyMeasurement;
  NhuInterRATMeasurement interRATMeasurement;
  NhuUE_Positioning_Measurement ue_positioning_Measurement;
  NhuTrafficVolumeMeasurement trafficVolumeMeasurement;
  NhuQualityMeasurement qualityMeasurement;
  NhuUE_InternalMeasurement ue_InternalMeasurement;
 } val;
} NhuMeasurementTyp;

typedef struct NhuMeasurementCmdmodify
{
 TknPres pres;
 NhuMeasurementTyp measurementTyp;
} NhuMeasurementCmdmodify;

typedef struct NhuMeasurementCmd
{
 TknU8 choice;
 union {
  NhuMeasurementTyp setup;
  NhuMeasurementCmdmodify modify;
 } val;
} NhuMeasurementCmd;


typedef TknU8 NhuUE_Positioning_RprtngQuantity_r4gps_TimingOfCellWanted;


typedef TknU8 NhuUE_Positioning_RprtngQuantity_r4additionalAssistanceDataReq;

typedef struct NhuUE_Positioning_RprtngQuantity_r4
{
 TknPres pres;
 NhuUE_Positioning_MethodTyp methodTyp;
 NhuPositioningMethod positioningMethod;
 NhuUE_Positioning_Accuracy horizontalAccuracy;
 NhuUE_Positioning_Accuracy verticalAccuracy;
 NhuUE_Positioning_RprtngQuantity_r4gps_TimingOfCellWanted gps_TimingOfCellWanted;
 NhuUE_Positioning_RprtngQuantity_r4additionalAssistanceDataReq additionalAssistanceDataReq;
 NhuEnvironmentCharacterisation environmentCharacterisation;
} NhuUE_Positioning_RprtngQuantity_r4;

typedef struct NhuReferenceCellPosition
{
 TknU8 choice;
 union {
  NhuEllipsoidPoint ellipsoidPoint;
  NhuEllipsoidPointAltitude ellipsoidPointWithAltitude;
 } val;
} NhuReferenceCellPosition;


typedef TknU32 NhuUE_Positioning_IPDL_Params_r4modeSpecificInfofddip_Offset;


typedef TknU32 NhuUE_Positioning_IPDL_Params_r4modeSpecificInfofddseed;

typedef struct NhuUE_Positioning_IPDL_Params_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuIP_Spacing ip_Spacing;
 NhuIP_Length ip_Length;
 NhuUE_Positioning_IPDL_Params_r4modeSpecificInfofddip_Offset ip_Offset;
 NhuUE_Positioning_IPDL_Params_r4modeSpecificInfofddseed seed;
} NhuUE_Positioning_IPDL_Params_r4modeSpecificInfofdd;


typedef TknU32 NhuUE_Positioning_IPDL_Params_r4modeSpecificInfotddip_slot;


typedef TknU32 NhuUE_Positioning_IPDL_Params_r4modeSpecificInfotddip_Start;

typedef struct NhuUE_Positioning_IPDL_Params_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuIP_Spacing_TDD ip_Spacing_TDD;
 NhuUE_Positioning_IPDL_Params_r4modeSpecificInfotddip_slot ip_slot;
 NhuUE_Positioning_IPDL_Params_r4modeSpecificInfotddip_Start ip_Start;
 NhuIP_PCCPCH_r4 ip_PCCPCG;
} NhuUE_Positioning_IPDL_Params_r4modeSpecificInfotdd;

typedef struct NhuUE_Positioning_IPDL_Params_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_IPDL_Params_r4modeSpecificInfofdd fdd;
  NhuUE_Positioning_IPDL_Params_r4modeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_IPDL_Params_r4modeSpecificInfo;

typedef struct NhuUE_Positioning_IPDL_Params_r4
{
 TknPres pres;
 NhuUE_Positioning_IPDL_Params_r4modeSpecificInfo modeSpecificInfo;
 NhuBurstModeParams burstModeParams;
} NhuUE_Positioning_IPDL_Params_r4;


typedef TknU32 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4sfn;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4modeSpecificInfofdd;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity cellAndChannelIdentity;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4modeSpecificInfotdd;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4modeSpecificInfofdd fdd;
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4modeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4modeSpecificInfo;


typedef TknU32 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningModeueBasedroundTripTime;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningModeueBased
{
 TknPres pres;
 NhuReferenceCellPosition cellPosition;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningModeueBasedroundTripTime roundTripTime;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningModeueBased;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningModeueAssisted
{
 TknPres pres;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningModeueAssisted;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningMode
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningModeueBased ueBased;
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningModeueAssisted ueAssisted;
 } val;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningMode;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4sfn sfn;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4modeSpecificInfo modeSpecificInfo;
 NhuFrequencyInfo frequencyInfo;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4positioningMode positioningMode;
 NhuUE_Positioning_IPDL_Params_r4 ue_positioning_IPDL_Paremeters;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4;


typedef enum enumNhuSFN_Offset_Validity
{
 NhuSFN_Offset_ValidityfalseEnum
} EnumNhuSFN_Offset_Validity;
typedef TknU32 NhuSFN_Offset_Validity;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4modeSpecificInfofdd;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity cellAndChannelIdentity;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4modeSpecificInfotdd;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4modeSpecificInfofdd fdd;
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4modeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4modeSpecificInfo;


typedef TknS32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBasedrelativeNorth;


typedef TknS32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBasedrelativeEast;


typedef TknS32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBasedrelativeAltitude;


typedef TknU32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBasedroundTripTime;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBased
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBasedrelativeNorth relativeNorth;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBasedrelativeEast relativeEast;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBasedrelativeAltitude relativeAltitude;
 NhuFineSFN_SFN fineSFN_SFN;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBasedroundTripTime roundTripTime;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBased;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueAssisted
{
 TknPres pres;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueAssisted;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningMode
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueBased ueBased;
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningModeueAssisted ueAssisted;
 } val;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningMode;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4modeSpecificInfo modeSpecificInfo;
 NhuFrequencyInfo frequencyInfo;
 NhuUE_Positioning_IPDL_Params_r4 ue_positioning_IPDL_Paremeters;
 NhuSFN_SFN_RelTimeDifference1 sfn_SFN_RelTimeDifference;
 NhuSFN_Offset_Validity sfn_Offset_Validity;
 NhuSFN_SFN_Drift sfn_SFN_Drift;
 NhuOTDOA_SearchWindowSize searchWindowSize;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4positioningMode positioningMode;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellLst_r4
{
 TknU16 noComp;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r4 *member;
}NhuUE_Positioning_OTDOA_NeighbourCellLst_r4;

typedef struct NhuUE_Positioning_OTDOA_AssistanceData_r4
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r4 ue_positioning_OTDOA_ReferenceCellInfo;
 NhuUE_Positioning_OTDOA_NeighbourCellLst_r4 ue_positioning_OTDOA_NeighbourCellLst;
} NhuUE_Positioning_OTDOA_AssistanceData_r4;

typedef struct NhuUE_Positioning_Measurement_r4
{
 TknPres pres;
 NhuUE_Positioning_RprtngQuantity_r4 ue_positioning_RprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_Positioning_ReportCriteria reportCriteria;
 NhuUE_Positioning_OTDOA_AssistanceData_r4 ue_positioning_OTDOA_AssistanceData;
 NhuUE_Positioning_GPS_AssistanceData ue_positioning_GPS_AssistanceData;
} NhuUE_Positioning_Measurement_r4;


typedef TknU8 NhuUE_InternalRprtngQuantity_r4ue_TransmittedPower;


typedef TknU8 NhuUE_InternalRprtngQuantity_r4modeSpecificInfofddue_RX_TX_TimeDifference;

typedef struct NhuUE_InternalRprtngQuantity_r4modeSpecificInfofdd
{
 TknPres pres;
 NhuUE_InternalRprtngQuantity_r4modeSpecificInfofddue_RX_TX_TimeDifference ue_RX_TX_TimeDifference;
} NhuUE_InternalRprtngQuantity_r4modeSpecificInfofdd;


typedef TknU8 NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd384appliedTA;

typedef struct NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd384
{
 TknPres pres;
 NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd384appliedTA appliedTA;
} NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd384;


typedef TknU8 NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd128t_ADVinfo;

typedef struct NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd128
{
 TknPres pres;
 NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd128t_ADVinfo t_ADVinfo;
} NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd128;

typedef struct NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOption
{
 TknU8 choice;
 union {
  NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd384 tdd384;
  NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOptiontdd128 tdd128;
 } val;
} NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOption;

typedef struct NhuUE_InternalRprtngQuantity_r4modeSpecificInfotdd
{
 TknPres pres;
 NhuUE_InternalRprtngQuantity_r4modeSpecificInfotddtddOption tddOption;
} NhuUE_InternalRprtngQuantity_r4modeSpecificInfotdd;

typedef struct NhuUE_InternalRprtngQuantity_r4modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_InternalRprtngQuantity_r4modeSpecificInfofdd fdd;
  NhuUE_InternalRprtngQuantity_r4modeSpecificInfotdd tdd;
 } val;
} NhuUE_InternalRprtngQuantity_r4modeSpecificInfo;

typedef struct NhuUE_InternalRprtngQuantity_r4
{
 TknPres pres;
 NhuUE_InternalRprtngQuantity_r4ue_TransmittedPower ue_TransmittedPower;
 NhuUE_InternalRprtngQuantity_r4modeSpecificInfo modeSpecificInfo;
} NhuUE_InternalRprtngQuantity_r4;

typedef struct NhuUE_InternalMeasurement_r4
{
 TknPres pres;
 NhuUE_InternalMeasQuantity ue_InternalMeasQuantity;
 NhuUE_InternalRprtngQuantity_r4 ue_InternalRprtngQuantity;
 NhuUE_InternalReportCriteria reportCriteria;
} NhuUE_InternalMeasurement_r4;

typedef struct NhuMeasurementTyp_r4
{
 TknU8 choice;
 union {
  NhuIntraFrequencyMeasurement_r4 intraFrequencyMeasurement;
  NhuInterFrequencyMeasurement_r4 interFrequencyMeasurement;
  NhuInterRATMeasurement_r4 interRATMeasurement;
  NhuUE_Positioning_Measurement_r4 up_Measurement;
  NhuTrafficVolumeMeasurement trafficVolumeMeasurement;
  NhuQualityMeasurement qualityMeasurement;
  NhuUE_InternalMeasurement_r4 ue_InternalMeasurement;
 } val;
} NhuMeasurementTyp_r4;

typedef struct NhuMeasurementCmd_r4modify
{
 TknPres pres;
 NhuMeasurementTyp_r4 measurementTyp;
} NhuMeasurementCmd_r4modify;

typedef struct NhuMeasurementCmd_r4
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r4 setup;
  NhuMeasurementCmd_r4modify modify;
 } val;
} NhuMeasurementCmd_r4;

typedef struct NhuMeasurementTyp_r6
{
 TknU8 choice;
 union {
  NhuIntraFrequencyMeasurement_r6 intraFrequencyMeasurement;
  NhuInterFrequencyMeasurement_r6 interFrequencyMeasurement;
  NhuInterRATMeasurement_r6 interRATMeasurement;
  NhuUE_Positioning_Measurement_r4 up_Measurement;
  NhuTrafficVolumeMeasurement trafficVolumeMeasurement;
  NhuQualityMeasurement qualityMeasurement;
  NhuUE_InternalMeasurement_r4 ue_InternalMeasurement;
 } val;
} NhuMeasurementTyp_r6;

typedef struct NhuMeasurementCmd_r6modify
{
 TknPres pres;
 NhuMeasurementTyp_r6 measurementTyp;
} NhuMeasurementCmd_r6modify;

typedef struct NhuMeasurementCmd_r6
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r6 setup;
  NhuMeasurementCmd_r6modify modify;
 } val;
} NhuMeasurementCmd_r6;


typedef TknU8 NhuUE_Positioning_RprtngQuantity_r7gps_TimingOfCellWanted;


typedef TknU8 NhuUE_Positioning_RprtngQuantity_r7additionalAssistanceDataReq;


typedef enum enumNhuUE_Positioning_RprtngQuantity_r7velocityRqsted
{
 NhuUE_Positioning_RprtngQuantity_r7velocityRqstedtrueEnum
} EnumNhuUE_Positioning_RprtngQuantity_r7velocityRqsted;
typedef TknU32 NhuUE_Positioning_RprtngQuantity_r7velocityRqsted;


typedef TknStrBSXL NhuUE_Positioning_RprtngQuantity_r7gANSSPositioningMethods;

typedef TknStrBSXL NhuUE_Positioning_RprtngQuantity_r7gANSSTimingOfCellWanted;

typedef TknStrBSXL NhuUE_Positioning_RprtngQuantity_r7gANSSCarrierPhaseMeasurementRqsted;
typedef struct NhuUE_Positioning_RprtngQuantity_r7
{
 TknPres pres;
 NhuUE_Positioning_MethodTyp methodTyp;
 NhuPositioningMethod positioningMethod;
 NhuUE_Positioning_Accuracy horizontalAccuracy;
 NhuUE_Positioning_Accuracy verticalAccuracy;
 NhuUE_Positioning_RprtngQuantity_r7gps_TimingOfCellWanted gps_TimingOfCellWanted;
 NhuUE_Positioning_RprtngQuantity_r7additionalAssistanceDataReq additionalAssistanceDataReq;
 NhuEnvironmentCharacterisation environmentCharacterisation;
 NhuUE_Positioning_RprtngQuantity_r7velocityRqsted velocityRqsted;
 NhuUE_Positioning_RprtngQuantity_r7gANSSPositioningMethods gANSSPositioningMethods;
 NhuUE_Positioning_RprtngQuantity_r7gANSSTimingOfCellWanted gANSSTimingOfCellWanted;
 NhuUE_Positioning_RprtngQuantity_r7gANSSCarrierPhaseMeasurementRqsted gANSSCarrierPhaseMeasurementRqsted;
} NhuUE_Positioning_RprtngQuantity_r7;


typedef enum enumNhuThresholdSFN_GPS_TOW_us
{
 NhuThresholdSFN_GPS_TOW_usus1Enum,
 NhuThresholdSFN_GPS_TOW_usus2Enum,
 NhuThresholdSFN_GPS_TOW_usus3Enum,
 NhuThresholdSFN_GPS_TOW_usus5Enum,
 NhuThresholdSFN_GPS_TOW_usus10Enum,
 NhuThresholdSFN_GPS_TOW_usus20Enum,
 NhuThresholdSFN_GPS_TOW_usus50Enum,
 NhuThresholdSFN_GPS_TOW_usus100Enum
} EnumNhuThresholdSFN_GPS_TOW_us;
typedef TknU32 NhuThresholdSFN_GPS_TOW_us;


typedef enum enumNhuThresholdSFN_GANSS_TOW
{
 NhuThresholdSFN_GANSS_TOWus1Enum,
 NhuThresholdSFN_GANSS_TOWus2Enum,
 NhuThresholdSFN_GANSS_TOWus3Enum,
 NhuThresholdSFN_GANSS_TOWus5Enum,
 NhuThresholdSFN_GANSS_TOWus10Enum,
 NhuThresholdSFN_GANSS_TOWus20Enum,
 NhuThresholdSFN_GANSS_TOWus50Enum,
 NhuThresholdSFN_GANSS_TOWus100Enum
} EnumNhuThresholdSFN_GANSS_TOW;
typedef TknU32 NhuThresholdSFN_GANSS_TOW;

typedef struct NhuUE_Positioning_EventSpecificInfo_r7
{
 TknU8 choice;
 union {
  NhuThresholdPositionChange e7a;
  NhuThresholdSFN_SFN_Change e7b;
  NhuThresholdSFN_GPS_TOW_us e7c;
  NhuThresholdSFN_GANSS_TOW e7d;
 } val;
} NhuUE_Positioning_EventSpecificInfo_r7;


typedef TknU8 NhuUE_Positioning_EventParam_r7reportFirstFix;

typedef struct NhuUE_Positioning_EventParam_r7
{
 TknPres pres;
 NhuRprtngAmount reportingAmount;
 NhuUE_Positioning_EventParam_r7reportFirstFix reportFirstFix;
 NhuUE_Positioning_MeasurementInterval measurementInterval;
 NhuUE_Positioning_EventSpecificInfo_r7 eventSpecificInfo;
} NhuUE_Positioning_EventParam_r7;

typedef struct NhuUE_Positioning_EventParamLst_r7
{
 TknU16 noComp;
 NhuUE_Positioning_EventParam_r7 *member;
}NhuUE_Positioning_EventParamLst_r7;

typedef struct NhuUE_Positioning_ReportCriteria_r7
{
 TknU8 choice;
 union {
  NhuUE_Positioning_EventParamLst_r7 ue_positioning_RprtngCriteria;
  NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 } val;
} NhuUE_Positioning_ReportCriteria_r7;


typedef TknU32 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7sfn;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7modeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7modeSpecificInfofdd;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7modeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity cellAndChannelIdentity;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7modeSpecificInfotdd;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7modeSpecificInfofdd fdd;
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7modeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7modeSpecificInfo;


typedef TknU32 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueBasedroundTripTime;


typedef TknU32 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueBasedroundTripTimeExtn;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueBased
{
 TknPres pres;
 NhuReferenceCellPosition cellPosition;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueBasedroundTripTime roundTripTime;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueBasedroundTripTimeExtn roundTripTimeExtn;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueBased;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueAssisted
{
 TknPres pres;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueAssisted;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningMode
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueBased ueBased;
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningModeueAssisted ueAssisted;
 } val;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningMode;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7sfn sfn;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7modeSpecificInfo modeSpecificInfo;
 NhuFrequencyInfo frequencyInfo;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7positioningMode positioningMode;
 NhuUE_Positioning_IPDL_Params_r4 ue_positioning_IPDL_Paremeters;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7modeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7modeSpecificInfofdd;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7modeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity cellAndChannelIdentity;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7modeSpecificInfotdd;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7modeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7modeSpecificInfofdd fdd;
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7modeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7modeSpecificInfo;


typedef TknS32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedrelativeNorth;


typedef TknS32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedrelativeEast;


typedef TknS32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedrelativeAltitude;


typedef TknU32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedroundTripTime;


typedef TknU32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedroundTripTimeExtn;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBased
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedrelativeNorth relativeNorth;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedrelativeEast relativeEast;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedrelativeAltitude relativeAltitude;
 NhuFineSFN_SFN fineSFN_SFN;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedroundTripTime roundTripTime;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBasedroundTripTimeExtn roundTripTimeExtn;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBased;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueAssisted
{
 TknPres pres;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueAssisted;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningMode
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueBased ueBased;
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningModeueAssisted ueAssisted;
 } val;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningMode;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7modeSpecificInfo modeSpecificInfo;
 NhuFrequencyInfo frequencyInfo;
 NhuUE_Positioning_IPDL_Params_r4 ue_positioning_IPDL_Paremeters;
 NhuSFN_SFN_RelTimeDifference1 sfn_SFN_RelTimeDifference;
 NhuSFN_Offset_Validity sfn_Offset_Validity;
 NhuSFN_SFN_Drift sfn_SFN_Drift;
 NhuOTDOA_SearchWindowSize searchWindowSize;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7positioningMode positioningMode;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellLst_r7
{
 TknU16 noComp;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_r7 *member;
}NhuUE_Positioning_OTDOA_NeighbourCellLst_r7;

typedef struct NhuUE_Positioning_OTDOA_AssistanceData_r7
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_r7 ue_positioning_OTDOA_ReferenceCellInfo;
 NhuUE_Positioning_OTDOA_NeighbourCellLst_r7 ue_positioning_OTDOA_NeighbourCellLst;
} NhuUE_Positioning_OTDOA_AssistanceData_r7;


typedef TknU32 NhuUE_Positioning_GPS_ReferenceTime_r7gps_Week;

typedef struct NhuUE_Positioning_GPS_ReferenceTime_r7
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTime_r7gps_Week gps_Week;
 NhuGPS_TOW_1msec gps_tow_1msec;
 NhuUTRAN_GPSReferenceTime utran_GPSReferenceTime;
 NhuUE_Positioning_GPS_ReferenceTimeUncertainty ue_Positioning_GPS_ReferenceTimeUncertainty;
 NhuSFN_TOW_Uncertainty sfn_tow_Uncertainty;
 NhuUTRAN_GPS_DriftRate utran_GPS_DriftRate;
 NhuGPS_TOW_AssistLst gps_TOW_AssistLst;
} NhuUE_Positioning_GPS_ReferenceTime_r7;

typedef struct NhuUE_Positioning_GPS_AcquisitionAssistance_r7
{
 TknPres pres;
 NhuGPS_TOW_1msec gps_ReferenceTime;
 NhuUTRAN_GPSReferenceTime utran_GPSReferenceTime;
 NhuUE_Positioning_GPS_ReferenceTimeUncertainty ue_Positioning_GPS_ReferenceTimeUncertainty;
 NhuAcquisitionSatInfoLst satelliteInfoLst;
} NhuUE_Positioning_GPS_AcquisitionAssistance_r7;

typedef struct NhuUE_Positioning_GPS_AssistanceData_r7
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTime_r7 ue_positioning_GPS_ReferenceTime;
 NhuReferenceLoc ue_positioning_GPS_ReferenceLoc;
 NhuUE_Positioning_GPS_DGPS_Corrections ue_positioning_GPS_DGPS_Corrections;
 NhuUE_Positioning_GPS_NavigationModel ue_positioning_GPS_NavigationModel;
 NhuUE_Positioning_GPS_IonosphericModel ue_positioning_GPS_IonosphericModel;
 NhuUE_Positioning_GPS_UTC_Model ue_positioning_GPS_UTC_Model;
 NhuUE_Positioning_GPS_Almanac ue_positioning_GPS_Almanac;
 NhuUE_Positioning_GPS_AcquisitionAssistance_r7 ue_positioning_GPS_AcquisitionAssistance;
 NhuBadSatLst ue_positioning_GPS_Real_timeIntegrity;
} NhuUE_Positioning_GPS_AssistanceData_r7;


typedef enum enumNhuTutran_Ganss_DriftRate
{
 NhuTutran_Ganss_DriftRateugdr0Enum,
 NhuTutran_Ganss_DriftRateugdr1Enum,
 NhuTutran_Ganss_DriftRateugdr2Enum,
 NhuTutran_Ganss_DriftRateugdr5Enum,
 NhuTutran_Ganss_DriftRateugdr10Enum,
 NhuTutran_Ganss_DriftRateugdr15Enum,
 NhuTutran_Ganss_DriftRateugdr25Enum,
 NhuTutran_Ganss_DriftRateugdr50Enum,
 NhuTutran_Ganss_DriftRateugdr_1Enum,
 NhuTutran_Ganss_DriftRateugdr_2Enum,
 NhuTutran_Ganss_DriftRateugdr_5Enum,
 NhuTutran_Ganss_DriftRateugdr_10Enum,
 NhuTutran_Ganss_DriftRateugdr_15Enum,
 NhuTutran_Ganss_DriftRateugdr_25Enum,
 NhuTutran_Ganss_DriftRateugdr_50Enum,
 NhuTutran_Ganss_DriftRatespareEnum
} EnumNhuTutran_Ganss_DriftRate;
typedef TknU32 NhuTutran_Ganss_DriftRate;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTimeganssDay;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTimeganssTod;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTimeganssTodUncertainty;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTimeganssTimeId;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimetimingOfCellFrames;

typedef struct NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimemodefdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primary_CPICH_Info;
} NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimemodefdd;

typedef struct NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimemodetdd
{
 TknPres pres;
 NhuCellParamsID cellParams;
} NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimemodetdd;

typedef struct NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimemode
{
 TknU8 choice;
 union {
  NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimemodefdd fdd;
  NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimemodetdd tdd;
 } val;
} NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimemode;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimereferenceSfn;

typedef struct NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTime
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimetimingOfCellFrames timingOfCellFrames;
 NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimemode mode;
 NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTimereferenceSfn referenceSfn;
} NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTime;

typedef struct NhuUE_Positioning_GANSS_ReferenceTime
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTimeganssDay ganssDay;
 NhuUE_Positioning_GANSS_ReferenceTimeganssTod ganssTod;
 NhuUE_Positioning_GANSS_ReferenceTimeganssTodUncertainty ganssTodUncertainty;
 NhuUE_Positioning_GANSS_ReferenceTimeganssTimeId ganssTimeId;
 NhuUE_Positioning_GANSS_ReferenceTimeutran_ganssreferenceTime utran_ganssreferenceTime;
 NhuTutran_Ganss_DriftRate tutran_ganss_driftRate;
} NhuUE_Positioning_GANSS_ReferenceTime;

typedef struct NhuReferenceLocGANSS
{
 TknPres pres;
 NhuEllipsoidPointAltitudeEllipsoide ellipsoidPointAltitudeEllipsoide;
} NhuReferenceLocGANSS;


typedef TknStrBSXL NhuUE_Positioning_GANSS_IonosphericModelalpha_zero_ionos;

typedef TknStrBSXL NhuUE_Positioning_GANSS_IonosphericModelalpha_one_ionos;

typedef TknStrBSXL NhuUE_Positioning_GANSS_IonosphericModelalpha_two_ionos;
typedef struct NhuUE_Positioning_GANSS_IonosphericModel
{
 TknPres pres;
 NhuUE_Positioning_GANSS_IonosphericModelalpha_zero_ionos alpha_zero_ionos;
 NhuUE_Positioning_GANSS_IonosphericModelalpha_one_ionos alpha_one_ionos;
 NhuUE_Positioning_GANSS_IonosphericModelalpha_two_ionos alpha_two_ionos;
 NhuGANSS_Storm_Flag gANSS_storm_flags;
} NhuUE_Positioning_GANSS_IonosphericModel;

typedef struct NhuUE_Positioning_GANSS_AssistanceData
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTime ue_positioning_GANSS_ReferenceTime;
 NhuReferenceLocGANSS uePositioningGanssReferencePosition;
 NhuUE_Positioning_GANSS_IonosphericModel uePositioningGanssIonosphericModel;
 NhuGANSSGenericDataLst ganssGenericDataLst;
} NhuUE_Positioning_GANSS_AssistanceData;

typedef struct NhuUE_Positioning_Measurement_r7
{
 TknPres pres;
 NhuUE_Positioning_RprtngQuantity_r7 ue_positioning_RprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_Positioning_ReportCriteria_r7 reportCriteria;
 NhuUE_Positioning_OTDOA_AssistanceData_r7 ue_positioning_OTDOA_AssistanceData;
 NhuUE_Positioning_GPS_AssistanceData_r7 ue_positioning_GPS_AssistanceData;
 NhuUE_Positioning_GANSS_AssistanceData ue_positioning_GANSS_AssistanceData;
} NhuUE_Positioning_Measurement_r7;

typedef struct NhuMeasurementTyp_r7
{
 TknU8 choice;
 union {
  NhuIntraFrequencyMeasurement_r7 intraFrequencyMeasurement;
  NhuInterFrequencyMeasurement_r7 interFrequencyMeasurement;
  NhuInterRATMeasurement_r6 interRATMeasurement;
  NhuUE_Positioning_Measurement_r7 up_Measurement;
  NhuTrafficVolumeMeasurement trafficVolumeMeasurement;
  NhuQualityMeasurement qualityMeasurement;
  NhuUE_InternalMeasurement_r4 ue_InternalMeasurement;
 } val;
} NhuMeasurementTyp_r7;

typedef struct NhuMeasurementCmd_r7modify
{
 TknPres pres;
 NhuMeasurementTyp_r7 measurementTyp;
} NhuMeasurementCmd_r7modify;

typedef struct NhuMeasurementCmd_r7
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r7 setup;
  NhuMeasurementCmd_r7modify modify;
 } val;
} NhuMeasurementCmd_r7;


typedef TknU8 NhuUE_Positioning_RprtngQuantity_r8gps_TimingOfCellWanted;


typedef TknU8 NhuUE_Positioning_RprtngQuantity_r8additionalAssistanceDataReq;


typedef enum enumNhuUE_Positioning_RprtngQuantity_r8velocityRqsted
{
 NhuUE_Positioning_RprtngQuantity_r8velocityRqstedtrueEnum
} EnumNhuUE_Positioning_RprtngQuantity_r8velocityRqsted;
typedef TknU32 NhuUE_Positioning_RprtngQuantity_r8velocityRqsted;


typedef TknStrBSXL NhuUE_Positioning_RprtngQuantity_r8gANSSPositioningMethods;

typedef TknStrBSXL NhuUE_Positioning_RprtngQuantity_r8gANSSTimingOfCellWanted;

typedef TknStrBSXL NhuUE_Positioning_RprtngQuantity_r8gANSSCarrierPhaseMeasurementRqsted;

typedef TknStrBSXL NhuUE_Positioning_RprtngQuantity_r8gANSSMultiFreqMeasurementRqsted;
typedef struct NhuUE_Positioning_RprtngQuantity_r8
{
 TknPres pres;
 NhuUE_Positioning_MethodTyp methodTyp;
 NhuPositioningMethod positioningMethod;
 NhuUE_Positioning_Accuracy horizontalAccuracy;
 NhuUE_Positioning_Accuracy verticalAccuracy;
 NhuUE_Positioning_RprtngQuantity_r8gps_TimingOfCellWanted gps_TimingOfCellWanted;
 NhuUE_Positioning_RprtngQuantity_r8additionalAssistanceDataReq additionalAssistanceDataReq;
 NhuEnvironmentCharacterisation environmentCharacterisation;
 NhuUE_Positioning_RprtngQuantity_r8velocityRqsted velocityRqsted;
 NhuUE_Positioning_RprtngQuantity_r8gANSSPositioningMethods gANSSPositioningMethods;
 NhuUE_Positioning_RprtngQuantity_r8gANSSTimingOfCellWanted gANSSTimingOfCellWanted;
 NhuUE_Positioning_RprtngQuantity_r8gANSSCarrierPhaseMeasurementRqsted gANSSCarrierPhaseMeasurementRqsted;
 NhuUE_Positioning_RprtngQuantity_r8gANSSMultiFreqMeasurementRqsted gANSSMultiFreqMeasurementRqsted;
} NhuUE_Positioning_RprtngQuantity_r8;


typedef TknStrBSXL NhuUE_Positioning_GANSS_AddIonoModeldataID;
typedef struct NhuUE_Positioning_GANSS_AddIonoModel
{
 TknPres pres;
 NhuUE_Positioning_GANSS_AddIonoModeldataID dataID;
 NhuUE_Positioning_GPS_IonosphericModel alpha_beta_parameters;
} NhuUE_Positioning_GANSS_AddIonoModel;


typedef TknStrBSXL NhuUE_Positioning_GANSS_EarthOrientParateop;

typedef TknStrBSXL NhuUE_Positioning_GANSS_EarthOrientParapmX;

typedef TknStrBSXL NhuUE_Positioning_GANSS_EarthOrientParapmXdot;

typedef TknStrBSXL NhuUE_Positioning_GANSS_EarthOrientParapmY;

typedef TknStrBSXL NhuUE_Positioning_GANSS_EarthOrientParapmYdot;

typedef TknStrBSXL NhuUE_Positioning_GANSS_EarthOrientParadeltaUT1;

typedef TknStrBSXL NhuUE_Positioning_GANSS_EarthOrientParadeltaUT1dot;
typedef struct NhuUE_Positioning_GANSS_EarthOrientPara
{
 TknPres pres;
 NhuUE_Positioning_GANSS_EarthOrientParateop teop;
 NhuUE_Positioning_GANSS_EarthOrientParapmX pmX;
 NhuUE_Positioning_GANSS_EarthOrientParapmXdot pmXdot;
 NhuUE_Positioning_GANSS_EarthOrientParapmY pmY;
 NhuUE_Positioning_GANSS_EarthOrientParapmYdot pmYdot;
 NhuUE_Positioning_GANSS_EarthOrientParadeltaUT1 deltaUT1;
 NhuUE_Positioning_GANSS_EarthOrientParadeltaUT1dot deltaUT1dot;
} NhuUE_Positioning_GANSS_EarthOrientPara;

typedef struct NhuUE_Positioning_GANSS_AssistanceData_r8
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTime ue_positioning_GANSS_ReferenceTime;
 NhuReferenceLocGANSS uePositioningGanssReferencePosition;
 NhuUE_Positioning_GANSS_IonosphericModel uePositioningGanssIonosphericModel;
 NhuUE_Positioning_GANSS_AddIonoModel uePositioningGanssAddIonoModel;
 NhuUE_Positioning_GANSS_EarthOrientPara uePositioningGanssEarthOrientationPara;
 NhuGANSSGenericDataLst_r8 ganssGenericDataLst;
} NhuUE_Positioning_GANSS_AssistanceData_r8;

typedef struct NhuUE_Positioning_Measurement_r8
{
 TknPres pres;
 NhuUE_Positioning_RprtngQuantity_r8 ue_positioning_RprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_Positioning_ReportCriteria_r7 reportCriteria;
 NhuUE_Positioning_OTDOA_AssistanceData_r7 ue_positioning_OTDOA_AssistanceData;
 NhuUE_Positioning_GPS_AssistanceData_r7 ue_positioning_GPS_AssistanceData;
 NhuUE_Positioning_GANSS_AssistanceData_r8 ue_positioning_GANSS_AssistanceData;
} NhuUE_Positioning_Measurement_r8;

typedef struct NhuMeasurementTyp_r8
{
 TknU8 choice;
 union {
  NhuIntraFrequencyMeasurement_r7 intraFrequencyMeasurement;
  NhuInterFrequencyMeasurement_r8 interFrequencyMeasurement;
  NhuInterRATMeasurement_r8 interRATMeasurement;
  NhuUE_Positioning_Measurement_r8 up_Measurement;
  NhuTrafficVolumeMeasurement trafficVolumeMeasurement;
  NhuQualityMeasurement qualityMeasurement;
  NhuUE_InternalMeasurement_r4 ue_InternalMeasurement;
 } val;
} NhuMeasurementTyp_r8;

typedef struct NhuMeasurementCmd_r8modify
{
 TknPres pres;
 NhuMeasurementTyp_r8 measurementTyp;
} NhuMeasurementCmd_r8modify;

typedef struct NhuMeasurementCmd_r8
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r8 setup;
  NhuMeasurementCmd_r8modify modify;
 } val;
} NhuMeasurementCmd_r8;

typedef struct NhuUE_Positioning_GPS_DGPS_Corrections_r9
{
 TknPres pres;
 NhuGPS_TOW_1sec gps_TOW;
 NhuDiffCorrectionStatus statusHealth;
 NhuDGPS_CorrectionSatInfoLst_r9 dgps_CorrectionSatInfoLst;
} NhuUE_Positioning_GPS_DGPS_Corrections_r9;

typedef struct NhuUE_Positioning_GPS_AssistanceData_r9
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTime_r7 ue_positioning_GPS_ReferenceTime;
 NhuReferenceLoc ue_positioning_GPS_ReferenceLoc;
 NhuUE_Positioning_GPS_DGPS_Corrections_r9 ue_positioning_GPS_DGPS_Corrections;
 NhuUE_Positioning_GPS_NavigationModel ue_positioning_GPS_NavigationModel;
 NhuUE_Positioning_GPS_IonosphericModel ue_positioning_GPS_IonosphericModel;
 NhuUE_Positioning_GPS_UTC_Model ue_positioning_GPS_UTC_Model;
 NhuUE_Positioning_GPS_Almanac ue_positioning_GPS_Almanac;
 NhuUE_Positioning_GPS_AcquisitionAssistance_r7 ue_positioning_GPS_AcquisitionAssistance;
 NhuBadSatLst ue_positioning_GPS_Real_timeIntegrity;
} NhuUE_Positioning_GPS_AssistanceData_r9;

typedef struct NhuUE_Positioning_GANSS_AssistanceData_r9
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTime ue_positioning_GANSS_ReferenceTime;
 NhuReferenceLocGANSS uePositioningGanssReferencePosition;
 NhuUE_Positioning_GANSS_IonosphericModel uePositioningGanssIonosphericModel;
 NhuUE_Positioning_GANSS_AddIonoModel uePositioningGanssAddIonoModel;
 NhuUE_Positioning_GANSS_EarthOrientPara uePositioningGanssEarthOrientationPara;
 NhuGANSSGenericDataLst_r9 ganssGenericDataLst;
} NhuUE_Positioning_GANSS_AssistanceData_r9;

typedef struct NhuUE_Positioning_Measurement_r9
{
 TknPres pres;
 NhuUE_Positioning_RprtngQuantity_r8 ue_positioning_RprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_Positioning_ReportCriteria_r7 reportCriteria;
 NhuUE_Positioning_OTDOA_AssistanceData_r7 ue_positioning_OTDOA_AssistanceData;
 NhuUE_Positioning_GPS_AssistanceData_r9 ue_positioning_GPS_AssistanceData;
 NhuUE_Positioning_GANSS_AssistanceData_r9 ue_positioning_GANSS_AssistanceData;
} NhuUE_Positioning_Measurement_r9;

typedef struct NhuMeasurementTyp_r9
{
 TknU8 choice;
 union {
  NhuIntraFrequencyMeasurement_r9 intraFrequencyMeasurement;
  NhuInterFrequencyMeasurement_r9 interFrequencyMeasurement;
  NhuInterRATMeasurement_r9 interRATMeasurement;
  NhuUE_Positioning_Measurement_r9 up_Measurement;
  NhuTrafficVolumeMeasurement trafficVolumeMeasurement;
  NhuQualityMeasurement qualityMeasurement;
  NhuUE_InternalMeasurement_r4 ue_InternalMeasurement;
  NhuCSGProximityDetection csgProximityDetection;
 } val;
} NhuMeasurementTyp_r9;

typedef struct NhuMeasurementCmd_r9modify
{
 TknPres pres;
 NhuMeasurementTyp_r9 measurementTyp;
} NhuMeasurementCmd_r9modify;

typedef struct NhuMeasurementCmd_r9
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r9 setup;
  NhuMeasurementCmd_r9modify modify;
 } val;
} NhuMeasurementCmd_r9;


typedef TknU32 NhuUE_Positioning_GPS_ReferenceTime_r10gps_Week;


typedef TknU32 NhuUE_Positioning_GPS_ReferenceTime_r10gps_Week_Cycle_Number;

typedef struct NhuUE_Positioning_GPS_ReferenceTime_r10
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTime_r10gps_Week gps_Week;
 NhuUE_Positioning_GPS_ReferenceTime_r10gps_Week_Cycle_Number gps_Week_Cycle_Number;
 NhuGPS_TOW_1msec gps_tow_1msec;
 NhuUTRAN_GPSReferenceTime utran_GPSReferenceTime;
 NhuUE_Positioning_GPS_ReferenceTimeUncertainty ue_Positioning_GPS_ReferenceTimeUncertainty;
 NhuSFN_TOW_Uncertainty sfn_tow_Uncertainty;
 NhuUTRAN_GPS_DriftRate utran_GPS_DriftRate;
 NhuGPS_TOW_AssistLst gps_TOW_AssistLst;
} NhuUE_Positioning_GPS_ReferenceTime_r10;


typedef TknStrBSXL NhuUE_Positioning_GPS_Almanac_r10wn_a;

typedef TknU8 NhuUE_Positioning_GPS_Almanac_r10complete_Almanac_Provided;


typedef TknStrBSXL NhuUE_Positioning_GPS_Almanac_r10sv_GlobalHealth;
typedef struct NhuUE_Positioning_GPS_Almanac_r10
{
 TknPres pres;
 NhuUE_Positioning_GPS_Almanac_r10wn_a wn_a;
 NhuUE_Positioning_GPS_Almanac_r10complete_Almanac_Provided complete_Almanac_Provided;
 NhuAlmanacSatInfoLst almanacSatInfoLst;
 NhuUE_Positioning_GPS_Almanac_r10sv_GlobalHealth sv_GlobalHealth;
} NhuUE_Positioning_GPS_Almanac_r10;

typedef struct NhuUE_Positioning_GPS_AcquisitionAssistance_r10
{
 TknPres pres;
 NhuGPS_TOW_1msec gps_ReferenceTime;
 NhuUTRAN_GPSReferenceTime utran_GPSReferenceTime;
 NhuUE_Positioning_GPS_ReferenceTimeUncertainty ue_Positioning_GPS_ReferenceTimeUncertainty;
 NhuAcquisitionSatInfoLst_r10 satelliteInfoLst;
} NhuUE_Positioning_GPS_AcquisitionAssistance_r10;

typedef struct NhuUE_Positioning_GPS_AssistanceData_r10
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTime_r10 ue_positioning_GPS_ReferenceTime;
 NhuReferenceLoc ue_positioning_GPS_ReferenceLoc;
 NhuUE_Positioning_GPS_DGPS_Corrections_r9 ue_positioning_GPS_DGPS_Corrections;
 NhuUE_Positioning_GPS_NavigationModel ue_positioning_GPS_NavigationModel;
 NhuUE_Positioning_GPS_IonosphericModel ue_positioning_GPS_IonosphericModel;
 NhuUE_Positioning_GPS_UTC_Model ue_positioning_GPS_UTC_Model;
 NhuUE_Positioning_GPS_Almanac_r10 ue_positioning_GPS_Almanac;
 NhuUE_Positioning_GPS_AcquisitionAssistance_r10 ue_positioning_GPS_AcquisitionAssistance;
 NhuBadSatLst ue_positioning_GPS_Real_timeIntegrity;
} NhuUE_Positioning_GPS_AssistanceData_r10;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTime_r10ganssDay;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTime_r10ganss_Day_Cycle_Number;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTime_r10ganssTod;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTime_r10ganssTodUncertainty;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTime_r10ganssTimeId;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimetimingOfCellFrames;

typedef struct NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimemodefdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primary_CPICH_Info;
} NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimemodefdd;

typedef struct NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimemodetdd
{
 TknPres pres;
 NhuCellParamsID cellParams;
} NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimemodetdd;

typedef struct NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimemode
{
 TknU8 choice;
 union {
  NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimemodefdd fdd;
  NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimemodetdd tdd;
 } val;
} NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimemode;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimereferenceSfn;

typedef struct NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTime
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimetimingOfCellFrames timingOfCellFrames;
 NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimemode mode;
 NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTimereferenceSfn referenceSfn;
} NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTime;

typedef struct NhuUE_Positioning_GANSS_ReferenceTime_r10
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTime_r10ganssDay ganssDay;
 NhuUE_Positioning_GANSS_ReferenceTime_r10ganss_Day_Cycle_Number ganss_Day_Cycle_Number;
 NhuUE_Positioning_GANSS_ReferenceTime_r10ganssTod ganssTod;
 NhuUE_Positioning_GANSS_ReferenceTime_r10ganssTodUncertainty ganssTodUncertainty;
 NhuUE_Positioning_GANSS_ReferenceTime_r10ganssTimeId ganssTimeId;
 NhuUE_Positioning_GANSS_ReferenceTime_r10utran_ganssreferenceTime utran_ganssreferenceTime;
 NhuTutran_Ganss_DriftRate tutran_ganss_driftRate;
} NhuUE_Positioning_GANSS_ReferenceTime_r10;

typedef struct NhuUE_Positioning_GANSS_AssistanceData_r10
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTime_r10 ue_positioning_GANSS_ReferenceTime;
 NhuReferenceLocGANSS uePositioningGanssReferencePosition;
 NhuUE_Positioning_GANSS_IonosphericModel uePositioningGanssIonosphericModel;
 NhuUE_Positioning_GANSS_AddIonoModel uePositioningGanssAddIonoModel;
 NhuUE_Positioning_GANSS_EarthOrientPara uePositioningGanssEarthOrientationPara;
 NhuGANSSGenericDataLst_r10 ganssGenericDataLst;
} NhuUE_Positioning_GANSS_AssistanceData_r10;

typedef struct NhuUE_Positioning_Measurement_r10
{
 TknPres pres;
 NhuUE_Positioning_RprtngQuantity_r8 ue_positioning_RprtngQuantity;
 NhuMeasurementValidity measurementValidity;
 NhuUE_Positioning_ReportCriteria_r7 reportCriteria;
 NhuUE_Positioning_OTDOA_AssistanceData_r7 ue_positioning_OTDOA_AssistanceData;
 NhuUE_Positioning_GPS_AssistanceData_r10 ue_positioning_GPS_AssistanceData;
 NhuUE_Positioning_GANSS_AssistanceData_r10 ue_positioning_GANSS_AssistanceData;
} NhuUE_Positioning_Measurement_r10;

typedef struct NhuMeasurementTyp_r10
{
 TknU8 choice;
 union {
  NhuIntraFrequencyMeasurement_r10 intraFrequencyMeasurement;
  NhuInterFrequencyMeasurement_r10 interFrequencyMeasurement;
  NhuInterRATMeasurement_r9 interRATMeasurement;
  NhuUE_Positioning_Measurement_r10 up_Measurement;
  NhuTrafficVolumeMeasurement trafficVolumeMeasurement;
  NhuQualityMeasurement qualityMeasurement;
  NhuUE_InternalMeasurement_r4 ue_InternalMeasurement;
  NhuCSGProximityDetection csgProximityDetection;
 } val;
} NhuMeasurementTyp_r10;

typedef struct NhuMeasurementCmd_r10modify
{
 TknPres pres;
 NhuMeasurementTyp_r10 measurementTyp;
} NhuMeasurementCmd_r10modify;

typedef struct NhuMeasurementCmd_r10
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r10 setup;
  NhuMeasurementCmd_r10modify modify;
 } val;
} NhuMeasurementCmd_r10;

typedef struct NhuTrafficVolumeReportCriteriaSysInfo
{
 TknU8 choice;
 union {
  NhuTrafficVolumeRprtngCriteria trafficVolumeRprtngCriteria;
  NhuPeriodicalRprtngCriteria periodicalRprtngCriteria;
 } val;
} NhuTrafficVolumeReportCriteriaSysInfo;

typedef struct NhuTrafficVolumeMeasSysInfo
{
 TknPres pres;
 NhuMeasurementIdentity trafficVolumeMeasurementID;
 NhuTrafficVolumeMeasurementObjectLst trafficVolumeMeasurementObjectLst;
 NhuTrafficVolumeMeasQuantity trafficVolumeMeasQuantity;
 NhuTrafficVolumeRprtngQuantity trafficVolumeRprtngQuantity;
 NhuTrafficVolumeRprtngCriteria dummy;
 NhuMeasurementValidity measurementValidity;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuTrafficVolumeReportCriteriaSysInfo reportCriteriaSysInf;
} NhuTrafficVolumeMeasSysInfo;

typedef struct NhuUE_InternalMeasurementSysInfo
{
 TknPres pres;
 NhuMeasurementIdentity ue_InternalMeasurementID;
 NhuUE_InternalMeasQuantity ue_InternalMeasQuantity;
} NhuUE_InternalMeasurementSysInfo;

typedef struct NhuMeasurementCntrlSysInfouse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP
{
 TknPres pres;
 NhuIntraFreqMeasurementSysInfo_RSCP intraFreqMeasurementSysInfo;
 NhuInterFreqMeasurementSysInfo_RSCP interFreqMeasurementSysInfo;
} NhuMeasurementCntrlSysInfouse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP;

typedef struct NhuMeasurementCntrlSysInfouse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0
{
 TknPres pres;
 NhuIntraFreqMeasurementSysInfo_ECN0 intraFreqMeasurementSysInfo;
 NhuInterFreqMeasurementSysInfo_ECN0 interFreqMeasurementSysInfo;
} NhuMeasurementCntrlSysInfouse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0;

typedef struct NhuMeasurementCntrlSysInfouse_of_HCShcs_not_usedcellSelectQualityMeasure
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfouse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP cpich_RSCP;
  NhuMeasurementCntrlSysInfouse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0 cpich_Ec_N0;
 } val;
} NhuMeasurementCntrlSysInfouse_of_HCShcs_not_usedcellSelectQualityMeasure;

typedef struct NhuMeasurementCntrlSysInfouse_of_HCShcs_not_used
{
 TknPres pres;
 NhuMeasurementCntrlSysInfouse_of_HCShcs_not_usedcellSelectQualityMeasure cellSelectQualityMeasure;
 NhuInterRATMeasurementSysInfo_B interRATMeasurementSysInfo;
} NhuMeasurementCntrlSysInfouse_of_HCShcs_not_used;

typedef struct NhuMeasurementCntrlSysInfouse_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP
{
 TknPres pres;
 NhuIntraFreqMeasurementSysInfo_HCS_RSCP intraFreqMeasurementSysInfo;
 NhuInterFreqMeasurementSysInfo_HCS_RSCP interFreqMeasurementSysInfo;
} NhuMeasurementCntrlSysInfouse_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP;

typedef struct NhuMeasurementCntrlSysInfouse_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0
{
 TknPres pres;
 NhuIntraFreqMeasurementSysInfo_HCS_ECN0 intraFreqMeasurementSysInfo;
 NhuInterFreqMeasurementSysInfo_HCS_ECN0 interFreqMeasurementSysInfo;
} NhuMeasurementCntrlSysInfouse_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0;

typedef struct NhuMeasurementCntrlSysInfouse_of_HCShcs_usedcellSelectQualityMeasure
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfouse_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP cpich_RSCP;
  NhuMeasurementCntrlSysInfouse_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0 cpich_Ec_N0;
 } val;
} NhuMeasurementCntrlSysInfouse_of_HCShcs_usedcellSelectQualityMeasure;

typedef struct NhuMeasurementCntrlSysInfouse_of_HCShcs_used
{
 TknPres pres;
 NhuMeasurementCntrlSysInfouse_of_HCShcs_usedcellSelectQualityMeasure cellSelectQualityMeasure;
 NhuInterRATMeasurementSysInfo interRATMeasurementSysInfo;
} NhuMeasurementCntrlSysInfouse_of_HCShcs_used;

typedef struct NhuMeasurementCntrlSysInfouse_of_HCS
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfouse_of_HCShcs_not_used hcs_not_used;
  NhuMeasurementCntrlSysInfouse_of_HCShcs_used hcs_used;
 } val;
} NhuMeasurementCntrlSysInfouse_of_HCS;

typedef struct NhuMeasurementCntrlSysInfo
{
 TknPres pres;
 NhuMeasurementCntrlSysInfouse_of_HCS use_of_HCS;
 NhuTrafficVolumeMeasSysInfo trafficVolumeMeasSysInfo;
 NhuUE_InternalMeasurementSysInfo dummy;
} NhuMeasurementCntrlSysInfo;

typedef struct NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP
{
 TknPres pres;
 NhuNewIntraFreqCellSI_Lst_RSCP newIntraFreqCellLst;
 NhuNewInterFreqCellSI_Lst_RSCP newInterFreqCellLst;
} NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP;

typedef struct NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0
{
 TknPres pres;
 NhuNewIntraFreqCellSI_Lst_ECN0 newIntraFreqCellLst;
 NhuNewInterFreqCellSI_Lst_ECN0 newInterFreqCellLst;
} NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0;

typedef struct NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_usedcellSelectQualityMeasure
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP cpich_RSCP;
  NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0 cpich_Ec_N0;
 } val;
} NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_usedcellSelectQualityMeasure;

typedef struct NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_used
{
 TknPres pres;
 NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_usedcellSelectQualityMeasure cellSelectQualityMeasure;
 NhuNewInterRATCellLst newInterRATCellLst;
} NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_used;

typedef struct NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP
{
 TknPres pres;
 NhuNewIntraFreqCellSI_Lst_HCS_RSCP newIntraFreqCellLst;
 NhuNewInterFreqCellSI_Lst_HCS_RSCP newInterFreqCellLst;
} NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP;

typedef struct NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0
{
 TknPres pres;
 NhuNewIntraFreqCellSI_Lst_HCS_ECN0 newIntraFreqCellLst;
 NhuNewInterFreqCellSI_Lst_HCS_ECN0 newInterFreqCellLst;
} NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0;

typedef struct NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_usedcellSelectQualityMeasure
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP cpich_RSCP;
  NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0 cpich_Ec_N0;
 } val;
} NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_usedcellSelectQualityMeasure;

typedef struct NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_used
{
 TknPres pres;
 NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_usedcellSelectQualityMeasure cellSelectQualityMeasure;
 NhuNewInterRATCellLst newInterRATCellLst;
} NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_used;

typedef struct NhuMeasurementCntrlSysInfoExtnuse_of_HCS
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_not_used hcs_not_used;
  NhuMeasurementCntrlSysInfoExtnuse_of_HCShcs_used hcs_used;
 } val;
} NhuMeasurementCntrlSysInfoExtnuse_of_HCS;

typedef struct NhuMeasurementCntrlSysInfoExtn
{
 TknPres pres;
 NhuMeasurementCntrlSysInfoExtnuse_of_HCS use_of_HCS;
} NhuMeasurementCntrlSysInfoExtn;

typedef struct NhuMeasurementCntrlSysInfoExtnAddon_r5newIntraFrequencyCellInfoLstAddon_r5
{
 TknU16 noComp;
 NhuCellSelectReselectInfo_v590ext *member;
}NhuMeasurementCntrlSysInfoExtnAddon_r5newIntraFrequencyCellInfoLstAddon_r5;

typedef struct NhuMeasurementCntrlSysInfoExtnAddon_r5newInterFrequencyCellInfoLstAddon_r5
{
 TknU16 noComp;
 NhuCellSelectReselectInfo_v590ext *member;
}NhuMeasurementCntrlSysInfoExtnAddon_r5newInterFrequencyCellInfoLstAddon_r5;

typedef struct NhuMeasurementCntrlSysInfoExtnAddon_r5newInterRATCellInfoLstAddon_r5
{
 TknU16 noComp;
 NhuCellSelectReselectInfo_v590ext *member;
}NhuMeasurementCntrlSysInfoExtnAddon_r5newInterRATCellInfoLstAddon_r5;

typedef struct NhuMeasurementCntrlSysInfoExtnAddon_r5
{
 TknPres pres;
 NhuMeasurementCntrlSysInfoExtnAddon_r5newIntraFrequencyCellInfoLstAddon_r5 newIntraFrequencyCellInfoLstAddon_r5;
 NhuMeasurementCntrlSysInfoExtnAddon_r5newInterFrequencyCellInfoLstAddon_r5 newInterFrequencyCellInfoLstAddon_r5;
 NhuMeasurementCntrlSysInfoExtnAddon_r5newInterRATCellInfoLstAddon_r5 newInterRATCellInfoLstAddon_r5;
} NhuMeasurementCntrlSysInfoExtnAddon_r5;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP
{
 TknPres pres;
 NhuNewIntraFreqCellSI_Lst_RSCP_LCR_r4 newIntraFreqCellLst;
 NhuNewInterFreqCellSI_Lst_RSCP_LCR_r4 newInterFreqCellLst;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0
{
 TknPres pres;
 NhuNewIntraFreqCellSI_Lst_ECN0_LCR_r4 newIntraFreqCellLst;
 NhuNewInterFreqCellSI_Lst_ECN0_LCR_r4 newInterFreqCellLst;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_usedcellSelectQualityMeasure
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP cpich_RSCP;
  NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0 cpich_Ec_N0;
 } val;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_usedcellSelectQualityMeasure;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_used
{
 TknPres pres;
 NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_usedcellSelectQualityMeasure cellSelectQualityMeasure;
 NhuNewInterRATCellLst newInterRATCellLst;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_used;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP
{
 TknPres pres;
 NhuNewIntraFreqCellSI_Lst_HCS_RSCP_LCR_r4 newIntraFreqCellLst;
 NhuNewInterFreqCellSI_Lst_HCS_RSCP_LCR_r4 newInterFreqCellLst;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0
{
 TknPres pres;
 NhuNewIntraFreqCellSI_Lst_HCS_ECN0_LCR_r4 newIntraFreqCellLst;
 NhuNewInterFreqCellSI_Lst_HCS_ECN0_LCR_r4 newInterFreqCellLst;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_usedcellSelectQualityMeasure
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP cpich_RSCP;
  NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0 cpich_Ec_N0;
 } val;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_usedcellSelectQualityMeasure;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_used
{
 TknPres pres;
 NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_usedcellSelectQualityMeasure cellSelectQualityMeasure;
 NhuNewInterRATCellLst newInterRATCellLst;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_used;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCS
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_not_used hcs_not_used;
  NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCShcs_used hcs_used;
 } val;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCS;

typedef struct NhuMeasurementCntrlSysInfoExtn_LCR_r4
{
 TknPres pres;
 NhuMeasurementCntrlSysInfoExtn_LCR_r4use_of_HCS use_of_HCS;
} NhuMeasurementCntrlSysInfoExtn_LCR_r4;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP
{
 TknPres pres;
 NhuIntraFreqMeasurementSysInfo_RSCP_LCR_r4 intraFreqMeasurementSysInfo;
 NhuInterFreqMeasurementSysInfo_RSCP_LCR_r4 interFreqMeasurementSysInfo;
} NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0
{
 TknPres pres;
 NhuIntraFreqMeasurementSysInfo_ECN0_LCR_r4 intraFreqMeasurementSysInfo;
 NhuInterFreqMeasurementSysInfo_ECN0_LCR_r4 interFreqMeasurementSysInfo;
} NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_usedcellSelectQualityMeasure
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_RSCP cpich_RSCP;
  NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_usedcellSelectQualityMeasurecpich_Ec_N0 cpich_Ec_N0;
 } val;
} NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_usedcellSelectQualityMeasure;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_used
{
 TknPres pres;
 NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_usedcellSelectQualityMeasure cellSelectQualityMeasure;
} NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_used;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP
{
 TknPres pres;
 NhuIntraFreqMeasurementSysInfo_HCS_RSCP_LCR_r4 intraFreqMeasurementSysInfo;
 NhuInterFreqMeasurementSysInfo_HCS_RSCP_LCR_r4 interFreqMeasurementSysInfo;
} NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0
{
 TknPres pres;
 NhuIntraFreqMeasurementSysInfo_HCS_ECN0_LCR_r4 intraFreqMeasurementSysInfo;
 NhuInterFreqMeasurementSysInfo_HCS_ECN0_LCR_r4 interFreqMeasurementSysInfo;
} NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_usedcellSelectQualityMeasure
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_usedcellSelectQualityMeasurecpich_RSCP cpich_RSCP;
  NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_usedcellSelectQualityMeasurecpich_Ec_N0 cpich_Ec_N0;
 } val;
} NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_usedcellSelectQualityMeasure;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_used
{
 TknPres pres;
 NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_usedcellSelectQualityMeasure cellSelectQualityMeasure;
} NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_used;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCS
{
 TknU8 choice;
 union {
  NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_not_used hcs_not_used;
  NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCShcs_used hcs_used;
 } val;
} NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCS;

typedef struct NhuMeasurementCntrlSysInfo_LCR_r4_ext
{
 TknPres pres;
 NhuMeasurementCntrlSysInfo_LCR_r4_extuse_of_HCS use_of_HCS;
} NhuMeasurementCntrlSysInfo_LCR_r4_ext;


typedef TknU32 NhuMeasurementIdentityExt;

typedef struct NhuNeighbour_TDD_r7
{
 TknPres pres;
 NhuUARFCN uarfcn;
} NhuNeighbour_TDD_r7;

typedef struct NhuNeighbourLst_TDD_r7
{
 TknU16 noComp;
 NhuNeighbour_TDD_r7 *member;
}NhuNeighbourLst_TDD_r7;


typedef TknU8 NhuNewInterFreqCell_v7b0extintraSecondaryFreqIndicator;

typedef struct NhuNewInterFreqCell_v7b0ext
{
 TknPres pres;
 NhuNewInterFreqCell_v7b0extintraSecondaryFreqIndicator intraSecondaryFreqIndicator;
} NhuNewInterFreqCell_v7b0ext;

typedef struct NhuNewInterFreqCell_LCR_v8a0ext
{
 TknPres pres;
 NhuCellInfo_LCR_r8_ext cellInfo_LCR_r8;
} NhuNewInterFreqCell_LCR_v8a0ext;

typedef struct NhuNewInterFreqCellLst_v7b0ext
{
 TknU16 noComp;
 NhuNewInterFreqCell_v7b0ext *member;
}NhuNewInterFreqCellLst_v7b0ext;

typedef struct NhuNewInterFreqCellLst_LCR_v8a0ext
{
 TknU16 noComp;
 NhuNewInterFreqCell_LCR_v8a0ext *member;
}NhuNewInterFreqCellLst_LCR_v8a0ext;

typedef struct NhuNewIntraFreqCell_LCR_v8a0ext
{
 TknPres pres;
 NhuCellInfo_LCR_r8_ext cellInfo_LCR_r8;
} NhuNewIntraFreqCell_LCR_v8a0ext;

typedef struct NhuNewIntraFreqCellLst_LCR_v8a0ext
{
 TknU16 noComp;
 NhuNewIntraFreqCell_LCR_v8a0ext *member;
}NhuNewIntraFreqCellLst_LCR_v8a0ext;

typedef struct NhuPLMNsOfIntraFreqCellsLstMember
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
} NhuPLMNsOfIntraFreqCellsLstMember;

typedef struct NhuPLMNsOfIntraFreqCellsLst
{
 TknU16 noComp;
 NhuPLMNsOfIntraFreqCellsLstMember *member;
}NhuPLMNsOfIntraFreqCellsLst;

typedef struct NhuPLMNsOfInterFreqCellsLstMember
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
} NhuPLMNsOfInterFreqCellsLstMember;

typedef struct NhuPLMNsOfInterFreqCellsLst
{
 TknU16 noComp;
 NhuPLMNsOfInterFreqCellsLstMember *member;
}NhuPLMNsOfInterFreqCellsLst;

typedef struct NhuPLMNsOfInterRATCellsLstMember
{
 TknPres pres;
 NhuPLMN_Identity plmn_Identity;
} NhuPLMNsOfInterRATCellsLstMember;

typedef struct NhuPLMNsOfInterRATCellsLst
{
 TknU16 noComp;
 NhuPLMNsOfInterRATCellsLstMember *member;
}NhuPLMNsOfInterRATCellsLst;

typedef struct NhuPLMNIdentitiesOfNeighbourCells
{
 TknPres pres;
 NhuPLMNsOfIntraFreqCellsLst plmnsOfIntraFreqCellsLst;
 NhuPLMNsOfInterFreqCellsLst plmnsOfInterFreqCellsLst;
 NhuPLMNsOfInterRATCellsLst plmnsOfInterRATCellsLst;
} NhuPLMNIdentitiesOfNeighbourCells;

typedef struct NhuMultiplePLMNsOfIntraFreqCellsLstMembermultiplePLMN_list
{
 TknU16 noComp;
 NhuPLMN_IdentityWithOptionalMCC_r6 *member;
}NhuMultiplePLMNsOfIntraFreqCellsLstMembermultiplePLMN_list;

typedef struct NhuMultiplePLMNsOfIntraFreqCellsLstMember
{
 TknPres pres;
 NhuMultiplePLMNsOfIntraFreqCellsLstMembermultiplePLMN_list multiplePLMN_list;
} NhuMultiplePLMNsOfIntraFreqCellsLstMember;

typedef struct NhuMultiplePLMNsOfIntraFreqCellsLst
{
 TknU16 noComp;
 NhuMultiplePLMNsOfIntraFreqCellsLstMember *member;
}NhuMultiplePLMNsOfIntraFreqCellsLst;

typedef struct NhuMultiplePLMNsOfInterFreqCellsLstMembermultiplePLMN_list
{
 TknU16 noComp;
 NhuPLMN_IdentityWithOptionalMCC_r6 *member;
}NhuMultiplePLMNsOfInterFreqCellsLstMembermultiplePLMN_list;

typedef struct NhuMultiplePLMNsOfInterFreqCellsLstMember
{
 TknPres pres;
 NhuMultiplePLMNsOfInterFreqCellsLstMembermultiplePLMN_list multiplePLMN_list;
} NhuMultiplePLMNsOfInterFreqCellsLstMember;

typedef struct NhuMultiplePLMNsOfInterFreqCellsLst
{
 TknU16 noComp;
 NhuMultiplePLMNsOfInterFreqCellsLstMember *member;
}NhuMultiplePLMNsOfInterFreqCellsLst;

typedef struct NhuPLMNIdentitiesOfNeighbourCells_v860ext
{
 TknPres pres;
 NhuMultiplePLMNsOfIntraFreqCellsLst multipleplmnsOfIntraFreqCellsLst;
 NhuMultiplePLMNsOfInterFreqCellsLst multipleplmnsOfInterFreqCellsLst;
} NhuPLMNIdentitiesOfNeighbourCells_v860ext;


typedef TknU32 NhuQ_QualMin_Offset;


typedef TknU32 NhuQ_RxlevMin_Offset;

typedef struct NhuTimeslotWithISCP
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
 NhuTimeslotISCP timeslotISCP;
} NhuTimeslotWithISCP;

typedef struct NhuTimeslotLstWithISCP
{
 TknU16 noComp;
 NhuTimeslotWithISCP *member;
}NhuTimeslotLstWithISCP;


typedef TknStrBSXL NhuUE_Positioning_CipherParamscipheringKeyFlag;

typedef TknU32 NhuUE_Positioning_CipherParamscipheringSerialNumber;

typedef struct NhuUE_Positioning_CipherParams
{
 TknPres pres;
 NhuUE_Positioning_CipherParamscipheringKeyFlag cipheringKeyFlag;
 NhuUE_Positioning_CipherParamscipheringSerialNumber cipheringSerialNumber;
} NhuUE_Positioning_CipherParams;

typedef struct NhuUE_Positioning_GANSS_AssistanceData_v860ext
{
 TknPres pres;
 NhuUE_Positioning_GANSS_AddIonoModel uePositioningGanssAddIonoModel;
 NhuUE_Positioning_GANSS_EarthOrientPara uePositioningGanssEarthOrientationPara;
 NhuGANSSGenericDataLst_v860ext ganssGenericDataLst;
} NhuUE_Positioning_GANSS_AssistanceData_v860ext;

typedef struct NhuUE_Positioning_GANSS_AssistanceData_v920ext
{
 TknPres pres;
 NhuGANSSGenericDataLst_v920ext ganssGenericDataLst;
} NhuUE_Positioning_GANSS_AssistanceData_v920ext;


typedef TknU32 NhuUE_Positioning_GANSS_ReferenceTime_va40extganss_Day_Cycle_Number;

typedef struct NhuUE_Positioning_GANSS_ReferenceTime_va40ext
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTime_va40extganss_Day_Cycle_Number ganss_Day_Cycle_Number;
} NhuUE_Positioning_GANSS_ReferenceTime_va40ext;

typedef struct NhuUE_Positioning_GANSS_AssistanceData_va40ext
{
 TknPres pres;
 NhuUE_Positioning_GANSS_ReferenceTime_va40ext ue_positioning_GANSS_ReferenceTime;
 NhuGANSSGenericDataLst_va40ext ganssGenericDataLst;
} NhuUE_Positioning_GANSS_AssistanceData_va40ext;

typedef struct NhuUE_Positioning_GANSS_Data
{
 TknPres pres;
 NhuUE_Positioning_CipherParams ganssDataCipheringInfo;
 NhuGANSSDecipheringKeys ganssDecipheringKeys;
 NhuUE_Positioning_GANSS_ReferenceTime uePositioningGanssReferenceTime;
 NhuReferenceLocGANSS uePositioningGanssReferencePosition;
 NhuUE_Positioning_GANSS_IonosphericModel uePositioningGanssIonosphericModel;
 NhuGANSSGenericDataLst ganssGenericDataLst;
} NhuUE_Positioning_GANSS_Data;

typedef struct NhuUE_Positioning_GANSS_TimeModels
{
 TknU16 noComp;
 NhuUE_Positioning_GANSS_TimeModel *member;
}NhuUE_Positioning_GANSS_TimeModels;

typedef struct NhuUE_Positioning_GANSS_TimeModels_va40ext
{
 TknU16 noComp;
 NhuUE_Positioning_GANSS_TimeModel_va40ext *member;
}NhuUE_Positioning_GANSS_TimeModels_va40ext;

typedef struct NhuUE_Positioning_GPS_AcquisitionAssistance_v770ext
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTimeUncertainty ue_Positioning_GPS_ReferenceTimeUncertainty;
} NhuUE_Positioning_GPS_AcquisitionAssistance_v770ext;

typedef struct NhuUE_Positioning_GPS_AcquisitionAssistance_va40ext
{
 TknPres pres;
 NhuAcquisitionSatInfoLst_va40ext satelliteInfoLst;
} NhuUE_Positioning_GPS_AcquisitionAssistance_va40ext;


typedef TknU8 NhuUE_Positioning_GPS_Almanac_va40extcomplete_Almanac_Provided;

typedef struct NhuUE_Positioning_GPS_Almanac_va40ext
{
 TknPres pres;
 NhuUE_Positioning_GPS_Almanac_va40extcomplete_Almanac_Provided complete_Almanac_Provided;
} NhuUE_Positioning_GPS_Almanac_va40ext;

typedef struct NhuUE_Positioning_GPS_ReferenceTime_v770ext
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTimeUncertainty ue_Positioning_GPS_ReferenceTimeUncertainty;
} NhuUE_Positioning_GPS_ReferenceTime_v770ext;

typedef struct NhuUE_Positioning_GPS_AssistanceData_v770ext
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTime_v770ext ue_positioning_GPS_ReferenceTime;
 NhuUE_Positioning_GPS_AcquisitionAssistance_v770ext ue_positioning_GPS_AcquisitionAssistance;
} NhuUE_Positioning_GPS_AssistanceData_v770ext;

typedef struct NhuUE_Positioning_GPS_DGPS_Corrections_v920ext
{
 TknPres pres;
 NhuDGPS_CorrectionSatInfoLst_v920ext dgps_CorrectionSatInfoLst;
} NhuUE_Positioning_GPS_DGPS_Corrections_v920ext;

typedef struct NhuUE_Positioning_GPS_AssistanceData_v920ext
{
 TknPres pres;
 NhuUE_Positioning_GPS_DGPS_Corrections_v920ext ue_positioning_GPS_DGPS_Corrections;
} NhuUE_Positioning_GPS_AssistanceData_v920ext;


typedef TknU32 NhuUE_Positioning_GPS_ReferenceTime_va40extgps_Week_Cycle_Number;

typedef struct NhuUE_Positioning_GPS_ReferenceTime_va40ext
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTime_va40extgps_Week_Cycle_Number gps_Week_Cycle_Number;
} NhuUE_Positioning_GPS_ReferenceTime_va40ext;

typedef struct NhuUE_Positioning_GPS_AssistanceData_va40ext
{
 TknPres pres;
 NhuUE_Positioning_GPS_ReferenceTime_va40ext ue_positioning_GPS_ReferenceTime;
 NhuUE_Positioning_GPS_Almanac_va40ext ue_positioning_GPS_Almanac;
 NhuUE_Positioning_GPS_AcquisitionAssistance_va40ext ue_positioning_GPS_AcquisitionAssistance;
} NhuUE_Positioning_GPS_AssistanceData_va40ext;


typedef TknU32 NhuUE_Positioning_IPDL_Params_TDD_r4_extip_slot;


typedef TknU32 NhuUE_Positioning_IPDL_Params_TDD_r4_extip_Start;

typedef struct NhuUE_Positioning_IPDL_Params_TDD_r4_ext
{
 TknPres pres;
 NhuIP_Spacing_TDD ip_Spacing;
 NhuUE_Positioning_IPDL_Params_TDD_r4_extip_slot ip_slot;
 NhuUE_Positioning_IPDL_Params_TDD_r4_extip_Start ip_Start;
 NhuIP_PCCPCH_r4 ip_PCCPCG;
 NhuBurstModeParams burstModeParams;
} NhuUE_Positioning_IPDL_Params_TDD_r4_ext;

typedef struct NhuUE_Positioning_RprtngQuantity_v390ext
{
 TknPres pres;
 NhuUE_Positioning_Accuracy vertical_Accuracy;
} NhuUE_Positioning_RprtngQuantity_v390ext;


typedef TknU32 NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBsfn;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBmodeSpecificInfofdd;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBmodeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity cellAndChannelIdentity;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBmodeSpecificInfotdd;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBmodeSpecificInfofdd fdd;
  NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBmodeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBmodeSpecificInfo;


typedef TknU32 NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBroundTripTime;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEB
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBsfn sfn;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBmodeSpecificInfo modeSpecificInfo;
 NhuFrequencyInfo frequencyInfo;
 NhuReferenceCellPosition cellPosition;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEBroundTripTime roundTripTime;
 NhuUE_Positioning_IPDL_Params ue_positioning_IPDL_Paremeters;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEB;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBmodeSpecificInfofdd
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBmodeSpecificInfofdd;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBmodeSpecificInfotdd
{
 TknPres pres;
 NhuCellAndChannelIdentity cellAndChannelIdentity;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBmodeSpecificInfotdd;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBmodeSpecificInfofdd fdd;
  NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBmodeSpecificInfotdd tdd;
 } val;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBmodeSpecificInfo;


typedef TknS32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBrelativeNorth;


typedef TknS32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBrelativeEast;


typedef TknS32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBrelativeAltitude;


typedef TknU32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBroundTripTime;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEB
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBmodeSpecificInfo modeSpecificInfo;
 NhuFrequencyInfo frequencyInfo;
 NhuUE_Positioning_IPDL_Params ue_positioning_IPDL_Paremeters;
 NhuSFN_SFN_RelTimeDifference1 sfn_SFN_RelTimeDifference;
 NhuSFN_SFN_Drift sfn_SFN_Drift;
 NhuOTDOA_SearchWindowSize searchWindowSize;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBrelativeNorth relativeNorth;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBrelativeEast relativeEast;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBrelativeAltitude relativeAltitude;
 NhuFineSFN_SFN fineSFN_SFN;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEBroundTripTime roundTripTime;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEB;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellLst_UEB
{
 TknU16 noComp;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEB *member;
}NhuUE_Positioning_OTDOA_NeighbourCellLst_UEB;

typedef struct NhuUE_Positioning_OTDOA_AssistanceData_UEB
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEB ue_positioning_OTDOA_ReferenceCellInfo_UEB;
 NhuUE_Positioning_OTDOA_NeighbourCellLst_UEB ue_positioning_OTDOA_NeighbourCellLst_UEB;
} NhuUE_Positioning_OTDOA_AssistanceData_UEB;

typedef struct NhuUE_Positioning_Measurement_v390ext
{
 TknPres pres;
 NhuUE_Positioning_RprtngQuantity_v390ext ue_positioning_RprtngQuantity_v390ext;
 NhuMeasurementValidity measurementValidity;
 NhuUE_Positioning_OTDOA_AssistanceData_UEB ue_positioning_OTDOA_AssistanceData_UEB;
} NhuUE_Positioning_Measurement_v390ext;

typedef struct NhuUE_Positioning_IPDL_Params_TDDLst_r4_ext
{
 TknU16 noComp;
 NhuUE_Positioning_IPDL_Params_TDD_r4_ext *member;
}NhuUE_Positioning_IPDL_Params_TDDLst_r4_ext;

typedef struct NhuUE_Positioning_OTDOA_AssistanceData_r4ext
{
 TknPres pres;
 NhuUE_Positioning_IPDL_Params_TDD_r4_ext ue_Positioning_IPDL_Params_TDD_r4_ext;
 NhuUE_Positioning_IPDL_Params_TDDLst_r4_ext ue_Positioning_IPDL_Params_TDDLst_r4_ext;
} NhuUE_Positioning_OTDOA_AssistanceData_r4ext;


typedef TknU32 NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEB_extroundTripTimeExtn;

typedef struct NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEB_ext
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEB_extroundTripTimeExtn roundTripTimeExtn;
} NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEB_ext;


typedef TknU32 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEB_extroundTripTimeExtn;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEB_ext
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEB_extroundTripTimeExtn roundTripTimeExtn;
} NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEB_ext;

typedef struct NhuUE_Positioning_OTDOA_NeighbourCellLst_UEB_ext
{
 TknU16 noComp;
 NhuUE_Positioning_OTDOA_NeighbourCellInfo_UEB_ext *member;
}NhuUE_Positioning_OTDOA_NeighbourCellLst_UEB_ext;

typedef struct NhuUE_Positioning_OTDOA_AssistanceData_UEB_ext
{
 TknPres pres;
 NhuUE_Positioning_OTDOA_ReferenceCellInfo_UEB_ext ue_positioning_OTDOA_ReferenceCellInfo_UEB_ext;
 NhuUE_Positioning_OTDOA_NeighbourCellLst_UEB_ext ue_positioning_OTDOA_NeighbourCellLst_UEB_ext;
} NhuUE_Positioning_OTDOA_AssistanceData_UEB_ext;

typedef struct NhuUE_Positioning_OTDOA_MeasuredResultsTDD_ext
{
 TknPres pres;
 NhuNeighbourLst_TDD_r7 neighbourLst;
} NhuUE_Positioning_OTDOA_MeasuredResultsTDD_ext;


typedef TknU32 NhuUTRAN_FDD_Frequencypriority;


typedef TknU32 NhuUTRAN_FDD_FrequencythreshXhigh;


typedef TknU32 NhuUTRAN_FDD_FrequencythreshXlow;


typedef TknS32 NhuUTRAN_FDD_FrequencyqQualMinFDD;


typedef TknS32 NhuUTRAN_FDD_FrequencyqRxLevMinFDD;

typedef struct NhuUTRAN_FDD_Frequency
{
 TknPres pres;
 NhuUARFCN uarfcn;
 NhuUTRAN_FDD_Frequencypriority priority;
 NhuUTRAN_FDD_FrequencythreshXhigh threshXhigh;
 NhuUTRAN_FDD_FrequencythreshXlow threshXlow;
 NhuUTRAN_FDD_FrequencyqQualMinFDD qQualMinFDD;
 NhuUTRAN_FDD_FrequencyqRxLevMinFDD qRxLevMinFDD;
} NhuUTRAN_FDD_Frequency;

typedef struct NhuUTRAN_FDD_FrequencyLst
{
 TknU16 noComp;
 NhuUTRAN_FDD_Frequency *member;
}NhuUTRAN_FDD_FrequencyLst;


typedef TknU32 NhuUTRAN_TDD_Frequencypriority;


typedef TknU32 NhuUTRAN_TDD_FrequencythreshXhigh;


typedef TknU32 NhuUTRAN_TDD_FrequencythreshXlow;


typedef TknS32 NhuUTRAN_TDD_FrequencyqRxLevMinTDD;

typedef struct NhuUTRAN_TDD_Frequency
{
 TknPres pres;
 NhuUARFCN uarfcn;
 NhuUTRAN_TDD_Frequencypriority priority;
 NhuUTRAN_TDD_FrequencythreshXhigh threshXhigh;
 NhuUTRAN_TDD_FrequencythreshXlow threshXlow;
 NhuUTRAN_TDD_FrequencyqRxLevMinTDD qRxLevMinTDD;
} NhuUTRAN_TDD_Frequency;

typedef struct NhuUTRAN_TDD_FrequencyLst
{
 TknU16 noComp;
 NhuUTRAN_TDD_Frequency *member;
}NhuUTRAN_TDD_FrequencyLst;


typedef TknU32 NhuUTRA_PriorityInfoLstutra_ServingCellpriority;


typedef TknU32 NhuUTRA_PriorityInfoLstutra_ServingCells_PrioritySearch1;


typedef TknU32 NhuUTRA_PriorityInfoLstutra_ServingCells_PrioritySearch2;


typedef TknU32 NhuUTRA_PriorityInfoLstutra_ServingCellthreshServingLow;

typedef struct NhuUTRA_PriorityInfoLstutra_ServingCell
{
 TknPres pres;
 NhuUTRA_PriorityInfoLstutra_ServingCellpriority priority;
 NhuUTRA_PriorityInfoLstutra_ServingCells_PrioritySearch1 s_PrioritySearch1;
 NhuUTRA_PriorityInfoLstutra_ServingCells_PrioritySearch2 s_PrioritySearch2;
 NhuUTRA_PriorityInfoLstutra_ServingCellthreshServingLow threshServingLow;
} NhuUTRA_PriorityInfoLstutra_ServingCell;

typedef struct NhuUTRA_PriorityInfoLst
{
 TknPres pres;
 NhuUTRA_PriorityInfoLstutra_ServingCell utra_ServingCell;
 NhuUTRAN_FDD_FrequencyLst utran_FDD_FrequencyLst;
 NhuUTRAN_TDD_FrequencyLst utran_TDD_FrequencyLst;
} NhuUTRA_PriorityInfoLst;


typedef TknU32 NhuUTRA_PriorityInfoLst_v920extthreshServingLow2;

typedef struct NhuUTRA_PriorityInfoLst_v920ext
{
 TknPres pres;
 NhuUTRA_PriorityInfoLst_v920extthreshServingLow2 threshServingLow2;
} NhuUTRA_PriorityInfoLst_v920ext;


typedef TknU32 NhuMIB_ValueTag;


typedef TknU32 NhuBCCH_ModfnTime;

typedef struct NhuBCCH_ModfnInfo
{
 TknPres pres;
 NhuMIB_ValueTag mib_ValueTag;
 NhuBCCH_ModfnTime bcch_ModfnTime;
} NhuBCCH_ModfnInfo;


typedef TknU32 NhuCBS_DRX_Lvl1Infoctch_AllocnPeriod;


typedef TknU32 NhuCBS_DRX_Lvl1Infocbs_FrameOffset;

typedef struct NhuCBS_DRX_Lvl1Info
{
 TknPres pres;
 NhuCBS_DRX_Lvl1Infoctch_AllocnPeriod ctch_AllocnPeriod;
 NhuCBS_DRX_Lvl1Infocbs_FrameOffset cbs_FrameOffset;
} NhuCBS_DRX_Lvl1Info;


typedef enum enumNhuCBS_DRX_Lvl1Info_extension_r6
{
 NhuCBS_DRX_Lvl1Info_extension_r6p8Enum,
 NhuCBS_DRX_Lvl1Info_extension_r6p16Enum,
 NhuCBS_DRX_Lvl1Info_extension_r6p32Enum,
 NhuCBS_DRX_Lvl1Info_extension_r6p64Enum,
 NhuCBS_DRX_Lvl1Info_extension_r6p128Enum,
 NhuCBS_DRX_Lvl1Info_extension_r6p256Enum
} EnumNhuCBS_DRX_Lvl1Info_extension_r6;
typedef TknU32 NhuCBS_DRX_Lvl1Info_extension_r6;


typedef TknStrBSXL NhuCDMA2000_Msgmsg_Typ;

typedef TknStrBSXL NhuCDMA2000_Msgpayload;
typedef struct NhuCDMA2000_Msg
{
 TknPres pres;
 NhuCDMA2000_Msgmsg_Typ msg_Typ;
 NhuCDMA2000_Msgpayload payload;
} NhuCDMA2000_Msg;

typedef struct NhuCDMA2000_MsgLst
{
 TknU16 noComp;
 NhuCDMA2000_Msg *member;
}NhuCDMA2000_MsgLst;


typedef TknStrBSXL NhuFrequencyInfoCDMA2000band_Class;

typedef TknStrBSXL NhuFrequencyInfoCDMA2000cdma_Freq;
typedef struct NhuFrequencyInfoCDMA2000
{
 TknPres pres;
 NhuFrequencyInfoCDMA2000band_Class band_Class;
 NhuFrequencyInfoCDMA2000cdma_Freq cdma_Freq;
} NhuFrequencyInfoCDMA2000;

typedef struct NhuCDMA2000_UMTS_Frequency_Lst
{
 TknU16 noComp;
 NhuFrequencyInfoCDMA2000 *member;
}NhuCDMA2000_UMTS_Frequency_Lst;


typedef TknU32 NhuCellValueTag;


typedef enum enumNhuDataTransmFrequencydataTransmFreqGranularity
{
 NhuDataTransmFrequencydataTransmFreqGranularityms100Enum,
 NhuDataTransmFrequencydataTransmFreqGranularityms250Enum,
 NhuDataTransmFrequencydataTransmFreqGranularityms500Enum,
 NhuDataTransmFrequencydataTransmFreqGranularityms1000Enum,
 NhuDataTransmFrequencydataTransmFreqGranularityms2000Enum,
 NhuDataTransmFrequencydataTransmFreqGranularityms5000Enum,
 NhuDataTransmFrequencydataTransmFreqGranularityms10000Enum,
 NhuDataTransmFrequencydataTransmFreqGranularityms60000Enum
} EnumNhuDataTransmFrequencydataTransmFreqGranularity;
typedef TknU32 NhuDataTransmFrequencydataTransmFreqGranularity;


typedef TknU32 NhuDataTransmFrequencynumberOfDataTransmOcc;

typedef struct NhuDataTransmFrequency
{
 TknPres pres;
 NhuDataTransmFrequencydataTransmFreqGranularity dataTransmFreqGranularity;
 NhuDataTransmFrequencynumberOfDataTransmOcc numberOfDataTransmOcc;
} NhuDataTransmFrequency;


typedef TknU32 NhuDataVolumePerRBdataVolume;

typedef struct NhuDataVolumePerRB
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuDataVolumePerRBdataVolume dataVolume;
} NhuDataVolumePerRB;

typedef struct NhuDataVolumePerRB_Lst
{
 TknU16 noComp;
 NhuDataVolumePerRB *member;
}NhuDataVolumePerRB_Lst;


typedef TknU32 NhuDataVolumeHistorydataVolumeMontoringWindow;

typedef struct NhuDataVolumeHistory
{
 TknPres pres;
 NhuDataVolumeHistorydataVolumeMontoringWindow dataVolumeMontoringWindow;
 NhuDataTransmFrequency dataTransmFrequency;
 NhuDataVolumePerRB_Lst dataVolumePerRB;
} NhuDataVolumeHistory;

typedef struct NhuDeferredMeasurementCntrlReadingSupportmodeSpecificInfofdd
{
 TknPres pres;
 NhuIntraFreqMeasQuantity_FDD_sib3 intraFreqMeasQuantity_FDD;
} NhuDeferredMeasurementCntrlReadingSupportmodeSpecificInfofdd;

typedef struct NhuDeferredMeasurementCntrlReadingSupportmodeSpecificInfotdd
{
 TknPres pres;
 NhuIntraFreqMeasQuantity_TDD_sib3Lst intraFreqMeasQuantity_TDDLst;
} NhuDeferredMeasurementCntrlReadingSupportmodeSpecificInfotdd;

typedef struct NhuDeferredMeasurementCntrlReadingSupportmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuDeferredMeasurementCntrlReadingSupportmodeSpecificInfofdd fdd;
  NhuDeferredMeasurementCntrlReadingSupportmodeSpecificInfotdd tdd;
 } val;
} NhuDeferredMeasurementCntrlReadingSupportmodeSpecificInfo;

typedef struct NhuDeferredMeasurementCntrlReadingSupport
{
 TknPres pres;
 NhuDeferredMeasurementCntrlReadingSupportmodeSpecificInfo modeSpecificInfo;
} NhuDeferredMeasurementCntrlReadingSupport;


typedef TknStrOSXL NhuETWS_InfowarningTyp;

typedef TknStrOSXL NhuETWS_InfomessageId;

typedef TknStrOSXL NhuETWS_InfoserialNumber;
typedef struct NhuETWS_Info
{
 TknPres pres;
 NhuETWS_InfowarningTyp warningTyp;
 NhuETWS_InfomessageId messageId;
 NhuETWS_InfoserialNumber serialNumber;
} NhuETWS_Info;


typedef TknStrOSXL NhuETWS_WarningSecInfo;

typedef TknU32 NhuExpirationTimeFactor;

typedef struct NhuFDD_UMTS_Frequency_Lst
{
 TknU16 noComp;
 NhuFrequencyInfoFDD *member;
}NhuFDD_UMTS_Frequency_Lst;


typedef TknStrOSXL NhuGERAN_SysInfoBlock;
typedef struct NhuGERAN_SysInfo
{
 TknU16 noComp;
 NhuGERAN_SysInfoBlock *member;
}NhuGERAN_SysInfo;

typedef struct NhuGSM_BA_Range
{
 TknPres pres;
 NhuUARFCN gsmLowRangeUARFCN;
 NhuUARFCN gsmUpRangeUARFCN;
} NhuGSM_BA_Range;

typedef struct NhuGSM_BA_Range_Lst
{
 TknU16 noComp;
 NhuGSM_BA_Range *member;
}NhuGSM_BA_Range_Lst;


typedef TknStrOSXL NhuGSM_Classmark2;

typedef TknStrOSXL NhuGSM_Classmark3;

typedef TknStrBSXL NhuGSM_MsgLstMember;
typedef struct NhuGSM_MsgLst
{
 TknU16 noComp;
 NhuGSM_MsgLstMember *member;
}NhuGSM_MsgLst;


typedef TknStrBSXL NhuGsmSecCap;

typedef TknStrOSXL NhuHNBName;
typedef struct NhuInterRAT_ChangeFailCause
{
 TknU8 choice;
 union {
  NhuProtErrInfo protocolErr;
 } val;
} NhuInterRAT_ChangeFailCause;


typedef TknStrBSXL NhuGERANIu_MsgLstMember;
typedef struct NhuGERANIu_MsgLst
{
 TknU16 noComp;
 NhuGERANIu_MsgLstMember *member;
}NhuGERANIu_MsgLst;


typedef TknStrBSXL NhuGERANIu_RadioAccessCap;
typedef struct NhuInterRAT_UE_RadioAccessCapgsm
{
 TknPres pres;
 NhuGSM_Classmark2 gsm_Classmark2;
 NhuGSM_Classmark3 gsm_Classmark3;
} NhuInterRAT_UE_RadioAccessCapgsm;

typedef struct NhuInterRAT_UE_RadioAccessCapcdma2000
{
 TknPres pres;
 NhuCDMA2000_MsgLst cdma2000_MsgLst;
} NhuInterRAT_UE_RadioAccessCapcdma2000;

typedef struct NhuInterRAT_UE_RadioAccessCap
{
 TknU8 choice;
 union {
  NhuInterRAT_UE_RadioAccessCapgsm gsm;
  NhuInterRAT_UE_RadioAccessCapcdma2000 cdma2000;
 } val;
} NhuInterRAT_UE_RadioAccessCap;

typedef struct NhuInterRAT_UE_RadioAccessCapLst
{
 TknU16 noComp;
 NhuInterRAT_UE_RadioAccessCap *member;
}NhuInterRAT_UE_RadioAccessCapLst;

typedef struct NhuInterRAT_UE_RadioAccessCap_v590ext
{
 TknPres pres;
 NhuGERANIu_RadioAccessCap geranIu_RadioAccessCap;
} NhuInterRAT_UE_RadioAccessCap_v590ext;

typedef struct NhuInterRAT_UE_SecCapgsm
{
 TknPres pres;
 NhuGsmSecCap gsmSecCap;
} NhuInterRAT_UE_SecCapgsm;

typedef struct NhuInterRAT_UE_SecCap
{
 TknU8 choice;
 union {
  NhuInterRAT_UE_SecCapgsm gsm;
 } val;
} NhuInterRAT_UE_SecCap;

typedef struct NhuInterRAT_UE_SecCapLst
{
 TknU16 noComp;
 NhuInterRAT_UE_SecCap *member;
}NhuInterRAT_UE_SecCapLst;

typedef struct NhuInterRAT_HO_FailCause
{
 TknU8 choice;
 union {
  NhuProtErrInfo protocolErr;
 } val;
} NhuInterRAT_HO_FailCause;


typedef TknU32 NhuPLMN_ValueTag;

typedef struct NhuPredefinedConfigIdentityAndValueTag
{
 TknPres pres;
 NhuPredefinedConfigIdentity predefinedConfigIdentity;
 NhuPredefinedConfigValueTag predefinedConfigValueTag;
} NhuPredefinedConfigIdentityAndValueTag;

typedef struct NhuTDD_UMTS_Frequency_Lst
{
 TknU16 noComp;
 NhuFrequencyInfoTDD *member;
}NhuTDD_UMTS_Frequency_Lst;

typedef struct NhuRplmn_Info
{
 TknPres pres;
 NhuGSM_BA_Range_Lst gsm_BA_Range_Lst;
 NhuFDD_UMTS_Frequency_Lst fdd_UMTS_Frequency_Lst;
 NhuTDD_UMTS_Frequency_Lst tdd_UMTS_Frequency_Lst;
 NhuCDMA2000_UMTS_Frequency_Lst cdma2000_UMTS_Frequency_Lst;
} NhuRplmn_Info;

typedef struct NhuRplmn_Info_r4
{
 TknPres pres;
 NhuGSM_BA_Range_Lst gsm_BA_Range_Lst;
 NhuFDD_UMTS_Frequency_Lst fdd_UMTS_Frequency_Lst;
 NhuTDD_UMTS_Frequency_Lst tdd384_UMTS_Frequency_Lst;
 NhuTDD_UMTS_Frequency_Lst tdd128_UMTS_Frequency_Lst;
 NhuCDMA2000_UMTS_Frequency_Lst cdma2000_UMTS_Frequency_Lst;
} NhuRplmn_Info_r4;


typedef TknU32 NhuSegCount;


typedef TknU32 NhuSegmentIdx;


typedef TknU32 NhuUE_HistoryInfoue_InactivityPeriod;

typedef struct NhuUE_HistoryInfo
{
 TknPres pres;
 NhuUE_HistoryInfoue_InactivityPeriod ue_InactivityPeriod;
 NhuHigh_MobilityDetected ueMobilityStateIndicator;
 NhuDataVolumeHistory ul_dataVolumeHistory;
 NhuDataVolumeHistory dl_dataVolumeHistory;
} NhuUE_HistoryInfo;


typedef NhuANSI_41_NAS_Parameter NhuANSI_41_GlobalServiceRedirectInfo;

typedef NhuANSI_41_NAS_Parameter NhuANSI_41_PrivNeighbourLstInfo;

typedef NhuANSI_41_NAS_Parameter NhuANSI_41_RAND_Info;

typedef NhuANSI_41_NAS_Parameter NhuANSI_41_UserZoneID_Info;

typedef enum enumNhuMBMS_AccessProbabilityFactor
{
 NhuMBMS_AccessProbabilityFactorapf0Enum,
 NhuMBMS_AccessProbabilityFactorapf32Enum,
 NhuMBMS_AccessProbabilityFactorapf64Enum,
 NhuMBMS_AccessProbabilityFactorapf96Enum,
 NhuMBMS_AccessProbabilityFactorapf128Enum,
 NhuMBMS_AccessProbabilityFactorapf160Enum,
 NhuMBMS_AccessProbabilityFactorapf192Enum,
 NhuMBMS_AccessProbabilityFactorapf224Enum,
 NhuMBMS_AccessProbabilityFactorapf256Enum,
 NhuMBMS_AccessProbabilityFactorapf288Enum,
 NhuMBMS_AccessProbabilityFactorapf320Enum,
 NhuMBMS_AccessProbabilityFactorapf352Enum,
 NhuMBMS_AccessProbabilityFactorapf384Enum,
 NhuMBMS_AccessProbabilityFactorapf416Enum,
 NhuMBMS_AccessProbabilityFactorapf448Enum,
 NhuMBMS_AccessProbabilityFactorapf480Enum,
 NhuMBMS_AccessProbabilityFactorapf512Enum,
 NhuMBMS_AccessProbabilityFactorapf544Enum,
 NhuMBMS_AccessProbabilityFactorapf576Enum,
 NhuMBMS_AccessProbabilityFactorapf608Enum,
 NhuMBMS_AccessProbabilityFactorapf640Enum,
 NhuMBMS_AccessProbabilityFactorapf672Enum,
 NhuMBMS_AccessProbabilityFactorapf704Enum,
 NhuMBMS_AccessProbabilityFactorapf736Enum,
 NhuMBMS_AccessProbabilityFactorapf768Enum,
 NhuMBMS_AccessProbabilityFactorapf800Enum,
 NhuMBMS_AccessProbabilityFactorapf832Enum,
 NhuMBMS_AccessProbabilityFactorapf864Enum,
 NhuMBMS_AccessProbabilityFactorapf896Enum,
 NhuMBMS_AccessProbabilityFactorapf928Enum,
 NhuMBMS_AccessProbabilityFactorapf960Enum,
 NhuMBMS_AccessProbabilityFactorapf1000Enum
} EnumNhuMBMS_AccessProbabilityFactor;
typedef TknU32 NhuMBMS_AccessProbabilityFactor;


typedef TknStrBSXL NhuMBMS_CellGroupIdentity_r6;

typedef TknU32 NhuMBMS_CmnCCTrChIdentity;


typedef TknU32 NhuMBMS_CmnPhyChIdentity;


typedef TknU32 NhuMBMS_CmnRBIdentity;

typedef struct NhuMBMS_CmnRBInfo_r6
{
 TknPres pres;
 NhuMBMS_CmnRBIdentity commonRBIdentity;
 NhuPDCP_Info_r4 pdcp_Info;
 NhuRLC_Info_MTCH_r6 rlc_Info;
} NhuMBMS_CmnRBInfo_r6;

typedef struct NhuMBMS_CmnRBInfoLst_r6
{
 TknU16 noComp;
 NhuMBMS_CmnRBInfo_r6 *member;
}NhuMBMS_CmnRBInfoLst_r6;


typedef TknU32 NhuMBMS_CmnTrChIdentity;


typedef TknU8 NhuMBMS_ConnectedModeCountingScopecountingForUraPCH;


typedef TknU8 NhuMBMS_ConnectedModeCountingScopecountingForCellPCH;


typedef TknU8 NhuMBMS_ConnectedModeCountingScopecountingForCellFACH;

typedef struct NhuMBMS_ConnectedModeCountingScope
{
 TknPres pres;
 NhuMBMS_ConnectedModeCountingScopecountingForUraPCH countingForUraPCH;
 NhuMBMS_ConnectedModeCountingScopecountingForCellPCH countingForCellPCH;
 NhuMBMS_ConnectedModeCountingScopecountingForCellFACH countingForCellFACH;
} NhuMBMS_ConnectedModeCountingScope;


typedef TknU32 NhuMBMS_SCCPCHIdentity;


typedef enum enumNhuMBMS_SoftComb_TimingOffset
{
 NhuMBMS_SoftComb_TimingOffsetms0Enum,
 NhuMBMS_SoftComb_TimingOffsetms10Enum,
 NhuMBMS_SoftComb_TimingOffsetms20Enum,
 NhuMBMS_SoftComb_TimingOffsetms40Enum
} EnumNhuMBMS_SoftComb_TimingOffset;
typedef TknU32 NhuMBMS_SoftComb_TimingOffset;


typedef TknU32 NhuMBMS_ShortTransmissionID;


typedef TknU32 NhuMBMS_LogChIdentity;

typedef struct NhuMBMS_PTM_RBInfo_C
{
 TknPres pres;
 NhuMBMS_CmnRBIdentity rbInfo;
 NhuMBMS_ShortTransmissionID shortTransmissionID;
 NhuMBMS_LogChIdentity logicalChIdentity;
} NhuMBMS_PTM_RBInfo_C;

typedef struct NhuMBMS_PTM_RBInfo_CLst
{
 TknU16 noComp;
 NhuMBMS_PTM_RBInfo_C *member;
}NhuMBMS_PTM_RBInfo_CLst;

typedef struct NhuMBMS_TrCHInfo_Curr
{
 TknPres pres;
 NhuMBMS_CmnTrChIdentity transpCh_Info;
 NhuMBMS_PTM_RBInfo_CLst rbInfo;
 NhuMBMS_MSCH_CfgInfo_r6 msch_CfgInfo;
} NhuMBMS_TrCHInfo_Curr;

typedef struct NhuMBMS_TrCHInfo_CurrLst
{
 TknU16 noComp;
 NhuMBMS_TrCHInfo_Curr *member;
}NhuMBMS_TrCHInfo_CurrLst;

typedef struct NhuMBMS_CurrentCell_SCCPCH_r6
{
 TknPres pres;
 NhuMBMS_SCCPCHIdentity sccpchIdentity;
 NhuMBMS_CmnPhyChIdentity secondaryCCPCH_Info;
 NhuMBMS_SoftComb_TimingOffset softComb_TimingOffset;
 NhuMBMS_CmnCCTrChIdentity transpCh_InfoCmnForAllTrCh;
 NhuMBMS_TrCHInfo_CurrLst transpCHInfo;
} NhuMBMS_CurrentCell_SCCPCH_r6;

typedef struct NhuMBMS_CurrentCell_SCCPCHLst_r6
{
 TknU16 noComp;
 NhuMBMS_CurrentCell_SCCPCH_r6 *member;
}NhuMBMS_CurrentCell_SCCPCHLst_r6;

typedef struct NhuMBMS_JoinedInfo_r6
{
 TknPres pres;
 NhuP_TMSI_GSM_MAP p_TMSI;
} NhuMBMS_JoinedInfo_r6;


typedef TknU32 NhuMBMS_L1CombiningSchedule_32cycleOffset;


typedef TknU32 NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLstMemberperiodStart;


typedef TknU32 NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLstMemberperiodDuration;

typedef struct NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLstMember
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLstMemberperiodStart periodStart;
 NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLstMemberperiodDuration periodDuration;
} NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLstMember;

typedef struct NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLst
{
 TknU16 noComp;
 NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLstMember *member;
}NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLst;

typedef struct NhuMBMS_L1CombiningSchedule_32
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_32cycleOffset cycleOffset;
 NhuMBMS_L1CombiningSchedule_32mtch_L1CombiningPeriodLst mtch_L1CombiningPeriodLst;
} NhuMBMS_L1CombiningSchedule_32;


typedef TknU32 NhuMBMS_L1CombiningSchedule_64cycleOffset;


typedef TknU32 NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLstMemberperiodStart;


typedef TknU32 NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLstMemberperiodDuration;

typedef struct NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLstMember
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLstMemberperiodStart periodStart;
 NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLstMemberperiodDuration periodDuration;
} NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLstMember;

typedef struct NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLst
{
 TknU16 noComp;
 NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLstMember *member;
}NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLst;

typedef struct NhuMBMS_L1CombiningSchedule_64
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_64cycleOffset cycleOffset;
 NhuMBMS_L1CombiningSchedule_64mtch_L1CombiningPeriodLst mtch_L1CombiningPeriodLst;
} NhuMBMS_L1CombiningSchedule_64;


typedef TknU32 NhuMBMS_L1CombiningSchedule_128cycleOffset;


typedef TknU32 NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLstMemberperiodStart;


typedef TknU32 NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLstMemberperiodDuration;

typedef struct NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLstMember
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLstMemberperiodStart periodStart;
 NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLstMemberperiodDuration periodDuration;
} NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLstMember;

typedef struct NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLst
{
 TknU16 noComp;
 NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLstMember *member;
}NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLst;

typedef struct NhuMBMS_L1CombiningSchedule_128
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_128cycleOffset cycleOffset;
 NhuMBMS_L1CombiningSchedule_128mtch_L1CombiningPeriodLst mtch_L1CombiningPeriodLst;
} NhuMBMS_L1CombiningSchedule_128;


typedef TknU32 NhuMBMS_L1CombiningSchedule_256cycleOffset;


typedef TknU32 NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLstMemberperiodStart;


typedef TknU32 NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLstMemberperiodDuration;

typedef struct NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLstMember
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLstMemberperiodStart periodStart;
 NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLstMemberperiodDuration periodDuration;
} NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLstMember;

typedef struct NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLst
{
 TknU16 noComp;
 NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLstMember *member;
}NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLst;

typedef struct NhuMBMS_L1CombiningSchedule_256
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_256cycleOffset cycleOffset;
 NhuMBMS_L1CombiningSchedule_256mtch_L1CombiningPeriodLst mtch_L1CombiningPeriodLst;
} NhuMBMS_L1CombiningSchedule_256;


typedef TknU32 NhuMBMS_L1CombiningSchedule_512cycleOffset;


typedef TknU32 NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLstMemberperiodStart;


typedef TknU32 NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLstMemberperiodDuration;

typedef struct NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLstMember
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLstMemberperiodStart periodStart;
 NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLstMemberperiodDuration periodDuration;
} NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLstMember;

typedef struct NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLst
{
 TknU16 noComp;
 NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLstMember *member;
}NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLst;

typedef struct NhuMBMS_L1CombiningSchedule_512
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_512cycleOffset cycleOffset;
 NhuMBMS_L1CombiningSchedule_512mtch_L1CombiningPeriodLst mtch_L1CombiningPeriodLst;
} NhuMBMS_L1CombiningSchedule_512;


typedef TknU32 NhuMBMS_L1CombiningSchedule_1024cycleOffset;


typedef TknU32 NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLstMemberperiodStart;


typedef TknU32 NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLstMemberperiodDuration;

typedef struct NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLstMember
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLstMemberperiodStart periodStart;
 NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLstMemberperiodDuration periodDuration;
} NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLstMember;

typedef struct NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLst
{
 TknU16 noComp;
 NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLstMember *member;
}NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLst;

typedef struct NhuMBMS_L1CombiningSchedule_1024
{
 TknPres pres;
 NhuMBMS_L1CombiningSchedule_1024cycleOffset cycleOffset;
 NhuMBMS_L1CombiningSchedule_1024mtch_L1CombiningPeriodLst mtch_L1CombiningPeriodLst;
} NhuMBMS_L1CombiningSchedule_1024;

typedef struct NhuMBMS_L1CombiningSchedule
{
 TknU8 choice;
 union {
  NhuMBMS_L1CombiningSchedule_32 cycleLength_32;
  NhuMBMS_L1CombiningSchedule_64 cycleLength_64;
  NhuMBMS_L1CombiningSchedule_128 cycleLength_128;
  NhuMBMS_L1CombiningSchedule_256 cycleLength_256;
  NhuMBMS_L1CombiningSchedule_512 cycleLength_512;
  NhuMBMS_L1CombiningSchedule_1024 cycleLength_1024;
 } val;
} NhuMBMS_L1CombiningSchedule;


typedef TknU32 NhuMBMS_L1CombiningTransmTimeDiff;


typedef TknU8 NhuMBMS_PTM_RBInfo_Nlayer1_CombiningStatus;

typedef struct NhuMBMS_PTM_RBInfo_N
{
 TknPres pres;
 NhuMBMS_ShortTransmissionID shortTransmissionID;
 NhuMBMS_LogChIdentity logicalChIdentity;
 NhuMBMS_PTM_RBInfo_Nlayer1_CombiningStatus layer1_CombiningStatus;
} NhuMBMS_PTM_RBInfo_N;

typedef struct NhuMBMS_PTM_RBInfo_NLst
{
 TknU16 noComp;
 NhuMBMS_PTM_RBInfo_N *member;
}NhuMBMS_PTM_RBInfo_NLst;


typedef TknU8 NhuMBMS_TrCHInfo_NeighbtranspCh_CombiningStatus;

typedef struct NhuMBMS_TrCHInfo_Neighb
{
 TknPres pres;
 NhuMBMS_CmnTrChIdentity transpCh_Info;
 NhuMBMS_TrCHInfo_NeighbtranspCh_CombiningStatus transpCh_CombiningStatus;
 NhuMBMS_PTM_RBInfo_NLst rbInfo;
 NhuMBMS_MSCH_CfgInfo_r6 msch_CfgInfo;
} NhuMBMS_TrCHInfo_Neighb;

typedef struct NhuMBMS_TrCHInfo_NeighbLst
{
 TknU16 noComp;
 NhuMBMS_TrCHInfo_Neighb *member;
}NhuMBMS_TrCHInfo_NeighbLst;

typedef struct NhuMBMS_L23CfgsameAsCurrent
{
 TknPres pres;
 NhuMBMS_SCCPCHIdentity currentCell_SCCPCH;
 NhuMBMS_MSCH_CfgInfo_r6 msch_CfgInfo;
} NhuMBMS_L23CfgsameAsCurrent;

typedef struct NhuMBMS_L23Cfgdifferent
{
 TknPres pres;
 NhuMBMS_CmnCCTrChIdentity transpCh_InfoCmnForAllTrCh;
 NhuMBMS_TrCHInfo_NeighbLst transpCHInfo;
} NhuMBMS_L23Cfgdifferent;

typedef struct NhuMBMS_L23Cfg
{
 TknU8 choice;
 union {
  NhuMBMS_L23CfgsameAsCurrent sameAsCurrent;
  NhuMBMS_L23Cfgdifferent different;
 } val;
} NhuMBMS_L23Cfg;


typedef TknS32 NhuMBMS_MICHPowerOffset;


typedef enum enumNhuMBMS_NI_CountPerFrame
{
 NhuMBMS_NI_CountPerFrameni18Enum,
 NhuMBMS_NI_CountPerFrameni36Enum,
 NhuMBMS_NI_CountPerFrameni72Enum,
 NhuMBMS_NI_CountPerFrameni144Enum
} EnumNhuMBMS_NI_CountPerFrame;
typedef TknU32 NhuMBMS_NI_CountPerFrame;


typedef enum enumNhuMBMS_MICHNotificationIndLength
{
 NhuMBMS_MICHNotificationIndLengthmn4Enum,
 NhuMBMS_MICHNotificationIndLengthmn8Enum,
 NhuMBMS_MICHNotificationIndLengthmn16Enum
} EnumNhuMBMS_MICHNotificationIndLength;
typedef TknU32 NhuMBMS_MICHNotificationIndLength;


typedef TknU8 NhuMBMS_MICHCfgInfo_r6modefddsttd_Indicator;

typedef struct NhuMBMS_MICHCfgInfo_r6modefdd
{
 TknPres pres;
 NhuChannelisationCode256 channelisationCode256;
 NhuMBMS_NI_CountPerFrame ni_CountPerFrame;
 NhuMBMS_MICHCfgInfo_r6modefddsttd_Indicator sttd_Indicator;
} NhuMBMS_MICHCfgInfo_r6modefdd;

typedef struct NhuMBMS_MICHCfgInfo_r6modetdd384
{
 TknPres pres;
 NhuTimeslotNumber timeslot;
 NhuMidambleShiftAndBurstTyp midambleShiftAndBurstTyp;
 NhuDL_TS_ChannelisationCode channelisationCode;
 NhuRepPerLengthOffset_MICH repetitionPeriodLengthOffset;
 NhuMBMS_MICHNotificationIndLength mbmsNotificationIndLength;
} NhuMBMS_MICHCfgInfo_r6modetdd384;

typedef struct NhuMBMS_MICHCfgInfo_r6modetdd128channelisationCodeLst
{
 TknU16 noComp;
 NhuDL_TS_ChannelisationCode *member;
}NhuMBMS_MICHCfgInfo_r6modetdd128channelisationCodeLst;

typedef struct NhuMBMS_MICHCfgInfo_r6modetdd128
{
 TknPres pres;
 NhuTimeslotNumber_LCR_r4 timeslot;
 NhuMidambleShiftAndBurstTyp_LCR_r4 midambleShiftAndBurstTyp;
 NhuMBMS_MICHCfgInfo_r6modetdd128channelisationCodeLst channelisationCodeLst;
 NhuRepPerLengthOffset_MICH repetitionPeriodLengthOffset;
 NhuMBMS_MICHNotificationIndLength mbmsNotificationIndLength;
} NhuMBMS_MICHCfgInfo_r6modetdd128;

typedef struct NhuMBMS_MICHCfgInfo_r6mode
{
 TknU8 choice;
 union {
  NhuMBMS_MICHCfgInfo_r6modefdd fdd;
  NhuMBMS_MICHCfgInfo_r6modetdd384 tdd384;
  NhuMBMS_MICHCfgInfo_r6modetdd128 tdd128;
 } val;
} NhuMBMS_MICHCfgInfo_r6mode;

typedef struct NhuMBMS_MICHCfgInfo_r6
{
 TknPres pres;
 NhuMBMS_MICHPowerOffset michPowerOffset;
 NhuMBMS_MICHCfgInfo_r6mode mode;
} NhuMBMS_MICHCfgInfo_r6;

typedef struct NhuMBMS_MICHCfgInfo_v770extmodetdd384
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_r7 midambleShiftAndBurstTyp;
} NhuMBMS_MICHCfgInfo_v770extmodetdd384;

typedef struct NhuMBMS_MICHCfgInfo_v770extmodetdd768
{
 TknPres pres;
 NhuMidambleShiftAndBurstTyp_VHCR midambleShiftAndBurstTyp;
} NhuMBMS_MICHCfgInfo_v770extmodetdd768;

typedef struct NhuMBMS_MICHCfgInfo_v770extmodetdd128
{
 TknPres pres;
 NhuTimeSlotLCR_ext mbsfnSpecialTimeSlot;
} NhuMBMS_MICHCfgInfo_v770extmodetdd128;

typedef struct NhuMBMS_MICHCfgInfo_v770extmode
{
 TknU8 choice;
 union {
  NhuMBMS_MICHCfgInfo_v770extmodetdd384 tdd384;
  NhuMBMS_MICHCfgInfo_v770extmodetdd768 tdd768;
  NhuMBMS_MICHCfgInfo_v770extmodetdd128 tdd128;
 } val;
} NhuMBMS_MICHCfgInfo_v770extmode;

typedef struct NhuMBMS_MICHCfgInfo_v770ext
{
 TknPres pres;
 NhuMBMS_MICHCfgInfo_v770extmode mode;
} NhuMBMS_MICHCfgInfo_v770ext;


typedef enum enumNhuMBMS_NI_CountPerFrame_IMB384
{
 NhuMBMS_NI_CountPerFrame_IMB384ni16Enum,
 NhuMBMS_NI_CountPerFrame_IMB384ni32Enum,
 NhuMBMS_NI_CountPerFrame_IMB384ni64Enum,
 NhuMBMS_NI_CountPerFrame_IMB384ni128Enum
} EnumNhuMBMS_NI_CountPerFrame_IMB384;
typedef TknU32 NhuMBMS_NI_CountPerFrame_IMB384;

typedef struct NhuMBMS_MICHCfgInfo_v890extmodeimb384
{
 TknPres pres;
 NhuChannelisationCode256 channelisationCode256;
 NhuMBMS_NI_CountPerFrame_IMB384 ni_CountPerFrame;
} NhuMBMS_MICHCfgInfo_v890extmodeimb384;

typedef struct NhuMBMS_MICHCfgInfo_v890extmode
{
 TknU8 choice;
 union {
  NhuMBMS_MICHCfgInfo_v890extmodeimb384 imb384;
 } val;
} NhuMBMS_MICHCfgInfo_v890extmode;

typedef struct NhuMBMS_MICHCfgInfo_v890ext
{
 TknPres pres;
 NhuMBMS_MICHCfgInfo_v890extmode mode;
} NhuMBMS_MICHCfgInfo_v890ext;


typedef TknStrOSXL NhuMBMS_ServiceIdentity_r6serviceIdentity;

typedef TknU32 NhuMBMS_ServiceIdentity_r6plmn_IdentityothersameAsMIB_MultiPLMN_Id;

typedef struct NhuMBMS_ServiceIdentity_r6plmn_Identityother
{
 TknU8 choice;
 union {
  NhuMBMS_ServiceIdentity_r6plmn_IdentityothersameAsMIB_MultiPLMN_Id sameAsMIB_MultiPLMN_Id;
  NhuPLMN_Identity explicitPLMN_Id;
 } val;
} NhuMBMS_ServiceIdentity_r6plmn_Identityother;

typedef struct NhuMBMS_ServiceIdentity_r6plmn_Identity
{
 TknU8 choice;
 union {
  NhuMBMS_ServiceIdentity_r6plmn_Identityother other;
 } val;
} NhuMBMS_ServiceIdentity_r6plmn_Identity;

typedef struct NhuMBMS_ServiceIdentity_r6
{
 TknPres pres;
 NhuMBMS_ServiceIdentity_r6serviceIdentity serviceIdentity;
 NhuMBMS_ServiceIdentity_r6plmn_Identity plmn_Identity;
} NhuMBMS_ServiceIdentity_r6;

typedef struct NhuMBMS_TransmissionIdentity
{
 TknPres pres;
 NhuMBMS_ServiceIdentity_r6 mbms_ServiceIdentity;
 NhuMBMS_SessionIdentity mbms_SessionIdentity;
} NhuMBMS_TransmissionIdentity;


typedef enum enumNhuMBMS_ReqdUEAction_Mod
{
 NhuMBMS_ReqdUEAction_ModnoneEnum,
 NhuMBMS_ReqdUEAction_ModacquireCountingInfoEnum,
 NhuMBMS_ReqdUEAction_ModacquireCountingInfoPTM_RBsUnmodifiedEnum,
 NhuMBMS_ReqdUEAction_ModacquirePTM_RBInfoEnum,
 NhuMBMS_ReqdUEAction_ModrequestPTPRBEnum,
 NhuMBMS_ReqdUEAction_ModreleasePTM_RBEnum
} EnumNhuMBMS_ReqdUEAction_Mod;
typedef TknU32 NhuMBMS_ReqdUEAction_Mod;


typedef TknU32 NhuMBMS_PFLIdx;


typedef NhuFrequencyInfo NhuMBMS_PFLInfo;
typedef struct NhuMBMS_ModifedService_r6mbms_PreferredFrequency
{
 TknU8 choice;
 union {
  NhuMBMS_PFLIdx mcch;
  NhuMBMS_PFLInfo dcch;
 } val;
} NhuMBMS_ModifedService_r6mbms_PreferredFrequency;


typedef enum enumNhuMBMS_ModifedService_r6dummy
{
 NhuMBMS_ModifedService_r6dummytrueEnum
} EnumNhuMBMS_ModifedService_r6dummy;
typedef TknU32 NhuMBMS_ModifedService_r6dummy;


typedef TknU8 NhuMBMS_ModifedService_r6continueMCCHReading;

typedef struct NhuMBMS_ModifedService_r6
{
 TknPres pres;
 NhuMBMS_TransmissionIdentity mbms_TransmissionIdentity;
 NhuMBMS_ReqdUEAction_Mod mbms_ReqdUEAction;
 NhuMBMS_ModifedService_r6mbms_PreferredFrequency mbms_PreferredFrequency;
 NhuMBMS_ModifedService_r6dummy dummy;
 NhuMBMS_ModifedService_r6continueMCCHReading continueMCCHReading;
} NhuMBMS_ModifedService_r6;

typedef struct NhuMBMS_ModifedServiceLst_r6
{
 TknU16 noComp;
 NhuMBMS_ModifedService_r6 *member;
}NhuMBMS_ModifedServiceLst_r6;


typedef TknU32 NhuMBSFN_ClusterFrequency_r7;

typedef struct NhuMBMS_MdfdService_v770ext
{
 TknPres pres;
 NhuMBSFN_ClusterFrequency_r7 mbsfnClusterFrequency;
} NhuMBMS_MdfdService_v770ext;


typedef enum enumNhuMBMS_PTM_RBRlsCause_LCR_r7
{
 NhuMBMS_PTM_RBRlsCause_LCR_r7normalRlsEnum,
 NhuMBMS_PTM_RBRlsCause_LCR_r7outOfMBMSServiceCoverageInRANEnum,
 NhuMBMS_PTM_RBRlsCause_LCR_r7networkAbnormalRlsEnum,
 NhuMBMS_PTM_RBRlsCause_LCR_r7spare5Enum,
 NhuMBMS_PTM_RBRlsCause_LCR_r7spare4Enum,
 NhuMBMS_PTM_RBRlsCause_LCR_r7spare3Enum,
 NhuMBMS_PTM_RBRlsCause_LCR_r7spare2Enum,
 NhuMBMS_PTM_RBRlsCause_LCR_r7spare1Enum
} EnumNhuMBMS_PTM_RBRlsCause_LCR_r7;
typedef TknU32 NhuMBMS_PTM_RBRlsCause_LCR_r7;

typedef struct NhuMBMS_MdfdService_LCR_v7c0ext
{
 TknPres pres;
 NhuMBMS_PTM_RBRlsCause_LCR_r7 rbRlsCause;
} NhuMBMS_MdfdService_LCR_v7c0ext;

typedef struct NhuMBMS_MdfdServiceLst_v770ext
{
 TknU16 noComp;
 NhuMBMS_MdfdService_v770ext *member;
}NhuMBMS_MdfdServiceLst_v770ext;

typedef struct NhuMBMS_MdfdServiceLst_LCR_v7c0ext
{
 TknU16 noComp;
 NhuMBMS_MdfdService_LCR_v7c0ext *member;
}NhuMBMS_MdfdServiceLst_LCR_v7c0ext;


typedef enum enumNhuMBMS_SCCPCHPwrOffsetDiff
{
 NhuMBMS_SCCPCHPwrOffsetDiffmcpo_minus6Enum,
 NhuMBMS_SCCPCHPwrOffsetDiffmcpo_minus3Enum,
 NhuMBMS_SCCPCHPwrOffsetDiffmcpo_plus3Enum,
 NhuMBMS_SCCPCHPwrOffsetDiffmcpo_plus6Enum
} EnumNhuMBMS_SCCPCHPwrOffsetDiff;
typedef TknU32 NhuMBMS_SCCPCHPwrOffsetDiff;

typedef struct NhuMBMS_NeighbouringCellSCCPCH_r6layer1Combiningfdd
{
 TknPres pres;
 NhuMBMS_SoftComb_TimingOffset softComb_TimingOffset;
 NhuMBMS_L1CombiningTransmTimeDiff mbms_L1CombiningTransmTimeDiff;
 NhuMBMS_L1CombiningSchedule mbms_L1CombiningSchedule;
} NhuMBMS_NeighbouringCellSCCPCH_r6layer1Combiningfdd;

typedef struct NhuMBMS_NeighbouringCellSCCPCH_r6layer1Combining
{
 TknU8 choice;
 union {
  NhuMBMS_NeighbouringCellSCCPCH_r6layer1Combiningfdd fdd;
 } val;
} NhuMBMS_NeighbouringCellSCCPCH_r6layer1Combining;

typedef struct NhuMBMS_NeighbouringCellSCCPCH_r6
{
 TknPres pres;
 NhuMBMS_CmnPhyChIdentity secondaryCCPCH_Info;
 NhuMBMS_SCCPCHPwrOffsetDiff secondaryCCPCHPwrOffsetDiff;
 NhuMBMS_NeighbouringCellSCCPCH_r6layer1Combining layer1Combining;
 NhuMBMS_L23Cfg mbms_L23Cfg;
} NhuMBMS_NeighbouringCellSCCPCH_r6;

typedef struct NhuMBMS_NeighbouringCellSCCPCH_v770extlayer1Combiningfdd
{
 TknPres pres;
 NhuMBMS_SoftComb_TimingOffset softComb_TimingOffset;
 NhuMBMS_L1CombiningTransmTimeDiff mbms_L1CombiningTransmTimeDiff;
 NhuMBMS_L1CombiningSchedule mbms_L1CombiningSchedule;
} NhuMBMS_NeighbouringCellSCCPCH_v770extlayer1Combiningfdd;

typedef struct NhuMBMS_NeighbouringCellSCCPCH_v770extlayer1Combining
{
 TknU8 choice;
 union {
  NhuMBMS_NeighbouringCellSCCPCH_v770extlayer1Combiningfdd fdd;
 } val;
} NhuMBMS_NeighbouringCellSCCPCH_v770extlayer1Combining;

typedef struct NhuMBMS_NeighbouringCellSCCPCH_v770ext
{
 TknPres pres;
 NhuMBMS_CmnPhyChIdentity secondaryCCPCH_Info;
 NhuSecondaryCCPCHInfoDiff_MBMS secondaryCCPCH_InfoDiff;
 NhuMBMS_SCCPCHPwrOffsetDiff secondaryCCPCHPwrOffsetDiff;
 NhuMBMS_NeighbouringCellSCCPCH_v770extlayer1Combining layer1Combining;
 NhuMBMS_L23Cfg mbms_L23Cfg;
} NhuMBMS_NeighbouringCellSCCPCH_v770ext;

typedef struct NhuMBMS_NeighbouringCellSCCPCHLst_r6
{
 TknU16 noComp;
 NhuMBMS_NeighbouringCellSCCPCH_r6 *member;
}NhuMBMS_NeighbouringCellSCCPCHLst_r6;

typedef struct NhuMBMS_NeighbouringCellSCCPCHLst_v770ext
{
 TknU16 noComp;
 NhuMBMS_NeighbouringCellSCCPCH_v770ext *member;
}NhuMBMS_NeighbouringCellSCCPCHLst_v770ext;


typedef TknStrBSXL NhuMBMS_NwStandardTimeInfo_LCR_v890extnetworkStandardTime;

typedef TknU32 NhuMBMS_NwStandardTimeInfo_LCR_v890extcorrelativeSFN;

typedef struct NhuMBMS_NwStandardTimeInfo_LCR_v890ext
{
 TknPres pres;
 NhuMBMS_NwStandardTimeInfo_LCR_v890extnetworkStandardTime networkStandardTime;
 NhuMBMS_NwStandardTimeInfo_LCR_v890extcorrelativeSFN correlativeSFN;
} NhuMBMS_NwStandardTimeInfo_LCR_v890ext;


typedef TknU32 NhuMBMS_NumberOfNeighbourCells_r6;

typedef struct NhuMBMS_PhyChInfo_IMB384
{
 TknPres pres;
 NhuMBMS_CmnPhyChIdentity mbms_CmnPhyChIdentity;
 NhuSecondaryCCPCHFrameTyp2Info secondaryCCPCHInfo_MBMS;
} NhuMBMS_PhyChInfo_IMB384;

typedef struct NhuMBMS_PhyChInfoLst_IMB384
{
 TknU16 noComp;
 NhuMBMS_PhyChInfo_IMB384 *member;
}NhuMBMS_PhyChInfoLst_IMB384;

typedef struct NhuMBMS_PhyChInfo_r6
{
 TknPres pres;
 NhuMBMS_CmnPhyChIdentity mbms_CmnPhyChIdentity;
 NhuSecondaryCCPCHInfo_MBMS_r6 secondaryCCPCHInfo_MBMS;
} NhuMBMS_PhyChInfo_r6;

typedef struct NhuMBMS_PhyChInfo_r7
{
 TknPres pres;
 NhuMBMS_CmnPhyChIdentity mbms_CmnPhyChIdentity;
 NhuSecondaryCCPCHInfo_MBMS_r7 secondaryCCPCHInfo_MBMS;
} NhuMBMS_PhyChInfo_r7;

typedef struct NhuMBMS_PhyChInfoLst_r6
{
 TknU16 noComp;
 NhuMBMS_PhyChInfo_r6 *member;
}NhuMBMS_PhyChInfoLst_r6;

typedef struct NhuMBMS_PhyChInfoLst_r7
{
 TknU16 noComp;
 NhuMBMS_PhyChInfo_r7 *member;
}NhuMBMS_PhyChInfoLst_r7;


typedef enum enumNhuMBMS_PL_ServiceRestrictInfo_r6
{
 NhuMBMS_PL_ServiceRestrictInfo_r6trueEnum
} EnumNhuMBMS_PL_ServiceRestrictInfo_r6;
typedef TknU32 NhuMBMS_PL_ServiceRestrictInfo_r6;


typedef enum enumNhuMBMS_Qoffset
{
 NhuMBMS_Qoffsetq4Enum,
 NhuMBMS_Qoffsetq8Enum,
 NhuMBMS_Qoffsetq12Enum,
 NhuMBMS_Qoffsetq16Enum,
 NhuMBMS_Qoffsetq20Enum,
 NhuMBMS_Qoffsetq30Enum,
 NhuMBMS_Qoffsetq40Enum,
 NhuMBMS_QoffsetqInfinityEnum
} EnumNhuMBMS_Qoffset;
typedef TknU32 NhuMBMS_Qoffset;


typedef TknU32 NhuMBMS_PreferredFrequencyInfo_r6mbmsPreferredFrequency;


typedef TknU32 NhuMBMS_PreferredFrequencyInfo_r6layerConvergenceInfombms_HCSoffset;

typedef struct NhuMBMS_PreferredFrequencyInfo_r6layerConvergenceInfo
{
 TknU8 choice;
 union {
  NhuMBMS_Qoffset mbms_Qoffset;
  NhuMBMS_PreferredFrequencyInfo_r6layerConvergenceInfombms_HCSoffset mbms_HCSoffset;
 } val;
} NhuMBMS_PreferredFrequencyInfo_r6layerConvergenceInfo;

typedef struct NhuMBMS_PreferredFrequencyInfo_r6
{
 TknPres pres;
 NhuMBMS_PreferredFrequencyInfo_r6mbmsPreferredFrequency mbmsPreferredFrequency;
 NhuMBMS_PreferredFrequencyInfo_r6layerConvergenceInfo layerConvergenceInfo;
 NhuMBMS_PL_ServiceRestrictInfo_r6 mbms_PL_ServiceRestrictInfo;
} NhuMBMS_PreferredFrequencyInfo_r6;

typedef struct NhuMBMS_PreferredFrequencyLst_r6
{
 TknU16 noComp;
 NhuMBMS_PreferredFrequencyInfo_r6 *member;
}NhuMBMS_PreferredFrequencyLst_r6;


typedef TknU32 NhuMBMS_PTMActvnTime_r6;


typedef enum enumNhuMBMS_ReqdUEAction_UMod
{
 NhuMBMS_ReqdUEAction_UModnoneEnum,
 NhuMBMS_ReqdUEAction_UModacquirePTM_RBInfoEnum,
 NhuMBMS_ReqdUEAction_UModrequestPTPRBEnum
} EnumNhuMBMS_ReqdUEAction_UMod;
typedef TknU32 NhuMBMS_ReqdUEAction_UMod;

typedef struct NhuMBMS_SelectedServicesLstFull
{
 TknU16 noComp;
 NhuMBMS_ServiceIdentity_r6 *member;
}NhuMBMS_SelectedServicesLstFull;

typedef struct NhuMBMS_SelectedServiceInfostatus
{
 TknU8 choice;
 union {
  NhuMBMS_SelectedServicesLstFull some;
 } val;
} NhuMBMS_SelectedServiceInfostatus;

typedef struct NhuMBMS_SelectedServiceInfo
{
 TknPres pres;
 NhuMBMS_SelectedServiceInfostatus status;
} NhuMBMS_SelectedServiceInfo;

typedef struct NhuMBMS_SelectedServicesLstShort
{
 TknU16 noComp;
 NhuMBMS_ShortTransmissionID *member;
}NhuMBMS_SelectedServicesLstShort;


typedef TknU32 NhuMBMS_SelectedServicesShortmodificationPeriodIdentity;

typedef struct NhuMBMS_SelectedServicesShort
{
 TknPres pres;
 NhuMBMS_SelectedServicesLstShort mbms_SelectedServicesLst;
 NhuMBMS_SelectedServicesShortmodificationPeriodIdentity modificationPeriodIdentity;
} NhuMBMS_SelectedServicesShort;

typedef struct NhuMBMS_ServiceAccessInfo_r6
{
 TknPres pres;
 NhuMBMS_ShortTransmissionID shortTransmissionID;
 NhuMBMS_AccessProbabilityFactor accessprobabilityFactor_Idle;
 NhuMBMS_AccessProbabilityFactor accessprobabilityFactor_Connected;
 NhuMBMS_ConnectedModeCountingScope mbms_ConnectedModeCountingScope;
} NhuMBMS_ServiceAccessInfo_r6;

typedef struct NhuMBMS_ServiceAccessInfoLst_r6
{
 TknU16 noComp;
 NhuMBMS_ServiceAccessInfo_r6 *member;
}NhuMBMS_ServiceAccessInfoLst_r6;


typedef TknU32 NhuMBMS_ServiceTransmInfostart;


typedef TknU32 NhuMBMS_ServiceTransmInfoduration;

typedef struct NhuMBMS_ServiceTransmInfo
{
 TknPres pres;
 NhuMBMS_ServiceTransmInfostart start;
 NhuMBMS_ServiceTransmInfoduration duration;
} NhuMBMS_ServiceTransmInfo;

typedef struct NhuMBMS_ServiceTransmInfoLst
{
 TknU16 noComp;
 NhuMBMS_ServiceTransmInfo *member;
}NhuMBMS_ServiceTransmInfoLst;


typedef TknU32 NhuMBMS_ServiceSchedulingInfo_r6nextSchedulingperiod;

typedef struct NhuMBMS_ServiceSchedulingInfo_r6
{
 TknPres pres;
 NhuMBMS_TransmissionIdentity mbms_TransmissionIdentity;
 NhuMBMS_ServiceTransmInfoLst mbms_ServiceTransmInfoLst;
 NhuMBMS_ServiceSchedulingInfo_r6nextSchedulingperiod nextSchedulingperiod;
} NhuMBMS_ServiceSchedulingInfo_r6;

typedef struct NhuMBMS_ServiceSchedulingInfoLst_r6
{
 TknU16 noComp;
 NhuMBMS_ServiceSchedulingInfo_r6 *member;
}NhuMBMS_ServiceSchedulingInfoLst_r6;


typedef TknU32 NhuMBMS_TrCHInfo_SIB5transpCh_Identity;

typedef struct NhuMBMS_TrCHInfo_SIB5
{
 TknPres pres;
 NhuMBMS_TrCHInfo_SIB5transpCh_Identity transpCh_Identity;
 NhuMBMS_PTM_RBInfo_CLst rbInfo;
 NhuMBMS_MSCH_CfgInfo_r6 msch_CfgInfo;
} NhuMBMS_TrCHInfo_SIB5;

typedef struct NhuMBMS_TrCHInfo_SIB5Lst
{
 TknU16 noComp;
 NhuMBMS_TrCHInfo_SIB5 *member;
}NhuMBMS_TrCHInfo_SIB5Lst;

typedef struct NhuMBMS_SIBTyp5_SCCPCH_r6
{
 TknPres pres;
 NhuMBMS_SCCPCHIdentity sccpchIdentity;
 NhuMBMS_TrCHInfo_SIB5Lst transpCHInfo;
} NhuMBMS_SIBTyp5_SCCPCH_r6;

typedef struct NhuMBMS_SIBTyp5_SCCPCHLst_r6
{
 TknU16 noComp;
 NhuMBMS_SIBTyp5_SCCPCH_r6 *member;
}NhuMBMS_SIBTyp5_SCCPCHLst_r6;

typedef struct NhuMBMS_TmrsAndCounters_r6
{
 TknPres pres;
 NhuT_318 t_318;
} NhuMBMS_TmrsAndCounters_r6;

typedef struct NhuMBMS_TranspChInfoForCCTrCh_r6
{
 TknPres pres;
 NhuMBMS_CmnCCTrChIdentity commonCCTrChIdentity;
 NhuTFCS transportFormatCombinationSet;
} NhuMBMS_TranspChInfoForCCTrCh_r6;

typedef struct NhuMBMS_TranspChInfoForEachCCTrCh_r6
{
 TknU16 noComp;
 NhuMBMS_TranspChInfoForCCTrCh_r6 *member;
}NhuMBMS_TranspChInfoForEachCCTrCh_r6;

typedef struct NhuMBMS_TranspChInfoForTrCh_r6
{
 TknPres pres;
 NhuMBMS_CmnTrChIdentity commonTrChIdentity;
 NhuTportFormatSet transportFormatSet;
} NhuMBMS_TranspChInfoForTrCh_r6;

typedef struct NhuMBMS_TranspChInfoForEachTrCh_r6
{
 TknU16 noComp;
 NhuMBMS_TranspChInfoForTrCh_r6 *member;
}NhuMBMS_TranspChInfoForEachTrCh_r6;

typedef struct NhuMBMS_UnmodifiedService_r6
{
 TknPres pres;
 NhuMBMS_TransmissionIdentity mbms_TransmissionIdentity;
 NhuMBMS_ReqdUEAction_UMod mbms_ReqdUEAction;
 NhuMBMS_PFLIdx mbms_PreferredFrequency;
} NhuMBMS_UnmodifiedService_r6;

typedef struct NhuMBMS_UnmodifiedServiceLst_r6
{
 TknU16 noComp;
 NhuMBMS_UnmodifiedService_r6 *member;
}NhuMBMS_UnmodifiedServiceLst_r6;

typedef struct NhuMBMS_UnmodifiedService_v770ext
{
 TknPres pres;
 NhuMBSFN_ClusterFrequency_r7 mbsfnClusterFrequency;
} NhuMBMS_UnmodifiedService_v770ext;

typedef struct NhuMBMS_UnmodifiedServiceLst_v770ext
{
 TknU16 noComp;
 NhuMBMS_UnmodifiedService_v770ext *member;
}NhuMBMS_UnmodifiedServiceLst_v770ext;

typedef struct NhuMBSFNFrequency
{
 TknPres pres;
 NhuFrequencyInfo frequencyInfo;
 NhuCellParamsID cellParamsID;
} NhuMBSFNFrequency;


typedef enum enumNhuMBSFNFrequency_v860extimb_Ind
{
 NhuMBSFNFrequency_v860extimb_IndtrueEnum
} EnumNhuMBSFNFrequency_v860extimb_Ind;
typedef TknU32 NhuMBSFNFrequency_v860extimb_Ind;

typedef struct NhuMBSFNFrequency_v860ext
{
 TknPres pres;
 NhuMBSFNFrequency_v860extimb_Ind imb_Ind;
} NhuMBSFNFrequency_v860ext;

typedef struct NhuMBSFNFrequencyLst
{
 TknU16 noComp;
 NhuMBSFNFrequency *member;
}NhuMBSFNFrequencyLst;

typedef struct NhuMBSFNFrequencyLst_v860ext
{
 TknU16 noComp;
 NhuMBSFNFrequency_v860ext *member;
}NhuMBSFNFrequencyLst_v860ext;


typedef enum enumNhuMBSFNOnlyService
{
 NhuMBSFNOnlyServicetrueEnum
} EnumNhuMBSFNOnlyService;
typedef TknU32 NhuMBSFNOnlyService;


typedef enum enumNhuMBSFNservicesNotNotified_r7notificationOfAllMBSFNServicesInTheBand
{
 NhuMBSFNservicesNotNotified_r7notificationOfAllMBSFNServicesInTheBandtrueEnum
} EnumNhuMBSFNservicesNotNotified_r7notificationOfAllMBSFNServicesInTheBand;
typedef TknU32 NhuMBSFNservicesNotNotified_r7notificationOfAllMBSFNServicesInTheBand;

typedef struct NhuMBSFNservicesNotNotified_r7
{
 TknPres pres;
 NhuMBSFNservicesNotNotified_r7notificationOfAllMBSFNServicesInTheBand notificationOfAllMBSFNServicesInTheBand;
} NhuMBSFNservicesNotNotified_r7;

typedef struct NhuMBSFNInterFrequencyNeighbour_r7mbsfnServicesNotification
{
 TknU8 choice;
 union {
  NhuMBSFNservicesNotNotified_r7 mbsfnServicesNotNotified;
 } val;
} NhuMBSFNInterFrequencyNeighbour_r7mbsfnServicesNotification;

typedef struct NhuMBSFNInterFrequencyNeighbour_r7
{
 TknPres pres;
 NhuFrequencyInfo mbsfnFrequency;
 NhuMBSFNInterFrequencyNeighbour_r7mbsfnServicesNotification mbsfnServicesNotification;
} NhuMBSFNInterFrequencyNeighbour_r7;


typedef enum enumNhuMBSFNInterFrequencyNeighbour_v860extimb_Ind
{
 NhuMBSFNInterFrequencyNeighbour_v860extimb_IndtrueEnum
} EnumNhuMBSFNInterFrequencyNeighbour_v860extimb_Ind;
typedef TknU32 NhuMBSFNInterFrequencyNeighbour_v860extimb_Ind;

typedef struct NhuMBSFNInterFrequencyNeighbour_v860ext
{
 TknPres pres;
 NhuMBSFNInterFrequencyNeighbour_v860extimb_Ind imb_Ind;
} NhuMBSFNInterFrequencyNeighbour_v860ext;

typedef struct NhuMBSFN_InterFrequencyNeighbourLst_r7
{
 TknU16 noComp;
 NhuMBSFNInterFrequencyNeighbour_r7 *member;
}NhuMBSFN_InterFrequencyNeighbourLst_r7;

typedef struct NhuMBSFN_InterFrequencyNeighbourLst_v860ext
{
 TknU16 noComp;
 NhuMBSFNInterFrequencyNeighbour_v860ext *member;
}NhuMBSFN_InterFrequencyNeighbourLst_v860ext;

typedef struct NhuMBSFN_TDDTimeSlotInfo
{
 TknPres pres;
 NhuTimeslotNumber_LCR_r4 timeSlotNumber;
 NhuCellParamsID cellParamsID;
} NhuMBSFN_TDDTimeSlotInfo;

typedef struct NhuMBSFN_TDDInfo
{
 TknU16 noComp;
 NhuMBSFN_TDDTimeSlotInfo *member;
}NhuMBSFN_TDDInfo;


typedef TknU32 NhuMBSFN_TDDTimeSlotInfo_LCRfrequencyIdx;

typedef struct NhuMBSFN_TDDTimeSlotInfo_LCR
{
 TknPres pres;
 NhuMBSFN_TDDTimeSlotInfo_LCRfrequencyIdx frequencyIdx;
 NhuMBSFN_TDDInfo timeSlotLst;
} NhuMBSFN_TDDTimeSlotInfo_LCR;

typedef struct NhuMBSFN_TDDInfo_LCR
{
 TknU16 noComp;
 NhuMBSFN_TDDTimeSlotInfo_LCR *member;
}NhuMBSFN_TDDInfo_LCR;


typedef TknU32 NhuMBSFN_TDM_InfotDMPeriod;


typedef TknU32 NhuMBSFN_TDM_InfotDMOffset;


typedef TknU32 NhuMBSFN_TDM_InfotDMLength;

typedef struct NhuMBSFN_TDM_Info
{
 TknPres pres;
 NhuMBMS_ShortTransmissionID shortTransmissionID;
 NhuMBSFN_TDM_InfotDMPeriod tDMPeriod;
 NhuMBSFN_TDM_InfotDMOffset tDMOffset;
 NhuMBSFN_TDM_InfotDMLength tDMLength;
} NhuMBSFN_TDM_Info;

typedef struct NhuMBSFN_TDM_Info_Lst
{
 TknU16 noComp;
 NhuMBSFN_TDM_Info *member;
}NhuMBSFN_TDM_Info_Lst;

typedef struct NhuInterRATHovrInfo_v390ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v380ext ue_RadioAccessCap_v380ext;
 NhuDL_PhysChCapFDD_v380ext dl_PhysChCapFDD_v380ext;
} NhuInterRATHovrInfo_v390ext_IEs;

typedef struct NhuInterRATHovrInfo_v3a0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v3a0ext ue_RadioAccessCap_v3a0ext;
} NhuInterRATHovrInfo_v3a0ext_IEs;

typedef struct NhuInterRATHovrInfo_v3d0ext_IEs
{
 TknPres pres;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
} NhuInterRATHovrInfo_v3d0ext_IEs;

typedef struct NhuInterRATHovrInfo_v3g0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v3g0ext ue_RadioAccessCap_v3g0ext;
} NhuInterRATHovrInfo_v3g0ext_IEs;

typedef struct NhuInterRATHovrInfo_v4b0ext_IEs
{
 TknPres pres;
 NhuAccessStratumRlsIndicator accessStratumRlsIndicator;
} NhuInterRATHovrInfo_v4b0ext_IEs;

typedef struct NhuInterRATHovrInfo_v4d0ext_IEs
{
 TknPres pres;
 NhuRadioFrequencyBandTDDLst tdd128_RF_Cap;
} NhuInterRATHovrInfo_v4d0ext_IEs;

typedef struct NhuInterRATHovrInfo_v590ext_IEs
{
 TknPres pres;
 NhuPredefinedConfigStatusLstComp predefinedConfigStatusLstComp;
 NhuUE_RadioAccessCapComp ue_RadioAccessCapComp;
} NhuInterRATHovrInfo_v590ext_IEs;

typedef struct NhuInterRATHovrInfo_v690ext_IEs
{
 TknPres pres;
 NhuUE_SecInfo2 ue_SecInfo2;
 NhuUE_RadioAccessCapComp_ext ue_RadioAccessCapComp;
 NhuUE_RadioAccessCapComp2 ue_RadioAccessCapComp2;
} NhuInterRATHovrInfo_v690ext_IEs;


typedef enum enumNhuInterRATHovrInfo_v6b0ext_IEssupportForSIB11bis
{
 NhuInterRATHovrInfo_v6b0ext_IEssupportForSIB11bistrueEnum
} EnumNhuInterRATHovrInfo_v6b0ext_IEssupportForSIB11bis;
typedef TknU32 NhuInterRATHovrInfo_v6b0ext_IEssupportForSIB11bis;

typedef struct NhuInterRATHovrInfo_v6b0ext_IEs
{
 TknPres pres;
 NhuInterRATHovrInfo_v6b0ext_IEssupportForSIB11bis supportForSIB11bis;
} NhuInterRATHovrInfo_v6b0ext_IEs;


typedef enum enumNhuInterRATHovrInfo_v6e0ext_IEssupportForFDPCH
{
 NhuInterRATHovrInfo_v6e0ext_IEssupportForFDPCHtrueEnum
} EnumNhuInterRATHovrInfo_v6e0ext_IEssupportForFDPCH;
typedef TknU32 NhuInterRATHovrInfo_v6e0ext_IEssupportForFDPCH;

typedef struct NhuInterRATHovrInfo_v6e0ext_IEs
{
 TknPres pres;
 NhuInterRATHovrInfo_v6e0ext_IEssupportForFDPCH supportForFDPCH;
} NhuInterRATHovrInfo_v6e0ext_IEs;

typedef struct NhuInterRATHovrInfo_v770ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCapInfo_v770ext ue_RadioAccessCapInfo;
 NhuUE_RadioAccessCapComp_v770ext ue_RadioAccessCapComp;
 NhuUE_RadioAccessCapComp2_v770ext ue_RadioAccessCapComp2;
} NhuInterRATHovrInfo_v770ext_IEs;


typedef enum enumNhuInterRATHovrInfo_v790ext_IEssupportForEDPCCHPowerBoosting
{
 NhuInterRATHovrInfo_v790ext_IEssupportForEDPCCHPowerBoostingtrueEnum
} EnumNhuInterRATHovrInfo_v790ext_IEssupportForEDPCCHPowerBoosting;
typedef TknU32 NhuInterRATHovrInfo_v790ext_IEssupportForEDPCCHPowerBoosting;

typedef struct NhuInterRATHovrInfo_v790ext_IEs
{
 TknPres pres;
 NhuInterRATHovrInfo_v790ext_IEssupportForEDPCCHPowerBoosting supportForEDPCCHPowerBoosting;
} NhuInterRATHovrInfo_v790ext_IEs;

typedef struct NhuInterRATHovrInfo_v860ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v860ext ue_RadioAccessCapInfo;
 NhuUE_RadioAccessCapComp2_v860ext ue_RadioAccessCapComp2;
} NhuInterRATHovrInfo_v860ext_IEs;

typedef struct NhuInterRATHovrInfo_v880ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v880ext ue_RadioAccessCapInfo;
 NhuUE_RadioAccessCapComp_TDD128 ue_RadioAccessCapInfo_TDD128;
} NhuInterRATHovrInfo_v880ext_IEs;

typedef struct NhuInterRATHovrInfo_v920ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v920ext ue_RadioAccessCapInfo;
 NhuUE_RadioAccessCapComp2_v920ext ue_RadioAccessCapComp2;
} NhuInterRATHovrInfo_v920ext_IEs;

typedef struct NhuInterRATHovrInfo_v8b0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCapInfo_TDD128_v8b0ext ue_RadioAccessCapInfo;
} NhuInterRATHovrInfo_v8b0ext_IEs;

typedef struct NhuInterRATHovrInfo_v950ext_IEs
{
 TknPres pres;
 NhuPDCP_Cap_r4_ext pdcp_Cap;
} NhuInterRATHovrInfo_v950ext_IEs;

typedef struct NhuInterRATHovrInfo_va40ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_va40ext ue_RadioAccessCapInfo;
 NhuUE_RadioAccessCapComp2_va40ext ue_RadioAccessCapComp2;
} NhuInterRATHovrInfo_va40ext_IEs;

typedef struct NhuInterRATHovrInfo_vbxyext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_vbxyext ue_RadioAccessCapInfo_vbxyext;
 NhuUE_RadioAccessCap_va60ext ue_RadioAccessCapInfo_va60ext;
 NhuUE_RadioAccessCapComp2_vbxyext ue_RadioAccessCapComp2;
} NhuInterRATHovrInfo_vbxyext_IEs;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtnsva40NonCriticalExtnsvbxyNonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtnsva40NonCriticalExtnsvbxyNonCriticalExtnsnonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtnsva40NonCriticalExtnsvbxyNonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_vbxyext_IEs interRATHovrInfo_vbxyext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtnsva40NonCriticalExtnsvbxyNonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtnsva40NonCriticalExtnsvbxyNonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtnsva40NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_va40ext_IEs interRATHovrInfo_va40ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtnsva40NonCriticalExtnsvbxyNonCriticalExtns vbxyNonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtnsva40NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v950ext_IEs interRATHovrInfo_v950ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtnsva40NonCriticalExtns va40NonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v8b0ext_IEs interRATHovrInfo_v8b0ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtnsv950NonCriticalExtns v950NonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v920ext_IEs interRATHovrInfo_v920ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtnsv8b0NonCriticalExtns v8b0NonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v880ext_IEs interRATHovrInfo_v880ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtnsv920NonCriticalExtns v920NonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v860ext_IEs interRATHovrInfo_v860ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtnsv880NonCriticalExtns v880NonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v790ext_IEs interRATHovrInfo_v790ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtnsv860NonCriticalExtns v860NonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v770ext_IEs interRATHovrInfo_v770ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtnsv790nonCriticalExtns v790nonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v6e0ext_IEs interRATHovrInfo_v6e0ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtnsv770NonCriticalExtns v770NonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEs
{
 TknPres pres;
 NhuInterRATHovrInfo_v6b0ext_IEs interRATHovrInfo_v6b0ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEsv6e0NonCriticalExtns v6e0NonCriticalExtns;
} NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEs;

typedef struct NhuInterRATHovrInfopredefinedConfigStatusLst
{
 TknU8 choice;
 union {
  NhuPredefinedConfigStatusLst present;
 } val;
} NhuInterRATHovrInfopredefinedConfigStatusLst;

typedef struct NhuInterRATHovrInfouE_SecInfo
{
 TknU8 choice;
 union {
  NhuUE_SecInfo present;
 } val;
} NhuInterRATHovrInfouE_SecInfo;


typedef TknStrOSXL NhuInterRATHovrInfoue_CapContpresent;
typedef struct NhuInterRATHovrInfoue_CapCont
{
 TknU8 choice;
 union {
  NhuInterRATHovrInfoue_CapContpresent present;
 } val;
} NhuInterRATHovrInfoue_CapCont;


typedef TknStrBSXL NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsinterRATHovrInfo_r3_add_ext;
typedef struct NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtnsv690NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v690ext_IEs interRATHovrInfo_v690ext;
 NhuInterRATHovrInfo_NonCriticalExtn_v6b0_IEs v6b0NonCriticalExtns;
} NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtnsv690NonCriticalExtns;

typedef struct NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v590ext_IEs interRATHovrInfo_v590ext;
 NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtnsv690NonCriticalExtns v690NonCriticalExtns;
} NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtns;

typedef struct NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v4d0ext_IEs interRATHovrInfo_v4d0ext;
 NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtnsv590NonCriticalExtns v590NonCriticalExtns;
} NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtns;

typedef struct NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v4b0ext_IEs interRATHovrInfo_v4b0ext;
 NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv4d0NonCriticalExtns v4d0NonCriticalExtns;
} NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtns;

typedef struct NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v3g0ext_IEs interRATHovrInfo_v3g0ext;
 NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtns v4b0NonCriticalExtns;
} NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtns;

typedef struct NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v3d0ext_IEs interRATHovrInfo_v3d0ext;
 NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsinterRATHovrInfo_r3_add_ext interRATHovrInfo_r3_add_ext;
 NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtns v3g0NonCriticalExtns;
} NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtns;

typedef struct NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v3a0ext_IEs interRATHovrInfo_v3a0ext;
 NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtnslaterNonCriticalExtns laterNonCriticalExtns;
} NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtns;

typedef struct NhuInterRATHovrInfov390NonCriticalExtnspresent
{
 TknPres pres;
 NhuInterRATHovrInfo_v390ext_IEs interRATHovrInfo_v390ext;
 NhuInterRATHovrInfov390NonCriticalExtnspresentv3a0NonCriticalExtns v3a0NonCriticalExtns;
} NhuInterRATHovrInfov390NonCriticalExtnspresent;

typedef struct NhuInterRATHovrInfov390NonCriticalExtns
{
 TknU8 choice;
 union {
  NhuInterRATHovrInfov390NonCriticalExtnspresent present;
 } val;
} NhuInterRATHovrInfov390NonCriticalExtns;

typedef struct NhuInterRATHovrInfo
{
 TknPres pres;
 NhuInterRATHovrInfopredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuInterRATHovrInfouE_SecInfo uE_SecInfo;
 NhuInterRATHovrInfoue_CapCont ue_CapCont;
 NhuInterRATHovrInfov390NonCriticalExtns v390NonCriticalExtns;
} NhuInterRATHovrInfo;

typedef struct NhuInterRATHovrInfo_v690ext1_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v650ext ue_RadioAccessCap_v650ext;
} NhuInterRATHovrInfo_v690ext1_IEs;

typedef struct NhuInterRATHovrInfo_v7e0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v7e0ext ue_RadioAccessCap;
} NhuInterRATHovrInfo_v7e0ext_IEs;

typedef struct NhuInterRATHovrInfo_v7f0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v7f0ext ue_RadioAccessCap;
 NhuUE_RadioAccessCapComp2_v7f0ext ue_RadioAccessCapComp2;
} NhuInterRATHovrInfo_v7f0ext_IEs;

typedef struct NhuInterRATHovrInfoBand_va40ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCapabBand_va40ext ue_RadioAccessCapabBand;
 NhuRF_CapabBandLstFDDComp_ext2 rf_CapFDDComp;
} NhuInterRATHovrInfoBand_va40ext_IEs;

typedef struct NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtnsnonCriticalExtns;

typedef struct NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfoBand_va40ext_IEs interRATHovrInfo_va40ext;
 NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtnsv7f0NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v7f0ext_IEs interRATHovrInfo_v7f0ext;
 NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtns va40NonCriticalExtns;
} NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtnsv7f0NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfo_v7e0ext_IEs interRATHovrInfo_v7e0ext;
 NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtnsv7f0NonCriticalExtns v7f0NonCriticalExtns;
} NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtns;

typedef struct NhuInterRATHovrInfo_r3_add_ext_IEs
{
 TknPres pres;
 NhuInterRATHovrInfo_v690ext1_IEs interRATHovrInfo_v690ext1;
 NhuInterRATHovrInfo_r3_add_ext_IEsv7e0NonCriticalExtns v7e0NonCriticalExtns;
} NhuInterRATHovrInfo_r3_add_ext_IEs;

typedef struct Nhu3gMeasurementReport_v390ext
{
 TknPres pres;
 NhuMeasuredResults_v390ext measuredResults_v390ext;
} Nhu3gMeasurementReport_v390ext;

typedef struct Nhu3gMeasurementReport_v4b0ext_IEs
{
 TknPres pres;
 NhuInterFreqEventResults_LCR_r4_ext interFreqEventResults_LCR;
 NhuMeasuredResultsLst_LCR_r4_ext additionalMeasuredResults_LCR;
 NhuPrimaryCPICH_Info dummy;
} Nhu3gMeasurementReport_v4b0ext_IEs;

typedef struct Nhu3gMeasurementReport_v590ext_IEs
{
 TknPres pres;
 NhuMeasuredResults_v590ext measuredResults_v590ext;
} Nhu3gMeasurementReport_v590ext_IEs;

typedef struct Nhu3gMeasurementReport_v5b0ext_IEs
{
 TknPres pres;
 NhuInterRATCellInfoInd interRATCellInfoInd;
} Nhu3gMeasurementReport_v5b0ext_IEs;

typedef struct Nhu3gMeasurementReport_v690ext_IEs
{
 TknPres pres;
 NhuMeasuredResultsOnRACHinterFreq measuredResultsOnRACHinterFreq;
} Nhu3gMeasurementReport_v690ext_IEs;

typedef struct Nhu3gMeasurementReport_v770ext_IEs
{
 TknPres pres;
 NhuMeasuredResults_v770ext measuredResults;
 NhuMeasuredResultsLst_v770xet additionalMeasuredResults;
 NhuEventResults_v770ext eventResults;
 NhuUE_Positioning_OTDOA_MeasuredResultsTDD_ext ue_Positioning_OTDOA_MeasuredResults;
} Nhu3gMeasurementReport_v770ext_IEs;

typedef struct Nhu3gMeasurementReport_v860ext_IEs
{
 TknPres pres;
 NhuActvnTime activationTime;
 NhuMeasuredResults_v860ext measuredResults;
 NhuMeasuredResultsLst_v860ext additionalMeasuredResults;
 NhuEventResults_v860ext eventResults;
 NhuEUTRA_MeasuredResults eutra_MeasuredResults;
 NhuEUTRA_EventResults eutra_EventResults;
} Nhu3gMeasurementReport_v860ext_IEs;

typedef struct Nhu3gMeasurementReport_v920ext_IEs
{
 TknPres pres;
 NhuCSGProximityInd cSGProximityInd;
 NhuMeasuredResults_v920ext measuredResults;
 NhuMeasuredResultsOnSecUlFreq measuredResultsOnSecUlFreq;
 NhuMeasuredResultsLst_v920ext additionalMeasuredResults;
 NhuMeasuredResultsLstOnSecUlFreq additionalMeasuredResultsOnSecUlFreq;
 NhuEventResultsOnSecUlFreq eventResultsOnSecUlFreq;
 NhuEUTRA_MeasuredResults_v920ext eutra_MeasuredResults;
} Nhu3gMeasurementReport_v920ext_IEs;

typedef struct Nhu3gMeasurementReport_v970ext_IEs
{
 TknPres pres;
 NhuMeasurementIdentityExt measurementIdentity;
} Nhu3gMeasurementReport_v970ext_IEs;


typedef enum enumNhu3gMeasurementReport_va40ext_IEsloggedMeasAvailable
{
 Nhu3gMeasurementReport_va40ext_IEsloggedMeasAvailabletrueEnum
} EnumNhu3gMeasurementReport_va40ext_IEsloggedMeasAvailable;
typedef TknU32 Nhu3gMeasurementReport_va40ext_IEsloggedMeasAvailable;


typedef enum enumNhu3gMeasurementReport_va40ext_IEsloggedANRResultsAvailable
{
 Nhu3gMeasurementReport_va40ext_IEsloggedANRResultsAvailabletrueEnum
} EnumNhu3gMeasurementReport_va40ext_IEsloggedANRResultsAvailable;
typedef TknU32 Nhu3gMeasurementReport_va40ext_IEsloggedANRResultsAvailable;

typedef struct Nhu3gMeasurementReport_va40ext_IEs
{
 TknPres pres;
 NhuEventResults_va40ext eventResults;
 Nhu3gMeasurementReport_va40ext_IEsloggedMeasAvailable loggedMeasAvailable;
 Nhu3gMeasurementReport_va40ext_IEsloggedANRResultsAvailable loggedANRResultsAvailable;
} Nhu3gMeasurementReport_va40ext_IEs;


typedef TknStrBSXL Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsmeasurementReport_r3_add_ext;
typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsnonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_va40ext_IEs measurementReport_va40ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_v970ext_IEs measurementReport_v970ext_IE;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtnsva40NonCriticalExtns va40NonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_v920ext_IEs measurementReport_v920ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsv970NonCriticalExtns v970NonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_v860ext_IEs measurementReport_v860ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtns v920NonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_v770ext_IEs measurementReport_v770ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtnsv860NonCriticalExtns v860NonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_v690ext_IEs measurementReport_v690ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtnsv770NonCriticalExtns v770NonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_v5b0ext_IEs measurementReport_v5b0ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtnsv690NonCriticalExtns v690NonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_v590ext_IEs measurementReport_v590ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5b0NonCriticalExtns v5b0NonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_v4b0ext_IEs measurementReport_v4b0ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtns v590NonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsmeasurementReport_r3_add_ext measurementReport_r3_add_ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtnsv4b0NonCriticalExtns v4b0NonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtns;

typedef struct Nhu3gMeasurementReportv390nonCriticalExtns
{
 TknPres pres;
 Nhu3gMeasurementReport_v390ext measurementReport_v390ext;
 Nhu3gMeasurementReportv390nonCriticalExtnslaterNonCriticalExtns laterNonCriticalExtns;
} Nhu3gMeasurementReportv390nonCriticalExtns;

typedef struct Nhu3gMeasurementReport
{
 TknPres pres;
 NhuMeasurementIdentity measurementIdentity;
 NhuMeasuredResults measuredResults;
 NhuMeasuredResultsOnRACH measuredResultsOnRACH;
 NhuMeasuredResultsLst additionalMeasuredResults;
 NhuEventResults eventResults;
 Nhu3gMeasurementReportv390nonCriticalExtns v390nonCriticalExtns;
} Nhu3gMeasurementReport;

typedef struct NhuRRCConSetupCompl_v370ext
{
 TknPres pres;
 NhuUE_RadioAccessCap_v370ext ue_RadioAccessCap_v370ext;
} NhuRRCConSetupCompl_v370ext;

typedef struct NhuRRCConSetupCompl_v380ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v380ext ue_RadioAccessCap_v380ext;
 NhuDL_PhysChCapFDD_v380ext dl_PhysChCapFDD_v380ext;
} NhuRRCConSetupCompl_v380ext_IEs;

typedef struct NhuRRCConSetupCompl_v3a0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v3a0ext ue_RadioAccessCap_v3a0ext;
} NhuRRCConSetupCompl_v3a0ext_IEs;

typedef struct NhuRRCConSetupCompl_v3g0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v3g0ext ue_RadioAccessCap_v3g0ext;
} NhuRRCConSetupCompl_v3g0ext_IEs;

typedef struct NhuRRCConSetupCompl_v650ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v650ext ue_RadioAccessCap_v650ext;
} NhuRRCConSetupCompl_v650ext_IEs;

typedef struct NhuRRCConSetupCompl_v680ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v680ext ue_RadioAccessCap_v680ext;
} NhuRRCConSetupCompl_v680ext_IEs;

typedef struct NhuRRCConSetupCompl_v7e0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v7e0ext ue_RadioAccessCap;
} NhuRRCConSetupCompl_v7e0ext_IEs;

typedef struct NhuRRCConSetupCompl_v7f0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v7f0ext ue_RadioAccessCap;
} NhuRRCConSetupCompl_v7f0ext_IEs;

typedef struct NhuRRCConSetupComplBand_va40ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCapabBand_va40ext ue_RadioAccessCapabBand;
} NhuRRCConSetupComplBand_va40ext_IEs;

typedef struct NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtnsnonCriticalExtns;

typedef struct NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtns
{
 TknPres pres;
 NhuRRCConSetupComplBand_va40ext_IEs rrcConSetupComplBand_va40ext;
 NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtns;

typedef struct NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns
{
 TknPres pres;
 NhuRRCConSetupCompl_v7f0ext_IEs rrcConSetupCompl_v7f0ext;
 NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsva40NonCriticalExtns va40NonCriticalExtns;
} NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns;

typedef struct NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtns
{
 TknPres pres;
 NhuRRCConSetupCompl_v7e0ext_IEs rrcConSetupCompl_v7e0ext;
 NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns v7f0NonCriticalExtns;
} NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtns;

typedef struct NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtns
{
 TknPres pres;
 NhuRRCConSetupCompl_v680ext_IEs rrcConSetupCompl_v680ext;
 NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtnsv7e0NonCriticalExtns v7e0NonCriticalExtns;
} NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtns;

typedef struct NhuRRCConSetupCompl_r3_add_ext_IEs
{
 TknPres pres;
 NhuRRCConSetupCompl_v650ext_IEs rrcConSetupCompl_v650ext;
 NhuRRCConSetupCompl_r3_add_ext_IEsv680NonCriticalExtns v680NonCriticalExtns;
} NhuRRCConSetupCompl_r3_add_ext_IEs;

typedef struct NhuRRCConSetupCompl_v4b0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v4b0ext ue_RadioAccessCap_v4b0ext;
} NhuRRCConSetupCompl_v4b0ext_IEs;

typedef struct NhuRRCConSetupCompl_v590ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v590ext ue_RadioAccessCap_v590ext;
 NhuInterRAT_UE_RadioAccessCap_v590ext ue_RATSpecificCap_v590ext;
} NhuRRCConSetupCompl_v590ext_IEs;

typedef struct NhuRRCConSetupCompl_v5c0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v5c0ext ue_RadioAccessCap_v5c0ext;
} NhuRRCConSetupCompl_v5c0ext_IEs;


typedef TknStrBSXL NhuRRCConSetupCompl_v690ext_IEsueCapCont;
typedef struct NhuRRCConSetupCompl_v690ext_IEs
{
 TknPres pres;
 NhuRRCConSetupCompl_v690ext_IEsueCapCont ueCapCont;
} NhuRRCConSetupCompl_v690ext_IEs;


typedef enum enumNhuRRCConSetupCompl_v770ext_IEsdeferredMeasurementCntrlReading
{
 NhuRRCConSetupCompl_v770ext_IEsdeferredMeasurementCntrlReadingtrueEnum
} EnumNhuRRCConSetupCompl_v770ext_IEsdeferredMeasurementCntrlReading;
typedef TknU32 NhuRRCConSetupCompl_v770ext_IEsdeferredMeasurementCntrlReading;

typedef struct NhuRRCConSetupCompl_v770ext_IEs
{
 TknPres pres;
 NhuRRCConSetupCompl_v770ext_IEsdeferredMeasurementCntrlReading deferredMeasurementCntrlReading;
} NhuRRCConSetupCompl_v770ext_IEs;


typedef enum enumNhuRRCConSetupCompl_va40ext_IEsloggedMeasAvailable
{
 NhuRRCConSetupCompl_va40ext_IEsloggedMeasAvailabletrueEnum
} EnumNhuRRCConSetupCompl_va40ext_IEsloggedMeasAvailable;
typedef TknU32 NhuRRCConSetupCompl_va40ext_IEsloggedMeasAvailable;


typedef enum enumNhuRRCConSetupCompl_va40ext_IEsloggedANRResultsAvailable
{
 NhuRRCConSetupCompl_va40ext_IEsloggedANRResultsAvailabletrueEnum
} EnumNhuRRCConSetupCompl_va40ext_IEsloggedANRResultsAvailable;
typedef TknU32 NhuRRCConSetupCompl_va40ext_IEsloggedANRResultsAvailable;

typedef struct NhuRRCConSetupCompl_va40ext_IEs
{
 TknPres pres;
 NhuRRCConSetupCompl_va40ext_IEsloggedMeasAvailable loggedMeasAvailable;
 NhuRRCConSetupCompl_va40ext_IEsloggedANRResultsAvailable loggedANRResultsAvailable;
} NhuRRCConSetupCompl_va40ext_IEs;


typedef TknStrOSXL NhuSys_Info_ContsysInfoTyp12;
typedef struct NhuSys_Info_ContnonCriticalExtns
{
 TknPres pres;
} NhuSys_Info_ContnonCriticalExtns;

typedef struct NhuSys_Info_Cont
{
 TknPres pres;
 NhuSys_Info_ContsysInfoTyp12 sysInfoTyp12;
 NhuSys_Info_ContnonCriticalExtns nonCriticalExtns;
} NhuSys_Info_Cont;

typedef struct NhuMSCH_Msg
{
 TknPres pres;
} NhuMSCH_Msg;


typedef TknStrOSXL NhuInterRATHovrInfoWithInterRATCapabilities_r3_IEsinterRATHovrInfo;
typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_r3_IEs
{
 TknPres pres;
 NhuInterRAT_UE_RadioAccessCapLst ue_RATSpecificCap;
 NhuInterRATHovrInfoWithInterRATCapabilities_r3_IEsinterRATHovrInfo interRATHovrInfo;
} NhuInterRATHovrInfoWithInterRATCapabilities_r3_IEs;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_v390ext_IEs
{
 TknPres pres;
 NhuFailCauseWithProtErr failureCauseWithProtErr;
} NhuInterRATHovrInfoWithInterRATCapabilities_v390ext_IEs;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_v690ext_IEs
{
 TknPres pres;
 NhuInterRAT_UE_RadioAccessCap_v690ext ue_RATSpecificCap_v690ext;
} NhuInterRATHovrInfoWithInterRATCapabilities_v690ext_IEs;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_v860ext_IEs
{
 TknPres pres;
 NhuInterRAT_UE_RadioAccessCap_v860ext ue_RATSpecificCap;
} NhuInterRATHovrInfoWithInterRATCapabilities_v860ext_IEs;


typedef TknU32 NhuInterRATHovrInfoWithInterRATCapabilities_v920ext_IEsue_Inactivity_Period;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_v920ext_IEs
{
 TknPres pres;
 NhuInterRATHovrInfoWithInterRATCapabilities_v920ext_IEsue_Inactivity_Period ue_Inactivity_Period;
} NhuInterRATHovrInfoWithInterRATCapabilities_v920ext_IEs;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsnonCriticalExtns;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfoWithInterRATCapabilities_v920ext_IEs interRATHovrInfoWithInterRATCapabilities_v920ext;
 NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtns;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtnsv860NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfoWithInterRATCapabilities_v860ext_IEs interRATHovrInfoWithInterRATCapabilities_v860ext;
 NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtnsv860NonCriticalExtnsv920NonCriticalExtns v920NonCriticalExtns;
} NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtnsv860NonCriticalExtns;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfoWithInterRATCapabilities_v690ext_IEs interRATHovrInfoWithInterRATCapabilities_v690ext;
 NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtnsv860NonCriticalExtns v860NonCriticalExtns;
} NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtns;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtns
{
 TknPres pres;
 NhuInterRATHovrInfoWithInterRATCapabilities_v390ext_IEs interRATHovrInfoWithInterRATCapabilities_v390ext;
 NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtnsv690NonCriticalExtns v690NonCriticalExtns;
} NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtns;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_r3r3
{
 TknPres pres;
 NhuInterRATHovrInfoWithInterRATCapabilities_r3_IEs interRATHovrInfo_r3;
 NhuInterRATHovrInfoWithInterRATCapabilities_r3r3v390NonCriticalExtns v390NonCriticalExtns;
} NhuInterRATHovrInfoWithInterRATCapabilities_r3r3;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_r3criticalExtns
{
 TknPres pres;
} NhuInterRATHovrInfoWithInterRATCapabilities_r3criticalExtns;

typedef struct NhuInterRATHovrInfoWithInterRATCapabilities_r3
{
 TknU8 choice;
 union {
  NhuInterRATHovrInfoWithInterRATCapabilities_r3r3 r3;
  NhuInterRATHovrInfoWithInterRATCapabilities_r3criticalExtns criticalExtns;
 } val;
} NhuInterRATHovrInfoWithInterRATCapabilities_r3;


typedef enum enumNhuStateOfRRC
{
 NhuStateOfRRCcell_DCHEnum,
 NhuStateOfRRCcell_FACHEnum,
 NhuStateOfRRCcell_PCHEnum,
 NhuStateOfRRCura_PCHEnum
} EnumNhuStateOfRRC;
typedef TknU32 NhuStateOfRRC;


typedef enum enumNhuStateOfRRC_Procedure
{
 NhuStateOfRRC_ProcedureawaitNoRRC_MsgEnum,
 NhuStateOfRRC_ProcedureawaitRB_RlsComplEnum,
 NhuStateOfRRC_ProcedureawaitRB_SetupComplEnum,
 NhuStateOfRRC_ProcedureawaitRB_RecfgnComplEnum,
 NhuStateOfRRC_ProcedureawaitTportCH_RecfgnComplEnum,
 NhuStateOfRRC_ProcedureawaitPhysicalCH_RecfgnComplEnum,
 NhuStateOfRRC_ProcedureawaitActiveSetUpdComplEnum,
 NhuStateOfRRC_ProcedureawaitHovrComplEnum,
 NhuStateOfRRC_ProceduresendCellUpdConfirmEnum,
 NhuStateOfRRC_ProceduresendUraUpdConfirmEnum,
 NhuStateOfRRC_ProceduredummyEnum,
 NhuStateOfRRC_ProcedureotherStatesEnum
} EnumNhuStateOfRRC_Procedure;
typedef TknU32 NhuStateOfRRC_Procedure;


typedef enum enumNhuCipheringStatus
{
 NhuCipheringStatusstartedEnum,
 NhuCipheringStatusnotStartedEnum
} EnumNhuCipheringStatus;
typedef TknU32 NhuCipheringStatus;


typedef TknU32 NhuCalculationTimeForCipheringsfn;

typedef struct NhuCalculationTimeForCiphering
{
 TknPres pres;
 NhuCellIdentity cell_Id;
 NhuCalculationTimeForCipheringsfn sfn;
} NhuCalculationTimeForCiphering;


typedef TknStrBSXL NhuCipheringInfoPerRBdl_HFN;

typedef TknStrBSXL NhuCipheringInfoPerRBul_HFN;
typedef struct NhuCipheringInfoPerRB
{
 TknPres pres;
 NhuCipheringInfoPerRBdl_HFN dl_HFN;
 NhuCipheringInfoPerRBul_HFN ul_HFN;
} NhuCipheringInfoPerRB;

typedef struct NhuCipheringInfoPerRB_Lst
{
 TknU16 noComp;
 NhuCipheringInfoPerRB *member;
}NhuCipheringInfoPerRB_Lst;


typedef TknStrBSXL NhuCOUNT_CSinglecount_C;
typedef struct NhuCOUNT_CSingle
{
 TknPres pres;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuCOUNT_CSinglecount_C count_C;
} NhuCOUNT_CSingle;

typedef struct NhuCOUNT_C_Lst
{
 TknU16 noComp;
 NhuCOUNT_CSingle *member;
}NhuCOUNT_C_Lst;


typedef enum enumNhuIntegrityProtectionStatus
{
 NhuIntegrityProtectionStatusstartedEnum,
 NhuIntegrityProtectionStatusnotStartedEnum
} EnumNhuIntegrityProtectionStatus;
typedef TknU32 NhuIntegrityProtectionStatus;


typedef TknStrBSXL NhuSRB_SpecificIntegrityProtInfoul_RRC_HFN;

typedef TknStrBSXL NhuSRB_SpecificIntegrityProtInfodl_RRC_HFN;
typedef struct NhuSRB_SpecificIntegrityProtInfo
{
 TknPres pres;
 NhuSRB_SpecificIntegrityProtInfoul_RRC_HFN ul_RRC_HFN;
 NhuSRB_SpecificIntegrityProtInfodl_RRC_HFN dl_RRC_HFN;
 NhuRRC_MsgSequenceNumber ul_RRC_SequenceNumber;
 NhuRRC_MsgSequenceNumber dl_RRC_SequenceNumber;
} NhuSRB_SpecificIntegrityProtInfo;

typedef struct NhuSRB_SpecificIntegrityProtInfoLst
{
 TknU16 noComp;
 NhuSRB_SpecificIntegrityProtInfo *member;
}NhuSRB_SpecificIntegrityProtInfoLst;


typedef TknStrBSXL NhuImplementationSpecificParams;

typedef TknU32 NhuUE_Positioning_LastKnownPossfn;

typedef struct NhuUE_Positioning_LastKnownPos
{
 TknPres pres;
 NhuUE_Positioning_LastKnownPossfn sfn;
 NhuCellIdentity cell_id;
 NhuPositionEstimate positionEstimate;
} NhuUE_Positioning_LastKnownPos;

typedef struct NhuMeasurementCmdWithTyp
{
 TknU8 choice;
 union {
  NhuMeasurementTyp setup;
 } val;
} NhuMeasurementCmdWithTyp;

typedef struct NhuOngoingMeasRep
{
 TknPres pres;
 NhuMeasurementIdentity measurementIdentity;
 NhuMeasurementCmdWithTyp measurementCmdWithTyp;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuAdditionalMeasurementID_Lst additionalMeasurementID_Lst;
} NhuOngoingMeasRep;

typedef struct NhuOngoingMeasRepLst
{
 TknU16 noComp;
 NhuOngoingMeasRep *member;
}NhuOngoingMeasRepLst;

typedef struct NhuSRNC_RelocationInfo_r3_IEsmodeSpecificInfofdd
{
 TknPres pres;
 NhuCPCH_SetID dummy;
 NhuDRAC_StaticInfoLst dummy2;
} NhuSRNC_RelocationInfo_r3_IEsmodeSpecificInfofdd;

typedef struct NhuSRNC_RelocationInfo_r3_IEsmodeSpecificInfo
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3_IEsmodeSpecificInfofdd fdd;
 } val;
} NhuSRNC_RelocationInfo_r3_IEsmodeSpecificInfo;

typedef struct NhuSRNC_RelocationInfo_r3_IEs
{
 TknPres pres;
 NhuStateOfRRC stateOfRRC;
 NhuStateOfRRC_Procedure stateOfRRC_Procedure;
 NhuCipheringStatus cipheringStatus;
 NhuCalculationTimeForCiphering calculationTimeForCiphering;
 NhuCipheringInfoPerRB_Lst cipheringInfoPerRB_Lst;
 NhuCOUNT_C_Lst count_C_Lst;
 NhuIntegrityProtectionStatus integrityProtectionStatus;
 NhuSRB_SpecificIntegrityProtInfoLst srb_SpecificIntegrityProtInfo;
 NhuImplementationSpecificParams implementationSpecificParams;
 NhuU_RNTI u_RNTI;
 NhuC_RNTI c_RNTI;
 NhuUE_RadioAccessCap ue_RadioAccessCap;
 NhuUE_Positioning_LastKnownPos ue_Positioning_LastKnownPos;
 NhuInterRAT_UE_RadioAccessCapLst ue_RATSpecificCap;
 NhuURA_Identity ura_Identity;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLst cn_DomainInfoLst;
 NhuOngoingMeasRepLst ongoingMeasRepLst;
 NhuPredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuSRB_InfoSetupLst srb_InfoLst;
 NhuRAB_InfoSetupLst rab_InfoLst;
 NhuUL_CmnTransChInfo ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst ul_TransChInfoLst;
 NhuSRNC_RelocationInfo_r3_IEsmodeSpecificInfo modeSpecificInfo;
 NhuDL_CmnTransChInfo dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst dl_TransChInfoLst;
 Nhu3gMeasurementReport measurementReport;
} NhuSRNC_RelocationInfo_r3_IEs;

typedef struct NhuCipheringStatusCNdomain
{
 TknPres pres;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuCipheringStatus cipheringStatus;
} NhuCipheringStatusCNdomain;

typedef struct NhuCipheringStatusLst
{
 TknU16 noComp;
 NhuCipheringStatusCNdomain *member;
}NhuCipheringStatusLst;

typedef struct NhuSRNC_RelocationInfo_v380ext_IEs
{
 TknPres pres;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuCipheringStatusLst cipheringStatusLst;
} NhuSRNC_RelocationInfo_v380ext_IEs;

typedef struct NhuCN_DomainInfo_v390ext
{
 TknPres pres;
 NhuCN_DRX_CycleLengthCoefficient cn_DRX_CycleLengthCoeff;
} NhuCN_DomainInfo_v390ext;

typedef struct NhuCN_DomainInfoLst_v390ext
{
 TknU16 noComp;
 NhuCN_DomainInfo_v390ext *member;
}NhuCN_DomainInfoLst_v390ext;

typedef struct NhuSRNC_RelocationInfo_v390ext_IEs
{
 TknPres pres;
 NhuCN_DomainInfoLst_v390ext cn_DomainInfoLst_v390ext;
 NhuUE_RadioAccessCap_v370ext ue_RadioAccessCap_v370ext;
 NhuUE_RadioAccessCap_v380ext ue_RadioAccessCap_v380ext;
 NhuDL_PhysChCapFDD_v380ext dl_PhysChCapFDD_v380ext;
 NhuFailCauseWithProtErr failureCauseWithProtErr;
} NhuSRNC_RelocationInfo_v390ext_IEs;


typedef TknStrBSXL NhuCipheringInfoPerRB_Lst_v3a0extdl_UM_SN;
typedef struct NhuCipheringInfoPerRB_Lst_v3a0ext
{
 TknPres pres;
 NhuCipheringInfoPerRB_Lst_v3a0extdl_UM_SN dl_UM_SN;
} NhuCipheringInfoPerRB_Lst_v3a0ext;

typedef struct NhuSRNC_RelocationInfo_v3a0ext_IEs
{
 TknPres pres;
 NhuCipheringInfoPerRB_Lst_v3a0ext cipheringInfoForSRB1_v3a0ext;
 NhuUE_RadioAccessCap_v3a0ext ue_RadioAccessCap_v3a0ext;
 NhuSTART_Value startValueForCiphering_v3a0ext;
} NhuSRNC_RelocationInfo_v3a0ext_IEs;

typedef struct NhuSTARTLst2
{
 TknU16 noComp;
 NhuSTARTSingle *member;
}NhuSTARTLst2;

typedef struct NhuSRNC_RelocationInfo_v3b0ext_IEs
{
 TknPres pres;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuSTARTLst2 startValueForCiphering_v3b0ext;
} NhuSRNC_RelocationInfo_v3b0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v3c0ext_IEs
{
 TknPres pres;
 NhuRB_Identity rb_IdentityForHOMsg;
} NhuSRNC_RelocationInfo_v3c0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v3d0ext_IEs
{
 TknPres pres;
 NhuUESpecificBehaviourInfo1idle uESpecificBehaviourInfo1idle;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
} NhuSRNC_RelocationInfo_v3d0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v3g0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v3g0ext ue_RadioAccessCap_v3g0ext;
} NhuSRNC_RelocationInfo_v3g0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v4b0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v4b0ext ue_RadioAccessCap_v4b0ext;
} NhuSRNC_RelocationInfo_v4b0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v590ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v590ext ue_RadioAccessCap_v590ext;
 NhuInterRAT_UE_RadioAccessCap_v590ext ue_RATSpecificCap_v590ext;
} NhuSRNC_RelocationInfo_v590ext_IEs;

typedef struct NhuStoredTGP_Sequencecurrent_tgps_Statusactive
{
 TknPres pres;
 NhuTGCFN tgcfn;
} NhuStoredTGP_Sequencecurrent_tgps_Statusactive;

typedef struct NhuStoredTGP_Sequencecurrent_tgps_Status
{
 TknU8 choice;
 union {
  NhuStoredTGP_Sequencecurrent_tgps_Statusactive active;
 } val;
} NhuStoredTGP_Sequencecurrent_tgps_Status;

typedef struct NhuStoredTGP_Sequence
{
 TknPres pres;
 NhuTGPSI tgpsi;
 NhuStoredTGP_Sequencecurrent_tgps_Status current_tgps_Status;
 NhuTGPS_CfgParams tgps_CfgParams;
} NhuStoredTGP_Sequence;

typedef struct NhuStoredTGP_SequenceLst
{
 TknU16 noComp;
 NhuStoredTGP_Sequence *member;
}NhuStoredTGP_SequenceLst;

typedef struct NhuCodeChangeStatus
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuScramblingCodeChange scramblingCodeChange;
} NhuCodeChangeStatus;

typedef struct NhuCodeChangeStatusLst
{
 TknU16 noComp;
 NhuCodeChangeStatus *member;
}NhuCodeChangeStatusLst;

typedef struct NhuStoredCompressedModeInfo
{
 TknPres pres;
 NhuStoredTGP_SequenceLst storedTGP_SequenceLst;
 NhuCodeChangeStatusLst codeChangeStatusLst;
} NhuStoredCompressedModeInfo;

typedef struct NhuSRNC_RelocationInfo_v5a0ext_IEs
{
 TknPres pres;
 NhuStoredCompressedModeInfo storedCompressedModeInfo;
} NhuSRNC_RelocationInfo_v5a0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v5b0ext_IEs
{
 TknPres pres;
 NhuInterRATCellInfoInd interRATCellInfoInd;
} NhuSRNC_RelocationInfo_v5b0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v5c0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v5c0ext ue_RadioAccessCap_v5c0ext;
} NhuSRNC_RelocationInfo_v5c0ext_IEs;

typedef struct NhuIntraFreqRprtngCriteria_r6_ext
{
 TknPres pres;
 NhuEvent1j_r6 event;
 NhuHysteresis hysteresis;
 Nhu3gTimeToTrigger timeToTrigger;
 NhuRprtngCellStatus reportingCellStatus;
} NhuIntraFreqRprtngCriteria_r6_ext;


typedef TknStrBSXL NhuSRNC_RelocationInfo_v690ext_IEsueCapCont;

typedef TknStrBSXL NhuSRNC_RelocationInfo_v690ext_IEsueCapCont_RSC;

typedef TknStrBSXL NhuSRNC_RelocationInfo_v690ext_IEsueCapCont_UCI;
typedef struct NhuSRNC_RelocationInfo_v690ext_IEs
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v690ext_IEsueCapCont ueCapCont;
 NhuSRNC_RelocationInfo_v690ext_IEsueCapCont_RSC ueCapCont_RSC;
 NhuSRNC_RelocationInfo_v690ext_IEsueCapCont_UCI ueCapCont_UCI;
 NhuRAB_InfoSetupLst_r6_ext rab_InfoSetupLst;
 NhuMeasuredResultsOnRACHinterFreq measuredResultsOnRACHinterFreq;
 NhuMBMS_JoinedInfo_r6 mbms_JoinedInfo;
 NhuIntraFreqRprtngCriteria_r6_ext intraFreqRprtngCriteria;
} NhuSRNC_RelocationInfo_v690ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v6b0ext_IEs
{
 TknPres pres;
 NhuRAB_InfoSetupLst_v6b0ext rab_InfoSetupLstExt;
 NhuMBMS_SelectedServiceInfo mbmsSelectedServiceInfo;
} NhuSRNC_RelocationInfo_v6b0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v770ext_IEs
{
 TknPres pres;
 NhuThresholdSFN_GPS_TOW_us thresholdSFN_GPS_TOW_us;
 NhuT_305 srns_t_305;
} NhuSRNC_RelocationInfo_v770ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v7e0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v7e0ext ue_RadioAccessCap;
} NhuSRNC_RelocationInfo_v7e0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_v7f0ext_IEs
{
 TknPres pres;
 NhuUE_RadioAccessCap_v7f0ext ue_RadioAccessCap;
} NhuSRNC_RelocationInfo_v7f0ext_IEs;

typedef struct NhuCipheringStatusCNdomain_r4
{
 TknPres pres;
 NhuCN_DomainIdentity cn_DomainIdentity;
 NhuCipheringStatus cipheringStatus;
 NhuSTART_Value start_Value;
} NhuCipheringStatusCNdomain_r4;

typedef struct NhuCipheringStatusLst_r4
{
 TknU16 noComp;
 NhuCipheringStatusCNdomain_r4 *member;
}NhuCipheringStatusLst_r4;


typedef TknStrBSXL NhuCipheringInfoPerRB_r4dl_HFN;

typedef TknStrBSXL NhuCipheringInfoPerRB_r4dl_UM_SN;

typedef TknStrBSXL NhuCipheringInfoPerRB_r4ul_HFN;
typedef struct NhuCipheringInfoPerRB_r4
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuCipheringInfoPerRB_r4dl_HFN dl_HFN;
 NhuCipheringInfoPerRB_r4dl_UM_SN dl_UM_SN;
 NhuCipheringInfoPerRB_r4ul_HFN ul_HFN;
} NhuCipheringInfoPerRB_r4;

typedef struct NhuCipheringInfoPerRB_Lst_r4
{
 TknU16 noComp;
 NhuCipheringInfoPerRB_r4 *member;
}NhuCipheringInfoPerRB_Lst_r4;


typedef TknU8 NhuPDCP_Cap_r4losslessSRNS_RelocationSupport;

typedef struct NhuPDCP_Cap_r4supportForRfc2507
{
 TknU8 choice;
 union {
  NhuMaxHcCtxtSpace supported;
 } val;
} NhuPDCP_Cap_r4supportForRfc2507;


typedef TknU32 NhuPDCP_Cap_r4supportForRfc3095supportedreverseCompressionDepth;

typedef struct NhuPDCP_Cap_r4supportForRfc3095supported
{
 TknPres pres;
 NhuMaxROHC_CtxtSessions_r4 maxROHC_CtxtSessions;
 NhuPDCP_Cap_r4supportForRfc3095supportedreverseCompressionDepth reverseCompressionDepth;
} NhuPDCP_Cap_r4supportForRfc3095supported;

typedef struct NhuPDCP_Cap_r4supportForRfc3095
{
 TknU8 choice;
 union {
  NhuPDCP_Cap_r4supportForRfc3095supported supported;
 } val;
} NhuPDCP_Cap_r4supportForRfc3095;

typedef struct NhuPDCP_Cap_r4
{
 TknPres pres;
 NhuPDCP_Cap_r4losslessSRNS_RelocationSupport losslessSRNS_RelocationSupport;
 NhuPDCP_Cap_r4supportForRfc2507 supportForRfc2507;
 NhuPDCP_Cap_r4supportForRfc3095 supportForRfc3095;
} NhuPDCP_Cap_r4;

typedef struct NhuRF_Cap_r4fddRF_Cap
{
 TknPres pres;
 NhuUE_PowerClassExt ue_PowerClass;
 NhuTxRxFrequencySeparation txRxFrequencySeparation;
} NhuRF_Cap_r4fddRF_Cap;

typedef struct NhuRF_Cap_r4tdd384_RF_Cap
{
 TknPres pres;
 NhuUE_PowerClassExt ue_PowerClass;
 NhuRadioFrequencyBandTDDLst radioFrequencyBandTDDLst;
 NhuChipRateCap chipRateCap;
} NhuRF_Cap_r4tdd384_RF_Cap;

typedef struct NhuRF_Cap_r4tdd128_RF_Cap
{
 TknPres pres;
 NhuUE_PowerClassExt ue_PowerClass;
 NhuRadioFrequencyBandTDDLst radioFrequencyBandTDDLst;
 NhuChipRateCap chipRateCap;
} NhuRF_Cap_r4tdd128_RF_Cap;

typedef struct NhuRF_Cap_r4
{
 TknPres pres;
 NhuRF_Cap_r4fddRF_Cap fddRF_Cap;
 NhuRF_Cap_r4tdd384_RF_Cap tdd384_RF_Cap;
 NhuRF_Cap_r4tdd128_RF_Cap tdd128_RF_Cap;
} NhuRF_Cap_r4;


typedef TknU32 NhuDL_PhysChCapFDD_r4maxNoDPCH_PDSCH_Codes;


typedef TknU8 NhuDL_PhysChCapFDD_r4supportForSF_512;


typedef TknU8 NhuDL_PhysChCapFDD_r4dummy;

typedef struct NhuDL_PhysChCapFDD_r4
{
 TknPres pres;
 NhuDL_PhysChCapFDD_r4maxNoDPCH_PDSCH_Codes maxNoDPCH_PDSCH_Codes;
 NhuMaxNoPhysChBitsReceived maxNoPhysChBitsReceived;
 NhuDL_PhysChCapFDD_r4supportForSF_512 supportForSF_512;
 NhuDL_PhysChCapFDD_r4dummy dummy;
 NhuSimultaneousSCCPCH_DPCH_Reception dummy2;
 NhuSupportOfDedicatedPilotsForChEstimation dummy3;
} NhuDL_PhysChCapFDD_r4;

typedef struct NhuPhysicalChannelCap_r4fddPhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapFDD_r4 downlinkPhysChCap;
 NhuUL_PhysChCapFDD uplinkPhysChCap;
} NhuPhysicalChannelCap_r4fddPhysChCap;

typedef struct NhuPhysicalChannelCap_r4tdd384_PhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapTDD downlinkPhysChCap;
 NhuUL_PhysChCapTDD uplinkPhysChCap;
} NhuPhysicalChannelCap_r4tdd384_PhysChCap;

typedef struct NhuPhysicalChannelCap_r4tdd128_PhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapTDD_LCR_r4 downlinkPhysChCap;
 NhuUL_PhysChCapTDD_LCR_r4 uplinkPhysChCap;
} NhuPhysicalChannelCap_r4tdd128_PhysChCap;

typedef struct NhuPhysicalChannelCap_r4
{
 TknPres pres;
 NhuPhysicalChannelCap_r4fddPhysChCap fddPhysChCap;
 NhuPhysicalChannelCap_r4tdd384_PhysChCap tdd384_PhysChCap;
 NhuPhysicalChannelCap_r4tdd128_PhysChCap tdd128_PhysChCap;
} NhuPhysicalChannelCap_r4;


typedef TknU8 NhuUE_Positioning_Cap_r4standaloneLocMethodsSupp;


typedef TknU8 NhuUE_Positioning_Cap_r4ue_BasedOTDOA_Supp;


typedef TknU8 NhuUE_Positioning_Cap_r4supportForUE_GPS_TimingOfCellFrames;


typedef TknU8 NhuUE_Positioning_Cap_r4supportForIPDL;


typedef TknU8 NhuUE_Positioning_Cap_r4rx_tx_TimeDifferenceTyp2Capable;


typedef enum enumNhuUE_Positioning_Cap_r4validity_CellPCH_UraPCH
{
 NhuUE_Positioning_Cap_r4validity_CellPCH_UraPCHtrueEnum
} EnumNhuUE_Positioning_Cap_r4validity_CellPCH_UraPCH;
typedef TknU32 NhuUE_Positioning_Cap_r4validity_CellPCH_UraPCH;


typedef enum enumNhuUE_Positioning_Cap_r4sfn_sfnTyp2Cap
{
 NhuUE_Positioning_Cap_r4sfn_sfnTyp2CaptrueEnum
} EnumNhuUE_Positioning_Cap_r4sfn_sfnTyp2Cap;
typedef TknU32 NhuUE_Positioning_Cap_r4sfn_sfnTyp2Cap;

typedef struct NhuUE_Positioning_Cap_r4
{
 TknPres pres;
 NhuUE_Positioning_Cap_r4standaloneLocMethodsSupp standaloneLocMethodsSupp;
 NhuUE_Positioning_Cap_r4ue_BasedOTDOA_Supp ue_BasedOTDOA_Supp;
 NhuNwAssistedGPS_Supp networkAssistedGPS_Supp;
 NhuUE_Positioning_Cap_r4supportForUE_GPS_TimingOfCellFrames supportForUE_GPS_TimingOfCellFrames;
 NhuUE_Positioning_Cap_r4supportForIPDL supportForIPDL;
 NhuUE_Positioning_Cap_r4rx_tx_TimeDifferenceTyp2Capable rx_tx_TimeDifferenceTyp2Capable;
 NhuUE_Positioning_Cap_r4validity_CellPCH_UraPCH validity_CellPCH_UraPCH;
 NhuUE_Positioning_Cap_r4sfn_sfnTyp2Cap sfn_sfnTyp2Cap;
} NhuUE_Positioning_Cap_r4;


typedef TknU8 NhuCompressedModeMeasCap_r4fdd_Measurements;


typedef TknU8 NhuCompressedModeMeasCap_r4tdd384_Measurements;


typedef TknU8 NhuCompressedModeMeasCap_r4tdd128_Measurements;


typedef TknU8 NhuCompressedModeMeasCap_r4multiCarrierMeasurements;

typedef struct NhuCompressedModeMeasCap_r4
{
 TknPres pres;
 NhuCompressedModeMeasCap_r4fdd_Measurements fdd_Measurements;
 NhuCompressedModeMeasCap_r4tdd384_Measurements tdd384_Measurements;
 NhuCompressedModeMeasCap_r4tdd128_Measurements tdd128_Measurements;
 NhuGSM_Measurements gsm_Measurements;
 NhuCompressedModeMeasCap_r4multiCarrierMeasurements multiCarrierMeasurements;
} NhuCompressedModeMeasCap_r4;

typedef struct NhuMeasurementCap_r4
{
 TknPres pres;
 NhuCompressedModeMeasCap_r4 downlinkCompressedMode;
 NhuCompressedModeMeasCap_r4 uplinkCompressedMode;
} NhuMeasurementCap_r4;

typedef struct NhuUE_RadioAccessCap_r4
{
 TknPres pres;
 NhuAccessStratumRlsIndicator accessStratumRlsIndicator;
 NhuPDCP_Cap_r4 pdcp_Cap;
 NhuRLC_Cap rlc_Cap;
 NhuTportChannelCap transportChannelCap;
 NhuRF_Cap_r4 rf_Cap;
 NhuPhysicalChannelCap_r4 physicalChannelCap;
 NhuUE_MultiModeRAT_Cap ue_MultiModeRAT_Cap;
 NhuSecCap securityCap;
 NhuUE_Positioning_Cap_r4 ue_positioning_Cap;
 NhuMeasurementCap_r4 measurementCap;
} NhuUE_RadioAccessCap_r4;

typedef struct NhuMeasurementCmdWithTyp_r4
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r4 setup;
 } val;
} NhuMeasurementCmdWithTyp_r4;

typedef struct NhuOngoingMeasRep_r4
{
 TknPres pres;
 NhuMeasurementIdentity measurementIdentity;
 NhuMeasurementCmdWithTyp_r4 measurementCmdWithTyp;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuAdditionalMeasurementID_Lst additionalMeasurementID_Lst;
} NhuOngoingMeasRep_r4;

typedef struct NhuOngoingMeasRepLst_r4
{
 TknU16 noComp;
 NhuOngoingMeasRep_r4 *member;
}NhuOngoingMeasRepLst_r4;

typedef struct NhuSRNC_RelocationInfo_r4_IEsdummyfdd
{
 TknPres pres;
 NhuCPCH_SetID dummy1;
 NhuDRAC_StaticInfoLst dummy2;
} NhuSRNC_RelocationInfo_r4_IEsdummyfdd;

typedef struct NhuSRNC_RelocationInfo_r4_IEsdummy
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r4_IEsdummyfdd fdd;
 } val;
} NhuSRNC_RelocationInfo_r4_IEsdummy;

typedef struct NhuSRNC_RelocationInfo_r4_IEs
{
 TknPres pres;
 NhuRB_Identity rb_IdentityForHOMsg;
 NhuStateOfRRC stateOfRRC;
 NhuStateOfRRC_Procedure stateOfRRC_Procedure;
 NhuCipheringStatusLst_r4 cipheringStatusLst;
 NhuCN_DomainIdentity latestConfiguredCN_Domain;
 NhuCalculationTimeForCiphering calculationTimeForCiphering;
 NhuCOUNT_C_Lst count_C_Lst;
 NhuCipheringInfoPerRB_Lst_r4 cipheringInfoPerRB_Lst;
 NhuIntegrityProtectionStatus integrityProtectionStatus;
 NhuSRB_SpecificIntegrityProtInfoLst srb_SpecificIntegrityProtInfo;
 NhuImplementationSpecificParams implementationSpecificParams;
 NhuU_RNTI u_RNTI;
 NhuC_RNTI c_RNTI;
 NhuUE_RadioAccessCap_r4 ue_RadioAccessCap;
 NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCap_ext;
 NhuUE_Positioning_LastKnownPos ue_Positioning_LastKnownPos;
 NhuUESpecificBehaviourInfo1idle uESpecificBehaviourInfo1idle;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
 NhuInterRAT_UE_RadioAccessCapLst ue_RATSpecificCap;
 NhuURA_Identity ura_Identity;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLstFull cn_DomainInfoLst;
 NhuOngoingMeasRepLst_r4 ongoingMeasRepLst;
 NhuPredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuSRB_InfoSetupLst srb_InfoLst;
 NhuRAB_InfoSetupLst_r4 rab_InfoLst;
 NhuUL_CmnTransChInfo_r4 ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst ul_TransChInfoLst;
 NhuSRNC_RelocationInfo_r4_IEsdummy dummy;
 NhuDL_CmnTransChInfo_r4 dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst_r4 dl_TransChInfoLst;
 Nhu3gMeasurementReport measurementReport;
 NhuFailCauseWithProtErr failureCause;
} NhuSRNC_RelocationInfo_r4_IEs;

typedef struct NhuTPC_Combination_Info
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
} NhuTPC_Combination_Info;

typedef struct NhuTPC_CombinationInfoLst
{
 TknU16 noComp;
 NhuTPC_Combination_Info *member;
}NhuTPC_CombinationInfoLst;

typedef struct NhuSRNC_RelocationInfo_v4d0ext_IEs
{
 TknPres pres;
 NhuTPC_CombinationInfoLst tpc_CombinationInfoLst;
} NhuSRNC_RelocationInfo_v4d0ext_IEs;


typedef enum enumNhuMaxHcCtxtSpace_r5
{
 NhuMaxHcCtxtSpace_r5dummyEnum,
 NhuMaxHcCtxtSpace_r5by1024Enum,
 NhuMaxHcCtxtSpace_r5by2048Enum,
 NhuMaxHcCtxtSpace_r5by4096Enum,
 NhuMaxHcCtxtSpace_r5by8192Enum,
 NhuMaxHcCtxtSpace_r5by16384Enum,
 NhuMaxHcCtxtSpace_r5by32768Enum,
 NhuMaxHcCtxtSpace_r5by65536Enum,
 NhuMaxHcCtxtSpace_r5by131072Enum
} EnumNhuMaxHcCtxtSpace_r5;
typedef TknU32 NhuMaxHcCtxtSpace_r5;


typedef TknU8 NhuPDCP_Cap_r5losslessSRNS_RelocationSupport;

typedef struct NhuPDCP_Cap_r5supportForRfc2507
{
 TknU8 choice;
 union {
  NhuMaxHcCtxtSpace_r5 supported;
 } val;
} NhuPDCP_Cap_r5supportForRfc2507;


typedef TknU32 NhuPDCP_Cap_r5supportForRfc3095supportedreverseCompressionDepth;


typedef TknU8 NhuPDCP_Cap_r5supportForRfc3095supportedsupportForRfc3095CtxtRelocation;

typedef struct NhuPDCP_Cap_r5supportForRfc3095supported
{
 TknPres pres;
 NhuMaxROHC_CtxtSessions_r4 maxROHC_CtxtSessions;
 NhuPDCP_Cap_r5supportForRfc3095supportedreverseCompressionDepth reverseCompressionDepth;
 NhuPDCP_Cap_r5supportForRfc3095supportedsupportForRfc3095CtxtRelocation supportForRfc3095CtxtRelocation;
} NhuPDCP_Cap_r5supportForRfc3095supported;

typedef struct NhuPDCP_Cap_r5supportForRfc3095
{
 TknU8 choice;
 union {
  NhuPDCP_Cap_r5supportForRfc3095supported supported;
 } val;
} NhuPDCP_Cap_r5supportForRfc3095;

typedef struct NhuPDCP_Cap_r5
{
 TknPres pres;
 NhuPDCP_Cap_r5losslessSRNS_RelocationSupport losslessSRNS_RelocationSupport;
 NhuPDCP_Cap_r5supportForRfc2507 supportForRfc2507;
 NhuPDCP_Cap_r5supportForRfc3095 supportForRfc3095;
} NhuPDCP_Cap_r5;


typedef enum enumNhuTotalRLC_AM_BufferSize_r5
{
 NhuTotalRLC_AM_BufferSize_r5kb10Enum,
 NhuTotalRLC_AM_BufferSize_r5kb50Enum,
 NhuTotalRLC_AM_BufferSize_r5kb100Enum,
 NhuTotalRLC_AM_BufferSize_r5kb150Enum,
 NhuTotalRLC_AM_BufferSize_r5kb200Enum,
 NhuTotalRLC_AM_BufferSize_r5kb300Enum,
 NhuTotalRLC_AM_BufferSize_r5kb400Enum,
 NhuTotalRLC_AM_BufferSize_r5kb500Enum,
 NhuTotalRLC_AM_BufferSize_r5kb750Enum,
 NhuTotalRLC_AM_BufferSize_r5kb1000Enum
} EnumNhuTotalRLC_AM_BufferSize_r5;
typedef TknU32 NhuTotalRLC_AM_BufferSize_r5;

typedef struct NhuRLC_Cap_r5
{
 TknPres pres;
 NhuTotalRLC_AM_BufferSize_r5 totalRLC_AM_BufferSize;
 NhuMaxRLC_WindowSize maximumRLC_WindowSize;
 NhuMaxAM_EntityNumberRLC_Cap maximumAM_EntityNumber;
} NhuRLC_Cap_r5;


typedef TknU32 NhuDL_PhysChCapFDD_r5maxNoDPCH_PDSCH_Codes;


typedef TknU8 NhuDL_PhysChCapFDD_r5supportForSF_512;


typedef TknU8 NhuDL_PhysChCapFDD_r5dummy;


typedef TknU8 NhuDL_PhysChCapFDD_r5fdd_hspdschsupporteddummy;


typedef TknU8 NhuDL_PhysChCapFDD_r5fdd_hspdschsupporteddummy2;

typedef struct NhuDL_PhysChCapFDD_r5fdd_hspdschsupported
{
 TknPres pres;
 NhuHSDSCH_physical_layer_category hsdsch_physical_layer_category;
 NhuDL_PhysChCapFDD_r5fdd_hspdschsupporteddummy dummy;
 NhuDL_PhysChCapFDD_r5fdd_hspdschsupporteddummy2 dummy2;
} NhuDL_PhysChCapFDD_r5fdd_hspdschsupported;

typedef struct NhuDL_PhysChCapFDD_r5fdd_hspdsch
{
 TknU8 choice;
 union {
  NhuDL_PhysChCapFDD_r5fdd_hspdschsupported supported;
 } val;
} NhuDL_PhysChCapFDD_r5fdd_hspdsch;

typedef struct NhuDL_PhysChCapFDD_r5
{
 TknPres pres;
 NhuDL_PhysChCapFDD_r5maxNoDPCH_PDSCH_Codes maxNoDPCH_PDSCH_Codes;
 NhuMaxNoPhysChBitsReceived maxNoPhysChBitsReceived;
 NhuDL_PhysChCapFDD_r5supportForSF_512 supportForSF_512;
 NhuDL_PhysChCapFDD_r5dummy dummy;
 NhuSimultaneousSCCPCH_DPCH_Reception dummy2;
 NhuSupportOfDedicatedPilotsForChEstimation dummy3;
 NhuDL_PhysChCapFDD_r5fdd_hspdsch fdd_hspdsch;
} NhuDL_PhysChCapFDD_r5;


typedef TknU8 NhuDL_PhysChCapTDD_r5supportOfPDSCH;

typedef struct NhuDL_PhysChCapTDD_r5tdd384_hspdsch
{
 TknU8 choice;
 union {
  NhuHSDSCH_physical_layer_category supported;
 } val;
} NhuDL_PhysChCapTDD_r5tdd384_hspdsch;

typedef struct NhuDL_PhysChCapTDD_r5
{
 TknPres pres;
 NhuMaxTS_PerFrame maxTS_PerFrame;
 NhuMaxPhysChPerFrame maxPhysChPerFrame;
 NhuMinimumSF_DL minimumSF;
 NhuDL_PhysChCapTDD_r5supportOfPDSCH supportOfPDSCH;
 NhuMaxPhysChPerTS maxPhysChPerTS;
 NhuDL_PhysChCapTDD_r5tdd384_hspdsch tdd384_hspdsch;
} NhuDL_PhysChCapTDD_r5;


typedef TknU8 NhuDL_PhysChCapTDD_LCR_r5supportOfPDSCH;


typedef TknU8 NhuDL_PhysChCapTDD_LCR_r5supportOf8PSK;

typedef struct NhuDL_PhysChCapTDD_LCR_r5tdd128_hspdsch
{
 TknU8 choice;
 union {
  NhuHSDSCH_physical_layer_category supported;
 } val;
} NhuDL_PhysChCapTDD_LCR_r5tdd128_hspdsch;

typedef struct NhuDL_PhysChCapTDD_LCR_r5
{
 TknPres pres;
 NhuMaxTS_PerSubFrame_r4 maxTS_PerSubFrame;
 NhuMaxPhysChPerSubFrame_r4 maxPhysChPerFrame;
 NhuMinimumSF_DL minimumSF;
 NhuDL_PhysChCapTDD_LCR_r5supportOfPDSCH supportOfPDSCH;
 NhuMaxPhysChPerTS maxPhysChPerTS;
 NhuDL_PhysChCapTDD_LCR_r5supportOf8PSK supportOf8PSK;
 NhuDL_PhysChCapTDD_LCR_r5tdd128_hspdsch tdd128_hspdsch;
} NhuDL_PhysChCapTDD_LCR_r5;

typedef struct NhuPhysicalChannelCap_r5fddPhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapFDD_r5 downlinkPhysChCap;
 NhuUL_PhysChCapFDD uplinkPhysChCap;
} NhuPhysicalChannelCap_r5fddPhysChCap;

typedef struct NhuPhysicalChannelCap_r5tdd384_PhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapTDD_r5 downlinkPhysChCap;
 NhuUL_PhysChCapTDD uplinkPhysChCap;
} NhuPhysicalChannelCap_r5tdd384_PhysChCap;

typedef struct NhuPhysicalChannelCap_r5tdd128_PhysChCap
{
 TknPres pres;
 NhuDL_PhysChCapTDD_LCR_r5 downlinkPhysChCap;
 NhuUL_PhysChCapTDD_LCR_r4 uplinkPhysChCap;
} NhuPhysicalChannelCap_r5tdd128_PhysChCap;

typedef struct NhuPhysicalChannelCap_r5
{
 TknPres pres;
 NhuPhysicalChannelCap_r5fddPhysChCap fddPhysChCap;
 NhuPhysicalChannelCap_r5tdd384_PhysChCap tdd384_PhysChCap;
 NhuPhysicalChannelCap_r5tdd128_PhysChCap tdd128_PhysChCap;
} NhuPhysicalChannelCap_r5;


typedef TknU8 NhuUE_MultiModeRAT_Cap_r5supportOfUTRAN_ToGERAN_NACC;

typedef struct NhuUE_MultiModeRAT_Cap_r5
{
 TknPres pres;
 NhuMultiRAT_Cap multiRAT_CapLst;
 NhuMultiModeCap multiModeCap;
 NhuUE_MultiModeRAT_Cap_r5supportOfUTRAN_ToGERAN_NACC supportOfUTRAN_ToGERAN_NACC;
} NhuUE_MultiModeRAT_Cap_r5;

typedef struct NhuUE_RadioAccessCap_r5
{
 TknPres pres;
 NhuAccessStratumRlsIndicator accessStratumRlsIndicator;
 NhuDL_CapWithSimultaneousHS_DSCHConfig dl_CapWithSimultaneousHS_DSCHConfig;
 NhuPDCP_Cap_r5 pdcp_Cap;
 NhuRLC_Cap_r5 rlc_Cap;
 NhuTportChannelCap transportChannelCap;
 NhuRF_Cap_r4 rf_Cap;
 NhuPhysicalChannelCap_r5 physicalChannelCap;
 NhuUE_MultiModeRAT_Cap_r5 ue_MultiModeRAT_Cap;
 NhuSecCap securityCap;
 NhuUE_Positioning_Cap_r4 ue_positioning_Cap;
 NhuMeasurementCap_r4 measurementCap;
} NhuUE_RadioAccessCap_r5;

typedef struct NhuInterRAT_UE_RadioAccessCapLst_r5
{
 TknPres pres;
 NhuInterRAT_UE_RadioAccessCapLst interRAT_UE_RadioAccessCap;
 NhuGERANIu_RadioAccessCap geranIu_RadioAccessCap;
} NhuInterRAT_UE_RadioAccessCapLst_r5;

typedef struct NhuOngoingMeasRep_r5measurementCmd_v590ext
{
 TknU8 choice;
 union {
  NhuIntra_FreqEventCriteriaLst_v590ext intra_frequency;
  NhuInter_FreqEventCriteriaLst_v590ext inter_frequency;
 } val;
} NhuOngoingMeasRep_r5measurementCmd_v590ext;

typedef struct NhuOngoingMeasRep_r5
{
 TknPres pres;
 NhuMeasurementIdentity measurementIdentity;
 NhuMeasurementCmdWithTyp_r4 measurementCmdWithTyp;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuAdditionalMeasurementID_Lst additionalMeasurementID_Lst;
 NhuOngoingMeasRep_r5measurementCmd_v590ext measurementCmd_v590ext;
 NhuIntraFreqRprtngCriteria_1b_r5 intraFreqRprtngCriteria_1b_r5;
 NhuIntraFreqEvent_1d_r5 intraFreqEvent_1d_r5;
} NhuOngoingMeasRep_r5;

typedef struct NhuOngoingMeasRepLst_r5
{
 TknU16 noComp;
 NhuOngoingMeasRep_r5 *member;
}NhuOngoingMeasRepLst_r5;

typedef struct NhuSRNC_RelocationInfo_r5_IEsdummyfdd
{
 TknPres pres;
 NhuCPCH_SetID dummy1;
 NhuDRAC_StaticInfoLst dummy2;
} NhuSRNC_RelocationInfo_r5_IEsdummyfdd;

typedef struct NhuSRNC_RelocationInfo_r5_IEsdummy
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r5_IEsdummyfdd fdd;
 } val;
} NhuSRNC_RelocationInfo_r5_IEsdummy;

typedef struct NhuSRNC_RelocationInfo_r5_IEs
{
 TknPres pres;
 NhuRB_Identity rb_IdentityForHOMsg;
 NhuStateOfRRC stateOfRRC;
 NhuStateOfRRC_Procedure stateOfRRC_Procedure;
 NhuCipheringStatusLst_r4 cipheringStatusLst;
 NhuCN_DomainIdentity latestConfiguredCN_Domain;
 NhuCalculationTimeForCiphering calculationTimeForCiphering;
 NhuCOUNT_C_Lst count_C_Lst;
 NhuCipheringInfoPerRB_Lst_r4 cipheringInfoPerRB_Lst;
 NhuIntegrityProtectionStatus integrityProtectionStatus;
 NhuSRB_SpecificIntegrityProtInfoLst srb_SpecificIntegrityProtInfo;
 NhuImplementationSpecificParams implementationSpecificParams;
 NhuU_RNTI u_RNTI;
 NhuC_RNTI c_RNTI;
 NhuUE_RadioAccessCap_r5 ue_RadioAccessCap;
 NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCap_ext;
 NhuUE_Positioning_LastKnownPos ue_Positioning_LastKnownPos;
 NhuUESpecificBehaviourInfo1idle uESpecificBehaviourInfo1idle;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
 NhuInterRAT_UE_RadioAccessCapLst_r5 ue_RATSpecificCap;
 NhuURA_Identity ura_Identity;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLstFull cn_DomainInfoLst;
 NhuOngoingMeasRepLst_r5 ongoingMeasRepLst;
 NhuPredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuSRB_InfoSetupLst_r5 srb_InfoLst;
 NhuRAB_InfoSetupLst_r5 rab_InfoLst;
 NhuUL_CmnTransChInfo_r4 ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst ul_TransChInfoLst;
 NhuSRNC_RelocationInfo_r5_IEsdummy dummy;
 NhuDL_CmnTransChInfo_r4 dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst_r5 dl_TransChInfoLst;
 NhuTPC_CombinationInfoLst tpc_CombinationInfoLst;
 Nhu3gMeasurementReport measurementReport;
 NhuFailCauseWithProtErr failureCause;
} NhuSRNC_RelocationInfo_r5_IEs;


typedef TknU8 NhuPDCP_Cap_r6losslessSRNS_RelocationSupport;


typedef enum enumNhuPDCP_Cap_r6losslessDLRLC_PDUSizeChange
{
 NhuPDCP_Cap_r6losslessDLRLC_PDUSizeChangetrueEnum
} EnumNhuPDCP_Cap_r6losslessDLRLC_PDUSizeChange;
typedef TknU32 NhuPDCP_Cap_r6losslessDLRLC_PDUSizeChange;

typedef struct NhuPDCP_Cap_r6supportForRfc2507
{
 TknU8 choice;
 union {
  NhuMaxHcCtxtSpace_r5 supported;
 } val;
} NhuPDCP_Cap_r6supportForRfc2507;


typedef TknU32 NhuPDCP_Cap_r6supportForRfc3095supportedreverseCompressionDepth;


typedef TknU8 NhuPDCP_Cap_r6supportForRfc3095supportedsupportForRfc3095CtxtRelocation;

typedef struct NhuPDCP_Cap_r6supportForRfc3095supported
{
 TknPres pres;
 NhuMaxROHC_CtxtSessions_r4 maxROHC_CtxtSessions;
 NhuPDCP_Cap_r6supportForRfc3095supportedreverseCompressionDepth reverseCompressionDepth;
 NhuPDCP_Cap_r6supportForRfc3095supportedsupportForRfc3095CtxtRelocation supportForRfc3095CtxtRelocation;
} NhuPDCP_Cap_r6supportForRfc3095supported;

typedef struct NhuPDCP_Cap_r6supportForRfc3095
{
 TknU8 choice;
 union {
  NhuPDCP_Cap_r6supportForRfc3095supported supported;
 } val;
} NhuPDCP_Cap_r6supportForRfc3095;

typedef struct NhuPDCP_Cap_r6
{
 TknPres pres;
 NhuPDCP_Cap_r6losslessSRNS_RelocationSupport losslessSRNS_RelocationSupport;
 NhuPDCP_Cap_r6losslessDLRLC_PDUSizeChange losslessDLRLC_PDUSizeChange;
 NhuPDCP_Cap_r6supportForRfc2507 supportForRfc2507;
 NhuPDCP_Cap_r6supportForRfc3095 supportForRfc3095;
} NhuPDCP_Cap_r6;

typedef struct NhuUE_RadioAccessCap_r6
{
 TknPres pres;
 NhuAccessStratumRlsIndicator accessStratumRlsIndicator;
 NhuDL_CapWithSimultaneousHS_DSCHConfig dl_CapWithSimultaneousHS_DSCHConfig;
 NhuPDCP_Cap_r6 pdcp_Cap;
 NhuRLC_Cap_r5 rlc_Cap;
 NhuTportChannelCap transportChannelCap;
 NhuRF_Cap_r4 rf_Cap;
 NhuPhysicalChannelCap_r5 physicalChannelCap;
 NhuUE_MultiModeRAT_Cap_r5 ue_MultiModeRAT_Cap;
 NhuSecCap securityCap;
 NhuUE_Positioning_Cap_r4 ue_positioning_Cap;
 NhuMeasurementCap_r4 measurementCap;
} NhuUE_RadioAccessCap_r6;

typedef struct NhuMeasurementCmdWithTyp_r6
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r6 setup;
 } val;
} NhuMeasurementCmdWithTyp_r6;

typedef struct NhuOngoingMeasRep_r6
{
 TknPres pres;
 NhuMeasurementIdentity measurementIdentity;
 NhuMeasurementCmdWithTyp_r6 measurementCmdWithTyp;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuAdditionalMeasurementID_Lst additionalMeasurementID_Lst;
} NhuOngoingMeasRep_r6;

typedef struct NhuOngoingMeasRepLst_r6
{
 TknU16 noComp;
 NhuOngoingMeasRep_r6 *member;
}NhuOngoingMeasRepLst_r6;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r6_IEsueCapCont;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r6_IEsueCapCont_RSC;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r6_IEsueCapCont_UCI;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r6_IEsmeasurementReport;
typedef struct NhuSRNC_RelocationInfo_r6_IEs
{
 TknPres pres;
 NhuRB_Identity rb_IdentityForHOMsg;
 NhuStateOfRRC stateOfRRC;
 NhuStateOfRRC_Procedure stateOfRRC_Procedure;
 NhuCipheringStatusLst_r4 cipheringStatusLst;
 NhuCN_DomainIdentity latestConfiguredCN_Domain;
 NhuCalculationTimeForCiphering calculationTimeForCiphering;
 NhuCOUNT_C_Lst count_C_Lst;
 NhuCipheringInfoPerRB_Lst_r4 cipheringInfoPerRB_Lst;
 NhuIntegrityProtectionStatus integrityProtectionStatus;
 NhuSRB_SpecificIntegrityProtInfoLst srb_SpecificIntegrityProtInfo;
 NhuImplementationSpecificParams implementationSpecificParams;
 NhuU_RNTI u_RNTI;
 NhuC_RNTI c_RNTI;
 NhuUE_RadioAccessCap_r6 ue_RadioAccessCap;
 NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCap_ext;
 NhuUE_Positioning_LastKnownPos ue_Positioning_LastKnownPos;
 NhuUESpecificBehaviourInfo1idle uESpecificBehaviourInfo1idle;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
 NhuSRNC_RelocationInfo_r6_IEsueCapCont ueCapCont;
 NhuSRNC_RelocationInfo_r6_IEsueCapCont_RSC ueCapCont_RSC;
 NhuSRNC_RelocationInfo_r6_IEsueCapCont_UCI ueCapCont_UCI;
 NhuInterRAT_UE_RadioAccessCapLst_r5 ue_RATSpecificCap;
 NhuURA_Identity ura_Identity;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLstFull cn_DomainInfoLst;
 NhuOngoingMeasRepLst_r6 ongoingMeasRepLst;
 NhuInterRATCellInfoInd interRATCellInfoInd;
 NhuPredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuSRB_InfoSetupLst_r6 srb_InfoLst;
 NhuRAB_InfoSetupLst_r6 rab_InfoLst;
 NhuUL_CmnTransChInfo_r4 ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst_r6 ul_TransChInfoLst;
 NhuDL_CmnTransChInfo_r4 dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst_r5 dl_TransChInfoLst;
 NhuTPC_CombinationInfoLst tpc_CombinationInfoLst;
 NhuStoredCompressedModeInfo storedCompressedModeInfo;
 NhuSRNC_RelocationInfo_r6_IEsmeasurementReport measurementReport;
 NhuFailCauseWithProtErr failureCause;
 NhuMBMS_JoinedInfo_r6 mbms_JoinedInfo;
} NhuSRNC_RelocationInfo_r6_IEs;

typedef struct NhuSRNC_RelocationInfo_v820ext_IEs
{
 TknPres pres;
 NhuRAB_InfoSetupLst_v820ext rab_InfoLst;
} NhuSRNC_RelocationInfo_v820ext_IEs;


typedef TknU32 NhuE_RGCH_Combination_Inforg_CombinationIdx;

typedef struct NhuE_RGCH_Combination_Info
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuE_RGCH_Combination_Inforg_CombinationIdx rg_CombinationIdx;
} NhuE_RGCH_Combination_Info;

typedef struct NhuE_RGCH_CombinationInfoLst
{
 TknU16 noComp;
 NhuE_RGCH_Combination_Info *member;
}NhuE_RGCH_CombinationInfoLst;

typedef struct NhuSRNC_RelocationInfo_v860ext_IEs
{
 TknPres pres;
 NhuE_RGCH_CombinationInfoLst e_RGCH_CombinationInfoLst;
} NhuSRNC_RelocationInfo_v860ext_IEs;

typedef struct NhuMeasurementCmdWithTyp_r7
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r7 setup;
 } val;
} NhuMeasurementCmdWithTyp_r7;

typedef struct NhuOngoingMeasRep_r7
{
 TknPres pres;
 NhuMeasurementIdentity measurementIdentity;
 NhuMeasurementCmdWithTyp_r7 measurementCmdWithTyp;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuAdditionalMeasurementID_Lst additionalMeasurementID_Lst;
} NhuOngoingMeasRep_r7;

typedef struct NhuOngoingMeasRepLst_r7
{
 TknU16 noComp;
 NhuOngoingMeasRep_r7 *member;
}NhuOngoingMeasRepLst_r7;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r7_IEsueCapCont;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r7_IEsueCapCont_RSC;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r7_IEsueCapCont_UCI;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r7_IEsmeasurementReport;
typedef struct NhuSRNC_RelocationInfo_r7_IEs
{
 TknPres pres;
 NhuRB_Identity rb_IdentityForHOMsg;
 NhuStateOfRRC stateOfRRC;
 NhuStateOfRRC_Procedure stateOfRRC_Procedure;
 NhuCipheringStatusLst_r4 cipheringStatusLst;
 NhuCN_DomainIdentity latestConfiguredCN_Domain;
 NhuCalculationTimeForCiphering calculationTimeForCiphering;
 NhuCOUNT_C_Lst count_C_Lst;
 NhuCipheringInfoPerRB_Lst_r4 cipheringInfoPerRB_Lst;
 NhuIntegrityProtectionStatus integrityProtectionStatus;
 NhuSRB_SpecificIntegrityProtInfoLst srb_SpecificIntegrityProtInfo;
 NhuImplementationSpecificParams implementationSpecificParams;
 NhuU_RNTI u_RNTI;
 NhuC_RNTI c_RNTI;
 NhuUE_RadioAccessCap_r6 ue_RadioAccessCap;
 NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCap_ext;
 NhuUE_Positioning_LastKnownPos ue_Positioning_LastKnownPos;
 NhuUESpecificBehaviourInfo1idle uESpecificBehaviourInfo1idle;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
 NhuSRNC_RelocationInfo_r7_IEsueCapCont ueCapCont;
 NhuSRNC_RelocationInfo_r7_IEsueCapCont_RSC ueCapCont_RSC;
 NhuSRNC_RelocationInfo_r7_IEsueCapCont_UCI ueCapCont_UCI;
 NhuInterRAT_UE_RadioAccessCapLst_r5 ue_RATSpecificCap;
 NhuURA_Identity ura_Identity;
 NhuT_305 srns_t_305;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLstFull cn_DomainInfoLst;
 NhuOngoingMeasRepLst_r7 ongoingMeasRepLst;
 NhuInterRATCellInfoInd interRATCellInfoInd;
 NhuPredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuSRB_InfoSetupLst_r7 srb_InfoLst;
 NhuRAB_InfoSetupLst_r7 rab_InfoLst;
 NhuUL_CmnTransChInfo_r4 ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst_r7 ul_TransChInfoLst;
 NhuDL_CmnTransChInfo_r4 dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst_r7 dl_TransChInfoLst;
 NhuTPC_CombinationInfoLst tpc_CombinationInfoLst;
 NhuStoredCompressedModeInfo storedCompressedModeInfo;
 NhuSRNC_RelocationInfo_r7_IEsmeasurementReport measurementReport;
 NhuFailCauseWithProtErr failureCause;
 NhuMBMS_JoinedInfo_r6 mbms_JoinedInfo;
 NhuMBMS_SelectedServiceInfo mbmsSelectedServiceInfo;
} NhuSRNC_RelocationInfo_r7_IEs;

typedef struct NhuMeasurementCmdWithTyp_r8
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r8 setup;
 } val;
} NhuMeasurementCmdWithTyp_r8;

typedef struct NhuOngoingMeasRep_r8
{
 TknPres pres;
 NhuMeasurementIdentity measurementIdentity;
 NhuMeasurementCmdWithTyp_r8 measurementCmdWithTyp;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuAdditionalMeasurementID_Lst additionalMeasurementID_Lst;
} NhuOngoingMeasRep_r8;

typedef struct NhuOngoingMeasRepLst_r8
{
 TknU16 noComp;
 NhuOngoingMeasRep_r8 *member;
}NhuOngoingMeasRepLst_r8;

typedef struct NhuStoredTGP_Sequence_r8current_tgps_Statusactive
{
 TknPres pres;
 NhuTGCFN tgcfn;
} NhuStoredTGP_Sequence_r8current_tgps_Statusactive;

typedef struct NhuStoredTGP_Sequence_r8current_tgps_Status
{
 TknU8 choice;
 union {
  NhuStoredTGP_Sequence_r8current_tgps_Statusactive active;
 } val;
} NhuStoredTGP_Sequence_r8current_tgps_Status;

typedef struct NhuStoredTGP_Sequence_r8
{
 TknPres pres;
 NhuTGPSI tgpsi;
 NhuStoredTGP_Sequence_r8current_tgps_Status current_tgps_Status;
 NhuTGPS_CfgParams_r8 tgps_CfgParams;
} NhuStoredTGP_Sequence_r8;

typedef struct NhuStoredTGP_SequenceLst_r8
{
 TknU16 noComp;
 NhuStoredTGP_Sequence_r8 *member;
}NhuStoredTGP_SequenceLst_r8;

typedef struct NhuStoredCompressedModeInfo_r8
{
 TknPres pres;
 NhuStoredTGP_SequenceLst_r8 storedTGP_SequenceLst;
 NhuCodeChangeStatusLst codeChangeStatusLst;
} NhuStoredCompressedModeInfo_r8;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r8_IEsueCapCont;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r8_IEsueCapCont_RSC;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r8_IEsueCapCont_UCI;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r8_IEsmeasurementReport;
typedef struct NhuSRNC_RelocationInfo_r8_IEs
{
 TknPres pres;
 NhuRB_Identity rb_IdentityForHOMsg;
 NhuStateOfRRC stateOfRRC;
 NhuStateOfRRC_Procedure stateOfRRC_Procedure;
 NhuCipheringStatusLst_r4 cipheringStatusLst;
 NhuCN_DomainIdentity latestConfiguredCN_Domain;
 NhuCalculationTimeForCiphering calculationTimeForCiphering;
 NhuCOUNT_C_Lst count_C_Lst;
 NhuCipheringInfoPerRB_Lst_r4 cipheringInfoPerRB_Lst;
 NhuIntegrityProtectionStatus integrityProtectionStatus;
 NhuSRB_SpecificIntegrityProtInfoLst srb_SpecificIntegrityProtInfo;
 NhuImplementationSpecificParams implementationSpecificParams;
 NhuU_RNTI u_RNTI;
 NhuC_RNTI c_RNTI;
 NhuUE_RadioAccessCap_r6 ue_RadioAccessCap;
 NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCap_ext;
 NhuUE_Positioning_LastKnownPos ue_Positioning_LastKnownPos;
 NhuUESpecificBehaviourInfo1idle uESpecificBehaviourInfo1idle;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
 NhuSRNC_RelocationInfo_r8_IEsueCapCont ueCapCont;
 NhuSRNC_RelocationInfo_r8_IEsueCapCont_RSC ueCapCont_RSC;
 NhuSRNC_RelocationInfo_r8_IEsueCapCont_UCI ueCapCont_UCI;
 NhuInterRAT_UE_RadioAccessCapLst_r5 ue_RATSpecificCap;
 NhuURA_Identity ura_Identity;
 NhuT_305 srns_t_305;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLstFull cn_DomainInfoLst;
 NhuOngoingMeasRepLst_r8 ongoingMeasRepLst;
 NhuInterRATCellInfoInd interRATCellInfoInd;
 NhuPredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuSRB_InfoSetupLst_r8 srb_InfoLst;
 NhuRAB_InfoSetupLst_r8 rab_InfoLst;
 NhuUL_CmnTransChInfo_r4 ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst_r8 ul_TransChInfoLst;
 NhuDL_CmnTransChInfo_r4 dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst_r7 dl_TransChInfoLst;
 NhuTPC_CombinationInfoLst tpc_CombinationInfoLst;
 NhuE_RGCH_CombinationInfoLst e_RGCH_CombinationInfoLst;
 NhuStoredCompressedModeInfo_r8 storedCompressedModeInfo;
 NhuSRNC_RelocationInfo_r8_IEsmeasurementReport measurementReport;
 NhuFailCauseWithProtErr failureCause;
 NhuUE_HistoryInfo ue_HistoryInfo;
 NhuMBMS_JoinedInfo_r6 mbms_JoinedInfo;
 NhuMBMS_SelectedServiceInfo mbmsSelectedServiceInfo;
} NhuSRNC_RelocationInfo_r8_IEs;

typedef struct NhuSRNC_RelocationInfo_v8d0ext_IEs
{
 TknPres pres;
 NhuPDCP_ROHC_TgtMode pdcp_ROHC_TgtMode;
} NhuSRNC_RelocationInfo_v8d0ext_IEs;

typedef struct NhuMeasurementCmdWithTyp_r9
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r9 setup;
 } val;
} NhuMeasurementCmdWithTyp_r9;

typedef struct NhuOngoingMeasRep_r9
{
 TknPres pres;
 NhuMeasurementIdentity measurementIdentity;
 NhuMeasurementCmdWithTyp_r9 measurementCmdWithTyp;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuAdditionalMeasurementID_Lst additionalMeasurementID_Lst;
} NhuOngoingMeasRep_r9;

typedef struct NhuOngoingMeasRepLst_r9
{
 TknU16 noComp;
 NhuOngoingMeasRep_r9 *member;
}NhuOngoingMeasRepLst_r9;

typedef struct NhuTPC_Combination_Info_r9
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuTPC_CombinationIdx tpc_CombinationIdx;
} NhuTPC_Combination_Info_r9;

typedef struct NhuTPC_CombinationInfoLst_r9
{
 TknU16 noComp;
 NhuTPC_Combination_Info_r9 *member;
}NhuTPC_CombinationInfoLst_r9;


typedef TknU32 NhuE_RGCH_Combination_Info_r9rg_CombinationIdx;

typedef struct NhuE_RGCH_Combination_Info_r9
{
 TknPres pres;
 NhuPrimaryCPICH_Info primaryCPICH_Info;
 NhuE_RGCH_Combination_Info_r9rg_CombinationIdx rg_CombinationIdx;
} NhuE_RGCH_Combination_Info_r9;

typedef struct NhuE_RGCH_CombinationInfoLst_r9
{
 TknU16 noComp;
 NhuE_RGCH_Combination_Info_r9 *member;
}NhuE_RGCH_CombinationInfoLst_r9;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r9_IEsueCapCont;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r9_IEsueCapCont_RSC;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r9_IEsueCapCont_UCI;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r9_IEsmeasurementReport;
typedef struct NhuSRNC_RelocationInfo_r9_IEs
{
 TknPres pres;
 NhuRB_Identity rb_IdentityForHOMsg;
 NhuStateOfRRC stateOfRRC;
 NhuStateOfRRC_Procedure stateOfRRC_Procedure;
 NhuCipheringStatusLst_r4 cipheringStatusLst;
 NhuCN_DomainIdentity latestConfiguredCN_Domain;
 NhuCalculationTimeForCiphering calculationTimeForCiphering;
 NhuCOUNT_C_Lst count_C_Lst;
 NhuCipheringInfoPerRB_Lst_r4 cipheringInfoPerRB_Lst;
 NhuIntegrityProtectionStatus integrityProtectionStatus;
 NhuSRB_SpecificIntegrityProtInfoLst srb_SpecificIntegrityProtInfo;
 NhuImplementationSpecificParams implementationSpecificParams;
 NhuU_RNTI u_RNTI;
 NhuC_RNTI c_RNTI;
 NhuUE_RadioAccessCap_r6 ue_RadioAccessCap;
 NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCap_ext;
 NhuUE_Positioning_LastKnownPos ue_Positioning_LastKnownPos;
 NhuUESpecificBehaviourInfo1idle uESpecificBehaviourInfo1idle;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
 NhuSRNC_RelocationInfo_r9_IEsueCapCont ueCapCont;
 NhuSRNC_RelocationInfo_r9_IEsueCapCont_RSC ueCapCont_RSC;
 NhuSRNC_RelocationInfo_r9_IEsueCapCont_UCI ueCapCont_UCI;
 NhuInterRAT_UE_RadioAccessCapLst_r5 ue_RATSpecificCap;
 NhuURA_Identity ura_Identity;
 NhuT_305 srns_t_305;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLstFull cn_DomainInfoLst;
 NhuOngoingMeasRepLst_r9 ongoingMeasRepLst;
 NhuInterRATCellInfoInd interRATCellInfoInd;
 NhuPredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuSRB_InfoSetupLst_r8 srb_InfoLst;
 NhuRAB_InfoSetupLst_r8 rab_InfoLst;
 NhuUL_CmnTransChInfo_r4 ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst_r8 ul_TransChInfoLst;
 NhuDL_CmnTransChInfo_r4 dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst_r9 dl_TransChInfoLst;
 NhuTPC_CombinationInfoLst tpc_CombinationInfoLst;
 NhuE_RGCH_CombinationInfoLst e_RGCH_CombinationInfoLst;
 NhuStoredCompressedModeInfo_r8 storedCompressedModeInfo;
 NhuTPC_CombinationInfoLst_r9 secondary_tpc_CombinationInfoLst;
 NhuE_RGCH_CombinationInfoLst_r9 secondary_e_RGCH_CombinationInfoLst;
 NhuSRNC_RelocationInfo_r9_IEsmeasurementReport measurementReport;
 NhuFailCauseWithProtErr failureCause;
 NhuUE_HistoryInfo ue_HistoryInfo;
 NhuMBMS_JoinedInfo_r6 mbms_JoinedInfo;
 NhuMBMS_SelectedServiceInfo mbmsSelectedServiceInfo;
} NhuSRNC_RelocationInfo_r9_IEs;

typedef struct NhuOngoingMeasRep_v970ext_IEs
{
 TknPres pres;
 NhuMeasurementIdentity_r9 measurementIdentity;
 NhuAdditionalMeasurementID_Lst_r9 additionalMeasurementID_Lst;
} NhuOngoingMeasRep_v970ext_IEs;

typedef struct NhuOngoingMeasRepLst_v970ext_IE
{
 TknU16 noComp;
 NhuOngoingMeasRep_v970ext_IEs *member;
}NhuOngoingMeasRepLst_v970ext_IE;

typedef struct NhuSRNC_RelocationInfo_v970ext_IEs
{
 TknPres pres;
 NhuOngoingMeasRepLst_v970ext_IE ongoingMeasRepLst;
} NhuSRNC_RelocationInfo_v970ext_IEs;

typedef struct NhuMeasurementCmdWithTyp_r10
{
 TknU8 choice;
 union {
  NhuMeasurementTyp_r10 setup;
 } val;
} NhuMeasurementCmdWithTyp_r10;

typedef struct NhuOngoingMeasRep_r10
{
 TknPres pres;
 NhuMeasurementIdentity measurementIdentity;
 NhuMeasurementCmdWithTyp_r10 measurementCmdWithTyp;
 NhuMeasurementRprtngMode measurementRprtngMode;
 NhuAdditionalMeasurementID_Lst additionalMeasurementID_Lst;
} NhuOngoingMeasRep_r10;

typedef struct NhuOngoingMeasRepLst_r10
{
 TknU16 noComp;
 NhuOngoingMeasRep_r10 *member;
}NhuOngoingMeasRepLst_r10;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r10_IEsueCapCont;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r10_IEsueCapCont_RSC;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r10_IEsueCapCont_UCI;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r10_IEsmeasurementReport;
typedef struct NhuSRNC_RelocationInfo_r10_IEs
{
 TknPres pres;
 NhuRB_Identity rb_IdentityForHOMsg;
 NhuStateOfRRC stateOfRRC;
 NhuStateOfRRC_Procedure stateOfRRC_Procedure;
 NhuCipheringStatusLst_r4 cipheringStatusLst;
 NhuCN_DomainIdentity latestConfiguredCN_Domain;
 NhuCalculationTimeForCiphering calculationTimeForCiphering;
 NhuCOUNT_C_Lst count_C_Lst;
 NhuCipheringInfoPerRB_Lst_r4 cipheringInfoPerRB_Lst;
 NhuIntegrityProtectionStatus integrityProtectionStatus;
 NhuSRB_SpecificIntegrityProtInfoLst srb_SpecificIntegrityProtInfo;
 NhuImplementationSpecificParams implementationSpecificParams;
 NhuU_RNTI u_RNTI;
 NhuC_RNTI c_RNTI;
 NhuUE_RadioAccessCap_r6 ue_RadioAccessCap;
 NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCap_ext;
 NhuUE_Positioning_LastKnownPos ue_Positioning_LastKnownPos;
 NhuUESpecificBehaviourInfo1idle uESpecificBehaviourInfo1idle;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
 NhuSRNC_RelocationInfo_r10_IEsueCapCont ueCapCont;
 NhuSRNC_RelocationInfo_r10_IEsueCapCont_RSC ueCapCont_RSC;
 NhuSRNC_RelocationInfo_r10_IEsueCapCont_UCI ueCapCont_UCI;
 NhuInterRAT_UE_RadioAccessCapLst_r5 ue_RATSpecificCap;
 NhuURA_Identity ura_Identity;
 NhuT_305 srns_t_305;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLstFull cn_DomainInfoLst;
 NhuOngoingMeasRepLst_r10 ongoingMeasRepLst;
 NhuInterRATCellInfoInd interRATCellInfoInd;
 NhuPredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuSRB_InfoSetupLst_r8 srb_InfoLst;
 NhuRAB_InfoSetupLst_r8 rab_InfoLst;
 NhuPDCP_ROHC_TgtMode pdcp_ROHC_TgtMode;
 NhuUL_CmnTransChInfo_r4 ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst_r8 ul_TransChInfoLst;
 NhuDL_CmnTransChInfo_r4 dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst_r9 dl_TransChInfoLst;
 NhuTPC_CombinationInfoLst tpc_CombinationInfoLst;
 NhuE_RGCH_CombinationInfoLst e_RGCH_CombinationInfoLst;
 NhuStoredCompressedModeInfo_r8 storedCompressedModeInfo;
 NhuTPC_CombinationInfoLst_r9 secondary_tpc_CombinationInfoLst;
 NhuE_RGCH_CombinationInfoLst_r9 secondary_e_RGCH_CombinationInfoLst;
 NhuSRNC_RelocationInfo_r10_IEsmeasurementReport measurementReport;
 NhuFailCauseWithProtErr failureCause;
 NhuUE_HistoryInfo ue_HistoryInfo;
 NhuMBMS_JoinedInfo_r6 mbms_JoinedInfo;
 NhuMBMS_SelectedServiceInfo mbmsSelectedServiceInfo;
} NhuSRNC_RelocationInfo_r10_IEs;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r11_IEsueCapCont;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r11_IEsueCapCont_RSC;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r11_IEsueCapCont_UCI;

typedef TknStrBSXL NhuSRNC_RelocationInfo_r11_IEsmeasurementReport;
typedef struct NhuSRNC_RelocationInfo_r11_IEs
{
 TknPres pres;
 NhuRB_Identity rb_IdentityForHOMsg;
 NhuStateOfRRC stateOfRRC;
 NhuStateOfRRC_Procedure stateOfRRC_Procedure;
 NhuCipheringStatusLst_r4 cipheringStatusLst;
 NhuCN_DomainIdentity latestConfiguredCN_Domain;
 NhuCalculationTimeForCiphering calculationTimeForCiphering;
 NhuCOUNT_C_Lst count_C_Lst;
 NhuCipheringInfoPerRB_Lst_r4 cipheringInfoPerRB_Lst;
 NhuIntegrityProtectionStatus integrityProtectionStatus;
 NhuSRB_SpecificIntegrityProtInfoLst srb_SpecificIntegrityProtInfo;
 NhuImplementationSpecificParams implementationSpecificParams;
 NhuU_RNTI u_RNTI;
 NhuC_RNTI c_RNTI;
 NhuUE_RadioAccessCap_r6 ue_RadioAccessCap;
 NhuUE_RadioAccessCapabBandFDDLst ue_RadioAccessCap_ext;
 NhuUE_Positioning_LastKnownPos ue_Positioning_LastKnownPos;
 NhuUESpecificBehaviourInfo1idle uESpecificBehaviourInfo1idle;
 NhuUESpecificBehaviourInfo1interRAT uESpecificBehaviourInfo1interRAT;
 NhuSRNC_RelocationInfo_r11_IEsueCapCont ueCapCont;
 NhuSRNC_RelocationInfo_r11_IEsueCapCont_RSC ueCapCont_RSC;
 NhuSRNC_RelocationInfo_r11_IEsueCapCont_UCI ueCapCont_UCI;
 NhuInterRAT_UE_RadioAccessCapLst_r5 ue_RATSpecificCap;
 NhuURA_Identity ura_Identity;
 NhuT_305 srns_t_305;
 NhuNAS_SysInfoGSM_MAP cn_CmnGSM_MAP_NAS_SysInfo;
 NhuCN_DomainInfoLstFull cn_DomainInfoLst;
 NhuOngoingMeasRepLst_r10 ongoingMeasRepLst;
 NhuInterRATCellInfoInd interRATCellInfoInd;
 NhuPredefinedConfigStatusLst predefinedConfigStatusLst;
 NhuSRB_InfoSetupLst_r8 srb_InfoLst;
 NhuRAB_InfoSetupLst_r8 rab_InfoLst;
 NhuPDCP_ROHC_TgtMode pdcp_ROHC_TgtMode;
 NhuUL_CmnTransChInfo_r4 ul_CmnTransChInfo;
 NhuUL_AddReconfTransChInfoLst_r8 ul_TransChInfoLst;
 NhuDL_CmnTransChInfo_r4 dl_CmnTransChInfo;
 NhuDL_AddReconfTransChInfoLst_r11 dl_TransChInfoLst;
 NhuTPC_CombinationInfoLst tpc_CombinationInfoLst;
 NhuE_RGCH_CombinationInfoLst e_RGCH_CombinationInfoLst;
 NhuStoredCompressedModeInfo_r8 storedCompressedModeInfo;
 NhuTPC_CombinationInfoLst_r9 secondary_tpc_CombinationInfoLst;
 NhuE_RGCH_CombinationInfoLst_r9 secondary_e_RGCH_CombinationInfoLst;
 NhuSRNC_RelocationInfo_r11_IEsmeasurementReport measurementReport;
 NhuFailCauseWithProtErr failureCause;
 NhuUE_HistoryInfo ue_HistoryInfo;
 NhuMBMS_JoinedInfo_r6 mbms_JoinedInfo;
 NhuMBMS_SelectedServiceInfo mbmsSelectedServiceInfo;
} NhuSRNC_RelocationInfo_r11_IEs;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnssRNC_RelocationInfo_r3_add_ext;
typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsnonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7f0ext_IEs sRNC_RelocationInfo_v7f0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7e0ext_IEs sRNC_RelocationInfo_v7e0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns v7f0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v770ext_IEs sRNC_RelocationInfo_v770ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtns v7e0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v6b0ext_IEs sRNC_RelocationInfo_v6b0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtns v770NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v690ext_IEs sRNC_RelocationInfo_v690ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns v6b0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v5c0ext_IEs sRNC_RelocationInfo_v5c0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtns v690NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v5b0ext_IEs sRNC_RelocationInfo_v5b0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtns v5c0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v5a0ext_IEs sRNC_RelocationInfo_v5a0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtns v5b0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v590ext_IEs sRNC_RelocationInfo_v590ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtns v5a0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v4b0ext_IEs sRNC_RelocationInfo_v4b0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtnsv590NonCriticalExtns v590NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v3g0ext_IEs sRNC_RelocationInfo_v3g0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtnsv4b0NonCriticalExtns v4b0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v3d0ext_IEs sRNC_RelocationInfo_v3d0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnssRNC_RelocationInfo_r3_add_ext sRNC_RelocationInfo_r3_add_ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtnsv3g0NonCriticalExtns v3g0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v3c0ext_IEs sRNC_RelocationInfo_v3c0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtnslaterNonCriticalExtns laterNonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v3b0ext_IEs sRNC_RelocationInfo_v3b0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtnsv3c0NonCriticalExtns v3c0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v3a0ext_IEs sRNC_RelocationInfo_v3a0ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtnsv3b0NonCriticalExtns v3b0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v390ext_IEs sRNC_RelocationInfo_v390ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtnsv3a0NonCriticalExtns v3a0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v380ext_IEs sRNC_RelocationInfo_v380ext;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtnsv390NonCriticalExtns v390NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3r3
{
 TknPres pres;
 NhuSRNC_RelocationInfo_r3_IEs sRNC_RelocationInfo_r3;
 NhuSRNC_RelocationInfo_r3r3v380NonCriticalExtns v380NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3r3;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnssRNC_RelocationInfo_r4_add_ext;
typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsnonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7f0ext_IEs sRNC_RelocationInfo_v7f0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7e0ext_IEs sRNC_RelocationInfo_v7e0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns v7f0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v770ext_IEs sRNC_RelocationInfo_v770ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtns v7e0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v6b0ext_IEs sRNC_RelocationInfo_v6b0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtns v770NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v690ext_IEs sRNC_RelocationInfo_v690ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns v6b0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v5c0ext_IEs sRNC_RelocationInfo_v5c0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtns v690NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v5b0ext_IEs sRNC_RelocationInfo_v5b0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtns v5c0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v5a0ext_IEs sRNC_RelocationInfo_v5a0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtnsv5b0NonCriticalExtns v5b0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v590ext_IEs sRNC_RelocationInfo_v590ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtnsv5a0NonCriticalExtns v5a0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v4d0ext_IEs sRNC_RelocationInfo_v4d0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnssRNC_RelocationInfo_r4_add_ext sRNC_RelocationInfo_r4_add_ext;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtnsv590NonCriticalExtns v590NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3r4
{
 TknPres pres;
 NhuSRNC_RelocationInfo_r4_IEs sRNC_RelocationInfo_r4;
 NhuSRNC_RelocationInfo_r3later_than_r3r4v4d0NonCriticalExtns v4d0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3r4;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5sRNC_RelocationInfo_r5_add_ext;
typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsnonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7f0ext_IEs sRNC_RelocationInfo_v7f0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7e0ext_IEs sRNC_RelocationInfo_v7e0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtnsv7f0NonCriticalExtns v7f0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v770ext_IEs sRNC_RelocationInfo_v770ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtnsv7e0NonCriticalExtns v7e0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v6b0ext_IEs sRNC_RelocationInfo_v6b0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtnsv770NonCriticalExtns v770NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v690ext_IEs sRNC_RelocationInfo_v690ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtnsv6b0NonCriticalExtns v6b0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v5c0ext_IEs sRNC_RelocationInfo_v5c0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtnsv690NonCriticalExtns v690NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v5b0ext_IEs sRNC_RelocationInfo_v5b0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtnsv5c0NonCriticalExtns v5c0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v5a0ext_IEs sRNC_RelocationInfo_v5a0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtnsv5b0NonCriticalExtns v5b0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5
{
 TknPres pres;
 NhuSRNC_RelocationInfo_r5_IEs sRNC_RelocationInfo_r5;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5sRNC_RelocationInfo_r5_add_ext sRNC_RelocationInfo_r5_add_ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5v5a0NonCriticalExtns v5a0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6sRNC_RelocationInfo_r6_add_ext;
typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtnsv820NonCriticalExtnsv860NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtnsv820NonCriticalExtnsv860NonCriticalExtnsnonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtnsv820NonCriticalExtnsv860NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v860ext_IEs sRNC_RelocationInfo_v860ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtnsv820NonCriticalExtnsv860NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtnsv820NonCriticalExtnsv860NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtnsv820NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v820ext_IEs srnc_RelocationInfo_v820ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtnsv820NonCriticalExtnsv860NonCriticalExtns v860NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtnsv820NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v770ext_IEs sRNC_RelocationInfo_v770ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtnsv820NonCriticalExtns v820NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v6b0ext_IEs sRNC_RelocationInfo_v6b0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtnsv770NonCriticalExtns v770NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6
{
 TknPres pres;
 NhuSRNC_RelocationInfo_r6_IEs sRNC_RelocationInfo_r6;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6sRNC_RelocationInfo_r6_add_ext sRNC_RelocationInfo_r6_add_ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6v6b0NonCriticalExtns v6b0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7sRNC_RelocationInfo_r7_add_ext;
typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7v820NonCriticalExtnsv860NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7v820NonCriticalExtnsv860NonCriticalExtnsnonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7v820NonCriticalExtnsv860NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v860ext_IEs sRNC_RelocationInfo_v860ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7v820NonCriticalExtnsv860NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7v820NonCriticalExtnsv860NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7v820NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v820ext_IEs srnc_RelocationInfo_v820ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7v820NonCriticalExtnsv860NonCriticalExtns v860NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7v820NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7
{
 TknPres pres;
 NhuSRNC_RelocationInfo_r7_IEs sRNC_RelocationInfo_r7;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7sRNC_RelocationInfo_r7_add_ext sRNC_RelocationInfo_r7_add_ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7v820NonCriticalExtns v820NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8sRNC_RelocationInfo_r8_add_ext;
typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtnsv7f0NonCriticalExtnsv8d0NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtnsv7f0NonCriticalExtnsv8d0NonCriticalExtnsnonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtnsv7f0NonCriticalExtnsv8d0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v8d0ext_IEs sRNC_RelocationInfo_v8d0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtnsv7f0NonCriticalExtnsv8d0NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtnsv7f0NonCriticalExtnsv8d0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtnsv7f0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7f0ext_IEs sRNC_RelocationInfo_v7f0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtnsv7f0NonCriticalExtnsv8d0NonCriticalExtns v8d0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtnsv7f0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7e0ext_IEs sRNC_RelocationInfo_v7e0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtnsv7f0NonCriticalExtns v7f0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8
{
 TknPres pres;
 NhuSRNC_RelocationInfo_r8_IEs sRNC_RelocationInfo_r8;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8sRNC_RelocationInfo_r8_add_ext sRNC_RelocationInfo_r8_add_ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8v7e0NonCriticalExtns v7e0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9sRNC_RelocationInfo_r9_add_ext;
typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9v8d0NonCriticalExtnsv970NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9v8d0NonCriticalExtnsv970NonCriticalExtnsnonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9v8d0NonCriticalExtnsv970NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v970ext_IEs sRNC_RelocationInfo_v970ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9v8d0NonCriticalExtnsv970NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9v8d0NonCriticalExtnsv970NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9v8d0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v8d0ext_IEs sRNC_RelocationInfo_v8d0ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9v8d0NonCriticalExtnsv970NonCriticalExtns v970NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9v8d0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9
{
 TknPres pres;
 NhuSRNC_RelocationInfo_r9_IEs sRNC_RelocationInfo_r9;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9sRNC_RelocationInfo_r9_add_ext sRNC_RelocationInfo_r9_add_ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9v8d0NonCriticalExtns v8d0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr10sRNC_RelocationInfo_r10_add_ext;
typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr10nonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr10nonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr10
{
 TknPres pres;
 NhuSRNC_RelocationInfo_r10_IEs sRNC_RelocationInfo_r10;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr10sRNC_RelocationInfo_r10_add_ext sRNC_RelocationInfo_r10_add_ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr10nonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr10;


typedef TknStrBSXL NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr11sRNC_RelocationInfo_r11_add_ext;
typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr11nonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr11nonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr11
{
 TknPres pres;
 NhuSRNC_RelocationInfo_r11_IEs sRNC_RelocationInfo_r11;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr11sRNC_RelocationInfo_r11_add_ext sRNC_RelocationInfo_r11_add_ext;
 NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr11nonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr11;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr11 r11;
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns criticalExtns;
 } val;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr10 r10;
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns criticalExtns;
 } val;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnsr9 r9;
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns criticalExtns;
 } val;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtns
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnsr8 r8;
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtnscriticalExtns criticalExtns;
 } val;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtns
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnsr7 r7;
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtnscriticalExtns criticalExtns;
 } val;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtns
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnsr6 r6;
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtnscriticalExtns criticalExtns;
 } val;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3criticalExtns
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnsr5 r5;
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtnscriticalExtns criticalExtns;
 } val;
} NhuSRNC_RelocationInfo_r3later_than_r3criticalExtns;

typedef struct NhuSRNC_RelocationInfo_r3later_than_r3
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3later_than_r3r4 r4;
  NhuSRNC_RelocationInfo_r3later_than_r3criticalExtns criticalExtns;
 } val;
} NhuSRNC_RelocationInfo_r3later_than_r3;

typedef struct NhuSRNC_RelocationInfo_r3
{
 TknU8 choice;
 union {
  NhuSRNC_RelocationInfo_r3r3 r3;
  NhuSRNC_RelocationInfo_r3later_than_r3 later_than_r3;
 } val;
} NhuSRNC_RelocationInfo_r3;


typedef TknU32 NhuDL_RFC3095_Ctxtrfc3095_Ctxt_Identity;


typedef enum enumNhuDL_RFC3095_Ctxtdl_mode
{
 NhuDL_RFC3095_Ctxtdl_modeuEnum,
 NhuDL_RFC3095_Ctxtdl_modeoEnum,
 NhuDL_RFC3095_Ctxtdl_moderEnum
} EnumNhuDL_RFC3095_Ctxtdl_mode;
typedef TknU32 NhuDL_RFC3095_Ctxtdl_mode;


typedef TknStrOSXL NhuDL_RFC3095_Ctxtdl_ref_ir;

typedef TknU32 NhuDL_RFC3095_Ctxtdl_ref_time;


typedef TknU32 NhuDL_RFC3095_Ctxtdl_curr_time;


typedef TknU32 NhuDL_RFC3095_Ctxtdl_syn_offset_id;


typedef TknU32 NhuDL_RFC3095_Ctxtdl_syn_slope_ts;


typedef TknU8 NhuDL_RFC3095_Ctxtdl_dyn_changed;

typedef struct NhuDL_RFC3095_Ctxt
{
 TknPres pres;
 NhuDL_RFC3095_Ctxtrfc3095_Ctxt_Identity rfc3095_Ctxt_Identity;
 NhuDL_RFC3095_Ctxtdl_mode dl_mode;
 NhuDL_RFC3095_Ctxtdl_ref_ir dl_ref_ir;
 NhuDL_RFC3095_Ctxtdl_ref_time dl_ref_time;
 NhuDL_RFC3095_Ctxtdl_curr_time dl_curr_time;
 NhuDL_RFC3095_Ctxtdl_syn_offset_id dl_syn_offset_id;
 NhuDL_RFC3095_Ctxtdl_syn_slope_ts dl_syn_slope_ts;
 NhuDL_RFC3095_Ctxtdl_dyn_changed dl_dyn_changed;
} NhuDL_RFC3095_Ctxt;


typedef TknU32 NhuUL_RFC3095_Ctxtrfc3095_Ctxt_Identity;


typedef enum enumNhuUL_RFC3095_Ctxtul_mode
{
 NhuUL_RFC3095_Ctxtul_modeuEnum,
 NhuUL_RFC3095_Ctxtul_modeoEnum,
 NhuUL_RFC3095_Ctxtul_moderEnum
} EnumNhuUL_RFC3095_Ctxtul_mode;
typedef TknU32 NhuUL_RFC3095_Ctxtul_mode;


typedef TknStrOSXL NhuUL_RFC3095_Ctxtul_ref_ir;

typedef TknU32 NhuUL_RFC3095_Ctxtul_ref_time;


typedef TknU32 NhuUL_RFC3095_Ctxtul_curr_time;


typedef TknU32 NhuUL_RFC3095_Ctxtul_syn_offset_id;


typedef TknU32 NhuUL_RFC3095_Ctxtul_syn_slope_ts;


typedef TknU32 NhuUL_RFC3095_Ctxtul_ref_sn_1;

typedef struct NhuUL_RFC3095_Ctxt
{
 TknPres pres;
 NhuUL_RFC3095_Ctxtrfc3095_Ctxt_Identity rfc3095_Ctxt_Identity;
 NhuUL_RFC3095_Ctxtul_mode ul_mode;
 NhuUL_RFC3095_Ctxtul_ref_ir ul_ref_ir;
 NhuUL_RFC3095_Ctxtul_ref_time ul_ref_time;
 NhuUL_RFC3095_Ctxtul_curr_time ul_curr_time;
 NhuUL_RFC3095_Ctxtul_syn_offset_id ul_syn_offset_id;
 NhuUL_RFC3095_Ctxtul_syn_slope_ts ul_syn_slope_ts;
 NhuUL_RFC3095_Ctxtul_ref_sn_1 ul_ref_sn_1;
} NhuUL_RFC3095_Ctxt;

typedef struct NhuRFC3095_Ctxt_LstMember
{
 TknPres pres;
 NhuDL_RFC3095_Ctxt dl_RFC3095_Ctxt;
 NhuUL_RFC3095_Ctxt ul_RFC3095_Ctxt;
} NhuRFC3095_Ctxt_LstMember;

typedef struct NhuRFC3095_Ctxt_Lst
{
 TknU16 noComp;
 NhuRFC3095_Ctxt_LstMember *member;
}NhuRFC3095_Ctxt_Lst;

typedef struct NhuRFC3095_CtxtInfo
{
 TknPres pres;
 NhuRB_Identity rb_Identity;
 NhuRFC3095_Ctxt_Lst rfc3095_Ctxt_Lst;
} NhuRFC3095_CtxtInfo;

typedef struct NhuRFC3095_CtxtInfoLst_r5
{
 TknU16 noComp;
 NhuRFC3095_CtxtInfo *member;
}NhuRFC3095_CtxtInfoLst_r5;

typedef struct NhuRFC3095_CtxtInfo_r5r5nonCriticalExtns
{
 TknPres pres;
} NhuRFC3095_CtxtInfo_r5r5nonCriticalExtns;

typedef struct NhuRFC3095_CtxtInfo_r5r5
{
 TknPres pres;
 NhuRFC3095_CtxtInfoLst_r5 rFC3095_CtxtInfoLst_r5;
 NhuRFC3095_CtxtInfo_r5r5nonCriticalExtns nonCriticalExtns;
} NhuRFC3095_CtxtInfo_r5r5;

typedef struct NhuRFC3095_CtxtInfo_r5criticalExtns
{
 TknPres pres;
} NhuRFC3095_CtxtInfo_r5criticalExtns;

typedef struct NhuRFC3095_CtxtInfo_r5
{
 TknU8 choice;
 union {
  NhuRFC3095_CtxtInfo_r5r5 r5;
  NhuRFC3095_CtxtInfo_r5criticalExtns criticalExtns;
 } val;
} NhuRFC3095_CtxtInfo_r5;

typedef struct NhuToTgtRNC_Cont
{
 TknU8 choice;
 union {
  NhuInterRATHovrInfoWithInterRATCapabilities_r3 interRATHovrInfo;



  NhuRFC3095_CtxtInfo_r5 rfc3095_CtxtInfo;
 } val;
} NhuToTgtRNC_Cont;

typedef struct NhuSRNC_RelocationInfo_v3h0ext_IEsnonCriticalExtn
{
 TknPres pres;
} NhuSRNC_RelocationInfo_v3h0ext_IEsnonCriticalExtn;

typedef struct NhuSRNC_RelocationInfo_v3h0ext_IEs
{
 TknPres pres;
 NhuTPC_CombinationInfoLst tpc_CombinationInfoLst;
 NhuSRNC_RelocationInfo_v3h0ext_IEsnonCriticalExtn nonCriticalExtn;
} NhuSRNC_RelocationInfo_v3h0ext_IEs;

typedef struct NhuSRNC_RelocationInfo_r6_add_ext_IEsv7f0NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r6_add_ext_IEsv7f0NonCriticalExtnsnonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r6_add_ext_IEsv7f0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7f0ext_IEs sRNC_RelocationInfo_v7f0ext;
 NhuSRNC_RelocationInfo_r6_add_ext_IEsv7f0NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r6_add_ext_IEsv7f0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r6_add_ext_IEs
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7e0ext_IEs sRNC_RelocationInfo_v7e0ext;
 NhuSRNC_RelocationInfo_r6_add_ext_IEsv7f0NonCriticalExtns v7f0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r6_add_ext_IEs;

typedef struct NhuSRNC_RelocationInfo_r7_add_ext_IEsv7f0NonCriticalExtnsnonCriticalExtns
{
 TknPres pres;
} NhuSRNC_RelocationInfo_r7_add_ext_IEsv7f0NonCriticalExtnsnonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r7_add_ext_IEsv7f0NonCriticalExtns
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7f0ext_IEs sRNC_RelocationInfo_v7f0ext;
 NhuSRNC_RelocationInfo_r7_add_ext_IEsv7f0NonCriticalExtnsnonCriticalExtns nonCriticalExtns;
} NhuSRNC_RelocationInfo_r7_add_ext_IEsv7f0NonCriticalExtns;

typedef struct NhuSRNC_RelocationInfo_r7_add_ext_IEs
{
 TknPres pres;
 NhuSRNC_RelocationInfo_v7e0ext_IEs sRNC_RelocationInfo_v7e0ext;
 NhuSRNC_RelocationInfo_r7_add_ext_IEsv7f0NonCriticalExtns v7f0NonCriticalExtns;
} NhuSRNC_RelocationInfo_r7_add_ext_IEs;
# 47 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x" 2





typedef struct nhuRbId
{
   U8 rbId;
   U8 rbTyp;
}NhuRbId;





typedef U8 NhuPdcpId;





typedef U16 NhuCrnti;






typedef U16 NhuCellId;





typedef enum nhuRbType
{
   NHU_RB_COMMON,
   NHU_RB_DEDICATED
} NhuRbType;





typedef enum nhuTargetRatTyp
{
   NHU_RAT_TGT_UTRA,
   NHU_RAT_TGT_GERAN,
   NHU_RAT_TGT_CDMA2K_1XRTT,
   NHU_RAT_TGT_CDMA2K_HRPD
} NhuTargetRatTyp;






typedef enum nhuSIWindowLen
{
   NHU_SI_WINDOW_LEN_MS1,
   NHU_SI_WINDOW_LEN_MS2,
   NHU_SI_WINDOW_LEN_MS5,
   NHU_SI_WINDOW_LEN_MS10,
   NHU_SI_WINDOW_LEN_MS15,
   NHU_SI_WINDOW_LEN_MS20,
   NHU_SI_WINDOW_LEN_MS40
} NhuSIWindowLen;





typedef enum nhuSIPeriodicity
{
   NHU_SI_PERIOD_RF8,
   NHU_SI_PERIOD_RF16,
   NHU_SI_PERIOD_RF32,
   NHU_SI_PERIOD_RF64,
   NHU_SI_PERIOD_RF128,
   NHU_SI_PERIOD_RF256,
   NHU_SI_PERIOD_RF512
} NhuSIPeriodicity;





typedef enum nhuAntPortCnt
{
   NHU_ANT_PORT_CNT1 = 1,
   NHU_ANT_PORT_CNT2 = 2,
   NHU_ANT_PORT_CNT4 = 4
} NhuAntPortCnt;





typedef enum nhuAntTxMode
{
   NHU_ANT_TM1 = 1,
   NHU_ANT_TM2,
   NHU_ANT_TM3,
   NHU_ANT_TM4,
   NHU_ANT_TM5,
   NHU_ANT_TM6,
   NHU_ANT_TM7
} NhuAntTxMode;





typedef enum nhuAprdCqiRptMode
{
   NHU_CQI_RPT_MODE_APERD_12,
   NHU_CQI_RPT_MODE_APERD_20,
   NHU_CQI_RPT_MODE_APERD_22,
   NHU_CQI_RPT_MODE_APERD_30,
   NHU_CQI_RPT_MODE_APERD_31
} NhuAprdCqiRptMode;





typedef enum nhuPrdCqiRptMode
{
   NHU_CQI_RPT_MODE_PERD_10,
   NHU_CQI_RPT_MODE_PERD_11,
   NHU_CQI_RPT_MODE_PERD_20,
   NHU_CQI_RPT_MODE_PERD_21
} NhuPrdCqiRptMode;






typedef enum nhuCqiRptPeriodicity
{
   NHU_CQI_PERIODICITY_MS2 = 2,
   NHU_CQI_PERIODICITY_MS5 = 5,
   NHU_CQI_PERIODICITY_MS10 = 10,
   NHU_CQI_PERIODICITY_MS20 = 20,
   NHU_CQI_PERIODICITY_MS32 = 32,
   NHU_CQI_PERIODICITY_MS40 = 40,
   NHU_CQI_PERIODICITY_MS64 = 64,
   NHU_CQI_PERIODICITY_MS80 = 80,
   NHU_CQI_PERIODICITY_MS128 = 128,
   NHU_CQI_PERIODICITY_MS160 = 160,
   NHU_CQI_PERIODICITY_MS256 = 256,
   NHU_CQI_PERIODICITY_MSOFF
} NhuCqiRptPeriodicity;





typedef enum nhuLogChPbr
{
   NHU_LOGCH_PBR_KB0 = 0,
   NHU_LOGCH_PBR_KB8 = 8,
   NHU_LOGCH_PBR_KB16 = 16 ,
   NHU_LOGCH_PBR_KB32 = 32,
   NHU_LOGCH_PBR_KB64 = 64,
   NHU_LOGCH_PBR_KB128 = 128,
   NHU_LOGCH_PBR_KB256 = 256,
   NHU_LOGCH_PBR_INF
} NhuLogChPbr;





typedef enum nhuDlSemiPerSchedIntvl
{
   NHU_DL_SEMIP_SCHED_INT_SF10,
   NHU_DL_SEMIP_SCHED_INT_SF20,
   NHU_DL_SEMIP_SCHED_INT_SF32,
   NHU_DL_SEMIP_SCHED_INT_SF40,
   NHU_DL_SEMIP_SCHED_INT_SF64,
   NHU_DL_SEMIP_SCHED_INT_SF80,
   NHU_DL_SEMIP_SCHED_INT_SF128,
   NHU_DL_SEMIP_SCHED_INT_SF160,
   NHU_DL_SEMIP_SCHED_INT_SF320,
   NHU_DL_SEMIP_SCHED_INT_SF640
} NhuDlSemiPerSchedIntvl;





typedef enum nhuUlSemiPerSchedIntvl
{
   NHU_UL_SEMIP_SCHED_INT_SF10,
   NHU_UL_SEMIP_SCHED_INT_SF20,
   NHU_UL_SEMIP_SCHED_INT_SF32,
   NHU_UL_SEMIP_SCHED_INT_SF40,
   NHU_UL_SEMIP_SCHED_INT_SF64,
   NHU_UL_SEMIP_SCHED_INT_SF80,
   NHU_UL_SEMIP_SCHED_INT_SF128,
   NHU_UL_SEMIP_SCHED_INT_SF160,
   NHU_UL_SEMIP_SCHED_INT_SF320,
   NHU_UL_SEMIP_SCHED_INT_SF640
} NhuUlSemiPerSchedIntvl;





typedef enum nhuMaxHarqTx
{
   NHU_MAX_HARQ_TX_N1 = 1,
   NHU_MAX_HARQ_TX_N2 = 2,
   NHU_MAX_HARQ_TX_N3 = 3,
   NHU_MAX_HARQ_TX_N4 = 4,
   NHU_MAX_HARQ_TX_N5 = 5,
   NHU_MAX_HARQ_TX_N6 = 6,
   NHU_MAX_HARQ_TX_N7 = 7,
   NHU_MAX_HARQ_TX_N8 = 8,
   NHU_MAX_HARQ_TX_N10 = 10,
   NHU_MAX_HARQ_TX_N12 = 12,
   NHU_MAX_HARQ_TX_N16 = 16,
   NHU_MAX_HARQ_TX_N20 = 20,
   NHU_MAX_HARQ_TX_N24 = 24,
   NHU_MAX_HARQ_TX_N28 = 28
} NhuMaxHarqTx;





typedef enum nhuPrdPHRTmr
{
   NHU_PRD_PHR_TMR_SF10,
   NHU_PRD_PHR_TMR_SF20,
   NHU_PRD_PHR_TMR_SF50,
   NHU_PRD_PHR_TMR_SF100,
   NHU_PRD_PHR_TMR_SF200,
   NHU_PRD_PHR_TMR_SF1000,
   NHU_PRD_PHR_TMR_INF
} NhuPrdPHRTmr;





typedef enum nhuProhPHRTmr
{
   NHU_PROH_PHR_TMR_SF10,
   NHU_PROH_PHR_TMR_SF100,
   NHU_PROH_PHR_TMR_SF200,
   NHU_PROH_PHR_TMR_SF1000
} NhuProhPHRTmr;





typedef enum nhuPdcpDiscardTmr
{
   NHU_PDCP_DISCARD_TMR_MS50 = 50,
   NHU_PDCP_DISCARD_TMR_MS100 = 100,
   NHU_PDCP_DISCARD_TMR_MS150 = 150,
   NHU_PDCP_DISCARD_TMR_MS300 = 300,
   NHU_PDCP_DISCARD_TMR_MS500 = 500,
   NHU_PDCP_DISCARD_TMR_MS750 = 750,
   NHU_PDCP_DISCARD_TMR_MS1500 = 1500,
   NHU_PDCP_DISCARD_TMR_MSINF = -1
} NhuPdcpDiscardTmr;





typedef enum nhuPdcpFlushTmr
{
   NHU_PDCP_FLUSH_TMR_MS10,
   NHU_PDCP_FLUSH_TMR_MS50,
   NHU_PDCP_FLUSH_TMR_MS100,
   NHU_PDCP_FLUSH_TMR_MS150,
   NHU_PDCP_FLUSH_TMR_MS200,
   NHU_PDCP_FLUSH_TMR_MS250,
   NHU_PDCP_FLUSH_TMR_MS500
} NhuPdcpFlushTmr;





typedef enum nhuPdcpSnSize
{
   NHU_PDCP_SN_SIZE_7BITS = 7,
   NHU_PDCP_SN_SIZE_12BITS = 12,
   NHU_PDCP_SN_SIZE_15BITS = 15
} NhuPdcpSnSize;





typedef enum nhuPucchDeltaShift
{
   NHU_PUCCH_DS1 = 1,
   NHU_PUCCH_DS2,
   NHU_PUCCH_DS3
} NhuPucchDeltaShift;







typedef enum nhuMaxRetxThres
{
   NHU_MAX_RETX_THRES_T1 = 1,
   NHU_MAX_RETX_THRES_T2 = 2,
   NHU_MAX_RETX_THRES_T3 = 3,
   NHU_MAX_RETX_THRES_T4 = 4,
   NHU_MAX_RETX_THRES_T6 = 6,
   NHU_MAX_RETX_THRES_T8 = 8,
   NHU_MAX_RETX_THRES_T16 = 16,
   NHU_MAX_RETX_THRES_T32 = 32
} NhuMaxRetxThres;
# 381 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef enum nhuTPollReTx
{
   NHU_TPOLL_RETX_MS5 = 5,
   NHU_TPOLL_RETX_MS10 = 10,
   NHU_TPOLL_RETX_MS15 = 15,
   NHU_TPOLL_RETX_MS20 = 20,
   NHU_TPOLL_RETX_MS25 = 25,
   NHU_TPOLL_RETX_MS30 = 30,
   NHU_TPOLL_RETX_MS35 = 35,
   NHU_TPOLL_RETX_MS40 = 40,
   NHU_TPOLL_RETX_MS45 = 45,
   NHU_TPOLL_RETX_MS50 = 50,
   NHU_TPOLL_RETX_MS55 = 55,
   NHU_TPOLL_RETX_MS60 = 60,
   NHU_TPOLL_RETX_MS65 = 65,
   NHU_TPOLL_RETX_MS70 = 70,
   NHU_TPOLL_RETX_MS75 = 75,
   NHU_TPOLL_RETX_MS80 = 80,
   NHU_TPOLL_RETX_MS85 = 85,
   NHU_TPOLL_RETX_MS90 = 90,
   NHU_TPOLL_RETX_MS95 = 95,
   NHU_TPOLL_RETX_MS100 = 100,
   NHU_TPOLL_RETX_MS105 = 105,
   NHU_TPOLL_RETX_MS110 = 110,
   NHU_TPOLL_RETX_MS115 = 115,
   NHU_TPOLL_RETX_MS120 = 120,
   NHU_TPOLL_RETX_MS125 = 125,
   NHU_TPOLL_RETX_MS130 = 130,
   NHU_TPOLL_RETX_MS135 = 135,
   NHU_TPOLL_RETX_MS140 = 140,
   NHU_TPOLL_RETX_MS145 = 145,
   NHU_TPOLL_RETX_MS150 = 150,
   NHU_TPOLL_RETX_MS155 = 155,
   NHU_TPOLL_RETX_MS160 = 160,
   NHU_TPOLL_RETX_MS165 = 165,
   NHU_TPOLL_RETX_MS170 = 170,
   NHU_TPOLL_RETX_MS175 = 175,
   NHU_TPOLL_RETX_MS180 = 180,
   NHU_TPOLL_RETX_MS185 = 185,
   NHU_TPOLL_RETX_MS190 = 190,
   NHU_TPOLL_RETX_MS195 = 195,
   NHU_TPOLL_RETX_MS200 = 200,
   NHU_TPOLL_RETX_MS205 = 205,
   NHU_TPOLL_RETX_MS210 = 210,
   NHU_TPOLL_RETX_MS215 = 215,
   NHU_TPOLL_RETX_MS220 = 220,
   NHU_TPOLL_RETX_MS225 = 225,
   NHU_TPOLL_RETX_MS230 = 230,
   NHU_TPOLL_RETX_MS235 = 235,
   NHU_TPOLL_RETX_MS240 = 240,
   NHU_TPOLL_RETX_MS245 = 245,
   NHU_TPOLL_RETX_MS250 = 250,
   NHU_TPOLL_RETX_MS300 = 300,
   NHU_TPOLL_RETX_MS350 = 350,
   NHU_TPOLL_RETX_MS400 = 400,
   NHU_TPOLL_RETX_MS450 = 450,
   NHU_TPOLL_RETX_MS500 = 500
} NhuTPollReTx;







typedef enum nhuPollPdu
{
   NHU_POLL_PDU_P4 = 4,
   NHU_POLL_PDU_P8 = 8,
   NHU_POLL_PDU_P16 = 16,
   NHU_POLL_PDU_P32 = 32,
   NHU_POLL_PDU_P64 = 64,
   NHU_POLL_PDU_P128 = 128,
   NHU_POLL_PDU_P256 = 256,
   NHU_POLL_PDU_P384 = 384,
   NHU_POLL_PDU_INF
} NhuPollPdu;
# 466 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef enum nhuRlcPollByte
{
   NHU_POLL_BYTE_KB25 = 25,
   NHU_POLL_BYTE_KB50 = 50,
   NHU_POLL_BYTE_KB75 = 75,
   NHU_POLL_BYTE_KB100 = 100,
   NHU_POLL_BYTE_KB125 = 125,
   NHU_POLL_BYTE_KB250 = 250,
   NHU_POLL_BYTE_KB375 = 375,
   NHU_POLL_BYTE_KB500 = 500,
   NHU_POLL_BYTE_KB750 = 750,
   NHU_POLL_BYTE_KB1000 = 1000,
   NHU_POLL_BYTE_KB1250 =1250,
   NHU_POLL_BYTE_KB1500 = 1500,
   NHU_POLL_BYTE_KB2000 = 2000,
   NHU_POLL_BYTE_KB3000 = 3000,
   NHU_POLL_BYTE_INF
} NhuRlcPollByte;
# 492 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef enum nhuTReOrdering
{
   NHU_TREORD_MS0 = 0,
   NHU_TREORD_MS5 = 5,
   NHU_TREORD_MS10 = 10,
   NHU_TREORD_MS15 = 15,
   NHU_TREORD_MS20 = 20,
   NHU_TREORD_MS25 = 25,
   NHU_TREORD_MS30 = 30,
   NHU_TREORD_MS35 = 35,
   NHU_TREORD_MS40 = 40,
   NHU_TREORD_MS45 = 45,
   NHU_TREORD_MS50 = 50,
   NHU_TREORD_MS55 = 55,
   NHU_TREORD_MS60 = 60,
   NHU_TREORD_MS65 = 65,
   NHU_TREORD_MS70 = 70,
   NHU_TREORD_MS75 = 75,
   NHU_TREORD_MS80 = 80,
   NHU_TREORD_MS85 = 85,
   NHU_TREORD_MS90 = 90,
   NHU_TREORD_MS95 = 95,
   NHU_TREORD_MS100 = 100,
   NHU_TREORD_MS110 = 110,
   NHU_TREORD_MS120 = 120,
   NHU_TREORD_MS130 = 130,
   NHU_TREORD_MS140 = 140,
   NHU_TREORD_MS150 = 150,
   NHU_TREORD_MS160 = 160,
   NHU_TREORD_MS170 = 170,
   NHU_TREORD_MS180 = 180,
   NHU_TREORD_MS190 = 190,
   NHU_TREORD_MS200 = 200
} NhuTReOrdering;
# 534 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef enum nhuTStatusProh
{
   NHU_STATUS_PROH_MS0 = 0,
   NHU_STATUS_PROH_MS5 = 5,
   NHU_STATUS_PROH_MS10 = 10,
   NHU_STATUS_PROH_MS15 = 15,
   NHU_STATUS_PROH_MS20 = 20,
   NHU_STATUS_PROH_MS25 = 25,
   NHU_STATUS_PROH_MS30 = 30,
   NHU_STATUS_PROH_MS35 = 35,
   NHU_STATUS_PROH_MS40 = 40,
   NHU_STATUS_PROH_MS45 = 45,
   NHU_STATUS_PROH_MS50 = 50,
   NHU_STATUS_PROH_MS55 = 55,
   NHU_STATUS_PROH_MS60 = 60,
   NHU_STATUS_PROH_MS65 = 65,
   NHU_STATUS_PROH_MS70 = 70,
   NHU_STATUS_PROH_MS75 = 75,
   NHU_STATUS_PROH_MS80 = 80,
   NHU_STATUS_PROH_MS85 = 85,
   NHU_STATUS_PROH_MS90 = 90,
   NHU_STATUS_PROH_MS95 = 95,
   NHU_STATUS_PROH_MS100 = 100,
   NHU_STATUS_PROH_MS105 = 105,
   NHU_STATUS_PROH_MS110 = 110,
   NHU_STATUS_PROH_MS115 = 115,
   NHU_STATUS_PROH_MS120 = 120,
   NHU_STATUS_PROH_MS125 = 125,
   NHU_STATUS_PROH_MS130 = 130,
   NHU_STATUS_PROH_MS135 = 135,
   NHU_STATUS_PROH_MS140 = 140,
   NHU_STATUS_PROH_MS145 = 145,
   NHU_STATUS_PROH_MS150 = 150,
   NHU_STATUS_PROH_MS155 = 155,
   NHU_STATUS_PROH_MS160 = 160,
   NHU_STATUS_PROH_MS165 = 165,
   NHU_STATUS_PROH_MS170 = 170,
   NHU_STATUS_PROH_MS175 = 175,
   NHU_STATUS_PROH_MS180 = 180,
   NHU_STATUS_PROH_MS185 = 185,
   NHU_STATUS_PROH_MS190 = 190,
   NHU_STATUS_PROH_MS195 = 195,
   NHU_STATUS_PROH_MS200 = 200,
   NHU_STATUS_PROH_MS205 = 205,
   NHU_STATUS_PROH_MS210 = 210,
   NHU_STATUS_PROH_MS215 = 215,
   NHU_STATUS_PROH_MS220 = 220,
   NHU_STATUS_PROH_MS225 = 225,
   NHU_STATUS_PROH_MS230 = 230,
   NHU_STATUS_PROH_MS235 = 235,
   NHU_STATUS_PROH_MS240 = 240,
   NHU_STATUS_PROH_MS245 = 245,
   NHU_STATUS_PROH_MS250 = 250,
   NHU_STATUS_PROH_MS300 = 300,
   NHU_STATUS_PROH_MS350 = 350,
   NHU_STATUS_PROH_MS400 = 400,
   NHU_STATUS_PROH_MS450 = 450,
   NHU_STATUS_PROH_MS500 = 500
} NhuTStatusProh;





typedef enum nhuSrsBwCfgCmn
{
   NHU_SRS_BW0,
   NHU_SRS_BW1,
   NHU_SRS_BW2,
   NHU_SRS_BW3,
   NHU_SRS_BW4,
   NHU_SRS_BW5,
   NHU_SRS_BW6,
   NHU_SRS_BW7
} NhuSrsBwCfgCmn;





typedef enum nhuSrsBwCfgDed
{
   NHU_SRSDED_BW0,
   NHU_SRSDED_BW1,
   NHU_SRSDED_BW2,
   NHU_SRSDED_BW3
} NhuSrsBwCfgDed;






typedef enum nhuSrsSubFrmCfg
{
   NHU_SRS_SC0,
   NHU_SRS_SC1,
   NHU_SRS_SC2,
   NHU_SRS_SC3,
   NHU_SRS_SC4,
   NHU_SRS_SC5,
   NHU_SRS_SC6,
   NHU_SRS_SC7,
   NHU_SRS_SC8,
   NHU_SRS_SC9,
   NHU_SRS_SC10,
   NHU_SRS_SC11,
   NHU_SRS_SC12,
   NHU_SRS_SC13,
   NHU_SRS_SC14,
   NHU_SRS_SC15
} NhuSrsSubFrmCfg;





typedef enum nhuSrsPeriodicity
{
   NHU_SRS_PRD_MS2,
   NHU_SRS_PRD_MS5,
   NHU_SRS_PRD_MS10,
   NHU_SRS_PRD_MS20,
   NHU_SRS_PRD_MS40,
   NHU_SRS_PRD_MS80,
   NHU_SRS_PRD_MS160,
   NHU_SRS_PRD_MS320
} NhuSrsPeriodicity;





typedef enum nhuSrsCShift
{
   NHU_SRS_CS0,
   NHU_SRS_CS1,
   NHU_SRS_CS2,
   NHU_SRS_CS3,
   NHU_SRS_CS4,
   NHU_SRS_CS5,
   NHU_SRS_CS6,
   NHU_SRS_CS7
} NhuSrsCShift;





typedef enum nhuSrsCfgPrd
{
   SRS_CFG_PRD_1 = 1,
   SRS_CFG_PRD_2 = 2,
   SRS_CFG_PRD_5 = 5,
   SRS_CFG_PRD_10 = 10,
   SRS_CFG_PRD_INF
} NhuSrsCfgPrd;





typedef enum nhuCipherAlgo
{
   NHU_CIPHER_ALGO_EEA0,
   NHU_CIPHER_ALGO_EEA1,
   NHU_CIPHER_ALGO_EEA2,
   NHU_CIPHER_ALGO_EEA3
} NhuCipherAlgo;





typedef enum nhuIntgAlgo
{


   NHU_INTG_ALGO_EIA0,

   NHU_INTG_ALGO_EIA1,
   NHU_INTG_ALGO_EIA2,
   NHU_INTG_ALGO_EIA3
} NhuIntgAlgo;





typedef enum nhuReEstCause
{
   NHU_REST_CAUSE_RECONFIG_FAIL,
   NHU_REST_CAUSE_HO_FAIL,
   NHU_REST_CAUSE_OTHER_FAIL
} NhuReEstCause;






typedef enum nhuPdschPaParam
{
   NHU_PDSCH_PA_MINUS_6,
   NHU_PDSCH_PA_MINUS_4DOT77,
   NHU_PDSCH_PA_MINUS_3,
   NHU_PDSCH_PA_MINUS_1DOT77,
   NHU_PDSCH_PA_ZERO,
   NHU_PDSCH_PA_ONE,
   NHU_PDSCH_PA_TWO,
   NHU_PDSCH_PA_THREE
} NhuPdschPaParam;
# 754 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuHdr
{
   NhuCellId cellId;
   NhuCrnti ueId;
   U32 transId;

   Bool isUlDatFwdReq;

} NhuHdr;





typedef U8 NhuErrType;




typedef U8 NhuErrCause;






typedef struct nhuErrorInfo
{
   Bool errPres;
   NhuErrType errType;
   NhuErrCause errCause;
} NhuErrorInfo;







typedef struct nhuNewUeInfo
{
   NhuCrnti newCrnti;
}NhuNewUeInfo;







typedef struct nhuPdcpRohcInfo
{
   U16 maxCid;
   U8 rohcProfileList[9];

}NhuPdcpRohcInfo;







typedef struct nhuPdcpHdrComprInfo
{
   NhuPdcpRohcInfo rohcInfo;
} NhuPdcpHdrComprInfo;






typedef struct nhuHoPdcpSduInfo
{
   U8 isHoPres;






   U8 snLen;
   U32 ulCountVal;
   U32 dlCountVal;

   U16 numBits;
   U8 *ulBitMap;
}NhuHoPdcpSduInfo;







typedef struct nhuPdcpCfg
{
   Bool intgReqd;
   U8 pdcpCfgType;
   U8 pdcpCfgBitMsk;
   NhuPdcpDiscardTmr discardTmr;
   NhuPdcpFlushTmr flushTmr;
   NhuPdcpSnSize snSize;
   Bool statusRptReq;
   NhuPdcpHdrComprInfo hdrComprInfo;
   NhuHoPdcpSduInfo hoPdcpSduStaInfo;


   Bool cfmReqd;

}NhuPdcpCfg;







typedef struct nhuLogChId
{
   CmLteLcType logChType;
   U8 lcId;
} NhuLogChId;
# 887 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuLogChCfg
{
   U8 logChCfgpres;
   U8 logChGrp;
}NhuLogChCfg;
# 900 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuUlLogChMap
{
   CmLteTrchType trChType;
   U8 lcCfgType;
   NhuLogChCfg lcCfg;
}NhuUlLogChMap;







typedef struct nhuDlUmRlcModeInfo
{
   U8 snFieldLen;
}NhuDlUmRlcModeInfo;






typedef struct nhuDlAmRlcModeInfo
{
   NhuMaxRetxThres maxRetxThresh;
   NhuRlcPollByte pollByte;
   NhuPollPdu pollPdu;
   NhuTPollReTx tPollRetx;
}NhuDlAmRlcModeInfo;







typedef struct nhuDlTmRlcModeInfo
{
   U32 bufferSize;
}NhuDlTmRlcModeInfo;







typedef struct nhuUlUmRlcModeInfo
{
   U8 snFieldLen;
   NhuTReOrdering tReordring;
}NhuUlUmRlcModeInfo;






typedef struct nhuUlAmRlcModeInfo
{
   NhuTStatusProh tStatusProh;
   NhuTReOrdering tReordring;
}NhuUlAmRlcModeInfo;







typedef struct nhuUlRlcMode
{
   U8 rlcCfgType;
   U8 mode;
   union
   {
      NhuUlUmRlcModeInfo umRlc;
      NhuUlAmRlcModeInfo amRlc;
   }m;
} NhuUlRlcMode;
# 991 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuUlRbCfg
{
   U8 ulRbBitMsk;
   NhuUlLogChMap ulLogChMap;
   NhuUlRlcMode ulRlcMode;
}NhuUlRbCfg;
# 1005 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuDlLogChMap
{
   CmLteTrchType trChType;
}NhuDlLogChMap;







typedef struct nhuDlRlcMode
{
   U8 rlcCfgType;
   U8 mode;
   union
   {
      NhuDlUmRlcModeInfo umRlc;
      NhuDlAmRlcModeInfo amRlc;
      NhuDlTmRlcModeInfo tmRlc;
   }m;
} NhuDlRlcMode;
# 1037 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuDlRbCfg
{
   U8 dlRbBitMsk;
   NhuDlLogChMap dlLogChMap;
   NhuDlRlcMode dlRlcMode;
}NhuDlRbCfg;
# 1056 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuRbCfgInfo
{
   NhuRbId rbId;
   NhuLogChId lcId;
   U8 rbCfgBitMsk;

   NhuUlRbCfg ulRbCfg;
   NhuDlRbCfg dlRbCfg;
   NhuPdcpCfg pdcpCfg;


   U8 qci;


}NhuRbCfgInfo;






typedef struct nhuRbCfgList
{
   U8 numOfRbCfgInfo;
   NhuRbCfgInfo *rbCfgInfoList;
   U8 isHO;
}NhuRbCfgList;
# 1091 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuRbRlsCfgList
{
   U8 numOfRbCfgInfo;
   NhuRbId *rbsToRel;
}NhuRbRlsCfgList;
# 1106 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuRbCfgAllList
{
   U8 rbCfgTypBitMsk;
   NhuRbCfgList rbToAddCfgList;
   NhuRbCfgList rbToModCfgList;
   NhuRbRlsCfgList rbToRlsCfgList;
}NhuRbCfgAllList;






typedef struct nhuUlHarqCfg
{
   NhuMaxHarqTx ulMaxHarqTx;
   U8 deltaHarqOffset;
}NhuUlHarqCfg;
# 1132 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuTrChCfg
{
   U8 trChCfgType;
   U8 trChBitMsk;
   NhuUlHarqCfg ulHarqCfg;
}NhuTrChCfg;







typedef struct nhuIntgKeyAlgoInfo
{
   U8 action;
   NhuIntgAlgo intgAlgo;
   U8 intgKey[16];
} NhuIntgKeyAlgoInfo;







typedef struct nhuCiphKeyAlgoInfo
{
   NhuCipherAlgo ciphAlgo;
   U8 cipherCpKey[16];
   U8 cipherUpKey[16];
} NhuCiphKeyAlgoInfo;
# 1173 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuSecurityCfg
{
   U8 secCfgBitMsk;

   NhuIntgKeyAlgoInfo intgCfgInfo;
   NhuCiphKeyAlgoInfo cipherCfgInfo;
} NhuSecurityCfg;
# 1577 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuUeLLyrSapIdInfo
{

   SuId kwuSapId;
   SuId ckwSapId;
   SuId crgSapId;
   SuId cpjSapId;
   SuId pjuSapId;
   SpId macRguUlSapId;
   SpId macRguDlSapId;
   SpId rlcRguSapId;
   SpId rlcKwuUlSapId;
   SpId rlcKwuDlSapId;
} NhuUeLLyrSapIdInfo;







typedef struct nhuLLyrSapIdInfo
{
   SuId kwuSapId;
   SuId ckwSapId;
   SuId crgSapId;
   SuId cpjSapId;
   SuId pjuSapId;

   SpId rguUlSapId;
   SpId rguDlSapId;

   SpId rguSapId;



} NhuLLyrSapIdInfo;
# 1627 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuUeCfgInfo
{
   U8 conReCfgCause;
# 1638 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
   U8 ueCfgBitMsk;

   NhuRbCfgAllList rbCfgAllList;
   NhuTrChCfg trChCfg;

   NhuSecurityCfg secCfg;
   NhuNewUeInfo ueInfo;







   NhuUeLLyrSapIdInfo uellyrSapIdInfo;





} NhuUeCfgInfo;






typedef struct nhuUlDcchMsg
{
   U8 pdcpId;
   NhuUL_DCCH_Msg dcchMsg;
}NhuUlDcchMsg;






typedef struct nhuDlDcchMsg
{
   U8 pdcpId;
   Bool isMsgEncoded;
# 1689 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
   union
   {
      NhuDL_DCCH_Msg dcchMsg;
      Buffer *mBuf;

   } m;
}NhuDlDcchMsg;
# 1704 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuDedMsg
{
   NhuDlDcchMsg dlDcchMsg;
} NhuDedMsg;






typedef struct nhuTimingInfo
{
   U16 sfn;
   U8 subframe;
} NhuTimingInfo;







typedef struct nhuCmnMsgInfo
{
   U8 rbId;
   NhuTimingInfo timingInfo;

   U32 tbsSize;

} NhuCmnMsgInfo;
# 1743 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuCmnMsg
{
   NhuCmnMsgInfo cmnMsgInfo;
   U8 cmnMsgCategory;
   union
   {
      NhuPCCH_Msg pcchMsg;
      NhuBCCH_BCH_Msg bcchBchMsg;
      NhuBCCH_DL_SCH_Msg bcchDlSchMsg;
   } cmn;
} NhuCmnMsg;
# 1768 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuDatReqUeMsg
{
   Bool isMsgDed;
   union
   {
      NhuDedMsg dedMsg;
      NhuCmnMsg cmnMsg;
   } msg;
} NhuDatReqUeMsg;
# 1793 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuDatReqSdus
{
   CmMemListCp memCp;
   NhuHdr hdr;
   struct
   {
      NhuDatReqUeMsg ueMsg;
      Bool isUeCfgPres;

      NhuUeCfgInfo ueCfg;

   } sdu;
} NhuDatReqSdus;







typedef struct nhuUlCcchMsg
{
   U8 rbId;
   NhuCrnti tmpCrnti;
   NhuUL_CCCH_Msg ccchMsg;
}NhuUlCcchMsg;







typedef struct nhuDlCcchMsg
{
   NhuCrnti tmpCrnti;
   U8 rbId;
   NhuDL_CCCH_Msg ccchMsg;
}NhuDlCcchMsg;
# 1844 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuDatRspSdus
{
   CmMemListCp memCp;
   NhuHdr hdr;
   struct
   {
      U8 msgCategory;
      union
      {
         NhuDlCcchMsg dlCcchMsg;
         NhuDlDcchMsg dlDcchMsg;
      } m;
      U8 isUeCfgPres;

      NhuUeCfgInfo ueCfg;

   }sdu;
} NhuDatRspSdus;
# 1873 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuDatIndSdus
{
   CmMemListCp memCp;
   NhuHdr hdr;
   NhuErrorInfo err;
   struct
   {
      U8 msgCategory;
      union
      {
         NhuUlCcchMsg ulCcchMsg;
         NhuUlDcchMsg ulDcchMsg;
      } m;
   }sdu;
} NhuDatIndSdus;





typedef enum nhuSysBw
{
   NHU_SYS_BW_N6 = 6,
   NHU_SYS_BW_N15 = 15,
   NHU_SYS_BW_N25 = 25,
   NHU_SYS_BW_N50 = 50,
   NHU_SYS_BW_N75 = 75,
   NHU_SYS_BW_N100 = 100
} NhuSysBw;







typedef enum nhuPhichDur
{
   NHU_PHICH_DUR_NORMAL,
   NHU_PHICH_DUR_EXTEND
} NhuPhichDur;





typedef enum nhuPhichResrc
{
   NHU_NG_ONESIXTH,
   NHU_NG_HALF,
   NHU_NG_ONE,
   NHU_NG_TWO
} NhuPhichResrc;






typedef struct nhuPhichCfg
{
   NhuPhichResrc resrc;
   NhuPhichDur duration;
} NhuPhichCfg;







typedef struct nhuPucchCfg
{
   U8 pucchFixBw;
   U16 n1PucchAn;
   NhuPucchDeltaShift deltaShift;
   U8 cyclShift;

}NhuPucchCfg;






typedef enum nhuNumRaPreamble
{
   NHU_RA_PREAMBLE_N4 = 4,
   NHU_RA_PREAMBLE_N8 = 8,
   NHU_RA_PREAMBLE_N12 = 12,
   NHU_RA_PREAMBLE_N16 = 16,
   NHU_RA_PREAMBLE_N20 = 20,
   NHU_RA_PREAMBLE_N24 = 24,
   NHU_RA_PREAMBLE_N28 = 28,
   NHU_RA_PREAMBLE_N32 = 32,
   NHU_RA_PREAMBLE_N36 = 36,
   NHU_RA_PREAMBLE_N40 = 40,
   NHU_RA_PREAMBLE_N44 = 44,
   NHU_RA_PREAMBLE_N48 = 48,
   NHU_RA_PREAMBLE_N52 = 52,
   NHU_RA_PREAMBLE_N56 = 56,
   NHU_RA_PREAMBLE_N60 = 60,
   NHU_RA_PREAMBLE_N64 = 64
} NhuNumRaPreamble;





typedef enum nhuSizeRaPreambleGrpA
{
   NHU_SIZE_RA_PREAMBLE_GRPA_N4 = 4,
   NHU_SIZE_RA_PREAMBLE_GRPA_N8 = 8,
   NHU_SIZE_RA_PREAMBLE_GRPA_N12 = 12,
   NHU_SIZE_RA_PREAMBLE_GRPA_N16 = 16,
   NHU_SIZE_RA_PREAMBLE_GRPA_N20 = 20,
   NHU_SIZE_RA_PREAMBLE_GRPA_N24 = 24,
   NHU_SIZE_RA_PREAMBLE_GRPA_N28 = 28,
   NHU_SIZE_RA_PREAMBLE_GRPA_N32 = 32,
   NHU_SIZE_RA_PREAMBLE_GRPA_N36 = 36,
   NHU_SIZE_RA_PREAMBLE_GRPA_N40 = 40,
   NHU_SIZE_RA_PREAMBLE_GRPA_N44 = 44,
   NHU_SIZE_RA_PREAMBLE_GRPA_N48 = 48,
   NHU_SIZE_RA_PREAMBLE_GRPA_N52 = 52,
   NHU_SIZE_RA_PREAMBLE_GRPA_N56 = 56,
   NHU_SIZE_RA_PREAMBLE_GRPA_N60 = 60,
   NHU_SIZE_RA_PREAMBLE_GRPA_N64 = 64
} NhuSizeRaPreambleGrpA;





typedef enum nhuPrmblRspWinSize
{
   NHU_PRMBL_RSP_WIN_SIZE_SF2 = 2,
   NHU_PRMBL_RSP_WIN_SIZE_SF3 = 3,
   NHU_PRMBL_RSP_WIN_SIZE_SF4 = 4,
   NHU_PRMBL_RSP_WIN_SIZE_SF5 = 5,
   NHU_PRMBL_RSP_WIN_SIZE_SF6 = 6,
   NHU_PRMBL_RSP_WIN_SIZE_SF7 = 7,
   NHU_PRMBL_RSP_WIN_SIZE_SF8 = 8,
   NHU_PRMBL_RSP_WIN_SIZE_SF10 = 10
} NhuPrmblRspWinSize;




typedef enum nhuRaSfn
{
   NHU_SFN_EVEN,
   NHU_SFN_ANY,
   NHU_SFN_NA
} NhuRaSFN;





typedef enum nhuDuplexMode
{
   NHU_MODE_FDD=1,
   NHU_MODE_TDD
} NhuDuplexMode;






typedef struct nhuRaOccasion
{
   U8 size;
   NhuRaSFN sfnEnum;
   U8 subFrameNum[10];
}NhuRaOccasion;







typedef struct nhuRachCfg
{
   U8 maxMsg3Tx;
}NhuRachCfg;







typedef struct nhuCmnMacCfg
{
   NhuRachCfg rachCfg;
} NhuCmnMacCfg;
# 2079 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuBwCfg
{
   NhuSysBw ulSysBw;
   NhuSysBw dlSysBw;


}NhuSysBwCfg;
# 2257 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuCellCfgInfo
{
   NhuDuplexMode duplexMode;


   NhuSysBwCfg sysBwCfg;
   U8 cellCfgBitMsk;

   NhuRbCfgList rbToAddCfgList;
   NhuCmnMacCfg macCmnCfg;




   NhuLLyrSapIdInfo llyrSapIdInfo;

} NhuCellCfgInfo;
# 2284 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuCellReCfgInfo
{
   CmLteTimingInfo actvnTime;
   U8 cellCfgBitMsk;

   NhuCmnMacCfg macCmnCfg;



} NhuCellReCfgInfo;






typedef struct nhuCellRlsInfo
{
   NhuCellId cellId;
} NhuCellRlsInfo;
# 2314 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuCellCfgReqSdus
{
   CmMemListCp memCp;
   NhuHdr hdr;
   struct
   {
      U8 cfgType;
      union
      {
         NhuCellCfgInfo cfgInfo;
         NhuCellReCfgInfo reCfgInfo;
         NhuCellRlsInfo rlsInfo;
      } u;
   } sdu;
} NhuCellCfgReqSdus;
# 2337 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuCellCfgCfmSdus
{
   NhuHdr hdr;
   struct
   {
      Bool isCfgSuccess;
      NhuErrorInfo cfgError;
   } sdu;
} NhuCellCfgCfmSdus;
# 2359 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuStaIndSdus
{
   NhuHdr hdr;
   U8 pdcpId;
   U8 cause;
} NhuStaIndSdus;
# 2379 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuDatCfmSdus
{
   NhuHdr hdr;
   U8 pdcpId;
   U8 datCfmStatus;
} NhuDatCfmSdus;
# 2397 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuErrIndSdus
{
   NhuHdr hdr;
   NhuErrorInfo sdu;
} NhuErrIndSdus;
# 2414 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuCfgReqSdus
{
   CmMemListCp memCp;
   NhuHdr hdr;
   NhuUeCfgInfo cfgInfo;
} NhuCfgReqSdus;







typedef struct nhuCfgCfmSdus
{
   NhuHdr hdr;
   struct
   {
      Bool isCfgSuccess;
      NhuErrorInfo cfgError;
   } sdu;
} NhuCfgCfmSdus;
# 2448 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuEncSdusReq
{
   CmMemListCp memCp;
   NhuHdr hdr;
   struct
   {
      U8 msgCategory;
      union
      {
         NhuDL_DCCH_Msg dcchMsg;
         NhuHovrCmd hovrCmd;
         NhuUERadioAccessCapInfo ueRadioCapInfo;

         NhuUECapInfo ueCapInfo;




         NhuHovrPrepInfo hovrPrepInfo;

         NhuToTgtRNC_Cont nhuIntRatHoInfoWithUeCap;




      } u;
   }sdu;
}NhuEncReqSdus;






typedef struct nhuEncSdusCfm
{
   NhuHdr hdr;
   struct
   {
      U8 msgCategory;
      U32 msgLen;
      Status status;
      Buffer *mBuf;
   } sdu;
} NhuEncCfmSdus;







typedef struct nhuRcvStaOfUlPdcpSdus
{
   U16 numBits;
   U8 *ulBitMap;
} NhuRcvStaOfUlPdcpSdus;






typedef struct nhuPdcpSduStaInfo
{
   U8 drbId;
   U8 dir;
   U8 snLen;
   U32 ulCountVal;
   U32 dlCountVal;

   NhuRcvStaOfUlPdcpSdus rcvStaOfUlPdcpSdus;


} NhuPdcpSduStaInfo;






typedef struct nhuPdcpSduStaCfm
{
   CmMemListCp memCp;
   NhuHdr hdr;
   U16 numRbId;
   NhuPdcpSduStaInfo *pdcpSduStaInfo;

   Status status;
   Reason reason;
} NhuPdcpSduStaCfm;







typedef struct nhuPdcpDatResumeCfm
{
   CmMemListCp memCp;
   NhuHdr hdr;
   Status status;
   Reason reason;
} NhuPdcpDatResumeCfm;






typedef struct nhuDecodeSduReq
{
   NhuHdr hdr;
   U16 sduType;
   Buffer *mbuf;
} NhuDecodeSduReq;
# 2587 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
typedef struct nhuDecodeSduCfm
{
   CmMemListCp memCp;
   NhuHdr hdr;
   U16 sduType;
   Bool status;
   union
   {
         NhuUE_EUTRA_Cap nhuUE_EUTRA_Cap;
         NhuHovrCmd hovrCmd;
         NhuUECapInfo ueCapInfo;
         NhuHovrPrepInfo nhuHovrPrepInfo;
         NhuUERadioAccessCapInfo ueRadioCapInfo;

         NhuUE_EUTRA_Cap_v9a0_IEs eUTRA_Cap_v9a0;


         NhuToTgtRNC_Cont nhuIntRatHoInfoWithUeCap;
   }ie;
} NhuDecodeSduCfm;







typedef struct nhuDRBCountInfo
{
   U8 drbId;
   U8 drbDirection;
   U32 ulCount;
   U32 dlCount;
} NhuDrbCountInfo;







typedef struct nhuDRBCountInfoLst
{
   CmMemListCp memCp;
   NhuHdr countHdr;
   U8 numDrbs;
   U8 status;
   NhuDrbCountInfo *member;
} NhuDRBCountInfoLst;


typedef S16 (*NhuBndReq) ( Pst *pst, SuId suId, SpId spId)


                                  ;

typedef S16 (*NhuBndCfm) ( Pst *pst, SuId suId, U8 status)


                                    ;

typedef S16 (*NhuUbndReq) ( Pst *pst, SpId spId, Reason reason)


                                    ;

typedef S16 (*NhuDatReq) ( Pst *pst, SpId spId, NhuDatReqSdus *nhuDatReqSdus )



                 ;

typedef S16 (*NhuDatRsp) ( Pst *pst, SpId spId, NhuDatRspSdus *nhuDatRspSdus )



                 ;


typedef S16 (*NhuDatInd) ( Pst *pst, SuId suId, NhuDatIndSdus *nhuDatIndSdus )



                 ;

typedef S16 (*NhuDatCfm) ( Pst *pst, SuId suId, NhuDatCfmSdus *nhuDatCfmSdus )



                 ;
typedef S16 (*NhuStaInd) ( Pst *pst, SuId suId, NhuStaIndSdus *nhuStaIndSdus )



                 ;

typedef S16 (*NhuErrInd) ( Pst *pst, SuId suId, NhuErrIndSdus *nhuErrIndSdus )



                 ;

typedef S16 (*NhuCfgReq) ( Pst *pst, SpId spId, NhuCfgReqSdus *nhuCfgReqSdus )



                 ;

typedef S16 (*NhuCfgCfm) ( Pst *pst, SuId suId, NhuCfgCfmSdus *nhuCfgCfmSdus )



                 ;

typedef S16 (*NhuCnclUeReq) ( Pst *pst, SpId spId, NhuCellId cellId, NhuCrnti crnti )




                 ;

typedef S16 (*NhuCellCfgReq) ( Pst *pst, SpId spId, NhuCellCfgReqSdus *nhuCellCfgReqSdus )



                 ;

typedef S16 (*NhuCellCfgCfm) ( Pst *pst, SuId suId, NhuCellCfgCfmSdus *nhuCellCfgCfmSdus )



                 ;

typedef S16 (*NhuDeleteTransReq) ( Pst *pst, SpId spId, NhuCellId cellid, NhuCrnti ueId, U32 transId )





                 ;

typedef S16 (*NhuEncReq) ( Pst *pst, SpId spId, NhuEncReqSdus *nhuEncReqSdus )



                 ;

typedef S16 (*NhuEncCfm) ( Pst *pst, SuId suId, NhuEncCfmSdus *nhuEncCfmSdus )



                 ;

typedef S16 (*NhuSduStaReq) ( Pst *pst, SpId spId, NhuHdr hdr )



                 ;

typedef S16 (*NhuSduStaCfm) ( Pst *pst, SuId suId, NhuPdcpSduStaCfm *pdcpSduStaCfm )



                 ;

typedef S16 (*NhuDecodeReq) ( Pst *pst, SpId spId, NhuDecodeSduReq *nhuDecodeSduReq )



                 ;

typedef S16 (*NhuDecodeCfm) ( Pst *pst, SuId suId, NhuDecodeSduCfm *nhuDecodeSduCfm )



                 ;

typedef S16 (*NhuCountReq) ( Pst *pst, SpId spId, NhuHdr *countHdr )



                 ;

typedef S16 (*NhuCountCfm) ( Pst *pst, SuId suId, NhuDRBCountInfoLst *nhuDRBCountInfoLst )



                 ;

typedef S16 (*NhuDataFwdReq) ( Pst *pst, SpId spId, NhuHdr dataFwdHdr )



                 ;

typedef S16 (*NhuDatResumeReq) ( Pst *pst, SpId spId, NhuHdr dataFwdHdr )



                 ;

typedef S16 (*NhuDatResumeCfm) ( Pst *pst, SuId suId, NhuPdcpDatResumeCfm *pdcpDatResumeCfm )



                 ;


   extern S16 NxLiNhuBndCfm (Pst *pst, SuId suId, U8 status);
   extern S16 NxLiNhuDatCfm (Pst *pst, SuId suId, NhuDatCfmSdus *nhuDatCfmSdus)
                                                                ;
   extern S16 NxLiNhuStaInd (Pst *pst, SuId suId, NhuStaIndSdus *nhuStaIndSdus)
                                                                ;
   extern S16 NxLiNhuDatInd (Pst *pst, SuId suId, NhuDatIndSdus *nhuDatIndSdus);
   extern S16 NxLiNhuErrInd (Pst *pst, SuId suId, NhuErrIndSdus *nhuErrIndSdus);
   extern S16 NxLiNhuCfgCfm (Pst *pst, SuId suId, NhuCfgCfmSdus *nhuCfgCfmSdus);
   extern S16 NxLiNhuCellCfgCfm (Pst *pst, SuId suId, NhuCellCfgCfmSdus *nhuCellCfgCfmSdus);
   extern S16 NxLiNhuEncodeCfm (Pst *pst, SuId suId, NhuEncCfmSdus *nhuEncCfmSdus);
   extern S16 NxLiNhuPdcpSduStaCfm (Pst *pst, SuId suId, NhuPdcpSduStaCfm *nhuPdcpSduStaCfm)
                                                                             ;
   extern S16 NxLiNhuDecodeCfm (Pst *pst, SuId suId, NhuDecodeSduCfm *nhuDecodeSduCfm);
   extern S16 NxLiNhuCountCfm (Pst *pst, SuId suId, NhuDRBCountInfoLst *nhuDRBCountInfoLst);
   extern S16 NxLiNhuPdcpDatResumeCfm (Pst *pst, SuId suId, NhuPdcpDatResumeCfm *nhuPdcpDatResumeCfm)
                                                                                   ;
# 2833 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
   extern S16 NhUiNhuDatInd (Pst *pst, SuId suId, NhuDatIndSdus *nhuDatIndSdus);
# 2858 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
   extern S16 NhUiNhuErrInd (Pst *pst, SuId suId, NhuErrIndSdus *nhuErrIndSdus);
# 2878 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
   extern S16 NhUiNhuCfgCfm (Pst *pst, SuId suId, NhuCfgCfmSdus *nhuCfgCfmSdus);
# 2898 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
   extern S16 NhUiNhuCellCfgCfm (Pst *pst, SuId suId, NhuCellCfgCfmSdus *nhuCfgCellCfmSdus);
# 2927 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
   extern S16 NhUiNhuBndReq (Pst *pst, SuId suId, SpId spId);
# 2946 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
   extern S16 NhUiNhuUbndReq (Pst *pst, SpId spId, Reason reason);
# 2971 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
   extern S16 NhUiNhuBndCfm (Pst *pst, SuId suId, U8 status);
# 2990 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
   extern S16 NhUiNhuDatReq (Pst *pst, SpId spId, NhuDatReqSdus *nhuDatReqSdus);
# 3004 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
   extern S16 NhUiNhuDatRsp (Pst *pst, SpId spId, NhuDatRspSdus *nhuDatRspSdus);
# 3023 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
   extern S16 NhUiNhuCfgReq (Pst *pst, SpId spId, NhuCfgReqSdus *nhuCfgReqSdu);
# 3041 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
   extern S16 NhUiNhuCnclUeReq (Pst *pst, SpId spId, NhuCellId cellId, NhuCrnti crnti);
# 3070 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
   extern S16 NhUiNhuCellCfgReq (Pst *pst, SpId spId, NhuCellCfgReqSdus *nhuCellCfgReqSdu);
# 3086 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
   extern S16 NhUiNhuDeleteTransReq (Pst *pst, SpId spId, NhuCellId cellId, NhuCrnti crnti, U32 transId)
                                                                           ;
# 3103 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
   extern S16 NhUiNhuDatCfm (Pst *pst, SuId suId, NhuDatCfmSdus *nhuDatCfmSdus)
                                                                  ;
# 3121 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
extern S16 NhUiNhuStaInd (Pst *pst, SuId suId, NhuStaIndSdus *nhStaInd)
                                                             ;
# 3138 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
extern S16 NhUiNhuEncodeReq (Pst *pst, SpId spId, NhuEncReqSdus *nhuEncReqSdus)
                                                             ;
# 3155 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
extern S16 NhUiNhuEncodeCfm (Pst *pst, SuId suId, NhuEncCfmSdus *nhuEncCfmSdus)
                                                             ;
# 3172 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
extern S16 NhUiNhuPdcpSduStaReq (Pst *pst, SpId spId, NhuHdr nhuHdr);
# 3188 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
extern S16 NhUiNhuStartPdcpDataFwdReq (Pst *pst, SpId spId, NhuHdr nhuHdr);
# 3205 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
extern S16 NhUiNhuPdcpDatResumeReq (Pst *pst, SpId spId, NhuHdr nhuHdr);
# 3220 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
extern S16 NhUiNhuPdcpSduStaCfm (Pst *pst, SuId suId, NhuPdcpSduStaCfm *nhuPdcpSduStaCfm)
                                                                   ;

extern S16 NhUiNhuPdcpDatResumeCfm
( Pst *pst, SuId suId, NhuPdcpDatResumeCfm *nhuPdcpDatResumeCfm )



  ;
# 3250 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
extern S16 NhUiNhuDecodeReq (Pst *pst, SpId spId, NhuDecodeSduReq *nhuDecodeSduReq);
# 3267 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
extern S16 NhUiNhuDecodeCfm (Pst *pst, SuId suId, NhuDecodeSduCfm *nhuDecodeSduCfm);
# 3292 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
extern S16 NhUiNhuCountReq (Pst *pst, SpId spId, NhuHdr *countHdr);
# 3311 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
extern S16 NhUiNhuCountCfm (Pst *pst, SuId suId, NhuDRBCountInfoLst *nhuDRBCountInfoLst);
# 3320 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
extern S16 cmPkNhuLLyrSapIdInfo ( NhuLLyrSapIdInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUeLLyrSapIdInfo ( NhuUeLLyrSapIdInfo *param, Buffer *mBuf )


  ;
# 3344 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
extern S16 cmPkNhuBndCfm ( Pst *pst, SuId suId, U8 status )



  ;
extern S16 cmPkNhuDatInd ( Pst *pst, SuId suId, NhuDatIndSdus *nhuDatIndSdus )



  ;
extern S16 cmPkNhuErrInd ( Pst *pst, SuId suId, NhuErrIndSdus *nhuErrIndSdus )



  ;
extern S16 cmPkNhuDatCfm ( Pst *pst, SuId suId, NhuDatCfmSdus *nhuDatCfmSdus )



  ;
extern S16 cmPkNhuCfgCfm ( Pst *pst, SuId suId, NhuCfgCfmSdus *nhuCfgCfmSdus )



  ;
extern S16 cmPkNhuCellCfgCfm ( Pst *pst, SuId suId, NhuCellCfgCfmSdus *nhuCellCfgCfmSdus )



  ;
extern S16 cmPkNhuDecodeCfm ( Pst *pst, SuId suId, NhuDecodeSduCfm *nhuDecodeSduCfm )



  ;
extern S16 cmPkNhuCountCfm ( Pst *pst, SuId suId, NhuDRBCountInfoLst *nhuDRBCountInfoLst )



  ;
extern S16 cmPkNhuHdr ( NhuHdr *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuErrorInfo ( NhuErrorInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuNewUeInfo ( NhuNewUeInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuPdcpRohcInfo ( NhuPdcpRohcInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuPdcpHdrComprInfo ( NhuPdcpHdrComprInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuPdcpCfg ( NhuPdcpCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuLogChId ( NhuLogChId *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuLogChCfg ( NhuLogChCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUlLogChMap ( NhuUlLogChMap *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDlUmRlcModeInfo ( NhuDlUmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDlAmRlcModeInfo ( NhuDlAmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDlTmRlcModeInfo ( NhuDlTmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUlUmRlcModeInfo ( NhuUlUmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUlAmRlcModeInfo ( NhuUlAmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUlRlcMode ( NhuUlRlcMode *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUlRbCfg ( NhuUlRbCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDlLogChMap ( NhuDlLogChMap *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDlRlcMode ( NhuDlRlcMode *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDlRbCfg ( NhuDlRbCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuRbCfgInfo ( NhuRbCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuRbCfgList ( NhuRbCfgList *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuRbRlsCfgList ( NhuRbRlsCfgList *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuRbCfgAllList ( NhuRbCfgAllList *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUlHarqCfg ( NhuUlHarqCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuTrChCfg ( NhuTrChCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuIntgKeyAlgoInfo
( NhuIntgKeyAlgoInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCiphKeyAlgoInfo
( NhuCiphKeyAlgoInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuSecurityCfg
( NhuSecurityCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUeCfgInfo
( NhuUeCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUlDcchMsg
( NhuUlDcchMsg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDlDcchMsg
( NhuDlDcchMsg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDedMsg
( NhuDedMsg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCmnMsgInfo
( NhuCmnMsgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCmnMsg
( NhuCmnMsg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDatReqUeMsg
( NhuDatReqUeMsg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDatReqSdus
( NhuDatReqSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuUlCcchMsg
( NhuUlCcchMsg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDlCcchMsg
( NhuDlCcchMsg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDatRspSdus
( NhuDatRspSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDatIndSdus
( NhuDatIndSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuRaOccasion
( NhuRaOccasion *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuRachCfg
( NhuRachCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCmnMacCfg
( NhuCmnMacCfg *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCellCfgInfo
( NhuCellCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCellCfgReqSdus
( NhuCellCfgReqSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCellCfgCfmSdus
( NhuCellCfgCfmSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuStaIndSdus
( NhuStaIndSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDatCfmSdus
( NhuDatCfmSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuErrIndSdus
( NhuErrIndSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCfgReqSdus
( NhuCfgReqSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCfgCfmSdus
( NhuCfgCfmSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuBndReq
( Pst *pst, SuId suId, SpId spId )



  ;
extern S16 cmPkNhuUbndReq
( Pst *pst, SpId spId, Reason reason )



  ;
extern S16 cmPkNhuDatReq
( Pst *pst, SpId spId, NhuDatReqSdus *nhuDatReqSdus )



  ;
extern S16 cmPkNhuCfgReq
( Pst *pst, SpId spId, NhuCfgReqSdus *nhuCfgReqSdus )



  ;
extern S16 cmPkNhuCnclUeReq
( Pst *pst, SpId spId, NhuCellId cellId, NhuCrnti crnti )




  ;
extern S16 cmPkNhuCellCfgReq
( Pst *pst, SpId spId, NhuCellCfgReqSdus *nhuCellCfgReqSdus )



  ;
extern S16 cmPkNhuDeleteTransReq
( Pst *pst, SpId spId, NhuCellId cellId, NhuCrnti ueId, U32 transId )





  ;
extern S16 cmPkNhuDatRsp
( Pst *pst, SpId spId, NhuDatRspSdus *nhuDatRspSdus )



  ;
extern S16 cmPkNhuStaInd
( Pst *pst, SuId suId, NhuStaIndSdus *nhuStaIndSdus )



  ;
extern S16 cmPkNhuDecodeReq
( Pst *pst, SpId spId, NhuDecodeSduReq *nhuDecodeSduReq )



  ;
extern S16 cmPkNhuCountReq
( Pst *pst, SpId spId, NhuHdr *nhuHdr )



  ;
extern S16 cmPkNhuEncodeReq
( Pst *pst, SpId spId, NhuEncReqSdus *nhuEncReqSdus )



  ;
extern S16 cmPkNhuEncReqSdus
( NhuEncReqSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuEncodeCfm
( Pst *pst, SuId suId, NhuEncCfmSdus *nhuEncSdusCfm )



  ;
extern S16 cmPkNhuEncCfmSdus
( NhuEncCfmSdus *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuPdcpSduStaReq
( Pst *pst, SpId spId, NhuHdr hdr )



  ;

extern S16 cmPkNhuStartPdcpDataFwdReq
( Pst *pst, SpId spId, NhuHdr hdr )



  ;

extern S16 cmPkNhuPdcpDatResumeReq
( Pst *pst, SpId spId, NhuHdr hdr )



  ;

extern S16 cmPkNhuPdcpSduStaCfm
( Pst *pst, SuId suId, NhuPdcpSduStaCfm *nhuPdcpSduStaCfm )



  ;
extern S16 cmPkNhuPdcpSduStaCfmSdus
( NhuPdcpSduStaCfm *param, Buffer *mBuf )


  ;

extern S16 cmPkNhuPdcpDatResumeCfm
( Pst *pst, SuId suId, NhuPdcpDatResumeCfm *nhuPdcpDatResumeCfm )



  ;
extern S16 cmPkNhuPdcpSduStaInfo
( NhuPdcpSduStaInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuPdcpCfgSduStaInfo
( NhuHoPdcpSduInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDecodeSduReq
( NhuDecodeSduReq *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDecodeSduCfm
( NhuDecodeSduCfm *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuDRBCountInfoLst
( NhuDRBCountInfoLst *param, Buffer *mBuf )


  ;


extern S16 cmPkNhuUL_DCCH_Msg (NhuUL_DCCH_Msg *param, Buffer *mBuf);
extern S16 cmPkNhuDL_DCCH_Msg (NhuDL_DCCH_Msg *param, Buffer *mBuf);
extern S16 cmPkNhuBCCH_BCH_Msg (NhuBCCH_BCH_Msg *param, Buffer *mBuf);
extern S16 cmPkNhuBCCH_DL_SCH_Msg (NhuBCCH_DL_SCH_Msg *param, Buffer *mBuf)
       ;
extern S16 cmPkNhuPCCH_Msg (NhuPCCH_Msg *param, Buffer *mBuf);
extern S16 cmPkNhuUL_CCCH_Msg (NhuUL_CCCH_Msg *param, Buffer *mBuf);
extern S16 cmPkNhuDL_CCCH_Msg (NhuDL_CCCH_Msg *param, Buffer *mBuf);


extern S16 cmUnpkNhuLLyrSapIdInfo ( NhuLLyrSapIdInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuUeLLyrSapIdInfo ( NhuUeLLyrSapIdInfo *param, Buffer *mBuf )


  ;



extern S16 cmUnpkNhuHdr
( NhuHdr *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuErrorInfo
( NhuErrorInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuNewUeInfo
( NhuNewUeInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuPdcpRohcInfo
( NhuPdcpRohcInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuPdcpHdrComprInfo
( NhuPdcpHdrComprInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuPdcpCfg
( NhuPdcpCfg *param, Buffer *mBuf, Ptr ptr )



  ;
extern S16 cmUnpkNhuLogChId
( NhuLogChId *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuLogChCfg
( NhuLogChCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuUlLogChMap
( NhuUlLogChMap *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDlUmRlcModeInfo
( NhuDlUmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDlAmRlcModeInfo
( NhuDlAmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDlTmRlcModeInfo
( NhuDlTmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuUlUmRlcModeInfo
( NhuUlUmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuUlAmRlcModeInfo
( NhuUlAmRlcModeInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuUlRlcMode
( NhuUlRlcMode *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuUlRbCfg
( NhuUlRbCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDlLogChMap
( NhuDlLogChMap *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDlRlcMode
( NhuDlRlcMode *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDlRbCfg
( NhuDlRbCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuRbCfgInfo
( NhuRbCfgInfo *param, Buffer *mBuf, Ptr ptr )



  ;
extern S16 cmUnpkNhuRbCfgList
( NhuRbCfgList *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuRbRlsCfgList
( NhuRbRlsCfgList *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuRbCfgAllList
( NhuRbCfgAllList *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuUlHarqCfg
( NhuUlHarqCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuTrChCfg
( NhuTrChCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuIntgKeyAlgoInfo
( NhuIntgKeyAlgoInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuCiphKeyAlgoInfo
( NhuCiphKeyAlgoInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuSecurityCfg
( NhuSecurityCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuUeCfgInfo
( NhuUeCfgInfo *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuUlDcchMsg
( NhuUlDcchMsg *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuDlDcchMsg
( NhuDlDcchMsg *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuDedMsg
( NhuDedMsg *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuCmnMsgInfo
( NhuCmnMsgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuCmnMsg
( NhuCmnMsg *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuDatReqUeMsg
( NhuDatReqUeMsg *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuDatReqSdus
( NhuDatReqSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuUlCcchMsg
( NhuUlCcchMsg *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuDlCcchMsg
( NhuDlCcchMsg *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuDatRspSdus
( NhuDatRspSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDatIndSdus
( NhuDatIndSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuRaOccasion
( NhuRaOccasion *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuRachCfg
( NhuRachCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuCmnMacCfg
( NhuCmnMacCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuCellCfgInfo
( NhuCellCfgInfo *param, Ptr ptr, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuCellCfgReqSdus
( NhuCellCfgReqSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuCellCfgCfmSdus
( NhuCellCfgCfmSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDatCfmSdus
( NhuDatCfmSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuStaIndSdus
( NhuStaIndSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuErrIndSdus
( NhuErrIndSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuCfgReqSdus
( NhuCfgReqSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuCfgCfmSdus
( NhuCfgCfmSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuBndReq
( NhuBndReq func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuBndCfm
( NhuBndCfm func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuUbndReq
( NhuUbndReq func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuDatReq
( NhuDatReq func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuDatRsp
( NhuDatRsp func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuDatInd
( NhuDatInd func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuDatCfm
( NhuDatCfm func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuErrInd
( NhuErrInd func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuCfgReq
( NhuCfgReq func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuCfgCfm
( NhuCfgCfm func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuCnclUeReq
( NhuCnclUeReq func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuCellCfgReq
( NhuCellCfgReq func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuCellCfgCfm
( NhuCellCfgCfm func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuDeleteTransReq
( NhuDeleteTransReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkNhuStartPdcpDataFwdReq
( NhuSduStaReq func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuPdcpDatResumeReq
( NhuDatResumeReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkNhuStaInd
( NhuStaInd func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuDecodeReq
( NhuDecodeReq func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuCountReq
( NhuCountReq func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuDecodeCfm
( NhuDecodeCfm func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuCountCfm
( NhuCountCfm func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuEncodeReq
( NhuEncReq func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuEncReqSdus
( NhuEncReqSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuEncodeCfm
( NhuEncCfm func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuEncCfmSdus
( NhuEncCfmSdus *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuPdcpSduStaReq
( NhuSduStaReq func, Pst *pst, Buffer *mBuf )



  ;
extern S16 cmUnpkNhuPdcpSduStaCfm
( NhuSduStaCfm func, Pst *pst, Buffer *mBuf, Mem *sMem, Size maxBlkSize )





  ;
extern S16 cmUnpkNhuPdcpSduStaCfmSdus
( NhuPdcpSduStaCfm *param, Buffer *mBuf, Pst *pst )



  ;
extern S16 cmUnpkNhuRbId
( NhuRbId *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuRbId
( NhuRbId *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCellReCfgInfo
( NhuCellReCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuCellReCfgInfo
( NhuCellReCfgInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkNhuCellRlsInfo
( NhuCellRlsInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuCellRlsInfo
( NhuCellRlsInfo *param, Buffer *mBuf )


  ;
extern S16 cmPkBuf
( Pst *pst, Buffer *buf, Buffer **mBuf )



  ;
extern S16 cmUnpkBuf
( Buffer **buf, Buffer *mBuf )


  ;

extern S16 cmPkNhuSysBwCfg
( NhuSysBwCfg *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuSysBwCfg
( NhuSysBwCfg *param, Buffer *mBuf )


  ;
# 4521 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/nhu.x"
extern S16 cmUnpkNhuPdcpCfgSduStaInfo
( NhuHoPdcpSduInfo *param, Buffer *mBuf, Ptr ptr )



  ;

extern S16 cmUnpkNhuPdcpSduStaInfo
( NhuPdcpSduStaInfo *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDecodeSduReq
( NhuDecodeSduReq *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDecodeSduCfm
( NhuDecodeSduCfm *param, Buffer *mBuf )


  ;
extern S16 cmUnpkNhuDRBCountInfoLst
( NhuDRBCountInfoLst *param, Buffer *mBuf )


  ;


extern S16 cmPkNhuPdcpDatResumeCfmSdus
( NhuPdcpDatResumeCfm *param, Buffer *mBuf )


  ;

extern S16 cmUnpkNhuStartPdcpDataFwdReq
( NhuSduStaReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkNhuPdcpDatResumeReq
( NhuDatResumeReq func, Pst *pst, Buffer *mBuf )



  ;

extern S16 cmUnpkNhuUL_DCCH_Msg (NhuUL_DCCH_Msg *param, Ptr ptr, Buffer *mBuf)
       ;
extern S16 cmUnpkNhuDL_DCCH_Msg (NhuDL_DCCH_Msg *param, Ptr ptr, Buffer *mBuf)
       ;
extern S16 cmUnpkNhuBCCH_BCH_Msg (NhuBCCH_BCH_Msg *param, Ptr ptr, Buffer *mBuf)
       ;
extern S16 cmUnpkNhuBCCH_DL_SCH_Msg (NhuBCCH_DL_SCH_Msg *param, Ptr ptr, Buffer *mBuf)
              ;
extern S16 cmUnpkNhuPCCH_Msg (NhuPCCH_Msg *param, Ptr ptr, Buffer *mBuf);
extern S16 cmUnpkNhuUL_CCCH_Msg (NhuUL_CCCH_Msg *param, Ptr ptr, Buffer *mBuf)
       ;
extern S16 cmUnpkNhuDL_CCCH_Msg (NhuDL_CCCH_Msg *param, Ptr ptr, Buffer *mBuf)
       ;
# 65 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/lnh.x" 1
# 50 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/lnh.x"
typedef struct nhGenConfig
{
   Pst lmPst;

   U32 maxCell;

   U8 minTransLstLen;



   U8 minMuiLstLen;



   U16 msecTmrRes;
# 73 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/lnh.x"
   TmrCfg cfgTmr;




   U8 nmbKwuSaps;

   U8 nmbCkwSaps;

   U8 nmbCrgSaps;

   U8 nmbCpjSaps;

   U8 nmbPjuSaps;






   U32 dbgMsk;



   U32 portNumber;
   U8 ipAddress[16];
   U8 rrcLogEnable;
} NhGenCfg;







typedef struct nhGenSts
{
   U32 numEstbCon;


   U32 numFailCon;



   U32 numReConfigSucc;


   U32 numReConfigFail;



   U32 numUnExptMsg;


   U32 numLwLyFail;


   U32 numDecErr;
   U32 numEncErr;
   U32 numPdcpErr;



   U32 numRlcErr;


} NhGenSts;







typedef struct nhPduSts
{
   U32 dlInfoTransfer;
   U32 ulInfoTransfer;
   U32 connReconfig;
   U32 connReconfigCom;
   U32 connSetupComplete;
   U32 connRel;
   U32 secModCmd;
   U32 secModCmpl;
   U32 secModFail;
   U32 ueCapEnq;
   U32 ueCapInfo;
   U32 cntChk;
   U32 cntChkRes;
   U32 mobFrmEUTRACmd;
   U32 hoFrmEUTRAPrepReq;
   U32 ulHOPrepTfr;
   U32 csfbParamReqCDMA;
   U32 csfbParamResCDMA;
   U32 connReestabCom;


   U32 ueInfoReq;
   U32 ueInfoRsp;
   U32 prxmtyInd;

} NhPduSts;







typedef struct nhCellSts
{
   U16 cellId;
   U32 pag;
   U32 connSetup;
   U32 connReject;
   U32 connReq;
   U32 connReestabReq;
   U32 connReestab;
   U32 connReestabRej;
   U32 numUEs;
   U32 hoToEUTRASucc;
   U32 hoFromEUTRAFail;
} NhCellSts;






typedef struct nhUeSts
{
   U16 cellId;
   U16 crnti;
   struct
   {
      NhPduSts pdu;
   } cfm;
} NhUeSts;







typedef struct nhSts
{
   DateTime dt;
   union
   {
      NhGenSts genSts;

      NhUeSts ueSts;
      NhCellSts cellSts;

   } u;
} NhSts;







typedef struct nhSapSta
{
   SpId sapId;
   U8 sapState;
} NhSapSta;






typedef struct nhGenSta
{
   U32 memSize;
   U32 memAlloc;
   U32 numCon;
} NhGenSta;







typedef struct nhSsta
{
   DateTime dt;
   union
   {
      NhSapSta sap;
      SystemId sysId;
      NhGenSta genSta;
   } u;
} NhSsta;






typedef struct nhSapInfo
{
   SpId sapId;
   U16 sapElmId;
} NhSapInfo;


typedef struct nhCellUEId
{
   U16 ueId;
   U16 cellId;
}NhCellUEId;






typedef struct nhUstaDgn
{
   U8 type;
   union
   {
      Mem mem;
      NhSapInfo sapInfo;
      U8 tId;
      U8 msgType;
      U8 data[10];
      NhCellUEId cellUeId;
   }u;
} NhUstaDgn;







typedef struct nhUsta
{
   CmAlarm alarm;
   NhUstaDgn dgn;
} NhUsta;






typedef struct nhSapCntrl
{
   SpId sapId;
# 339 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/lnh.x"
} NhSapCntrl;
# 353 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/lnh.x"
typedef struct nhDbgCntrl
{
   U32 dbgMsk;
# 386 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/lnh.x"
} NhDbgCntrl;







typedef struct nhCntrl
{
   Action action;

   Action subAction;


   union
   {
      NhSapCntrl sap;




      NhDbgCntrl dbg;






   }u;
} NhCntrl;






typedef struct nhTrc
{
   DateTime dt;
   U16 evnt;



   U16 len;
   U8 evntParm[255];
}NhTrc;






typedef struct nhProtConfig
{
   U32 maxConn;


} NhProtCfg;







typedef struct nhUSapConfig
{
   Selector selector;






   MemoryId mem;



   Priority prior;





   ProcId procId;


   Ent ent;




   Inst inst;


   Route route;



   SpId spId;

} NhUSapCfg;
# 503 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/lnh.x"
typedef struct nhLSapConfig
{
   Selector selector;






   MemoryId mem;



   Priority prior;





   ProcId procId;


   Ent ent;



   Inst inst;


   Route route;



   SpId spId;

   SuId suId;



   U32 bndRetryCnt;


   TmrCfg bndTmr;

   TmrCfg GrdTmr;

} NhLSapCfg;






typedef struct nhCfg
{
   union
   {
      NhGenCfg gen;
      NhUSapCfg uSap;
      NhLSapCfg lSap;
      NhProtCfg prot;
   }u;
} NhCfg;






typedef struct nhMngmt
{
   Header hdr;
   CmStatus cfm;


   union
   {
      NhCfg cfg;

      NhCntrl cntrl;


      NhSsta ssta;
      NhUsta usta;
      NhSts sts;
      NhTrc trc;

   } u;
} NhMngmt;


typedef S16 (*LnhCfgReq) (Pst *pst, NhMngmt *cfg);

typedef S16 (*LnhCfgCfm) (Pst *pst, NhMngmt *cfm);

typedef S16 (*LnhStsReq) (Pst *pst, Action action, NhMngmt *sts);

typedef S16 (*LnhStsCfm) (Pst *pst, NhMngmt *cfm);

typedef S16 (*LnhStaReq) (Pst *pst, NhMngmt *sta);

typedef S16 (*LnhStaCfm) (Pst *pst, NhMngmt *cfm);

typedef S16 (*LnhStaInd) (Pst *pst, NhMngmt *sta);

typedef S16 (*LnhCntrlReq) (Pst *pst, NhMngmt *cntrl);

typedef S16 (*LnhCntrlCfm) (Pst *pst, NhMngmt *cfm);

typedef S16 (*LnhTrcInd) (Pst *pst, NhMngmt *trc);

extern S16 cmPkNhGenCfg (NhGenCfg *param, Buffer *mBuf);
extern S16 cmUnpkNhGenCfg (NhGenCfg *param, Buffer *mBuf);
extern S16 cmPkNhGenSts (NhGenSts *param, Buffer *mBuf);
extern S16 cmUnpkNhGenSts (NhGenSts *param, Buffer *mBuf);
extern S16 cmPkU32 (U32 *param, Buffer *mBuf);
extern S16 cmUnpkU32 (U32 *param, Buffer *mBuf);
extern S16 cmPkNhPduSts (NhPduSts *param, Buffer *mBuf);
extern S16 cmUnpkNhPduSts (NhPduSts *param, Buffer *mBuf);
extern S16 cmPkNhCellSts (NhCellSts *param, Buffer *mBuf);
extern S16 cmUnpkNhCellSts (NhCellSts *param, Buffer *mBuf);
extern S16 cmPkNhUeSts (NhUeSts *param, Buffer *mBuf);
extern S16 cmUnpkNhUeSts (NhUeSts *param, Buffer *mBuf);
extern S16 cmPkNhSts (NhSts *param, U16 elmnt, Buffer *mBuf);
extern S16 cmUnpkNhSts (NhSts *param, U16 elmnt, Buffer *mBuf);
extern S16 cmPkNhSapSta (NhSapSta *param, Buffer *mBuf);
extern S16 cmUnpkNhSapSta (NhSapSta *param, Buffer *mBuf);
extern S16 cmPkNhGenSta (NhGenSta *param, Buffer *mBuf);
extern S16 cmUnpkNhGenSta (NhGenSta *param, Buffer *mBuf);
extern S16 cmPkNhSsta (NhSsta *param, U16 elmnt, Buffer *mBuf);
extern S16 cmUnpkNhSsta (NhSsta *param, U16 elmnt, Buffer *mBuf);
extern S16 cmPkNhUstaDgn (NhUstaDgn *param, Buffer *mBuf);
extern S16 cmUnpkNhUstaDgn (NhUstaDgn *param, Buffer *mBuf);
extern S16 cmPkNhUsta (NhUsta *param, Buffer *mBuf);
extern S16 cmUnpkNhUsta (NhUsta *param, Buffer *mBuf);
extern S16 cmPkNhSapCntrl (NhSapCntrl *param, Buffer *mBuf);
extern S16 cmUnpkNhSapCntrl (NhSapCntrl *param, Buffer *mBuf);

extern S16 cmPkNhDbgCntrl (NhDbgCntrl *param, Buffer *mBuf);
extern S16 cmUnpkNhDbgCntrl (NhDbgCntrl *param, Buffer *mBuf);

extern S16 cmPkNhCntrl (NhCntrl *param, U16 elmnt, Buffer *mBuf);
extern S16 cmUnpkNhCntrl (NhCntrl *param, U16 elmnt, Buffer *mBuf);
extern S16 cmPkNhTrc (NhTrc *param, Buffer *mBuf);
extern S16 cmUnpkNhTrc (NhTrc *param, Buffer *mBuf);
extern S16 cmPkNhProtCfg (NhProtCfg *param, Buffer *mBuf);
extern S16 cmUnpkNhProtCfg (NhProtCfg *param, Buffer *mBuf);
extern S16 cmPkNhUSapCfg (NhUSapCfg *param, Buffer *mBuf);
extern S16 cmUnpkNhUSapCfg (NhUSapCfg *param, Buffer *mBuf);
extern S16 cmPkNhLSapCfg (NhLSapCfg *param, Buffer *mBuf);
extern S16 cmUnpkNhLSapCfg (NhLSapCfg *param, Buffer *mBuf);
extern S16 cmPkNhCfg (NhCfg *param, U16 elmnt, Buffer *mBuf);
extern S16 cmUnpkNhCfg (NhCfg *param, U16 elmnt, Buffer *mBuf);
extern S16 cmPkNhMngmt (NhMngmt *param, U8 evnt, Buffer *mBuf);
extern S16 cmUnpkNhMngmt (NhMngmt *param, U8 evnt, Ptr ptr, Buffer *mBuf);

extern S16 nhActvInit (Ent entity, Inst inst, Region region, Reason reason)
                                                                          ;


extern S16 smNhActvTsk ( Pst *pst, Buffer *mBuf);
extern S16 smNhActvInit (Ent entity, Inst inst, Region region, Reason reason)
                                                                          ;

extern S16 SmMiLnhCfgReq (Pst *pst, NhMngmt *cfg);
extern S16 SmMiLnhCfgCfm (Pst *pst, NhMngmt *cfm);

extern S16 SmMiLnhStsReq (Pst *pst, Action action, NhMngmt *sts);
extern S16 SmMiLnhStsCfm (Pst *pst, NhMngmt *cfm);

extern S16 SmMiLnhStaReq (Pst *pst, NhMngmt *sta);
extern S16 SmMiLnhStaCfm (Pst *pst, NhMngmt *cfm);
extern S16 SmMiLnhStaInd (Pst *pst, NhMngmt *sta);

extern S16 SmMiLnhCntrlReq (Pst *pst, NhMngmt *cntrl);
extern S16 SmMiLnhCntrlCfm (Pst *pst, NhMngmt *cfm);

extern S16 SmMiLnhTrcInd (Pst *pst, NhMngmt *trc);
# 741 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/lnh.x"
extern S16 NhMiLnhCfgReq (Pst *pst, NhMngmt *cfg);
# 774 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/lnh.x"
extern S16 NhMiLnhCfgCfm (Pst *pst, NhMngmt *cfm);
# 804 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/lnh.x"
extern S16 NhMiLnhStsReq (Pst *pst, Action action, NhMngmt *sts);
# 831 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/lnh.x"
extern S16 NhMiLnhStsCfm (Pst *pst, NhMngmt *cfm);
# 886 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/lnh.x"
extern S16 NhMiLnhStaReq (Pst *pst, NhMngmt *sta);
# 923 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/lnh.x"
extern S16 NhMiLnhStaCfm (Pst *pst, NhMngmt *cfm);
# 946 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/lnh.x"
extern S16 NhMiLnhStaInd (Pst *pst, NhMngmt *sta);
# 965 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/lnh.x"
extern S16 NhMiLnhTrcInd (Pst *pst, NhMngmt *trc);
# 1006 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/lnh.x"
extern S16 NhMiLnhCntrlReq (Pst *pst, NhMngmt *cntrl);
# 1040 "/home/mrehwald/Desktop/Radisys/lte_enb/src/cm/lnh.x"
extern S16 NhMiLnhCntrlCfm (Pst *pst, NhMngmt *cfm);





extern S16 cmUnpkLnhCfgCfm (LnhCfgCfm func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLnhCntrlCfm (LnhCntrlCfm func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLnhStaCfm (LnhStaCfm func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLnhStaInd (LnhStaInd func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLnhStsCfm (LnhStsCfm func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLnhTrcInd (LnhTrcInd func, Pst *pst, Buffer *mBuf);



extern S16 cmUnpkLnhCfgReq (LnhCfgReq func,Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLnhCntrlReq (LnhCntrlReq func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLnhStaReq (LnhStaReq func, Pst *pst, Buffer *mBuf);
extern S16 cmUnpkLnhStsReq (LnhStsReq func, Pst *pst, Buffer *mBuf);



extern S16 cmPkLnhCfgReq (Pst *pst, NhMngmt *cfg);
extern S16 cmPkLnhCntrlReq (Pst *pst, NhMngmt *cntrl);
extern S16 cmPkLnhStaReq (Pst *pst, NhMngmt *sta);
extern S16 cmPkLnhStsReq (Pst *pst, Action action, NhMngmt *sts);



extern S16 cmPkLnhStaInd (Pst *pst, NhMngmt *staInd);
extern S16 cmPkLnhStaCfm (Pst *pst, NhMngmt *cfm);
extern S16 cmPkLnhStsCfm (Pst *pst, NhMngmt *cfm);
extern S16 cmPkLnhCfgCfm (Pst *pst, NhMngmt *cfm);
extern S16 cmPkLnhCntrlCfm (Pst *pst, NhMngmt *cfm);
extern S16 cmPkLnhTrcInd (Pst *pst, NhMngmt *trcInd);
# 66 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 1 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh.x" 1
# 44 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh.x"
typedef U8 MsgType;
typedef U8 Direction;
typedef U8 CntrType;




typedef U32 NhTransId;




typedef enum nhSduType
{
   NH_SDU_DL_BCCHBCH,
   NH_SDU_DL_BCCHDLSCH,
   NH_SDU_DL_PCCH,
   NH_SDU_DL_CCCH,
   NH_SDU_UL_CCCH,
   NH_SDU_DL_DCCH,
   NH_SDU_UL_DCCH,
   NH_SDU_MAX
}NhSduType;





typedef struct nhId
{
   U16 cellId;
   U16 ueId;
   Bool isPdcpId;
   U8 rbId;
} NhId;





typedef struct muiInfo
{
   Bool status;
   U32 nxTransId;
   U32 mui;
} MuiInfo;





typedef struct nhUeCbKey
{
    U16 crnti;
} NhUeCbKey;





typedef struct nhCellCbList
{
   U8 numOfCellCb;
   CmLListCp cellCbList;
} NhCellCbList;





typedef struct nhRbCfgList
{
   U8 numOfRbCfgInfo;
   CmLListCp rbCfgInfoList;
} NhRbCfgList;







typedef struct nhUeInfo
{
   U8 crntiCfgType;
   union
   {
      NhuCrnti newCrnti;

      NhuCrnti modCrnti;
   } u;
} NhUeInfo;






typedef struct nhLogChCfg
{
   U8 lChCfgBitMsk;
   CmLteTrchType dlTrchType;
   CmLteTrchType ulTrchType;
   NhuLogChCfg logChCfg;
}NhLogChCfg;







typedef struct nhRbToLchMap
{
   NhuRbId rbId;
   NhuLogChId lchId;
   U8 dir;
   NhLogChCfg logChCfg;
   Bool isPdcpConfigured;
} NhRbToLchMap;




typedef struct nhCrntCfgInfo
{
   U8 bitMskPres;

   NhRbCfgList rbCfgList;
   CmLListCp logChCbLst;
   NhuTrChCfg trChCfg;

   NhuSecurityCfg secCfg;





   NhuUeLLyrSapIdInfo uellyrSapIdInfo;

} NhCrntCfgInfo;
# 203 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh.x"
typedef struct nhRlcCellCfgCfmMap
{
   U8 status;
   U8 cfmStatus;
   U8 rvrtAction;
   U8 rbId;
} NhRlcCellCfgCfmMap;





typedef struct nhMacCellCfgCfmMap
{
   U8 status;
   U8 cfmStatus;
   U8 rvrtAction;
   U8 logChId;
   U8 dir;
} NhMacCellCfgCfmMap;





typedef struct nhCellOrdrdCfg
{
   CmLteTimingInfo reCfgActvnTime;

   NhuCellCfgInfo cellCfgInfo;
} NhCellOrdrdCfg;





typedef struct nhCellTransCb
{
   U8 status;
   U32 nxTransId;
   NhCellOrdrdCfg *cellOrdrdCfg;
   U8 cfmMask;
   U8 cfgMask;

   U8 cfmStatus;
   U8 cfgAction;
   S16 numOfRlcCfms;
   S16 numOfMacCfms;
   NhRlcCellCfgCfmMap rlcMapTbl[8];

   NhMacCellCfgCfmMap macMapTbl[8];





} NhCellTransCb;
# 271 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh.x"
typedef struct nhCellCfgInfo
{
   NhuDuplexMode duplexMode;
   U8 cfgBitMsk;

   NhRbCfgList rbCfgList;
   NhuCmnMacCfg macCfg;



    Bool isCSGCell;

} NhCellCfgInfo;





typedef struct nhCellCb
{
    U16 cellId;

    NhuLLyrSapIdInfo llyrSapIdInfo;

    NhCellCfgInfo crntCellCfgInfo;


    NhCellSts cellSts;

    NhCellTransCb cellTransCb;
    CmHashListCp actvUeHlCp;
    CmHashListCp newUeHlCp;



    CmTimer cfgTimers[64];

} NhCellCb;





typedef struct nhActvUeCb
{
   CmHashListEnt actUeEnt;
   CmHashListEnt newUeEnt;


   NhUeCbKey ueCbKey;

   NhUeCbKey newUeCbKey;

   CmLListCp muiInfoLst;

   NhUeSts ueSts;

   NhCrntCfgInfo crntCfg;
   CmLListCp transCbLst;
   CmHashListCp msgTransHlCp;
   Ticks tmStmp;
   U8 rbSecCfgBitMask;

   NhCellCb *cellCb;
   U8 restbState;
   U8 hoToEutraOrMobFrmEutra;
# 350 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh.x"
} NhActvUeCb;





typedef struct nhENodeBCb
{
   NhProtCfg protCfg;
   Bool cfgDone;
   U32 trcMask;
   S32 trcLen;
   U32 numActUEs;
   U32 numActCells;
   NhCellCbList nhCellCbList;
} NhENodeBCb;





typedef struct nhUSapCb
{
   SuId suId;
   SpId spId;
   Pst pst;
   State state;
} NhUSapCb;





typedef struct nhLSapCb
{
   U16 sapElmId;
   SuId suId;
   SpId spId;
   State state;
   Pst pst;
   U8 bndRetryCnt;
   TmrCfg bndTmr;
   CmTimer timers[8];
   Bool trc;
} NhLSapCb;





typedef struct nhCb
{
   TskInit init;
   NhGenCfg genCfg;
   NhUSapCb *uSapCb;
   NhLSapCb **kwuSapCbLst;
   NhLSapCb **ckwSapCbLst;
   NhLSapCb **crgSapCbLst;
   NhLSapCb **cpjSapCbLst;
   NhLSapCb **pjuSapCbLst;



   NhGenSts genSts;
   NhGenSta genSta;
   NhENodeBCb eNodeBCb;
   CmTqCp nhGenTqCp;
   CmTqType nhGenTq[64];
   CmTimer timers[255];
   CmTqCp nhLLyrCfgTqCp;
   CmTqType nhLLyrCfgTq[64];
   Bool outOfRsrc;
   NhCellCb **cellCbLst;
# 433 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh.x"
   S32 udpSock;
   struct sockaddr_in server;


} NhCb;






typedef struct nhRlcPdcpCfgCfmMapInfo
{
   U32 drbToCfg[4];
   U8 srbToCfg[4];
   U32 drbCfmSta[4];
   U8 srbCfmSta[4];
} NhRlcPdcpCfgCfmMapInfo;






typedef struct nhUeCfgCfmMapInfo
{
   U8 status;
   U8 action;
   U8 cfmStatus;
} NhUeCfgCfmMapInfo;






typedef struct nhSrb1RestbInfo
{
   U8 status;
   U8 action;
   U8 cfmStatus;
} NhSrb1RestbInfo;






typedef struct nhMacRstInfo
{
   U8 status;
   U8 action;
   U8 cfmStatus;
} NhMacRstInfo;







typedef struct nhMacLchCfgCfmMapInfo
{
   U32 logchsToAdd;
   U32 logchsToMod;
   U32 logchsToRls;
   U32 addCfmStatus;
   U32 modCfmStatus;
   U32 rlsCfmStatus;
   U32 logchsRcvd;
} NhMacLchCfgCfmMapInfo;






typedef struct nhOrdrdCfgInfo
{
   U16 actionMask;

   NhuRbCfgList rbToAddCfgList;
   NhuRbCfgList rbToModCfgList;
   NhuRbRlsCfgList rbToRlsCfgList;
   NhRbCfgList rbToRestbCfgList;
   NhuTrChCfg trChCfg;
   NhuSecurityCfg secCfg;
   NhUeInfo ueInfo;




} NhOrdrdCfgInfo;
# 545 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh.x"
typedef struct nhSecCfgMapInfo
{
   Bool status;
   U8 cfmStatus;
   U8 action;
} NhSecCfgMapInfo;





typedef struct nhPdcpDatReqParam
{
   U32 mui;
} NhPdcpDatReqParam;






typedef struct nhTmCcchInfo
{
   CmLteRnti rnti;
} NhTmCcchInfo;





typedef struct nhTmRlcDatReqParam
{
   CmLteLcType lcType;
   union
   {
      CmLteTimingInfo timingInfo;
      NhTmCcchInfo ccchInfo;
   } u;
} NhTmRlcDatReqParam;







typedef struct nhDatReqParam
{
   NhId nhId;
   Bool isPdcpDatReq;
   Bool isMsgEncoded;
   union
   {
      NhTmRlcDatReqParam rlcParam;
      NhPdcpDatReqParam pdcpParam;
   } u;
} NhDatReqParam;






typedef struct nhPdcpSduStaInfo
{
   Reason reason;

   U16 numRbId;
   NhuPdcpSduStaInfo *pdcpSduStaInfo;
} NhPdcpSduStaInfo;






typedef struct transCb
{
   CmHashListEnt msgTransEnt;
   U32 msgTransKey;

   Bool status;
   NhTransId nxTransId;
   NhTransId transId;
   U8 cause;
   NhOrdrdCfgInfo ordrdCfg;
   U8 waitFlag;
   U8 cfmMask;

   U8 cfgMask;

   U8 cfmStatus;

   S16 numOfMacCfms;
   S16 numOfRlcCfms;
   S16 numOfPdcpCfms;
   NhUeCfgCfmMapInfo ueMapTbl[3];
   NhSrb1RestbInfo restbTbl[1];
   NhMacRstInfo rstTbl[1];
   NhMacLchCfgCfmMapInfo macLchMapTbl[2];
   NhRlcPdcpCfgCfmMapInfo rlcMapTbl;
   NhRlcPdcpCfgCfmMapInfo pdcpMapTbl;
   NhSecCfgMapInfo secCfgMapTbl[2];





   U8 macCfgMask;
   Bool rvrtReqd;

   Buffer *storedMsg;


   NhDatReqParam *lowerLyrParam;

   U8 enblSelSecModeCfg;
   NhuPdcpSduStaCfm *nhuSduStaCfm;





} TransCb;





typedef struct nhMsgPduAndType
{
   Void *pdu;
   Void *encBuf;
   U8 type;
} NhMsgPduAndType;





typedef struct nhErrInfo
{
   U8 errType;
   U8 errCause;
} NhErrInfo;





typedef struct nhCellAndUeCb
{
   NhCellCb *cellCb;
   NhActvUeCb *ueCb;
} NhCellAndUeCb;





typedef struct nhDatReqRspSdu
{
   Bool isDatReqSdu;
   union
   {
      NhuDatReqSdus *datReqSdu;
      NhuDatRspSdus *datRspSdu;
   } sdu;
} NhDatReqRspSdu;




typedef struct nhLLyrCfgTmrCb
{
   NhActvUeCb *ueCb;
   U32 transId;
} NhLLyrCfgTmrCb;




typedef struct nhRlcPdcpCfmEnt
{
   U8 rbId;
   U8 rbType;
   U16 status;
   U16 reason;
}NhRlcPdcpCfmEnt;


extern NhCb nhCb;

typedef S16 (*PCDFS16) (NhDatReqRspSdu *datReqRspSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, NhuErrorInfo *errInfo)


                                                           ;







extern S16 nhGetSId (SystemId *s);
extern S16 nhActvTsk (Pst *pst, Buffer *mBuf);

extern S16 nhBRMSysInfoTx (NhDatReqRspSdu *datReqRspSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, NhuErrorInfo *errInfo)


                                                       ;

extern S16 nhCCMUlCmnHndlr (NhuDatIndSdus *nhuDatIndSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, U8 msgType)


                                             ;

extern S16 nhCCMConSetupCmpHndlr (NhuDatIndSdus *nhuDatIndSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, U8 msgType)


                                                   ;

extern S16 nhCCMConRlsCmpHndlr (NhuDatIndSdus *nhuDatIndSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, U8 msgType)


                                                   ;

extern S16 nhCCMReCfgCmpHndlr (NhuDatIndSdus *nhuDatIndSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, U8 msgType)


                                                ;

extern S16 nhCCMSecModCmpHndlr (NhuDatIndSdus *nhuDatIndSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, U8 msgType)


                                                   ;

extern S16 nhCCMSecModFailHndlr (NhuDatIndSdus *nhuDatIndSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, U8 msgType)


                                                   ;

extern S16 nhCCMConSetupHdlr (NhDatReqRspSdu *datReqRspSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, NhuErrorInfo *errInfo)


                                                          ;

extern S16 nhCCMConRstbRejHdlr (NhDatReqRspSdu *datReqRspSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, NhuErrorInfo *errInfo)


                                                            ;

extern S16 nhCCMConRejHdlr (NhDatReqRspSdu *datReqRspSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, NhuErrorInfo *errInfo)


                                                         ;

extern S16 nhCCMConRlsHndlr (NhDatReqRspSdu *datReqRspSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, NhuErrorInfo *errInfo)


                                                         ;

extern S16 nhCCMReCfgReqHndlr (NhDatReqRspSdu *datReqRspSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, NhuErrorInfo *errInfo)


                                                         ;

extern S16 nhCCMSecModCmdHndlr (NhDatReqRspSdu *datReqRspSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, NhuErrorInfo *errInfo)


                                                         ;

extern S16 nhCGMSecCfgReq (NhCellAndUeCb *cellAndUeCb, TransCb *transCb)
                                                        ;

extern S16 nhCGMCfgReq (NhCellAndUeCb *cellAndUeCb, TransCb *transCb, NhuUeCfgInfo *cfgInfo)

                                                     ;

extern S16 nhCGMCnclUe (NhCellCb *cellCb, NhActvUeCb *ueCb);

extern S16 nhCGMLowerLyrCfgReq (NhCellAndUeCb *cellAndUeCb, NhuUeCfgInfo *cfgInfo, TransCb *transCb, Bool cfgReqd)


                                                             ;

extern S16 nhCGMLowerLyrCellCfgReq (NhuCellCfgReqSdus *cellCfgSdu, NhCellCb *cellCb)
                                                              ;

extern S16 nhCGMUpdTransCbCfgMask (TransCb *transCb, NhActvUeCb *ueCb)
                                                           ;


extern S16 nhCGMUpdCellTransCbCfgMask (NhuCellCfgReqSdus *cellCfgSdu, NhCellCb *cellCb)
                                                          ;

extern S16 nhCGMDeleteTrans (NhActvUeCb *ueCb, TransCb *transCb)
                                                           ;

extern S16 nhCGMRbRestbCfgReq ( NhCellAndUeCb *cellAndUeCb, TransCb *transCb)
                                                              ;

extern S16 nhDBMAddTransCb (NhActvUeCb *ueCb, TransCb **transCb, U32 msgTransKey)

                                                          ;

extern S16 nhDBMDelTransCb (NhActvUeCb *ueCb, TransCb **transCb)
                                                          ;


extern S16 nhDBMDelTransCbs (NhActvUeCb *ueCb);

extern S16 nhDBMAddMuiCb (NhActvUeCb *ueCb, MuiInfo **muiCb, U32 nxTransId)

                                                         ;

extern S16 nhDBMDelMuiCb (NhActvUeCb *ueCb, MuiInfo **muiCb)
                                                          ;

extern MuiInfo* nhDBMGetMuiCb (NhActvUeCb *ueCb, U32 muiId)
                                                      ;

extern S16 nhDBMCreateCellCb (U16 cellId, NhCellCb **cellCb)
                                                        ;

extern S16 nhDBMDeleteCellCb (NhCellCb **cellCb);

extern NhCellCb* nhDBMGetCellCb (U16 cellId);

extern S16 nhDBMCommitCellOrdrdCfg (NhCellCb *cellCb);

extern S16 nhDBMCommitOrdrdCfg (NhActvUeCb *ueCb, TransCb *transCb)
                                                        ;
extern S16 nhDBMUpdModifiedRb (NhuRbCfgInfo *dstRbCfgInfo, NhuRbCfgInfo *srcRbCfgInfo)
                                                                ;

extern S16 nhDBMUpdModifiedRbCfgUl (NhuRbCfgInfo *dstRbCfgInfo, NhuRbCfgInfo *srcRbCfgInfo)
                                                                ;

extern S16 nhDBMUpdModifiedRbCfgDl (NhuRbCfgInfo *dstRbCfgInfo, NhuRbCfgInfo *srcRbCfgInfo)
                                                                ;

extern S16 nhDBMUpdModifiedRbPdcpInfo (NhuRbCfgInfo *dstRbCfgInfo, NhuRbCfgInfo *srcRbCfgInfo)
                                                                ;

extern NhActvUeCb* nhDBMGetUeCb (NhCellCb *cellCb, U16 ueId);

extern NhActvUeCb* nhDBMGetNewUeCb (NhCellCb *cellCb, U16 ueId);

extern S16 nhDBMCreateUeCb (NhCellCb *cellCb, U16 crnti, NhActvUeCb **ueCb)

                                                    ;

extern S16 nhDBMDeleteUeCb (NhCellCb *cellCb, NhActvUeCb **ueCb)
                                                     ;

extern S16 nhEDMDecReq (U8 msgCategory, Buffer *mBuf, Void *memCp, Void *pdu)


                                           ;

extern S16 nhEDMEncReq (Void *pdu, U8 msgCategory, Buffer **mBuf, U32 *length)


                                              ;

extern S16 nhMapRlcIdtoNhId ( NhId *nhId, CmLteRlcId *rlcId)
                                                             ;

extern S16 nhMapPdcpIdtoNhId (NhId *nhId, CmLtePdcpId *pdcpId)
                                                           ;

extern S16 nhLIMHndlLSapBndCfm ( U8 sapId, NhLSapCb *lSapCb, U8 bndCfmStatus)

                                                       ;
extern S16 nhLIMHndlRvrtCfg (NhId *nhId, NhActvUeCb *ueCb, TransCb *transCb)

                                                        ;

extern S16 nhLIMHndlDatInd (NhId *nhId, Buffer *mBuf, U16 tCrnti)

                                                 ;

extern S16 nhLIMHndlDatCfm (NhId nhId, U8 status, U32 mui)

                                             ;


extern S16 nhLIMRptCfgCfm (NhId *nhId, NhCellAndUeCb *cellAndUeCb, TransCb *transCb, U8 cfmStatus, U8 layerId)



                                                    ;

extern S16 nhLIMRptCellCfgCfm (NhCellCb *cellCb, U8 cfmStatus, U8 layerId)

                                                      ;

extern S16 nhLIMHndlRvrtCellCfg (NhCellCb *cellCb);

extern S16 nhLIMSendCellCfg (NhCellCb *cellCb);

extern S16 nhLIMHndlRvrtPdcpCfg (NhActvUeCb *ueCb, TransCb *transCb)
                                                           ;

extern S16 nhLIMHndlRvrtMacCfg (NhId *nhId, NhActvUeCb *ueCb, TransCb *transCb)

                                                          ;







extern S16 nhLIMSendCfgMsg (NhCellAndUeCb *cellAndUeCb, TransCb *transCb)
                                                      ;

extern S16 nhLIMSendPdcpCfg (NhId *nhId, NhActvUeCb *ueCb, TransCb *transCb)

                                                       ;

extern S16 nhLIMSendRlcCfg (NhId *nhId, NhActvUeCb *ueCb, TransCb *transCb)

                                                      ;

extern S16 nhLIMSendMacCfg (NhActvUeCb *ueCb, TransCb *transCb)
                                                      ;

extern S16 nhCGMPdcpDiscReqdCfgReq (TransCb *transCb, NhCellAndUeCb *cellAndUeCb)
                                                                         ;


extern Void nhDbmCpyUeLSapInfo
(
NhuUeLLyrSapIdInfo *nhuUeLSapInfo,
NhActvUeCb *ueCb
);







extern S16 nhLIMRlsLowerLyrCfg (NhActvUeCb *ueCb);

extern S16 nhLIMSendUbndReq (U8 sapElmId, NhLSapCb *lSapCb)
                                                    ;

extern S16 nhLIMSendBndReq (U16 sapElmId, NhLSapCb *lSapCb)
                                                    ;

extern S16 nhLIMHndlRvrtRlcCfg (NhId *nhId, NhActvUeCb *ueCb, TransCb *transCb)

                                                           ;

extern S16 nhLIMCountReqHndlr (NhuHdr *cntHdr, NhActvUeCb *ueCb)
                                                       ;

extern S16 nhLMMLnhCfgReq (Pst *pst, NhMngmt *cfg)
                                              ;

extern S16 nhGenCfg (NhGenCfg *gen, CmStatus *status)
                                             ;

extern S16 nhProtCfg (NhProtCfg *prot, CmStatus *status)
                                               ;

extern S16 nhUSapCfg (NhUSapCfg *uSap, CmStatus *status)
                                              ;

extern S16 nhLSapCfg (NhLSapCfg *lSap, U16 elmntId, CmStatus *status)

                                              ;

extern S16 nhGenCntrl (NhCntrl *cntrl, CmStatus *status)
                                              ;
extern S16 nhLSapCntrlActHndl (S16 action, S16 sAction, NhLSapCb *lSapCb, U8 evntType, U8 lSapType)



                                                       ;

extern TransCb *nhGetTransCbFrmNxTransId (NhActvUeCb *ueCb, NhTransId transId)
                                                        ;

extern TransCb *nhGetTransCbFrmMsgTransId (NhActvUeCb *ueCb, U32 msgTransKey)
                                                          ;

extern S16 nhUSapCntrl (NhCntrl *cntrl, CmStatus *status)
                                               ;

extern S16 nhKwuSapCntrl (NhCntrl *cntrl, CmStatus *status)
                                               ;

extern S16 nhCkwSapCntrl (NhCntrl *cntrl, CmStatus *status)
                                               ;

extern S16 nhCrgSapCntrl (NhCntrl *cntrl, CmStatus *status)
                                               ;

extern S16 nhCpjSapCntrl (NhCntrl *cntrl, CmStatus *status)
                                               ;

extern S16 nhPjuSapCntrl (NhCntrl *cntrl, CmStatus *status)
                                               ;






extern S16 nhGetGenSts (NhGenSts *sts, CmStatus *status, Action action)

                                            ;

extern S16 nhGetUeSts (NhUeSts *sts, CmStatus *status, Action action, NhActvUeCb *ueCb)


                                               ;

extern S16 nhGetCellSts (NhCellSts *sts, CmStatus *status, Action action, NhCellCb *cellCb)


                                               ;

extern S16 nhGetLSapSta (NhSapSta *sta, U16 elmntId, CmStatus *status)

                                               ;

extern S16 nhGetUSapSta (NhSapSta *sta, CmStatus *status)
                                               ;

extern S16 nhLMMSndLmCfm (Pst *pst, Header *hdr, U8 type, NhMngmt *cfm)


                                             ;

extern Void nhSendLmAlarm (U16 category, U16 event, U16 cause, NhUstaDgn *dgn)


                                                ;

extern S16 nhShutdown (Void);

extern Void nhPrcCmplShutdown (Void);

extern S16 nhPIMRvrtPdcpCfg (NhActvUeCb *ueCb, TransCb *transCb)
                                                        ;
extern S16 nhPIMRvrtRlcCfg (NhActvUeCb *ueCb, TransCb *transCb)
                                                        ;


extern S16 nhPIMSendUeMsg (NhCellAndUeCb *cellAndUeCb, NhDatReqParam *nhDatReqParam, Buffer *mBuf)

                                                      ;

extern S16 nhPIMSendRlcCellCfg (NhCellCb *cellCb);
extern S16 nhPIMSendRlcCfg (NhActvUeCb *ueCb, TransCb *transCb)
                                                        ;
extern S16 nhPIMSendPdcpCfg (NhActvUeCb *ueCb, TransCb *transCb)
                                                        ;

extern S16 nhPIMRvrtRlcCellCfg (NhCellCb *cellCb);
extern S16 nhPIMRvrtMacAddCfg (NhActvUeCb *ueCb, TransCb *transCb, U8 addCfgType)

                                                   ;


extern S16 nhPIMSendMacRlsCompCfg (NhId *nhId, NhCrntCfgInfo *crntCfg)
                                                                ;

extern S16 nhPIMRlcPdcpMacRlsCfg (NhActvUeCb *ueCb);

extern S16 nhPIMRlsMacOrdCfg (NhId *nhId, NhActvUeCb *ueCb, TransCb *transCb, NhuRbRlsCfgList *rbCfgList, U8 cfgType)



                                                         ;

extern S16 nhPIMSendMacCellCfg (NhCellCb *cellCb);

extern S16 nhPIMRvrtMacCellCfg (NhCellCb *cellCb);

extern S16 nhPIMRvrtMacModCfg ( NhActvUeCb *ueCb, TransCb *transCb, U8 cfgType)

                                                ;

extern S16 nhPIMRvrtMacRlsCfg (NhActvUeCb *ueCb, TransCb *transCb, U8 cfgType)

                                                ;

extern S16 nhPIMSendMacAddCfg (NhActvUeCb *ueCb, TransCb *transCb, U8 cfgType)

                                                        ;

extern S16 nhPIMSendMacModCfg (NhActvUeCb *ueCb, TransCb *transCb, U8 cfgType)

                                                        ;

extern S16 nhPIMSendMacRlsCfg (NhActvUeCb *ueCb, TransCb *transCb, U8 cfgType)

                                                        ;

extern S16 nhPIMSendMacResetCfg (NhActvUeCb *ueCb, TransCb *transCb, U8 cfgType)

                                                        ;

extern S16 nhPIMSendPdcpAddCfg (NhId *nhId, TransCb *transCb, NhuRbCfgList *rbCfgInfo, NhTransId rvrtTransId)


                                                               ;

extern S16 nhPIMSendPdcpModCfg (NhId *nhId, TransCb *transCb, NhuRbCfgList *rbCfgInfo, NhTransId rvrtTransId)


                                                               ;

extern S16 nhPIMSendPdcpRlsCfg (NhId *nhId, U8 pdcpInstId, TransCb *transCb)

                                                       ;

extern S16 nhPIMSendRlcPdcpRlsCompCfg (NhId *nhId, NhActvUeCb *ueCb, TransCb *transCb)

                                                              ;

extern S16 nhPIMSendPdcpRlsCompCfg (NhId *nhId, NhActvUeCb *ueCb, TransCb *transCb)

                                                              ;

extern S16 nhPIMRlsRlcPdcpOrdCfg (NhId *nhId, NhuRbCfgList *rbCfgList)
                                                                 ;

extern S16 nhPIMSendPdcpSecCfg (NhId *nhId, TransCb *transCb, NhuSecurityCfg *secCfg, NhTransId rvrtTransId)


                                                            ;

extern S16 nhPIMSndCountReq (NhuHdr *cntHdr, NhActvUeCb *ueCb)
                                                           ;







extern S16 nhHashListInit (CmHashListCp *hashListCp, U16 nmbBins, U16 offset, Bool dupFlg, U16 keyType, Region region, Pool pool)





                                                   ;

extern S16 nhHashListInsert (CmHashListCp *hashListCp, U32 hashListEnt, U8 *key, U16 keyLen)


                                                       ;

extern S16 nhHashListDelete (CmHashListCp *hashListCp, U32 hashListEnt)
                                                            ;

extern S16 nhHashListFind (CmHashListCp *hashListCp, U8* key, U16 keyLen, U32 *data)


                                                    ;

extern S16 nhHashListGetNext (CmHashListCp *hashListCp, U32 prevEnt, U32 *entry)

                                                        ;

extern Void nhHashListDeInit (CmHashListCp *hashListCp);

extern S16 nhActvTmr (Void);

extern S16 nhSchedGenTmr (Ptr cb, S16 tmrEvnt, Action action)

                                               ;

extern S16 nhStartLLyrCfgTmr (NhCellAndUeCb *cellAndUeCb, U32 nxTransId)
                                                             ;

extern S16 nhStopLLyrCfgTmr (NhCellAndUeCb *cellAndUeCb, U32 nxTransId)
                                                            ;

extern Void nhProcGenTmrExpiry (Ptr cb, S16 tmrEvnt)
                                                    ;

extern S16 nhProcLLyrCfgTmrExpiry (Ptr cb);

extern S16 nhUIMSndCountCfm (NhuDRBCountInfoLst *nhuDRBCountInfoLst);
extern S16 nhUIMDatReqHndlr (NhuDatReqSdus *nhuDatReqSdu, NhActvUeCb *ueCb)
                                                      ;

extern S16 nhUIMCellCfgHndlr (NhuCellCfgReqSdus *nhuCellCfgSdu, NhCellCb *cellCb, NhuErrorInfo *errInfo)

                                                               ;

extern S16 nhUIMSndCellCfgCfm (U8 cfgCfmStatus, NhCellCb *cellCb, U8 errCause)

                                                        ;

extern S16 nhUIMDatInd (NhuDatIndSdus *nhuDatIndSdu);

extern S16 nhUIMSndErrInd (NhuErrIndSdus *nhuErrInd);

extern S16 nhUIMSndStaInd (NhuStaIndSdus *nhuStaInd);

extern S16 nhUIMSndDatCfm (NhuDatCfmSdus *nhuDatCfm);

extern S16 nhUIMSndCfgCfm (NhId nhId, NhTransId nxTransId, U8 cfgMsk, U8 cfmStatus, U8 errCause)



                                                      ;

extern S16 nhValidateSRBforMsgRx (NhActvUeCb *ueCb, U8 pdcpId, U8 msgType)

                                                    ;

extern S16 nhUTLEncAndSnd (NhCellAndUeCb *cellAndUeCb, U32 nxTransId, NhMsgPduAndType *msgPduAndType, NhDatReqParam *datReqParam, NhuErrorInfo *errInfo)



                                                              ;

extern S16 nhUTLEncAndStoreMsg (NhMsgPduAndType *msgPduAndType, NhDatReqParam *datReqParam, TransCb *transCb, NhuErrorInfo *errInfo)


                                                                   ;

extern S16 nhUTLSendStoredMsg (NhCellAndUeCb *cellAndUeCb, TransCb *transCb)
                                                           ;

extern TransCb *nhUTLGetTransCbFrmNxTransId (NhActvUeCb *ueCb, NhTransId transId)
                                                                    ;

extern TransCb *nhUTLGetTransCbFrmMsgTransId (NhActvUeCb *ueCb, U32 msgTransKey)
                                                                        ;

extern S16 nhUTLGetRrcTransId (Void *pdu, U8 msgChoice, NhSduType sduType, U8 *rrcTransId)


                                                         ;

extern S16 nhUTLGetMsgTypeAndEvntFrmSdu (U8 msgChoice, NhSduType sduType, U8 *nhMsgType, U8 *event)


                                                               ;


extern S16 nhUTLUpdGenSts (CntrType cntrType);

extern S16 nhUTLUpdPduSts (NhActvUeCb *ueCb, MsgType msgType, Cause cause)

                                                ;
extern S16 nhUTLUpdCellPduSts (NhCellCb *cellCb, MsgType msgType, Cause cause)

                                                   ;


extern S16 nhUTLValidateDatRsp (NhuDatRspSdus *datRspSdus, NhCellAndUeCb *cellAndUeCb, U8 *msgTransId, U8 *event, NhuErrorInfo *errInfo)



                                                                  ;

extern S16 nhUTLValidateCfgReq (NhuCfgReqSdus *cfgReqSdus, NhActvUeCb **ueCb, NhCellCb **cellCb, NhuErrorInfo *errInfo)


                                                          ;

extern S16 nhUTLValidateCountReq (NhuHdr *countHdr, NhuErrorInfo *errInfo, U8 *event)

                                                              ;

extern S16 nhUTLValidateDatReq (NhuDatReqSdus *datReqSdus, NhCellAndUeCb *cellAndUeCb, U8 *msgTransId, NhuErrorInfo *errInfo, U8 *event)



                                                         ;

extern S16 nhUTLValidateUeCfg (NhuUeCfgInfo *ueCfg, NhActvUeCb *ueCb, NhuErrorInfo *errInfo)

                                                             ;

extern S16 nhUTLValidateCellCfgReq (NhuCellCfgReqSdus *cellCfgReqSdus, NhCellCb *cellCb, NhuErrorInfo *errInfo)

                                                               ;

extern NhLSapCb* nhUTLFindLlyrSapFrmSuId (U8 sapType, SuId lSapId)
                                                            ;

extern S16 nhUTLValidateSRBforMsgRx (NhActvUeCb *ueCb, U8 rbId, U8 msgType)

                                                      ;

extern S16 nhUTLFillDfltConfig (NhCellAndUeCb *cellAndUeCb, NhuUeCfgInfo *ueCfg)
                                                            ;

extern S16 nhCPMHndlDlDirTx (NhDatReqRspSdu *datReqRspSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, NhuErrorInfo *errInfo)


                                                             ;

extern S16 nhCPMHndlPagingMsg (NhDatReqRspSdu *datReqRspSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, NhuErrorInfo *errInfo)


                                                               ;


extern S16 nhCPMUEInfoReqHndlr (NhDatReqRspSdu *datReqRspSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, NhuErrorInfo *errInfo)


                                                             ;


extern Void nhUTLCreateDbgFile (Void);

extern S16 nhCPMUeCapEnqHndlr (NhDatReqRspSdu *datReqRspSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, NhuErrorInfo *errInfo)

                                                                         ;

extern S16 nhCPMUeCapInfoHndlr (NhuDatIndSdus *nhuDatIndSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId)

                                                  ;

extern S16 nhCGMCountReqHndlr (NhDatReqRspSdu *datReqRspSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId)

                                                 ;

extern S16 nhCGMCountCfmHndlr (NhuDatIndSdus *nhuDatIndSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId)

                                                 ;

extern S16 nhCCMCountChkHndlr (NhDatReqRspSdu *datReqRspSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, NhuErrorInfo *errInfo)

                                                                          ;

extern S16 nhCCMUlDedMsgHndlr (NhuDatIndSdus *nhuDatIndSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, U8 msgType)


                                                ;



extern S16 nhCPMMobFrmEutraCmd (NhDatReqRspSdu *datReqRspSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, NhuErrorInfo *errInfo)


                                                                ;
extern S16 nhCPMHoFrmEutraPrepTfr (NhDatReqRspSdu *datReqRspSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, NhuErrorInfo *errInfo)


                                                                   ;
extern S16 nhCPMCDMACsfbParamRsp (NhDatReqRspSdu *datReqRspSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, NhuErrorInfo *errInfo)


                                                                  ;

typedef S16 (*PCDFLIS16) (NhuDatIndSdus *nhDatSdus, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, U8 msgType)

                                                         ;


extern S16 nhCCMConRestbHdlr ( NhDatReqRspSdu *datReqRspSdu, NhCellAndUeCb *cellAndUeCb, U8 msgTransId, NhuErrorInfo *errInfo)


                                                                 ;
extern S16 nhCCMConRestbCmpHndlr (NhuDatIndSdus *nhuDatIndSdu, NhActvUeCb *ueCb, U8 msgTransId)

                                                      ;
extern S16 nhUIMSndPdcpSduStaCfm (NhuPdcpSduStaCfm *pdcpCfgCfm, U8 cfgMsk, U8 cfmStatus, NhActvUeCb *ueCb)


                                                             ;
extern S16 nhUTLGetRbToRestb ( TransCb *transCb, NhRbCfgList crntRbCfgList)
                                                                ;

extern S16 nhUTLFreeUlBitMapFrmCrntRbCfg (NhCrntCfgInfo *crntCfgInfo);
extern S16 nhUTLFreeUlBitMapFrmOrdCfg (TransCb *transCb, U8 numRbs);
extern S16 nhPIMSndSduStaReq (NhId nhId, TransCb *transCb, NhCellAndUeCb *cellAndUeCb, U8 status)


                                                       ;
extern S16 nhPIMSendPdcpDatResumeReq (NhActvUeCb *ueCb, NhTransId transId)
                                                               ;

extern S16 nhPIMSendStartPdcpDataFwdReq (NhActvUeCb *ueCb, Bool isUlDatFwdReq)
                                                                   ;

extern S16 nhPIMRlcSndRestbCfg (TransCb *transCtrlBlk, NhActvUeCb *ueCb);

extern S16 nhUIMSndPdcpDatResumeCfm
( NhuPdcpDatResumeCfm *pdcpDatResumeCfm, NhActvUeCb *ueCb )


  ;
# 1530 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh.x"
extern S16 nhUTLValidateLSapSuId (U16 elmntId, SuId suId)
                                                       ;

extern S16 nhUTLValidateDatRspDlCChMsg ( NhuDatRspSdus *datRspSdus, NhCellAndUeCb *cellAndUeCb, NhuErrorInfo *errInfo, U16 *crnti, U8 *msgTransId, U8 *event, MsgType *msgType)






                                                          ;

extern S16 nhUTLValidateUeCfgRbAdd ( NhuUeCfgInfo *ueCfg, NhActvUeCb *ueCb, NhuErrorInfo *errInfo)


                                                          ;
# 67 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c" 2
# 75 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
static S16 nhFreeSapLst ( NhGenCfg *gen, CmStatus *status )


  ;

static S16 nhFreeSapCb ( Void )

  ;

static S16 nhFreeCellCb ( Void )

  ;

static S16 nhLSapAlloc ( NhGenCfg *gen, U8 *numLSaps )


  ;

static S16 nhValidateGenCfg ( NhGenCfg *gen )

  ;

static S16 nhValidateProtCfg ( NhProtCfg *prot )

  ;

static S16 nhValidateUSapCfg ( NhUSapCfg *uSap )

  ;

static S16 nhValidateLSapCfg ( U16 elmntId, NhLSapCfg *lSap )


  ;

static S16 nhValidateUSapCntrl ( NhCntrl *cntrl )

  ;

static S16 nhValidateLSapCntrl ( U8 sapType, NhCntrl *cntrl, NhLSapCb **lSapCb )



  ;

static S16 nhValidateSts ( Action action )

  ;

static S16 nhValidateLSapSta ( NhLSapCb *lSapCb )

  ;

static S16 nhValidateUSapSta ( NhSapSta *sta )

  ;

 S16 nhShutdown ( Void )

  ;


 S16 nhDissectrInit (Void);
# 199 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 NhMiLnhCfgReq
(
Pst *pst,
NhMngmt *cfg
)





{
   S16 ret;

   ;;

   if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(_LOGID, L_DEBUG, cfg->hdr.elmId.elmnt, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",214, "Received CfgReq from SM element [%d]", RLOG_FILE_ID, RLOG_MODULE_NAME); };


   if ((cfg) == 0L)
   {
      if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",219, "GOT NULL cfg", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }


   ret = nhLMMLnhCfgReq(pst, cfg);

   return(ret);

}
# 271 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 NhMiLnhCntrlReq
(
Pst *pst,
NhMngmt *cntrl
)





{
   S16 ret;
   NhMngmt cntrlCfm;
   NhUstaDgn dgn;

   ;;
   if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(_LOGID, L_DEBUG, cntrl->hdr.elmId.elmnt, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",287, "Received CntrlReq from SM element [%d]", RLOG_FILE_ID, RLOG_MODULE_NAME); };


   if ((cntrl) == 0L)
   {
      if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",292, "GOT NULL cntrl", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }


   { (ret) = 0; if (nhCb.init.cfgDone != 1) { ; (ret) = 8; } if(((ret) == 0) && (nhCb.eNodeBCb.cfgDone != 1)) { ; (ret) = (256); } };

   cmMemset((U8*)&cntrlCfm, 0, sizeof(NhMngmt));







   if( ret != 0)
   {
      if (cntrl->u.cntrl.action != 36)
      {
         cntrlCfm.cfm.status = 1;
         cntrlCfm.cfm.reason = ret;
      }

      nhLMMSndLmCfm(pst, &cntrl->hdr, 2, &cntrlCfm);
      return(0);
   }


   switch(cntrl->hdr.elmId.elmnt)
   {
      case 0:
         ret = nhGenCntrl(&cntrl->u.cntrl, &cntrlCfm.cfm);
         break;

      case 2:
         ret = nhUSapCntrl(&cntrl->u.cntrl, &cntrlCfm.cfm);
         break;

      case 3:

         ret = nhKwuSapCntrl(&cntrl->u.cntrl,&cntrlCfm.cfm);
         break;

      case 4:

         ret = nhCkwSapCntrl(&cntrl->u.cntrl,&cntrlCfm.cfm);
         break;

      case 5:

         ret = nhCrgSapCntrl(&cntrl->u.cntrl,&cntrlCfm.cfm);
         break;

      case 7:

         ret = nhPjuSapCntrl(&cntrl->u.cntrl,&cntrlCfm.cfm);
         break;

      case 6:

         ret = nhCpjSapCntrl(&cntrl->u.cntrl,&cntrlCfm.cfm);
         break;
# 362 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      default:
      {

         if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(_LOGID, L_ERROR, cntrl->hdr.elmId.elmnt,
 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 365 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
         ,
 366
# 365 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
         , "Invalid Element in control request [%d]", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                   ;

         cntrlCfm.cfm.status = 1;
         cntrlCfm.cfm.reason = 5;
         ret = 1;
         dgn.type = 0;

         nhSendLmAlarm(2, 7,
                       8, &dgn);
         break;
      }
   }

   if (ret != 2)
   {

      nhLMMSndLmCfm(pst, &cntrl->hdr, 2, &cntrlCfm);
   }

   return(ret);
}
# 426 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 NhMiLnhStsReq
(
Pst *pst,
Action action,
NhMngmt *sts
)






{
   S16 ret;
   NhMngmt stsCfm;
   NhUstaDgn dgn;

   NhActvUeCb *ueCb;
   NhCellCb *cellCb;

   ;;

   if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev2(_LOGID, L_DEBUG, action, sts->hdr.elmId.elmnt,
 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 448 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
   ,
 449
# 448 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
   , "NhMiLnhStsReq(action(%d), Received stsReq from SM element(%d)) ", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                               ;


   if ((sts) == 0L)
   {
      if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",454, "GOT NULL sts", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }


   { (ret) = 0; if (nhCb.init.cfgDone != 1) { ; (ret) = 8; } if(((ret) == 0) && (nhCb.eNodeBCb.cfgDone != 1)) { ; (ret) = (256); } };

   cmMemset((U8*)&stsCfm, 0, sizeof(NhMngmt));

   if( ret != 0)
   {
      stsCfm.cfm.status = 1;
      stsCfm.cfm.reason = ret;

      nhLMMSndLmCfm(pst, &sts->hdr, 3, &stsCfm);
      return(0);
   }


   switch (sts->hdr.elmId.elmnt)
   {
      case 0:
         ret = nhGetGenSts (&stsCfm.u.sts.u.genSts, &stsCfm.cfm, action);
         break;

      case 10:
         if((cellCb = nhDBMGetCellCb(sts->u.sts.u.ueSts.cellId)) == 0L)
         {
            if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(_LOGID, L_ERROR, sts->hdr.elmId.elmnt,
 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 482 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
            ,
 483
# 482 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
            , "CELL Does not exist. Element [%d]", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                    ;

            stsCfm.cfm.status = 1;
            stsCfm.cfm.reason = (256 +7);
            ret = 1;
            break;
         }
         if(((ueCb = nhDBMGetUeCb(cellCb,
                                  sts->u.sts.u.ueSts.crnti))) ==
                                                       (NhActvUeCb *)0L)
         {
            if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(_LOGID, L_ERROR, sts->hdr.elmId.elmnt,
 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 494 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
            ,
 495
# 494 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
            , "UE Does not exist. Element [%d]", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                     ;

            stsCfm.cfm.status = 1;
            stsCfm.cfm.reason = (256 +3);
            ret = 1;
            break;
         }
         ret = nhGetUeSts (&stsCfm.u.sts.u.ueSts, &stsCfm.cfm, action, ueCb);
         break;

      case 11:
         if ((cellCb = nhDBMGetCellCb(sts->u.sts.u.cellSts.cellId)) == 0L)
         {
            if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(_LOGID, L_ERROR, sts->hdr.elmId.elmnt,
 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 508 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
            ,
 509
# 508 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
            , "CELL Does not exist. Element [%d]", RLOG_FILE_ID, RLOG_MODULE_NAME); }
                                    ;

            stsCfm.cfm.status = 1;
            stsCfm.cfm.reason = (256 +7);
            ret = 1;
            break;
         }
         ret = nhGetCellSts (&stsCfm.u.sts.u.cellSts, &stsCfm.cfm, action,
                             cellCb);
         break;

      default:
         if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(_LOGID, L_ERROR, sts->hdr.elmId.elmnt, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",521, "Invalid element. Element [%d]", RLOG_FILE_ID, RLOG_MODULE_NAME); };
         stsCfm.cfm.status = 1;
         stsCfm.cfm.reason = 5;
         ret = 1;

         dgn.type = 0;

         nhSendLmAlarm(2, 7,
                                               8, &dgn);
         break;
   }


   nhLMMSndLmCfm(pst, &sts->hdr, 3, &stsCfm);

   return(ret);
}
# 601 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 NhMiLnhStaReq
(
Pst *pst,
NhMngmt *sta
)





{
   S16 ret;
   NhMngmt staCfm;
   NhUstaDgn dgn;

   ;;

   if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(_LOGID, L_DEBUG, sta->hdr.elmId.elmnt, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",618, "Received staReq from SM element [%d]", RLOG_FILE_ID, RLOG_MODULE_NAME); };


   if ((sta) == 0L)
   {
      if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",623, "GOT NULL sta", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }


   { (ret) = 0; if (nhCb.init.cfgDone != 1) { ; (ret) = 8; } if(((ret) == 0) && (nhCb.eNodeBCb.cfgDone != 1)) { ; (ret) = (256); } };

   cmMemset((U8*)&staCfm, 0, sizeof(NhMngmt));

   if( ret != 0)
   {
      staCfm.cfm.status = 1;
      staCfm.cfm.reason = ret;




      if(sta->hdr.elmId.elmnt == 8)
      {
         nhGetSId(&staCfm.u.ssta.u.sysId);
      }
      nhLMMSndLmCfm(pst, &sta->hdr, 4, &staCfm);
      return(0);
   }

   ret = 0;

   switch (sta->hdr.elmId.elmnt)
   {
      case 8:
         staCfm.cfm.status = 0;
         staCfm.cfm.reason = 0;
         (Void) nhGetSId(&staCfm.u.ssta.u.sysId);
         break;

      case 0:
         staCfm.cfm.status = 0;
         staCfm.cfm.reason = 0;
         cmMemcpy ((U8 *)&staCfm.u.ssta.u.genSta, (U8 *)&nhCb.genSta,
                   sizeof (NhGenSta));
         break;

      case 3:
      case 4:
      case 5:
      case 6:
      case 7:



         cmMemcpy ((U8 *)&staCfm.u.ssta.u.sap, (U8 *)&sta->u.ssta.u.sap,
                    sizeof (NhSapSta));
         ret = nhGetLSapSta (&staCfm.u.ssta.u.sap, sta->hdr.elmId.elmnt,
                             &staCfm.cfm);
         break;

      case 2:
         cmMemcpy ((U8 *)&staCfm.u.ssta.u.sap, (U8 *)&sta->u.ssta.u.sap,
                   sizeof (NhSapSta));
         ret = nhGetUSapSta (&staCfm.u.ssta.u.sap, &staCfm.cfm);
         break;

      default:
         if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(_LOGID, L_ERROR, sta->hdr.elmId.elmnt, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",686, "Invalid Element. Element [%d]", RLOG_FILE_ID, RLOG_MODULE_NAME); };
         staCfm.cfm.status = 1;
         staCfm.cfm.reason = 5;
         dgn.type = 0;
         ret = 1;

         nhSendLmAlarm(2, 7,
                       8, &dgn);
         break;
   }


   nhLMMSndLmCfm(pst, &sta->hdr, 4, &staCfm);
   return(ret);
}
# 720 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhLMMLnhCfgReq
(
Pst *pst,
NhMngmt *cfg
)





{
   S16 ret;
   NhMngmt cfgCfm;
   NhUstaDgn dgn;

   ;

   if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(_LOGID, L_DEBUG, cfg->hdr.elmId.elmnt, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",737, "Configuration Received. ElmId[%d]", RLOG_FILE_ID, RLOG_MODULE_NAME); };

   cmMemset((U8*)&cfgCfm, 0, sizeof(NhMngmt));


   if ((!nhCb.init.cfgDone) && (cfg->hdr.elmId.elmnt != 0))
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",744, "General configuration not done.", RLOG_FILE_ID, RLOG_MODULE_NAME); };



      cfgCfm.cfm.status = 1;
      cfgCfm.cfm.reason = 8;


      nhLMMSndLmCfm (pst, &cfg->hdr, 1, &cfgCfm);
      return(1);
   }

   switch (cfg->hdr.elmId.elmnt)
   {
      case 0:
         ret = nhGenCfg(&cfg->u.cfg.u.gen, &cfgCfm.cfm);
         if (ret != 0)
         {
            nhFreeSapLst(&cfg->u.cfg.u.gen, &cfgCfm.cfm);
         }
         break;

      case 1:
         ret = nhProtCfg(&cfg->u.cfg.u.prot, &cfgCfm.cfm);
         break;

      case 2:
         ret = nhUSapCfg(&cfg->u.cfg.u.uSap, &cfgCfm.cfm);
         break;

      case 4:
      case 3:
      case 5:
      case 6:
      case 7:



         ret = nhLSapCfg (&cfg->u.cfg.u.lSap, cfg->hdr.elmId.elmnt,
                          &cfgCfm.cfm);
         break;

      default:
      {
         if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev1(_LOGID, L_ERROR, cfg->hdr.elmId.elmnt, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",788, "Invalid element.[%d]", RLOG_FILE_ID, RLOG_MODULE_NAME); };
         cfgCfm.cfm.status = 1;
         cfgCfm.cfm.reason = 5;
         ret = 1;
         dgn.type = 0;


         nhSendLmAlarm(2, 7,
                                               8, &dgn);
         break;
      }
   }


   nhLMMSndLmCfm(pst, &cfg->hdr, 1, &cfgCfm);
   return(0);

}
# 823 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
static S16 nhValidateGenCfg
(
NhGenCfg *gen
)




{

   ;;

   if(gen->msecTmrRes == 0)
   {
      return(13);
   }

   if ((gen->cfgTmr.enb) && (gen->cfgTmr.val == 0))
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",842, "nhValidateGenCfg: timer enabled but wait is 0", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(13);
   }
   return(0);
}
# 871 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhGenCfg
(
NhGenCfg *gen,
CmStatus *status
)





{
   Size memSize;
   S16 ret;
   U8 numLSaps=0;

   ;;

   if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_DEBUG, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",888, "General Configuration Received", RLOG_FILE_ID, RLOG_MODULE_NAME); };
   memSize = 0L;

   ret = nhValidateGenCfg(gen);
   if (ret != 0)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",894, "General configuration Invalid Parameters.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      status->status = 1;
      status->reason = ret;
      return(1);
   }
   status->status = 0;
   status->reason = 0;

   if (nhCb.init.cfgDone == 1)
   {
      (Void) cmMemcpy((U8 *)&nhCb.init.lmPst, (U8 *) &gen->lmPst,
                      (U32)sizeof(Pst));
      nhCb.init.lmPst.srcProcId = nhCb.init.procId;
      nhCb.init.lmPst.srcEnt = nhCb.init.ent;
      nhCb.init.lmPst.srcInst = nhCb.init.inst;
      nhCb.init.lmPst.event = 0x00;
      return(0);
   }


   cmMemcpy ((U8 *)&nhCb.genCfg, (U8 *)gen, sizeof (NhGenCfg));


   do { if (SGetSBuf((nhCb.init.region), (nhCb.init.pool), (Data **)(&nhCb.uSapCb), (sizeof(NhUSapCb))) == 0) { do { (Void)cmMemset((U8*)((*(&nhCb.uSapCb))), 0, (Size)((sizeof(NhUSapCb)))); } while(0); } else { (*(&nhCb.uSapCb)) = 0L; } } while(0)
                             ;
   if (0L == nhCb.uSapCb)
   {
      if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",921, "Failed to allocate memory for uSap.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }
   nhCb.uSapCb->state = 0;

   if ( 0 != nhLSapAlloc(gen, &numLSaps))
   {
      if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",928, "Failed to allocate memory for Lower Sap.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }



   memSize = (sizeof(NhUSapCb) + sizeof(NhUSapCb *));


   memSize += numLSaps * (sizeof(NhLSapCb) + sizeof(NhLSapCb *));


   memSize += (67 * sizeof(CmListEnt));


   memSize += (67 * sizeof(CmListEnt));



   nhCb.genSta.memSize = memSize;


   (Void) cmMemcpy((U8 *)&nhCb.init.lmPst, (U8 *) &gen->lmPst,
                   (U32)sizeof(Pst));
   nhCb.init.lmPst.srcProcId = nhCb.init.procId;
   nhCb.init.lmPst.srcEnt = nhCb.init.ent;
   nhCb.init.lmPst.srcInst = nhCb.init.inst;
   nhCb.init.lmPst.event = 0x00;


   cmInitTimers(nhCb.timers,(U8)255);


   if ((ret = SRegCfgTmr(nhCb.init.ent,nhCb.init.inst,(S16)nhCb.genCfg.msecTmrRes,100,(PFS16)nhActvTmr)
                                                             )!= 0)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",964, "Timer Registration Failed", RLOG_FILE_ID, RLOG_MODULE_NAME); };

      status->status = 1;
      status->reason = 7;

      return(ret);
   }


   cmLListInit(&(nhCb.eNodeBCb.nhCellCbList.cellCbList));

   printf("\n nhGenCfg rrcLogEnable  = %d\n",nhCb.genCfg.rrcLogEnable);
   if(nhCb.genCfg.rrcLogEnable)
   {
      nhDissectrInit();
   }


   nhCb.init.cfgDone = 1;
   return(0);
}
# 1001 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
static S16 nhLSapAlloc
(
NhGenCfg *gen,
U8 *numLSaps
)





{
   U16 i = 0;


   ;


   do { if (SGetSBuf((nhCb.init.region), (nhCb.init.pool), (Data **)((Data **)&nhCb.kwuSapCbLst), (sizeof(NhLSapCb *) * gen->nmbKwuSaps)) == 0) { do { (Void)cmMemset((U8*)((*((Data **)&nhCb.kwuSapCbLst))), 0, (Size)((sizeof(NhLSapCb *) * gen->nmbKwuSaps))); } while(0); } else { (*((Data **)&nhCb.kwuSapCbLst)) = 0L; } } while(0)
                                                 ;
   if (0L == nhCb.kwuSapCbLst)
   {
      if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1022, "Failed to allocate memory for KWU sap(s).", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }
   else
   {

      for (i = 0; i < gen->nmbKwuSaps; i++)
      {
         nhCb.kwuSapCbLst[i] = 0L;
      }

      if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_DEBUG, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1033, "KWU Sap(s) Initialized", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      *numLSaps += gen->nmbKwuSaps;
   }


   do { if (SGetSBuf((nhCb.init.region), (nhCb.init.pool), (Data **)(&nhCb.ckwSapCbLst), (sizeof(NhLSapCb *) * gen->nmbCkwSaps)) == 0) { do { (Void)cmMemset((U8*)((*(&nhCb.ckwSapCbLst))), 0, (Size)((sizeof(NhLSapCb *) * gen->nmbCkwSaps))); } while(0); } else { (*(&nhCb.ckwSapCbLst)) = 0L; } } while(0)
                                                 ;
   if (0L == nhCb.ckwSapCbLst)
   {
      if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1042, "Failed to allocate memory for CKW sap(s).", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }
   else
   {

      for (i = 0; i < gen->nmbCkwSaps; i++)
      {
         nhCb.ckwSapCbLst[i] = 0L;
      }
      if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_DEBUG, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1052, "CKW Sap(s) Initialized", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      *numLSaps += gen->nmbCkwSaps;
   }


   do { if (SGetSBuf((nhCb.init.region), (nhCb.init.pool), (Data **)(&nhCb.crgSapCbLst), (sizeof(NhLSapCb *) * gen->nmbCrgSaps)) == 0) { do { (Void)cmMemset((U8*)((*(&nhCb.crgSapCbLst))), 0, (Size)((sizeof(NhLSapCb *) * gen->nmbCrgSaps))); } while(0); } else { (*(&nhCb.crgSapCbLst)) = 0L; } } while(0)
                                                 ;
   if (0L == nhCb.crgSapCbLst)
   {
      if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1061, "Failed to allocate memory for CRG sap(s).", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }
   else
   {

      for (i = 0; i < gen->nmbCrgSaps; i++)
      {
         nhCb.crgSapCbLst[i] = 0L;
      }
      if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_DEBUG, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1071, "CRG Sap(s) Initialized", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      *numLSaps += gen->nmbCrgSaps;
   }


   do { if (SGetSBuf((nhCb.init.region), (nhCb.init.pool), (Data **)(&nhCb.pjuSapCbLst), (sizeof(NhLSapCb *) * gen->nmbPjuSaps)) == 0) { do { (Void)cmMemset((U8*)((*(&nhCb.pjuSapCbLst))), 0, (Size)((sizeof(NhLSapCb *) * gen->nmbPjuSaps))); } while(0); } else { (*(&nhCb.pjuSapCbLst)) = 0L; } } while(0)
                                                 ;
   if (0L == nhCb.pjuSapCbLst)
   {
      if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1080, "Failed to allocate memory for PJU sap(s).", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }
   else
   {

      for (i = 0; i < gen->nmbPjuSaps; i++)
      {
         nhCb.pjuSapCbLst[i] = 0L;
      }
      if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_DEBUG, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1090, "PJU Sap(s) Initialized", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      *numLSaps += gen->nmbPjuSaps;
   }


   do { if (SGetSBuf((nhCb.init.region), (nhCb.init.pool), (Data **)(&nhCb.cpjSapCbLst), (sizeof(NhLSapCb *) * gen->nmbCpjSaps)) == 0) { do { (Void)cmMemset((U8*)((*(&nhCb.cpjSapCbLst))), 0, (Size)((sizeof(NhLSapCb *) * gen->nmbCpjSaps))); } while(0); } else { (*(&nhCb.cpjSapCbLst)) = 0L; } } while(0)
                                                 ;
   if (0L == nhCb.cpjSapCbLst)
   {
      if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1099, "Failed to allocate memory for CPJ sap(s).", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(1);
   }
   else
   {

      for (i = 0; i < gen->nmbCpjSaps; i++)
      {
         nhCb.cpjSapCbLst[i] = 0L;
      }
      if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_DEBUG, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1109, "CPJ Sap(s) Initialized", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      *numLSaps += gen->nmbCpjSaps;
   }
# 1134 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
   return(0);
}
# 1152 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
static S16 nhValidateProtCfg
(
NhProtCfg *prot
)




{
   ;;

   if(prot->maxConn == 0)
   {
      return(13);
   }

   return(0);
}
# 1186 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhProtCfg
(
NhProtCfg *prot,
CmStatus *status
)





{
   S16 ret;

   ;;

   if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_DEBUG, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1201, "Protocol Configuration Received", RLOG_FILE_ID, RLOG_MODULE_NAME); };

   ret = nhValidateProtCfg(prot);
   if (ret != 0)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1206, "Protocol Configuration Failed.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      status->status = 1;
      status->reason = ret;
      return(1);
   }


   if(nhCb.eNodeBCb.cfgDone == 1)
   {
     nhCb.eNodeBCb.protCfg.maxConn = prot->maxConn;
   }
   else
   {

      cmMemcpy ((U8 *)&nhCb.eNodeBCb.protCfg, (U8 *)prot, sizeof (NhProtCfg));
      nhCb.eNodeBCb.cfgDone = 1;
   }

   status->status = 0;
   status->reason = 0;
   return(0);
}
# 1244 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
static S16 nhValidateUSapCfg
(
NhUSapCfg *uSap
)




{
   ;;


   if (nhCb.eNodeBCb.cfgDone != 1)
   {
      return((256));
   }


   if(uSap->selector > 2)
   {
      return(13);
   }


   if(uSap->prior > 0x03)
   {
      return(13);
   }

   return(0);
}
# 1290 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhUSapCfg
(
NhUSapCfg *uSap,
CmStatus *status
)





{
   S16 ret;

   ;;

   if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_DEBUG, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1305, "Upper SAP Configuration Received", RLOG_FILE_ID, RLOG_MODULE_NAME); };
   status->status = 0;
   status->reason = 0;


   ret = nhValidateUSapCfg(uSap);
   if (ret != 0)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1313, "USap configuration Failed.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      status->status = 1;
      status->reason = ret;
      return(1);
   }

   if (nhCb.uSapCb->state != 0)
   {

      nhCb.uSapCb->pst.prior = uSap->prior;



      nhCb.uSapCb->pst.pool = uSap->mem.pool;
      return(0);
   }


   nhCb.uSapCb->suId = 0;
   nhCb.uSapCb->spId = uSap->spId;
   nhCb.uSapCb->pst.srcProcId = nhCb.init.procId;
   nhCb.uSapCb->pst.srcEnt = nhCb.init.ent;
   nhCb.uSapCb->pst.srcInst = nhCb.init.inst;
   nhCb.uSapCb->pst.prior = uSap->prior;
   nhCb.uSapCb->pst.route = uSap->route;

   nhCb.uSapCb->pst.region = nhCb.init.region;



   nhCb.uSapCb->pst.pool = uSap->mem.pool;
   nhCb.uSapCb->pst.selector = uSap->selector;
   nhCb.uSapCb->state = 1;

   return(0);
}
# 1365 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
static S16 nhValidateLSapCfg
(
U16 elmntId,
NhLSapCfg *lSap
)





{
   S16 ret;

   ;;

   if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_DEBUG, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1380, "In nhValidateLSapCfg", RLOG_FILE_ID, RLOG_MODULE_NAME); };

   ret = nhUTLValidateLSapSuId(elmntId, lSap->suId);
   if (0 != ret)
   {
      return(ret);
   }


   if(lSap->selector > 3)
   {
      return(13);
   }


   if(lSap->prior > 0x03)
   {
      return(13);
   }

   if ((lSap->bndTmr.enb) && (lSap->bndTmr.val == 0))
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1402, "nhValidateLSapCfg: timer enabled but wait is 0", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      return(13);
   }

   return(0);
}
# 1423 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhLSapCfg
(
NhLSapCfg *lSap,
U16 elmntId,
CmStatus *status
)






{
   S16 ret;
   NhLSapCb *lSapCb;

   ;;

   if( L_DEBUG < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_DEBUG, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1441, "Lower SAP Configuration Received", RLOG_FILE_ID, RLOG_MODULE_NAME); };
   lSapCb = 0L;

   status->status = 0;
   status->reason = 0;


   ret = nhValidateLSapCfg(elmntId, lSap);
   if (ret != 0)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1451, "LSAP configuration Failed.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      status->status = 1;
      status->reason = ret;
      return(1);
   }

   switch(elmntId)
   {
      case 3:
         lSapCb = nhCb.kwuSapCbLst[lSap->suId];
         break;
      case 4:
         lSapCb = nhCb.ckwSapCbLst[lSap->suId];
         break;
      case 5:
         lSapCb = nhCb.crgSapCbLst[lSap->suId];
         break;
      case 7:
         lSapCb = nhCb.pjuSapCbLst[lSap->suId];
         break;
      case 6:
         lSapCb = nhCb.cpjSapCbLst[lSap->suId];
         break;





      default:
         if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1480, "Invalid SAP ElmId.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
         status->status = 1;
         return(1);
   }

   if (lSapCb != 0L)
   {
      if (lSapCb->state != 0 )
      {

         lSapCb->pst.prior = lSap->prior;
         lSapCb->pst.region = lSap->mem.region;
         lSapCb->pst.pool = lSap->mem.pool;

         return(0);
      }
   }
   else
   {
      do { if (SGetSBuf((nhCb.init.region), (nhCb.init.pool), (Data **)(&lSapCb), (sizeof(NhLSapCb))) == 0) { do { (Void)cmMemset((U8*)((*(&lSapCb))), 0, (Size)((sizeof(NhLSapCb)))); } while(0); } else { (*(&lSapCb)) = 0L; } } while(0)
                                ;
      if (0L == lSapCb)
      {
         if( L_FATAL < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_FATAL, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1503, "Failed to allocate memory for lower SAP.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
         status->status = 1;
         status->reason = 4;
         return(1);
      }
      switch(elmntId)
      {
         case 3:
            nhCb.kwuSapCbLst[lSap->suId] = lSapCb;
            break;
         case 4:
            nhCb.ckwSapCbLst[lSap->suId] = lSapCb;
            break;
         case 5:
            nhCb.crgSapCbLst[lSap->suId] = lSapCb;
            break;
         case 7:
            nhCb.pjuSapCbLst[lSap->suId] = lSapCb;
            break;
         case 6:
            nhCb.cpjSapCbLst[lSap->suId] = lSapCb;
            break;





         default:
            if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1531, "Invalid SAP ElmId.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
            status->status = 1;
            return(1);
      }
   }


   lSapCb->suId = lSap->suId;
   lSapCb->spId = lSap->spId;
   lSapCb->sapElmId = elmntId;
   lSapCb->pst.dstProcId = lSap->procId;
   lSapCb->pst.srcProcId = nhCb.init.procId;
   lSapCb->pst.dstEnt = lSap->ent;
   lSapCb->pst.dstInst = lSap->inst;
   lSapCb->pst.srcEnt = nhCb.init.ent;
   lSapCb->pst.srcInst = nhCb.init.inst;
   lSapCb->pst.prior = lSap->prior;
   lSapCb->pst.route = lSap->route;
   lSapCb->pst.region = lSap->mem.region;
   lSapCb->pst.pool = lSap->mem.pool;
   lSapCb->pst.selector = lSap->selector;
   cmMemcpy ((U8 *)&lSapCb->bndTmr, (U8 *)&lSap->bndTmr, sizeof(TmrCfg));
   lSapCb->bndRetryCnt = 0;
   lSapCb->trc = 0;

   cmInitTimers(lSapCb->timers, 8);

   lSapCb->state = 1;

   return(0);
}
# 1579 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhGenCntrl
(
NhCntrl *cntrl,
CmStatus *status
)





{
   S16 ret = 0;

   ;;

   status->status = 0;
   status->reason = 0;


   switch (cntrl->action)
   {
      case 1:
      {
         switch (cntrl->subAction)
         {
            case 3:
               nhCb.init.usta = 1;
               break;

            default:
               status->status = 1;
               status->reason = 10;
               break;
         }
         break;
      }

      case 2:
      {
         switch (cntrl->subAction)
         {
            case 3:
               nhCb.init.usta = 0;
               break;

            default:
               status->status = 1;
               status->reason = 10;
               break;
         }
         break;
      }

      case 36:
            ret = nhShutdown();
         break;

      default:
         status->status = 1;
         status->reason = 9;
         break;
   }

   return(ret);
}
# 1660 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
static S16 nhValidateUSapCntrl
(
NhCntrl *cntrl
)




{

   ;;


   switch (cntrl->action)
   {
      case 7:
      case 31:
         if (nhCb.uSapCb->state == 0)
         {
             return(13);
         }
         break;
      default:
         return(9);
   }

   return(0);
}
# 1703 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhUSapCntrl
(
NhCntrl *cntrl,
CmStatus *status
)





{
   S16 ret;

   ;;

   ret = nhValidateUSapCntrl(cntrl);
   if (ret != 0)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1721, "USap Control Request Failed.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      status->status = 1;
      status->reason = ret;
      return(1);
   }

   status->status = 0;
   status->reason = 0;


   switch (cntrl->action)
   {
      case 31:
         nhCb.uSapCb->state = 1;
         break;

      case 7:
         cmMemset((U8 *)nhCb.uSapCb, 0 , sizeof(NhUSapCb));
         nhCb.uSapCb->state = 0;
         break;

      default:
         break;
   }

   return(0);
}
# 1765 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
static S16 nhValidateLSapCntrl
(
U8 sapType,
NhCntrl *cntrl,
NhLSapCb **lSapCb
)






{
   S16 ret;

   ;;

   ret = nhUTLValidateLSapSuId(sapType, cntrl->u.sap.sapId);

   *lSapCb = nhUTLFindLlyrSapFrmSuId(sapType, cntrl->u.sap.sapId);
   if ((0 != ret) || (0L == *lSapCb))
   {
      return((256 +1));
   }


   switch (cntrl->action)
   {
      case 7:
      case 21:
      case 31:
      case 1:
      case 2:
         if ((*lSapCb)->state == 0)
         {
           return((256 +1));
         }
         break;

      default:
         return(9);
   }

   return(0);
}
# 1825 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhLSapCntrlActHndl
(
S16 action,
S16 sAction,
NhLSapCb *lSapCb,
U8 evntType,
U8 lSapType
)
# 1841 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
{
   S16 ret;

   ;;

   ret = 0;


   switch (action)
   {
      case 21:

         if (lSapCb->bndTmr.enb == 1)
         {
            ret = nhSchedGenTmr(lSapCb, (S16)evntType, 1);
         }

         if(ret == 0)
         {
            lSapCb->state = 3;
            nhLIMSendBndReq(lSapType, lSapCb);
         }
         break;

      case 31:




         if (lSapCb->state == 3)
         {
            ret = nhSchedGenTmr(lSapCb, (S16)evntType, 0);
         }


         if(ret == 0)
         {
            nhLIMSendUbndReq(lSapType, lSapCb);
            lSapCb->state = 1;
         }
         break;

      case 7:




         if (lSapCb->state == 3)
         {
            ret = nhSchedGenTmr(lSapCb, (S16)evntType, 0);
         }


         if(ret == 0)
         {
            nhLIMSendUbndReq(lSapType, lSapCb);
            cmMemset((U8 *)lSapCb, 0, sizeof(NhLSapCb));
            lSapCb->state = 0;
         }
         break;
# 1916 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      default:
         break;
    }

    return(ret);
}
# 1937 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhKwuSapCntrl
(
NhCntrl *cntrl,
CmStatus *status
)





{
   S16 ret;
   NhLSapCb *lSapCb;
   U8 nmbKwuSaps;

   ;;

   nmbKwuSaps = nhCb.genCfg.nmbKwuSaps;

   status->status = 0;
   status->reason = 0;

   ret = nhValidateLSapCntrl (3, cntrl, &lSapCb);
   if (ret != 0)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",1962, "LSap Control Request Failed for KWU.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      status->status = 1;
      status->reason = ret;
      return(1);
   }


   nhLSapCntrlActHndl(cntrl->action, cntrl->subAction, lSapCb,
                            5, 3);

   return(0);

}
# 1990 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhCkwSapCntrl
(
NhCntrl *cntrl,
CmStatus *status
)





{
   S16 ret;
   NhLSapCb *lSapCb;
   U8 nmbCkwSaps;

   ;;

   nmbCkwSaps = nhCb.genCfg.nmbCkwSaps;

   status->status = 0;
   status->reason = 0;

   ret = nhValidateLSapCntrl (4, cntrl, &lSapCb);
   if (ret != 0)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",2015, "LSap Control Request Failed for CKW.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      status->status = 1;
      status->reason = ret;
      return(1);
   }


   nhLSapCntrlActHndl(cntrl->action, cntrl->subAction, lSapCb,
                            2, 4);

   return(0);
}
# 2042 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhCrgSapCntrl
(
NhCntrl *cntrl,
CmStatus *status
)





{
   S16 ret;
   NhLSapCb *lSapCb;
   U8 nmbCrgSaps;

   ;;

   nmbCrgSaps = nhCb.genCfg.nmbCrgSaps;

   status->status = 0;
   status->reason = 0;

   ret = nhValidateLSapCntrl (5, cntrl, &lSapCb);
   if (ret != 0)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",2067, "LSap Control Request Failed Failed for CRG.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      status->status = 1;
      status->reason = ret;
      return(1);
   }


   nhLSapCntrlActHndl(cntrl->action, cntrl->subAction, lSapCb,
                            3, 5);

   return(0);
}
# 2094 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhPjuSapCntrl
(
NhCntrl *cntrl,
CmStatus *status
)





{
   S16 ret;
   NhLSapCb *lSapCb;
   U8 nmbPjuSaps;

   ;;

   nmbPjuSaps = nhCb.genCfg.nmbPjuSaps;

   status->status = 0;
   status->reason = 0;

   ret = nhValidateLSapCntrl (7, cntrl, &lSapCb);
   if (ret != 0)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",2119, "LSap Control Request Failed for PJU.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      status->status = 1;
      status->reason = ret;
      return(1);
   }


   nhLSapCntrlActHndl(cntrl->action, cntrl->subAction, lSapCb,
                            4, 7);

   return(0);
}
# 2146 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhCpjSapCntrl
(
NhCntrl *cntrl,
CmStatus *status
)





{
   S16 ret;
   NhLSapCb *lSapCb;
   U8 nmbCpjSaps;

   ;;

   nmbCpjSaps = nhCb.genCfg.nmbCpjSaps;

   status->status = 0;
   status->reason = 0;

   ret = nhValidateLSapCntrl (6, cntrl, &lSapCb);
   if (ret != 0)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",2171, "LSap Control Request Failed for CPJ", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      status->status = 1;
      status->reason = ret;
      return(1);
   }


   nhLSapCntrlActHndl(cntrl->action, cntrl->subAction, lSapCb,
                            1, 6);

   return(0);
}
# 2258 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
static S16 nhValidateSts
(
Action action
)




{

   ;;
   if (action != 0 && action != 1)
   {
      return(13);
   }

   return(0);

}
# 2292 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhGetGenSts
(
NhGenSts *sts,
CmStatus *status,
Action action
)






{
   S16 ret;

   ;;

   ret = nhValidateSts (action);
   if (ret != 0)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",2312, "Invalid Action for statistics.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      status->status = 1;
      status->reason = ret;
      return(1);
   }

   status->status = 0;
   status->reason = 0;
   cmMemcpy ((U8 *)sts, (U8 *)&nhCb.genSts, sizeof (NhGenSts));

   if (action == 0)
   {
      cmMemset ((U8 *)&nhCb.genSts, 0, sizeof (NhGenSts));
   }
   return(0);
}
# 2343 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhGetUeSts
(
NhUeSts *sts,
CmStatus *status,
Action action,
NhActvUeCb *ueCb
)







{
   S16 ret;

   ;;

   ret = nhValidateSts (action);

   if (ret != 0)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",2366, "UE statistics validation Failed.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      status->status = 1;
      status->reason = ret;
      return(1);
   }

   status->status = 0;
   status->reason = 0;

   cmMemcpy((U8 *)sts, (U8 *)&(ueCb->ueSts),sizeof(NhUeSts));

   if (action == 0)
   {
      cmMemset ((U8 *)&(ueCb->ueSts), 0, sizeof(NhUeSts));
   }

   return(0);

}
# 2400 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhGetCellSts
(
NhCellSts *sts,
CmStatus *status,
Action action,
NhCellCb *cellCb
)







{
   S16 ret;

   ;;

   ret = nhValidateSts (action);

   if (ret != 0)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",2423, "CELL statistics validation Failed.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      status->status = 1;
      status->reason = ret;
      return(1);
   }

   status->status = 0;
   status->reason = 0;

   cmMemcpy((U8 *)sts, (U8 *)&(cellCb->cellSts),
                                   sizeof (cellCb->cellSts));
   if (action == 0)
   {
      cmMemset ((U8 *)&(cellCb->cellSts), 0,
                                   sizeof (cellCb->cellSts));
   }

   return(0);

}
# 2462 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
static S16 nhValidateLSapSta
(
NhLSapCb *lSapCb
)




{

   ;;

   if (lSapCb->state == 0)
   {
      return(13);
   }
   return(0);

}
# 2497 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhGetLSapSta
(
NhSapSta *sta,
U16 elmntId,
CmStatus *status
)






{
   S16 ret;
   NhLSapCb *lSapCb = 0L;

   ;;

   status->status = 0;
   status->reason = 0;

   switch (elmntId)
   {
      case 3:
         lSapCb = nhCb.kwuSapCbLst[sta->sapId];
         break;

      case 4:
         lSapCb = nhCb.ckwSapCbLst[sta->sapId];
         break;

      case 5:
         lSapCb = nhCb.crgSapCbLst[sta->sapId];
         break;

      case 7:
         lSapCb = nhCb.pjuSapCbLst[sta->sapId];
         break;

      case 6:
         lSapCb = nhCb.cpjSapCbLst[sta->sapId];
         break;







      default:
         {
            if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",2548, "Invalid SAP ElmId.", RLOG_FILE_ID, RLOG_MODULE_NAME); };


            return(1);
         }
   }

   ret = nhValidateLSapSta (lSapCb);
   if (ret != 0)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",2558, "LSAP Status Request validation Failed.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      status->status = 1;
      status->reason = ret;
      return(1);
   }

   sta->sapState = lSapCb->state;
   return(0);
}
# 2584 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
static S16 nhValidateUSapSta
(
NhSapSta *sta
)




{

   ;;

   (sta=sta);

   if (nhCb.uSapCb->state == 0)
   {
      return((256 +2));
   }

   return(0);

}
# 2621 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhGetUSapSta
(
NhSapSta *sta,
CmStatus *status
)





{
   S16 ret;

   ;;

   status->status = 0;
   status->reason = 0;

   ret = nhValidateUSapSta (sta);
   if (ret != 0)
   {
      if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",2642, "USap Status Request validation Failed ", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      status->status = 1;
      status->reason = ret;
      return(1);
   }

   sta->sapState = nhCb.uSapCb->state;
   return(0);

}
# 2668 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhLMMSndLmCfm
(
Pst *pst,
Header *hdr,
U8 type,
NhMngmt *cfm
)







{
   Pst pstCfm;

   ;;


   pstCfm.srcEnt = nhCb.init.ent;
   pstCfm.srcInst = nhCb.init.inst;
   pstCfm.srcProcId = SFndProcId();
   pstCfm.dstEnt = pst->srcEnt;
   pstCfm.dstInst = pst->srcInst;
   pstCfm.dstProcId = pst->srcProcId;
   pstCfm.selector = hdr->response.selector;
   pstCfm.prior = hdr->response.prior;
   pstCfm.route = hdr->response.route;

   pstCfm.region = nhCb.init.region;



   pstCfm.pool = hdr->response.mem.pool;


   cmMemset ((U8 *)&cfm->hdr, '\0', sizeof(cfm->hdr));
   cfm->hdr.elmId.elmnt = hdr->elmId.elmnt;
   cfm->hdr.entId.ent = nhCb.init.ent;
   cfm->hdr.entId.inst = nhCb.init.inst;
   cfm->hdr.transId = hdr->transId;
   cfm->hdr.msgType = hdr->msgType;


   switch (type)
   {
      case 1:
         NhMiLnhCfgCfm (&pstCfm, cfm);
         break;

      case 2:
         NhMiLnhCntrlCfm (&pstCfm, cfm);
         break;

      case 3:

         (Void) SGetDateTime(&cfm->u.sts.dt);
         NhMiLnhStsCfm (&pstCfm, cfm);
         break;

      case 4:

         (Void) SGetDateTime(&cfm->u.ssta.dt);
         NhMiLnhStaCfm (&pstCfm, cfm);
         break;
      default:
         if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",2735, "Invalid msgType.", RLOG_FILE_ID, RLOG_MODULE_NAME); };
         break;
   }
   return(0);
}
# 2755 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 Void nhSendLmAlarm
(
U16 category,
U16 event,
U16 cause,
NhUstaDgn *dgn
)







{
   NhMngmt usta;

   ;;

   if (nhCb.init.usta == 0)
   {
      return;
   }


   (Void)cmMemset((U8 *) &usta, '\0', (U32)sizeof(usta));

   usta.hdr.elmId.elmnt = 0;
   usta.hdr.entId.ent = nhCb.init.ent;
   usta.hdr.entId.inst = nhCb.init.inst;

   usta.u.usta.alarm.category = category;
   usta.u.usta.alarm.event = event;
   usta.u.usta.alarm.cause = cause;


   cmMemcpy((U8 *)&usta.u.usta.dgn, (U8 *)dgn, (U32)sizeof(NhUstaDgn));


   (Void) SGetDateTime(&usta.u.usta.alarm.dt);


   NhMiLnhStaInd(&nhCb.genCfg.lmPst, &usta);

   return;

}
# 2815 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 S16 nhShutdown
(
Void
)



{
   ;

   if (nhCb.init.cfgDone != 1)
   {

      return(0);
   }

   nhPrcCmplShutdown();
   return(0);
}
# 2851 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
 Void nhPrcCmplShutdown
(
Void
)



{

   ;


   SDeregCfgTmr(nhCb.init.ent,nhCb.init.inst,(S16)nhCb.genCfg.msecTmrRes,100,(PFS16)nhActvTmr)
                                ;


   nhFreeSapCb();


   nhFreeCellCb();


   nhActvInit (nhCb.init.ent, nhCb.init.inst,
               nhCb.init.region, nhCb.init.reason);

   return;
}
# 2894 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
static S16 nhFreeSapCb
(
)



{

   U16 i = 0;
   NhLSapCb *lSapCb = 0L;

   ;

   if (nhCb.uSapCb != 0L)
   {
      { if ((nhCb.uSapCb) == 0L) { SLogError(nhCb.init.ent, nhCb.init.inst, nhCb.init.procId,
                              "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 2909 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      ,
                              2910
# 2909 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      , 0x2, 0, (ErrVal) 0, "Can't free the memory: GOT NULL PTR\n"); } else { (Void) SPutSBuf((nhCb.init.region), (nhCb.init.pool), (Data *)(nhCb.uSapCb), (Size)(sizeof(NhUSapCb))); (nhCb.uSapCb) = 0L; } }
                               ;
      nhCb.uSapCb = 0L;
   }


   for(i = 0; i < nhCb.genCfg.nmbKwuSaps; i++)
   {
      lSapCb = nhCb.kwuSapCbLst[i];
      if (lSapCb != 0L)
      {
        { if ((lSapCb) == 0L) { SLogError(nhCb.init.ent, nhCb.init.inst, nhCb.init.procId,
                                  "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 2920 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
        ,
                                  2921
# 2920 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
        , 0x2, 0, (ErrVal) 0, "Can't free the memory: GOT NULL PTR\n"); } else { (Void) SPutSBuf((nhCb.init.region), (nhCb.init.pool), (Data *)(lSapCb), (Size)(sizeof(NhLSapCb ))); (lSapCb) = 0L; } }
                                   ;
         nhCb.kwuSapCbLst[i] = 0L;
      }
   }
   if (nhCb.genCfg.nmbKwuSaps)
   {
      { if ((nhCb.kwuSapCbLst) == 0L) { SLogError(nhCb.init.ent, nhCb.init.inst, nhCb.init.procId,
                                                        "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 2927 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      ,
                                                        2928
# 2927 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      , 0x2, 0, (ErrVal) 0, "Can't free the memory: GOT NULL PTR\n"); } else { (Void) SPutSBuf((nhCb.init.region), (nhCb.init.pool), (Data *)(nhCb.kwuSapCbLst), (Size)(sizeof(NhLSapCb *) * nhCb.genCfg.nmbKwuSaps)); (nhCb.kwuSapCbLst) = 0L; } }
                                                         ;
   }


   for(i = 0; i < nhCb.genCfg.nmbCkwSaps; i++)
   {
      lSapCb = nhCb.ckwSapCbLst[i];
      if (lSapCb != 0L)
      {
        { if ((lSapCb) == 0L) { SLogError(nhCb.init.ent, nhCb.init.inst, nhCb.init.procId,
                                  "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 2937 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
        ,
                                  2938
# 2937 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
        , 0x2, 0, (ErrVal) 0, "Can't free the memory: GOT NULL PTR\n"); } else { (Void) SPutSBuf((nhCb.init.region), (nhCb.init.pool), (Data *)(lSapCb), (Size)(sizeof(NhLSapCb ))); (lSapCb) = 0L; } }
                                   ;
         nhCb.ckwSapCbLst[i] = 0L;
      }
   }
   if (nhCb.genCfg.nmbCkwSaps)
   {
      { if ((nhCb.ckwSapCbLst) == 0L) { SLogError(nhCb.init.ent, nhCb.init.inst, nhCb.init.procId,
                                                        "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 2944 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      ,
                                                        2945
# 2944 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      , 0x2, 0, (ErrVal) 0, "Can't free the memory: GOT NULL PTR\n"); } else { (Void) SPutSBuf((nhCb.init.region), (nhCb.init.pool), (Data *)(nhCb.ckwSapCbLst), (Size)(sizeof(NhLSapCb *) * nhCb.genCfg.nmbCkwSaps)); (nhCb.ckwSapCbLst) = 0L; } }
                                                         ;
   }


   for(i = 0; i < nhCb.genCfg.nmbCrgSaps; i++)
   {
      lSapCb = nhCb.crgSapCbLst[i];
      if (lSapCb != 0L)
      {
        { if ((lSapCb) == 0L) { SLogError(nhCb.init.ent, nhCb.init.inst, nhCb.init.procId,
                                  "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 2954 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
        ,
                                  2955
# 2954 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
        , 0x2, 0, (ErrVal) 0, "Can't free the memory: GOT NULL PTR\n"); } else { (Void) SPutSBuf((nhCb.init.region), (nhCb.init.pool), (Data *)(lSapCb), (Size)(sizeof(NhLSapCb ))); (lSapCb) = 0L; } }
                                   ;
         nhCb.crgSapCbLst[i] = 0L;
      }
   }
   if (nhCb.genCfg.nmbCrgSaps)
   {
      { if ((nhCb.crgSapCbLst) == 0L) { SLogError(nhCb.init.ent, nhCb.init.inst, nhCb.init.procId,
                                                        "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 2961 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      ,
                                                        2962
# 2961 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      , 0x2, 0, (ErrVal) 0, "Can't free the memory: GOT NULL PTR\n"); } else { (Void) SPutSBuf((nhCb.init.region), (nhCb.init.pool), (Data *)(nhCb.crgSapCbLst), (Size)(sizeof(NhLSapCb *) * nhCb.genCfg.nmbCrgSaps)); (nhCb.crgSapCbLst) = 0L; } }
                                                         ;
   }


   for(i = 0; i < nhCb.genCfg.nmbCpjSaps; i++)
   {
      lSapCb = nhCb.cpjSapCbLst[i];
      if (lSapCb != 0L)
      {
        { if ((lSapCb) == 0L) { SLogError(nhCb.init.ent, nhCb.init.inst, nhCb.init.procId,
                                  "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 2971 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
        ,
                                  2972
# 2971 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
        , 0x2, 0, (ErrVal) 0, "Can't free the memory: GOT NULL PTR\n"); } else { (Void) SPutSBuf((nhCb.init.region), (nhCb.init.pool), (Data *)(lSapCb), (Size)(sizeof(NhLSapCb ))); (lSapCb) = 0L; } }
                                   ;
         nhCb.cpjSapCbLst[i] = 0L;
      }
   }
   if (nhCb.genCfg.nmbCpjSaps)
   {
      { if ((nhCb.cpjSapCbLst) == 0L) { SLogError(nhCb.init.ent, nhCb.init.inst, nhCb.init.procId,
                                                        "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 2978 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      ,
                                                        2979
# 2978 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      , 0x2, 0, (ErrVal) 0, "Can't free the memory: GOT NULL PTR\n"); } else { (Void) SPutSBuf((nhCb.init.region), (nhCb.init.pool), (Data *)(nhCb.cpjSapCbLst), (Size)(sizeof(NhLSapCb *) * nhCb.genCfg.nmbCpjSaps)); (nhCb.cpjSapCbLst) = 0L; } }
                                                         ;
   }


   for(i = 0; i < nhCb.genCfg.nmbPjuSaps; i++)
   {
      lSapCb = nhCb.pjuSapCbLst[i];
      if (lSapCb != 0L)
      {
        { if ((lSapCb) == 0L) { SLogError(nhCb.init.ent, nhCb.init.inst, nhCb.init.procId,
                                  "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 2988 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
        ,
                                  2989
# 2988 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
        , 0x2, 0, (ErrVal) 0, "Can't free the memory: GOT NULL PTR\n"); } else { (Void) SPutSBuf((nhCb.init.region), (nhCb.init.pool), (Data *)(lSapCb), (Size)(sizeof(NhLSapCb ))); (lSapCb) = 0L; } }
                                   ;
         nhCb.pjuSapCbLst[i] = 0L;
      }
   }
   if (nhCb.genCfg.nmbPjuSaps)
   {
      { if ((nhCb.pjuSapCbLst) == 0L) { SLogError(nhCb.init.ent, nhCb.init.inst, nhCb.init.procId,
                                                        "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 2995 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      ,
                                                        2996
# 2995 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      , 0x2, 0, (ErrVal) 0, "Can't free the memory: GOT NULL PTR\n"); } else { (Void) SPutSBuf((nhCb.init.region), (nhCb.init.pool), (Data *)(nhCb.pjuSapCbLst), (Size)(sizeof(NhLSapCb *) * nhCb.genCfg.nmbPjuSaps)); (nhCb.pjuSapCbLst) = 0L; } }
                                                         ;
   }
# 3018 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
   return(0);
}
# 3038 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
static S16 nhFreeCellCb
(
)



{
   S16 cbRetVal;
   CmLList *tmpNode = 0L;
   NhCellCb *cellCb = 0L;

   ;


   ((((tmpNode) = ((&(nhCb.eNodeBCb.nhCellCbList.cellCbList))->crnt = (&(nhCb.eNodeBCb.nhCellCbList.cellCbList))->first)) != 0L) ? (tmpNode)->node : 0L);
   while(0L != tmpNode)
   {
      if (0L == tmpNode->node)
      {
         if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",3057, "NULL logChCb", RLOG_FILE_ID, RLOG_MODULE_NAME); };
         return(1);
      }
      cellCb = (NhCellCb *)(tmpNode->node);

      cbRetVal = nhDBMDeleteCellCb((NhCellCb **)&cellCb);
      if (cbRetVal != 0)
      {
         if( L_ERROR < g_logLevel || g_modMask & RLOG_MODULE_ID){ logLev0(_LOGID, L_ERROR, "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c",3065, "Deleting CELL Control Block Failed ", RLOG_FILE_ID, RLOG_MODULE_NAME); };
      }
      ((((tmpNode) = ((&(nhCb.eNodeBCb.nhCellCbList.cellCbList))->crnt = ((&(nhCb.eNodeBCb.nhCellCbList.cellCbList))->crnt ? (&(nhCb.eNodeBCb.nhCellCbList.cellCbList))->crnt->next : (&(nhCb.eNodeBCb.nhCellCbList.cellCbList))->first)))!= 0L) ? (tmpNode)->node : 0L);
   }

   return(0);

}
# 3089 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
static S16 nhFreeSapLst
(
NhGenCfg *gen,
CmStatus *status
)





{

   ;



   if (nhCb.uSapCb != 0L)
   {
      { if ((nhCb.uSapCb) == 0L) { SLogError(nhCb.init.ent, nhCb.init.inst, nhCb.init.procId,
                              "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 3107 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      ,
                              3108
# 3107 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      , 0x2, 0, (ErrVal) 0, "Can't free the memory: GOT NULL PTR\n"); } else { (Void) SPutSBuf((nhCb.init.region), (nhCb.init.pool), (Data *)(nhCb.uSapCb), (Size)(sizeof(NhUSapCb))); (nhCb.uSapCb) = 0L; } }
                               ;
      nhCb.uSapCb = 0L;
   }
   if (nhCb.kwuSapCbLst != 0L)
   {
      { if ((nhCb.kwuSapCbLst) == 0L) { SLogError(nhCb.init.ent, nhCb.init.inst, nhCb.init.procId,
                                               "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 3113 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      ,
                                               3114
# 3113 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      , 0x2, 0, (ErrVal) 0, "Can't free the memory: GOT NULL PTR\n"); } else { (Void) SPutSBuf((nhCb.init.region), (nhCb.init.pool), (Data *)(nhCb.kwuSapCbLst), (Size)(sizeof(NhLSapCb *) * gen->nmbKwuSaps)); (nhCb.kwuSapCbLst) = 0L; } }
                                                ;
   }
   if (nhCb.ckwSapCbLst != 0L)
   {
      { if ((nhCb.ckwSapCbLst) == 0L) { SLogError(nhCb.init.ent, nhCb.init.inst, nhCb.init.procId,
                                               "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 3118 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      ,
                                               3119
# 3118 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      , 0x2, 0, (ErrVal) 0, "Can't free the memory: GOT NULL PTR\n"); } else { (Void) SPutSBuf((nhCb.init.region), (nhCb.init.pool), (Data *)(nhCb.ckwSapCbLst), (Size)(sizeof(NhLSapCb *) * gen->nmbCkwSaps)); (nhCb.ckwSapCbLst) = 0L; } }
                                                ;
   }
   if (nhCb.crgSapCbLst != 0L)
   {
      { if ((nhCb.crgSapCbLst) == 0L) { SLogError(nhCb.init.ent, nhCb.init.inst, nhCb.init.procId,
                                               "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 3123 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      ,
                                               3124
# 3123 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      , 0x2, 0, (ErrVal) 0, "Can't free the memory: GOT NULL PTR\n"); } else { (Void) SPutSBuf((nhCb.init.region), (nhCb.init.pool), (Data *)(nhCb.crgSapCbLst), (Size)(sizeof(NhLSapCb *) * gen->nmbCrgSaps)); (nhCb.crgSapCbLst) = 0L; } }
                                                ;
   }
   if (nhCb.pjuSapCbLst != 0L)
   {
      { if ((nhCb.pjuSapCbLst) == 0L) { SLogError(nhCb.init.ent, nhCb.init.inst, nhCb.init.procId,
                                               "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 3128 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      ,
                                               3129
# 3128 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      , 0x2, 0, (ErrVal) 0, "Can't free the memory: GOT NULL PTR\n"); } else { (Void) SPutSBuf((nhCb.init.region), (nhCb.init.pool), (Data *)(nhCb.pjuSapCbLst), (Size)(sizeof(NhLSapCb *) * gen->nmbPjuSaps)); (nhCb.pjuSapCbLst) = 0L; } }
                                                ;
   }
   if (nhCb.cpjSapCbLst != 0L)
   {
      { if ((nhCb.cpjSapCbLst) == 0L) { SLogError(nhCb.init.ent, nhCb.init.inst, nhCb.init.procId,
                                              "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
# 3133 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      ,
                                              3134
# 3133 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
      , 0x2, 0, (ErrVal) 0, "Can't free the memory: GOT NULL PTR\n"); } else { (Void) SPutSBuf((nhCb.init.region), (nhCb.init.pool), (Data *)(nhCb.cpjSapCbLst), (Size)((sizeof(NhLSapCb *) * gen->nmbCpjSaps))); (nhCb.cpjSapCbLst) = 0L; } }
                                               ;
   }
# 3145 "/home/mrehwald/Desktop/Radisys/lte_enb/src/lterrc/nh_lmm.c"
   if ((status->reason != 7) &&
       (status->reason != 13))
   {
      status->status = 1;
      status->reason = 4;
   }

   return(0);
}
