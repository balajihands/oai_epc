#
#/********************************************************************20**
#
#     Name:     eGTP
#
#     Type:    XML Test File
#
#     Desc:    Control Primitive based Test Cases
#
#     File:    xx_tc3.xml
#
#     Sid:
#
#     Prg:     an
#
#*********************************************************************21*/

# DO NOT DELETE THIS LINE -- TC number generation script depends on it.
# xyzabcstart=2:ms:xx_tc3.xml

#
#       Test:    3.1
#
#       Desc:   Check for the Negative Config Cfm for General configuration.
#
#       Notes:  None
#
#       Module: eg.leg.conf.gen
#
#       File:   xx_tc3.xml
#
<tapa.testcase id="3.1">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.leg.conf.gen"/>

      <tapa.desc>
       "Check for the Negative Config Cfm for General Configuration."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
         <tapa.flag id="EGTP_C"/>
      </tapa.ifdef>

      <tapa.ifndef/>

      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg/>

   # Test Steps subsection
   <tapa.test>

      # send USAP configuration request without genCfg
      <tapa.send>
         <tapa.leg.cfg.usap/>
      </tapa.send>

      # Expect Config Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_GENCFG_NOT_DONE"/>
      </tapa.expect>

      # send general configuration with invalid node type.
      <tapa.send>
         <tapa.leg.cfg.gen nodeType="LEG_GTP_ENT_UNKNWN"/>
      </tapa.send>

      # Expect Config Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INV_NODE_TYPE"/>
      </tapa.expect>

      # send general configuration with invalid number of usaps.
      <tapa.send>
         <tapa.leg.cfg.gen nmbUSaps="200"/>
      </tapa.send>

      # Expect Config Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INV_NMB_USAPS"/>
      </tapa.expect>

      # send general configuration with invalid number of interfaces.
      <tapa.send>
         <tapa.leg.cfg.gen nmbIntfs="10"/>
      </tapa.send>

      # Expect Config Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_NMB_INTFS"/>
      </tapa.expect>

      # send general configuration with invalid number of servers.
      <tapa.send>
         <tapa.leg.cfg.gen nmbSrvs="0"/>
      </tapa.send>

      # Expect Config Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INV_NMB_SRVS"/>
      </tapa.expect>

      # send general configuration with invalid number of tunnels.
      <tapa.send>
         <tapa.leg.cfg.gen nmbMaxTnls="2000"/>
      </tapa.send>

      # Expect Config Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INV_NMB_TNLS"/>
      </tapa.expect>

      # send general configuration with invalid tunnel array size.
      <tapa.send>
         <tapa.leg.cfg.gen maxTunlArrSz="2000"/>
      </tapa.send>

      # Expect Config Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INV_TNL_ARRSIZ"/>
      </tapa.expect>

      # send general configuration with invalid timer resolution.
      <tapa.send>
         <tapa.leg.cfg.gen timerRes="0"/>
      </tapa.send>

      # Expect Config Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_CAUSE_INV_PAR_VAL"/>
      </tapa.expect>

      # send general configuration with invalid upper threshold for resource.
      <tapa.send>
         <tapa.leg.cfg.gen resThreshUpper="10"/>
      </tapa.send>

      # Expect Config Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_CAUSE_INV_PAR_VAL"/>
      </tapa.expect>

      # send general configuration with invalid lower threshold for resource.
      <tapa.send>
         <tapa.leg.cfg.gen resThreshLower="6"/>
      </tapa.send>

      # Expect Config Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_CAUSE_INV_PAR_VAL"/>
      </tapa.expect>

      # send general configuration
      <tapa.send>
         <tapa.leg.cfg.gen/>
      </tapa.send>

      # Expect Config Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection

   <tapa.shutdown>
   # Send Shutdown Control Request to eGTP layer

        <tapa.send>
           <tapa.leg.cntrl.shutdown/>
   </tapa.send>

          # Expect Control Confirm
         <tapa.expect>
            <tapa.leg.cntrlcfm/>
         </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>


#
#       Test:    3.2
#
#       Desc:   Check for the negative Config Cfm when invalid parameters
#               for upper sap.
#
#       Notes:  None
#
#       Module: eg.leg.conf.usap
#
#       File:   xx_tc3.xml
#
<tapa.testcase id="3.2">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.leg.conf.usap"/>

      <tapa.desc>
       "Check for the negative config cfm when upper sap is configured
        with invalid parameters."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
         <tapa.flag id="EGTP_C"/>
      </tapa.ifdef>

      <tapa.ifndef/>

      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg/>

   # Test Steps subsection
   <tapa.test>

      # Send General Configuration Request
      <tapa.send>
         <tapa.leg.cfg.gen/>
      </tapa.send>
                                                                                                 
      # Expect Config Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send USAP Configuration Request with invalid sapId
      <tapa.send>
         <tapa.leg.cfg.usap sapId="6"/>
      </tapa.send>
                                                                                                 
      # Expect Config Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_SAP"/>
      </tapa.expect>

      # Send USAP Configuration Request with invalid interface type for non echo
      <tapa.send>
         <tapa.leg.cfg.usap intfType="EGT_GTP_INT_UNKNWN"/>
      </tapa.send>
                                                                                                 
      # Expect Config Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_INTFTYPE"/>
      </tapa.expect>

      # Send USAP Configuration Request with interface type already configured.
      <tapa.send>
         <tapa.leg.cfg.usap/>
      </tapa.send>
                                                                                                 
      # Expect Config Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send USAP Configuration Request with interface type already configured.
      <tapa.send>
         <tapa.leg.cfg.usap sapId="2"/>
      </tapa.send>
                                                                                                 
      # Expect Config Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_INTFTYPE"/>
      </tapa.expect>

      # Send USAP Configuration Request for echo sap.
      <tapa.send>
         <tapa.leg.cfg.usap sapId="2" echo="TRUE"/>
      </tapa.send>
                                                                                                 
      # Expect Config Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      <!--
      # Send USAP Configuration Request for echo sap again.
      <tapa.send>
         <tapa.leg.cfg.usap sapId="3" echo="TRUE"/>
      </tapa.send>
                                                                                                 
      # Expect Config Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_SAP"/>
      </tapa.expect>
      -->

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection

   <tapa.shutdown>
   # Send Shutdown Control Request to eGTP layer
   <tapa.send>
      <tapa.leg.cntrl.shutdown/>
   </tapa.send>

    # Expect Control Confirm
    <tapa.expect>
       <tapa.leg.cntrlcfm/>
    </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>



#
#       Test:    3.3
#
#       Desc:   Check for the Negative Config Cfm when Lower SAP is configured
#               with invalid parameters.
#
#       Notes:  None
#
#       Module: eg.leg.conf.lsap
#
#       File:   xx_tc3.xml
#
<tapa.testcase id="3.3">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.leg.conf.lsap"/>

      <tapa.desc>
        "Check for the Negative Config Cfm when Lower SAP is configured with
         invalid parameters."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef/>

      <tapa.ifndef/>

      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg/>

   # Test Steps subsection
   <tapa.test>

      # Send General Configuration Request
      <tapa.send>
         <tapa.leg.cfg.gen/>
      </tapa.send>
                                                                                                 
      # Expect Control Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>
                                                                                                 
      # Send TSAP Configuration Request invalid tsap id
      <tapa.send>
         <tapa.leg.cfg.lsap suId="8"/>
      </tapa.send>
                                                                                                 
      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_SAP"/>
      </tapa.expect>
                                                                                                 
      # Send TSAP Configuration Request invalid transport type
      <tapa.send>
         <tapa.leg.cfg.lsap tptType="300"/>
      </tapa.send>
                                                                                                 
      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_TPTTYPE"/>
      </tapa.expect>
                                                                                                 
      # Send TSAP Configuration Request invalid bind timer value.
      <tapa.send>
         <tapa.leg.cfg.lsap bndTmCfg.val="0"/>
      </tapa.send>
                                                                                                 
      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_TMRVAL"/>
      </tapa.expect>
                                                                                                 
      # Send TSAP Configuration Request invalid no. of bind retries.
      <tapa.send>
         <tapa.leg.cfg.lsap maxBndRetry="5"/>
      </tapa.send>
                                                                                                 
      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_NUMRETRY"/>
      </tapa.expect>
                                                                                                 
   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection

   <tapa.shutdown>
   # Send Shutdown Control Request to eGTP layer
   <tapa.send>
      <tapa.leg.cntrl.shutdown/>
   </tapa.send>

   # Expect Control Confirm
   <tapa.expect>
      <tapa.leg.cntrlcfm/>
   </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#       Test:    3.4
#
#       Desc:   Check for the Negative Config Cfm for TPT Server configuration
#               with invalid parameters.
#
#       Notes:  None
#
#       Module: eg.leg.conf.tserver
#
#       File:   xx_tc3.xml
#
<tapa.testcase id="3.4">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.leg.conf.tserver"/>

      <tapa.desc>
        "Check for the Negative Config Cfm for TPT Server configuration with
         invalid parameters."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
         <tapa.flag id="EGTP_C"/>
      </tapa.ifdef>

      <tapa.ifndef>
	       <tapa.flag id="EGTP_C_PTH_MGT"/>
      </tapa.ifndef>

      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg/>

   # Test Steps subsection
   <tapa.test>

      # Send General Configuration Request
      <tapa.send>
         <tapa.leg.cfg.gen/>
      </tapa.send>

      # Expect Control Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send TServer Configuration Request without TSAP Cfg.
      <tapa.send>
         <tapa.leg.cfg.tserver isDfltSrv="TRUE" port="2123" uSapId="2"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_TSAPCFG_NOT_DONE"/>
      </tapa.expect>

      # Send TSAP Configuration Request
      <tapa.send>
         <tapa.leg.cfg.lsap/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send TServer Configuration Request without USap Cfg.
      <tapa.send>
         <tapa.leg.cfg.tserver  isDfltSrv="TRUE" port="2123" uSapId="2"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_SAP"/>
      </tapa.expect>

      # Send USAP Configuration Request
      <tapa.send>
         <tapa.leg.cfg.usap/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send Default TServer Configuration Request with invalid default port
      <tapa.send>
         <tapa.leg.cfg.tserver isDfltSrv="TRUE" port="212" uSapId="2"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_PORT"/>
      </tapa.expect>


      # Send Default TServer Configuration Request without ECHO Sap Cfg.
      <tapa.send>
         <tapa.leg.cfg.tserver isDfltSrv="TRUE" port="2123" uSapId="0"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_ECOSAP_NOTCFGD"/>
      </tapa.expect>

      # Send ECHO USAP Configuration Request
      <tapa.send>
         <tapa.leg.cfg.usap echo="TRUE" sapId="1"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send Default TServer Configuration Request with invalid ECHO Sap.
      <tapa.send>
         <tapa.leg.cfg.tserver isDfltSrv="TRUE" port="2123" uSapId="2"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_SAP"/>
      </tapa.expect>

     # Send Default TServer Configuration Request with valid ECHO Sap.
      <tapa.send>
         <tapa.leg.cfg.tserver isDfltSrv="TRUE" port="2123" uSapId="1"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

     # Send Default TServer Configuration Request Again
      <tapa.send>
         <tapa.leg.cfg.tserver isDfltSrv="TRUE" port="2123" uSapId="2"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_DEFSRV_CFGD"/>
      </tapa.expect>

     # Send TServer Configuration with congfigured Server Id.
      <tapa.send>
         <tapa.leg.cfg.tserver port="212" address="172.25.0.9" uSapId="0"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_TPTSRV_CFGD"/>
      </tapa.expect>

     # Send TServer Configuration with address, port already configured.
      <tapa.send>
         <tapa.leg.cfg.tserver tptSrvId="2" port="212" address="172.25.0.9" 
                               uSapId="0"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

     # Send TServer Configuration with address, port already configured.
      <tapa.send>
         <tapa.leg.cfg.tserver tptSrvId="3" port="212" address="172.25.0.9" 
                               uSapId="0"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm status="LCM_PRIM_NOK" reason="LCM_REASON_TPTSRV_CFGD"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection

   <tapa.shutdown>
   # Send Shutdown Control Request to eGTP layer
   <tapa.send>
      <tapa.leg.cntrl.shutdown/>
   </tapa.send>

   # Expect Control Confirm
   <tapa.expect>
      <tapa.leg.cntrlcfm/>
   </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>



#
#       Test:    3.5
#
#       Desc:   Check for the Negative Control Cfm for Gen Control requests.
#
#       Notes:  None
#
#       Module: eg.leg.cntrl.gen
#
#       File:   xx_tc3.xml
#
<tapa.testcase id="3.5">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.leg.cntrl.gen"/>

      <tapa.desc>
      "Check for the Negative Control Cfm with invalid actions."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef/>

      <tapa.ifndef/>

      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg/>

   # Test Steps subsection
   <tapa.test>

      # Send enable Debug Control Request without Gen Cfg
      <tapa.send>
         <tapa.leg.cntrl.debug action="AENA" dbgMask="LLX_DBGMASK_MSG"/>
      </tapa.send>

      # Expect Control Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm status="LCM_PRIM_NOK" reason="LCM_REASON_GENCFG_NOT_DONE"/>
      </tapa.expect>

      # Send General Configuration Request
      <tapa.send>
         <tapa.leg.cfg.gen/>
      </tapa.send>

      # Expect Control Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send enable Debug Control Request with invalid action.
      <tapa.send>
         <tapa.leg.cntrl.debug action="LEG_INV_GEN_CNTRL_ACTION" dbgMask="LLX_DBGMASK_MSG"/>
      </tapa.send>

      # Expect Control Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_ACTION"/>
      </tapa.expect>

      # Send enable Debug Control Request with invalid subaction for case AENA.
      <tapa.send>
         <tapa.leg.cntrl.debug action="AENA" subaction="LEG_INV_GEN_CNTRL_SUBACTION" 
                               dbgMask="LLX_DBGMASK_MSG"/>
      </tapa.send>

      # Expect Control Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_SUBACTION"/>
      </tapa.expect>

      # Send TSAP trace enable Control Request without TSAP configuration.
      <tapa.send>
         <tapa.leg.cntrl.lsapTrc action="AENA" subaction="SATRC"/>
      </tapa.send>

      # Expect Control Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm status="LCM_PRIM_NOK" reason="LCM_REASON_TSAPCFG_NOT_DONE"/>
      </tapa.expect>

      # Send enable Debug Control Request with invalid subaction for case ADISIMM.
      <tapa.send>
         <tapa.leg.cntrl.debug action="ADISIMM" subaction="LEG_INV_GEN_CNTRL_SUBACTION" 
                               dbgMask="LLX_DBGMASK_MSG"/>
      </tapa.send>

      # Expect Control Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_SUBACTION"/>
      </tapa.expect>

      # Send TSAP trace enable Control Request without TSAP configuration.
      <tapa.send>
         <tapa.leg.cntrl.lsapTrc action="ADISIMM" subaction="SATRC"/>
      </tapa.send>

      # Expect Control Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm status="LCM_PRIM_NOK" reason="LCM_REASON_TSAPCFG_NOT_DONE"/>
      </tapa.expect>
      <!--
      -->

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection

   <tapa.shutdown>
   # Send Shutdown Control Request to eGTP layer
   <tapa.send>
      <tapa.leg.cntrl.shutdown/>
   </tapa.send>

   # Expect Control Confirm
   <tapa.expect>
      <tapa.leg.cntrlcfm/>
   </tapa.expect>

   </tapa.shutdown>
</tapa.testcase>

#
#       Test:    3.6
#
#       Desc:   Check for the Negative Control Cfm for USAP control requests.
#
#       Notes:  None
#
#       Module: eg.leg.cntrl.usap
#
#       File:   xx_tc3.xml
#
<tapa.testcase id="3.6">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.leg.cntrl.usap"/>

      <tapa.desc>
           "Check for the Negative Control Cfm for USAP control requests."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef/>

      <tapa.ifndef/>

      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg/>

   # Test Steps subsection
   <tapa.test>

      # Send General Configuration Request
      <tapa.send>
         <tapa.leg.cfg.gen/>
      </tapa.send>

      # Expect Control Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send control request with invalid sapId
      <tapa.send>
         <tapa.leg.cntrl.usap sapId="100"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_SAP"/>
      </tapa.expect>

      # Send control request with sapId not configured
      <tapa.send>
         <tapa.leg.cntrl.usap/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_SAP"/>
      </tapa.expect>

      # Send USAP Configuration Request
      <tapa.send>
         <tapa.leg.cfg.usap/>
      </tapa.send>

      # Expect Control Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send control request with invalid action.
      <tapa.send>
         <tapa.leg.cntrl.usap action="LEG_INV_USAP_CNTRL_ACTION"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_ACTION"/>
      </tapa.expect>

      # Send control request with valid action.
      <tapa.send>
         <tapa.leg.cntrl.usap action="AUBND_DIS"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection

   <tapa.shutdown>
   # Send Shutdown Control Request to eGTP layer
   <tapa.send>
      <tapa.leg.cntrl.shutdown/>
   </tapa.send>

   # Expect Control Confirm
   <tapa.expect>
      <tapa.leg.cntrlcfm/>
   </tapa.expect>

   </tapa.shutdown>
</tapa.testcase>


#
#       Test:    3.7
#
#       Desc:   Check for the Negative Control Cfm for TSAP control requests.
#
#       Notes:  None
#
#       Module: eg.leg.cntrl.lsap
#
#       File:   xx_tc3.xml
#
<tapa.testcase id="3.7">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.leg.cntrl.lsap"/>

      <tapa.desc>
           "Check for the Negative Control Cfm for TSAP control requests."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef/>

      <tapa.ifndef/>

      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg/>

   # Test Steps subsection
   <tapa.test>

      # Send General Configuration Request
      <tapa.send>
         <tapa.leg.cfg.gen/>
      </tapa.send>

      # Expect Control Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send control request with TSAP not configured
      <tapa.send>
         <tapa.leg.cntrl.lsap/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm status="LCM_PRIM_NOK" reason="LCM_REASON_TSAPCFG_NOT_DONE"/>
      </tapa.expect>

      # Send TSAP Configuration Request
      <tapa.send>
         <tapa.leg.cfg.lsap/>
      </tapa.send>

      # Expect Control Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send control request with invalid action.
      <tapa.send>
         <tapa.leg.cntrl.lsap action="LEG_INV_LSAP_CNTRL_ACTION"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_ACTION"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection

   <tapa.shutdown>
   # Send Shutdown Control Request to eGTP layer
   <tapa.send>
      <tapa.leg.cntrl.shutdown/>
   </tapa.send>

   # Expect Control Confirm
   <tapa.expect>
      <tapa.leg.cntrlcfm/>
   </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>



#
#       Test:    3.8
#
#       Desc:   Check for the Negative Control Cfm for TPT Server Control requests.
#
#       Notes:  None
#
#       Module: eg.leg.cntrl.server
#
#       File:   xx_tc3.xml
#
<tapa.testcase id="3.8">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.leg.cntrl.server"/>

      <tapa.desc>
          "Check for the Negative Control Cfm for TPT Server Control requests."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef/>

      <tapa.ifndef/>

      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg/>

   # Test Steps subsection
   <tapa.test>

      # Send General Configuration Request
      <tapa.send>
         <tapa.leg.cfg.gen/>
      </tapa.send>

      # Expect Control Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send TPT Server control request with TSAP not configured
      <tapa.send>
         <tapa.leg.cntrl.tptsrv/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm status="LCM_PRIM_NOK" reason="LCM_REASON_TSAPCFG_NOT_DONE"/>
      </tapa.expect>

      # Send USAP Configuration Request
      <tapa.send>
         <tapa.leg.cfg.usap/>
      </tapa.send>

      # Expect Control Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send TSAP Configuration Request
      <tapa.send>
         <tapa.leg.cfg.lsap/>
      </tapa.send>

      # Expect Control Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

     # Send TServer Configuration with address, port 
      <tapa.send>
         <tapa.leg.cfg.tserver tptSrvId="2" port="2120" address="172.25.0.9"
                               uSapId="0"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

     # Send TServer control with invalid Server Id
      <tapa.send>
         <tapa.leg.cntrl.tptsrv action="ADEL" tptSrvId="1" type="1"/>
      </tapa.send>

     # Expect Control Confirm
     <tapa.expect>
        <tapa.leg.cntrlcfm status="LCM_PRIM_NOK" reason="LCM_REASON_SRVINIT_FAIL"/>
     </tapa.expect>

     # Send TServer control with invalid Address
      <tapa.send>
         <tapa.leg.cntrl.tptsrv action="ADEL" type="2" port="212"
                                address="172.25.0.9"/>
      </tapa.send>

     # Expect Control Confirm
     <tapa.expect>
        <tapa.leg.cntrlcfm status="LCM_PRIM_NOK" reason="LCM_REASON_SRVINIT_FAIL"/>
     </tapa.expect>

     # Send TServer control with invalid Action
      <tapa.send>
         <tapa.leg.cntrl.tptsrv action="LEG_INV_TSRV_CNTRL_ACTION" tptSrvId="2" 
                                type="1"/>
      </tapa.send>

     # Expect Control Confirm
     <tapa.expect>
        <tapa.leg.cntrlcfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_ACTION"/>
     </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection

   <tapa.shutdown>
   # Send Shutdown Control Request to eGTP layer
   <tapa.send>
      <tapa.leg.cntrl.shutdown/>
   </tapa.send>

   # Expect Control Confirm
   <tapa.expect>
      <tapa.leg.cntrlcfm/>
   </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>




#
#       Test:    3.9
#
#       Desc:   Check for the Negative Status Cfm for invalid requests.
#
#       Notes:  None
#
#       Module: eg.leg.sta.req
#
#       File:   xx_tc3.xml
#
<tapa.testcase id="3.9">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.leg.sta.req"/>

      <tapa.desc>
          "Check for the Negative Status Cfm for invalid requests."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef/>

      <tapa.ifndef/>

      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg/>

   # Test Steps subsection
   <tapa.test>

      # Send general status request without general configuration.
      <tapa.send>
         <tapa.leg.sta.req staType="STEGGEN"/>
      </tapa.send>

      # Expect Status Confirm
      <tapa.expect>
         <tapa.leg.stacfm status="LCM_PRIM_NOK" reason="LCM_REASON_GENCFG_NOT_DONE"/>
      </tapa.expect>

      # Send gen Configuration Request
      <tapa.send>
         <tapa.leg.cfg.gen/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send USAP status request with invalid sapId
      <tapa.send>
         <tapa.leg.sta.req staType="STEGUSAP" sapId="200"/>
      </tapa.send>

      # Expect Status Confirm
      <tapa.expect>
         <tapa.leg.stacfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_SAP"/>
      </tapa.expect>

      # Send USAP status request with sapId not configured
      <tapa.send>
         <tapa.leg.sta.req staType="STEGUSAP" sapId="1"/>
      </tapa.send>

      # Expect Status Confirm
      <tapa.expect>
         <tapa.leg.stacfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_SAP"/>
      </tapa.expect>

      # Send TSAP status request with TSAP not configured
      <tapa.send>
         <tapa.leg.sta.req staType="STEGTSAP"/>
      </tapa.send>

      # Expect Status Confirm
      <tapa.expect>
         <tapa.leg.stacfm status="LCM_PRIM_NOK" reason="LCM_REASON_TSAPCFG_NOT_DONE"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection

   <tapa.shutdown>
   # Send Shutdown Control Request to eGTP layer
   <tapa.send>
      <tapa.leg.cntrl.shutdown/>
   </tapa.send>

   # Expect Control Confirm
   <tapa.expect>
      <tapa.leg.cntrlcfm/>
   </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>



#
#       Test:    3.10
#
#       Desc:   Check for the Negative Statistics Cfm for Statistics request.
#
#       Notes:  None
#
#       Module: eg.leg.sts.req
#
#       File:   xx_tc3.xml
#
<tapa.testcase id="3.10">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.leg.sts.req"/>

      <tapa.desc>
       "Check for the Negative Statistics Cfm for Statistics request."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef/>

      <tapa.ifndef/>

      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg/>

   # Test Steps subsection
   <tapa.test>

      # Send general statistics request without general configuration.
      <tapa.send>
         <tapa.leg.sts.req stsType="STEGGEN"/>
      </tapa.send>

      # Expect statistics Confirm
      <tapa.expect>
         <tapa.leg.stscfm status="LCM_PRIM_NOK" reason="LCM_REASON_GENCFG_NOT_DONE"/>
      </tapa.expect>

      # Send gen Configuration Request
      <tapa.send>
         <tapa.leg.cfg.gen/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send USAP statistics request with invalid sapId
      <tapa.send>
         <tapa.leg.sts.req stsType="STEGUSAP" sapId="200"/>
      </tapa.send>

      # Expect statistics Confirm
      <tapa.expect>
         <tapa.leg.stscfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_SAP"/>
      </tapa.expect>

      # Send USAP statistics request with sapId not configured
      <tapa.send>
         <tapa.leg.sts.req stsType="STEGUSAP" sapId="1"/>
      </tapa.send>

      # Expect statistics Confirm
      <tapa.expect>
         <tapa.leg.stscfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_SAP"/>
      </tapa.expect>

      # Send TSAP statistics request with invalid sapId
      <tapa.send>
         <tapa.leg.sts.req stsType="STEGTSAP" sapId="200"/>
      </tapa.send>

      # Expect statistics Confirm
      <tapa.expect>
         <tapa.leg.stscfm status="LCM_PRIM_NOK" reason="LCM_REASON_INVALID_SAP"/>
      </tapa.expect>

      # Send TSAP statistics request with sapId not configured
      <tapa.send>
         <tapa.leg.sts.req stsType="STEGTSAP" sapId="0"/>
      </tapa.send>

      # Expect statistics Confirm
      <tapa.expect>
         <tapa.leg.stscfm status="LCM_PRIM_NOK" reason="LCM_REASON_TSAPCFG_NOT_DONE"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection

   <tapa.shutdown>
   # Send Shutdown Control Request to eGTP layer
   <tapa.send>
      <tapa.leg.cntrl.shutdown/>
   </tapa.send>

   # Expect Control Confirm
   <tapa.expect>
      <tapa.leg.cntrlcfm/>
   </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

# DO NOT DELETE THIS LINE -- TC number generation script depends on it.
# xyzabcend

#/********************************************************************30**
#
#         End of file:     
#
#*********************************************************************31*/
#
#
#/********************************************************************40**
#
#        Notes:
#
#*********************************************************************41*/
#
#/********************************************************************50**
#
#*********************************************************************51*/
#
#
#/********************************************************************60**
#
#        Revision history:
#
#*********************************************************************61*/
#
#/********************************************************************90**
#
#     ver       pat    init                  description
#------------ -------- ---- ----------------------------------------------
#    $SID$      ---     ad           1. Created for EGTP 1.1 Rel
#*********************************************************************91*/

