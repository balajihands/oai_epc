#
#/********************************************************************20**
#
#     Name:     eGTP
#
#     Type:    XML Test File
#
#     Desc:    Control Primitive based Test Cases
#
#     File:    xx_tc3.xml
#
#     Sid:
#
#     Prg:     an
#
#*********************************************************************21*/

# DO NOT DELETE THIS LINE -- TC number generation script depends on it.
# xyzabcstart=2:ms:xx_tc3.xml

#
#       Test:    4.1
#
#       Desc:   Send Bind Request to the eGTP layer with invalid Sap and
#               expect alarm towards layer manager.
#
#       Notes:  None
#
#       Module: eg.egt.bnd
#
#       File:   xx_tc3.xml
#
<tapa.testcase id="4.1">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.egt.bnd"/>

      <tapa.desc>
       "Send Bind Request to the eGTP layer with invalid Sap and expect alarm
        towards layer manager."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef/>

      <tapa.ifndef/>

      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg/>

   # Test Steps subsection
   <tapa.test>

      # Send gen Configuration Request
      <tapa.send>
         <tapa.leg.cfg.gen/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send enable unsoliited status control Request
      <tapa.send>
         <tapa.leg.cntrl.usta/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm/>
      </tapa.expect>

   # Enable Alarms
      <tapa.directive alarm="TRUE"/>

      # Send USAP Bind Request from User
      <tapa.send>
         <tapa.egt.bndreq/>
      </tapa.send>

      #Expect Status Indication of invalid Sap
      <tapa.expect>
      <tapa.leg.staInd category="LCM_CATEGORY_INTERFACE" event = "LCM_EVENT_UI_INV_EVT"
                          cause = "LCM_CAUSE_INV_SPID" type = "LEG_PAR_USAP"/>
      </tapa.expect>

      # Send usap Configuration Request
      <tapa.send>
         <tapa.leg.cfg.usap/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send USAP Bind Request from User
      <tapa.send>
         <tapa.egt.bndreq/>
      </tapa.send>

      #Expect Status Indication of complete bind
      <tapa.expect>
      <tapa.leg.staInd category="LCM_CATEGORY_INTERFACE" event = "LCM_EVENT_BND_OK"
                          cause = "LEG_CAUSE_SAP_BND" type = "LEG_PAR_USAP"/>
      </tapa.expect>

   # suppress Alarms
      <tapa.directive alarm="FALSE"/>

      # Expect Bind Confirm
      <tapa.expect>
         <tapa.egt.bndcfm/>
      </tapa.expect>

      # Send USAP Bind Request from User
      <tapa.send>
         <tapa.egt.bndreq/>
      </tapa.send>

      # Expect Bind Confirm
      <tapa.expect>
         <tapa.egt.bndcfm/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection

   <tapa.shutdown>
   # Send Shutdown Control Request to eGTP layer

        <tapa.send>
           <tapa.leg.cntrl.shutdown/>
        </tapa.send>

          # Expect Control Confirm
         <tapa.expect>
            <tapa.leg.cntrlcfm/>
         </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#       Test:    4.2
#
#       Desc:   Send UnBind Request to the eGTP layer with invalid Sap and
#               expect alarm towards layer manager.
#
#       Notes:  None
#
#       Module: eg.egt.ubnd
#
#       File:   xx_tc3.xml
#
<tapa.testcase id="4.2">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.egt.ubnd"/>

      <tapa.desc>
       "Send Bind Request to the eGTP layer with invalid Sap and expect alarm
        towards layer manager."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef/>

      <tapa.ifndef/>

      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg/>

   # Test Steps subsection
   <tapa.test>

      # Send gen Configuration Request
      <tapa.send>
         <tapa.leg.cfg.gen/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send enable unsoliited status control Request
      <tapa.send>
         <tapa.leg.cntrl.usta/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm/>
      </tapa.expect>

   # Enable Alarms
      <tapa.directive alarm="TRUE"/>

      # Send USAP UnBind Request from User
      <tapa.send>
         <tapa.egt.ubndreq/>
      </tapa.send>

      #Expect Status Indication of invalid Sap
      <tapa.expect>
      <tapa.leg.staInd category="LCM_CATEGORY_INTERFACE" event = "LCM_EVENT_UI_INV_EVT"
                          cause = "LCM_CAUSE_INV_SPID" type = "LEG_PAR_USAP"/>
      </tapa.expect>

      # Send usap Configuration Request
      <tapa.send>
         <tapa.leg.cfg.usap/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send USAP UnBind Request from User
      <tapa.send>
         <tapa.egt.ubndreq/>
      </tapa.send>

      # Send USAP Bind Request from User
      <tapa.send>
         <tapa.egt.bndreq/>
      </tapa.send>

      #Expect Status Indication of complete bind
      <tapa.expect>
      <tapa.leg.staInd category="LCM_CATEGORY_INTERFACE" event = "LCM_EVENT_BND_OK"
                          cause = "LEG_CAUSE_SAP_BND" type = "LEG_PAR_USAP"/>
      </tapa.expect>

      # Expect Bind Confirm
      <tapa.expect>
         <tapa.egt.bndcfm/>
      </tapa.expect>

      # Send USAP UnBind Request from User
      <tapa.send>
         <tapa.egt.ubndreq/>
      </tapa.send>

      #Expect Status Indication of complete bind
      <tapa.expect>
      <tapa.leg.staInd category="LCM_CATEGORY_INTERFACE" event = "LCM_EVENT_UBND_OK"
                          cause = "LEG_CAUSE_SAP_UBND" type = "LEG_PAR_USAP"/>
      </tapa.expect>

   # suppress Alarms
      <tapa.directive alarm="FALSE"/>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection

   <tapa.shutdown>
   # Send Shutdown Control Request to eGTP layer

        <tapa.send>
           <tapa.leg.cntrl.shutdown/>
        </tapa.send>

          # Expect Control Confirm
         <tapa.expect>
            <tapa.leg.cntrlcfm/>
         </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#       Test:    4.3
#
#       Desc:   Send Sig Request to the eGTP layer with invalid Sap and
#               expect alarm towards layer manager.
#
#       Notes:  None
#
#       Module: eg.egt.ubnd
#
#       File:   xx_tc3.xml
#
<tapa.testcase id="4.3">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.egt.ubnd"/>

      <tapa.desc>
       "Send Bind Request to the eGTP layer with invalid Sap and expect alarm
        towards layer manager."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
         <tapa.flag id="EGTP_C"/>
      </tapa.ifdef>

      <tapa.ifndef/>

      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg/>

   # Test Steps subsection
   <tapa.test>

      # Send gen Configuration Request
      <tapa.send>
         <tapa.leg.cfg.gen/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send enable unsoliited status control Request
      <tapa.send>
         <tapa.leg.cntrl.usta/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm/>
      </tapa.expect>

   # Enable Alarms
      <tapa.directive alarm="TRUE"/>

      # Send Sig Request with invalid sapId.
      <tapa.send>
      <tapa.egt.sigreq egtpMsgType="EGT_GTPC_MSG_CS_REQ" intfType="EGT_GTP_INT_S11"
               crtFlag="TRUE" spId="1" transId="1" addInterfaceType="10"
               lclPort="3123" rmtPort="2124" t3TmrVal="10" lcladdr="127.0.0.1"
               rmtaddr="127.0.0.1"/>
      </tapa.send>

      #Expect Status Indication of invalid Sap
      <tapa.expect>
      <tapa.leg.staInd category="LCM_CATEGORY_INTERFACE" event = "LCM_EVENT_UI_INV_EVT"
                          cause = "LCM_CAUSE_INV_SPID" type = "LEG_PAR_USAP"/>
      </tapa.expect>

      # Send Sig Response with invalid sapId.
      <tapa.send>
      <tapa.egt.sigrsp egtpMsgType="EGT_GTPC_MSG_CS_RSP" intfType="EGT_GTP_INT_S11" teid="1"
               spId="1" addInterfaceType="11" teidValue="1"/>
      </tapa.send>

      #Expect Status Indication of invalid Sap
      <tapa.expect>
      <tapa.leg.staInd category="LCM_CATEGORY_INTERFACE" event = "LCM_EVENT_UI_INV_EVT"
                          cause = "LCM_CAUSE_INV_SPID" type = "LEG_PAR_USAP"/>
      </tapa.expect>

      # Send status Request with invalid sapId.
      <tapa.send>
      <tapa.egt.stareq egtpMsgType="EGT_GTPC_MSG_CS_RSP" teid="1"
               spId="1" teidValue="1"/>
      </tapa.send>

      #Expect Status Indication of invalid Sap
      <tapa.expect>
      <tapa.leg.staInd category="LCM_CATEGORY_INTERFACE" event = "LCM_EVENT_UI_INV_EVT"
                          cause = "LCM_CAUSE_INV_SPID" type = "LEG_PAR_USAP"/>
      </tapa.expect>

      # Send status Request with invalid sapId.
      <tapa.send>
      <tapa.egt.lcldelreq egtpMsgType="EGT_GTPC_MSG_CS_RSP" teid="1" spId="1" 
                           transId="1"/>
      </tapa.send>

      #Expect Status Indication of invalid Sap
      <tapa.expect>
      <tapa.leg.staInd category="LCM_CATEGORY_INTERFACE" event = "LCM_EVENT_UI_INV_EVT"
                          cause = "LCM_CAUSE_INV_SPID" type = "LEG_PAR_USAP"/>
      </tapa.expect>

   # Enable Alarms
      <tapa.directive alarm="FALSE"/>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection

   <tapa.shutdown>
   # Send Shutdown Control Request to eGTP layer

        <tapa.send>
           <tapa.leg.cntrl.shutdown/>
        </tapa.send>

          # Expect Control Confirm
         <tapa.expect>
            <tapa.leg.cntrlcfm/>
         </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#       Test:    4.4
#
#       Desc:   Send Sig Request to the eGTP layer with invalid Sap and
#               expect alarm towards layer manager.
#
#       Notes:  None
#
#       Module: eg.egt.sigreq
#
#       File:   xx_tc3.xml
#
<tapa.testcase id="4.4">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.egt.sigreq"/>

      <tapa.desc>
       "Send Sig Request to the eGTP layer with parameters and expect alarm
        towards layer manager."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
         <tapa.flag id="EGTP_C"/>
      </tapa.ifdef>

      <tapa.ifndef/>

      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg/>

   # Test Steps subsection
   <tapa.test>

      # Send gen Configuration Request
      <tapa.send>
         <tapa.leg.cfg.gen/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send enable unsoliited status control Request
      <tapa.send>
         <tapa.leg.cntrl.usta/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm/>
      </tapa.expect>

   # Enable Alarms
      <tapa.directive alarm="TRUE"/>

      # Send USAP Configuration Request
      <tapa.send>
         <tapa.leg.cfg.usap sapId="1"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send USAP Bind Request from User
      <tapa.send>
         <tapa.egt.bndreq spId="1"/>
      </tapa.send>

      #Expect Status Indication of complete bind
      <tapa.expect>
      <tapa.leg.staInd category="LCM_CATEGORY_INTERFACE" event = "LCM_EVENT_BND_OK"
                          cause = "LEG_CAUSE_SAP_BND" type = "LEG_PAR_USAP"/>
      </tapa.expect>

      # Expect Bind Confirm
      <tapa.expect>
         <tapa.egt.bndcfm/>
      </tapa.expect>

      # Send Sig Request with invalid TmrVal.
      <tapa.send>
      <tapa.egt.sigreq egtpMsgType="EGT_GTPC_MSG_CS_REQ" intfType="EGT_GTP_INT_S11"
               crtFlag="TRUE" spId="1" transId="1" addInterfaceType="10"
               lclPort="3123" rmtPort="2124" t3Enb="TRUE" t3TmrVal="0" lcladdr="127.0.0.1"
               rmtaddr="127.0.0.1"/>
      </tapa.send>

      #Expect Status Indication of invalid TmrVal.
      <tapa.expect>
      <tapa.leg.staInd category="LCM_CATEGORY_INTERFACE" event = "LCM_EVENT_UI_INV_EVT"
                          cause = "LCM_CAUSE_INV_PAR_VAL" type = "LEG_PAR_USAP"/>
      </tapa.expect>

      # Send Sig Request with invalid TPT params.
      <tapa.send>
      <tapa.egt.sigreq egtpMsgType="EGT_GTPC_MSG_CS_REQ" intfType="EGT_GTP_INT_S11"
               crtFlag="TRUE" spId="1" transId="1" addInterfaceType="10"
               lclPort="3123" rmtPort="2124" t3Enb="TRUE" t3TmrVal="10" lcladdr="127.0.0.1"
               rmtaddr="127.0.0.1"/>
      </tapa.send>

      #Expect Status Indication of invalid TPT params
      <tapa.expect>
      <tapa.leg.staInd category="LCM_CATEGORY_INTERFACE" event = "LCM_EVENT_UI_INV_EVT"
                          cause = "LCM_CAUSE_INV_PAR_VAL" type = "LEG_PAR_USAP"/>
      </tapa.expect>

      # Send tsap Configuration Request
      <tapa.send>
         <tapa.leg.cfg.lsap/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send TServer Configuration Request
      <tapa.send>
         <tapa.leg.cfg.tserver tptSrvId="2" port="2133" address="172.25.0.98"
                               isDfltSrv="FALSE" uSapId="1" sockParam.listenQSize="8"
                               opnSrvRetryCnt="4"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send Sig Request with invalid local port.
      <tapa.send>
      <tapa.egt.sigreq egtpMsgType="EGT_GTPC_MSG_CS_REQ" intfType="EGT_GTP_INT_S11"
               crtFlag="TRUE" spId="1" transId="1" addInterfaceType="10"
               lclPort="3123" rmtPort="2124" t3Enb="TRUE" t3TmrVal="10" lcladdr="172.25.0.98"
               rmtaddr="127.0.0.1"/>
      </tapa.send>

      #Expect Status Indication of invalid local port.
      <tapa.expect>
      <tapa.leg.staInd category="LCM_CATEGORY_INTERFACE" event = "LCM_EVENT_UI_INV_EVT"
                          cause = "LCM_CAUSE_INV_PAR_VAL" type = "LEG_PAR_USAP"/>
      </tapa.expect>

      # Send Sig Request with invalid local address.
      <tapa.send>
      <tapa.egt.sigreq egtpMsgType="EGT_GTPC_MSG_CS_REQ" intfType="EGT_GTP_INT_S11"
               crtFlag="TRUE" spId="1" transId="1" addInterfaceType="10"
               lclPort="2133" rmtPort="2124" t3Enb="TRUE" t3TmrVal="10" lcladdr="127.0.0.1"
               rmtaddr="127.0.0.1"/>
      </tapa.send>

      #Expect Status Indication of invalid local address.
      <tapa.expect>
      <tapa.leg.staInd category="LCM_CATEGORY_INTERFACE" event = "LCM_EVENT_UI_INV_EVT"
                          cause = "LCM_CAUSE_INV_PAR_VAL" type = "LEG_PAR_USAP"/>
      </tapa.expect>

      # Send Sig Request with correct local address.
      <tapa.send>
      <tapa.egt.sigreq egtpMsgType="EGT_GTPC_MSG_CS_REQ" intfType="EGT_GTP_INT_S11"
               crtFlag="TRUE" spId="1" transId="1" addInterfaceType="10"
               lclPort="2133" rmtPort="2124" t3Enb="TRUE" t3TmrVal="10" lcladdr="172.25.0.98"
               rmtaddr="127.0.0.1"/>
      </tapa.send>

      #Expect Error Indication
      <tapa.expect>
         <tapa.egt.errind/>
      </tapa.expect>

   # Suppress Alarms
      <tapa.directive alarm="FALSE"/>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection

   <tapa.shutdown>
   # Send Shutdown Control Request to eGTP layer

        <tapa.send>
           <tapa.leg.cntrl.shutdown/>
        </tapa.send>

          # Expect Control Confirm
         <tapa.expect>
            <tapa.leg.cntrlcfm/>
         </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#       Test:    4.5
#
#       Desc:   Send Sig Response to the eGTP layer with invalid paramters and
#               expect alarm towards layer manager.
#
#       Notes:  None
#
#       Module: eg.egt.sigrsp
#
#       File:   xx_tc3.xml
#
<tapa.testcase id="4.5">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.egt.sigrsp"/>

      <tapa.desc>
       "Send Sig Response to the eGTP layer with invalid parameters and expect alarm
        towards layer manager."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
         <tapa.flag id="EGTP_C"/>
      </tapa.ifdef>

      <tapa.ifndef/>

      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg/>

   # Test Steps subsection
   <tapa.test>

      # Send gen Configuration Request
      <tapa.send>
         <tapa.leg.cfg.gen/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send enable unsoliited status control Request
      <tapa.send>
         <tapa.leg.cntrl.usta/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm/>
      </tapa.expect>

   # Enable Alarms
      <tapa.directive alarm="TRUE"/>

      # Send USAP Configuration Request
      <tapa.send>
         <tapa.leg.cfg.usap sapId="1"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send USAP Bind Request from User
      <tapa.send>
         <tapa.egt.bndreq spId="1"/>
      </tapa.send>

      #Expect Status Indication of complete bind
      <tapa.expect>
      <tapa.leg.staInd category="LCM_CATEGORY_INTERFACE" event = "LCM_EVENT_BND_OK"
                          cause = "LEG_CAUSE_SAP_BND" type = "LEG_PAR_USAP"/>
      </tapa.expect>

      # Expect Bind Confirm
      <tapa.expect>
         <tapa.egt.bndcfm/>
      </tapa.expect>

      <tapa.send>
         <tapa.egt.sigrsp egtpMsgType="EGT_GTPC_MSG_CS_RSP" intfType="EGT_GTP_INT_S11" teid="1"
                          spId="1" addInterfaceType="11" teidValue="1"/>
      </tapa.send>

      # Expect Error Indication
      <tapa.expect>
         <tapa.egt.errind/>
      </tapa.expect>

   # Suppress Alarms
      <tapa.directive alarm="FALSE"/>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection

   <tapa.shutdown>
   # Send Shutdown Control Request to eGTP layer

        <tapa.send>
           <tapa.leg.cntrl.shutdown/>
        </tapa.send>

          # Expect Control Confirm
         <tapa.expect>
            <tapa.leg.cntrlcfm/>
         </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#       Test:    4.6
#
#       Desc:   Send Status Request to the eGTP layer with valid paramters and
#               expect Status Confirm.
#
#       Notes:  None
#
#       Module: eg.egt.stareq
#
#       File:   xx_tc3.xml
#
<tapa.testcase id="4.6">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.egt.stareq"/>

      <tapa.desc>
       "Send Status Request to the eGTP layer with valid parameters and expect 
        status confirm at User"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
         <tapa.flag id="EGTP_C"/>
      </tapa.ifdef>

      <tapa.ifndef/>

      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg/>

   # Test Steps subsection
   <tapa.test>

      # Send gen Configuration Request
      <tapa.send>
         <tapa.leg.cfg.gen/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send enable unsoliited status control Request
      <tapa.send>
         <tapa.leg.cntrl.usta/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm/>
      </tapa.expect>

   # Enable Alarms
      <tapa.directive alarm="TRUE"/>

      # Send USAP Configuration Request
      <tapa.send>
         <tapa.leg.cfg.usap sapId="1"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send USAP Bind Request from User
      <tapa.send>
         <tapa.egt.bndreq spId="1"/>
      </tapa.send>

      #Expect Status Indication of complete bind
      <tapa.expect>
      <tapa.leg.staInd category="LCM_CATEGORY_INTERFACE" event = "LCM_EVENT_BND_OK"
                          cause = "LEG_CAUSE_SAP_BND" type = "LEG_PAR_USAP"/>
      </tapa.expect>

      # Expect Bind Confirm
      <tapa.expect>
         <tapa.egt.bndcfm/>
      </tapa.expect>

      # Send general status request with teid
      <tapa.send>
         <tapa.egt.stareq eventType="EGT_STATYPE_TUNNEL" teid="1"
                 spId="1" lclPort="4123" lcladdr="127.0.0.1"/>
      </tapa.send>

      # Expect Status Confirm
      <tapa.expect>
         <tapa.egt.stacfm suId="0" status="LCM_PRIM_NOK" reason="LCM_REASON_LYR_SPECIFIC"/>
      </tapa.expect>

      # Send general status request with path
      <tapa.send>
         <tapa.egt.stareq eventType="EGT_STATYPE_PATH" transId="1"
                 spId="1" lclPort="4123" lcladdr="127.0.0.1"/>
      </tapa.send>

      # Expect Status Confirm
      <tapa.expect>
         <tapa.egt.stacfm suId="0" status="LCM_PRIM_NOK" reason="LCM_REASON_LYR_SPECIFIC"/>
      </tapa.expect>

   # Suppress Alarms
      <tapa.directive alarm="FALSE"/>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection

   <tapa.shutdown>
   # Send Shutdown Control Request to eGTP layer

        <tapa.send>
           <tapa.leg.cntrl.shutdown/>
        </tapa.send>

          # Expect Control Confirm
         <tapa.expect>
            <tapa.leg.cntrlcfm/>
         </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#       Test:    4.7
#
#       Desc:   Send Delete Request to the eGTP layer with valid paramters 
#
#       Notes:  None
#
#       Module: eg.egt.delreq
#
#       File:   xx_tc3.xml
#
<tapa.testcase id="4.7">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.egt.delreq"/>

      <tapa.desc>
       "Send Delete Request to the eGTP layer with invalid parameters."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
         <tapa.flag id="EGTP_C"/>
      </tapa.ifdef>

      <tapa.ifndef/>

      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg/>

   # Test Steps subsection
   <tapa.test>

      # Send gen Configuration Request
      <tapa.send>
         <tapa.leg.cfg.gen/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send enable unsoliited status control Request
      <tapa.send>
         <tapa.leg.cntrl.usta/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cntrlcfm/>
      </tapa.expect>

   # Enable Alarms
      <tapa.directive alarm="TRUE"/>

      # Send USAP Configuration Request
      <tapa.send>
         <tapa.leg.cfg.usap sapId="1"/>
      </tapa.send>

      # Expect Cfg Confirm
      <tapa.expect>
         <tapa.leg.cfgcfm/>
      </tapa.expect>

      # Send USAP Bind Request from User
      <tapa.send>
         <tapa.egt.bndreq spId="1"/>
      </tapa.send>

      #Expect Status Indication of complete bind
      <tapa.expect>
      <tapa.leg.staInd category="LCM_CATEGORY_INTERFACE" event = "LCM_EVENT_BND_OK"
                          cause = "LEG_CAUSE_SAP_BND" type = "LEG_PAR_USAP"/>
      </tapa.expect>

      # Expect Bind Confirm
      <tapa.expect>
         <tapa.egt.bndcfm/>
      </tapa.expect>

        # Delete Tunnel at MME
        <tapa.send>
         <tapa.egt.lcldelreq teid="1" spId="1"/>
        </tapa.send>

        # Receive delete confirm at SGW
        <tapa.expect>
         <tapa.egt.lcldelcfm teid="1" suId="0" status="LCM_PRIM_NOK" reason="LCM_REASON_LYR_SPECIFIC"/>
        </tapa.expect>

   # Suppress Alarms
      <tapa.directive alarm="FALSE"/>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection

   <tapa.shutdown>
   # Send Shutdown Control Request to eGTP layer

        <tapa.send>
           <tapa.leg.cntrl.shutdown/>
        </tapa.send>

          # Expect Control Confirm
         <tapa.expect>
            <tapa.leg.cntrlcfm/>
         </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#       Test:   4.8
#
#       Desc:   Verify the successful exchange of CSR b/w MME and SGW with
                debug prints enabled
#
#       Ref:   None
#
#       Notes:  None
#              
#       Module: TPT Module
#
#       File:   egac_tc7.xml
#
<tapa.testcase id="4.8">
   
   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.tpt"/>

      <tapa.desc>
         "Verify the successful exchange of CSR b/w MME and SGW with"
         "debug prints enabled"
      </tapa.desc>

      <tapa.longdesc/>
       
   </tapa.doc>
   
   # Require features and flags subsection 
   <tapa.require>

      <tapa.ifdef>
         <tapa.flag id="EGTP_C"/>
      </tapa.ifdef>
         
      <tapa.ifndef/>
        
      <tapa.mode mode="single"/>

   </tapa.require>
     
   # Configuration subsection
   <tapa.cfg>

    # Configure TUCL
      <tapa.hi.init/>

    # Configure EGTP as SGW and PGW
      <tapa.eg.mme1.sgw1.init/>

   </tapa.cfg>
   
   # Test Steps subsection
   <tapa.test>

      <tapa.send>
         <tapa.leg.cntrl.debug action="AENA" dbgMask="LLX_DBGMASK_MSG" procId="200"/> 
      </tapa.send>

      <tapa.expect>
         <tapa.leg.cntrlcfm procId="200"/>
      </tapa.expect>

      <tapa.send>
         <tapa.egt.sigreq egtpMsgType="EGT_GTPC_MSG_CS_REQ" intfType="EGT_GTP_INT_S11" 
               crtFlag="TRUE" spId="1" procId="200" transId="1" addInterfaceType="10"
               lclPort="3123" rmtPort="2124" t3TmrVal="10" lcladdr="127.0.0.1" 
               rmtaddr="127.0.0.1"/>
# FTeidIntfType="EGT_INT_S11_MME_GTP_C"/>
      </tapa.send>
       
      <tapa.expect>
         <tapa.egt.sigind teid="1" suId="2" procId="300" />   
      </tapa.expect>
   
      <tapa.send>
         <tapa.egt.sigrsp egtpMsgType="EGT_GTPC_MSG_CS_RSP" intfType="EGT_GTP_INT_S11" teid="1" 
               spId="1" procId="300" addInterfaceType="11" teidValue="1"/>
      </tapa.send>
       
      <tapa.expect>
         <tapa.egt.sigcfm egtpMsgType="EGT_GTPC_MSG_CS_RSP" transId="1" teid="1" 
               suId="1" procId="200"/>
      </tapa.expect>
   
   </tapa.test>
   
   # Clean subsection
   <tapa.clean/>
         
   # Shutdown subsection
   
   <tapa.shutdown>

   # De-Init EGTP
   <tapa.egtp.deinit/>

   
   # De-Init TUCL
   <tapa.hi.deinit/>

   </tapa.shutdown>
   
</tapa.testcase>


#
#       Test:    4.9
#
#       Desc:   Send CSR with invalid PST
#
#       Ref:   None
#
#       Notes:  None
#              
#       Module: TPT Module
#
#       File:   egac_tc7.xml
#
<tapa.testcase id="4.9">
   
   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="eg.tpt"/>

      <tapa.desc>
         "Verify the success sending of CSR"
      </tapa.desc>

      <tapa.longdesc/>
       
   </tapa.doc>
   
   # Require features and flags subsection 
   <tapa.require>

      <tapa.ifdef>
         <tapa.flag id="EGTP_C"/>
      </tapa.ifdef>``
         
      <tapa.ifndef/>
        
      <tapa.mode mode="single"/>

   </tapa.require>
     
   # Configuration subsection
   <tapa.cfg>

    # Configure TUCL
      <tapa.hi.init/>
 
      <tapa.eg.mme1.sgw1.init/>
   </tapa.cfg>
   
   # Test Steps subsection
   <tapa.test>


      <tapa.send>
         <tapa.egt.sigreq egtpMsgType="EGT_GTPC_MSG_CS_REQ" intfType="EGT_GTP_INT_S11" crtFlag="TRUE" 
               spId="1" procId="200" transId="1" addInterfaceType="10" invalidPst="TRUE"
               lclPort="3123" rmtPort="2124" t3TmrVal="10" lcladdr="127.0.0.1" rmtaddr="127.0.0.1"/>
      </tapa.send>
      
      <tapa.send>
         <tapa.egt.sigrsp egtpMsgType="EGT_GTPC_MSG_CS_REQ" intfType="EGT_GTP_INT_S11" crtFlag="TRUE" 
               spId="1" procId="200" transId="1" addInterfaceType="10" invalidPst="TRUE"
               lclPort="3123" rmtPort="2124" t3TmrVal="10" lcladdr="127.0.0.1" rmtaddr="127.0.0.1"/>
      </tapa.send>
      <tapa.send>
         <tapa.egt.lcldelreq spId="1" procId="200" transId="1" teid="1" invalidPst="TRUE"/>
      </tapa.send>
      <tapa.send>
         <tapa.egt.stareq spId="1" procId="200" transId="1" teid="1" invalidPst="TRUE"/>
      </tapa.send>
      <tapa.send>
         <tapa.egt.bndreq spId="1" procId="200" transId="1" teid="1" invalidPst="TRUE"/>
      </tapa.send>
      <tapa.send>
         <tapa.egt.ubndreq spId="1" procId="200" transId="1" teid="1" invalidPst="TRUE"/>
      </tapa.send>
   </tapa.test>
   
   # Clean subsection
   <tapa.clean/>
         
   # Shutdown subsection
   
   <tapa.shutdown>

   # De-Init EGTP
   <tapa.egtp.deinit/>

   
   # De-Init TUCL
   <tapa.hi.deinit/>

   </tapa.shutdown>
   
</tapa.testcase>


# DO NOT DELETE THIS LINE -- TC number generation script depends on it.
# xyzabcend

#/********************************************************************30**
#
#         End of file:     
#
#*********************************************************************31*/
#
#
#/********************************************************************40**
#
#        Notes:
#
#*********************************************************************41*/
#
#/********************************************************************50**
#
#*********************************************************************51*/
#
#
#/********************************************************************60**
#
#        Revision history:
#
#*********************************************************************61*/
#
#/********************************************************************90**
#
#     ver       pat    init                  description
#------------ -------- ---- ----------------------------------------------
#    $SID$      ---     ad           1. Created for EGTP 1.1 Rel
#*********************************************************************91*/






