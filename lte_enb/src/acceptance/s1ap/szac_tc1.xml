#/********************************************************************20**
#
#     Name:    S1AP 
#
#     Type:    XML Test File
#
#     Desc:    XML Based Test Cases
#
#     File:    szac_tc1.xml
#
#     Sid:     
#
#     Prg:     Rce 
#
#*********************************************************************21*/

# DO NOT DELETE THIS LINE -- TC number generation script depends on it.
# xyzabcstart=2:rs:szac_tc1.xml

#
#
#       Test:    1.1
#
#       Desc:    Verify the successful configuration of S1AP in
#                an integrated setup (eNb + MME)
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.1">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the successful configuration of S1AP in "
         "an integrated setup (eNb + MME)"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      #CONFIGURATIONS FOR ENB
      # Send an General configuration request
      <tapa.send>
         <tapa.lsz.cfg.gen />
      </tapa.send>

      # Receive the confirm for the general configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm />
      </tapa.expect>

      # Send an protocol configuration request
      <tapa.send>
         <tapa.lsz.cfg.prot protNode="SZAC_LSZ_ENB_PRC0"/>
      </tapa.send>

      # Receive the confirm for the protocol configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm />
      </tapa.expect>

      # Send an szt sap configuration request
      <tapa.send>
         <tapa.lsz.cfg.usap />
      </tapa.send>

      # Receive the confirm for the szt sap request.
      <tapa.expect>
         <tapa.lsz.cfgcfm />
      </tapa.expect>

      # Send an sct sap configuration request
      <tapa.send>
         <tapa.lsz.cfg.lsap peerNode="SZAC_LSZ_MME_PRC1" />
      </tapa.send>

      # Receive the confirm for the sct sap request.
      <tapa.expect>
         <tapa.lsz.cfgcfm />
      </tapa.expect>

      # Send an sct sap configuration request
      <tapa.send>
         <tapa.lsz.cntrl.lSap />
      </tapa.send>

      # Receive the confirm for the sct sap request.
      <tapa.expect>
         <tapa.lsz.cntrlcfm />
      </tapa.expect>

      # CONFIGURATIONS FOR MME
      # Send an General configuration request
      <tapa.send>
         <tapa.lsz.cfg.gen procId="SZAC_MME_PROC"/>
      </tapa.send>

      # Receive the confirm for the general configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_MME_PROC"/>
      </tapa.expect>

      # Send an protocol configuration request
      <tapa.send>
         <tapa.lsz.cfg.prot procId="SZAC_MME_PROC" protNode="SZAC_LSZ_MME_PRC1"/>
      </tapa.send>

      # Receive the confirm for the protocol configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_MME_PROC" />
      </tapa.expect>

      # Send an szt sap configuration request
      <tapa.send>
         <tapa.lsz.cfg.usap procId="SZAC_MME_PROC" sapId="1"/>
      </tapa.send>

      # Receive the confirm for the szt sap request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_MME_PROC"/>
      </tapa.expect>

      # Send an sct sap configuration request
      <tapa.send>
         <tapa.lsz.cfg.lsap procId="SZAC_MME_PROC" suId="1" spId="1" peerNode="SZAC_LSZ_ENB_PRC0"/>
      </tapa.send>

      # Receive the confirm for the sct sap request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_MME_PROC"/>
      </tapa.expect>

      # Send an peer configuration request
      <tapa.send>
         <tapa.lsz.cfg.peer procId="SZAC_MME_PROC" peerNodeCfg="SZAC_LSZ_ENB_PRC0"/>
      </tapa.send>

      # Receive the confirm for the peer configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_MME_PROC" />
      </tapa.expect>

      # Send an sct sap configuration request
      <tapa.send>
         <tapa.lsz.cntrl.lSap procId="SZAC_MME_PROC" lSapId="1"/>
      </tapa.send>

      # Receive the confirm for the sct sap request.
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_MME_PROC"/>
      </tapa.expect> 

      <tapa.sz.sct.delay delay="5"/>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # s1ap cleanup operations
      <tapa.sz.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.2
#
#       Desc:    Verify that the SysId Status request returns the
#                expected values
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.2">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the SysId Status request returns the"
         "expected values"                                  
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      # Initialise S1AP in an ENB configuration
      <tapa.sz.enb0.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an peer configuration request
      <tapa.send>
         <tapa.lsz.sta.req staType= "STSZSID" />
      </tapa.send>

      # Receive the confirm for the peer configuration request.
      <tapa.expect>   
         <tapa.lsz.stacfm mVer="3" mRev="1" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # s1ap cleanup operations
      <tapa.sz.enb0.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.3
#
#       Desc:    Verify that the General Status request returns the
#                expected values
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.3">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the General Status request returns the"
         "expected values"                                  
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      # Initialise S1AP in an ENB configuration
      <tapa.sz.enb0.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an peer configuration request
      <tapa.send>
         <tapa.lsz.sta.req staType= "STSZGEN" />
      </tapa.send>

      # Receive the confirm for the peer configuration request.
      <tapa.expect>   
         <tapa.lsz.stacfm audit="0" nmActvPeerConn="0"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # s1ap cleanup operations
      <tapa.sz.enb0.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.4
#
#       Desc:    Verify that the traces are sucessfully enabled.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.4">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the traces are are successfully enabled"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      # Initialise S1AP in an ENB configuration
      <tapa.sz.enb0.init/>
      # Bring up MME 
      <tapa.sz.mme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an upper sap delete request
      <tapa.send>
         <tapa.lsz.cntrl.pNodeTrc peerId="2" procId="SZAC_ENB_PROC"
                                  action="AENA"/>
      </tapa.send>

      # Receive the confirm confirm
      <tapa.expect>
         <tapa.lsz.cntrlcfm />
      </tapa.expect>

      # Send an upper sap delete request
      <tapa.send>
         <tapa.lsz.cntrl.pNodeTrc peerId="1"  procId="SZAC_MME_PROC"
                                  action="AENA"/>
      </tapa.send>

      # Receive the confirm confirm
      <tapa.expect>
         <tapa.lsz.cntrlcfm  procId="SZAC_MME_PROC"/>
      </tapa.expect>

      # Send an S1 SETUP REQUEST message from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_ENB_PROC" peerId="2" spId="0"/>
      </tapa.send>

      # Expect Status Indiaction ASSOC UP at MME & eNB 
      <tapa.expset>
         <tapa.szt.staind procId="SZAC_MME_PROC" peerId="1" suId="1" staType="SZT_STA_TYPE_ASSOC" 
	                  reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_ASSOC_CFM"
                          cause = "LSZ_CAUSE_ASSOC_UP"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "1"    
                          procId = "SZAC_MME_PROC"                 />
         <tapa.szt.staind procId="SZAC_ENB_PROC" peerId="2" suId="0" staType="SZT_STA_TYPE_ASSOC" 
	                  reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
         <tapa.lsz.staInd category= "LCM_CATEGORY_PROTOCOL"
                          event =   "LSZ_EVENT_LI_ASSOC_CFM"
                          cause =   "LSZ_CAUSE_ASSOC_UP"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "2"      
                          procId = "SZAC_ENB_PROC"                 />
      	# Expect Trace Indication(while sending message to lower) 
         <tapa.lsz.trcInd procId="SZAC_ENB_PROC"/>
      	# Expect Trace Indication 
         <tapa.lsz.trcInd procId="SZAC_MME_PROC"/>
      	# Expect S1 SETUP REQUEST message at MME
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_MME_PROC" peerId="1" suId="1"/>
      </tapa.expset>

      # Expect Trace Indication(while sending message to lower) 
		<!--
      <tapa.expect>
         <tapa.lsz.trcInd procId="SZAC_ENB_PROC"/>
      </tapa.expect>

      # Expect Trace Indication 
      <tapa.expect>
         <tapa.lsz.trcInd procId="SZAC_MME_PROC"/>
      </tapa.expect>

      # Expect S1 SETUP REQUEST message at MME
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_MME_PROC" peerId="1" suId="1"/>
      </tapa.expect>
		-->

      # Send an S1 SETUP RESPONSE Msg from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_MME_PROC" peerId="1" spId="1"/>
      </tapa.send>

		<!--
      # Expect Trace Indication(while sending message to lower) 
      <tapa.expect>
         <tapa.lsz.trcInd procId="SZAC_MME_PROC"/>
      </tapa.expect>

      # Expect Trace Indication 
      <tapa.expect>
         <tapa.lsz.trcInd procId="SZAC_ENB_PROC"/>
      </tapa.expect>
		-->

      # Expect S1 SETUP RESPONSE Msg at eNB
      <tapa.expset>
         <tapa.lsz.trcInd procId="SZAC_MME_PROC"/>
         <tapa.lsz.trcInd procId="SZAC_ENB_PROC"/>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_ENB_PROC" peerId="2" suId="0"/>
      </tapa.expset>

      # Send an lower sap delete request
      <tapa.send>
         <tapa.lsz.cntrl.pNodeTrc peerId="2"
                                  action="ADISIM"/>
      </tapa.send>

      # Receive the confirm confirm
      <tapa.expect>
         <tapa.lsz.cntrlcfm />
      </tapa.expect>

      <tapa.delay delay="5"/>
      # Send an upper sap delete request
      <tapa.send>
         <tapa.lsz.cntrl.pNodeTrc peerId="1"  procId="SZAC_MME_PROC"
                                  action="ADISIMM"/>
      </tapa.send>

      # Receive the confirm confirm
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_MME_PROC"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # s1ap cleanup operations
      <tapa.sz.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.5
#
#       Desc:    Verify that the alarm are generated when the sap is bound and unbound
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.5">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the alarms are generated when a sap is bound and unbound"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      # Send an General configuration request
      <tapa.gen.cfg/>
      # Send an protocol configuration request
      <tapa.prot.cfg protNode="SZAC_LSZ_ENB_PRC0"/>
      # Send an Szt Sap configuration request
      <tapa.sztsap.cfg/>
      # Send an Sct Sap configuration request
      <tapa.sctsap.cfg peerNode="SZAC_LSZ_MME_PRC1"/>
      # Send an peer configuration request
      <tapa.peer.cfg peerNodeCfg="SZAC_LSZ_MME_PRC1"/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send a control request to enable alarms
      <tapa.send>
         <tapa.lsz.cntrl.usta />
      </tapa.send>

      # Receive the confirm for the alarms.
      <tapa.expect>
         <tapa.lsz.cntrlcfm />
      </tapa.expect>

      # Send an sct sap configuration request
      <tapa.send>
         <tapa.lsz.cntrl.lSap  lSapId="0"/>
      </tapa.send>

      # Receive the confirm for the sct sap request.
      <tapa.expset>
         # Receive the confirm for the sct sap request.
         <tapa.lsz.cntrlcfm />
         <tapa.lsz.staInd category="LCM_CATEGORY_INTERFACE"
                          event = "LCM_EVENT_BND_OK"
                          cause = "LCM_CAUSE_UNKNOWN"
                          type   =  "LSZ_USTA_DGNVAL_SAPID"
                          typeId =  "0"                     />

         # Receive the confirm for the sta ind request.
         <tapa.lsz.staInd category="LCM_CATEGORY_INTERFACE"
                          event = "LSZ_EVENT_LI_ENDP_OPEN_CFM"
                          cause = "LSZ_CAUSE_SCT_ENPOPEN_SUCC"
                          type   =  "LSZ_USTA_DGNVAL_SAPID"
                          typeId =  "0"                     />

      </tapa.expset>                      
      # Send an sct sap configuration request
      <tapa.send>
         <tapa.lsz.cntrl.lSap action="AUBND_DIS" lSapId="0"/>
      </tapa.send>

      # Receive the confirm for the sct sap request.
      <tapa.expset>
         # Receive the confirm for the sct sap request.
         <tapa.lsz.cntrlcfm />
         # Receive the confirm for the sta ind request.
         <tapa.lsz.staInd category="LCM_CATEGORY_INTERFACE"
                          event = "LSZ_EVENT_LI_ENDP_CLOSE_CFM"
                          cause = "LSZ_CAUSE_EPCLOSE_OK"
                          type   =  "LSZ_USTA_DGNVAL_SAPID"
                          typeId =  "0"                     />

      </tapa.expset>                      

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # s1ap cleanup operations
      <tapa.sz.enb0.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.6
#
#       Desc:    Verify that the debug prints can be 
#                sucessfully enabled and disabled
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.6">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the debug prints can be "
         "successfully enabled and disabled"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
           <tapa.flag id="SZ_DBG"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      # Initialise S1AP in an ENB configuration
      <tapa.gen.cfg/>
      <tapa.prot.cfg protNode="SZAC_LSZ_ENB_PRC0"/>
      <tapa.sztsap.cfg/>
      <tapa.sctsap.cfg/>
      <tapa.peer.cfg peerNodeCfg="SZAC_LSZ_MME_PRC1"/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an upper sap delete request
      <tapa.send>
         <tapa.lsz.cntrl.debug  action="AENA"/>
      </tapa.send>

      # Receive the confirm confirm
      <tapa.expect>
         <tapa.lsz.cntrlcfm />
      </tapa.expect>

      <tapa.lSap.bnd lSapId="0"/>

      # Send an lower sap delete request
      <tapa.send>
         <tapa.lsz.cntrl.debug action="ADISIM"/>
      </tapa.send>

      # Receive the confirm confirm
      <tapa.expect>
         <tapa.lsz.cntrlcfm />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # s1ap cleanup operations
      <tapa.sz.enb0.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.7
#
#       Desc:    Verify Successful S1 Setup Procedure.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.7">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
         "Verify Successful S1 Setup Procedure."
         " The eNB S1AP User sends S1 SETUP REQUEST Message to peer MME S1AP User."
         " The eNB stores the message establishes a SCTP association with the peer "
         " (if the association doesn't exists) and sends the Setup message. "
         " The peer MME S1AP User responds with S1 SETUP RESPONSE Message to "
         " eNB S1AP User indicating a successful S1 Setup Procedure."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an S1 SETUP REQUEST message from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_ENB_PROC" peerId="2" spId="0"/>
      </tapa.send>

      # Expect Status Indiaction ASSOC UP at MME & eNB 
      <tapa.expset>
         <tapa.szt.staind procId="SZAC_MME_PROC" peerId="1" suId="1" staType="SZT_STA_TYPE_ASSOC" 
	                  reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_ASSOC_CFM"
                          cause = "LSZ_CAUSE_ASSOC_UP"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "1"    
                          procId = "SZAC_MME_PROC"                 />
         <tapa.szt.staind procId="SZAC_ENB_PROC" peerId="2" suId="0" staType="SZT_STA_TYPE_ASSOC"
	                  reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
         <tapa.lsz.staInd category= "LCM_CATEGORY_PROTOCOL"
                          event =   "LSZ_EVENT_LI_ASSOC_CFM"
                          cause =   "LSZ_CAUSE_ASSOC_UP"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "2"      
                          procId = "SZAC_ENB_PROC"                 />
      </tapa.expset>         
      
      # Expect S1 SETUP REQUEST message at MME
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_MME_PROC" peerId="1" suId="1"/>
      </tapa.expect>

      # Send an S1 SETUP RESPONSE Msg from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_MME_PROC" peerId="1" spId="1"/>
      </tapa.send>

      # Expect S1 SETUP RESPONSE Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_ENB_PROC" peerId="2" suId="0"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit S1AP
      <tapa.sz.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.8
#
#       Desc:    Verify Successful Reset Procedure Initiated from the MME 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.8">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
         "Verify Successful Reset Procedure Initiated from the MME."
         " RESET is without the UE-associated logical S1-connection list IE."
         " The eNB resets all the S1AP Connections and responds back with a RESET ACK."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      # Initial Context Setup Procedure
      <tapa.uecxt.init usrConnId="1" spConnId="1"/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_ENB_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="1" procId="SZAC_ENB_PROC"/>
      </tapa.expect>

      # Send an RESET message from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_RESET" procId="SZAC_MME_PROC" peerId="1" spId="1"/>
      </tapa.send>

      # Expect RESET Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_RESET" procId="SZAC_ENB_PROC" peerId="2" suId="0"/>
      </tapa.expect>

      # Send an RESET ACK Msg from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_RESET_ACK" procId="SZAC_ENB_PROC" peerId="2" spId="0"/>
      </tapa.send>

      # Expect RESET ACK Msg at MME
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_RESET_ACK" procId="SZAC_MME_PROC" peerId="1" suId="1"/>
      </tapa.expect>

      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_ENB_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="0" procId="SZAC_ENB_PROC"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit S1AP
      <tapa.sz.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.9
#
#       Desc:    Verify Successful Reset Procedure Initiated from the E-UTRAN 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.9">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
         "Verify Successful Reset Procedure Initiated from the E-UTRAN."
         " RESET is without the UE-associated logical S1-connection list IE."
         " The MME resets all the S1AP Connections and responds back with a RESET ACK."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      # Initial Context Setup Procedure
      <tapa.uecxt.init usrConnId="1" spConnId="1"/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_MME_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="1" procId="SZAC_MME_PROC"/>
      </tapa.expect>

      # Send an RESET message from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_RESET" procId="SZAC_ENB_PROC" peerId="2" spId="0"/>
      </tapa.send>

      # Expect RESET Msg at MME
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_RESET" procId="SZAC_MME_PROC" peerId="1" suId="1"/>
      </tapa.expect>

      # Send an RESET ACK Msg from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_RESET_ACK" procId="SZAC_MME_PROC" peerId="1" spId="1"/>
      </tapa.send>

      # Expect RESET ACK Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_RESET_ACK" procId="SZAC_ENB_PROC" peerId="2" suId="0"/>
      </tapa.expect>

      <tapa.delay delay="5"/>
      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_MME_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="0" procId="SZAC_MME_PROC"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit S1AP
      <tapa.sz.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.10
#
#       Desc:    Verify the successful establishment of initial UE
#                context by sending the Initial Context Setup Request
#                from MME. 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.10">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the successful establishment of initial UE "
         "context by sending the Initial Context Setup Request"
         "from MME"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_ENB_PROC" 
	                  peerId="2" spId="0" usrConnId="1"/>
      </tapa.send>

      # Expect initial UE at MME
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_INIT_UE_MSG" peerId="1" procId="SZAC_MME_PROC"
	                  suId="1" spConnId="1" usrConnId="2"/>
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_MME_PROC" peerId="1"
	                  spId="1" usrConnId="2" spConnId="1"/>
      </tapa.send>

      # Expect  INITIAL CONTEXT SETUP REQUEST at ENB
      <tapa.expect>
         <tapa.szt.concfm eventType="SZT_MSG_ID_CXT_SETUP_REQ" peerId="2" procId="SZAC_ENB_PROC"
	                  suId="0" spConnId="1" usrConnId="1"/>
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP RESPONSE from ENB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_CXT_SETUP_RSP" procId="SZAC_ENB_PROC" peerId="2" 
	                  spId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect  INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" peerId="1" procId="SZAC_MME_PROC"
	                  suId="1" usrConnId="2"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit S1AP
      <tapa.sz.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.11
#
#       Desc:    Verify Successful UE Context Modification Procedure.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.11">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
         "Verify Successful UE Context Modification Procedure. "
         "The MME sends UE CONTEXT MODIFICATION REQUEST Message to the peer eNB. "
         "The eNB stores the updated information and responds back with a "
         "UE CONTEXT MODIFICATION RESPONSE Message indicating successful "
         "UE Context Modification Procedure."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      # Initial Context Setup Procedure
      <tapa.uecxt.init usrConnId="1" spConnId="1"/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an UE CONTEXT MODIFICATION REQUEST message from MME to eNB
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_UE_CXT_MOD_REQ" procId="SZAC_MME_PROC" 
	                  peerId="1" spId="1" usrConnId="1"/>
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST Msg at eNB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_UE_CXT_MOD_REQ" procId="SZAC_ENB_PROC" 
	                  peerId="2" suId="0" usrConnId="1"/>
      </tapa.expect>

      # Send an UE CONTEXT MODIFICATION RESPONSE Msg from eNB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_UE_CXT_MOD_RSP" procId="SZAC_ENB_PROC"
	                  spConnId="1" usrConnId="1" spId="0" peerId="2"/>
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION RESPONSE at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_UE_CXT_MOD_RSP" procId="SZAC_MME_PROC"
	                  usrConnId="1" suId="1"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit S1AP
      <tapa.sz.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.12
#
#       Desc:    Verify UE Context Release Procedure initiated eNB.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.12">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that NB requests the MME to release the UE-"
         "associated logical S1-connection due to EUTRAN "
         "generated reason (e.g. "TX2RELOCOverall Expiry") by"
         "sending UE Context Release Request"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      # Initial UE Context setup
      <tapa.uecxt.init usrConnId="1" spConnId="1"/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an UE context Release msg from ENB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_UE_CXT_REL_REQ" procId="SZAC_ENB_PROC" 
	                  peerId="2" spId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect UE context Release at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_UE_CXT_REL_REQ" peerId="1" 
	                  procId="SZAC_MME_PROC" suId="1" usrConnId="1"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit S1AP
      <tapa.sz.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.13
#
#       Desc:    Verify UE Context Release Procedure initiated by eNB.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.13">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that upon reception of the UE CONTEXT RELEASE"
         "COMMAND message from MME, the eNB shall release all"
         "related signalling and user data transport resources"
         "and reply with the UE CONTEXT RELEASE COMPLETE message"
         "to MME"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      # Initial UE Context setup
      <tapa.uecxt.init usrConnId="1" spConnId="1"/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an UE context Release cmd from MME to ENB
      <tapa.send>
         <tapa.szt.relreq eventType="SZT_MSG_ID_UE_CXT_REL_CMD" procId="SZAC_MME_PROC" 
	                  peerId="1" spId="1" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect UE context Release cmd at ENB
      <tapa.expect>
         <tapa.szt.relind eventType="SZT_MSG_ID_UE_CXT_REL_CMD" peerId="2"
	                  procId="SZAC_ENB_PROC" suId="0" usrConnId="1"/>
      </tapa.expect>

      # Send an UE context Release complete from ENB to MME
      <tapa.send>
         <tapa.szt.relrsp eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" procId="SZAC_ENB_PROC" 
	                  peerId="2" spId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect UE context Release complete at MME
      <tapa.expect>
         <tapa.szt.relcfm eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" peerId="1" 
	                  procId="SZAC_MME_PROC" suId="1" usrConnId="1"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit S1AP
      <tapa.sz.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.14
#
#       Desc:    Verify successful paging procedure 
#                initiated by MME.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.14">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify successful paging procedure initiated by"
         "MME"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>
      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      <tapa.delay delay="5"/>
      # Send PAGING msg MME to ENB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_PAGING" procId="SZAC_MME_PROC" peerId="1" spId="1"/>
      </tapa.send>

      # Expect PAGING msg at MME
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_PAGING" procId="SZAC_ENB_PROC" peerId="2" suId="0"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      <tapa.delay delay="5"/>
      # Deinit S1AP
      <tapa.sz.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.15
#
#       Desc:    Verify successful E-RAB setup procedure.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.15">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify successful E-RAB setup procedure"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      # Initial UE Context setup
      <tapa.uecxt.init usrConnId="1" spConnId="1"/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an E-RAB SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_SETUP_REQ" procId="SZAC_MME_PROC" 
	                  peerId="1" spId="1" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect E-RAB SETUP REQUEST msg at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_SETUP_REQ" peerId="2"
	                  procId="SZAC_ENB_PROC" suId="0" usrConnId="1" spConnId="1"/>
      </tapa.expect>

      # Send an E-RAB SETUP RESPONSE msg from ENB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_SETUP_RSP" peerId="2" 
	                  procId="SZAC_ENB_PROC" spId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect E-RAB SETUP RESPONSE msg at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_SETUP_RSP" procId="SZAC_MME_PROC"
	                  peerId="1" suId="1" usrConnId="1"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit S1AP
      <tapa.sz.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.16
#
#       Desc:    Verify successful E-RABs modify procedure.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.16">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify successful E-RABs modify procedure "
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      # UE context setup
      <tapa.uecxt.init usrConnId="1" spConnId="1"/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an E-RAB MODIFY REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_MOD_REQ" procId="SZAC_MME_PROC"
	                  peerId="1" spId="1" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect E-RAB MODIFY REQUEST indication at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_MOD_REQ" peerId="2"
	                  procId="SZAC_ENB_PROC" suId="0"  usrConnId="1"/>
      </tapa.expect>

      # Send an E-RAB MODIFY RESPONSE msg from ENB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_MOD_RSP" peerId="2"
	                  procId="SZAC_ENB_PROC" spId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect E-RAB MODIFY RESPONSE at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_MOD_RSP" procId="SZAC_MME_PROC" 
	                  peerId="1" suId="1"  usrConnId="1"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit S1AP
      <tapa.sz.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.17
#
#       Desc:    Verify successful E-RABs release procedure.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.17">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify successful E-RABs release procedure "
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      # UE context setup
      <tapa.uecxt.init usrConnId="1" spConnId="1"/>

      # E-RAB setup procedure
      <tapa.erab.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an E-RAB RELEASE COMMAND msg from MME to ENB
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_REL_CMD" procId="SZAC_MME_PROC" peerId="1" 
	                  spId="1" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect E-RAB RELEASE COMMAND indication at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_REL_CMD" peerId="2" procId="SZAC_ENB_PROC" 
	                  suId="0"  usrConnId="1"/>
      </tapa.expect>

      # Send an E-RAB RELEASE COMPLETE msg from ENB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_REL_CMPLT" peerId="2" procId="SZAC_ENB_PROC"
	                  spId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect E-RAB RELEASE COMPLETE at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_REL_CMPLT" procId="SZAC_MME_PROC" peerId="1" 
	                  suId="1"  usrConnId="1"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit S1AP
      <tapa.sz.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.18
#
#       Desc:    Verify Successful Downlink and Uplink NAS Transport Procedure.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.18">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
         "Verify un-Successful Downlink NAS Procedure where "
         "the UE-associated logical S1-connection is not established. "
         "The MME S1AP User sends DOWNLINK NAS TRANSPORT Message to the peer eNB S1AP User."
         "The peer sends the error indication"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     # Send an DOWNLINK NAS TRANSPORT Msg from MME to eNB
      <tapa.send lc="TRUE">
         <tapa.szt.conreq eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_MME_PROC" peerId="1"
	                  spId="1"  usrConnId="1" spConnId="1" enbId="99" mmeId="1"/>
      </tapa.send>

      # Expect DOWNLINK NAS TRANSPORT Msg at eNB
      <tapa.expect>
         <tapa.szt.relind eventType="SZT_MSG_ID_ERR_IND" peerId="1" procId="SZAC_MME_PROC"
	                  suId="1" spConnId="1" usrConnId="1"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit S1AP
      <tapa.sz.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.19
#
#       Desc:    Verify Successful Downlink NAS Transport Procedure.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.19">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
         "Verify Successful Downlink NAS Procedure where "
         "MME have received the eNB S1-AP UE Identity IE in an INITIAL UE MESSAGE Message "
         "The MME S1AP User sends DOWNLINK NAS TRANSPORT Message to the peer eNB S1AP User."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_ENB_PROC" peerId="2" 
	                  spId="0" usrConnId="1"/>
      </tapa.send>

      # Expect initial UE at MME
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_INIT_UE_MSG" peerId="1" procId="SZAC_MME_PROC"
	                  suId="1" spConnId="1" usrConnId="1" />
      </tapa.expect>

      # Send an DOWNLINK NAS TRANSPORT Message from MME to eNB
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_MME_PROC" peerId="1" 
	                  spId="1"  usrConnId="1" spConnId="1"/>
      </tapa.send>

      # Expect DOWNLINK NAS TRANSPORT Msg at eNB
      <tapa.expect>
         <tapa.szt.concfm eventType="SZT_MSG_ID_DL_NAS_TPT" peerId="2" procId="SZAC_ENB_PROC" 
	                  suId="0" spConnId="1" usrConnId="1"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit S1AP
      <tapa.sz.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.20
#
#       Desc:    Verify successful peer configuration
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
<tapa.testcase id="1.20">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
          "Verify successful peer configuration"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      #Initialize TUCL 
      <tapa.hi.init/>

      #Initialize SCTP 
      <tapa.sb.init/>

      # Initialise S1AP in an ENB configuration
      <tapa.sz.enb0.init/>

      # Initialise S1AP in an MME configuration with dynamic peer config
      <tapa.sz.dynammme1.init dynamicPeer="1" DefaultSapId="1"/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send S1 SETUP REQUEST message from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_ENB_PROC" peerId="2" spId="0"/>
      </tapa.send>

      # Expect assoc indication at MME
      <tapa.expect>
         <tapa.szt.assocind procId="SZAC_MME_PROC" peerId="1" suId="1"/>
      </tapa.expect>

      # Send an assoc response from MME S1AP layer 
      <tapa.send>
         <tapa.szt.assocrsp procId="SZAC_MME_PROC" peerId="1" spId="1" addressType="4" priDstAddr="127.0.0.1" dstPort="10000" comProcStrm="0" locOutStrms="5" status="SZT_PRIM_OK" cause="SZT_CAUSE_NOT_APPL"/>
      </tapa.send>

      # Expect Status Indiaction ASSOC UP at MME and eNB
      <tapa.expset>
         <tapa.szt.staind procId="SZAC_MME_PROC" peerId="1" suId="1" staType="SZT_STA_TYPE_PEER" reason="SZT_REASON_NOT_APPL" status="SZT_STATUS_DYNAM_PEERCFG_OK"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_UI_PEERASSOC_RSP"
                          cause = "LSZ_CAUSE_DYNAM_PEERCFG_OK"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "1"    
                          procId = "SZAC_MME_PROC"                 />
         <tapa.szt.staind procId="SZAC_MME_PROC" peerId="1" suId="1" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_ASSOC_CFM"
                          cause = "LSZ_CAUSE_ASSOC_UP"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "1"    
                          procId = "SZAC_MME_PROC"                 />
         <tapa.szt.staind procId="SZAC_ENB_PROC" peerId="2" suId="0" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_ASSOC_CFM"
                          cause = "LSZ_CAUSE_ASSOC_UP"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "2"    
                          procId = "SZAC_ENB_PROC"                 />
      </tapa.expset>         
      
      # Expect S1 SETUP REQUEST message at MME
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_MME_PROC" peerId="1" suId="1"/>
      </tapa.expect>

      # Send an S1 SETUP RESPONSE Msg from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_MME_PROC" peerId="1" spId="1"/>
      </tapa.send>

      # Expect S1 SETUP RESPONSE Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_ENB_PROC" peerId="2" suId="0"/>
      </tapa.expect>

      #Initialize UE context
      <tapa.uecxt.init />

      # Send an peer delete request
      <tapa.send>
         <tapa.lsz.cntrl.peer  action="ADEL" sAction="SAELMNT"
                               procId="SZAC_MME_PROC" peerId="2" peerId_0="1"/>
      </tapa.send>
      
      # sz008.301 
      #expect status indication
      <tapa.expect>
         <tapa.szt.staind procId="SZAC_ENB_PROC" status="SZT_STATUS_ASSOC_DOWN"  staType="SZT_STA_TYPE_ASSOC" 
            peerId="2" reason="SZT_STATUS_ASSOC_DOWN"/>
      </tapa.expect>

      # Receive the satus indication at the LM
      <tapa.expect>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL" 
                          event = "LSZ_EVENT_LI_TERM_IND"
                          cause = "LSZ_CAUSE_ASSOC_DOWN"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "2"    
                          procId = "SZAC_ENB_PROC"                 />

      </tapa.expect>
 
   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # s1ap cleanup operations
      <tapa.sz.enb0.deinit/>
      <tapa.sz.mme1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.21
#
#       Desc:    Verify Unsuccessful peer configuration
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
<tapa.testcase id="1.21">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
          "Verify Unsuccessful peer configuration"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      #Initialize TUCL 
      <tapa.hi.init/>

      #Initialize SCTP 
      <tapa.sb.init/>

      # Initialise S1AP in an ENB configuration
      <tapa.sz.enb0.init/>

      # Initialise S1AP in an MME configuration with dynamic peer config
      <tapa.sz.dynammme1.init dynamicPeer="1" DefaultSapId="1"/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send S1 SETUP REQUEST message from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_ENB_PROC" peerId="2" spId="0"/>
      </tapa.send>

      # Expect assoc indication at MME
      <tapa.expect flag="SZ_SCTP">
         <tapa.szt.assocind procId="SZAC_MME_PROC" peerId="1" suId="1"/>
      </tapa.expect>

      <tapa.expset flag="SZ_KSCTP">
         <tapa.szt.assocind procId="SZAC_MME_PROC" peerId="1" suId="1"/>
         <tapa.szt.staind procId="SZAC_ENB_PROC" peerId="2" suId="0" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_ASSOC_CFM"
                          cause = "LSZ_CAUSE_ASSOC_UP"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "2"    
                          procId = "SZAC_ENB_PROC"                 />
      </tapa.expset>

      # Send an assoc response from MME S1AP layer 
      <tapa.send>
         <tapa.szt.assocrsp procId="SZAC_MME_PROC" peerId="1" spId="1" addressType="4" priDstAddr="127.0.0.1" dstPort="10000" comProcStrm="4" locOutStrms="5" status="SZT_PRIM_NOK" cause="SZT_CAUSE_NOT_APPL"/>
      </tapa.send>


      # Expect Status Indication ASSOC DOWN at ENB  
      <tapa.expset>
         <tapa.szt.staind procId="SZAC_ENB_PROC" peerId="2" suId="0" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_TERM_IND" status="SZT_STATUS_ASSOC_DOWN"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_TERM_IND"
                          cause = "LSZ_CAUSE_ASSOC_DOWN"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "2"    
                          procId = "SZAC_ENB_PROC"                 />
      </tapa.expset>         
   </tapa.test>
      
   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # s1ap cleanup operations
      <tapa.sz.enb0.deinit/>
      <tapa.sz.mme1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.22
#
#       Desc:    Verify Unsuccessful peer configuration
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
<tapa.testcase id="1.22">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
          "Verify Unsuccessful peer configuration"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      #Initialize TUCL 
      <tapa.hi.init/>

      #Initialize SCTP 
      <tapa.sb.init/>

      # Initialise S1AP in an ENB configuration
      <tapa.sz.enb0.init/>

      # Initialise S1AP in an MME configuration with dynamic peer config
      <tapa.sz.dynammme1.init dynamicPeer="0"/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send S1 SETUP REQUEST message from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_ENB_PROC" peerId="2" spId="0"/>
      </tapa.send>

      # Expect Status Indiaction ASSOC DOWN at eNB  
      <tapa.expset flag="SZ_SCTP">
         <tapa.szt.staind procId="SZAC_ENB_PROC" peerId="2" suId="0" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_DOWN" status="SZT_STATUS_ASSOC_DOWN"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_TERM_IND"
                          cause = "LSZ_CAUSE_ASSOC_DOWN"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "2"    
                          procId = "SZAC_ENB_PROC"                 />
      </tapa.expset>         
      
      # Expect Status Indiaction ASSOC DOWN at eNB  
      <tapa.expset flag="SZ_KSCTP">
         #<tapa.szt.assocind procId="SZAC_MME_PROC" peerId="1" suId="1"/>
         <tapa.szt.staind procId="SZAC_ENB_PROC" peerId="2" suId="0" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
         <tapa.szt.staind procId="SZAC_ENB_PROC" peerId="2" suId="0" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_DOWN" status="SZT_STATUS_ASSOC_DOWN"/>
         #<tapa.szt.staind procId="SZAC_MME_PROC" peerId="1" suId="1" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_DOWN" status="SZT_STATUS_ASSOC_DOWN"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_ASSOC_CFM"
                          cause = "LSZ_CAUSE_ASSOC_UP"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "2"    
                          procId = "SZAC_ENB_PROC"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_TERM_IND"
                          cause = "LSZ_CAUSE_ASSOC_DOWN"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "2"    
                          procId = "SZAC_ENB_PROC"                 />
      </tapa.expset>         
   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # s1ap cleanup operations
      <tapa.sz.enb0.deinit/>
      <tapa.sz.mme1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.23
#
#       Desc:    Verify successful peer configuration
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
<tapa.testcase id="1.23">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
          "Verify successful peer configuration"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      #Initialize TUCL 
      <tapa.hi.init/>

      #Initialize SCTP 
      <tapa.sb.init/>

      # Initialise S1AP in an ENB configuration
      <tapa.sz.enb0.init/>

      # Initialise S1AP in an MME configuration with dynamic peer config
      <tapa.sz.dynammme1.init dynamicPeer="0"/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send S1 SETUP REQUEST message from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_ENB_PROC" peerId="2" spId="0"/>
      </tapa.send>

      # Expect Status Indiaction ASSOC UP at eNB  
      <tapa.expset flag="SZ_SCTP">
         <tapa.szt.staind procId="SZAC_ENB_PROC" peerId="2" suId="0" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_DOWN" status="SZT_STATUS_ASSOC_DOWN"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_TERM_IND"
                          cause = "LSZ_CAUSE_ASSOC_DOWN"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "2"    
                          procId = "SZAC_ENB_PROC"                 />
      </tapa.expset>         

      # Expect Status Indiaction ASSOC UP at eNB  
      <tapa.expset flag="SZ_KSCTP">
         <tapa.szt.staind procId="SZAC_ENB_PROC" peerId="2" suId="0" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
         <tapa.szt.staind procId="SZAC_ENB_PROC" peerId="2" suId="0" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_DOWN" status="SZT_STATUS_ASSOC_DOWN"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_ASSOC_CFM"
                          cause = "LSZ_CAUSE_ASSOC_UP"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "2"    
                          procId = "SZAC_ENB_PROC"                 />
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_TERM_IND"
                          cause = "LSZ_CAUSE_ASSOC_DOWN"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "2"    
                          procId = "SZAC_ENB_PROC"                 />
      </tapa.expset>         
      <tapa.delay delay="10"/>
      # Send an General re-configuration request
      <tapa.send>
         <tapa.lsz.cfg.gen procId="SZAC_MME_PROC" dynamicPeer="1" DefaultSapId="1"/>
      </tapa.send>

      # Receive the confirm for the general configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_MME_PROC"/>
      </tapa.expect>

      <tapa.delay delay="20"/>
      # Send S1 SETUP REQUEST message from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_ENB_PROC" peerId="2" spId="0"/>
      </tapa.send>

      # Expect assoc indication at MME
      <tapa.expect>
         <tapa.szt.assocind procId="SZAC_MME_PROC" peerId="1" suId="1"/>
      </tapa.expect>

      # Send an assoc response from MME S1AP layer 
      <tapa.send>
         <tapa.szt.assocrsp procId="SZAC_MME_PROC" peerId="1" spId="1" addressType="4" priDstAddr="127.0.0.1" dstPort="10000" comProcStrm="0" locOutStrms="5" status="SZT_PRIM_OK" cause="SZT_CAUSE_NOT_APPL"/>
      </tapa.send>

      #<tapa.sz.sct.delay delay="5"/>
      # Expect Status Indiaction ASSOC UP at MME and eNB  
      <tapa.expset>
         <tapa.szt.staind procId="SZAC_MME_PROC" peerId="1" suId="1" staType="SZT_STA_TYPE_PEER" reason="SZT_REASON_NOT_APPL" status="SZT_STATUS_DYNAM_PEERCFG_OK"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_UI_PEERASSOC_RSP"
                          cause = "LSZ_CAUSE_DYNAM_PEERCFG_OK"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "1"    
                          procId = "SZAC_MME_PROC"                 />
         <tapa.szt.staind procId="SZAC_MME_PROC" peerId="1" suId="1" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_ASSOC_CFM"
                          cause = "LSZ_CAUSE_ASSOC_UP"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "1"    
                          procId = "SZAC_MME_PROC"                 />
         <tapa.szt.staind procId="SZAC_ENB_PROC" peerId="2" suId="0" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_ASSOC_CFM"
                          cause = "LSZ_CAUSE_ASSOC_UP"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "2"    
                          procId = "SZAC_ENB_PROC"                 />
      </tapa.expset>         
      
      # Expect S1 SETUP REQUEST message at MME
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_MME_PROC" peerId="1" suId="1"/>
      </tapa.expect>

      # Send an S1 SETUP RESPONSE Msg from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_MME_PROC" peerId="1" spId="1"/>
      </tapa.send>

      # Expect S1 SETUP RESPONSE Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_ENB_PROC" peerId="2" suId="0"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # s1ap cleanup operations
      <tapa.sz.enb0.deinit/>
      <tapa.sz.mme1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.24
#
#       Desc:    Verify successful peer configuration
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
<tapa.testcase id="1.24">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
          "Verify successful peer configuration"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      #Initialize TUCL 
      <tapa.hi.init/>

      #Initialize SCTP 
      <tapa.sb.init/>

      # Initialise S1AP in an ENB configuration
      <tapa.sz.enb0.init/>

      # Initialise S1AP in an MME configuration with dynamic peer config
      <tapa.sz.dynammme1.init dynamicPeer="1" DefaultSapId="1"/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send S1 SETUP REQUEST message from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_ENB_PROC" peerId="2" spId="0"/>
      </tapa.send>

      # Expect assoc indication at MME
      <tapa.expect>
         <tapa.szt.assocind procId="SZAC_MME_PROC" peerId="1" suId="1"/>
      </tapa.expect>

      # Send an assoc response from MME S1AP layer 
      <tapa.send>
         <tapa.szt.assocrsp procId="SZAC_MME_PROC" peerId="1" spId="1" addressType="4" priDstAddr="127.0.0.1" dstPort="10000" comProcStrm="0" locOutStrms="5" status="SZT_PRIM_OK" cause="SZT_CAUSE_NOT_APPL"/>
      </tapa.send>

      # Expect Status Indiaction ASSOC UP at MME and eNB
      <tapa.expset>
         <tapa.szt.staind procId="SZAC_MME_PROC" peerId="1" suId="1" staType="SZT_STA_TYPE_PEER" reason="SZT_REASON_NOT_APPL" status="SZT_STATUS_DYNAM_PEERCFG_OK"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_UI_PEERASSOC_RSP"
                          cause = "LSZ_CAUSE_DYNAM_PEERCFG_OK"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "1"    
                          procId = "SZAC_MME_PROC"                 />
         <tapa.szt.staind procId="SZAC_MME_PROC" peerId="1" suId="1" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_ASSOC_CFM"
                          cause = "LSZ_CAUSE_ASSOC_UP"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "1"    
                          procId = "SZAC_MME_PROC"                 />
         <tapa.szt.staind procId="SZAC_ENB_PROC" peerId="2" suId="0" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_ASSOC_CFM"
                          cause = "LSZ_CAUSE_ASSOC_UP"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "2"    
                          procId = "SZAC_ENB_PROC"                 />
      </tapa.expset>         
      
      # Expect S1 SETUP REQUEST message at MME
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_MME_PROC" peerId="1" suId="1"/>
      </tapa.expect>

      # Send an S1 SETUP RESPONSE Msg from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_MME_PROC" peerId="1" spId="1"/>
      </tapa.send>

      # Expect S1 SETUP RESPONSE Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_ENB_PROC" peerId="2" suId="0"/>
      </tapa.expect>

      <tapa.delay delay="10"/>
      # Send an peer delete request
      <tapa.send>
         <tapa.lsz.cntrl.peer  action="ADEL" sAction="SAELMNT" procId="SZAC_ENB_PROC" peerId="2" peerId_0="2"/>
      </tapa.send>

      # Expect Status Indication ASSOC DOWN at ENB and MME 
      <tapa.expset>
       #sz008.301
         <tapa.szt.staind procId="SZAC_MME_PROC" peerId="1" suId="1" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_TERM_IND" status="SZT_STATUS_ASSOC_DOWN"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_TERM_IND"
                          cause = "LSZ_CAUSE_ASSOC_DOWN"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "1"    
                          procId = "SZAC_MME_PROC"                 />
         <tapa.szt.staind procId="SZAC_MME_PROC" peerId="1" suId="1" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_TERM_IND" status="SZT_STATUS_ASSOC_DOWN"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_TERM_IND"
                          cause = "LSZ_CAUSE_ASSOC_DOWN"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "1"    
                          procId = "SZAC_MME_PROC"                 />
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_TERM_CFM"
                          cause = "LSZ_CAUSE_PEER_DELETED"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "2"    
                          procId = "SZAC_ENB_PROC"                 />
      </tapa.expset>         

      <tapa.delay delay="20"/>
      # Send an peer config request
      <tapa.send>
         <tapa.lsz.cfg.peer peerNodeCfg="SZAC_LSZ_MME_PRC1"/>
      </tapa.send>

      # Receive the confirm confirm
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_ENB_PROC"/>
      </tapa.expect>

      <tapa.delay delay="10"/>
      # Send an S1 SETUP REQUEST message from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_ENB_PROC" peerId="2" spId="0"/>
      </tapa.send>

      # Expect Status Indication ASSOC UP at MME and eNB
      <tapa.expset>
         <tapa.szt.staind procId="SZAC_MME_PROC" peerId="1" suId="1" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
         <tapa.lsz.staInd category="LCM_CATEGORY_PROTOCOL"
                          event = "LSZ_EVENT_LI_ASSOC_CFM"
                          cause = "LSZ_CAUSE_ASSOC_UP"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "1"
                          procId = "SZAC_MME_PROC"                 />
         <tapa.szt.staind procId="SZAC_ENB_PROC" peerId="2" suId="0" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
         <tapa.lsz.staInd category= "LCM_CATEGORY_PROTOCOL"
                          event =   "LSZ_EVENT_LI_ASSOC_CFM"
                          cause =   "LSZ_CAUSE_ASSOC_UP"
                          type   =  "LSZ_USTA_DGNVAL_PEER"
                          typeId =  "2"
                          procId = "SZAC_ENB_PROC"                 />
      </tapa.expset>

      # Expect S1 SETUP REQUEST message at MME
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_MME_PROC" peerId="1" suId="1"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # s1ap cleanup operations
      <tapa.sz.enb0.deinit/>
      <tapa.sz.mme1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.25
#
#       Desc:    Verify the successful Handover preparation procedure
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc8.xml
#
#
<tapa.testcase id="1.25">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the successful Handover preparation procedure"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      # UE context setup
      <tapa.uecxt.init usrConnId="1" spConnId="1"/>

      # E-RAB setup 
      <tapa.erab.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send HANDOVER REQUIRED from ENB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_HO_REQD" peerId="2" procId="SZAC_ENB_PROC" spId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect HANDOVER REQUIRED at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_HO_REQD" procId="SZAC_MME_PROC" peerId="1" suId="1" usrConnId="1"/>
      </tapa.expect>

      # Send HANDOVER COMMAND msg from MME to ENB
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_HO_CMD" procId="SZAC_MME_PROC" peerId="1" spId="1" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect HANDOVER COMMAND indication at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_HO_CMD" peerId="2" procId="SZAC_ENB_PROC" suId="0" usrConnId="1"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.enb0.deinit/>

      # Deinit MME 
      <tapa.sz.mme1.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.26
#
#       Desc:    Verify the successful Handover Resource Allocation procedure
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc8.xml
#
#
<tapa.testcase id="1.26">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the successful Handover Resource Allocation procedure"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      <tapa.delay delay="5"/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send HANDOVER REQUEST from MME to ENB
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_HO_REQ" procId="SZAC_MME_PROC" peerId="1" spId="1" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect HANDOVER REQUEST at ENB 
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_HO_REQ" procId="SZAC_ENB_PROC" peerId="2" suId="0" spConnId="1" usrConnId="1"/>
      </tapa.expect>

      # Send HANDOVER REQUEST ACKNOWLEDGE msg from ENB to MME 
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_HO_REQ_ACK" procId="SZAC_ENB_PROC" peerId="2" spId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect HANDOVER REQUEST ACKNOWLEDGE confirmation at MME 
      <tapa.expect>
         <tapa.szt.concfm eventType="SZT_MSG_ID_HO_REQ_ACK" procId="SZAC_MME_PROC" peerId="1" suId="1" spConnId="1" usrConnId="1"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.enb0.deinit/>

      # Deinit MME 
      <tapa.sz.mme1.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.27
#
#       Desc:    Verify the successful Handover notification procedure
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc8.xml
#
#
<tapa.testcase id="1.27">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the successful Handover notification procedure"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      <tapa.delay delay="5"/>

      # Handover Request procedure 
      <tapa.horeq.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send HANDOVER NOTIFY from ENB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_HO_NTFY" peerId="2" procId="SZAC_ENB_PROC" spId="0" spConnId="1" usrConnId="1" enbId="1"/>
      </tapa.send>

      # Expect HANDOVER NOTIFY at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_HO_NTFY" procId="SZAC_MME_PROC" peerId="1" suId="1" usrConnId="1"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.enb0.deinit/>

      # Deinit MME 
      <tapa.sz.mme1.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.28
#
#       Desc:    Verify the successful Path switch Request procedure when the
#                logical S1 Connection does not exist
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc8.xml
#
#
<tapa.testcase id="1.28">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the successful Path switch Request procedure when the logical 
          S1 Connection does not exist"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      <tapa.delay delay="5"/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send PATH SWITCH REQUEST from ENB to MME
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_PATH_SWTCH_REQ" peerId="2" procId="SZAC_ENB_PROC" spId="0" usrConnId="1"/>
      </tapa.send>

      # Expect PATH SWITCH REQUEST at MME
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_PATH_SWTCH_REQ" procId="SZAC_MME_PROC" peerId="1" suId="1" usrConnId="2"/>
      </tapa.expect>

      # Send PATH SWITCH REQUEST ACK from MME to ENB
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_PATH_SWTCH_REQ_ACK" procId="SZAC_MME_PROC" peerId="1" spId="1" spConnId="1" usrConnId="2"/>
      </tapa.send>

      # Expect PATH SWITCH REQUEST ACK at ENB
      <tapa.expect>
         <tapa.szt.concfm eventType="SZT_MSG_ID_PATH_SWTCH_REQ_ACK" peerId="2" procId="SZAC_ENB_PROC" suId="0" spConnId="1" usrConnId="1"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.enb0.deinit/>

      # Deinit MME 
      <tapa.sz.mme1.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.29
#
#       Desc:    Verify successful Handover cancel procedure
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc8.xml
#
#
<tapa.testcase id="1.29">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify successful Handover cancel procedure"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      # UE context setup
      <tapa.uecxt.init usrConnId="1" spConnId="1"/>

      # E-RAB setup 
      <tapa.erab.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send HANDOVER REQUIRED from ENB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_HO_REQD" peerId="2" procId="SZAC_ENB_PROC" spId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect HANDOVER REQUIRED at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_HO_REQD" procId="SZAC_MME_PROC" peerId="1" suId="1" usrConnId="1"/>
      </tapa.expect>

      # Send HANDOVER CANCEL from ENB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_HO_CANCEL" peerId="2" procId="SZAC_ENB_PROC" spId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect HANDOVER CANCEL at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_HO_CANCEL" procId="SZAC_MME_PROC" peerId="1" suId="1" usrConnId="1"/>
      </tapa.expect>

      # Send HANDOVER CANCEL ACK msg from MME to ENB
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_HO_CANCEL_ACK" procId="SZAC_MME_PROC" peerId="1" spId="1" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect HANDOVER CANCEL ACK at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_HO_CANCEL_ACK" peerId="2" procId="SZAC_ENB_PROC" suId="0" usrConnId="1"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.enb0.deinit/>

      # Deinit MME 
      <tapa.sz.mme1.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.30
#
#       Desc:    Verify successful eNodeB Status transfer procedure
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc8.xml
#
#
<tapa.testcase id="1.30">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify successful eNodeB Status transfer procedure"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      # UE context setup
      <tapa.uecxt.init usrConnId="1" spConnId="1"/>

      # E-RAB setup 
      <tapa.erab.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send HANDOVER REQUIRED from ENB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_HO_REQD" peerId="2" procId="SZAC_ENB_PROC" spId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect HANDOVER REQUIRED at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_HO_REQD" procId="SZAC_MME_PROC" peerId="1" suId="1" usrConnId="1"/>
      </tapa.expect>

      # Send HANDOVER COMMAND msg from MME to ENB
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_HO_CMD" procId="SZAC_MME_PROC" peerId="1" spId="1" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect HANDOVER COMMAND indication at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_HO_CMD" peerId="2" procId="SZAC_ENB_PROC" suId="0" usrConnId="1"/>
      </tapa.expect>

      # Send ENB STATUS TRANSFER from ENB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ENB_STA_TRFR" peerId="2" procId="SZAC_ENB_PROC" spId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect ENB STATUS TRANSFER at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ENB_STA_TRFR" procId="SZAC_MME_PROC" peerId="1" suId="1" usrConnId="1"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.enb0.deinit/>

      # Deinit MME 
      <tapa.sz.mme1.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    1.31
#
#       Desc:    Verify successful MME Status transfer procedure
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc8.xml
#
#
<tapa.testcase id="1.31">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify successful MME Status transfer procedure"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      <tapa.delay delay="5"/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send HANDOVER REQUEST from MME to ENB
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_HO_REQ" procId="SZAC_MME_PROC" peerId="1" spId="1" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect HANDOVER REQUEST at ENB 
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_HO_REQ" procId="SZAC_ENB_PROC" peerId="2" suId="0" spConnId="1" usrConnId="1"/>
      </tapa.expect>

      # Send HANDOVER REQUEST ACKNOWLEDGE msg from ENB to MME 
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_HO_REQ_ACK" procId="SZAC_ENB_PROC" peerId="2" spId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect HANDOVER REQUEST ACKNOWLEDGE confirmation at MME 
      <tapa.expect>
         <tapa.szt.concfm eventType="SZT_MSG_ID_HO_REQ_ACK" procId="SZAC_MME_PROC" peerId="1" suId="1" spConnId="1" usrConnId="1"/>
      </tapa.expect>

      # Send MME STATUS TRANSFER msg from MME to ENB
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_MME_STA_TRFR" procId="SZAC_MME_PROC" peerId="1" spId="1" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect MME STATUS TRANSFER indication at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_MME_STA_TRFR" peerId="2" procId="SZAC_ENB_PROC" suId="0" usrConnId="1"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.enb0.deinit/>

      # Deinit MME 
      <tapa.sz.mme1.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.32
#
#       Desc:    Verify successful UE Capability Information Indication 
#                procedure
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc8.xml
#
#
<tapa.testcase id="1.32">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify successful UE Capability Information Indication procedure"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      # UE context setup
      <tapa.uecxt.init usrConnId="1" spConnId="1"/>

      # E-RAB setup procedure
      <tapa.erab.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send UE CAPABILITY INFORMATION INDICATION from ENB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_UE_CAP_INFO" peerId="2" procId="SZAC_ENB_PROC" spId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect UE CAPABILITY INFORMATION INDICATION at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_UE_CAP_INFO" procId="SZAC_MME_PROC" peerId="1" suId="1" usrConnId="1"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.enb0.deinit/>

      # Deinit MME 
      <tapa.sz.mme1.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.33
#
#       Desc:    Verify successful Overload Start procedure 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc8.xml
#
#
<tapa.testcase id="1.33">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify successful Overload Start procedure"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      <tapa.delay delay="5"/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send OVERLOAD START msg from MME to ENB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_OVLD_START" procId="SZAC_MME_PROC" peerId="1" spId="1"/>
      </tapa.send>

      # Expect OVERLOAD START indication at ENB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_OVLD_START" procId="SZAC_ENB_PROC" peerId="2" suId="0"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.enb0.deinit/>

      # Deinit MME 
      <tapa.sz.mme1.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.34
#
#       Desc:    Verify successful Overload Stop procedure 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc8.xml
#
#
<tapa.testcase id="1.34">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify successful Overload Stop procedure"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      <tapa.delay delay="5"/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send OVERLOAD STOP msg from MME to ENB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_OVLD_STOP" procId="SZAC_MME_PROC" peerId="1" spId="1"/>
      </tapa.send>

      # Expect OVERLOAD STOP indication at ENB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_OVLD_STOP" procId="SZAC_ENB_PROC" peerId="2" suId="0"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.enb0.deinit/>

      # Deinit MME 
      <tapa.sz.mme1.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.35
#
#       Desc:    Verify successful eNodeB Direct Information Transfer
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc8.xml
#
#
<tapa.testcase id="1.35">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify successful eNodeB Direct Information Transfer procedure"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      <tapa.delay delay="5"/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send eNodeB Direct Information Transfer msg from ENB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_ENB_DIR_TRANS" procId="SZAC_ENB_PROC" peerId="2" spId="0"/>
      </tapa.send>

      # Expect eNodeB Direct Information Transfer indication at MME
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_ENB_DIR_TRANS" procId="SZAC_MME_PROC" peerId="1" suId="1"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.enb0.deinit/>

      # Deinit MME 
      <tapa.sz.mme1.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.36
#
#       Desc:    Verify successful MME Direct Information Transfer procedure 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc8.xml
#
#
<tapa.testcase id="1.36">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify successful MME Direct Information Transfer Message"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      <tapa.delay delay="5"/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send MME Direct Information Transfer START msg from MME to ENB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_MME_DIR_TRANS" procId="SZAC_MME_PROC" peerId="1" spId="1"/>
      </tapa.send>

      # Expect MME Direct Information Transfer indication at ENB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_MME_DIR_TRANS" procId="SZAC_ENB_PROC" peerId="2" suId="0"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.enb0.deinit/>

      # Deinit MME 
      <tapa.sz.mme1.deinit/>

      # Deinit SCTP
      <tapa.sb.deinit/>

      # Configure TUCL
      <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.37
#
#       Desc:    Verify the successful successful configuration of S1AP as eNB
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc3.xml
#
#
<tapa.testcase id="1.37">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the successful configuration as an eNb"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an General configuration request
      <tapa.send>
         <tapa.lsz.cfg.gen />
      </tapa.send>

      # Receive the confirm for the general configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm />
      </tapa.expect>

      # Send an protocol configuration request
      <tapa.send>
         <tapa.lsz.cfg.prot protNode="SZAC_LSZ_ENB_PRC0"/>
      </tapa.send>

      # Receive the confirm for the protocol configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm />
      </tapa.expect>

      # Send an szt sap configuration request
      <tapa.send>
         <tapa.lsz.cfg.usap />
      </tapa.send>

      # Receive the confirm for the szt sap request.
      <tapa.expect>
         <tapa.lsz.cfgcfm />
      </tapa.expect>

      # Send an sct sap configuration request
      <tapa.send>
         <tapa.lsz.cfg.lsap provType="SZAC_SCTP_DM" peerNode="SZAC_LSZ_MME_PRC1"/>
      </tapa.send>

      # Receive the confirm for the sct sap request.
      <tapa.expect>
         <tapa.lsz.cfgcfm />
      </tapa.expect>

      # Send an sct sap configuration request
      <tapa.send>
         <tapa.lsz.cntrl.lSap />
      </tapa.send>

      # Receive the confirm for the sct sap request.
      <tapa.expset>
         <tapa.sct.bndreq spId="0"/> 
         <tapa.lsz.cntrlcfm />
      </tapa.expset>

      <tapa.sz.sct.delay delay="5"/>

   </tapa.test>
   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # s1ap cleanup operations
      <tapa.sz.enb0.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.38
#
#       Desc:    Verify that S1AP sends RelInd to user if 
#                it receives error message in Connecting state.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc3.xml
#
#
<tapa.testcase id="1.38">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
         "Verify that S1AP sends RelInd to user if it receives"
         " error message in Connecting state."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb0.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>
      # S1 Setup
      <tapa.dummy.s1.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send Initial UE to MME from ENB
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_ENB_PROC" peerId="2" spId="0" enbId="1" mmeId="1"/>
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send an error message to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERR_IND" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" suAssocId="2" assocIdx="0" />
      </tapa.send>

      # Expect Error message in RelInd at ENB
      <tapa.expect>
         <tapa.szt.relind eventType="SZT_MSG_ID_ERR_IND" procId="SZAC_ENB_PROC" spId="0" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummyenb0.deinit/>

   </tapa.shutdown>
</tapa.testcase>
#
#
#       Test:    1.39
#
#       Desc:    To Verify UE Context Setup, Modification and
#                MME Initiated UE Context Release Procedures.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc3.xml
#
#
<tapa.testcase id="1.39">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
          "To Verify UE Context Setup, Modification and"
          "MME Initiated UE Context Release Procedures."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb0.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # S1 Setup Request
      <tapa.dummy.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_ENB_PROC" peerId="2" spId="0" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_CXT_SETUP_REQ" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" suAssocId="2" assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.concfm eventType="SZT_MSG_ID_CXT_SETUP_REQ" peerId="2" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP RESPONSE msg from ENB to MME 
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_CXT_SETUP_RSP" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_CXT_SETUP_RSP" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION REQUEST
      <tapa.send>
        <tapa.sct.datind eventType="SZT_MSG_ID_UE_CXT_MOD_REQ" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" suAssocId="2" assocIdx="0" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_UE_CXT_MOD_REQ" peerId="2" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_UE_CXT_MOD_RSP" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION RESPONSE at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_UE_CXT_MOD_RSP" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND from MME to eNodeB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UE_CXT_REL_CMD" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" suAssocId="2" assocIdx="0" />
      </tapa.send>

      # Expect UE CONTEXT Release Command at eNodeB 
      <tapa.expect>
         <tapa.szt.relind eventType="SZT_MSG_ID_UE_CXT_REL_CMD" peerId="2" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send  UE CONTEXT Release Complete from eNB to MME
      <tapa.send>
        <tapa.szt.relrsp eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect UE Context Release Complete at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummyenb0.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    1.40
#
#       Desc:    To Verify UE Context Setup and
#                UE Initiated UE Context Release Procedures.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc3.xml
#
#
<tapa.testcase id="1.40">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
          "To Verify UE Context Setup and "
          "UE Initiated UE Context Release Procedures."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb0.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # S1 Setup Request
      <tapa.dummy.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_ENB_PROC" peerId="2" spId="0" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_CXT_SETUP_REQ" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" suAssocId="2" assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.concfm eventType="SZT_MSG_ID_CXT_SETUP_REQ" peerId="2" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP RESPONSE msg from ENB to MME 
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_CXT_SETUP_RSP" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_CXT_SETUP_RSP" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT Release Request from eNodeB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_UE_CXT_REL_REQ" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect UE CONTEXT Release Request at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_UE_CXT_REL_REQ" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND from MME to eNodeB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UE_CXT_REL_CMD" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" suAssocId="2" assocIdx="0" />
      </tapa.send>

      # Expect UE CONTEXT Release Command at eNodeB 
      <tapa.expect>
         <tapa.szt.relind eventType="SZT_MSG_ID_UE_CXT_REL_CMD" peerId="2" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send  UE CONTEXT Release Complete from eNB to MME
      <tapa.send>
        <tapa.szt.relrsp eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect UE Context Release Complete at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummyenb0.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    1.41
#
#       Desc:    To Verify E-RAB Setup, Modification and 
#                MME Initiated Release Procedures.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc3.xml
#
#
<tapa.testcase id="1.41">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
          "To Verify ERAB Setup, Modification and"
          "MME Initiated Release Procedures."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb0.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # S1 Setup Request
      <tapa.dummy.s1.init/>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_ENB_PROC" peerId="2" spId="0" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_CXT_SETUP_REQ" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" suAssocId="2" assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.concfm eventType="SZT_MSG_ID_CXT_SETUP_REQ" peerId="2" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP RESPONSE msg from ENB to MME 
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_CXT_SETUP_RSP" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_CXT_SETUP_RSP" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>


   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an ERAB SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_SETUP_REQ" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" suAssocId="2" assocIdx="0" />
      </tapa.send>

      # Expect ERAB SETUP REQUEST  at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_SETUP_REQ" peerId="2" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send an ERAB SETUP RESPONSE msg from ENB to MME 
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_SETUP_RSP" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect ERAB SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_SETUP_RSP" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send  ERAB MODIFICATION REQUEST
      <tapa.send>
        <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_MOD_REQ" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" suAssocId="2" assocIdx="0" />
      </tapa.send>

      # Expect ERAB MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_MOD_REQ" peerId="2" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send  ERAB MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_MOD_RSP" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect ERAB MODIFICATION RESPONSE at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_MOD_RSP" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send  ERAB RELEASE COMMAND
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_REL_CMD" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" suAssocId="2" assocIdx="0" />
      </tapa.send>

      # Expect ERAB RELEASE COMMAND
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_REL_CMD" peerId="2" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send  ERAB RELEASE COMPLETE
      <tapa.send>
        <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_REL_CMPLT" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect ERAB RELEASE COMPLETE 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_REL_CMPLT" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummyenb0.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    1.42
#
#       Desc:    To Verify E-RAB Setup and 
#                ENodeB Initiated E-RAB Release Procedures.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc3.xml
#
#
<tapa.testcase id="1.42">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
          "To Verify E-RAB Setup and"
          "ENodeB Initiated E-RAB Release Procedures."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb0.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # S1 Setup Request
      <tapa.dummy.s1.init/>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_ENB_PROC" peerId="2" spId="0" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_CXT_SETUP_REQ" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" suAssocId="2" assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.concfm eventType="SZT_MSG_ID_CXT_SETUP_REQ" peerId="2" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP RESPONSE msg from ENB to MME 
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_CXT_SETUP_RSP" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_CXT_SETUP_RSP" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>


   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an ERAB SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_SETUP_REQ" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" suAssocId="2" assocIdx="0" />
      </tapa.send>

      # Expect ERAB SETUP REQUEST  at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_SETUP_REQ" peerId="2" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send an ERAB SETUP RESPONSE msg from ENB to MME 
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_SETUP_RSP" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect ERAB SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_SETUP_RSP" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send  ERAB Release Request from eNB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_REL_REQ" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect E-RAB Release Request at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_REL_REQ" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send  ERAB Release  COMMAND from MME to ENodeB 
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_REL_CMD" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" suAssocId="2" assocIdx="0" />
      </tapa.send>

      # Expect ERAB Release Command at eNodeB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_REL_CMD" peerId="2" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send  ERAB Release Complete from  eNB to MME
      <tapa.send>
        <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_REL_CMPLT" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect ERAB Release Complete at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_REL_CMPLT" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummyenb0.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    1.43
#
#       Desc:    To Verify NAS Downlink Procedure
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc3.xml
#
#
<tapa.testcase id="1.43">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
          "To Verify NAS Downlink Procedure."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb0.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # S1 Setup Request
      <tapa.dummy.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an Downlink NAS Message to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_DL_NAS_TPT" suId="0" procId="SZAC_ENB_PROC" enbId="99" mmeId="1" suAssocId="2" assocIdx="0" />
      </tapa.send>

      # Expect uplink NAS Message at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERR_IND" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" choice="SZT_CAUSE_RADIONW" cause="14" />
      </tapa.expect>
   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummyenb0.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    1.44
#
#       Desc:    To Verify NAS Uplink Procedure
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc3.xml
#
#
<tapa.testcase id="1.44">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
          "To Verify NAS Uplink Procedure."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb0.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # S1 Setup Request
      <tapa.dummy.s1.init/>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_ENB_PROC" peerId="2" spId="0" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an Downlink NAS Message to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_DL_NAS_TPT" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" suAssocId="2" assocIdx="0" />
      </tapa.send>

      # Expect Downlink NAS Message to ENB
      <tapa.expect>
         <tapa.szt.concfm eventType="SZT_MSG_ID_DL_NAS_TPT" peerId="2" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send an Uplink NAS Message to MME 
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_UL_NAS_TPT" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect Uplink NAS Message to ENB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_UL_NAS_TPT" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummyenb0.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    1.45
#
#       Desc:    To Verify Paging Procedure
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc3.xml
#
#
<tapa.testcase id="1.45">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
          "To Verify Paging Procedure."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb0.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # S1 Setup Request
      <tapa.dummy.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an paging message to eNodeB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_PAGING" suId="0" procId="SZAC_ENB_PROC" suAssocId="2" assocIdx="0" />
      </tapa.send>

      # Expect Paging Message at ENB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_PAGING" peerId="2" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummyenb0.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    1.46
#
#       Desc:    Verify that error message is sent to peer if the
#                node gets messages that is not supported.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc3.xml
#
#
<tapa.testcase id="1.46">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
          "To Verify UE Context Setup, Modification and"
          "MME Initiated UE Context Release Procedures."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb0.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # S1 Setup Request
      <tapa.dummy.s1.init/>

      <tapa.dummy.uecxt.init usrConnId="1" spConnId="1" enbId="1" mmeId="1"/>
      <tapa.dummy.uecxt.init usrConnId="2" spConnId="2" enbId="2" mmeId="2"/>
      <tapa.dummy.uecxt.init usrConnId="3" spConnId="3" enbId="3" mmeId="3"/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_ENB_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="3" procId="SZAC_ENB_PROC"/>
      </tapa.expect>

      # Send an RESET message from MME to eNB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_RESET"  suId="0" procId="SZAC_ENB_PROC" suAssocId="2" assocIdx="0"  enbId1="1" mmeId1="1" enbId2="2" mmeId2="2" lstCnt="2"/>
      </tapa.send>

      # Expect RESET Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_RESET" procId="SZAC_ENB_PROC" peerId="2" suId="0" />
      </tapa.expect>

      # Send an RESET ACK Msg from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_RESET_ACK" procId="SZAC_ENB_PROC" peerId="2"/>
      </tapa.send>

      # Expect RESET ACK Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_RESET_ACK" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_ENB_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="1" procId="SZAC_ENB_PROC"/>
      </tapa.expect>

      # Send an RESET message from MME to eNB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_RESET"  suId="0" procId="SZAC_ENB_PROC" suAssocId="2" assocIdx="0" />
      </tapa.send>

      # Expect RESET Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_RESET" procId="SZAC_ENB_PROC" peerId="2" suId="0" />
      </tapa.expect>

      # Send an RESET ACK Msg from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_RESET_ACK" procId="SZAC_ENB_PROC" peerId="2"/>
      </tapa.send>

      # Expect RESET ACK Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_RESET_ACK" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_ENB_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="0" procId="SZAC_ENB_PROC"/>
      </tapa.expect>

</tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummyenb0.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    1.47
#
#       Desc:    Verify that error message is sent to peer if the
#                node gets messages that is not supported.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc3.xml
#
#
<tapa.testcase id="1.47">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
          "To Verify UE Context Setup, Modification and"
          "MME Initiated UE Context Release Procedures."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb0.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # S1 Setup Request
      <tapa.dummy.s1.init/>

      <tapa.dummy.uecxt.init usrConnId="1" spConnId="1" enbId="1" mmeId="1"/>
      <tapa.dummy.uecxt.init usrConnId="2" spConnId="2" enbId="2" mmeId="2"/>
      <tapa.dummy.uecxt.init usrConnId="3" spConnId="3" enbId="3" mmeId="3"/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_ENB_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="3" procId="SZAC_ENB_PROC"/>
      </tapa.expect>

      # Send an RESET message from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_RESET"  suId="0" procId="SZAC_ENB_PROC" peerId="2" enbId1="1" mmeId1="1" enbId2="2" mmeId2="2" lstCnt="2"/>
      </tapa.send>

      # Expect RESET Msg at eNB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_RESET" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send an RESET ACK Msg from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_RESET_ACK"  suId="0" procId="SZAC_ENB_PROC" suAssocId="2" assocIdx="0" peerId="2" enbId1="1" mmeId1="1" enbId2="2" mmeId2="2" lstCnt="2"/>
      </tapa.send>

      # Expect RESET ACK Msg at MME
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_RESET_ACK" peerId="2" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_ENB_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="1" procId="SZAC_ENB_PROC"/>
      </tapa.expect>

      # Send an RESET message from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_RESET"  suId="0" procId="SZAC_ENB_PROC" peerId="2" />
      </tapa.send>

      # Expect RESET Msg at eNB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_RESET" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send an RESET ACK Msg from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_RESET_ACK"  suId="0" procId="SZAC_ENB_PROC" suAssocId="2" assocIdx="0" peerId="2" />
      </tapa.send>

      # Expect RESET ACK Msg at MME
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_RESET_ACK" peerId="2" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_ENB_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="0" procId="SZAC_ENB_PROC"/>
      </tapa.expect>


</tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummyenb0.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    1.48
#
#       Desc:    Verify that error message is sent to peer if the
#                node gets messages that is not supported.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc3.xml
#
#
<tapa.testcase id="1.48">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
          "To Verify UE Context Setup, Modification and"
          "MME Initiated UE Context Release Procedures."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb0.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>


   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # S1 Setup Request
      <tapa.dummy.s1.init/>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummyenb0.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.49
#
#       Desc:    Verify that error message is sent to peer if the
#                node gets messages that is not supported.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc3.xml
#
#
<tapa.testcase id="1.49">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
          "To Verify ERAB Setup, Modification and"
          "MME Initiated Release Procedures."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb0.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # S1 Setup Request
      <tapa.dummy.s1.init/>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_ENB_PROC" peerId="2" spId="0" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_CXT_SETUP_REQ" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.concfm eventType="SZT_MSG_ID_CXT_SETUP_REQ" peerId="1" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP RESPONSE msg from ENB to MME 
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_CXT_SETUP_RSP" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_CXT_SETUP_RSP" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

      # Send an ERAB SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_SETUP_REQ" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" suAssocId="2" assocIdx="0" />
      </tapa.send>

      # Expect ERAB SETUP REQUEST  at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_SETUP_REQ" peerId="2" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send an ERAB SETUP RESPONSE msg from ENB to MME 
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_SETUP_RSP" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect ERAB SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_SETUP_RSP" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an ERAB SETUP RESPONSE msg from ENB to MME 
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_HO_REQD" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect ERAB SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_HO_REQD" procId="SZAC_ENB_PROC" spId="0" assocIdx="0" />
      </tapa.expect>

      # Send  ERAB MODIFICATION REQUEST
      <tapa.send>
        <tapa.sct.datind eventType="SZT_MSG_ID_HO_CMD" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" assocIdx="0" />
      </tapa.send>

      # Expect ERAB MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_HO_CMD" peerId="1" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send  ERAB RELEASE COMMAND
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UE_CXT_REL_CMD" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" assocIdx="0" />
      </tapa.send>

      # Expect ERAB RELEASE COMMAND
      <tapa.expect>
         <tapa.szt.relind eventType="SZT_MSG_ID_UE_CXT_REL_CMD" peerId="1" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

      # Send  ERAB RELEASE COMPLETE
      <tapa.send>
        <tapa.szt.relrsp eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" procId="SZAC_ENB_PROC" suId="1" />
      </tapa.send>

      # Expect ERAB RELEASE COMPLETE 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" procId="SZAC_ENB_PROC" spId="0" suAssocId="2" assocIdx="0" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummyenb0.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    1.50
#
#       Desc:    Verify that error message is sent to peer if the
#                node gets messages that is not supported.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc3.xml
#
#
<tapa.testcase id="1.50">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="S1AP"/>

      <tapa.desc>
          "To Verify ERAB Setup, Modification and"
          "MME Initiated Release Procedures."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb0.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # S1 Setup Request
      <tapa.dummy.s1.init/>

   </tapa.cfg>
   # Test Steps subsection
   <tapa.test>

      # Send an ERAB SETUP RESPONSE msg from ENB to MME 
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_PATH_SWTCH_REQ" procId="SZAC_ENB_PROC" spId="0" enbId="1" peerId="2"/>
      </tapa.send>

      # Expect ERAB SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_PATH_SWTCH_REQ" procId="SZAC_ENB_PROC" spId="0" assocIdx="0" />
      </tapa.expect>

      # Send  ERAB MODIFICATION REQUEST
      <tapa.send>
        <tapa.sct.datind eventType="SZT_MSG_ID_PATH_SWTCH_REQ_ACK" suId="0" procId="SZAC_ENB_PROC" enbId="1" mmeId="1" assocIdx="0" />
      </tapa.send>

      # Expect ERAB MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.szt.concfm eventType="SZT_MSG_ID_PATH_SWTCH_REQ_ACK" peerId="2" procId="SZAC_ENB_PROC" suId="0" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummyenb0.deinit/>

   </tapa.shutdown>
</tapa.testcase>

#
#
#       Test:    1.51
#
#       Desc:    Verify the successful successful configuration of S1AP as MME
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="1.51">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the successful configuration as an MME"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an General configuration request
      <tapa.send>
         <tapa.lsz.cfg.gen procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the confirm for the general configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an protocol configuration request
      <tapa.send>
         <tapa.lsz.cfg.prot procId="SZAC_XTA_PROC" protNode="SZAC_LSZ_MME_PRC1"/>
      </tapa.send>

      # Receive the confirm for the protocol configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC" />
      </tapa.expect>

      # Send an szt sap configuration request
      <tapa.send>
         <tapa.lsz.cfg.usap procId="SZAC_XTA_PROC" sapId="1"/>
      </tapa.send>

      # Receive the confirm for the szt sap request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an sct sap configuration request
      <tapa.send>
         <tapa.lsz.cfg.lsap peerNode="SZAC_LSZ_ENB_PRC0" procId="SZAC_XTA_PROC" suId="1" spId="1" provType="SZAC_SCTP_DM"/>
      </tapa.send>

      # Receive the confirm for the sct sap request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an peer configuration request
      <tapa.send>
         <tapa.lsz.cfg.peer procId="SZAC_XTA_PROC" peerNodeCfg="SZAC_LSZ_ENB_PRC0"/>
      </tapa.send>

      # Receive the confirm for the peer configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC" />
      </tapa.expect>

      # Send an sct sap configuration request
      <tapa.send>
         <tapa.lsz.cntrl.lSap procId="SZAC_XTA_PROC" lSapId="1"/>
      </tapa.send>

         # Receive the bind request and confirm for the sct sap request.
         # Receive the confirm for the sct sap request.
      <tapa.expset>
         <tapa.sct.bndreq spId="1" procId="SZAC_XTA_PROC" suId="1"/> 
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expset>

   <tapa.delay delay="10"/>
   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Do shutdown
      <tapa.delay delay="10"/>

      <tapa.send>
         <tapa.lsz.cntrl.shutdown procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Do shutdown
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      <tapa.delay delay="10"/>


   #   <tapa.sz.mme1.deinit/>
   #   <tapa.sb.deinit/>
   #  <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.52
#
#       Desc:    Verify that eNB S1AP on receiving E-RAB 
#                SETUP REQUEST message from MME S1AP in state 
#                other than ESTABLISHED state, responds with 
#                error message to MME S1AP (using dummy SCTP).
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="1.52">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that MME S1AP on receiving E- RAB "
         "SETUP REQUEST message from MME S1AP in state "
         "other than ESTABLISHED state, responds with  "
         "error message to ENB S1AP (using dummy SCTP)."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_INIT_UE_MSG" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_INIT_UE_MSG" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION REQUEST
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_UE_CXT_MOD_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_UE_CXT_MOD_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UE_CXT_MOD_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION RESPONSE at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_UE_CXT_MOD_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.relreq eventType="SZT_MSG_ID_UE_CXT_REL_CMD" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_UE_CXT_REL_CMD" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.szt.relcfm eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.53
#
#       Desc:    Verify that eNB S1AP on receiving E-RAB 
#                SETUP REQUEST message from MME S1AP in state 
#                other than ESTABLISHED state, responds with 
#                error message to MME S1AP (using dummy SCTP).
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="1.53">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
            "Verify that MME S1AP on receiving E-RAB "
            "SETUP REQUEST message from MME S1AP in state "
            "other than ESTABLISHED state, responds with  "
            "error message to ENB S1AP (using dummy SCTP)."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>

      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_INIT_UE_MSG" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_INIT_UE_MSG" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UE_CXT_REL_REQ" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION RESPONSE at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_UE_CXT_REL_REQ" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.relreq eventType="SZT_MSG_ID_UE_CXT_REL_CMD" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_UE_CXT_REL_CMD" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.szt.relcfm eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    1.54
#
#       Desc:    Verify that eNB S1AP on receiving E-RAB 
#                SETUP REQUEST message from MME S1AP in state 
#                other than ESTABLISHED state, responds with 
#                error message to MME S1AP (using dummy SCTP).
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="1.54">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
          "To Verify ERAB Setup, Modification and"
          "MME Initiated Release Procedures."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_INIT_UE_MSG" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_INIT_UE_MSG" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_SETUP_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_SETUP_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION REQUEST
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_MOD_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_MOD_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_MOD_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION RESPONSE at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_MOD_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_REL_CMD" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_REL_CMD" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_REL_CMPLT" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_REL_CMPLT" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.55
#
#       Desc:    Verify that eNB S1AP on receiving E-RAB 
#                SETUP REQUEST message from MME S1AP in state 
#                other than ESTABLISHED state, responds with 
#                error message to MME S1AP (using dummy SCTP).
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="1.55">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
          "To Verify ERAB Setup, Modification and"
          "ENB Initiated Release Procedures."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_INIT_UE_MSG" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_INIT_UE_MSG" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_SETUP_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_SETUP_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_REL_REQ" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION RESPONSE at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_REL_REQ" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_REL_CMD" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_REL_CMD" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_REL_CMPLT" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_REL_CMPLT" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.56
#
#       Desc:    Verify that eNB S1AP on receiving E-RAB 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="1.56">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
      "To verify that DL NAS TRANSPORT initiates a connection"
      "on the MME side"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UL_NAS_TPT" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.concfm eventType="SZT_MSG_ID_UL_NAS_TPT" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    1.57
#
#       Desc:    Verify that eNB S1AP on receiving E-RAB 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="1.57">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
      "To verify that DL NAS TRANSPORT is handled in connecting"
      "state on the MME side"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_INIT_UE_MSG" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_INIT_UE_MSG" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

       # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UL_NAS_TPT" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_UL_NAS_TPT" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.58
#
#       Desc:    Verify that eNB S1AP on receiving E-RAB 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="1.58">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
      "Verify the successful paging procedure at the MME"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

       # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_PAGING" procId="SZAC_XTA_PROC" peerId="1" spId="1"  />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_PAGING" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.59
#
#       Desc:    Verify that eNB S1AP on receiving E-RAB 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="1.59">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the PARTIAL RESET is processed successfull"
         "at the MME"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

      <tapa.dummymme.uecxt.init usrConnId="1" spConnId="1" enbId="1" mmeId="1"/>
      <tapa.dummymme.uecxt.init usrConnId="2" spConnId="2" enbId="2" mmeId="2"/>
      <tapa.dummymme.uecxt.init usrConnId="3" spConnId="3" enbId="3" mmeId="3"/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="3" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an RESET message from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_RESET"  spId="1" procId="SZAC_XTA_PROC" peerId="1" enbId1="1" mmeId1="1" enbId2="2" mmeId2="2" lstCnt="2"/>
      </tapa.send>

      # Expect RESET Msg at eNB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_RESET" procId="SZAC_XTA_PROC" spId="1"  assocIdx="0" />
      </tapa.expect>

      # Send an RESET ACK Msg from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_RESET_ACK"  suId="1" procId="SZAC_XTA_PROC" peerId="1" enbId1="1" mmeId1="1" enbId2="2" mmeId2="2" lstCnt="2"/>
      </tapa.send>

      # Expect RESET ACK Msg at MME
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_RESET_ACK" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="1" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an RESET message from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_RESET"  spId="1" procId="SZAC_XTA_PROC" peerId="1" />
      </tapa.send>

      # Expect RESET Msg at eNB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_RESET" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an RESET ACK Msg from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_RESET_ACK"  suId="1" procId="SZAC_XTA_PROC" assocIdx="0" peerId="1" />
      </tapa.send>

      # Expect RESET ACK Msg at MME
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_RESET_ACK" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="0" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    1.60
#
#       Desc:    Verify that eNB S1AP on receiving E-RAB 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="1.60">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
      "Verify the successful RESET procedure at the MME"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

      <tapa.dummymme.uecxt.init usrConnId="1" spConnId="1" enbId="1" mmeId="1"/>
      <tapa.dummymme.uecxt.init usrConnId="2" spConnId="2" enbId="2" mmeId="2"/>
      <tapa.dummymme.uecxt.init usrConnId="3" spConnId="3" enbId="3" mmeId="3"/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="3" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an RESET message from MME to eNB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_RESET"  suId="1" procId="SZAC_XTA_PROC" assocIdx="0"  enbId1="1" mmeId1="1" enbId2="2" mmeId2="2" lstCnt="2"/>
      </tapa.send>

      # Expect RESET Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_RESET" procId="SZAC_XTA_PROC" peerId="1" suId="1" />
      </tapa.expect>

      # Send an RESET ACK Msg from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_RESET_ACK" procId="SZAC_XTA_PROC" peerId="1" spId="1"/>
      </tapa.send>

      # Expect RESET ACK Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_RESET_ACK" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="1" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an RESET message from MME to eNB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_RESET"  suId="1" procId="SZAC_XTA_PROC" assocIdx="0" />
      </tapa.send>

      # Expect RESET Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_RESET" procId="SZAC_XTA_PROC" peerId="1" suId="1" />
      </tapa.expect>

      # Send an RESET ACK Msg from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_RESET_ACK" procId="SZAC_XTA_PROC" peerId="1" spId="1"/>
      </tapa.send>

      # Expect RESET ACK Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_RESET_ACK" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="0" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

 
   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.61
#
#       Desc:    Verify that eNB S1AP on receiving E-RAB 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="1.61">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
      " Verify that S1 Init is performed successfully at the MME"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      #S1 Setup
      <tapa.dummymme.s1.init/>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    1.62
#
#       Desc:    Verify that eNB S1AP on receiving E-RAB 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="1.62">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
      "Verify that a Handover is established successfully"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init dynamicPeer="1" DefaultSapId="1"/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>
      #S1 Setup for Target eNodeB
      # Send Assoc Ind at MME 
      <tapa.send>
         <tapa.sct.assocind procId="SZAC_XTA_PROC" suId="1" suEndpId="1" assocIdx="1" type="SCT_ASSOC_IND_COOKIE" numIps="1" Ipaddr="1234"/> 
      </tapa.send>

      # Expect assoc indication at MME
      <tapa.expect>
         <tapa.szt.assocind procId="SZAC_XTA_PROC" peerId="2" suId="1"/>
      </tapa.expect>

      # Send an assoc response from MME S1AP layer 
      <tapa.send>
         <tapa.szt.assocrsp procId="SZAC_XTA_PROC" peerId="2" spId="1" addressType="4" priDstAddr="1234" dstPort="10000" comProcStrm="0" locOutStrms="5" status="SZT_PRIM_OK" cause="SZT_CAUSE_NOT_APPL"/>
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expset>
        <tapa.sct.assocrsp procId="SZAC_XTA_PROC" spId="1" assocIdx="1" spEndpId="0" type="SCT_ASSOC_IND_COOKIE" port="1025"/> 
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="2" suId="1" staType="SZT_STA_TYPE_PEER" reason="SZT_REASON_NOT_APPL" status="SZT_STATUS_DYNAM_PEERCFG_OK"/>
      </tapa.expset>
  
      # Send Sta Ind at MME 
      <tapa.send>
         <tapa.sct.staind procId="SZAC_XTA_PROC" suId="1" assocIdx="1" status="SCT_STATUS_COMM_UP"/> 
      </tapa.send>

      # Expect Status Indiaction ASSOC UP at MME & eNB 
      <tapa.expect>
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="2" suId="1" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
      </tapa.expect>         
      
      # Send an S1 SETUP REQ Msg from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_SETUP_REQ" suId="1" procId="SZAC_XTA_PROC" assocIdx="0" strmId="1"/>
      </tapa.send>

      # Expect S1 SETUP REQ Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" suId="1"/>
      </tapa.expect>

      # Send an S1 SETUP RESPONSE Msg from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_XTA_PROC" peerId="1" spId="1"/>
      </tapa.send>
    
      # Expect S1 Setup Response at ENB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" suAssocId="0" assocIdx="0"/>
      </tapa.expect>
 
      <tapa.dummymme.uecxt.init usrConnId="1" spConnId="1" enbId="1" mmeId="1"/>

   </tapa.cfg>

  <tapa.test>
 
   # Test Steps subsection

       # Send an HO REQD msg from  Source ENB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_HO_REQD" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_HO_REQD" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_HO_REQ" procId="SZAC_XTA_PROC" peerId="2" spId="1" mmeId="2"  />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_HO_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="1" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_HO_REQ_ACK" suId="1" procId="SZAC_XTA_PROC" enbId="2" mmeId="2"  assocIdx="1" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.concfm eventType="SZT_MSG_ID_HO_REQ_ACK" peerId="2" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_HO_CMD" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" spConnId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_HO_CMD" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

       # Send an HO REQD msg from  Source ENB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_HO_NTFY" suId="1" procId="SZAC_XTA_PROC" enbId="2" mmeId="2"  assocIdx="1" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_HO_NTFY" peerId="2" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.relreq eventType="SZT_MSG_ID_UE_CXT_REL_CMD" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" spConnId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_UE_CXT_REL_CMD" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.szt.relcfm eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.send>
         <tapa.lsz.cntrl.shutdown procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Expect Term Req to dummy SCTP
      <tapa.expset>
         <tapa.sct.termreq procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spAssocId="1" assocIdType="2"/> 
         <tapa.sct.termreq procId="SZAC_XTA_PROC" spId="1" assocIdx="1" spAssocId="1" assocIdType="2"/> 
      </tapa.expset>
  
      # Expect EndpClose Req to dummy SCTP
      <tapa.expect>
         <tapa.sct.endpclosereq procId="SZAC_XTA_PROC" spId="1" suEndpId="0" endpIdType="2"/> 
      </tapa.expect>
  
      # Do shutdown
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.63
#
#       Desc:    Verify that eNB S1AP on receiving E-RAB 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="1.63">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "To verify that Path Switch Request at MME initiates "
         "a new connection"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_MME"/>
      </tapa.ifdef>

      <tapa.ifndef>
         <tapa.flag id="SZAC_VXWORKS"/>
      </tapa.ifndef>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init dynamicPeer="1" DefaultSapId="1"/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>
      #S1 Setup for Target eNodeB
      # Send Assoc Ind at MME 
      <tapa.send>
         <tapa.sct.assocind procId="SZAC_XTA_PROC" suId="1" suEndpId="1" assocIdx="1" type="SCT_ASSOC_IND_COOKIE" numIps="1" Ipaddr="1234"/> 
      </tapa.send>

      # Expect assoc indication at MME
      <tapa.expect>
         <tapa.szt.assocind procId="SZAC_XTA_PROC" peerId="2" suId="1"/>
      </tapa.expect>

      # Send an assoc response from MME S1AP layer 
      <tapa.send>
         <tapa.szt.assocrsp procId="SZAC_XTA_PROC" peerId="2" spId="1" addressType="4" priDstAddr="1234" dstPort="10000" comProcStrm="0" locOutStrms="5" status="SZT_PRIM_OK" cause="SZT_CAUSE_NOT_APPL"/>
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expset>
         <tapa.sct.assocrsp procId="SZAC_XTA_PROC" spId="1" assocIdx="1" spEndpId="0" type="SCT_ASSOC_IND_COOKIE" port="1025"/> 
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="2" suId="1" staType="SZT_STA_TYPE_PEER" reason="SZT_REASON_NOT_APPL" status="SZT_STATUS_DYNAM_PEERCFG_OK"/>
      </tapa.expset>
  
      # Send Sta Ind at MME 
      <tapa.send>
         <tapa.sct.staind procId="SZAC_XTA_PROC" suId="1" assocIdx="1" status="SCT_STATUS_COMM_UP"/> 
      </tapa.send>

      # Expect Status Indiaction ASSOC UP at MME & eNB 
      <tapa.expect>
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="2" suId="1" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
      </tapa.expect>         
      
      # Send an S1 SETUP REQ Msg from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_SETUP_REQ" suId="1" procId="SZAC_XTA_PROC" assocIdx="0" strmId="1"/>
      </tapa.send>

      # Expect S1 SETUP REQ Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" suId="1"/>
      </tapa.expect>

      # Send an S1 SETUP RESPONSE Msg from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_XTA_PROC" peerId="1" spId="1"/>
      </tapa.send>
    
      # Expect S1 Setup Response at ENB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" suAssocId="0" assocIdx="0"/>
      </tapa.expect>
 
      <tapa.dummymme.uecxt.init usrConnId="1" spConnId="1" enbId="1" mmeId="1"/>

   </tapa.cfg>

  <tapa.test>
 
   # Test Steps subsection

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_PATH_SWTCH_REQ" suId="1" procId="SZAC_XTA_PROC" enbId="2" mmeId="2"  assocIdx="1" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_PATH_SWTCH_REQ" peerId="2" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_PATH_SWTCH_REQ_ACK" procId="SZAC_XTA_PROC" peerId="2" spId="1" enbId="2" mmeId="2" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_PATH_SWTCH_REQ_ACK" procId="SZAC_XTA_PROC" spId="1" assocIdx="1" />
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.relreq eventType="SZT_MSG_ID_UE_CXT_REL_CMD" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" spConnId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_UE_CXT_REL_CMD" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.szt.relcfm eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.send>
         <tapa.lsz.cntrl.shutdown procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Expect Term Req to dummy SCTP
      <tapa.expset>
         <tapa.sct.termreq procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spAssocId="1" assocIdType="2"/> 
         <tapa.sct.termreq procId="SZAC_XTA_PROC" spId="1" assocIdx="1" spAssocId="1" assocIdType="2"/> 
      </tapa.expset>
  
      # Expect EndpClose Req to dummy SCTP
      <tapa.expect>
         <tapa.sct.endpclosereq procId="SZAC_XTA_PROC" spId="1" suEndpId="0" endpIdType="2"/> 
      </tapa.expect>
  
      # Do shutdown
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.64
#
#       Desc:    Verify that eNB S1AP on receiving kill request 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="1.64">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the Kill Request is processed successfully"
         "at the eNB"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

    # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
           <tapa.flag id="LSZV1"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      <tapa.delay delay="5"/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an Kill Request message from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_KILL_REQ" procId="SZAC_MME_PROC" peerId="1" spId="1"/>
      </tapa.send>

      # Expect Kill Request Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_KILL_REQ" procId="SZAC_ENB_PROC" peerId="2" suId="0"/>
      </tapa.expect>

      # Send an Kill Response Msg from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_KILL_RSP" procId="SZAC_ENB_PROC" peerId="2" spId="0"/>
      </tapa.send>

      # Expect Kill Response Msg at MME
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_KILL_RSP" procId="SZAC_MME_PROC" peerId="1" suId="1"/>
      </tapa.expect>

  </tapa.test>

  # Clean subsection
  <tapa.clean/>

  # Shutdown subsection
  <tapa.shutdown>

     # Deinit ENB
     <tapa.sz.enb0.deinit/>

     # Deinit MME
     <tapa.sz.mme1.deinit/>

     # Deinit SCTP
     <tapa.sb.deinit/>

     # Configure TUCL
     <tapa.hi.deinit/>

  </tapa.shutdown>


</tapa.testcase>

#
#
#       Test:    1.65
#
#       Desc:    Verify that eNB S1AP on receiving Downlink Non UE Associated  LPPa Transport
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="1.65">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the Downlink Non UE Associated  LPPa Transport is processed successfully"
         "at the eNB"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

    # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
           <tapa.flag id="LSZV1"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      <tapa.delay delay="5"/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an Downlink Non UE Associated LPPa Transport message from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_DNLNK_NON_UE_ASSOC_LPPA_TPRT" procId="SZAC_MME_PROC" peerId="1" spId="1" routingId="255" lppaPdu="111" lppaPduLen="3"/>
      </tapa.send>

      # Expect Downlink Non UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_DNLNK_NON_UE_ASSOC_LPPA_TPRT" procId="SZAC_ENB_PROC" peerId="2" suId="0" routingId="255" lppaPdu="111" lppaPduLen="3"/>
      </tapa.expect>

  </tapa.test>

  # Clean subsection
  <tapa.clean/>

  # Shutdown subsection
  <tapa.shutdown>

     # Deinit ENB
     <tapa.sz.enb0.deinit/>

     # Deinit MME
     <tapa.sz.mme1.deinit/>

     # Deinit SCTP
     <tapa.sb.deinit/>

     # Configure TUCL
     <tapa.hi.deinit/>

  </tapa.shutdown>


</tapa.testcase>

#
#
#       Test:    1.66
#
#       Desc:    Verify that eNB S1AP on receiving Uplink Non UE Associated  LPPa Transport
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="1.66">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the Uplink Non UE Associated  LPPa Transport is processed successfully"
         "at the eNB"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

    # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
           <tapa.flag id="LSZV1"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  

      <tapa.delay delay="10"/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an Uplink Non UE Associated LPPa Transport message from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_UPLNK_NON_UE_ASSOC_LPPA_TPRT" procId="SZAC_ENB_PROC" peerId="2" spId="0" routingId="255" lppaPdu="111" lppaPduLen="3"/>
      </tapa.send>

      # Expect Uplink Non UE Associated LPPa Transport Msg at MME
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_UPLNK_NON_UE_ASSOC_LPPA_TPRT" procId="SZAC_MME_PROC" peerId="1" suId="1" routingId="255" lppaPdu="111" lppaPduLen="3"/>
      </tapa.expect>

  </tapa.test>

  # Clean subsection
  <tapa.clean/>

  # Shutdown subsection
  <tapa.shutdown>

     # Deinit MME
     <tapa.sz.mme1.deinit/>

     # Deinit ENB
     <tapa.sz.enb0.deinit/>

                    
     # Deinit SCTP
     <tapa.sb.deinit/>

     # Configure TUCL
     <tapa.hi.deinit/> 

  </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.67
#
#       Desc:    Verify that eNB S1AP on receiving Downlink UE Associated  LPPa Transport
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="1.67">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the Downlink UE Associated  LPPa Transport is processed successfully"
         "at the eNB"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

    # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
           <tapa.flag id="LSZV1"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  
      
      # Initial Context Setup
      <tapa.uecxt.init usrConnId="1" spConnId="1" enbId="1" mmeId="1"/>


   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an Downlink UE Associated LPPa Transport message from MME to eNB
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_DNLNK_UE_ASSOC_LPPA_TPRT" procId="SZAC_MME_PROC" peerId="1" spId="1" routingId="255" lppaPdu="111" lppaPduLen="3" spConnId="1" usrConnId="1" enbId="1" mmeId="1"/>
      </tapa.send>

      # Expect Downlink UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_DNLNK_UE_ASSOC_LPPA_TPRT" procId="SZAC_ENB_PROC" peerId="2" suId="0" routingId="255" lppaPdu="111" lppaPduLen="3" usrConnId="1"/>
      </tapa.expect>

  </tapa.test>

  # Clean subsection
  <tapa.clean/>

  # Shutdown subsection
  <tapa.shutdown>

     <tapa.delay delay="5"/>
       
     # Deinit ENB
     <tapa.sz.enb0.deinit/>

     # Deinit MME
     <tapa.sz.mme1.deinit/>

     # Deinit SCTP
     <tapa.sb.deinit/>

     # Configure TUCL
     <tapa.hi.deinit/>

  </tapa.shutdown>


</tapa.testcase>

#
#
#       Test:    1.68
#
#       Desc:    Verify that eNB S1AP on receiving Uplink UE Associated  LPPa Transport
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="1.68">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the Uplink UE Associated  LPPa Transport is processed successfully"
         "at the eNB"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

    # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="SZAC_MME"/>
           <tapa.flag id="LSZV1"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Configure TUCL
      <tapa.hi.init/>

      # Configure SCTP
      <tapa.sb.init/>

      # Bring up ENB
      <tapa.sz.enb0.init/>

      # Bring up MME 
      <tapa.sz.mme1.init/>
  
      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_MME_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_MME_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.s1.init/>  
      
      # Initial Context Setup
      <tapa.uecxt.init usrConnId="1" spConnId="1" enbId="1" mmeId="1"/>


   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an Uplink UE Associated LPPa Transport message from MME to eNB
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_UPLNK_UE_ASSOC_LPPA_TPRT" procId="SZAC_ENB_PROC" peerId="2" spId="0" routingId="255" lppaPdu="111" lppaPduLen="3" spConnId="1" usrConnId="1" enbId="1" mmeId="1"/>
      </tapa.send>

      # Expect Uplink UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_UPLNK_UE_ASSOC_LPPA_TPRT" procId="SZAC_MME_PROC" peerId="1" suId="1" routingId="255" lppaPdu="111" lppaPduLen="3" usrConnId="1"/>
      </tapa.expect>

  </tapa.test>

  # Clean subsection
  <tapa.clean/>

  # Shutdown subsection
  <tapa.shutdown>

     <tapa.delay delay="5"/>
       
     # Deinit ENB
     <tapa.sz.enb0.deinit/>

     # Deinit MME
     <tapa.sz.mme1.deinit/>

     # Deinit SCTP
     <tapa.sb.deinit/>

     # Configure TUCL
     <tapa.hi.deinit/>

  </tapa.shutdown>


</tapa.testcase>

#
#
#       Test:    1.69
#
#       Desc:    Verify that the UE state machines are skipped when the peer
#                is configured with skipUeSm set to TRUE.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.69">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the UE state machines are skipped when the peer"
         "is configured with skipUeSm set to TRUE"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

    # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="LSZV1"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb1.init />

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.dummy.s1.init/>  
      
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an Uplink UE Associated LPPa Transport message from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_HO_REQD" peerId="2" procId="SZAC_ENB_PROC" spId="0" spConnId="1" usrConnId="1" filUDatReq="1"/>
      </tapa.send>

      # Expect Uplink UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_HO_REQD" peerId="2" procId="SZAC_ENB_PROC" spId="0"/>
      </tapa.expect>

      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_HO_REQD" suId="0" procId="SZAC_ENB_PROC" assocIdx="0" enbId="1" mmeId="1" peerId="2"/>
      </tapa.send>

      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_HO_REQD" procId="SZAC_ENB_PROC" peerId="2" suId="0" usrConnId="1"/>
      </tapa.expect>

  </tapa.test>

  # Clean subsection
  <tapa.clean/>

  # Shutdown subsection
  <tapa.shutdown>

     <tapa.delay delay="5"/>
       
     # Deinit ENB
     <tapa.sz.dummyenb1.deinit/>

  </tapa.shutdown>

</tapa.testcase>
 
#
#
#       Test:    1.70
#
#       Desc:    Verify that the UE state machines are skipped when the peer
#                is configured with skipUeSm set to TRUE.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.70">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the UE state machines are skipped when the peer"
         "is configured with skipUeSm set to TRUE"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

    # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="LSZV1"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb1.init />

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.dummy.s1.init/>  
      
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an Uplink UE Associated LPPa Transport message from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_CXT_SETUP_RSP" peerId="2" procId="SZAC_ENB_PROC" spId="0" spConnId="1" usrConnId="1" filUDatReq="1"/>
      </tapa.send>

      # Expect Uplink UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_CXT_SETUP_RSP" peerId="2" procId="SZAC_ENB_PROC" spId="0"/>
      </tapa.expect>

  </tapa.test>

  # Clean subsection
  <tapa.clean/>

  # Shutdown subsection
  <tapa.shutdown>

     <tapa.delay delay="5"/>
       
     # Deinit ENB
     <tapa.sz.dummyenb1.deinit/>

  </tapa.shutdown>

</tapa.testcase>
 
#
#
#       Test:    1.71
#
#       Desc:    Verify that the UE state machines are skipped when the peer
#                is configured with skipUeSm set to TRUE.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.71">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the UE state machines are skipped when the peer"
         "is configured with skipUeSm set to TRUE"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

    # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_MME"/>
           <tapa.flag id="LSZV1"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme2.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.dummymme.s1.init/>  
      
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an Uplink UE Associated LPPa Transport message from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_UE_CXT_MOD_REQ" peerId="1" procId="SZAC_XTA_PROC" spId="1" spConnId="1" usrConnId="1" filUDatReq="1"/>
      </tapa.send>

      # Expect Uplink UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_UE_CXT_MOD_REQ" peerId="1" procId="SZAC_XTA_PROC" spId="1"/>
      </tapa.expect>

      # Send an Uplink UE Associated LPPa Transport message from MME to eNB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UE_CXT_MOD_RSP" peerId="1" procId="SZAC_XTA_PROC" spId="1" spConnId="1" usrConnId="1" filUDatReq="1"/>
      </tapa.send>

      # Expect Uplink UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_UE_CXT_MOD_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1"/>
      </tapa.expect>


  </tapa.test>

  # Clean subsection
  <tapa.clean/>

  # Shutdown subsection
  <tapa.shutdown>

     <tapa.delay delay="5"/>
       
     # Deinit ENB
     <tapa.sz.dummymme2.deinit/>

  </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.72
#
#       Desc:    Verify that the UE state machines are skipped when the peer
#                is configured with skipUeSm set to TRUE.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.72">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the UE state machines are skipped when the peer"
         "is configured with skipUeSm set to TRUE"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

    # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="LSZV1"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.dummy.s1.init/>  
      
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an Uplink UE Associated LPPa Transport message from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_UE_CXT_REL_REQ" peerId="2" procId="SZAC_ENB_PROC" spId="0" spConnId="1" usrConnId="1" filUDatReq="1"/>
      </tapa.send>

      # Expect Uplink UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_UE_CXT_REL_REQ" peerId="2" procId="SZAC_ENB_PROC" spId="0"/>
      </tapa.expect>

  </tapa.test>

  # Clean subsection
  <tapa.clean/>

  # Shutdown subsection
  <tapa.shutdown>

     <tapa.delay delay="5"/>
       
     # Deinit ENB
     <tapa.sz.dummyenb1.deinit/>

  </tapa.shutdown>

</tapa.testcase>
 
#
#
#       Test:    1.73
#
#       Desc:    Verify that the UE state machines are skipped when the peer
#                is configured with skipUeSm set to TRUE.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.73">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the UE state machines are skipped when the peer"
         "is configured with skipUeSm set to TRUE"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

    # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="LSZV1"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.dummy.s1.init/>  
      
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an Uplink UE Associated LPPa Transport message from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_PAGING" peerId="2" procId="SZAC_ENB_PROC" spId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect Uplink UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_PAGING" peerId="2" procId="SZAC_ENB_PROC" spId="0"/>
      </tapa.expect>

      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_PAGING" peerId="2" procId="SZAC_ENB_PROC" suId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect Uplink UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_PAGING" peerId="2" procId="SZAC_ENB_PROC" spId="0"/>
      </tapa.expect>


  </tapa.test>

  # Clean subsection
  <tapa.clean/>

  # Shutdown subsection
  <tapa.shutdown>

     <tapa.delay delay="5"/>
       
     # Deinit ENB
     <tapa.sz.dummyenb1.deinit/>

  </tapa.shutdown>

</tapa.testcase>
 
#
#
#       Test:    1.74
#
#       Desc:    Verify that the UE state machines are skipped when the peer
#                is configured with skipUeSm set to TRUE.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.74">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the UE state machines are skipped when the peer"
         "is configured with skipUeSm set to TRUE"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

    # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_MME"/>
           <tapa.flag id="LSZV1"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme2.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.dummymme.s1.init/>  
      
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an Uplink UE Associated LPPa Transport message from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_PAGING" peerId="1" procId="SZAC_XTA_PROC" spId="1" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect Uplink UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_PAGING" peerId="1" procId="SZAC_XTA_PROC" spId="1"/>
      </tapa.expect>

      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_PAGING" peerId="1" procId="SZAC_XTA_PROC" suId="1" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect Uplink UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERR_IND" peerId="1" procId="SZAC_XTA_PROC" spId="1" choice="SZT_CAUSE_PROTOCOL" cause="4"/>
      </tapa.expect>

  </tapa.test>

  # Clean subsection
  <tapa.clean/>

  # Shutdown subsection
  <tapa.shutdown>

     <tapa.delay delay="5"/>
       
     # Deinit ENB
     <tapa.sz.dummymme2.deinit/>

  </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.75
#
#       Desc:    Verify that the UE state machines are skipped when the peer
#                is configured with skipUeSm set to TRUE.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.75">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the UE state machines are skipped when the peer"
         "is configured with skipUeSm set to TRUE"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

    # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_MME"/>
           <tapa.flag id="LSZV1"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme2.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.dummymme.s1.init/>  
      
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an Uplink UE Associated LPPa Transport message from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_ERAB_MOD_REQ" peerId="1" procId="SZAC_XTA_PROC" spId="1" spConnId="1" usrConnId="1" filUDatReq="1"/>
      </tapa.send>

      # Expect Uplink UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_MOD_REQ" peerId="1" procId="SZAC_XTA_PROC" spId="1"/>
      </tapa.expect>

      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_MOD_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect Uplink UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_ERAB_MOD_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1"/>
      </tapa.expect>

  </tapa.test>

  # Clean subsection
  <tapa.clean/>

  # Shutdown subsection
  <tapa.shutdown>

     <tapa.delay delay="5"/>
       
     # Deinit ENB
     <tapa.sz.dummymme2.deinit/>

  </tapa.shutdown>

</tapa.testcase>
 
#
#
#       Test:    1.76
#
#       Desc:    Verify that the UE state machines are skipped when the peer
#                is configured with skipUeSm set to TRUE.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.76">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the UE state machines are skipped when the peer"
         "is configured with skipUeSm set to TRUE"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

    # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_MME"/>
           <tapa.flag id="LSZV1"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme2.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.dummymme.s1.init/>  
      
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an Uplink UE Associated LPPa Transport message from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_ERAB_REL_CMD" peerId="1" procId="SZAC_XTA_PROC" spId="1" spConnId="1" usrConnId="1" filUDatReq="1"/>
      </tapa.send>

      # Expect Uplink UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_REL_CMD" peerId="1" procId="SZAC_XTA_PROC" spId="1"/>
      </tapa.expect>

      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_REL_CMPLT" peerId="1" procId="SZAC_XTA_PROC" suId="1" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect Uplink UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_ERAB_REL_CMPLT" peerId="1" procId="SZAC_XTA_PROC" suId="1"/>
      </tapa.expect>

  </tapa.test>

  # Clean subsection
  <tapa.clean/>

  # Shutdown subsection
  <tapa.shutdown>

     <tapa.delay delay="5"/>
       
     # Deinit ENB
     <tapa.sz.dummymme2.deinit/>

  </tapa.shutdown>

</tapa.testcase>
 
#
#
#       Test:    1.77
#
#       Desc:    Verify that the UE state machines are skipped when the peer
#                is configured with skipUeSm set to TRUE.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.77">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the UE state machines are skipped when the peer"
         "is configured with skipUeSm set to TRUE"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

    # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_MME"/>
           <tapa.flag id="LSZV1"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme2.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.dummymme.s1.init/>  
      
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send HANDOVER REQUEST from MME to ENB
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_HO_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect Uplink UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.szt.errind eventType="SZT_MSG_ID_ERR_IND" peerId="1" procId="SZAC_XTA_PROC" suId="1" usrConnId="1" causeType="SZT_CAUSE_UNEXP_MSG" causeValue="0"/>
      </tapa.expect>

  </tapa.test>

  # Clean subsection
  <tapa.clean/>

  # Shutdown subsection
  <tapa.shutdown>

     <tapa.delay delay="5"/>
       
     # Deinit ENB
     <tapa.sz.dummymme2.deinit/>

  </tapa.shutdown>

</tapa.testcase>
 
#
#
#       Test:    1.78
#
#       Desc:    Verify that the UE state machines are skipped when the peer
#                is configured with skipUeSm set to TRUE.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.78">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the UE state machines are skipped when the peer"
         "is configured with skipUeSm set to TRUE"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

    # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="LSZV1"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.dummy.s1.init/>  
      
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_HO_REQ" procId="SZAC_ENB_PROC" peerId="2" spId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect Uplink UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.szt.errind eventType="SZT_MSG_ID_ERR_IND" peerId="2" procId="SZAC_ENB_PROC" suId="0" usrConnId="1" causeType="SZT_CAUSE_UNEXP_MSG" causeValue="0"/>
      </tapa.expect>

  </tapa.test>

  # Clean subsection
  <tapa.clean/>

  # Shutdown subsection
  <tapa.shutdown>

     <tapa.delay delay="5"/>
       
     # Deinit ENB
     <tapa.sz.dummyenb1.deinit/>

  </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.79
#
#       Desc:    Verify that the UE state machines are skipped when the peer
#                is configured with skipUeSm set to TRUE.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.79">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the UE state machines are skipped when the peer"
         "is configured with skipUeSm set to TRUE"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

    # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="LSZV1"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.dummy.s1.init/>  
      
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      <tapa.send>
         <tapa.szt.relreq eventType="SZT_MSG_ID_HO_FAIL" procId="SZAC_ENB_PROC" peerId="2" spId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect Uplink UE Associated LPPa Transport Msg at eNB
      <tapa.expect>
         <tapa.szt.errind eventType="SZT_MSG_ID_ERR_IND" peerId="2" procId="SZAC_ENB_PROC" suId="0" usrConnId="1" causeType="SZT_CAUSE_INV_CONID" causeValue="1"/>
      </tapa.expect>

  </tapa.test>

  # Clean subsection
  <tapa.clean/>

  # Shutdown subsection
  <tapa.shutdown>

     <tapa.delay delay="5"/>
       
     # Deinit ENB
     <tapa.sz.dummyenb1.deinit/>

  </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    1.80
#
#       Desc:    Verify that the UE state machines are skipped when the peer
#                is configured with skipUeSm set to FLASE.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc1.xml
#
#
<tapa.testcase id="1.80">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that the UE state machines are skipped when the peer"
         "is configured with skipUeSm set to FALSE"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

    # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZAC_ENB"/>
           <tapa.flag id="LSZV1"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummyenb0.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_ENB_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_ENB_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      # S1 setup procedure
      <tapa.dummy.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      <tapa.send>
         <tapa.szt.relreq eventType="SZT_MSG_ID_HO_FAIL" procId="SZAC_ENB_PROC" peerId="2" spId="0" spConnId="1" usrConnId="1"/>
      </tapa.send>

      # Expect Error Indication Msg at eNB
      <tapa.expect>
         <tapa.szt.errind eventType="SZT_MSG_ID_ERR_IND" peerId="2" procId="SZAC_ENB_PROC" suId="0" usrConnId="1" causeType="SZT_CAUSE_INV_CONID" causeValue="1"/>
      </tapa.expect>

  </tapa.test>

  # Clean subsection
  <tapa.clean/>

  # Shutdown subsection
  <tapa.shutdown>

     <tapa.delay delay="5"/>
       
     # Deinit ENB
     <tapa.sz.dummyenb0.deinit/>

  </tapa.shutdown>

</tapa.testcase>

# DO NOT DELETE THIS LINE -- TC number generation script depends on it.
# xyzabcend

#/********************************************************************30**
#
#         End of file:     szac_tc1.xml
#
#*********************************************************************31*/
#
#
#/********************************************************************40**
#
#        Notes:
#
#*********************************************************************41*/
#
#/********************************************************************50**
#
#*********************************************************************51*/
#
#
#/********************************************************************60**
#
#        Revision history:
#
#*********************************************************************61*/
#
# DO NOT DELETE THIS LINE -- TC number generation script depends on it.
# xyzabcend

#/********************************************************************30**
#
#         End of file:     szac_tc1.xml
#
#*********************************************************************31*/
#
#
#/********************************************************************40**
#
#        Notes:
#
#*********************************************************************41*/
#
#/********************************************************************50**
#
#*********************************************************************51*/
#
#
#/********************************************************************60**
#
#        Revision history:
#
#*********************************************************************61*/
#
#/********************************************************************90**
#
#     ver       pat    init                  description
#------------ -------- ---- ----------------------------------------------
#$SID$        ---      vvashishth  1. Updated for S1AP release 3.1
#$SID$      sz008.301  akaranth    1. Test case 20 and 24 fixes
#*********************************************************************91*/
