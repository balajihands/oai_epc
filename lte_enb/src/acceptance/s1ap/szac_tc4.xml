#/********************************************************************20**
#
#     Name:    S1AP 
#
#     Type:    XML Test File
#
#     Desc:    XML Based Test Cases
#
#     File:    szac_tc4.xml
#
#     Sid:     
#
#     Prg:     Rce 
#
#*********************************************************************21*/

# DO NOT DELETE THIS LINE -- TC number generation script depends on it.
# xyzabcstart=4:rs:szac_tc4.xml

#
#
#       Test:    4.1
#
#       Desc:    Verify the successful successful configuration of S1AP as MME
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.1">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the successful configuration as an MME"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an General configuration request
      <tapa.send>
         <tapa.lsz.cfg.gen procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the confirm for the general configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an protocol configuration request
      <tapa.send>
         <tapa.lsz.cfg.prot procId="SZAC_XTA_PROC" protNode="SZAC_LSZ_MME_PRC1"/>
      </tapa.send>

      # Receive the confirm for the protocol configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC" />
      </tapa.expect>

      # Send an szt sap configuration request
      <tapa.send>
         <tapa.lsz.cfg.usap procId="SZAC_XTA_PROC" sapId="1"/>
      </tapa.send>

      # Receive the confirm for the szt sap request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an sct sap configuration request
      <tapa.send>
         <tapa.lsz.cfg.lsap procId="SZAC_XTA_PROC" suId="1" spId="1" provType="SZAC_SCTP_DM" peerNode="SZAC_LSZ_ENB_PRC0"/>
      </tapa.send>

      # Receive the confirm for the sct sap request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an peer configuration request
      <tapa.send>
         <tapa.lsz.cfg.peer procId="SZAC_XTA_PROC" peerNodeCfg="SZAC_LSZ_ENB_PRC0"/>
      </tapa.send>

      # Receive the confirm for the peer configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC" />
      </tapa.expect>

      # Send an sct sap configuration request
      <tapa.send>
         <tapa.lsz.cntrl.lSap procId="SZAC_XTA_PROC" lSapId="1"/>
      </tapa.send>

         # Receive the bind request and confirm for the sct sap request.
         # Receive the confirm for the sct sap request.
      <tapa.expset>
         <tapa.sct.bndreq spId="1" procId="SZAC_XTA_PROC" suId="1"/> 
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expset>

   <tapa.delay delay="10"/>
   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Do shutdown
      <tapa.delay delay="10"/>

      <tapa.send>
         <tapa.lsz.cntrl.shutdown procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Do shutdown
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      <tapa.delay delay="10"/>


   #   <tapa.sz.mme1.deinit/>
   #   <tapa.sb.deinit/>
   #  <tapa.hi.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.2
#
#       Desc:    Verify the Negative Bind Cfm and EndpOpenCfm Scenarios
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.2">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the negative bind cfm and endpopencfm scenarios"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>
      # Bring up MME
      <tapa.sz.dummymme1.cfg/>

      <!--
      # Send a control request to enable alarms
      <tapa.send>
         <tapa.lsz.cntrl.usta />
      </tapa.send>

      # Receive the confirm for the alarms.
      <tapa.expect>
         <tapa.lsz.cntrlcfm />
      </tapa.expect>
      -->

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an sct sap configuration request
      <tapa.send>
         <tapa.lsz.cntrl.lSap procId="SZAC_XTA_PROC" lSapId="1"/>
      </tapa.send>

         # Receive the bind request and confirm for the sct sap request.
         # Receive the confirm for the sct sap request.
      <tapa.expset>
         <tapa.sct.bndreq spId="1" procId="SZAC_XTA_PROC" suId="1"/> 
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expset>

      # Send bind cfm with suId > maxSctSaps.
      <tapa.send>
         <tapa.sct.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="100" result="1"/> 
      </tapa.send>

      # Delay before the bind is resent
      <tapa.delay delay="10"/>

      # Receive the bind request again
      <tapa.expect>
         <tapa.sct.bndreq spId="1" procId="SZAC_XTA_PROC" suId="1"/> 
      </tapa.expect>

      # Send bind cfm with for unconfigured suId
      <tapa.send>
         <tapa.sct.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="0" result="1"/> 
      </tapa.send>

      # Delay before the bind is resent
      <tapa.delay delay="10"/>

      # Receive the bind request again
      <tapa.expect>
         <tapa.sct.bndreq spId="1" procId="SZAC_XTA_PROC" suId="1"/> 
      </tapa.expect>

      # Send bind cfm with NOK
      <tapa.send>
         <tapa.sct.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" result="2"/> 
      </tapa.send>

      <!--
      # Receive the status indication for the negative confirm
      <tapa.expect>
         <tapa.lsz.staInd category="LCM_CATEGORY_INTERFACE"
                          event = "LCM_EVENT_BND_FAIL"
                          cause = "LCM_CAUSE_UNKNOWN"
                          type   =  "LSZ_USTA_DGNVAL_SAPID"
                          typeId =  "1"                     />
      </tapa.expect>
      -->

      # Send an sct sap bind request
      <tapa.send>
         <tapa.lsz.cntrl.lSap procId="SZAC_XTA_PROC" lSapId="1"/>
      </tapa.send>

      # Receive the bind request and confirm for the sct sap request.
      <tapa.expset>
         <tapa.sct.bndreq spId="1" procId="SZAC_XTA_PROC" suId="1"/> 
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expset>

      # Send bind cfm 
      <tapa.send>
         <tapa.sct.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" result="1"/> 
      </tapa.send>

      # Expect EndpOpen Req to dummy SCTP
      <tapa.expect>
         <tapa.sct.endpopenreq procId="SZAC_XTA_PROC" spId="1" suEndpId="1"/> 
      </tapa.expect>
  
      # Send a second bind confirm
      <tapa.send>
         <tapa.sct.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" result="2"/> 
      </tapa.send>

      # Send EndpOpen Cfm at MME  with suId > maxSctSaps
      <tapa.send>
         <tapa.sct.endpopencfm procId="SZAC_XTA_PROC" suId="100" suEndpId="1" spEndpId="0" /> 
      </tapa.send>

      # Send EndpOpen Cfm at MME  with suId of unconfigured sap
      <tapa.send>
         <tapa.sct.endpopencfm procId="SZAC_XTA_PROC" suId="0" suEndpId="0" spEndpId="0" /> 
      </tapa.send>

      # Send EndpOpen Cfm at MME  with status NOK and cause  SCT_CAUSE_INV_PAR_VAL
      <tapa.send>
         <tapa.sct.endpopencfm procId="SZAC_XTA_PROC" suId="1" suEndpId="1" spEndpId="0" 
                               result="1" cause="SCT_CAUSE_INV_PAR_VAL"/> 
      </tapa.send>

      # Send EndpOpen Cfm at MME  with status NOK and cause  SCT_CAUSE_INV_PAR_VAL
      <tapa.send>
         <tapa.sct.endpopencfm procId="SZAC_XTA_PROC" suId="1" suEndpId="1" spEndpId="0" 
                               result="1" cause="SCT_CAUSE_INV_PAR_VAL"/> 
      </tapa.send>

      # Send EndpOpen Cfm at MME  with status NOK and cause  SCT_CAUSE_ENDP_OPEN
      <tapa.send>
         <tapa.sct.endpopencfm procId="SZAC_XTA_PROC" suId="1" suEndpId="1" spEndpId="0" 
                               result="1" cause="SCT_CAUSE_ENDP_OPEN"/> 
      </tapa.send>

      # Send EndpOpen Cfm at MME  with status NOK and cause  SCT_CAUSE_EXCEED_CONF_VAL
      <tapa.send>
         <tapa.sct.endpopencfm procId="SZAC_XTA_PROC" suId="1" suEndpId="1" spEndpId="0" 
                               result="1" cause="SCT_CAUSE_EXCEED_CONF_VAL"/> 
      </tapa.send>

      # Send EndpOpen Cfm at MME  with status NOK and cause  SCT_CAUSE_OUTRES
      <tapa.send>
         <tapa.sct.endpopencfm procId="SZAC_XTA_PROC" suId="1" suEndpId="1" spEndpId="0" 
                               result="1" cause="SCT_CAUSE_OUTRES"/> 
      </tapa.send>

      # Send EndpOpen Cfm at MME
      <tapa.send>
         <tapa.sct.endpopencfm procId="SZAC_XTA_PROC" suId="1" suEndpId="1" spEndpId="0" /> 
      </tapa.send>

      #disable sap
      <tapa.send>
         <tapa.lsz.cntrl.lSap procId="SZAC_XTA_PROC" lSapId="1" action="AUBND_DIS"/>
      </tapa.send>

      # Receive the bind request and confirm for the sct sap request.
      <tapa.expset>
         <tapa.sct.endpclosereq spId="1" procId="SZAC_XTA_PROC" spEndpId="0" /> 
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expset>

      # Send Endpclose Cfm with suId > maxSctSaps
      <tapa.send>
         <tapa.sct.endpclosecfm procId="SZAC_XTA_PROC" suId="100" /> 
      </tapa.send>

      # Send Endpclose Cfm with suId unconfigured
      <tapa.send>
         <tapa.sct.endpclosecfm procId="SZAC_XTA_PROC" suId="0" /> 
      </tapa.send>

      # Send Endpclose Cfm with result = SCT_NOK
      <tapa.send>
         <tapa.sct.endpclosecfm procId="SZAC_XTA_PROC" suId="1" result="2"/> 
      </tapa.send>

      # Send Endpclose Cfm with valid values
      <tapa.send>
         <tapa.sct.endpclosecfm procId="SZAC_XTA_PROC" suId="1" /> 
      </tapa.send>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Do shutdown
      <tapa.delay delay="10"/>

      <tapa.send>
         <tapa.lsz.cntrl.shutdown procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Do shutdown
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      <tapa.delay delay="10"/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.3
#
#       Desc:    Verify the negative scenarios of association establishment
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.3">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the negative scenarios of assocaition establishment"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init dynamicPeer="1" DefaultSapId="1"/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

### Negative assocInd tests

      # Send Assoc Ind to MME with invalid sapId > maxSctSaps
      <tapa.send>
         <tapa.sct.assocind procId="SZAC_ENB_PROC" suId="100" suEndpId="1" assocIdx="0" type="SCT_ASSOC_IND_COOKIE" numIps="1"/> 
      </tapa.send>

      # Send Assoc Ind to MME for sap not configured
      <tapa.send>
         <tapa.sct.assocind procId="SZAC_ENB_PROC" suId="0" suEndpId="1" assocIdx="0" type="SCT_ASSOC_IND_COOKIE" numIps="1"/> 
      </tapa.send>

      # Send Assoc Ind to MME with assoc params set to NULLP
      <tapa.send>
         <tapa.sct.assocind procId="SZAC_ENB_PROC" suId="1" suEndpId="1" assocIdx="0" 
                            type="SCT_ASSOC_IND_COOKIE" numIps="1" nullParams="TRUE" tc="TRUE"/> 
      </tapa.send>


#### Do Dyanamic Peer Registration

      <tapa.send>
         <tapa.sct.assocind procId="SZAC_XTA_PROC" suId="1" suEndpId="1" assocIdx="2" type="SCT_ASSOC_IND_COOKIE" 
                            numIps="1" Ipaddr="1234" vsInfo="TRUE" assocId="5"/> 
      </tapa.send>

      # Expect assoc indication at MME
      <tapa.expect>
         <tapa.szt.assocind procId="SZAC_XTA_PROC" peerId="2" suId="1"/>
      </tapa.expect>

      <!--
      # Send an assoc response from MME S1AP layer 
      <tapa.send>
         <tapa.szt.assocrsp procId="SZAC_XTA_PROC" peerId="2" spId="1" addressType="4" priDstAddr="1234" dstPort="10000" comProcStrm="0" locOutStrms="5" status="SZT_PRIM_OK" cause="SZT_CAUSE_NOT_APPL"/>
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expset>
        <tapa.sct.assocrsp procId="SZAC_XTA_PROC" spId="1" assocIdx="1" spEndpId="0" type="SCT_ASSOC_IND_COOKIE" port="1025"/> 
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="2" suId="1" staType="SZT_STA_TYPE_PEER" reason="SZT_REASON_NOT_APPL" status="SZT_STATUS_DYNAM_PEERCFG_OK"/>
      </tapa.expset>
  
      # Send Sta Ind at MME 
      <tapa.send>
         <tapa.sct.staind procId="SZAC_XTA_PROC" suId="1" assocIdx="1" status="SCT_STATUS_COMM_UP"/> 
      </tapa.send>

      # Expect Status Indiaction ASSOC UP at MME & eNB 
      <tapa.expect>
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="2" suId="1" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
      </tapa.expect>         
      -->
      
### Negative Testing in Term Indications

      # Send a termInd with suId > maxSct Saps
      <tapa.send>
         <tapa.sct.termind procId="SZAC_XTA_PROC" suId="100" suEndpId="1" assocIdx="0" /> 
      </tapa.send>
    
      # Send a termInd with suId for unconfigured sap
      <tapa.send>
         <tapa.sct.termind procId="SZAC_XTA_PROC" suId="0" suEndpId="1" assocIdx="0" /> 
      </tapa.send>
    
      # Send a termInd with with assocID type as SCT_ASSOCID_SP
      <tapa.send>
         <tapa.sct.termind procId="SZAC_XTA_PROC" suId="1" suEndpId="1" assocIdx="2" assocIdType="2" /> 
      </tapa.send>
    
      <!--
      # expect a sta ind at the szt interface
      <tapa.expect>
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="2" suId="1" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_TERM_IND" status="SZT_STATUS_ASSOC_DOWN"/>
      </tapa.expect>
      -->
      <tapa.sz.sct.delay delay="5"/>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    4.4
#
#       Desc:    Verify that eNB S1AP on receiving E-RAB 
#                SETUP REQUEST message from MME S1AP in state 
#                other than ESTABLISHED state, responds with 
#                error message to MME S1AP (using dummy SCTP).
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.4">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that eNB S1AP on receiving E-RAB SETUP"
         "REQUEST message from MME S1AP in state other than"
         "ESTABLISHED state, responds with error message to"
         "MME S1AP"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an E-RAB SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_SETUP_REQ" spId="1" suId="1" procId="SZAC_XTA_PROC" suAssocId="1" assocIdx="0" strmId="1"/>
      </tapa.send>

      # Expect Error indication at lower layer
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERR_IND" suId="1" procId="SZAC_XTA_PROC" suAssocId="0" assocIdx="0" choice="SZT_CAUSE_PROTOCOL" cause="4"/>
      </tapa.expect>

      <tapa.sz.sct.delay delay="5"/>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    4.5
#
#       Desc:    Verify the establishment, modification and release of ERAB at
#       MME node (One UE)
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.5">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the establishment, modification and release of ERAB at MME"
         "node (One UE)"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_INIT_UE_MSG" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_INIT_UE_MSG" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION REQUEST
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_UE_CXT_MOD_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_UE_CXT_MOD_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UE_CXT_MOD_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION RESPONSE at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_UE_CXT_MOD_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.relreq eventType="SZT_MSG_ID_UE_CXT_REL_CMD" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_UE_CXT_REL_CMD" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.szt.relcfm eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.6
#
#       Desc:    Verify the establishment, modification and release of ERAB at
#       MME node (More than one UE) 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.6">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the establishment, modification and release of ERAB at MME"
         "node (More than one UE)"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_INIT_UE_MSG" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_INIT_UE_MSG" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UE_CXT_REL_REQ" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION RESPONSE at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_UE_CXT_REL_REQ" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.relreq eventType="SZT_MSG_ID_UE_CXT_REL_CMD" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_UE_CXT_REL_CMD" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.szt.relcfm eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    4.7
#
#       Desc:    Verify the establishment, modification and release of ERAB at
#       MME node with already established connection present 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.7">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the establishment, modification and release of ERAB at MME"
         "node with already established connection present"
      </tapa.desc>


      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_INIT_UE_MSG" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_INIT_UE_MSG" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_SETUP_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_SETUP_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION REQUEST
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_MOD_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_MOD_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_MOD_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION RESPONSE at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_MOD_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_REL_CMD" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_REL_CMD" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_REL_CMPLT" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_REL_CMPLT" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.8
#
#       Desc:    Verify the establishment, modification and release of ERAB at
#       MME node 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.8">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the establishment, modification and release of ERAB at MME"
         "node"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_INIT_UE_MSG" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_INIT_UE_MSG" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_SETUP_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_SETUP_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_REL_REQ" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION RESPONSE at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_REL_REQ" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_REL_CMD" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_REL_CMD" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_REL_CMPLT" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_REL_CMPLT" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.9
#
#       Desc:    Verify the connection establishment with Downlink NAS message
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.9">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the connection establishment with Downlink NAS message"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UL_NAS_TPT" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.concfm eventType="SZT_MSG_ID_UL_NAS_TPT" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    4.10
#
#       Desc:    Verify the connection establishment with Initial UE message
#       and Downlink NAS message
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.10">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the connection establishment with Initial UE message and"
         "Downlink NAS message"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_INIT_UE_MSG" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_INIT_UE_MSG" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

       # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UL_NAS_TPT" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_UL_NAS_TPT" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.11
#
#       Desc:    Verify the handling of Paging message
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.11">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the handling of Paging message"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

       # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_PAGING" procId="SZAC_XTA_PROC" peerId="1" spId="1"  />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_PAGING" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.12
#
#       Desc:    Verify the partial RESET at MME node
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.12">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the partial RESET at MME node"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

      <tapa.dummymme.uecxt.init usrConnId="1" spConnId="1" enbId="1" mmeId="1"/>
      <tapa.dummymme.uecxt.init usrConnId="2" spConnId="2" enbId="2" mmeId="2"/>
      <tapa.dummymme.uecxt.init usrConnId="3" spConnId="3" enbId="3" mmeId="3"/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="3" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an RESET message from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_RESET"  spId="1" procId="SZAC_XTA_PROC" peerId="1" enbId1="1" mmeId1="1" enbId2="2" mmeId2="2" lstCnt="2"/>
      </tapa.send>

      # Expect RESET Msg at eNB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_RESET" procId="SZAC_XTA_PROC" spId="1"  assocIdx="0" />
      </tapa.expect>

      # Send an RESET ACK Msg from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_RESET_ACK"  suId="1" procId="SZAC_XTA_PROC" peerId="1" enbId1="1" mmeId1="1" enbId2="2" mmeId2="2" lstCnt="2"/>
      </tapa.send>

      # Expect RESET ACK Msg at MME
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_RESET_ACK" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="1" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an RESET message from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_RESET"  spId="1" procId="SZAC_XTA_PROC" peerId="1" />
      </tapa.send>

      # Expect RESET Msg at eNB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_RESET" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an RESET ACK Msg from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_RESET_ACK"  suId="1" procId="SZAC_XTA_PROC" assocIdx="0" peerId="1" />
      </tapa.send>

      # Expect RESET ACK Msg at MME
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_RESET_ACK" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="0" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    4.13
#
#       Desc:    Verify the partial and full reset at MME node
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.13">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the partial and full reset at MME node"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

      <tapa.dummymme.uecxt.init usrConnId="1" spConnId="1" enbId="1" mmeId="1"/>
      <tapa.dummymme.uecxt.init usrConnId="2" spConnId="2" enbId="2" mmeId="2"/>
      <tapa.dummymme.uecxt.init usrConnId="3" spConnId="3" enbId="3" mmeId="3"/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="3" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an RESET message from MME to eNB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_RESET"  suId="1" procId="SZAC_XTA_PROC" assocIdx="0"  enbId1="1" mmeId1="1" enbId2="2" mmeId2="2" lstCnt="2"/>
      </tapa.send>

      # Expect RESET Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_RESET" procId="SZAC_XTA_PROC" peerId="1" suId="1" />
      </tapa.expect>

      # Send an RESET ACK Msg from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_RESET_ACK" procId="SZAC_XTA_PROC" peerId="1" spId="1"/>
      </tapa.send>

      # Expect RESET ACK Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_RESET_ACK" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="1" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an RESET message from MME to eNB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_RESET"  suId="1" procId="SZAC_XTA_PROC" assocIdx="0" />
      </tapa.send>

      # Expect RESET Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_RESET" procId="SZAC_XTA_PROC" peerId="1" suId="1" />
      </tapa.expect>

      # Send an RESET ACK Msg from eNB to MME
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_RESET_ACK" procId="SZAC_XTA_PROC" peerId="1" spId="1"/>
      </tapa.send>

      # Expect RESET ACK Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_RESET_ACK" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="0" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

 
   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.14
#
#       Desc:    Verify the Binding of SZT Sap at MME node
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.14">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the Binding of SZT Sap at MME node"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      #S1 Setup
      <tapa.dummymme.s1.init/>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    4.15
#
#       Desc:    Verify the dynamic peer configuration at MME. Also verify the
#       connection establishment over the dynamic peer
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.15">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the dynamic peer configuration at MME. Also verify the"
         "connection establishment over the dynamic peer"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init dynamicPeer="1" DefaultSapId="1"/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>
      #S1 Setup for Target eNodeB
      # Send Assoc Ind at MME 
      <tapa.send>
         <tapa.sct.assocind procId="SZAC_XTA_PROC" suId="1" suEndpId="1" assocIdx="1" type="SCT_ASSOC_IND_COOKIE" numIps="1" Ipaddr="1234"/> 
      </tapa.send>

      # Expect assoc indication at MME
      <tapa.expect>
         <tapa.szt.assocind procId="SZAC_XTA_PROC" peerId="2" suId="1"/>
      </tapa.expect>

      # Send an assoc response from MME S1AP layer 
      <tapa.send>
         <tapa.szt.assocrsp procId="SZAC_XTA_PROC" peerId="2" spId="1" addressType="4" priDstAddr="1234" dstPort="10000" comProcStrm="0" locOutStrms="5" status="SZT_PRIM_OK" cause="SZT_CAUSE_NOT_APPL"/>
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expset>
        <tapa.sct.assocrsp procId="SZAC_XTA_PROC" spId="1" assocIdx="1" spEndpId="0" type="SCT_ASSOC_IND_COOKIE" port="1025"/> 
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="2" suId="1" staType="SZT_STA_TYPE_PEER" reason="SZT_REASON_NOT_APPL" status="SZT_STATUS_DYNAM_PEERCFG_OK"/>
      </tapa.expset>
  
      # Send Sta Ind at MME 
      <tapa.send>
         <tapa.sct.staind procId="SZAC_XTA_PROC" suId="1" assocIdx="1" status="SCT_STATUS_COMM_UP"/> 
      </tapa.send>

      # Expect Status Indiaction ASSOC UP at MME & eNB 
      <tapa.expect>
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="2" suId="1" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
      </tapa.expect>         
      
      # Send an S1 SETUP REQ Msg from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_SETUP_REQ" suId="1" procId="SZAC_XTA_PROC" assocIdx="0" strmId="1"/>
      </tapa.send>

      # Expect S1 SETUP REQ Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" suId="1"/>
      </tapa.expect>

      # Send an S1 SETUP RESPONSE Msg from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_XTA_PROC" peerId="1" spId="1"/>
      </tapa.send>
    
      # Expect S1 Setup Response at ENB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" suAssocId="0" assocIdx="0"/>
      </tapa.expect>
 
      <tapa.dummymme.uecxt.init usrConnId="1" spConnId="1" enbId="1" mmeId="1"/>

   </tapa.cfg>

  <tapa.test>
 
   # Test Steps subsection

       # Send an HO REQD msg from  Source ENB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_HO_REQD" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_HO_REQD" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_HO_REQ" procId="SZAC_XTA_PROC" peerId="2" spId="1" mmeId="2"  />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_HO_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="1" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_HO_REQ_ACK" suId="1" procId="SZAC_XTA_PROC" enbId="2" mmeId="2"  assocIdx="1" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.concfm eventType="SZT_MSG_ID_HO_REQ_ACK" peerId="2" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_HO_CMD" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" spConnId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_HO_CMD" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

       # Send an HO REQD msg from  Source ENB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_HO_NTFY" suId="1" procId="SZAC_XTA_PROC" enbId="2" mmeId="2"  assocIdx="1" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_HO_NTFY" peerId="2" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.relreq eventType="SZT_MSG_ID_UE_CXT_REL_CMD" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" spConnId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_UE_CXT_REL_CMD" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.szt.relcfm eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.send>
         <tapa.lsz.cntrl.shutdown procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Expect Term Req to dummy SCTP
      <tapa.expset>
         <tapa.sct.termreq procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spAssocId="1" assocIdType="2"/> 
         <tapa.sct.termreq procId="SZAC_XTA_PROC" spId="1" assocIdx="1" spAssocId="1" assocIdType="2"/> 
      </tapa.expset>
  
      # Expect EndpClose Req to dummy SCTP
      <tapa.expect>
         <tapa.sct.endpclosereq procId="SZAC_XTA_PROC" spId="1" suEndpId="0" endpIdType="2"/> 
      </tapa.expect>
  
      # Do shutdown
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.16
#
#       Desc:    Verify the dynamic peer configuration at MME. Also verify the
#       connection establishment over the dynamic peer using PATH switch
#       request
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.16">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the dynamic peer configuration at MME. Also verify the"
         "connection establishment over the dynamic peer using PATH switch"
         "request"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init dynamicPeer="1" DefaultSapId="1"/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>
      #S1 Setup for Target eNodeB
      # Send Assoc Ind at MME 
      <tapa.send>
         <tapa.sct.assocind procId="SZAC_XTA_PROC" suId="1" suEndpId="1" assocIdx="1" type="SCT_ASSOC_IND_COOKIE" numIps="1" Ipaddr="1234"/> 
      </tapa.send>

      # Expect assoc indication at MME
      <tapa.expect>
         <tapa.szt.assocind procId="SZAC_XTA_PROC" peerId="2" suId="1"/>
      </tapa.expect>

      # Send an assoc response from MME S1AP layer 
      <tapa.send>
         <tapa.szt.assocrsp procId="SZAC_XTA_PROC" peerId="2" spId="1" addressType="4" priDstAddr="1234" dstPort="10000" comProcStrm="0" locOutStrms="5" status="SZT_PRIM_OK" cause="SZT_CAUSE_NOT_APPL"/>
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expset>
         <tapa.sct.assocrsp procId="SZAC_XTA_PROC" spId="1" assocIdx="1" spEndpId="0" type="SCT_ASSOC_IND_COOKIE" port="1025"/> 
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="2" suId="1" staType="SZT_STA_TYPE_PEER" reason="SZT_REASON_NOT_APPL" status="SZT_STATUS_DYNAM_PEERCFG_OK"/>
      </tapa.expset>
  
      # Send Sta Ind at MME 
      <tapa.send>
         <tapa.sct.staind procId="SZAC_XTA_PROC" suId="1" assocIdx="1" status="SCT_STATUS_COMM_UP"/> 
      </tapa.send>

      # Expect Status Indiaction ASSOC UP at MME & eNB 
      <tapa.expect>
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="2" suId="1" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
      </tapa.expect>         
      
      # Send an S1 SETUP REQ Msg from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_SETUP_REQ" suId="1" procId="SZAC_XTA_PROC" assocIdx="0" strmId="1"/>
      </tapa.send>

      # Expect S1 SETUP REQ Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" suId="1"/>
      </tapa.expect>

      # Send an S1 SETUP RESPONSE Msg from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_XTA_PROC" peerId="1" spId="1"/>
      </tapa.send>
    
      # Expect S1 Setup Response at ENB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" suAssocId="0" assocIdx="0"/>
      </tapa.expect>
 
      <tapa.dummymme.uecxt.init usrConnId="1" spConnId="1" enbId="1" mmeId="1"/>

   </tapa.cfg>

  <tapa.test>
 
   # Test Steps subsection

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_PATH_SWTCH_REQ" suId="1" procId="SZAC_XTA_PROC" enbId="2" mmeId="2"  assocIdx="1" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_PATH_SWTCH_REQ" peerId="2" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_PATH_SWTCH_REQ_ACK" procId="SZAC_XTA_PROC" peerId="2" spId="1" enbId="2" mmeId="2" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_PATH_SWTCH_REQ_ACK" procId="SZAC_XTA_PROC" spId="1" assocIdx="1" />
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.relreq eventType="SZT_MSG_ID_UE_CXT_REL_CMD" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" spConnId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_UE_CXT_REL_CMD" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.szt.relcfm eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.send>
         <tapa.lsz.cntrl.shutdown procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Expect Term Req to dummy SCTP
      <tapa.expset>
         <tapa.sct.termreq procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spAssocId="1" assocIdType="2"/> 
         <tapa.sct.termreq procId="SZAC_XTA_PROC" spId="1" assocIdx="1" spAssocId="1" assocIdType="2"/> 
      </tapa.expset>
  
      # Expect EndpClose Req to dummy SCTP
      <tapa.expect>
         <tapa.sct.endpclosereq procId="SZAC_XTA_PROC" spId="1" suEndpId="0" endpIdType="2"/> 
      </tapa.expect>
  
      # Do shutdown
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.17
#
#       Desc:    Verify the Delition of the Lower Sap when there are active
#       association on the LSAP.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.17">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the Delition of the Lower Sap when there are active"
         "association on the LSAP"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up MME
      # Send an General configuration request
      <tapa.send>
         <tapa.lsz.cfg.gen procId="SZAC_XTA_PROC" />
      </tapa.send>

      # Receive the confirm for the general configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an protocol configuration request
      <tapa.send>
         <tapa.lsz.cfg.prot protNode="SZAC_LSZ_MME_PRC1" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the confirm for the protocol configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an szt sap configuration request
      <tapa.send>
         <tapa.lsz.cfg.usap procId="SZAC_XTA_PROC" sapId="1" />
      </tapa.send>

      # Receive the confirm for the szt sap request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an szt sap configuration request
      <tapa.send>
         <tapa.lsz.cfg.usap procId="SZAC_XTA_PROC" sapId="0" />
      </tapa.send>

      # Receive the confirm for the szt sap request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>


      # Send an sct sap configuration request
      <tapa.send>
         <tapa.lsz.cfg.lsap spId="1" suId="1" provType="SZAC_SCTP_DM" procId="SZAC_XTA_PROC" peerNode="SZAC_LSZ_ENB_PRC0"/>
      </tapa.send>

      # Receive the confirm for the sct sap request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an peer configuration request
      <tapa.send>
         <tapa.lsz.cfg.peer peerNodeCfg="SZAC_LSZ_ENB_PRC0" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the confirm for the peer configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm  procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an peer configuration request
      <tapa.send>
         <tapa.lsz.cfg.peer peerNodeCfg="SZAC_LSZ_ENB_PRC0" procId="SZAC_XTA_PROC" PeerId="2" Ipaddr="1234" uSapId="0"/>
      </tapa.send>

      # Receive the confirm for the peer configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm  procId="SZAC_XTA_PROC"/>
      </tapa.expect>


      # Send an sct sap configuration request.
      <tapa.send>
         <tapa.lsz.cntrl.lSap procId="SZAC_XTA_PROC"  lSapId="1"/>
      </tapa.send>

      <tapa.sz.sct.delay delay="1"/>

      <tapa.expset>
         # Receive the bind request and confirm for the sct sap request.
         <tapa.sct.bndreq spId="1" procId="SZAC_XTA_PROC" suId="1"/> 
         # Receive the confirm for the sct sap request.
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expset>


      # Send bind cfm.
      <tapa.send>
         <tapa.sct.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" result="1"/> 
      </tapa.send>

      <tapa.sz.sct.delay delay="1"/>

      # Expect EndpOpen Req to dummy SCTP
      <tapa.expect>
         <tapa.sct.endpopenreq procId="SZAC_XTA_PROC" spId="1" suEndpId="1"/> 
      </tapa.expect>
  
      # Send EndpOpen Cfm at MME 
      <tapa.send>
         <tapa.sct.endpopencfm procId="SZAC_XTA_PROC" suId="1" suEndpId="1" spEndpId="0" /> 
      </tapa.send>

      <tapa.sz.sct.delay delay="1"/>


      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>


      #S1 Setup
   </tapa.cfg>

  <tapa.test>
 
   # Test Steps subsection
   # Send Assoc Ind at MME 
      <tapa.send>
         <tapa.sct.assocind procId="SZAC_XTA_PROC" suId="1" suEndpId="1" assocIdx="0" type="SCT_ASSOC_IND_COOKIE" numIps="1"/> 
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expect>
         <tapa.sct.assocrsp procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spEndpId="0" type="SCT_ASSOC_IND_COOKIE" port="1025"/> 
      </tapa.expect>
  
      # Send Sta Ind at MME 
      <tapa.send>
         <tapa.sct.staind procId="SZAC_XTA_PROC" suId="1"  status="SCT_STATUS_COMM_UP"/> 
      </tapa.send>

      # Expect Status Indiaction ASSOC UP at MME & eNB 
      <tapa.expect>
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="1" suId="1" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
      </tapa.expect>         

      <tapa.send>
         <tapa.sct.assocind procId="SZAC_XTA_PROC" suId="1" suEndpId="1" assocIdx="1" type="SCT_ASSOC_IND_COOKIE" numIps="1" Ipaddr="1234"/> 
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expect>
         <tapa.sct.assocrsp procId="SZAC_XTA_PROC" spId="1" assocIdx="1" spEndpId="0" type="SCT_ASSOC_IND_COOKIE" port="1025"/> 
      </tapa.expect>
  
      # Send Sta Ind at MME 
      <tapa.send>
         <tapa.sct.staind procId="SZAC_XTA_PROC" suId="1"  assocIdx="1" status="SCT_STATUS_COMM_UP"/> 
      </tapa.send>

      # Expect Status Indiaction ASSOC UP at MME & eNB 
      <tapa.expect>
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="2" suId="0" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
      </tapa.expect>         
    
     # Send an S1 SETUP REQ Msg from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_SETUP_REQ" suId="1" procId="SZAC_XTA_PROC" assocIdx="0" strmId="1"/>
      </tapa.send>

      # Expect S1 SETUP REQ Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" suId="1"/>
      </tapa.expect>

      # Send an S1 SETUP RESPONSE Msg from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_XTA_PROC" peerId="1" spId="1"/>
      </tapa.send>
    
      # Expect S1 Setup Response at ENB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" suAssocId="0" assocIdx="0"/>
      </tapa.expect>

     # Send an S1 SETUP REQ Msg from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_SETUP_REQ" suId="1" procId="SZAC_XTA_PROC" assocIdx="1" strmId="1"/>
      </tapa.send>

      # Expect S1 SETUP REQ Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="2" suId="0"/>
      </tapa.expect>

      # Send an S1 SETUP RESPONSE Msg from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_XTA_PROC" peerId="2" spId="0"/>
      </tapa.send>
    
      # Expect S1 Setup Response at ENB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" suAssocId="0" assocIdx="1"/>
      </tapa.expect>
    
      # Send an upper sap delete request
      <tapa.send>
         <tapa.lsz.cntrl.uSap uSapId="0"
                              action="AUBND_DIS"/>
      </tapa.send>

      # Receive the confirm confirm
      <tapa.expset>
         <tapa.sct.termreq procId="SZAC_XTA_PROC" spId="1" assocIdx="1" spAssocId="1" assocIdType="2"/> 
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="2" suId="0" 
                              staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_UBND_SAP"/>
         <tapa.lsz.cntrlcfm />
      </tapa.expset>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>

      <tapa.send>
         <tapa.sct.assocind procId="SZAC_XTA_PROC" suId="1" suEndpId="1" assocIdx="1" type="SCT_ASSOC_IND_COOKIE" numIps="1" Ipaddr="1234"/> 
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expect>
         <tapa.sct.assocrsp procId="SZAC_XTA_PROC" spId="1" assocIdx="1" spEndpId="0" type="SCT_ASSOC_IND_COOKIE" port="1025"/> 
      </tapa.expect>
  
      # Send Sta Ind at MME 
      <tapa.send>
         <tapa.sct.staind procId="SZAC_XTA_PROC" suId="1"  assocIdx="1" status="SCT_STATUS_COMM_UP"/> 
      </tapa.send>

      # Expect Status Indiaction ASSOC UP at MME & eNB 
      <tapa.expect>
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="2" suId="0" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
      </tapa.expect>         

      # Send an S1 SETUP REQ Msg from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_SETUP_REQ" suId="1" procId="SZAC_XTA_PROC" assocIdx="1" strmId="1"/>
      </tapa.send>

      # Expect S1 SETUP REQ Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="2" suId="0"/>
      </tapa.expect>

      # Send an S1 SETUP RESPONSE Msg from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_XTA_PROC" peerId="2" spId="0"/>
      </tapa.send>
    
      # Expect S1 Setup Response at ENB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" suAssocId="0" assocIdx="1"/>
      </tapa.expect>
 


  </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.send>
         <tapa.lsz.cntrl.shutdown procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Expect Term Req to dummy SCTP
      <tapa.expset>
         <tapa.sct.termreq procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spAssocId="1" assocIdType="2"/> 
         <tapa.sct.termreq procId="SZAC_XTA_PROC" spId="1" assocIdx="1" spAssocId="1" assocIdType="2"/> 
      </tapa.expset>
  
      # Expect EndpClose Req to dummy SCTP
      <tapa.expect>
         <tapa.sct.endpclosereq procId="SZAC_XTA_PROC" spId="1" suEndpId="0" endpIdType="2"/> 
      </tapa.expect>
  
      # Do shutdown
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.18
#
#       Desc:    Verify the Delition of the Upper Sap when there are active
#       association on the LSAP.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.18">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the Delition of the Upper Sap when there are active"
         "association on the LSAP"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up MME
      # Send an General configuration request
      <tapa.send>
         <tapa.lsz.cfg.gen procId="SZAC_XTA_PROC" />
      </tapa.send>

      # Receive the confirm for the general configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an protocol configuration request
      <tapa.send>
         <tapa.lsz.cfg.prot protNode="SZAC_LSZ_MME_PRC1" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the confirm for the protocol configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an szt sap configuration request
      <tapa.send>
         <tapa.lsz.cfg.usap procId="SZAC_XTA_PROC" sapId="1" />
      </tapa.send>

      # Receive the confirm for the szt sap request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an szt sap configuration request
      <tapa.send>
         <tapa.lsz.cfg.usap procId="SZAC_XTA_PROC" sapId="0" />
      </tapa.send>

      # Receive the confirm for the szt sap request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>


      # Send an sct sap configuration request
      <tapa.send>
         <tapa.lsz.cfg.lsap spId="1" suId="1" provType="SZAC_SCTP_DM" procId="SZAC_XTA_PROC" peerNode="SZAC_LSZ_ENB_PRC0"/>
      </tapa.send>

      # Receive the confirm for the sct sap request.
      <tapa.expect>
         <tapa.lsz.cfgcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an peer configuration request
      <tapa.send>
         <tapa.lsz.cfg.peer peerNodeCfg="SZAC_LSZ_ENB_PRC0" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the confirm for the peer configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm  procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an peer configuration request
      <tapa.send>
         <tapa.lsz.cfg.peer peerNodeCfg="SZAC_LSZ_ENB_PRC0" procId="SZAC_XTA_PROC" PeerId="2" Ipaddr="1234" uSapId="0"/>
      </tapa.send>

      # Receive the confirm for the peer configuration request.
      <tapa.expect>
         <tapa.lsz.cfgcfm  procId="SZAC_XTA_PROC"/>
      </tapa.expect>


      # Send an sct sap configuration request.
      <tapa.send>
         <tapa.lsz.cntrl.lSap procId="SZAC_XTA_PROC"  lSapId="1"/>
      </tapa.send>

      <tapa.sz.sct.delay delay="1"/>

      <tapa.expset>
         # Receive the bind request and confirm for the sct sap request.
         <tapa.sct.bndreq spId="1" procId="SZAC_XTA_PROC" suId="1"/> 
         # Receive the confirm for the sct sap request.
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expset>


      # Send bind cfm.
      <tapa.send>
         <tapa.sct.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" result="1"/> 
      </tapa.send>

      <tapa.sz.sct.delay delay="1"/>

      # Expect EndpOpen Req to dummy SCTP
      <tapa.expect>
         <tapa.sct.endpopenreq procId="SZAC_XTA_PROC" spId="1" suEndpId="1"/> 
      </tapa.expect>
  
      # Send EndpOpen Cfm at MME 
      <tapa.send>
         <tapa.sct.endpopencfm procId="SZAC_XTA_PROC" suId="1" suEndpId="1" spEndpId="0" /> 
      </tapa.send>

      <tapa.sz.sct.delay delay="1"/>


      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="0" suId="0"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="0" suId="0" status="1"/> 
      </tapa.expect>


      #S1 Setup
   </tapa.cfg>

  <tapa.test>
 
   # Test Steps subsection
   # Send Assoc Ind at MME 
      <tapa.send>
         <tapa.sct.assocind procId="SZAC_XTA_PROC" suId="1" suEndpId="1" assocIdx="0" type="SCT_ASSOC_IND_COOKIE" numIps="1"/> 
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expect>
         <tapa.sct.assocrsp procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spEndpId="0" type="SCT_ASSOC_IND_COOKIE" port="1025"/> 
      </tapa.expect>
  
      # Send Sta Ind at MME 
      <tapa.send>
         <tapa.sct.staind procId="SZAC_XTA_PROC" suId="1"  status="SCT_STATUS_COMM_UP"/> 
      </tapa.send>

      # Expect Status Indiaction ASSOC UP at MME & eNB 
      <tapa.expect>
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="1" suId="1" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
      </tapa.expect>         

      <tapa.send>
         <tapa.sct.assocind procId="SZAC_XTA_PROC" suId="1" suEndpId="1" assocIdx="1" type="SCT_ASSOC_IND_COOKIE" numIps="1" Ipaddr="1234"/> 
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expect>
         <tapa.sct.assocrsp procId="SZAC_XTA_PROC" spId="1" assocIdx="1" spEndpId="0" type="SCT_ASSOC_IND_COOKIE" port="1025"/> 
      </tapa.expect>
  
      # Send Sta Ind at MME 
      <tapa.send>
         <tapa.sct.staind procId="SZAC_XTA_PROC" suId="1"  assocIdx="1" status="SCT_STATUS_COMM_UP"/> 
      </tapa.send>

      # Expect Status Indiaction ASSOC UP at MME & eNB 
      <tapa.expect>
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="2" suId="0" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
      </tapa.expect>         
    
     # Send an S1 SETUP REQ Msg from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_SETUP_REQ" suId="1" procId="SZAC_XTA_PROC" assocIdx="0" strmId="1"/>
      </tapa.send>

      # Expect S1 SETUP REQ Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" suId="1"/>
      </tapa.expect>

      # Send an S1 SETUP RESPONSE Msg from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_XTA_PROC" peerId="1" spId="1"/>
      </tapa.send>
    
      # Expect S1 Setup Response at ENB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" suAssocId="0" assocIdx="0"/>
      </tapa.expect>

     # Send an S1 SETUP REQ Msg from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_SETUP_REQ" suId="1" procId="SZAC_XTA_PROC" assocIdx="1" strmId="1"/>
      </tapa.send>

      # Expect S1 SETUP REQ Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="2" suId="0"/>
      </tapa.expect>

      # Send an S1 SETUP RESPONSE Msg from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_XTA_PROC" peerId="2" spId="0"/>
      </tapa.send>
    
      # Expect S1 Setup Response at ENB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" suAssocId="0" assocIdx="1"/>
      </tapa.expect>
    
      # Send an upper sap delete request
      <tapa.send>
         <tapa.lsz.cntrl.uSap uSapId="0"
                              action="ADEL"/>
      </tapa.send>

      # Receive the confirm confirm
      <tapa.expset>
         <tapa.sct.termreq procId="SZAC_XTA_PROC" spId="1" assocIdx="1" spAssocId="1" assocIdType="2"/> 
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="2" suId="0" 
                              staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_UBND_SAP"/>
         <tapa.lsz.cntrlcfm />
      </tapa.expset>

      # Deinit ENB
      <tapa.send>
         <tapa.sct.termcfm procId="SZAC_XTA_PROC" spId="1" assocIdx="1" spAssocId="1" assocIdType="2"/> 
      </tapa.send>


  </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.send>
         <tapa.lsz.cntrl.shutdown procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Expect Term Req to dummy SCTP
      <tapa.expset>
         <tapa.sct.termreq procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spAssocId="1" assocIdType="2"/> 
      </tapa.expset>
  
      # Expect EndpClose Req to dummy SCTP
      <tapa.expect>
         <tapa.sct.endpclosereq procId="SZAC_XTA_PROC" spId="1" suEndpId="0" endpIdType="2"/> 
      </tapa.expect>
  
      # Do shutdown
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>


   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.19
#
#       Desc:    Verify the Local Release of connections. Also verify that if
#       connection doesnot exists, send S1AP sends the error indication
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.19">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the Local Release of connections. Also verify that if"
         "connection doesnot exists, send S1AP sends the error indication"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

      <tapa.dummymme.uecxt.init usrConnId="1" spConnId="1" enbId="1" mmeId="1"/>
      <tapa.dummymme.uecxt.init usrConnId="2" spConnId="2" enbId="2" mmeId="2"/>
      <tapa.dummymme.uecxt.init usrConnId="3" spConnId="3" enbId="3" mmeId="3"/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="3" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.relreq relType="SZT_LOCAL_REL" procId="SZAC_XTA_PROC" spId="1" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.szt.relcfm relType="SZT_LOCAL_REL" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="2" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.relreq relType="SZT_LOCAL_REL" procId="SZAC_XTA_PROC" spId="1" conType="SZT_CONN_TYPE_SU" usrConnId="2" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.szt.relcfm relType="SZT_LOCAL_REL" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="1" procId="SZAC_XTA_PROC"/>
      </tapa.expect>
      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.relreq relType="SZT_LOCAL_REL" procId="SZAC_XTA_PROC" spId="100" conType="SZT_CONN_TYPE_SU" usrConnId="2" />
      </tapa.send>
      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.relreq relType="SZT_LOCAL_REL" procId="SZAC_XTA_PROC" spId="3" conType="SZT_CONN_TYPE_SU" usrConnId="2" />
      </tapa.send>

      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.relreq relType="SZT_LOCAL_REL" procId="SZAC_XTA_PROC" spId="1" conType="SZT_CONN_TYPE_SU" usrConnId="4" />
      </tapa.send>
    <tapa.expect>
        <tapa.szt.errind  procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_INV_CONID" causeValue="4"/>
    </tapa.expect>
      <tapa.send>
         <tapa.szt.relreq relType="SZT_LOCAL_REL" procId="SZAC_XTA_PROC" spId="1" spConnId="4" />
      </tapa.send>
    <tapa.expect>
        <tapa.szt.errind  procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_INV_CONID" causeValue="4"/>
    </tapa.expect>


   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.20
#
#       Desc:    Verify the handling of UdatReq when the peerId and SapId's are
#       in-correct. Also, ConReq, ConRsp, RelRsp and DatReq with invalid peerId
#       and SapId
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.20">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the handling of UdatReq when the peerId and SapId's are"
         "in-correct. Also, ConReq, ConRsp, RelRsp and DatReq with invalid"
         "peerId and SapId"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      <tapa.dummymme.s1.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
    # Send Bind Req at eNB
    <tapa.send>
       <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="100" suId="1"/> 
    </tapa.send>
    <tapa.send>
       <tapa.szt.ubndreq procId="SZAC_XTA_PROC" spId="100" suId="1"/> 
    </tapa.send>
    <tapa.send>
       <tapa.szt.udatreq eventType="SZT_MSG_ID_PAGING" procId="SZAC_XTA_PROC" peerId="1" spId="100"  />
    </tapa.send>
    <tapa.send>
       <tapa.szt.udatreq eventType="SZT_MSG_ID_PAGING" procId="SZAC_XTA_PROC" peerId="1" spId="2"  />
    </tapa.send>
    <tapa.send>
       <tapa.szt.udatreq eventType="SZT_MSG_ID_PAGING" procId="SZAC_XTA_PROC" peerId="10" spId="1"  />
    </tapa.send>
      # Expect local error 
    <tapa.expect>
        <tapa.szt.errind  procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_INV_PEERID" causeValue="10"/>
    </tapa.expect>
    <tapa.send>
       <tapa.szt.conreq eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_XTA_PROC" peerId="1" spId="100"  />
    </tapa.send>
    <tapa.send>
       <tapa.szt.conreq eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_XTA_PROC" peerId="1" spId="2"  />
    </tapa.send>
    <tapa.send>
       <tapa.szt.conreq eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_XTA_PROC" peerId="10" spId="1"  />
    </tapa.send>
    # Expect local error 
    <tapa.expect>
        <tapa.szt.errind  procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_INV_PEERID" causeValue="10"/>
    </tapa.expect>
    <tapa.send>
       <tapa.szt.conrsp eventType="SZT_MSG_ID_UL_NAS_TPT" procId="SZAC_XTA_PROC" peerId="1" spId="100"/>
    </tapa.send>
    <tapa.send>
       <tapa.szt.conrsp eventType="SZT_MSG_ID_UL_NAS_TPT" procId="SZAC_XTA_PROC" peerId="1" spId="2"/>
    </tapa.send>
    <tapa.send>
       <tapa.szt.relrsp eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" procId="SZAC_XTA_PROC" peerId="1" spId="100"/>
    </tapa.send>
    <tapa.send>
       <tapa.szt.relrsp eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" procId="SZAC_XTA_PROC" peerId="1" spId="2"/>
    </tapa.send>
    <tapa.send>
       <tapa.szt.relrsp eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" procId="SZAC_XTA_PROC" peerId="1" spId="1" spConnId="4"/>
    </tapa.send>
    <tapa.expect>
        <tapa.szt.errind procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_INV_CONID" causeValue="4"/>
    </tapa.expect>
    <tapa.send>
       <tapa.szt.datreq eventType="SZT_MSG_ID_E_RAB_BRR_MOD_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="100"/>
    </tapa.send>
    <tapa.send>
       <tapa.szt.datreq eventType="SZT_MSG_ID_E_RAB_BRR_MOD_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="2"/>
    </tapa.send>
    <tapa.send>
       <tapa.szt.datreq eventType="SZT_MSG_ID_E_RAB_BRR_MOD_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" spConnId="4"/>
    </tapa.send>
    <tapa.expect>
        <tapa.szt.errind procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_INV_CONID" causeValue="4"/>
    </tapa.expect>
   
   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.21
#
#       Desc:   Verify the Audit Req at MME 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.21">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the Audit Req at MME"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      <tapa.dummymme.s1.init/>
      <tapa.dummymme.uecxt.init usrConnId="1" spConnId="1" enbId="1" mmeId="1"/>
      <tapa.dummymme.uecxt.init usrConnId="2" spConnId="2" enbId="2" mmeId="2"/>
      <tapa.dummymme.uecxt.init usrConnId="3" spConnId="3" enbId="3" mmeId="3"/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an Audit Request on peer with invalid Peer
      <tapa.send>
         <tapa.szt.audreq auditType="SZT_AUD_PEER" procId="SZAC_XTA_PROC" spId="10" peerId="10"/>
      </tapa.send>

      <tapa.send>
         <tapa.szt.audreq auditType="SZT_AUD_PEER" procId="SZAC_XTA_PROC" spId="3" peerId="10"/>
      </tapa.send>

      <tapa.send>
         <tapa.szt.audreq auditType="SZT_AUD_PEER" procId="SZAC_XTA_PROC" peerId="10" spId="1"/>
      </tapa.send>

      # Receive the Audit Confirm 
      <tapa.expect>
         <tapa.szt.audcfm peerId="10" suId="1" status="SZT_PRIM_NOK" cause="SZT_CAUSE_INV_PEERID" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

         <tapa.send>
         <tapa.szt.audreq auditType="SZT_AUD_CONN" spId="1" spConnId="4" procId="SZAC_XTA_PROC" />
      </tapa.send>

      # Receive the Audit Confirm 
      <tapa.expect>
         <tapa.szt.audcfm nmbConn="1" spConnId="4" suId="1" connState="SZT_CON_ST_NON_EXST" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      <tapa.send>
         <tapa.szt.audreq auditType="SZT_AUD_CONN" spId="1" connIdType="SZT_CONN_TYPE_SU" usrConnId="1" procId="SZAC_XTA_PROC" />
      </tapa.send>

      # Receive the Audit Confirm 
      <tapa.expect>
         <tapa.szt.audcfm nmbConn="1" spConnId="1" suId="1" connState="SZT_CON_ST_ESTBLD" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      <tapa.send>
         <tapa.szt.audreq auditType="SZT_AUD_CONN" spId="1" connIdType="SZT_CONN_TYPE_SU" usrConnId="4" procId="SZAC_XTA_PROC" />
      </tapa.send>

      # Receive the Audit Confirm 
      <tapa.expect>
         <tapa.szt.audcfm nmbConn="1" suId="1" spConnId="4" connState="SZT_CON_ST_NON_EXST" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      <tapa.send>
         <tapa.szt.audreq auditType="SZT_AUD_FLC" procId="SZAC_XTA_PROC" peerId="10" spId="1"/>
      </tapa.send>

      # Receive the Audit Confirm 
      <tapa.expect>
         <tapa.szt.audcfm peerId="10" suId="1" status="SZT_PRIM_NOK" cause="SZT_CAUSE_INV_PEERID" procId="SZAC_XTA_PROC"/>
      </tapa.expect>
      <tapa.send>
         <tapa.szt.audreq auditType="SZT_CON_ST_NON_EXST" procId="SZAC_XTA_PROC" peerId="10" spId="1"/>
      </tapa.send>

      # Receive the Audit Confirm 
      <tapa.expect>
         <tapa.szt.audcfm  suId="1" status="SZT_PRIM_NOK" cause="SZT_CAUSE_INV_TYPE" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Deinit ENB
      <tapa.send>
         <tapa.sct.termind procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spAssocId="1" assocIdType="2"/> 
      </tapa.send>
      <tapa.expect>
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="1" suId="1" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_TERM_IND" status="SZT_STATUS_ASSOC_DOWN"/>
      </tapa.expect>

      <tapa.send>
         <tapa.szt.audreq auditType="SZT_AUD_FLC" procId="SZAC_XTA_PROC" peerId="1" spId="1"/>
      </tapa.send>
      <tapa.expect>
         <tapa.szt.audcfm peerId="1" suId="1" status="SZT_PRIM_NOK" cause="SZT_CAUSE_ASSOC_NOTPRST" procId="SZAC_XTA_PROC"/>
      </tapa.expect>


</tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.delay delay="1"/>

      <tapa.send>
         <tapa.lsz.cntrl.shutdown procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Expect EndpClose Req to dummy SCTP
      <tapa.expect>
         <tapa.sct.endpclosereq procId="SZAC_XTA_PROC" spId="1" suEndpId="0" endpIdType="2"/> 
      </tapa.expect>
  
      # Do shutdown
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      <tapa.delay delay="1"/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.22
#
#       Desc:    Verify the duplicate Dynamic Peer configuration handling at
#       MME
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.22">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the duplicate Dynamic Peer configuration handling at MME"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init dynamicPeer="1" DefaultSapId="1"/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>
      #S1 Setup for Target eNodeB

   </tapa.cfg>

  <tapa.test>
 
   # Test Steps subsection

      # Send Assoc Ind at MME 
      <tapa.send>
         <tapa.sct.assocind procId="SZAC_XTA_PROC" suId="1" suEndpId="1" assocIdx="1" type="SCT_ASSOC_IND_COOKIE" numIps="1" Ipaddr="1234"/> 
      </tapa.send>

      # Expect assoc indication at MME
      <tapa.expect>
         <tapa.szt.assocind procId="SZAC_XTA_PROC" peerId="2" suId="1"/>
      </tapa.expect>

      # Send an assoc response from MME S1AP layer 
      <tapa.send>
         <tapa.szt.assocrsp procId="SZAC_XTA_PROC" peerId="2" spId="1" addressType="4" priDstAddr="1235" dstPort="100" comProcStrm="0" locOutStrms="5" status="SZT_PRIM_OK" cause="SZT_CAUSE_NOT_APPL"/>
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expect>
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="2" suId="1" staType="SZT_STA_TYPE_PEER" reason="SZT_REASON_NOT_APPL" status="SZT_STATUS_DYNAM_PEERCFG_NOK"/>
      </tapa.expect>

      # Send an assoc response from MME S1AP layer 
      <tapa.send>
         <tapa.szt.assocrsp procId="SZAC_XTA_PROC" peerId="2" spId="1" addressType="4" priDstAddr="1234" dstPort="10000" comProcStrm="2" locOutStrms="5" status="SZT_PRIM_OK" cause="SZT_CAUSE_NOT_APPL"/>
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expset>
        <tapa.sct.assocrsp procId="SZAC_XTA_PROC" spId="1" assocIdx="1" spEndpId="0" type="SCT_ASSOC_IND_COOKIE" port="1025"/> 
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="2" suId="1" staType="SZT_STA_TYPE_PEER" reason="SZT_REASON_INV_PARAM" status="SZT_STATUS_DYNAM_PEERCFG_NOK"/>
      </tapa.expset>

      <tapa.send>
         <tapa.sct.assocind procId="SZAC_XTA_PROC" suId="1" suEndpId="1" assocIdx="1" type="SCT_ASSOC_IND_COOKIE" numIps="1" Ipaddr="1234"/> 
      </tapa.send>

      # Expect assoc indication at MME
      <tapa.expect>
         <tapa.szt.assocind procId="SZAC_XTA_PROC" peerId="2" suId="1"/>
      </tapa.expect>

      # Send an assoc response from MME S1AP layer 
      <tapa.send>
         <tapa.szt.assocrsp procId="SZAC_XTA_PROC" peerId="1" spId="3" addressType="4" priDstAddr="1234" dstPort="10000" comProcStrm="0" locOutStrms="5" status="SZT_PRIM_OK" cause="SZT_CAUSE_NOT_APPL"/>
      </tapa.send>

      <tapa.send>
         <tapa.szt.assocrsp procId="SZAC_XTA_PROC" peerId="1" spId="100" addressType="4" priDstAddr="1234" dstPort="10000" comProcStrm="0" locOutStrms="5" status="SZT_PRIM_OK" cause="SZT_CAUSE_NOT_APPL"/>
      </tapa.send>

      # Send an assoc response from MME S1AP layer 
      <tapa.send>
         <tapa.szt.assocrsp procId="SZAC_XTA_PROC" peerId="1" spId="1" addressType="4" priDstAddr="1234" dstPort="10000" comProcStrm="0" locOutStrms="5" status="SZT_PRIM_OK" cause="SZT_CAUSE_NOT_APPL"/>
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expset>
        <tapa.sct.assocrsp procId="SZAC_XTA_PROC" spId="1" assocIdx="1" spEndpId="0" type="SCT_ASSOC_IND_COOKIE" port="1025"/> 
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="1" suId="1" staType="SZT_STA_TYPE_PEER" reason="SZT_REASON_DUP_PEERID" status="SZT_STATUS_DYNAM_PEERCFG_NOK"/>
      </tapa.expset>
   
    </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.send>
         <tapa.lsz.cntrl.shutdown procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Expect Term Req to dummy SCTP
      <tapa.expset>
         <tapa.sct.termreq procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spAssocId="1" assocIdType="2"/> 
      </tapa.expset>
  
      # Expect EndpClose Req to dummy SCTP
      <tapa.expect>
         <tapa.sct.endpclosereq procId="SZAC_XTA_PROC" spId="1" suEndpId="0" endpIdType="2"/> 
      </tapa.expect>
  
      # Do shutdown
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.23
#
#       Desc:    Verify the handling of the messages when the MME node is in
#       RESET state. Verify that the S1AP sends error indication with correct
#       cause
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.23">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the handling of the messages when the MME node is in RESET"
         "state. Verify that the S1AP sends error indication with correct cause"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

      <tapa.dummymme.uecxt.init usrConnId="1" spConnId="1" enbId="1" mmeId="1"/>
      <tapa.dummymme.uecxt.init usrConnId="2" spConnId="2" enbId="2" mmeId="2"/>
      <tapa.dummymme.uecxt.init usrConnId="3" spConnId="3" enbId="3" mmeId="3"/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an Stats Request
      <tapa.send>
         <tapa.lsz.sta.req staType="STSZGEN" procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Receive the Stats Confirm 
      <tapa.expect>
         <tapa.lsz.stacfm numActvPeerConn="3" procId="SZAC_XTA_PROC"/>
      </tapa.expect>

      # Send an RESET message from MME to eNB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_RESET"  suId="1" procId="SZAC_XTA_PROC" assocIdx="0"  enbId1="1" mmeId1="1" enbId2="2" mmeId2="2" lstCnt="2"/>
      </tapa.send>

      # Expect RESET Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_RESET" procId="SZAC_XTA_PROC" peerId="1" suId="1" />
      </tapa.expect>
     <tapa.send>
        <tapa.szt.udatreq eventType="SZT_MSG_ID_PAGING" procId="SZAC_XTA_PROC" peerId="1" spId="1"  />
    </tapa.send>
    <tapa.expect>
        <tapa.szt.errind  procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_INV_STATE" causeValue="1"/>
    </tapa.expect>
    <tapa.send>
       <tapa.szt.conreq eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_XTA_PROC" peerId="1" spId="1" spConnId="4" />
    </tapa.send>
    <tapa.expect>
        <tapa.szt.errind  procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_NODE_RESET" causeValue="1"/>
    </tapa.expect>
    <tapa.send>
       <tapa.szt.conrsp eventType="SZT_MSG_ID_UL_NAS_TPT" procId="SZAC_XTA_PROC" peerId="1" spId="1"/>
    </tapa.send>
    <tapa.expect>
        <tapa.szt.errind procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_NODE_RESET" causeValue="1"/>
    </tapa.expect>
     <tapa.send>
       <tapa.szt.relreq eventType="SZT_MSG_ID_UE_CXT_REL_CMD" procId="SZAC_XTA_PROC" peerId="1" spId="1"/>
    </tapa.send>
    <tapa.expect>
        <tapa.szt.errind procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_NODE_RESET" causeValue="1"/>
    </tapa.expect>
    <tapa.send>
       <tapa.szt.relrsp eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" procId="SZAC_XTA_PROC" peerId="1" spId="1"/>
    </tapa.send>
    <tapa.expect>
        <tapa.szt.errind procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_NODE_RESET" causeValue="1"/>
    </tapa.expect>
    <tapa.send>
       <tapa.szt.datreq eventType="SZT_MSG_ID_E_RAB_BRR_MOD_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" spConnId="3" enbId="3" mmeId="3"/>
    </tapa.send>
    <tapa.expect>
        <tapa.szt.errind procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_NODE_RESET" causeValue="1"/>
    </tapa.expect>
    <tapa.send>
       <tapa.szt.udatreq eventType="SZT_MSG_ID_RESET_ACK" procId="SZAC_XTA_PROC" peerId="1" spId="1"/>
    </tapa.send>

    # Expect RESET ACK Msg at MME
    <tapa.expect>
       <tapa.sct.datreq eventType="SZT_MSG_ID_RESET_ACK" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
    </tapa.expect>
    </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    4.24
#
#       Desc:    Verify the encode/decode at SZT interface of a PDU
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.24">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the encode/decode at SZT interface of a PDU"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      <tapa.dummymme.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
       # Send an initial UE msg from ENB to MME
      <tapa.send>
          <tapa.szt.encreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_XTA_PROC" spId="3" />
      </tapa.send>
      <tapa.send>
          <tapa.szt.encreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_XTA_PROC" spId="100" />
      </tapa.send>
       # Send an initial UE msg from ENB to MME
      <tapa.send>
          <tapa.szt.encreq eventType="SZT_MSG_ID_NO_DATA" procId="SZAC_XTA_PROC" spId="1" />
      </tapa.send>
      <tapa.expect>
         <tapa.szt.enccfm  procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>
      <tapa.send>
          <tapa.szt.encreq reqType="1" eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_XTA_PROC" spId="1" tc="TRUE"/>
      </tapa.send>
      <tapa.expect>
         <tapa.szt.enccfm  procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>
      <tapa.send>
          <tapa.szt.encreq reqType="2" eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_XTA_PROC" spId="1" tc="TRUE"/>
      </tapa.send>
      <tapa.expect>
         <tapa.szt.enccfm  procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>
      <tapa.send>
          <tapa.szt.encreq reqType="3" eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_XTA_PROC" spId="1" />
      </tapa.send>
      <tapa.expect>
         <tapa.szt.enccfm  procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>
      <tapa.send>
          <tapa.szt.decreq reqType="1" eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_XTA_PROC" spId="1" />
      </tapa.send>
      <tapa.expect>
         <tapa.szt.deccfm  procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>
      <tapa.send>
          <tapa.szt.decreq eventType="SZT_MSG_ID_INIT_UE_MSG" procId="SZAC_XTA_PROC" spId="1" msgStr="xyzdfafaer" />
      </tapa.send>
      <tapa.expect>
         <tapa.szt.deccfm  procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>
#
#
#       Test:    4.25
#
#       Desc:    Verify the handling of the Error indication when message is
#       received with invalid connection ID
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.25">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the handling of the Error indication when message is received"
         "with invalid connection ID"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_XTA_PROC" peerId="1" spId="1" usrConnId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>
      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_XTA_PROC" peerId="1" spId="1" usrConnId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
        <tapa.szt.errind  procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_INV_CONID" causeValue="1"/>
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_INIT_UE_MSG" suId="1" procId="SZAC_XTA_PROC" enbId="2" mmeId="2" assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_INIT_UE_MSG" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="2" mmeId="2" usrConnId="2" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="2" mmeId="2" usrConnId="2" />
      </tapa.send>

      <tapa.expect>
        <tapa.szt.errind  procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_INV_CONID" causeValue="2"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.26
#
#       Desc:    Verify the handling of the unexpected messages in DatReq and
#       UDatReq
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.26">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the handling of the unexpected messages in DatReq and UDatReq"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

      <tapa.dummymme.uecxt.init usrConnId="1" spConnId="1" enbId="1" mmeId="1"/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
    <tapa.send>
       <tapa.szt.datreq eventType="SZT_MSG_ID_INIT_CXT_SETUP_FAIL" procId="SZAC_XTA_PROC" peerId="1" spId="1" spConnId="1" enbId="1" mmeId="1"/>
    </tapa.send>
    <tapa.expect>
        <tapa.szt.errind procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_UNEXP_MSG" causeValue="9"/>
    </tapa.expect>

   <tapa.send>
   <tapa.szt.relreq eventType="SZT_MSG_ID_UE_CXT_REL_CMPL" procId="SZAC_XTA_PROC" peerId="1" spId="1" spConnId="1" enbId="1" mmeId="1"/>
    </tapa.send>

    <tapa.expect>
        <tapa.szt.errind procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_UNEXP_MSG" causeValue="0"/>
    </tapa.expect>

    <tapa.send>
       <tapa.szt.relrsp eventType="SZT_MSG_ID_PATH_SWTCH_REQ_FAIL" procId="SZAC_XTA_PROC"  spId="1" spConnId="1" enbId="1" mmeId="1"/>
    </tapa.send>

    <tapa.expect>
        <tapa.szt.errind procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_UNEXP_MSG" causeValue="0"/>
    </tapa.expect>

  </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.27
#
#       Desc:   Verify the handling of the unexpected messages in ConReq,
#       ConRsp, RelReq, and RelRsp
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.27">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify the handling of the unexpected messages in ConReq, ConRsp,"
         "RelReq, and RelRsp"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

      <tapa.dummymme.uecxt.init usrConnId="1" spConnId="1" enbId="1" mmeId="1"/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
    <tapa.send>
       <tapa.szt.udatreq testType="1" procId="SZAC_XTA_PROC" spId="1" />
    </tapa.send>
    <tapa.send>
       <tapa.szt.conreq testType="1" procId="SZAC_XTA_PROC" spId="1" />
    </tapa.send>
    <tapa.expect>
        <tapa.szt.errind procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_UNEXP_MSG" causeValue="0"/>
    </tapa.expect>
    <tapa.send>
       <tapa.szt.conrsp testType="1" procId="SZAC_XTA_PROC" spId="1" />
    </tapa.send>
    <tapa.expect>
        <tapa.szt.errind procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_UNEXP_MSG" causeValue="0"/>
    </tapa.expect>
    <tapa.send>
       <tapa.szt.relreq testType="1" procId="SZAC_XTA_PROC" spId="1" />
    </tapa.send>
    <tapa.expect>
        <tapa.szt.errind procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_UNEXP_MSG" causeValue="0"/>
    </tapa.expect>
    <tapa.send>
       <tapa.szt.relrsp testType="1" procId="SZAC_XTA_PROC" spId="1" />
    </tapa.send>
    <tapa.expect>
        <tapa.szt.errind procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_UNEXP_MSG" causeValue="0"/>
    </tapa.expect>
    <tapa.send>
       <tapa.szt.datreq testType="1" procId="SZAC_XTA_PROC" spId="1" />
    </tapa.send>
    <tapa.expect>
        <tapa.szt.errind procId="SZAC_XTA_PROC" suId="1" causeType="SZT_CAUSE_UNEXP_MSG" causeValue="0"/>
    </tapa.expect>
    <tapa.send>
       <tapa.szt.audreq testType="1" procId="SZAC_XTA_PROC" spId="1" />
    </tapa.send>
    <tapa.send>
       <tapa.szt.assocrsp testType="1" procId="SZAC_XTA_PROC" spId="1" dstPort="10000"/>
    </tapa.send>

  </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.28
#
#       Desc:    Verify that eNB on sending Release complete  
#                with wrong mmeId to MME, MME would respond 
#                with error message to ENB.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.28">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that eNB on sending Release complete"
         "with wrong mmeId to MME, MME would respond"
         "with error message to ENB."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_INIT_UE_MSG" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_INIT_UE_MSG" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_SETUP_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_SETUP_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_REL_REQ" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION RESPONSE at MME
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_ERAB_REL_REQ" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send  UE CONTEXT RELEASE COMMAND
      <tapa.send>
         <tapa.szt.datreq eventType="SZT_MSG_ID_ERAB_REL_CMD" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect UE CONTEXT MODIFICATION REQUEST 
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERAB_REL_CMD" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_ERAB_REL_CMPLT" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="99"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERR_IND" peerId="1" procId="SZAC_XTA_PROC" suId="1" mmeId="99" choice="SZT_CAUSE_RADIONW" cause="13"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.29
#
#       Desc:    Verify failure in Uplink NAS Transport Procedure.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.29">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify failure in Uplink NAS Procedure. "
         "The eNB S1AP sends UPLINK NAS TRANSPORT Message with unknown MME Id "
         "to MME S1AP. MME responds with Error Indication. "
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conreq eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_DL_NAS_TPT" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_UL_NAS_TPT" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="99" assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERR_IND" peerId="1" procId="SZAC_XTA_PROC" suId="1" choice="SZT_CAUSE_RADIONW" cause="13"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.30
#
#       Desc:    Verify failure in NAS Non Delivery Indication Procedure.
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc2.xml
#
#
<tapa.testcase id="4.30">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify failure in NAS Non Delivery Indication Procedure "
         "where mmeId in NAS NON DELIVERY INDICATION is invalid. "
         "The eNB S1AP sends NAS NON DELIVERY INDICATION Message to "
         "the peer MME S1AP. MME responds with a Error Indication."
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      <tapa.dummymme.s1.init/>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_INIT_UE_MSG" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.conind eventType="SZT_MSG_ID_INIT_UE_MSG" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Send an initial UE msg from ENB to MME
      <tapa.send>
         <tapa.szt.conrsp eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" spId="1" enbId="1" mmeId="1" />
      </tapa.send>

      # Expect INITIAL UE Msg at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_CXT_SETUP_REQ" procId="SZAC_XTA_PROC" spId="1" assocIdx="0" />
      </tapa.expect>

      # Send an INITIAL CONTEXT SETUP REQUEST msg from MME to ENB
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="1"  assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP REQUEST CFM at ENB
      <tapa.expect>
         <tapa.szt.datind eventType="SZT_MSG_ID_CXT_SETUP_RSP" peerId="1" procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      # Send  UE CONTEXT MODIFICATION RSP from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_NAS_NON_DEL_IND" suId="1" procId="SZAC_XTA_PROC" enbId="1" mmeId="99" assocIdx="0" />
      </tapa.send>

      # Expect INITIAL CONTEXT SETUP RESPONSE at MME
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_ERR_IND" peerId="1" procId="SZAC_XTA_PROC" suId="1" mmeId="99" choice="SZT_CAUSE_RADIONW" cause="13"/>
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.31
#
#       Desc:    Verify that Encode Decode happens for each Ie's
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc4.xml
#
#
<tapa.testcase id="4.31">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
         "Verify that Encode Decode happens for transparent container Ie's"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
           <tapa.flag id="SZTV1"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up MME
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at MME
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at MME 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      <tapa.dummymme.s1.init/>
      <tapa.dbg.cntrl/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Encode request for IE type SrcToTget
      <tapa.send>
         <tapa.szt.encreq procId="SZAC_XTA_PROC"
            spId="1" type="3" ieType="1" />
      </tapa.send>
      <tapa.expect>
         <tapa.szt.enccfm  procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Decode request for IE type SrcToTget
      <tapa.send>
          <tapa.szt.decreq  
             procId="SZAC_XTA_PROC" spId="1" type="4" ieType="1"
             msgStr="xyzdfafaer" />
      </tapa.send>
      <tapa.expect>
         <tapa.szt.deccfm  procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      #######################################################################

       # Encode request for IE type SrcToTget with choice 1
      <tapa.send>
         <tapa.szt.encreq  procId="SZAC_XTA_PROC"
            spId="1" type="3" ieType="1" choice="1"/>
      </tapa.send>
      <tapa.expect>
         <tapa.szt.enccfm  procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Decode request for IE type SrcToTget with choice 1
      <tapa.send>
          <tapa.szt.decreq  
             procId="SZAC_XTA_PROC" spId="1" type="4" ieType="1"
             msgStr="xyzdfafaer" choice="1"/>
      </tapa.send>
      <tapa.expect>
         <tapa.szt.deccfm  procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      #######################################################################

      # Encode request for IE type SrcToTget with choice 2
      <tapa.send>
         <tapa.szt.encreq  procId="SZAC_XTA_PROC"
            spId="1" type="3" ieType="1" choice="2"/>
      </tapa.send>
      <tapa.expect>
         <tapa.szt.enccfm  procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>

      # Decode request for IE type SrcToTget with choice 2
      <tapa.send>
          <tapa.szt.decreq  
             procId="SZAC_XTA_PROC" spId="1" type="4" ieType="1"
             msgStr="xyzdfafaer" choice="2"/>
      </tapa.send>
      <tapa.expect>
         <tapa.szt.deccfm  procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>
    
      #######################################################################

      # Encode request for IE type TgetToSrc
      <tapa.send>
         <tapa.szt.encreq  procId="SZAC_XTA_PROC" spId="1"
           type="3" ieType="2" />
      </tapa.send>
      <tapa.expect>
         <tapa.szt.enccfm  procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>
      
      # Decode request for IE type TgetToSrc
      <tapa.send>
          <tapa.szt.decreq  
             procId="SZAC_XTA_PROC" spId="1" type="4" ieType="2"
             msgStr="xyzdfafaer"/>
      </tapa.send>
      <tapa.expect>
         <tapa.szt.deccfm  procId="SZAC_XTA_PROC" suId="1" />
      </tapa.expect>
 
  </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit MME
      <tapa.sz.dummymme1.deinit/>

   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    4.32
#
#       Desc:    Verify the S1 setup abort request from application  
#                when assoc is in progress state
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc4.xml
#
#
<tapa.testcase id="4.32">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
      "Verify the S1 setup abort request from application"
      "when assoc is in progress state"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
        <tapa.flag id="SZTV2"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send Assoc Ind at MME 
      <tapa.send>
         <tapa.sct.assocind procId="SZAC_XTA_PROC" suId="1" suEndpId="1" assocIdx="0" type="SCT_ASSOC_IND_COOKIE" numIps="1"/> 
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expect>
         <tapa.sct.assocrsp procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spEndpId="0" type="SCT_ASSOC_IND_COOKIE" port="1025"/> 
      </tapa.expect>

      # Send an S1 SETUP REQ Msg from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_SETUP_REQ" suId="1" procId="SZAC_XTA_PROC" assocIdx="0" strmId="1"/>
      </tapa.send>

      # Expect S1 SETUP REQ Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" suId="1"/>
      </tapa.expect>

      # Send Abort Req at MME 
      <tapa.send>
         <tapa.szt.aborts1req procId="SZAC_XTA_PROC" suId="1" spId="1" peerId="1" /> 
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expect>
         <tapa.sct.termreq procId="SZAC_ENB_PROC" spId="1" assocIdx="0" spAssocId="1" assocIdType="1"/> 
      </tapa.expect>

     # Deinit ENB
      <tapa.send>
         <tapa.sct.termcfm procId="SZAC_ENB_PROC"  suId="1" assocIdx="0" spAssocId="1" assocIdType="2"/> 
      </tapa.send> 


   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB

      <tapa.send>
         <tapa.lsz.cntrl.shutdown procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Expect EndpClose Req to dummy SCTP
      <tapa.expect>
         <tapa.sct.endpclosereq procId="SZAC_XTA_PROC" spId="1" suEndpId="0" endpIdType="2"/> 
      </tapa.expect>
  
      # Do shutdown
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.33
#
#       Desc:    Verify the negative senario of S1 setup abort
#                request from application with invalid spId
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc4.xml
#
#
<tapa.testcase id="4.33">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
      "Verify the negative senario of S1 setup abort"
      "request from application with invalid spId"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
        <tapa.flag id="SZTV2"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send Assoc Ind at MME 
      <tapa.send>
         <tapa.sct.assocind procId="SZAC_ENB_PROC" suId="1" suEndpId="1" assocIdx="0" type="SCT_ASSOC_IND_COOKIE" numIps="1"/> 
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expect>
         <tapa.sct.assocrsp procId="SZAC_ENB_PROC" spId="1" assocIdx="0" spEndpId="0" type="SCT_ASSOC_IND_COOKIE" port="1025"/> 
      </tapa.expect>

      # Send Abort Req at MME 
      <tapa.send>
         <tapa.szt.aborts1req procId="SZAC_ENB_PROC" suId="1" spId="100" peerId="1" /> 
      </tapa.send>

      # Send Abort Req at MME 
      <tapa.send>
         <tapa.szt.aborts1req procId="SZAC_ENB_PROC" suId="1" spId="-1" peerId="1" /> 
      </tapa.send>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB

      <tapa.send>
         <tapa.lsz.cntrl.shutdown procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Expect Term Req to dummy SCTP
      <tapa.expect guardTmr="100">
         <tapa.sct.termreq procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spAssocId="1" assocIdType="1"/> 
      </tapa.expect>
  
      # Expect EndpClose Req to dummy SCTP
      <tapa.expect>
         <tapa.sct.endpclosereq procId="SZAC_ENB_PROC" spId="1" suEndpId="0" endpIdType="2"/> 
      </tapa.expect>

      # Do shutdown
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.34
#
#       Desc:    Verify the negative senario of S1 setup abort
#                request from application with peerCb as NULLP
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc4.xml
#
#
<tapa.testcase id="4.34">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
      "Verify the negative senario of S1 setup abort"
      "request from application  with peerCb as NULLP"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
        <tapa.flag id="SZTV2"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

      #S1 Setup
      #<tapa.dummymme.s1.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send Assoc Ind at MME 
      <tapa.send>
         <tapa.sct.assocind procId="SZAC_XTA_PROC" suId="1" suEndpId="1" assocIdx="0" type="SCT_ASSOC_IND_COOKIE" numIps="1"/> 
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expect>
         <tapa.sct.assocrsp procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spEndpId="0" type="SCT_ASSOC_IND_COOKIE" port="1025"/> 
      </tapa.expect>

      # Send Abort Req at MME 
      <tapa.send>
         <tapa.szt.aborts1req procId="SZAC_ENB_PROC" suId="1" spId="7" peerId="1" /> 
      </tapa.send>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB

      <tapa.send>
         <tapa.lsz.cntrl.shutdown procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Expect Term Req to dummy SCTP
      <tapa.expect guardTmr="100">
         <tapa.sct.termreq procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spAssocId="1" assocIdType="1"/> 
      </tapa.expect>
  
      # Expect EndpClose Req to dummy SCTP
      <tapa.expect>
         <tapa.sct.endpclosereq procId="SZAC_ENB_PROC" spId="1" suEndpId="0" endpIdType="2"/> 
      </tapa.expect>

      # Do shutdown
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.35
#
#       Desc:    Verify the negative senario of S1 setup abort
#                request from application with invalid peer Id
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc4.xml
#
#
<tapa.testcase id="4.35">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
      "Verify the negative senario of S1 setup abort"
      "request from application with invalid peer Id"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
        <tapa.flag id="SZTV2"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send Assoc Ind at MME 
      <tapa.send>
         <tapa.sct.assocind procId="SZAC_XTA_PROC" suId="1" suEndpId="1" assocIdx="0" type="SCT_ASSOC_IND_COOKIE" numIps="1"/> 
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expect>
         <tapa.sct.assocrsp procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spEndpId="0" type="SCT_ASSOC_IND_COOKIE" port="1025"/> 
      </tapa.expect>

      # Send Abort Req at MME 
      <tapa.send>
         <tapa.szt.aborts1req procId="SZAC_ENB_PROC" suId="1" spId="1" peerId="7" /> 
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expect>
         <tapa.szt.aborts1cfm procId="SZAC_XTA_PROC" suId="1" status="SZT_PRIM_NOK"/> 
      </tapa.expect>
   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB

      <tapa.send>
         <tapa.lsz.cntrl.shutdown procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Expect Term Req to dummy SCTP
      <tapa.expect guardTmr="100">
         <tapa.sct.termreq procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spAssocId="1" assocIdType="1"/> 
      </tapa.expect>
 
      # Expect EndpClose Req to dummy SCTP
      <tapa.expect>
         <tapa.sct.endpclosereq procId="SZAC_ENB_PROC" spId="1" suEndpId="0" endpIdType="2"/> 
      </tapa.expect>

      # Do shutdown
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.36
#
#       Desc:    Verify the negative senario of S1 setup abort
#                request from application when assoc is in down 
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc4.xml
#
#
<tapa.testcase id="4.36">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
      "Verify the negative senario of S1 setup abort"
      "request from application when assoc is in down"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
        <tapa.flag id="SZTV2"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send Assoc Ind at MME 
      <tapa.send>
         <tapa.sct.assocind procId="SZAC_XTA_PROC" suId="1" suEndpId="1" assocIdx="0" type="SCT_ASSOC_IND_COOKIE" numIps="1"/> 
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expect>
         <tapa.sct.assocrsp procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spEndpId="0" type="SCT_ASSOC_IND_COOKIE" port="1025"/> 
      </tapa.expect>

      # Deinit ENB
      <tapa.send>
         <tapa.sct.termind procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spAssocId="1" assocIdType="2"/> 
      </tapa.send>

      <tapa.expect>
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="1" suId="1" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_TERM_IND" status="SZT_STATUS_ASSOC_DOWN"/>
      </tapa.expect>

      # Send Abort Req at MME 
      <tapa.send>
         <tapa.szt.aborts1req procId="SZAC_ENB_PROC" suId="1" spId="1" peerId="1" /> 
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expect>
         <tapa.szt.aborts1cfm procId="SZAC_XTA_PROC" suId="1" status="SZT_PRIM_OK"/> 
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB

      <tapa.send>
         <tapa.lsz.cntrl.shutdown procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Expect EndpClose Req to dummy SCTP
      <tapa.expect>
         <tapa.sct.endpclosereq procId="SZAC_ENB_PROC" spId="1" suEndpId="0" endpIdType="2"/> 
      </tapa.expect>

      # Do shutdown
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    4.37
#
#       Desc:    Verify the S1 setup abort request from application  
#                when assoc is in up state
#
#       Notes:   None
#              
#       Module:  
#
#       File:    szac_tc4.xml
#
#
<tapa.testcase id="4.37">

   # Document subsection
   <tapa.doc>

      <tapa.rfc id="None" section="None"/>
      <tapa.module id="s1ap"/>

      <tapa.desc>
      "Verify the S1 setup abort request from application"
      "when assoc is in up state"
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>

   # Require features and flags subsection
   <tapa.require>

      <tapa.ifdef>
        <tapa.flag id="SZTV2"/>
      </tapa.ifdef>

      <tapa.ifndef/>
      <tapa.mode mode="single"/>

   </tapa.require>

   # Configuration subsection
   <tapa.cfg>

      # Bring up ENB
      <tapa.sz.dummymme1.init/>

      # Send Bind Req at eNB
      <tapa.send>
         <tapa.szt.bndreq procId="SZAC_XTA_PROC" spId="1" suId="1"/> 
      </tapa.send>
  
      # Expect Bnd Cfm at eNB 
      <tapa.expect>
         <tapa.szt.bndcfm procId="SZAC_XTA_PROC" spId="1" suId="1" status="1"/> 
      </tapa.expect>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      # Send Assoc Ind at MME 
      <tapa.send>
         <tapa.sct.assocind procId="SZAC_XTA_PROC" suId="1" suEndpId="1" assocIdx="0" type="SCT_ASSOC_IND_COOKIE" numIps="1"/> 
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expect>
         <tapa.sct.assocrsp procId="SZAC_XTA_PROC" spId="1" assocIdx="0" spEndpId="0" type="SCT_ASSOC_IND_COOKIE" port="1025"/> 
      </tapa.expect>
 
      # Send Sta Ind at MME 
      <tapa.send>
         <tapa.sct.staind procId="SZAC_XTA_PROC" suId="1"  status="SCT_STATUS_COMM_UP"/> 
      </tapa.send>

      # Expect Status Indiaction ASSOC UP at MME & eNB 
      <tapa.expect>
         <tapa.szt.staind procId="SZAC_XTA_PROC" peerId="1" suId="1" staType="SZT_STA_TYPE_ASSOC" reason="SZT_REASON_RCVD_COMM_UP" status="SZT_STATUS_ASSOC_UP"/>
      </tapa.expect>    

      # Send an S1 SETUP REQ Msg from eNB to MME
      <tapa.send>
         <tapa.sct.datind eventType="SZT_MSG_ID_SETUP_REQ" suId="1" procId="SZAC_XTA_PROC" assocIdx="0" strmId="1"/>
      </tapa.send>

      # Expect S1 SETUP REQ Msg at eNB
      <tapa.expect>
         <tapa.szt.udatind eventType="SZT_MSG_ID_SETUP_REQ" procId="SZAC_XTA_PROC" peerId="1" suId="1"/>
      </tapa.expect>

      # Send an S1 SETUP RESPONSE Msg from MME to eNB
      <tapa.send>
         <tapa.szt.udatreq eventType="SZT_MSG_ID_SETUP_RSP" procId="SZAC_XTA_PROC" peerId="1" spId="1"/>
      </tapa.send>
    
      # Expect S1 Setup Response at ENB
      <tapa.expect>
         <tapa.sct.datreq eventType="SZT_MSG_ID_SETUP_RSP" suId="1" procId="SZAC_XTA_PROC" suAssocId="0" assocIdx="0"/>
      </tapa.expect>
 
      # Send Abort Req at MME 
      <tapa.send>
         <tapa.szt.aborts1req procId="SZAC_XTA_PROC" suId="1" spId="1" peerId="1" /> 
      </tapa.send>

      # Expect Assoc Resp to dummy SCTP
      <tapa.expect>
         <tapa.sct.termreq procId="SZAC_ENB_PROC" spId="1" assocIdx="0" spAssocId="1" assocIdType="2"/> 
      </tapa.expect>

     # Deinit ENB
      <tapa.send>
         <tapa.sct.termcfm procId="SZAC_ENB_PROC"  suId="1" assocIdx="0" spAssocId="1" assocIdType="2"/> 
      </tapa.send> 

   </tapa.test>

   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>

      # Deinit ENB

      <tapa.send>
         <tapa.lsz.cntrl.shutdown procId="SZAC_XTA_PROC"/>
      </tapa.send>

      # Expect EndpClose Req to dummy SCTP
      <tapa.expect>
         <tapa.sct.endpclosereq procId="SZAC_XTA_PROC" spId="1" suEndpId="0" endpIdType="2"/> 
      </tapa.expect>
  
      # Do shutdown
      <tapa.expect>
         <tapa.lsz.cntrlcfm procId="SZAC_XTA_PROC"/>
      </tapa.expect>

   </tapa.shutdown>

</tapa.testcase>




#
# DO NOT DELETE THIS LINE -- TC number generation script depends on it.
# xyzabcend

#/********************************************************************30**
#
#         End of file:     szac_tc4.xml
#
#*********************************************************************31*/
#
#
#/********************************************************************40**
#
#        Notes:
#
#*********************************************************************41*/
#
#/********************************************************************50**
#
#*********************************************************************51*/
#
#
#/********************************************************************60**
#
#        Revision history:
#
#*********************************************************************61*/
#
#/********************************************************************90**
#
#     ver       pat    init                  description
#------------ -------- ---- ----------------------------------------------
#$SID$        ---      pkaX  1. Updated for S1AP release 3.1
#/main/1     sz004.301 va    1. Updated for Transparent Container Enc/Dec
#*********************************************************************91*/
