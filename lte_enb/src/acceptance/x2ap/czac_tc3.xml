#
#/********************************************************************20**
#
#     Name:    X2AP 
#
#     Type:    XML Test File
#
#     Desc:    XML Based Test Cases
#
#     File:    czac_tc3.xml
#
#     Sid:     fileName
#
#     Prg:     sv
#
#*********************************************************************21*/

# DO NOT DELETE THIS LINE -- TC number generation script depends on it.
# xyzabcstart=3:sv:czac_tc3.xml

#
#
#       Test:    3.1
#
#       Desc:    Verify that a Handover Request sent from source eNodeB is
#                successfully responded with a Handover Request Acknowledge
#                from target eNodeB.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.1">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#   S eNodeB-----Handover Request----------------------------------------T eNodeB
#   S eNodeB----Handover Request Acknowledge---------------------------- T eNodeB
#
# Expected validation in test code and testing:
# At S eNodeB, 
#   a. Validate for match of old eNB UE X2AP ID received in HO Request Ack, with
#      the one sent in HO Request.

      <tapa.desc>
       Verify that a Handover Request sent from source eNodeB is
       successfully responded with a Handover Request Acknowledge
       from target eNodeB.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init />
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>
   </tapa.test>


   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.2
#
#       Desc:    Verify that a Handover Request sent from source eNodeB is
#                responded with a Handover Preparation Failure from target eNodeB.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.2">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />
#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB-----Handover Preparation Failure---------------------------- T eNodeB
#
# Expected validation in test code and testing:
# At S eNodeB (optional) 
#   a. Validate for match of old eNB UE X2AP ID received in HO Prep Failure, with
#      the one sent in HO Request.
#
      <tapa.desc>
       Verify that a Handover Request sent from source eNodeB is
       responded with a Handover Preparation Failure from target eNodeB.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
      
     <!-- GP Setup -->
     <tapa.cz.x2.init />

      # Start the actual handover now 
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_FAIL" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_FAIL" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.3
#
#       Desc:    Verify that a Handover Request sent from source eNodeB is
#                cancelled with a generation of Handover Cancel on expiry of
#                TRelocprep timer, from source eNodeB X2AP stack.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.3">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
# TRelocprep Timer expiry, stack should generate HO cancel
#   S eNodeB----Handover Cancel----------------------------------------->T eNodeB
#
#Expected validation in test code and testing:
#At T eNodeB 
#   a. Validate for match of old eNB UE X2AP ID received in HO Cancel, with
#      the one received in HO Request.
#   a. Validate the presence of cause IE received in HO Cancel as 
#      Enumerated value of "TRELOCprep Expiry".

      <tapa.desc>
       Verify that a Handover Request sent from source eNodeB is
       cancelled with a generation of Handover Cancel on expiry of 
       TRelocprep timer, from source eNodeB X2AP stack.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

      #Set the TRelocprep timer to 1 second explicitly
      <tapa.send>
<!--         <tapa.lcz.cfg.prot procId="CZAC_LCZ_ENB1_PRC" tRELOCprep="10" tX2RELOCOverall="10" timeToWait="10"/> -->
         <tapa.lcz.cfg.prot procId="CZAC_LCZ_ENB1_PRC" tRELOCprep="3000"/>
      </tapa.send>

      # Receive the confirm for the protocol configuration request.
      <tapa.expect>
         <tapa.lcz.cfgcfm procId="CZAC_LCZ_ENB1_PRC"/>
      </tapa.expect>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
              <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
              <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

     <!-- <tapa.delay delay="10" />  -->

      #Stack at eNB1 generates the Handover Cancel internally when the timer
      # TRelocprep expires.

     <tapa.expect gaurdTmr="100">
       <tapa.czt.staind procId="CZAC_LCZ_ENB1_PRC" peerId="2" 
                        staType="CZT_STA_TYPE_TMR_EXPIRY"
                        status="CZT_STATUS_UE_TRELOCPREP_EXPIRY"
                        reason="CZT_REASON_NOT_APPL" />

     </tapa.expect>
     <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_CANCEL" 
                        causeType="CAUSE_RADIONW" 
                        causeVal="10"/>
                  #CztCauseRadioNwtrelocprep_expiryEnum
     </tapa.expect>

      
   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.4
#
#       Desc:    Verify that a Handover Request sent from source eNodeB is
#                cancelled with a Handover Cancel intiated from application.
#                Stack should stop TRelocprep timer before sending the Handover
#                Cancel to network.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.4">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB----Handover Cancel----------------------------------------->T eNodeB
#
#Expected validation in test code and testing:
#At T eNodeB (optional) 
#   a. Validate for match of old eNB UE X2AP ID received in HO Cancel, with
#      the one received in HO Request.

      <tapa.desc>
       Verify that a Handover Request sent from source eNodeB is
       cancelled with a Handover Cancel intiated from application.
       Stack should stop TRelocprep timer before sending the Handover
       Cancel to network.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup Ready -->
     <tapa.cz.x2.init/>

      <tapa.send>
              <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
              <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

     #Generating HO Cancel explicitly from user 
      <tapa.send>
              <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_CANCEL" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
              <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_CANCEL" />
      </tapa.expect>
   
   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.5
#
#       Desc:    Verify that a prepared Handover procedure is cancelled with a
#                Handover Cancel intiated from application at source eNodeB,
#                before UE Context Release is received from target eNodeB.
#                X2AP Stack at source, should stop TRelocX2Overall timer before sending
#                the Handover Cancel to network.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.5">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB----Handover Request Acknowledge---------------------------- T eNodeB
#   S eNodeB----Handover Cancel----------------------------------------->T eNodeB
#
#Expected validation in test code and testing:
#At T eNodeB (optional) 
#   a. Validate for match of old eNB UE X2AP ID received in HO Cancel, with
#      the one received in HO Request.

      <tapa.desc>
       Verify that a prepared Handover procedure is cancelled with a
       Handover Cancel intiated from application at source eNodeB,
       before UE Context Release is received from target eNodeB.
       X2AP Stack at source, should stop TRelocX2Overall timer before sending
       the Handover Cancel to network.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup ready -->
     <tapa.cz.x2.init/>

      <tapa.send>
      <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
      <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
      <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK"  oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
         <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

     #Generating HO Cancel explicitly from user 
      <tapa.send>
    <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_CANCEL" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
         <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_CANCEL" />
      </tapa.expect>
   
   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.6
#
#       Desc:    Verify that a prepared Handover procedure is cancelled with a
#                generation of Handover Cancel on expiry of TRelocX2Overall timer
#                from source eNodeB, stack. This is before UE Context Release is
#                received from target eNodeB.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.6">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB----Handover Request Acknowledge---------------------------- T eNodeB
# TRelocX2Overall Timer expiry, stack should generate HO cancel
#   S eNodeB----Handover Cancel----------------------------------------->T eNodeB
#
# Expected validation in test code and testing:
# At T eNodeB (optional) 
#   a. Validate for match of old eNB UE X2AP ID received in HO Cancel, with
#      the one received in HO Request.

      <tapa.desc>
       Verify that a prepared Handover procedure is cancelled with a
       generation of Handover Cancel on expiry of TRelocX2Overall timer
       from source eNodeB, stack. This is before UE Context Release is
       received from target eNodeB.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>

      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>


   # Test Steps subsection
   <tapa.test>

     #Set the TX2RelocOverall timer to 1 second explicitly
      <tapa.send>
         <tapa.lcz.cfg.prot procId="CZAC_LCZ_ENB1_PRC" tX2RELOCOverall="2000" />
      </tapa.send>

      # Receive the confirm for the protocol configuration request.
      <tapa.expect>
         <tapa.lcz.cfgcfm procId="CZAC_LCZ_ENB1_PRC"/>
      </tapa.expect>

     <!-- GP Setup ready -->
     <tapa.cz.x2.init/>

      <tapa.send>
         <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
         <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
     <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK"  oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
         <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

     <!-- <tapa.delay delay="10"/> -->

      #Stack at eNB1 generates the Handover Cancel internally when the timer
      # TX2Relocoverall expires.
     
     <tapa.expect gaurdTmr="100">
       <tapa.czt.staind procId="CZAC_LCZ_ENB1_PRC" peerId="2" 
                        staType="CZT_STA_TYPE_TMR_EXPIRY"
                        status="CZT_STATUS_UE_TX2RELOCOVERALL_EXPIRY"
                        reason="CZT_REASON_NOT_APPL" />
     </tapa.expect>
<!-- CR:ccpu00129802
      <tapa.expect>
         <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_CANCEL"
                        causeType="CAUSE_RADIONW" 
                        causeVal="9" />
                        #CztCauseRadioNwtx2relocoverall_expiryEnum"
      </tapa.expect>
   -->
   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.7
#
#       Desc:    Verify that on a prepared Handover procedure, SN Status Transfer
#                is sent from source eNodeB and successfully received at target eNodeB.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.7">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB----Handover Request Acknowledge---------------------------- T eNodeB
#   S eNodeB----SN Status Transfer--------------------------------------->T eNodeB
#
# Expected validation in test code and testing:
# At T eNodeB (optional) 
#   a. Validate for match of old eNB UE X2AP ID and new eNB UE X2AP ID values 
#      received in SN Status Transfer, with the one preserved at target eNB
#      application.

      <tapa.desc>
       Verify that on a prepared Handover procedure, SN Status Transfer
       is sent from source eNodeB and successfully received at target eNodeB.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>
   
     <!-- GP Setup ready -->
     <tapa.cz.x2.init/>

      <tapa.send>
         <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
         <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
      <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK"  oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
      <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
     <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR" 
                      oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
         <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_SN_STATUS_TRFR"/>
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.8
#
#       Desc:    Verify that on a prepared Handover procedure, SN Status Transfer
#                is sent from source eNodeB multiple times only if Handover Cancel is
#                not already sent from source and UE Context Release is not
#                already received at source eNodeB, on the same UE.
#                All the validation at source eNodeB, holds good for target eNodeB
#                also for same functionality. SN Status Transfer should be
#                successfully be received at target eNodeB application.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.8">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB----Handover Request Acknowledge---------------------------- T eNodeB
#   S eNodeB----SN Status Transfer--------------------------------------->T eNodeB
#   S eNodeB----SN Status Transfer--------------------------------------->T eNodeB
#   S eNodeB----SN Status Transfer--------------------------------------->T eNodeB
#   S eNodeB----SN Status Transfer--------------------------------------->T eNodeB
#
# Expected validation in test code and testing:
# At T eNodeB (optional) 
#   a. Validate for match of old eNB UE X2AP ID and new eNB UE X2AP ID values 
#      received in SN Status Transfer, with the one preserved at target eNB
#      application.

      <tapa.desc>
      Verify that on a prepared Handover procedure, SN Status Transfer
      is sent from source eNodeB multiple times only if Handover Cancel is
      not already sent from source and UE Context Release is not 
      already received at source eNodeB, on the same UE.
      All the validation at source eNodeB, holds good for target eNodeB
      also for same functionality. SN Status Transfer should be
      successfully be received at target eNodeB application.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

   #Set the TX2RelocOverall timer to 1 second explicitly
      <tapa.send>
         <tapa.lcz.cfg.prot procId="CZAC_LCZ_ENB1_PRC" tX2RELOCOverall="5000"/>
      </tapa.send>

      # Receive the confirm for the protocol configuration request.
      <tapa.expect>
         <tapa.lcz.cfgcfm procId="CZAC_LCZ_ENB1_PRC"/>
      </tapa.expect>

     <!-- GP Setup ready -->
     <tapa.cz.x2.init/>

      <tapa.send>
         <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1"/>
      </tapa.send>

      <tapa.expect>
         <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ"/>
      </tapa.expect>

      <tapa.send>
         <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
         <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK"/>
      </tapa.expect>

      <tapa.send>
    <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR" 
                     oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
         <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_SN_STATUS_TRFR"/>
      </tapa.expect>

<!--      <tapa.delay delay="10"/> -->

      #Stack at eNB1 generates the Handover Cancel internally when the timer
      # TX2Relocoverall expires.

     <tapa.expect gaurdTmr="100">
       <tapa.czt.staind procId="CZAC_LCZ_ENB1_PRC" peerId="2" 
                        staType="CZT_STA_TYPE_TMR_EXPIRY"
                        status="CZT_STATUS_UE_TX2RELOCOVERALL_EXPIRY"
                        reason="CZT_REASON_NOT_APPL" />
     </tapa.expect>

<!-- CR:ccpu00129802
      <tapa.expect>
         <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_CANCEL"
                        causeType="CAUSE_RADIONW" 
                        causeVal="9" />
                        #CztCauseRadioNwtx2relocoverall_expiryEnum"
      </tapa.expect>
-->

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.9
#
#       Desc:    Verify that on a cancelled Handover procedure due to expiry of
#                TRelocprep, SN Status Transfer cannot be sent from source eNodeB,
#                Application at source eNodeB expects the error back from the stack.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.9">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
# TRelocprep Timer expiry, stack should generate HO cancel
#   S eNodeB----Handover Cancel  ----------------------------------------> T eNodeB
# Send SN Status Transfer from application at S eNodeB.
# Expect error back at application
#

      <tapa.desc>
      Verify that on a cancelled Handover procedure due to expiry of
      TRelocprep, SN Status Transfer cannot be sent from source eNodeB,
      Application at source eNodeB expects the error back from the stack.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

    #Set the TRelocprep timer to 1 second explicitly
      <tapa.send>
         <tapa.lcz.cfg.prot procId="CZAC_LCZ_ENB1_PRC" tRELOCprep="3000"/>
      </tapa.send>

      # Receive the confirm for the protocol configuration request.
      <tapa.expect>
         <tapa.lcz.cfgcfm procId="CZAC_LCZ_ENB1_PRC"/>
      </tapa.expect>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

     <tapa.send>
         <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
         <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

<!--      <tapa.delay delay="20"/> -->

      #Stack at eNB1 generates the Handover Cancel internally when the timer
      # TRelocprep expires.

     <tapa.expect gaurdTmr="100">
       <tapa.czt.staind procId="CZAC_LCZ_ENB1_PRC" peerId="2" 
                        staType="CZT_STA_TYPE_TMR_EXPIRY"
                        status="CZT_STATUS_UE_TRELOCPREP_EXPIRY"
                        reason="CZT_REASON_NOT_APPL" />

     </tapa.expect>
     <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_CANCEL" 
                        causeType="CAUSE_RADIONW" 
                        causeVal="10"/>
                  #CztCauseRadioNwtrelocprep_expiryEnum
     </tapa.expect>

     <tapa.send>
      <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR" 
                       oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>
      
      <tapa.expect>
        <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR"
                         errType="CZT_ERRTYPE_INTERNAL"
                         errCause="CZT_ERRCAUSE_UNEXP_MSG" />
      </tapa.expect>
    
   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.10
#
#       Desc:    Verify that on a prepared Handover procedure, SN Status Transfer
#                cannot be sent from source eNodeB, if Handover Cancel is already
#                sent from Stack, due to expiry of TRelocX2Overall. Application
#                at source eNodeB expects the error back from the stack.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.10">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB----Handover Request Acknowledge---------------------------- T eNodeB
# TRelocX2Overall Timer expiry, stack should generate HO cancel
#   S eNodeB----Handover Cancel  ----------------------------------------> T eNodeB
# Send SN Status Transfer from application at S eNodeB.
# Expect error back at application
#

      <tapa.desc>
      Verify that on a prepared Handover procedure, SN Status Transfer
      cannot be sent from source eNodeB, if Handover Cancel is already
      sent from Stack, due to expiry of TRelocX2Overall. Application
      at source eNodeB expects the error back from the stack.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

    #Set the TRelocprep timer to 1 second explicitly
      <tapa.send>
         <tapa.lcz.cfg.prot procId="CZAC_LCZ_ENB1_PRC" tX2RELOCOverall="2000"/>
      </tapa.send>

      # Receive the confirm for the protocol configuration request.
      <tapa.expect>
         <tapa.lcz.cfgcfm procId="CZAC_LCZ_ENB1_PRC"/>
      </tapa.expect>


     <!-- GP Setup -->
     <tapa.cz.x2.init/>

     <tapa.send>
         <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1"/>
      </tapa.send>

      <tapa.expect>
         <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
      <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK"  
                               oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
         <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK"/>
      </tapa.expect>

     <!-- <tapa.delay delay="10"/> -->

      #Stack at eNB1 generates the Handover Cancel internally when the timer
      # TX2Relocoverall expires.

     <tapa.expect gaurdTmr="100">
       <tapa.czt.staind procId="CZAC_LCZ_ENB1_PRC" peerId="2" 
                        staType="CZT_STA_TYPE_TMR_EXPIRY"
                        status="CZT_STATUS_UE_TX2RELOCOVERALL_EXPIRY"
                        reason="CZT_REASON_NOT_APPL" />
     </tapa.expect>

<!-- CR:ccpu00129802
      <tapa.expect>
         <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_CANCEL"
                        causeType="CAUSE_RADIONW" 
                        causeVal="9" />
                        #CztCauseRadioNwtx2relocoverall_expiryEnum"
      </tapa.expect>
-->
      <tapa.send>
        <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR" 
                     oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>
      
      <tapa.expect>
        <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR"
                         errType="CZT_ERRTYPE_INTERNAL"
                         errCause="CZT_ERRCAUSE_UNEXP_MSG" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.11
#
#       Desc:    Verify that before the Handover preparation is complete, SN
#                Status Transfer cannot be sent from source eNodeB. Application
#                at source eNodeB expects the error back from the stack.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.11">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
# Send SN Status Transfer from application at S eNodeB.
# Expect error back at application
#

      <tapa.desc>
      Verify that before the Handover preparation is complete, SN
      Status Transfer cannot be sent from source eNodeB. Application
      at source eNodeB expects the error back from the stack.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup ready -->
     <tapa.cz.x2.init/>

      <tapa.send>
         <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1"/>
      </tapa.send>

      <tapa.expect>
         <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ"/>
      </tapa.expect>

      <tapa.send>
    <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR" 
                     oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
        <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR"
                         errType="CZT_ERRTYPE_INTERNAL"
                         errCause="CZT_ERRCAUSE_INV_STATE" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.12
#
#       Desc:    Verify that on a failed Handover preparation procedure, SN
#                Status Transfer cannot be sent from source eNodeB. Application
#                at source eNodeB expects the error back from the stack.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.12">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB-----Handover Preparation Failure---------------------------- T eNodeB
# Send SN Status Transfer from application at S eNodeB.
# Expect error back at application
#

      <tapa.desc>
      Verify that on a failed Handover preparation procedure, SN
      Status Transfer cannot be sent from source eNodeB. Application
      at source eNodeB expects the error back from the stack.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup ready -->
     <tapa.cz.x2.init/>

      # Start the actual handover now 
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_FAIL" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_FAIL" />
      </tapa.expect>

      <tapa.send>
     <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR" 
                      oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>
      
      <tapa.expect>
        <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR"
                         errType="CZT_ERRTYPE_INTERNAL"
                         errCause="CZT_ERRCAUSE_UNEXP_MSG" />
      </tapa.expect>


   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.13
#
#       Desc:    Verify that SN Status Transfer message can never be sent by target
#                eNodeB, irrespective of the state of Handover procedure.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.13">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
# Send SN Status Transfer from application at T eNodeB.
# Expect error back at application at T eNodeB.
#

      <tapa.desc>
      Verify that SN Status Transfer message can never be sent by target
      eNodeB, irrespective of the state of Handover procedure.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup ready -->
     <tapa.cz.x2.init/>

      # Start the actual handover now 
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
     <tapa.czt.bmpreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_SN_STATUS_TRFR" 
                      oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>
      
      <tapa.expect>
        <tapa.czt.errind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_SN_STATUS_TRFR"
                         errType="CZT_ERRTYPE_INTERNAL"
                         errCause="CZT_ERRCAUSE_UNEXP_MSG" />
      </tapa.expect>


   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.14
#
#       Desc:    Verify that a Handover procedure, is completed by
#                sending UE Context Release from target eNodeB and received successfully
#                by source eNodeB.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.14">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB-----Handover Request Acknowledge---------------------------- T eNodeB
#   S eNodeB-----UE Context Release-------------------------------------- T eNodeB
#

      <tapa.desc>
      Verify that a Handover procedure, is completed by 
      sending UE Context Release from target eNodeB and received successfully
      by source eNodeB.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>


   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
     <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
     <tapa.czt.bmpreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_UE_CXT_RELEASE" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_UE_CXT_RELEASE" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.15
#
#       Desc:    Verify that on a Handover preparation procedure, SN Status Transfer
#                can be sent from source to target eNodeB before the procedure is
#                completed by sending UE Context Release from target eNodeB and
#                received successfully by source eNodeB.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.15">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB-----Handover Request Acknowledge---------------------------- T eNodeB
#   S eNodeB----SN Status Transfer--------------------------------------->T eNodeB
#   S eNodeB-----UE Context Release-------------------------------------- T eNodeB
#

      <tapa.desc>
      Verify that on a Handover preparation procedure, SN Status Transfer 
      can be sent from source to target eNodeB before the procedure is
      completed by sending UE Context Release from target eNodeB and received
      successfully by source eNodeB.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>


   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
     <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR" 
                      oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
         <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_SN_STATUS_TRFR"/>
      </tapa.expect>


      <tapa.send>
    <tapa.czt.bmpreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_UE_CXT_RELEASE" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_UE_CXT_RELEASE" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.16
#
#       Desc:    Verify that on a prepared Handover procedure, SN Status Transfer
#                is sent from source eNodeB before the Handover Cancel is
#                sent from source is received at target eNodeB application.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.16">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB----Handover Request Acknowledge---------------------------- T eNodeB
#   S eNodeB----SN Status Transfer--------------------------------------->T eNodeB
#   S eNodeB----Handover Cancel ----------------------------------------->T eNodeB
#
# Expected validation in test code and testing:
# At T eNodeB (optional) 
#   a. Validate for match of old eNB UE X2AP ID and new eNB UE X2AP ID values 
#      received in SN Status Transfer, with the one preserved at target eNB
#      application.

      <tapa.desc>
      Verify that on a prepared Handover procedure, SN Status Transfer
      is sent from source eNodeB before the Handover Cancel is
      sent from source is received at target eNodeB application.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>


   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
     <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
      <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR" 
                       oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
         <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_SN_STATUS_TRFR"/>
      </tapa.expect>


     <tapa.send>
     <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_CANCEL" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind  procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_CANCEL" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.17
#
#       Desc:    Verify that user at source eNodeB can terminate the handover
#          for an UE at any time.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.17">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   Send release request at Source eNodeB with release type UE and valid oldUEX2APId
#   Expect the successful release confirm back.
#

      <tapa.desc>
        Verify that user at source eNodeB can terminate the handover
        for an UE at any time.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
     <tapa.send>
     <tapa.czt.relreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" relType="CZT_RELTYPE_UE" 
                      relNodeType="CZT_NODETYPE_LOCAL" 
                      oldUEX2APId="1"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.relcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" relType="CZT_RELTYPE_UE"
                         status="CZT_PRIM_OK" reason="CZT_REASON_NOT_APPL"/>
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.18
#
#       Desc:    Verify that user at target eNodeB can terminate the handover
#                for an UE at any time.
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.18">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   Send release request at Target eNodeB with release type UE and valid oldUEX2APId
#   Expect the successful release confirm back.

      <tapa.desc>
        Verify that user at source eNodeB can terminate the handover
        for an UE at any time.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
     <tapa.send>
     <tapa.czt.relreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" relType="CZT_RELTYPE_UE" 
                      relNodeType="CZT_NODETYPE_REMOTE" oldUEX2APId="1"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.relcfm  procId="CZAC_LCZ_ENB2_PRC" peerId="1" relType="CZT_RELTYPE_UE"
                         status="CZT_PRIM_OK" reason="CZT_REASON_NOT_APPL"/>
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.19
#
#       Desc:    Verify that Handover Cancel cannot be sent by source eNodeB
#                once Handover procedure is completed by the receipt of
#                UE Context Release at source eNodeB.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.19">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------->T eNodeB
#   S eNodeB----Handover Request Acknowledge------------------T eNodeB
#   S eNodeB----UE Context Release--------------------------->T eNodeB
# Send Handover Cancel from application at S eNodeB.
# Expect error back at application at S eNodeB
#

      <tapa.desc>
      Verify that Handover Cancel cannot be sent by source eNodeB 
      once Handover procedure is completed by the receipt of 
      UE Context Release at source eNodeB.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
     <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>


   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
     <tapa.czt.bmpreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_UE_CXT_RELEASE" 
                      oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_UE_CXT_RELEASE" />
      </tapa.expect>

      <tapa.send>
      <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_CANCEL" 
                       oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>
      
      <tapa.expect>
        <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_CANCEL"
                         errType="CZT_ERRTYPE_INTERNAL"
                         errCause="CZT_ERRCAUSE_UNEXP_MSG" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.20
#
#       Desc:    Verify that Handover Cancel can never be initiated by
#                target eNodeB, irrespective of state of Handover.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.20">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------->T eNodeB
#   S eNodeB----Handover Request Acknowledge------------------T eNodeB
# Send Handover Cancel from application at T eNodeB.
# Expect error back at application at T eNodeB
#

      <tapa.desc>
      Verify that Handover Cancel can never be initiated by
      target eNodeB, irrespective of state of Handover.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      # Start the actual handover now 
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_CANCEL" 
                        oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>
      
      <tapa.expect>
        <tapa.czt.errind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_CANCEL"
                         errType="CZT_ERRTYPE_INTERNAL"
                         errCause="CZT_ERRCAUSE_UNEXP_MSG" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.21
#
#       Desc:    Verify that UE Context Release can never be initiated by
#                source eNodeB, irrespective of state of Handover.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.21">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------->T eNodeB
#   S eNodeB----Handover Request Acknowledge------------------T eNodeB
# Send UE Context Release from application at S eNodeB.
# Expect error back at application at S eNodeB
#

      <tapa.desc>
      Verify that UE Context Release can never be initiated by
      source eNodeB, irrespective of state of Handover.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      # Start the actual handover now 
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
     <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_UE_CXT_RELEASE" 
                      oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>
      
      <tapa.expect>
        <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_UE_CXT_RELEASE"
                         errType="CZT_ERRTYPE_INTERNAL"
                         errCause="CZT_ERRCAUSE_UNEXP_MSG" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.22
#
#       Desc:    Verify that two Handover Requests initiated by application with the
#                same Old UE X2AP ID value is rejected by X2AP stack. Application
#                expects the error back from stack.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.22">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request(Old UE X2AP ID = "X")--------------->T eNodeB
#
# Send two HO Request from application with Old UE X2AP ID = "X".
# Expect error back at application for the second.

      <tapa.desc>
      Verify that two Handover Requests initiated by application with the
      same Old UE X2AP ID value is rejected by X2AP stack. Application
      expects the error back from stack.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      # Start the actual handover now 
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
     <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>
      
      <tapa.expect>
        <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ"
                         errType="CZT_ERRTYPE_INTERNAL"
                         errCause="CZT_ERRCAUSE_INV_STATE" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>



#
#
#       Test:    3.23
#
#       Desc:    Verify that two Handover Request Acks initiated by application with the
#                same New UE X2AP ID value is rejected by X2AP stack. Application
#                expects the error back from stack.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.23">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request------------------------------------>T eNodeB
#   S eNodeB-----Handover Request Ack (New UE X2AP ID = "X")---------------T eNodeB
#
# Send two HO Request Ack from application with New UE X2AP ID = "X".
# Expect error back at application for the second.

      <tapa.desc>
      Verify that two Handover Request Acks initiated by application with the
      same New UE X2AP ID value is rejected by X2AP stack. Application
      expects the error back from stack.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      # Start the actual handover now 
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
     <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>
      
      <tapa.expect>
       <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

    #Send another HO Request Ack from target eNodeB
      <tapa.send>
     <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
        <tapa.czt.errind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK"
                         errType="CZT_ERRTYPE_INTERNAL"
                         errCause="CZT_ERRCAUSE_INV_STATE" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>

# Removing 3.24 test case : as we have identified that code part with respect i
# this test case is redundant.


#
#
#       Test:    3.24
#
#       Desc:    Verify Reset Request sent from source enodeB
#                successfully aborts/terminates the ongoing Handover preparation
#                procedure at both source and target eNodeB. X2AP stack at source
#                eNodeB shall release the resources immediately with this,
#                without waiting for response back from target eNodeB. 
#                X2AP stack at target eNodeB shall 
#                release the resources after receiving Reset Response from application.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.24">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request--------------->T eNodeB
#   S eNodeB-----Reset Request------------------>T eNodeB
#   Send the Handover Cancel from source eNodeB. Expect the error indication
#   back at application
#   S eNodeB-----Reset Response-----------------T eNodeB

      <tapa.desc>
      Verify Reset Request sent from source enodeB 
      successfully aborts/terminates the ongoing Handover preparation
      procedure at both source and target eNodeB. X2AP stack at source
      eNodeB shall release the resources only immediately with this.
      X2AP stack at target eNodeB shall 
      release the resources after receiving Reset Response from application.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      # Start the actual handover now 
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_RESET" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_RESET" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_CANCEL" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_CANCEL"
                         errType="CZT_ERRTYPE_INTERNAL"
                         errCause="CZT_ERRCAUSE_INV_STATE" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.25
#
#       Desc:    Verify Reset Request sent from source enodeB
#                successfully aborts/terminates the prepared Handover procedure
#                procedure at both source and target eNodeB. X2AP stack at source
#                eNodeB shall release the resources immediately with this,
#                without waiting for response back from target eNodeB. 
#                X2AP stack at target eNodeB shall
#                release the resources after receiving Reset Response from application.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.25">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request--------------->T eNodeB
#   S eNodeB-----Reset Request------------------>T eNodeB
#   S eNodeB-----Reset Response-----------------T eNodeB
#   Send the Handover Request Ack from target eNodeB. Expect the error indication
#   back at application
#

      <tapa.desc>
      Verify Reset Request sent from source enodeB 
      successfully aborts/terminates the prepared Handover procedure
      at both source and target eNodeB. X2AP stack at source
      eNodeB shall release the resources  immediately with this,
      without waiting for response back from target eNodeB. 
      X2AP stack at target eNodeB shall 
      release the resources after receiving Reset Response from application.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      # Start the actual handover now 
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_RESET" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_RESET" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_RESET_RSP" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_RESET_RSP" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK"
                         errType="CZT_ERRTYPE_INTERNAL"
                         errCause="CZT_ERRCAUSE_UNEXP_MSG" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.26
#
#       Desc:    Verify Reset Request sent from source enodeB
#                successfully aborts/terminates the prepared Handover procedure
#                procedure at both source and target eNodeB. X2AP stack at source
#                eNodeB shall release the resources immediately with this,
#                without waiting for response back from target eNodeB. 
#                X2AP stack at target eNodeB shall
#                release the resources after receiving Reset Response from application.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.26">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request--------------->T eNodeB
#   S eNodeB-----Handover Request Ack-----------T eNodeB
#   S eNodeB-----SN Status Transfer------------->T eNodeB
#   S eNodeB-----Reset Request------------------>T eNodeB
#   S eNodeB-----Reset Response-----------------T eNodeB
#

      <tapa.desc>
      Verify Reset Request sent from source enodeB 
      successfully aborts/terminates the prepared Handover procedure
      at both source and target eNodeB. X2AP stack at source
      eNodeB shall release the resources only after receiving Reset
      Response back from target eNodeB. X2AP stack at target eNodeB shall 
      release the resources after receiving Reset Response from application.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

   <!-- GP Setup -->
     <tapa.cz.x2.init/>

      # Start the actual handover now 
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
      <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
     <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR" 
                      oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
         <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_SN_STATUS_TRFR"/>
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_RESET" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_RESET" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_RESET_RSP" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_RESET_RSP" />
      </tapa.expect>


   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.27
#
#       Desc:   Verify that user at source eNodeB can terminate the handover
#               for an UE even after HO Preparation is complete.
#               UE Context Release received after this, is informed back to peer
#               Also the application at source eNodeB shall be informed about this
#               event
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.27">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request--------------->T eNodeB
#   S eNodeB-----Handover Request Ack-----------T eNodeB
#   S eNodeB-----UE Context Release-------------T eNodeB
#   S eNodeB-----Error Indication--------------->T eNodeB
#   Expect error indication at source eNodeB also.

      <tapa.desc>
        Verify that user at source eNodeB can terminate the handover
        for an UE even after HO Preparation is complete.
        UE Context Release received after this, is informed back to peer
        Also the application at source eNodeB shall be informed about this
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

     <tapa.send>
     <tapa.czt.relreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" relType="CZT_RELTYPE_UE" 
                      relNodeType="CZT_NODETYPE_LOCAL" 
                      oldUEX2APId="1"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.relcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" relType="CZT_RELTYPE_UE"
                         status="CZT_PRIM_OK" reason="CZT_REASON_NOT_APPL"/>
      </tapa.expect>


      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_UE_CXT_RELEASE" 
                      oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expset>

        <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2"
                      eventType="CZT_MSG_UE_CXT_RELEASE" 
                      errType="CZT_ERRTYPE_FROM_PEER" 
                      errCause="CZT_ERRCAUSE_INV_STATE" />

       <tapa.czt.gperrind  procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_ERR_IND"
                           trigMsgType="CZT_MSG_UE_CXT_RELEASE"  
                           oldUEX2APId="1" newUEX2APId="2" 
                           causeType="CAUSE_PROTOCOL" 
                           causeVal="3" />
                          #CztCauseProtmessage_not_compatible_with_receiver_stateEnum
<!--
        <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2"
                      eventType="CZT_MSG_UE_CXT_RELEASE" 
                      errType="CZT_ERRTYPE_FROM_PEER" 
                      errCause="CZT_ERRCAUSE_INV_STATE" />
-->
      </tapa.expset>


   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.28
#
#       Desc:    Verify the simultaneous send and receipt of Handover Request handling
#                at both the involved eNodeBs as separate UE associated
#                transactions.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.28">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   eNodeB1-----Handover Request--------------->eNodeB2
#   eNodeB1-----Handover Request ---------------eNodeB2
#

      <tapa.desc>
      Verify the simultaneous send and receipt of Handover Request handling
      at both the involved eNodeBs as separate UE associated 
      transactions.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      # Start the actual handover now 

      # First Handover Request
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>


      # Second Handover Request from other eNodeB 
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.29
#
#       Desc:    Verify that if X2 setup is sent from application at source 
#                eNodeB, when the Handover preparation procedure is ongoing,
#                it shall abort the existing Handover procedures..
#
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.29">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request--------------->T eNodeB 
#   S eNodeB-----X2 Setup ---------------------->T eNodeB 
#   S eNodeB-----Handover Ack-------------------T eNodeB 
#   S eNodeB-----X2 Setup Ack-------------------T eNodeB 
#

      <tapa.desc>
      Verify that if X2 setup is sent from application at source 
      eNodeB, when the Handover preparation procedure is ongoing,
      it shall abort the existing Handover procedures..
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      # Start the actual handover now 

      # First Handover Request
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_X2_SETUP" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_X2_SETUP" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK"
                        errType="CZT_ERRTYPE_INTERNAL"
                        errCause="CZT_ERRCAUSE_INV_STATE" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.30
#
#       Desc:    Verify that X2 setup cannot be sent from application at target
#                eNodeB, when the Handover preparation procedure is ongoing.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.30">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request--------------->T eNodeB 
# Send X2 Setup from application at T eNodeB.
# Expect error back at application at T eNodeB.
#

      <tapa.desc>
      Verify that X2 setup cannot be sent from application at target
      eNodeB, when the Handover preparation procedure is ongoing.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
       <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>


   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.31
#
#       Desc:    Verify the successfull completion of Configuration Update procedure
#                when the Handover preparation procedure is ongoing.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.31">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request--------------->T eNodeB 
#   S eNodeB-----eNB Confguration Update-------->T eNodeB 
#   S eNodeB-----eNB Confguration Update Ack-----T eNodeB 
#   S eNodeB-----Handover Request Ack------------T eNodeB 
#

      <tapa.desc>
      Verify the successfull completion of Configuration Update procedure
      when the Handover preparation procedure is ongoing.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      # Start the actual handover now 

      # First Handover Request
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_CFG_UPD_REQ" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_CFG_UPD_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_CFG_UPD_ACK" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_CFG_UPD_ACK" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.32
#
#       Desc:    Verify the successfull failure of Configuration Update procedure
#                when the Handover preparation procedure is ongoing.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.32">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request------------------>T eNodeB 
#   S eNodeB-----eNB Confguration Update----------->T eNodeB 
#   S eNodeB-----eNB Confguration Update Failure----T eNodeB 
#   S eNodeB-----Handover Request Ack---------------T eNodeB 
#

      <tapa.desc>
      Verify the successfull completion of Configuration Update procedure
      when the Handover preparation procedure is ongoing.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
    <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      # Start the actual handover now 

      # First Handover Request
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>


      # Second Handover Request from other eNodeB 
      <tapa.send>
       <tapa.czt.gpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_CFG_UPD_REQ" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_CFG_UPD_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_CFG_UPD_FAIL" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_CFG_UPD_FAIL" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.33
#
#       Desc:    Verify the successfull completion of Resource Status Initiation
#                procedure when the Handover preparation procedure is ongoing.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.33">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request------------------>T eNodeB 
#   S eNodeB-----Resource Status Request----------->T eNodeB 
#   S eNodeB-----Resource Status Response----------T eNodeB 
#   S eNodeB-----Handover Request Ack--------------T eNodeB 
#

      <tapa.desc>
      Verify the successfull completion of Configuration Update procedure
      when the Handover preparation procedure is ongoing.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      # Start the actual handover now 

      # First Handover Request
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_RSRC_ST_REQ" eNb1MeasId="1" 
                       regReqType="CZAC_START"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_RSRC_ST_REQ" eNb1MeasId="1" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_RSRC_ST_RSP" eNb1MeasId="1" eNb2MeasId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_RSRC_ST_RSP" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      </tapa.test>

   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.34
#
#       Desc:    Verify the successfull failure of Resource Status Initiation
#                procedure when the Handover preparation procedure is ongoing.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.34">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request------------------>T eNodeB 
#   S eNodeB-----Resource Status Request----------->T eNodeB 
#   S eNodeB-----Resource Status Failure-----------T eNodeB 
#   S eNodeB-----Handover Request Ack--------------T eNodeB 
#

      <tapa.desc>
      Verify the successfull failure of Resource Status Initiation
      procedure when the Handover preparation procedure is ongoing.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      # Start the actual handover now 

      # First Handover Request
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_RSRC_ST_REQ" eNb1MeasId="1" 
                       regReqType="CZAC_START" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_RSRC_ST_REQ" eNb1MeasId="1" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_RSRC_ST_FAIL" 
                       eNb1MeasId="1" eNb2MeasId="2"
                       causeType="CAUSE_MISC"
                       causeVal="2"/> 
                       #CztCauseMiscom_interventionEnum

      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_RSRC_ST_FAIL"
                       eNb1MeasId="1" eNb2MeasId="2"
                       causeType="CAUSE_MISC"
                       causeVal="2"/> 
                       #CztCauseMiscom_interventionEnum

      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      </tapa.test>

   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.35
#
#       Desc:    Verify the successfull Resource Status Reporting
#                when the Handover procedure is ongoing.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.35">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request------------------>T eNodeB 
#   S eNodeB-----Handover Request Ack--------------T eNodeB 
#   S eNodeB-----Resource Status Request----------->T eNodeB 
#   S eNodeB-----Resource Status Response-----------T eNodeB 
#   S eNodeB-----Resource Status Update-----------T eNodeB 
#   S eNodeB-----UE Context Release-----------T eNodeB 
#

      <tapa.desc>
      Verify the successfull Resource Status Reporting
      when the Handover procedure is ongoing.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      # Start the actual handover now 

      # First Handover Request
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_RSRC_ST_REQ" eNb1MeasId="1" 
                      regReqType="CZAC_START"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_RSRC_ST_REQ" eNb1MeasId="1"/>
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_RSRC_ST_RSP" eNb1MeasId="1" eNb2MeasId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_RSRC_ST_RSP" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gpreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_RSRC_ST_UPD" eNb1MeasId="1" eNb2MeasId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_RSRC_ST_UPD" eNb1MeasId="1" eNb2MeasId="2"/>
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.36
#
#       Desc:   Verify that user at target eNodeB can terminate the handover
#               for an UE at any time. SN Status Transfer received after this 
#               is ignored at target eNodeB.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.36">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   Send release request at Source eNodeB with release type UE and valid oldUEX2APId
#   Expect the successful release confirm back.
#   S eNodeB-----SN Status Transfer--------------------------------------->T eNodeB
#   Stack at target eNodeB shall ignore

      <tapa.desc>
       Verify that user at target eNodeB can terminate the handover
       for an UE at any time. SN Status Transfer received after this 
       is ignored at target eNodeB.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

   
     <tapa.send>
     <tapa.czt.relreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" relType="CZT_RELTYPE_UE" 
                      relNodeType="CZT_NODETYPE_REMOTE" 
                      oldUEX2APId="1"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.relcfm  procId="CZAC_LCZ_ENB2_PRC" peerId="1" relType="CZT_RELTYPE_UE"
                         status="CZT_PRIM_OK" reason="CZT_REASON_NOT_APPL"/>
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR" 
                      oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>
    
     # Spec says if the target eNB receives SN Status Transfer message
     # for an UE for which no prepared handover exists at the
     # target eNB, the target eNB shall ignore the message. */

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.37
#
#       Desc:    Verify the successfull Resource Status Reporting
#                when the Handover procedure is ongoing.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.37">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request------------------>T eNodeB 
#   S eNodeB-----Handover Request Ack--------------T eNodeB 
#   S eNodeB-----Resource Status Request----------->T eNodeB 
#   S eNodeB-----Resource Status Response-----------T eNodeB 
#   S eNodeB-----Resource Status Update-----------T eNodeB 
#   S eNodeB-----Resource Status Update-----------T eNodeB 
#   S eNodeB-----Resource Status Update-----------T eNodeB 
#   S eNodeB-----Resource Status Update-----------T eNodeB 
#   S eNodeB-----UE Context Release-----------T eNodeB 
#

      <tapa.desc>
      Verify the successfull Resource Status Reporting
      when the Handover procedure is ongoing.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_RSRC_ST_REQ" eNb1MeasId="1" 
                       regReqType="CZAC_START"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_RSRC_ST_REQ" eNb1MeasId="1"/>
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_RSRC_ST_RSP" eNb1MeasId="1" eNb2MeasId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_RSRC_ST_RSP" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gpreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_RSRC_ST_UPD"  eNb1MeasId="1" eNb2MeasId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_RSRC_ST_UPD" eNb1MeasId="1" eNb2MeasId="2" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gpreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_RSRC_ST_UPD"  eNb1MeasId="1" eNb2MeasId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_RSRC_ST_UPD" eNb1MeasId="1" eNb2MeasId="2" />
      </tapa.expect>

       <tapa.send>
       <tapa.czt.gpreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_RSRC_ST_UPD"  eNb1MeasId="1" eNb2MeasId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_RSRC_ST_UPD" eNb1MeasId="1" eNb2MeasId="2" />
      </tapa.expect>

      <tapa.send>
        <tapa.czt.bmpreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_UE_CXT_RELEASE" 
                       oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_UE_CXT_RELEASE" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.38
#
#       Desc:    Verify the successfull exchange of load information
#                when the Handover procedure is ongoing.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.38">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request------------------>T eNodeB 
#   S eNodeB-----Handover Request Ack--------------T eNodeB 
#   S eNodeB-----Load Information------------------>T eNodeB 
#   S eNodeB-----Load Information------------------T eNodeB 
#   S eNodeB-----UE Context Release-----------T eNodeB 
#

      <tapa.desc>
      Verify the successfull exchange of load information 
      when the Handover procedure is ongoing.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_LOAD_IND" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_LOAD_IND" />
      </tapa.expect>

      <tapa.send>
      <tapa.czt.bmpreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_UE_CXT_RELEASE" 
                       oldUEX2APId="1" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_UE_CXT_RELEASE" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.39
#
#       Desc:    Verify the successfull exchange of load information
#                even after the Handover procedure is cancelled.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.39">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request------------------>T eNodeB 
#   S eNodeB-----Handover Cancel-------------------T eNodeB 
#   S eNodeB-----Load Information------------------>T eNodeB 
#   S eNodeB-----Load Information------------------>T eNodeB 
#

      <tapa.desc>
      Verify the successfull exchange of load information 
      even after the Handover procedure is cancelled.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_CANCEL" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_CANCEL" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.gpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_LOAD_IND" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_LOAD_IND" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.40
#
#       Desc:    Verify that missing Old eNB UE X2AP ID in outgoing HO Request
#                initiated by application at source eNodeB, is informed back at
#                application by X2AP Stack.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.40">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
# Send HO Request from application without a Old eNB UE X2AP ID.
# Expect error back at application
#

      <tapa.desc>
      Verify that missing Old eNB UE X2AP ID in outgoing HO Request 
      initiated by application at source eNodeB, is informed back at
      application by X2AP Stack.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ"
                         errType="CZT_ERRTYPE_INV_SDU_PARAM"
                         errCause="CZT_ERRCAUSE_INV_OLD_UE_X2AP_ID" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.41
#
#       Desc:    Verify that missing New eNB UE X2AP ID in outgoing HO Request
#                Acknowledge initiated by application at target eNodeB, is
#                informed back at application by X2AP Stack.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.41">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request------------------>T eNodeB 
#
# Send HO Request Ack from application at T eNodeB without a New eNB UE X2AP ID.
# Expect error back at application at T eNodeB.
#

      <tapa.desc>
      Verify that missing New eNB UE X2AP ID in outgoing HO Request 
      Acknowledge initiated by application at target eNodeB, is
      informed back at application by X2AP Stack.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK"
                         errType="CZT_ERRTYPE_INV_SDU_PARAM"
                         errCause="CZT_ERRCAUSE_INV_NEW_UE_X2AP_ID" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.42
#
#       Desc:    Verify that when maximum stream identifiers reserved for UE
#                associated signalling procedure from X2AP to SCTP get exhausted,
#                X2AP stack informs the application that any more UE associated
#                signalling procedure cannot be initiated unless the existing one
#                gets terminated or cancelled.
#                Application can then decide upon restarting the node, with more
#                stream identifiers reserved for UE associated signalling procedures.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.42">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

# Configure SCTP with the max stream Ids for UE as say "5"
#   S eNodeB-----Handover Request(Old eNB UE X2AP ID = 1) ------------->T eNodeB 
#   S eNodeB-----Handover Request(Old eNB UE X2AP ID = 2)-------------->T eNodeB 
#   S eNodeB-----Handover Request(Old eNB UE X2AP ID = 3)-------------->T eNodeB 
#   S eNodeB-----Handover Request(Old eNB UE X2AP ID = 4)-------------->T eNodeB 
#   S eNodeB-----Handover Request(Old eNB UE X2AP ID = 5)-------------->T eNodeB 
#
# Send another HO Request from application at S eNodeB with Old eNB UE X2AP ID=6
# Expect error back at application at S eNodeB.
#

      <tapa.desc>
      Verify that when maximum stream identifiers reserved for UE
      associated signalling procedure from X2AP to SCTP get exhausted,
      X2AP stack informs the application that any more UE associated
      signalling procedure cannot be initiated unless the existing one
      gets terminated or cancelled.
      Application can then decide upon restarting the node, with more
      stream identifiers reserved for UE associated signalling procedures.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

     <!-- By default maximum no of outbound streams configured is 3 -> 0, 1, 2.
          0 is used for global procedures -->
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="3" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

       <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="4" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

       <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="5" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.43
#
#       Desc:    Verify that a Handover Cancel cannot be sent from source eNodeB
#                to target eNodeB, if already Handover Failure is received from
#                target eNodeB.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.43">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request-------------------------------------->T eNodeB
#   S eNodeB-----Handover Preparation Failure-------------------------- T eNodeB
#
# Send HO Cancel from application at S eNodeB.
# Expect error back at application

      <tapa.desc>
      Verify that a Handover Cancel cannot be sent from source eNodeB
      to target eNodeB, if already Handover Failure is received from
      target eNodeB.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_FAIL" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_FAIL" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_CANCEL" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect gaurdTmr="200">
       <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_CANCEL"
                         errType="CZT_ERRTYPE_INTERNAL"
                         errCause="CZT_ERRCAUSE_UNEXP_MSG" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.44
#
#       Desc:    Verify that a Handover Cancel cannot be sent from source eNodeB
#                with mismatch in Old eNB UE X2AP ID for an UE on which this is
#                intended.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.44">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request-------------------------------------->T eNodeB
#
# Send HO Cancel from application at S eNodeB with a different
# Old eNB UE X2AP ID value, than for which it is intended.
# Expect error back at application at S eNodeB.

      <tapa.desc>
      Verify that a Handover Cancel cannot be sent from source eNodeB
      with mismatch in Old eNB UE X2AP ID for an UE on which this is
      intended.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_CANCEL" oldUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_CANCEL"
                         errType="CZT_ERRTYPE_INTERNAL"
                         errCause="CZT_ERRCAUSE_UNEXP_MSG" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.45
#
#       Desc:    Verify that a Handover Preparation Failure cannot be sent from
#                target eNodeB with mismatch in Old eNB UE X2AP ID for an UE on
#                which this is intended.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.45">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request-------------------------------------->T eNodeB
#
# Send HO Preparation Failure from application at T eNodeB with a different
#  Old eNB UE X2AP ID value, than for which it is intended.
# Expect error back at application at T eNodeB.

      <tapa.desc>
      Verify that a Handover Preparation Failure cannot be sent from
      source eNodeB with mismatch in Old eNB UE X2AP ID for an UE on
      which this is intended.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_FAIL" oldUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_FAIL"
                         errType="CZT_ERRTYPE_INTERNAL"
                         errCause="CZT_ERRCAUSE_UNEXP_MSG" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#
#       Test:    3.46
#
#       Desc:    Verify the mismatch of Old eNB UE X2AP ID w.r.t UE on which
#                Handover preparation is completed, in outgoing
#                SN Status Transfer from source eNodeB when initiated by application
#                at source eNodeB; is informed back at application by X2AP Stack.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.46">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB-----Handover Request Acknowledge---------------------------- T eNodeB
#
# Send SN Status Transfer from application at S eNodeB with a different
#  Old eNB UE X2AP ID value, than for which it is intended.
# Expect error back at application at S eNodeB.
#

      <tapa.desc>
      Verify that mismatch of Old eNB UE X2AP ID w.r.t UE on which 
      Handover preparation is completed, in outgoing 
      SN Status Transfer from source eNodeB when initiated by application
      at source eNodeB; is informed back at application by X2AP Stack.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
     <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR" oldUEX2APId="2" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR"
                         errType="CZT_ERRTYPE_INTERNAL"
                         errCause="CZT_ERRCAUSE_UNEXP_MSG" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.47
#
#       Desc:    Verify that mismatch of New eNB UE X2AP ID w.r.t UE on which
#                Handover preparation is completed, in outgoing
#                SN Status Transfer from source eNodeB when initiated by application
#                at source eNodeB; is informed back at application by X2AP Stack.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.47">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB-----Handover Request Acknowledge---------------------------- T eNodeB
#
# Send SN Status Transfer from application at S eNodeB with a different
#  New eNB UE X2AP ID value, than for which it is intended.
# Expect error back at application at S eNodeB.
#

      <tapa.desc>
      Verify that mismatch of New eNB UE X2AP ID w.r.t UE on which 
      Handover preparation is completed, is initiated in outgoing 
      SN Status Transfer from source eNodeB initiated by application
      at source eNodeB, is informed back at application by X2AP Stack.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
    
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
     <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR" oldUEX2APId="1" newUEX2APId="3"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR"
                         errType="CZT_ERRTYPE_INV_SDU_PARAM"
                         errCause="CZT_ERRCAUSE_INV_NEW_UE_X2AP_ID" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.48
#
#       Desc:    Verify that mismatch of Old eNB UE X2AP ID w.r.t UE on which
#                Handover is initiated in outgoing UE Context Release from
#                target eNodeB initiated by application at target eNodeB,
#                is informed back at application by X2AP Stack.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.48">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB-----Handover Request Acknowledge---------------------------- T eNodeB
#
# Send UE Context Release from application at T eNodeB with a different
#  Old eNB UE X2AP ID value, than for which it is intended.
# Expect error back at application at T eNodeB.
#

      <tapa.desc>
      Verify that mismatch of Old eNB UE X2AP ID w.r.t UE on which 
      Handover is initiated in outgoing UE Context Release from 
      target eNodeB initiated by application at target eNodeB,
      is informed back at application by X2AP Stack.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
    <tapa.czt.bmpreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_UE_CXT_RELEASE" oldUEX2APId="2" newUEX2APId="2"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind  procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_UE_CXT_RELEASE"
                         errType="CZT_ERRTYPE_INTERNAL"
                         errCause="CZT_ERRCAUSE_UNEXP_MSG" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.49
#
#       Desc:    Verify that mismatch of New eNB UE X2AP ID w.r.t UE on which
#                Handover is initiated in outgoing UE Context Release from
#                target eNodeB initiated by application at target eNodeB;
#                is informed back at application by X2AP Stack.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.49">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB-----Handover Request Acknowledge---------------------------- T eNodeB
#
# Send UE Context Release from application at T eNodeB with a different
#  New eNB UE X2AP ID value, than for which it is intended.
# Expect error back at application at T eNodeB.
#

      <tapa.desc>
      Verify that mismatch of New eNB UE X2AP ID w.r.t UE on which 
      Handover is initiated in outgoing UE Context Release from 
      target eNodeB initiated by application at target eNodeB,
      is informed back at application by X2AP Stack.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
    <tapa.czt.bmpreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_UE_CXT_RELEASE" oldUEX2APId="1" newUEX2APId="3" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind  procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_UE_CXT_RELEASE"
                         errType="CZT_ERRTYPE_INV_SDU_PARAM"
                         errCause="CZT_ERRCAUSE_INV_NEW_UE_X2AP_ID" />
      </tapa.expect>


   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.50
#
#       Desc:    Verify that HO request ack sent from target eNodeB is rejected
#                by source eNodeB with successful sending of Error Indication on it
#                back to target eNodeB.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.50">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB-----Handover Request Acknowledge---------------------------- T eNodeB
#   S eNodeB-----Error Indication on HO Req Ack--------------------------> T eNodeB
#

      <tapa.desc>
      Verify that HO request ack sent from target eNodeB is rejected
      by source eNodeB with successful sending of Error Indication on it
      back to target eNodeB.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      #Send error indication on Handover Request Ack
      <tapa.send>
       <tapa.czt.gperrreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" trigMsgType="CZT_MSG_HO_ACK" 
                          oldUEX2APId="1" 
                          causeType="CAUSE_RADIONW" 
                          causeVal="5" />
                          #CztCauseRadioNwunknown_new_eNB_UE_X2AP_IDEnum
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gperrind  procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_ERR_IND"
                           trigMsgType="CZT_MSG_HO_ACK"  
                           oldUEX2APId="1" 
                           causeType="CAUSE_RADIONW" 
                           causeVal="5" />
                          #CztCauseRadioNwunknown_new_eNB_UE_X2AP_IDEnum
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.51
#
#       Desc:    Verify that when HO Request received at target eNodeB couldnt not be
#                delivered to user, becoz of upper SAP of that peer being in bad state.
#                Stack shall inform the peer with Handover Preparation Failure.
#                Expect the Handover Preparation Failure at source eNodeB/.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.51">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB-----Handover Preparation Failure---------------------------- T eNodeB
#

      <tapa.desc>
       Verify that when HO Request received at target eNodeB couldnt not be
       delivered to user, becoz of upper SAP of that peer being in bad state.
       Stack shall inform the peer with Handover Preparation Failure.
       Expect the Handover Preparation Failure at source eNodeB.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

     <!-- Unbind the upper sap at target eNodeB -->
      <tapa.send>
    <tapa.czt.ubndreq procId="CZAC_PROC_ENB2" spId="0" suId="0"/>
      </tapa.send>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
        <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2"
                      eventType="CZT_MSG_HO_FAIL" 
                      causeType="CAUSE_MISC" 
                      causeVal="2" />
                      #CztCauseMiscom_interventionEnum"
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>



#
#
#       Test:    3.52
#
#       Desc:    Verify that none of the BMP messages are allowed when peer is in Idle
#                state 
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.52">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
# Expect Error indication back

      <tapa.desc>
       Verify that none of the BMP messages are allowed when peer is in Idle
       state 
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- Dont not have GP Setup Let the peer be in Idle state -->

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
        <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2"
                      eventType="CZT_MSG_HO_REQ" 
                      errType="CZT_ERRTYPE_INTERNAL" 
                      errCause="CZT_ERRCAUSE_INV_STATE" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    3.53
#
#       Desc:    Verify that encoding failure causes error indication back at 
#                application by X2AP Stack.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.53">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
# Send HO Request from application with an invalid IPAlgorithms value
# Expect error back at application
#

      <tapa.desc>
      Verify that encoding failure causes error indication back at 
      application by X2AP Stack.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="4092" IAValue="67000" EAValue="0" choice="CAUSE_ERR"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ"
                         errType="CZT_ERRTYPE_MSG_SEND_FAILED"
                         errCause="CZT_ERRCAUSE_ENC_FAILED" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.54
#
#       Desc:    Verify that when error indication is sent with invalid 
#                oldUEX2APId, a local error indication is returned
#                back to user.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.54">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB-----Handover Request Acknowledge---------------------------- T eNodeB
#   S eNodeB-----Error Indication on HO Req Ack--------------------------> T eNodeB
#   S X2AP ----- Local Error Indication --------------------------> S eNodeB
#

      <tapa.desc>
      Verify that when error indication is sent with invalid 
      oldUEX2APId, a local error indication is returned back to user.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      #Send error indication on Handover Request Ack
      <tapa.send>
       <tapa.czt.gperrreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" trigMsgType="CZT_MSG_HO_ACK" 
                          oldUEX2APId="535" 
                          causeType="CAUSE_RADIONW" 
                          causeVal="5" />
                          #CztCauseRadioNwunknown_new_eNB_UE_X2AP_IDEnum
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind  procId="CZAC_LCZ_ENB1_PRC" peerId="2" 
                           errType="CZT_ERRTYPE_INV_SDU_PARAM"
                           errCause="CZT_ERRCAUSE_INV_OLD_UE_X2AP_ID" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>



#
#
#       Test:    3.55
#
#       Desc:    Verify that when error indication is sent with illegal 
#                oldUEX2APId, a local error indication is returned
#                back to user.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.55">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB-----Handover Request Acknowledge---------------------------- T eNodeB
#   S eNodeB-----Error Indication on HO Req Ack--------------------------> T eNodeB
#

      <tapa.desc>
       Verify that when error indication is sent with illegal 
       oldUEX2APId, a local error indication is returned back to user.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      #Send error indication on Handover Request Ack
      <tapa.send>
       <tapa.czt.gperrreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" trigMsgType="CZT_MSG_HO_ACK" 
                          oldUEX2APId="65535" 
                          causeType="CAUSE_RADIONW" 
                          causeVal="5" />
                          #CztCauseRadioNwunknown_new_eNB_UE_X2AP_IDEnum
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind  procId="CZAC_LCZ_ENB1_PRC" peerId="2" 
                           errType="CZT_ERRTYPE_MSG_SEND_FAILED"
                           errCause="CZT_ERRCAUSE_ENC_FAILED" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.56
#
#       Desc:    Verify that when error indication is sent for a class 1
#                message, a local error indication is returned
#                back to user.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.56">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   T eNodeB-----Error Indication on HO Req --------------------------> S eNodeB
#   T X2AP  ----- Local Error Indication -------------------------> S eNB
#

      <tapa.desc>
       Verify that when error indication is sent for a class 1
       message, a local error indication is returned back to user.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>


      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      #Send error indication on Handover Request 
      <tapa.send>
       <tapa.czt.gperrreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" trigMsgType="CZT_MSG_HO_REQ" 
                          oldUEX2APId="1" 
                          causeType="CAUSE_RADIONW" 
                          causeVal="5" />
                          #CztCauseRadioNwunknown_new_eNB_UE_X2AP_IDEnum
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind  procId="CZAC_LCZ_ENB2_PRC" peerId="1" 
                           errType="CZT_ERRTYPE_INTERNAL"
                           errCause="CZT_ERRCAUSE_UNEXP_MSG" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>



#
#
#       Test:    3.57
#
#       Desc:    Verify that when error indication is received for HOReq Ack
#                message, the ueCb gets deleted.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.57">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   T eNodeB-----HO Req Ack --------------------------> S eNodeB
#   S eNodeB-----Error Indication on HO Req Ack--------------------------> T eNodeB
#

      <tapa.desc>
       Verify that when error indication is received for HOReq Ack
       message, the ueCb gets deleted, even if the message is not delivered 
                 to user.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>


      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

                # unbind the upper sap
      <tapa.send>
      <tapa.czt.ubndreq procId="CZAC_PROC_ENB2" spId="0" suId="0"/>
      </tapa.send>

      #Send error indication on Handover Request Ack
      <tapa.send>
       <tapa.czt.gperrreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" trigMsgType="CZT_MSG_HO_ACK" 
                          oldUEX2APId="1" 
                          causeType="CAUSE_MISC" 
                          causeVal="1" />
                          #CztCauseMiscom_interventionEnum
      </tapa.send>


   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>



#
#
#       Test:    3.58
#
#       Desc:    Verify that when HOReq Ack is not delivered to user
#                Error Indication is sent to peer.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.58">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   T eNodeB-----HO Req Ack --------------------------> S eNodeB
#   S eNodeB-----Error Indication on HO Req Ack--------------------------> T eNodeB
#

      <tapa.desc>
       Verify that when HOReq Ack is not delivered to user
       Error Indication is sent to peer.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>



      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

                # unbind the upper sap at eNB1
      <tapa.send>
      <tapa.czt.ubndreq procId="CZAC_LCZ_ENB1_PRC" spId="0" suId="0"/>
      </tapa.send>

   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      #Expect error indication on Handover Request Ack
      <tapa.expect>
       <tapa.czt.gperrind procId="CZAC_LCZ_ENB2_PRC" peerId="1" trigMsgType="CZT_MSG_HO_ACK" 
                                                                  eventType="CZT_MSG_ERR_IND"
                          oldUEX2APId="1" 
                          causeType="CAUSE_MISC" 
                          causeVal="2" />
                          #CztCauseMiscom_interventionEnum
      </tapa.expect>


   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.59
#
#       Desc:    Verify that a Local error indication is sent to user
#                if a Handover Cancel is sent out with an mismatched 
#                newUEX2APId.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.59">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB----Handover Cancel----------------------------------------->T eNodeB
#   S X2AP ---- Local error indication----------------------------------------->S eNodeB
#
#Expected validation in test code and testing:
#At T eNodeB (optional) 
#   a. Validate for match of old eNB UE X2AP ID received in HO Cancel, with
#      the one received in HO Request.

      <tapa.desc>
       Verify that a Local error indication is sent to user
       if a Handover Cancel is sent out with an mismatched newUEX2APId.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup Ready -->
     <tapa.cz.x2.init/>

      <tapa.send>
              <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
              <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
              <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" 
                                                   oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
              <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK"
                                                   oldUEX2APId="1" newUEX2APId="2" />
      </tapa.expect>

     #Generating HO Cancel explicitly from user 
      <tapa.send>
              <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_CANCEL" 
                                                   oldUEX2APId="1" newUEX2APId="3" />
      </tapa.send>

      <tapa.expect>
              <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2" 
                                                   errType="CZT_ERRTYPE_INV_SDU_PARAM"
                                                                                 errCause="CZT_ERRCAUSE_INV_NEW_UE_X2AP_ID" />
      </tapa.expect>
   
   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.60
#
#       Desc:    Verify that a Local error indication is sent to user
#                if a HO Req is sent with an illegal UEX2APId.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.60">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   T eNodeB-----Handover Ack ---------------------------------------->S eNodeB
#   T X2AP ---- Local error indication----------------------------------------->T eNodeB
#

      <tapa.desc>
       Verify that a Local error indication is sent to user
       if a HO Req is sent with an illegal UEX2APId.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup Ready -->
     <tapa.cz.x2.init/>

      <tapa.send>
              <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
              <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
              <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" 
                                                   oldUEX2APId="1" newUEX2APId="4097" />
      </tapa.send>

     #Generating HO Cancel explicitly from user 

      <tapa.expect>
              <tapa.czt.errind procId="CZAC_LCZ_ENB2_PRC" peerId="1" 
                                                   errType="CZT_ERRTYPE_MSG_SEND_FAILED"
                                                                                 errCause="CZT_ERRCAUSE_ENC_FAILED" />
      </tapa.expect>
   
   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.61
#
#       Desc:    Verify that a Local error indication is sent to user
#                if a HO Cancel is sent with an illegal choice value.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.61">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   T eNodeB-----Handover Ack ---------------------------------------->S eNodeB
#   S eNodeB-----Handover Cancel ---------------------------------------->T eNodeB
#   S X2AP ---- Local error indication----------------------------------------->S eNodeB
#

      <tapa.desc>
       Verify that a Local error indication is sent to user
       if a HO Cancel is sent with an illegal choice value.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup Ready -->
     <tapa.cz.x2.init/>

      <tapa.send>
              <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
              <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
              <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" 
                                                   oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
              <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" 
                                                   oldUEX2APId="1" newUEX2APId="2" />
      </tapa.expect>

     #Generating HO Cancel explicitly from user 

      <tapa.send>
              <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_CANCEL" 
                                                   oldUEX2APId="1" newUEX2APId="2"
                                                                                 choice="CAUSE_ERR"
                                                                                 cause="1"/>
      </tapa.send>

      <tapa.expect>
              <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2" 
                                                   errType="CZT_ERRTYPE_MSG_SEND_FAILED"
                                                                                 errCause="CZT_ERRCAUSE_ENC_FAILED" />
      </tapa.expect>
   
   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.62
#
#       Desc:    Verify that a Local error indication is sent to user
#                if a HO Fail is sent with an illegal choice value.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.62">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   T eNodeB-----Handover Failure ---------------------------------------->S eNodeB
#   T X2AP ---- Local error indication----------------------------------------->T eNodeB
#

      <tapa.desc>
       Verify that a Local error indication is sent to user
       if a HO Failure is sent with an illegal choice value.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup Ready -->
     <tapa.cz.x2.init/>

      <tapa.send>
              <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
              <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
              <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_FAIL" 
                                                   oldUEX2APId="1" 
                                                                                 choice="CAUSE_ERR"
                                                                                 cause="1" />
      </tapa.send>

      <tapa.expect>
              <tapa.czt.errind procId="CZAC_LCZ_ENB2_PRC" peerId="1" 
                                                   errType="CZT_ERRTYPE_MSG_SEND_FAILED"
                                                                                 errCause="CZT_ERRCAUSE_ENC_FAILED" />
      </tapa.expect>
   
   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.63
#
#       Desc:    Verify that a Local error indication is sent to user
#                if a HO Cancel is sent with a wrong newUEX2APId.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.63">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   T eNodeB-----Handover Ack ---------------------------------------->S eNodeB
#   S eNodeB-----Handover Cancel ---------------------------------------->T eNodeB
#   S X2AP ---- Local error indication----------------------------------------->S eNodeB
#

      <tapa.desc>
       Verify that a Local error indication is sent to user
       if a HO Cancel is sent with an wrong newUEX2APId.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup Ready -->
     <tapa.cz.x2.init/>

      <tapa.send>
              <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
              <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
              <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" 
                                                   oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
              <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" 
                                                   oldUEX2APId="1" newUEX2APId="2" />
      </tapa.expect>

     #Generating HO Cancel explicitly from user 

      <tapa.send>
              <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_CANCEL" 
                                                   oldUEX2APId="1" newUEX2APId="3"
                                                                                 choice="CAUSE_RADIONW"
                                                                                 cause="1"/>
      </tapa.send>

      <tapa.expect>
              <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2" 
                                                   errType="CZT_ERRTYPE_INV_SDU_PARAM"
                                                                                 errCause="CZT_ERRCAUSE_INV_NEW_UE_X2AP_ID" />
      </tapa.expect>
   
   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb2.deinit/>
      <tapa.cz.enb1.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.64
#
#       Desc:    Verify that when HOReq Failure is not delivered to user
#                Error Indication is sent to peer.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.64">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   T eNodeB-----HO Req Fail --------------------------> S eNodeB
#   S eNodeB-----Error Indication on HO Req Fail--------------------------> T eNodeB
#

      <tapa.desc>
       Verify that when HOReq Fail is not delivered to user
       Error Indication is sent to peer.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>



      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

                # unbind the upper sap at eNB1
      <tapa.send>
      <tapa.czt.ubndreq procId="CZAC_LCZ_ENB1_PRC" spId="0" suId="0"/>
      </tapa.send>

   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_FAIL" 
                                  oldUEX2APId="1" />
      </tapa.send>

      #Expect error indication on Handover Request Ack
      <tapa.expect>
       <tapa.czt.gperrind procId="CZAC_LCZ_ENB2_PRC" peerId="1" trigMsgType="CZT_MSG_HO_FAIL" 
                                                                  eventType="CZT_MSG_ERR_IND"
                          oldUEX2APId="1" 
                          causeType="CAUSE_MISC" 
                          causeVal="2" />
                          #CztCauseMiscom_interventionEnum
      </tapa.expect>


   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    3.65
#
#       Desc:    Verify that when HO Cancel  is not delivered to user
#                Error Indication is sent to peer.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.65">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   T eNodeB-----HO Req Ack --------------------------> S eNodeB
#   S eNodeB-----HO Cancel --------------------------> T eNodeB
#   T X2AP-----Error Indication on HO Cancel --------------------------> S eNodeB
#

      <tapa.desc>
       Verify that when HO Cancel is not delivered to user
       Error Indication is sent to peer.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>



      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" 
                                  oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" 
                                  oldUEX2APId="1" newUEX2APId="2" />
      </tapa.expect>

                # unbind the upper sap at eNB1
      <tapa.send>
      <tapa.czt.ubndreq procId="CZAC_LCZ_ENB2_PRC" spId="0" suId="0"/>
      </tapa.send>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_CANCEL" oldUEX2APId="1" />
      </tapa.send>

   
      #Expect error indication on Handover Request Ack
      <tapa.expect>
       <tapa.czt.gperrind procId="CZAC_LCZ_ENB1_PRC" peerId="2" trigMsgType="CZT_MSG_HO_CANCEL" 
                                                                  eventType="CZT_MSG_ERR_IND"
                          oldUEX2APId="1" 
                          causeType="CAUSE_MISC" 
                          causeVal="2" />
                          #CztCauseMiscom_interventionEnum
      </tapa.expect>


   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.66
#
#       Desc:    Verify that when SN status transfer  is not delivered to user
#                Error Indication is sent to peer.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.66">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   T eNodeB-----HO Req Ack --------------------------> S eNodeB
#   S eNodeB-----SN status transfer---------------------------------------->T eNodeB
#   T X2AP-----Error Indication on SN status transfer --------------------------> S eNodeB
#

      <tapa.desc>
       Verify that when SN status transfer is not delivered to user
       Error Indication is sent to peer.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>



      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" 
                                  oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" 
                                  oldUEX2APId="1" newUEX2APId="2" />
      </tapa.expect>

                # unbind the upper sap at eNB1
      <tapa.send>
      <tapa.czt.ubndreq procId="CZAC_LCZ_ENB2_PRC" spId="0" suId="0"/>
      </tapa.send>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR" 
                                  oldUEX2APId="1" newUEX2APId="2"  />
      </tapa.send>
   
      #Expect error indication on Handover Request Ack
      <tapa.expect>
       <tapa.czt.gperrind procId="CZAC_LCZ_ENB1_PRC" peerId="2" trigMsgType="CZT_MSG_SN_STATUS_TRFR" 
                                                                  eventType="CZT_MSG_ERR_IND"
                          oldUEX2APId="1" 
                          causeType="CAUSE_MISC" 
                          causeVal="2" />
                          #CztCauseMiscom_interventionEnum
      </tapa.expect>


   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    3.67
#
#       Desc:    Verify that when UE context release  is not delivered to user
#                Error Indication is sent to peer.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.67">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   T eNodeB-----HO Req Ack --------------------------> S eNodeB
#   T eNodeB-----UE context release ---------------------------------------->S eNodeB
#   S X2AP-----Error Indication on SN status transfer --------------------------> T eNodeB
#

      <tapa.desc>
       Verify that when UE context release is not delivered to user
       Error Indication is sent to peer.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>



      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" 
                                  oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" 
                                  oldUEX2APId="1" newUEX2APId="2" />
      </tapa.expect>

                # unbind the upper sap at eNB1
      <tapa.send>
      <tapa.czt.ubndreq procId="CZAC_LCZ_ENB1_PRC" spId="0" suId="0"/>
      </tapa.send>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_UE_CXT_RELEASE" 
                                  oldUEX2APId="1" newUEX2APId="2"  />
      </tapa.send>
   
      #Expect error indication on Handover Request Ack
      <tapa.expect>
       <tapa.czt.gperrind procId="CZAC_LCZ_ENB2_PRC" peerId="1" trigMsgType="CZT_MSG_UE_CXT_RELEASE" 
                                                                  eventType="CZT_MSG_ERR_IND"
                          oldUEX2APId="1" 
                          causeType="CAUSE_MISC" 
                          causeVal="2" />
                          #CztCauseMiscom_interventionEnum
      </tapa.expect>


   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.68
#
#       Desc:    Verify that when error indication is received for HO Ack
#                in HO_PROGRESS state, the ueCb gets deleted.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.68">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB-----Handover Request Acknowledge---------------------------- T eNodeB
#   S eNodeB-----Error Indication on HO Req Ack--------------------------> T eNodeB
#

      <tapa.desc>
       Verify that when error indication is received for HO Ack
       in HO_PROGRESS state, the ueCb gets deleted.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>

      #Send error indication on Handover Request Ack
      <tapa.send>
       <tapa.czt.gperrreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" trigMsgType="CZT_MSG_HO_ACK" 
                          oldUEX2APId="1" 
                          causeType="CAUSE_MISC" 
                          causeVal="2" />
                          #CztCauseMiscom_interventionEnum
      </tapa.send>


   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    3.69
#
#       Desc:    Verify that none of the BMP messages are allowed when peer is in Idle
#                state 
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.69">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
# Expect Error indication back

      <tapa.desc>
       Verify that none of the BMP messages are allowed when peer is in Idle
       state 
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- Dont not have GP Setup Let the peer be in Idle state -->

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
        <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2"
                      eventType="CZT_MSG_HO_ACK" 
                      errType="CZT_ERRTYPE_INTERNAL" 
                      errCause="CZT_ERRCAUSE_INV_STATE" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    3.70
#
#       Desc:    Verify that none of the BMP messages are allowed when peer is in Idle
#                state 
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.70">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
# Expect Error indication back

      <tapa.desc>
       Verify that none of the BMP messages are allowed when peer is in Idle
       state 
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <tapa.directive alarm="FALSE" />
     <!-- Dont not have GP Setup Let the peer be in Idle state -->
      # Send an S1 SETUP REQUEST message from eNB1 to eNB2
      <tapa.send>
         <tapa.czt.gpreq eventType="CZT_MSG_X2_SETUP" procId="CZAC_LCZ_ENB1_PRC" peerId="2" spId="0"/>
      </tapa.send>

     <tapa.delay delay="20" />

     #Expect this X2 Setup at target eNodeB
     <tapa.expect>
        <tapa.czt.gpind procId="CZAC_LCZ_ENB2_PRC" peerId="1"
           eventType="CZT_MSG_X2_SETUP" />
     </tapa.expect>
     
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
        <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2"
                      eventType="CZT_MSG_HO_REQ" 
                      errType="CZT_ERRTYPE_INTERNAL" 
                      errCause="CZT_ERRCAUSE_INV_STATE" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    3.71
#
#       Desc:    Verify that none of the BMP messages are allowed when peer is in Idle
#                state 
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.71">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
# Expect Error indication back

      <tapa.desc>
       Verify that none of the BMP messages are allowed when peer is in Idle
       state 
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <tapa.directive alarm="FALSE" />
     <!-- Dont not have GP Setup Let the peer be in Idle state -->
      # Send an S1 SETUP REQUEST message from eNB1 to eNB2
      <tapa.send>
         <tapa.czt.gpreq eventType="CZT_MSG_X2_SETUP" procId="CZAC_LCZ_ENB1_PRC" peerId="2" spId="0"/>
      </tapa.send>

     <tapa.delay delay="20" />

     #Expect this X2 Setup at target eNodeB
     <tapa.expect>
        <tapa.czt.gpind procId="CZAC_LCZ_ENB2_PRC" peerId="1"
           eventType="CZT_MSG_X2_SETUP" />
     </tapa.expect>
     
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
        <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2"
                      eventType="CZT_MSG_HO_ACK" 
                      errType="CZT_ERRTYPE_INTERNAL" 
                      errCause="CZT_ERRCAUSE_INV_STATE" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    3.72
#
#       Desc:    Verify that HO request ack sent from target eNodeB is rejected
#                by source eNodeB with successful sending of Error Indication on it
#                back to target eNodeB.
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.72">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB-----Handover Request Acknowledge---------------------------- T eNodeB
#   S eNodeB-----Error Indication on HO Req Ack--------------------------> T eNodeB
#

      <tapa.desc>
      Verify that HO request ack sent from target eNodeB is rejected
      by source eNodeB with successful sending of Error Indication on it
      back to target eNodeB.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      #Send error indication on Handover Request Ack
      <tapa.send>
       <tapa.czt.gperrreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" trigMsgType="CZT_MSG_HO_ACK" 
                          oldUEX2APId="1" 
                          causeType="CAUSE_RADIONW" 
                          causeVal="5" />
                          #CztCauseRadioNwunknown_new_eNB_UE_X2AP_IDEnum
      </tapa.send>

      <tapa.expect>
       <tapa.czt.gperrind  procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_ERR_IND"
                           trigMsgType="CZT_MSG_HO_ACK"  
                           oldUEX2APId="1" 
                           causeType="CAUSE_RADIONW" 
                           causeVal="5" />
                          #CztCauseRadioNwunknown_new_eNB_UE_X2AP_IDEnum
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.73
#
#       Desc:    Verify that mismatch of New eNB UE X2AP ID w.r.t UE on which
#                Handover preparation is completed, in outgoing
#                SN Status Transfer from source eNodeB when initiated by application
#                at source eNodeB; is informed back at application by X2AP Stack.
#
#       Notes:   None
#              
#       Module:  None 
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.73">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB-----Handover Request Acknowledge---------------------------- T eNodeB
#
# Send SN Status Transfer from application at S eNodeB with a different
#  New eNB UE X2AP ID value, than for which it is intended.
# Expect error back at application at S eNodeB.
#

      <tapa.desc>
      Verify that mismatch of New eNB UE X2AP ID w.r.t UE on which 
      Handover preparation is completed, is initiated in outgoing 
      SN Status Transfer from source eNodeB initiated by application
      at source eNodeB, is informed back at application by X2AP Stack.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
    
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
     <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR" oldUEX2APId="1" newUEX2APId="CZ_UNKNOWN_UE_X2AP_ID"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR"
                         errType="CZT_ERRTYPE_INV_SDU_PARAM"
                         errCause="CZT_ERRCAUSE_INV_NEW_UE_X2AP_ID" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>


#
#
#       Test:    3.74
#
#       Desc:    Verify that mismatch of New eNB UE X2AP ID w.r.t UE on which
#                Handover is initiated in outgoing UE Context Release from
#                target eNodeB initiated by application at target eNodeB;
#                is informed back at application by X2AP Stack.
#
#       Notes:   None
#              
#       Module:  None 
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.74">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB-----Handover Request Acknowledge---------------------------- T eNodeB
#
# Send UE Context Release from application at T eNodeB with a different
#  New eNB UE X2AP ID value, than for which it is intended.
# Expect error back at application at T eNodeB.
#

      <tapa.desc>
      Verify that mismatch of New eNB UE X2AP ID w.r.t UE on which 
      Handover is initiated in outgoing UE Context Release from 
      target eNodeB initiated by application at target eNodeB,
      is informed back at application by X2AP Stack.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
    <tapa.czt.bmpreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_UE_CXT_RELEASE" oldUEX2APId="1" newUEX2APId="CZ_UNKNOWN_UE_X2AP_ID" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind  procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_UE_CXT_RELEASE"
                         errType="CZT_ERRTYPE_INV_SDU_PARAM"
                         errCause="CZT_ERRCAUSE_INV_NEW_UE_X2AP_ID" />
      </tapa.expect>


   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    3.75
#
#       Desc:    Verify that none of the BMP messages are allowed when peer is in Idle
#                state 
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.75">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
# Expect Error indication back

      <tapa.desc>
       Verify that none of the BMP messages are allowed when peer is in Idle
       state 
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- Dont not have GP Setup Let the peer be in Idle state -->

      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
        <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2"
                      eventType="CZT_MSG_HO_ACK" 
                      errType="CZT_ERRTYPE_INTERNAL" 
                      errCause="CZT_ERRCAUSE_INV_STATE" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>

#
#
#      Test:    3.76
#
#       Desc:    Verify that none of the BMP messages are allowed when peer is in Idle
#                state 
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.76">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
# Expect Error indication back

      <tapa.desc>
       Verify that none of the BMP messages are allowed when peer is in Idle
       state 
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <tapa.directive alarm="FALSE" />
     <!-- Dont not have GP Setup Let the peer be in Idle state -->
      # Send an S1 SETUP REQUEST message from eNB1 to eNB2
      <tapa.send>
         <tapa.czt.gpreq eventType="CZT_MSG_X2_SETUP" procId="CZAC_LCZ_ENB1_PRC" peerId="2" spId="0"/>
      </tapa.send>

     <tapa.delay delay="20" />

     #Expect this X2 Setup at target eNodeB
     <tapa.expect>
        <tapa.czt.gpind procId="CZAC_LCZ_ENB2_PRC" peerId="1"
           eventType="CZT_MSG_X2_SETUP" />
     </tapa.expect>
     
      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
        <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2"
                      eventType="CZT_MSG_HO_REQ" 
                      errType="CZT_ERRTYPE_INTERNAL" 
                      errCause="CZT_ERRCAUSE_INV_STATE" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    3.77
#
#       Desc:    Verify that none of the BMP messages are allowed when peer is in Idle
#                state 
#
#       Notes:   None
#              
#       Module:  None
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.77">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
# Expect Error indication back

      <tapa.desc>
       Verify that none of the BMP messages are allowed when peer is in Idle
       state 
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>

      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <tapa.directive alarm="FALSE" />
     <!-- Dont not have GP Setup Let the peer be in Idle state -->
      # Send an S1 SETUP REQUEST message from eNB1 to eNB2
      <tapa.send>
         <tapa.czt.gpreq eventType="CZT_MSG_X2_SETUP" procId="CZAC_LCZ_ENB1_PRC" peerId="2" spId="0"/>
      </tapa.send>

     <tapa.delay delay="20" />

     #Expect this X2 Setup at target eNodeB
     <tapa.expect>
        <tapa.czt.gpind procId="CZAC_LCZ_ENB2_PRC" peerId="1"
           eventType="CZT_MSG_X2_SETUP" />
     </tapa.expect>
     
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
        <tapa.czt.errind procId="CZAC_LCZ_ENB1_PRC" peerId="2"
                      eventType="CZT_MSG_HO_ACK" 
                      errType="CZT_ERRTYPE_INTERNAL" 
                      errCause="CZT_ERRCAUSE_INV_STATE" />
      </tapa.expect>

   </tapa.test>


   # Clean subsection
   <tapa.clean/>

   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>

#
#
#       Test:    3.78
#
#       Desc:    Verify that mismatch of New eNB UE X2AP ID w.r.t UE on which
#                Handover preparation is completed, in outgoing
#                SN Status Transfer from source eNodeB when initiated by application
#                at source eNodeB; is informed back at application by X2AP Stack.
#
#       Notes:   None
#              
#       Module:  None 
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.78">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB-----Handover Request Acknowledge---------------------------- T eNodeB
#
# Send SN Status Transfer from application at S eNodeB with a different
#  New eNB UE X2AP ID value, than for which it is intended.
# Expect error back at application at S eNodeB.
#

      <tapa.desc>
      Verify that mismatch of New eNB UE X2AP ID w.r.t UE on which 
      Handover preparation is completed, is initiated in outgoing 
      SN Status Transfer from source eNodeB initiated by application
      at source eNodeB, is informed back at application by X2AP Stack.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
    
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>

   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
     <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR" oldUEX2APId="1" newUEX2APId="2" encodeFail="TRUE" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_SN_STATUS_TRFR"
                         errType="CZT_ERRTYPE_MSG_SEND_FAILED"
                         errCause="CZT_ERRCAUSE_ENC_FAILED" />
      </tapa.expect>

   </tapa.test>

   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>

#
#
#      Test:    3.79
#
#       Desc:    Verify that mismatch of New eNB UE X2AP ID w.r.t UE on which
#                Handover is initiated in outgoing UE Context Release from
#                target eNodeB initiated by application at target eNodeB;
#                is informed back at application by X2AP Stack.
#
#       Notes:   None
#              
#       Module:  None 
#
#       File:    czac_tc3.xml
#
#
<tapa.testcase id="3.79">

   # Document subsection
   <tapa.doc>

      <tapa.rfc />
      <tapa.module />

#
#   S eNodeB-----Handover Request---------------------------------------->T eNodeB
#   S eNodeB-----Handover Request Acknowledge---------------------------- T eNodeB
#
# Send UE Context Release from application at T eNodeB with a different
#  New eNB UE X2AP ID value, than for which it is intended.
# Expect error back at application at T eNodeB.
#

      <tapa.desc>
      Verify that mismatch of New eNB UE X2AP ID w.r.t UE on which 
      Handover is initiated in outgoing UE Context Release from 
      target eNodeB initiated by application at target eNodeB,
      is informed back at application by X2AP Stack.
      </tapa.desc>

      <tapa.longdesc/>

   </tapa.doc>


   # Require features and flags subsection
   <tapa.require>
       
       <tapa.ifdef>
         <tapa.flag id="CZAC_INTSCTP" />  
       </tapa.ifdef>
       <tapa.ifndef/>
       <tapa.mode mode="single"/>
   </tapa.require>


   # Configuration subsection
   <tapa.cfg>
      <tapa.hi.init/>
      <tapa.sb.init/>
      <tapa.cz.enb1.init/>
      <tapa.cz.enb2.init/>
   </tapa.cfg>

   # Test Steps subsection
   <tapa.test>

     <!-- GP Setup -->
     <tapa.cz.x2.init/>

      <tapa.send>
       <tapa.czt.bmpreq procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_REQ" oldUEX2APId="1" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpind procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_REQ" />
      </tapa.expect>
   
      <tapa.send>
       <tapa.czt.bmprsp procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_HO_ACK" oldUEX2APId="1" newUEX2APId="2" />
      </tapa.send>

      <tapa.expect>
       <tapa.czt.bmpcfm  procId="CZAC_LCZ_ENB1_PRC" peerId="2" eventType="CZT_MSG_HO_ACK" />
      </tapa.expect>

      <tapa.send>
    <tapa.czt.bmpreq procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_UE_CXT_RELEASE" oldUEX2APId="1" newUEX2APId="2"  encodeFail="TRUE"/>
      </tapa.send>

      <tapa.expect>
       <tapa.czt.errind  procId="CZAC_LCZ_ENB2_PRC" peerId="1" eventType="CZT_MSG_UE_CXT_RELEASE"
                         errType="CZT_ERRTYPE_MSG_SEND_FAILED"
                         errCause="CZT_ERRCAUSE_ENC_FAILED" />
      </tapa.expect>


   </tapa.test>


   # Clean subsection
   <tapa.clean/>


   # Shutdown subsection
   <tapa.shutdown>
      <tapa.cz.enb1.deinit/>
      <tapa.cz.enb2.deinit/>
      <tapa.sb.deinit/>
      <tapa.hi.deinit/>
   </tapa.shutdown>

</tapa.testcase>

# DO NOT DELETE THIS LINE -- TC number generation script depends on it.
# xyzabcend

#/********************************************************************30**
#
#         End of file:    fileName
#
#*********************************************************************31*/
#
#
#/********************************************************************40**
#
#        Notes:
#
#*********************************************************************41*/
#
#/********************************************************************50**
#
#*********************************************************************51*/
#
#
#/********************************************************************60**
#
#        Revision history:
#
#*********************************************************************61*/
#
#/********************************************************************90**
#
#     ver       pat    init                  description
#------------ -------- ---- ----------------------------------------------
#$SID$        ---      sv         1. X2AP Initial Release.
#$SID$        ---     pt          1. LTE-X2AP 3.1 release.
#*********************************************************************91*/
