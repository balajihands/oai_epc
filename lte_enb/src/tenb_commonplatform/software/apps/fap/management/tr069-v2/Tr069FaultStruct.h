///////////////////////////////////////////////////////////////////////////////
//
// Tr069FaultStruct.h
//
//
// Copyright radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __Tr069FaultStruct_h_
#define __Tr069FaultStruct_h_

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

#include <sstream>
#include <boost/shared_ptr.hpp>

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

#include "Tr069Parser.h"

namespace tr069
{

///////////////////////////////////////////////////////////////////////////////
// Constants
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Typedefs
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Forward Declarations
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Functions / Classes
///////////////////////////////////////////////////////////////////////////////


class FaultStruct
{
public:
    FaultStruct(  Tr069ParseFaultDetail::FapFault::FaultCode code, const char * faultString ) :
        m_code(code),
        m_faultString(faultString) { }
    virtual ~FaultStruct(){}

    Tr069ParseFaultDetail::FapFault::FaultCode GetCode() const { return m_code; }
    const std::string & GetString() const { return m_faultString; }

private:
    Tr069ParseFaultDetail::FapFault::FaultCode m_code;
    std::string m_faultString;
};

}

#endif
