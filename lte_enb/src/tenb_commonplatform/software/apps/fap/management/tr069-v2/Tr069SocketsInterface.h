///////////////////////////////////////////////////////////////////////////////
//
// Tr069SocketsInterface
//
// <Description of class/module>
//
// Copyright radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

/** DELETE THIS
 * Use this template for C/C++ header files.
 *  - Fill in the header above.
 *  - Delete sections below that are empty (to make it easier to read).
 *  - Don't forget to replace __Template_h_ with __<Your Filename Stem>_h__
 */

#ifndef __Tr069SocketsInterface_h_
#define __Tr069SocketsInterface_h_

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

#include <messaging/transport/ApplicationWithMessaging.h>
#include <comms/IPv4Address.h>

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

#include "Tr069QueueableEvent.h"
#include "Tr069FsmInterface.h"
#include "Tr069SocketClient.h"
#include "Tr069SocketServer.h"

///////////////////////////////////////////////////////////////////////////////
// Constants
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Typedefs
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Forward Declarations
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Functions / Classes
///////////////////////////////////////////////////////////////////////////////
namespace tr069
{

class SocketsInterface : public Tr069FsmInterface
{
public:
    SocketsInterface( const threeway::IPv4Address & localIpAddress );
    ~SocketsInterface();

    /**
     *  EventHandler Interface
     */
    void HandleEvent(shared_ptr<threeway::Queueable> tr069Event);
    bool HandleTimerExpiry(threeway::TimerHandle expiredTimer);
    bool GetBootEvent() { return false;}

private:
    threeway::IPv4Address m_localIpAddress;
    tr069::SocketClient m_client;
};

}
#endif
