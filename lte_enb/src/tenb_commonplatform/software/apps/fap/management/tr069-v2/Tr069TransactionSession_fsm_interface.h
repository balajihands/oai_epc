///////////////////////////////////////////////////////////////////////////////
//
// Tr069TransactionSession_fsm_interface.h
//
// Autogenerated from Tr069TransactionSession.fsm
//
// Fsm Interface Class
//
// Copyright radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __Tr069TransactionSession_fsm_interface_h_
#define __Tr069TransactionSession_fsm_interface_h_
///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

#include <system/ThreadWithQueue.h>

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

#include "Tr069TransactionSessionTypes.h"

///////////////////////////////////////////////////////////////////////////////
// Defines
///////////////////////////////////////////////////////////////////////////////

// Definition at end of file
#undef Tr069TransactionSessionInterfaceDefinition

namespace tr069
{

/*** WARNING: Code AUTO-GENERATED from Tr069TransactionSession.fsm. Do not edit! ***/
class TransactionSessionFsmInterface
{
public:
    TransactionSessionFsmInterface() {}
    virtual ~TransactionSessionFsmInterface() {}
    
    // Actions
    virtual void SendHttpPost() = 0;
    virtual void SendEmptyHttpPostBecauseServerHasHeldRequests() = 0;
    virtual void SendEmptyHttpPostBecauseFapProceduresComplete() = 0;
    virtual void SendTerminatingEmptyHttpPostBecauseAllProceduresComplete() = 0;
    virtual void ClearHoldRequests() = 0;
    virtual void HandleServerResponse(shared_ptr<HttpPostResponse>) = 0;
    virtual void HandleServerFault(shared_ptr<HttpPostResponse>) = 0;
    virtual void HandleServerCommand(shared_ptr<HttpPostResponse>) = 0;
    virtual void MarkTransactionSessionFailed(shared_ptr<TcpConnectionFailureInd>) = 0;
    virtual void SendTransactionSessionFailure() = 0;
    virtual void SendTransactionSessionSuccess() = 0;
    virtual void SendRebootRequest(void*) = 0;
    
    // Entry/Exit
    virtual void TransactionSessionInProgressEntry() = 0;
    virtual void TransactionSessionInProgressExit() = 0;
    virtual void EstablishTcpConnectionEntry() = 0;
    virtual void TearDownTcpConnectionEntry() = 0;
    virtual void ServerSentEmptyPostEntry() = 0;
    virtual void WaitHttpResponseEntry() = 0;
    virtual void WaitHttpResponseExit() = 0;
    
    // Guard Conditions
    virtual bool QueryHoldRequests() = 0;
    virtual bool QueryEnqueuedHttpPost() = 0;
    virtual bool QueryFapProceduresCompleted() = 0;
    virtual bool QueryServerProceduresCompleted() = 0;
    virtual bool QueryAllProceduresCompleted(shared_ptr<TcpConnectionFailureInd>) = 0;
    virtual bool QueryFault(shared_ptr<HttpPostResponse>) = 0;
    virtual bool QueryEmptyHttpPost(shared_ptr<HttpPostResponse>) = 0;
    virtual bool QueryTransactionSessionFailed() = 0;
    
};
} // -namespace-

// Auto-updating Interface Definition
#define Tr069TransactionSessionInterfaceDefinition()  \
    virtual void SendHttpPost(); \
    virtual void SendEmptyHttpPostBecauseServerHasHeldRequests(); \
    virtual void SendEmptyHttpPostBecauseFapProceduresComplete(); \
    virtual void SendTerminatingEmptyHttpPostBecauseAllProceduresComplete(); \
    virtual void ClearHoldRequests(); \
    virtual void HandleServerResponse(shared_ptr<HttpPostResponse>); \
    virtual void HandleServerFault(shared_ptr<HttpPostResponse>); \
    virtual void HandleServerCommand(shared_ptr<HttpPostResponse>); \
    virtual void MarkTransactionSessionFailed(shared_ptr<TcpConnectionFailureInd>); \
    virtual void SendTransactionSessionFailure(); \
    virtual void SendTransactionSessionSuccess(); \
    virtual void SendRebootRequest(void*); \
    virtual void TransactionSessionInProgressEntry(); \
    virtual void TransactionSessionInProgressExit(); \
    virtual void EstablishTcpConnectionEntry(); \
    virtual void TearDownTcpConnectionEntry(); \
    virtual void ServerSentEmptyPostEntry(); \
    virtual void WaitHttpResponseEntry(); \
    virtual void WaitHttpResponseExit(); \
    virtual bool QueryHoldRequests(); \
    virtual bool QueryEnqueuedHttpPost(); \
    virtual bool QueryFapProceduresCompleted(); \
    virtual bool QueryServerProceduresCompleted(); \
    virtual bool QueryAllProceduresCompleted(shared_ptr<TcpConnectionFailureInd>); \
    virtual bool QueryFault(shared_ptr<HttpPostResponse>); \
    virtual bool QueryEmptyHttpPost(shared_ptr<HttpPostResponse>); \
    virtual bool QueryTransactionSessionFailed()

#endif // __Tr069TransactionSession_fsm_interface_h_

