///////////////////////////////////////////////////////////////////////////////
//
// Tr069UdpServer
//
// <Description of class/module>
//
// Copyright radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __Tr069UdpServer_h_
#define __Tr069UdpServer_h_

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

#include <messaging/transport/ApplicationWithMessaging.h>
#include <comms/IPv4Address.h>

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////
#include "Tr069Stun.h"
///////////////////////////////////////////////////////////////////////////////
// Constants
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Typedefs
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Forward Declarations
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Functions / Classes
///////////////////////////////////////////////////////////////////////////////

namespace tr069
{

class Tr069UdpServer : public threeway::ThreadWithQueue
{
private:
    // Singleton
    Tr069UdpServer( const threeway::IPv4Address & localIpAddress );

public:
    ~Tr069UdpServer();
    static Tr069UdpServer& GetInstance(const threeway::IPv4Address & localIpAddress);

private:
    static Tr069UdpServer* s_instance;
    u32 ThreadProcedure();
    threeway::IPv4Address m_localIpAddress;
    bool SetStunServerAddress(StunAddress4 &stunServerAddr);
    bool ResolveServerNameToFqdn(const char *resolveAddr);
    void HandleStunMessage(char *buf,int recvlen);
};

}
#endif
