///////////////////////////////////////////////////////////////////////////////
//
// Tr069XmlNodeString.h
//
// Copyright Radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __Tr069XmlProp_h_
#define __Tr069XmlProp_h_

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

#include <libxml/parser.h>

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Constants
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
// Typedefs
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Forward Declarations
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Functions / Classes
///////////////////////////////////////////////////////////////////////////////

class XmlProp
{
public:
    XmlProp( xmlNodePtr node, const char * propName )
    {
        xmlChar * xmlPropVal = xmlGetProp( node, (const xmlChar*)propName );

        if(xmlPropVal)
        {
            m_xmlString = (const char *)xmlPropVal;
            xmlFree(xmlPropVal);
        }
    }

	~XmlProp() {}

	const std::string & str() const { return m_xmlString;}

private:
    std::string m_xmlString;
};

#endif
