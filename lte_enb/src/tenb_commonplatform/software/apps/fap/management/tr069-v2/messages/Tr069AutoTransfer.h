///////////////////////////////////////////////////////////////////////////////
//
// Tr069TransactionSessionComplete
//
// Copyright radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __Tr069AutoTransfer_h_
#define __Tr069AutoTransfer_h_

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

#include <sstream>
#include <boost/shared_ptr.hpp>
#include <libcsoap/soap-env.h>
#include <libcsoap/soap-ctx.h>
#include <system/ThreadWithQueue.h>

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

#include "Tr069QueueableEvent.h"

namespace tr069
{

///////////////////////////////////////////////////////////////////////////////
// Constants
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Typedefs
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Forward Declarations
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Functions / Classes
///////////////////////////////////////////////////////////////////////////////



class AutoTransfer: public tr069::Tr069QueueableEvent
{

public:
   AutoTransfer( ) :
        tr069::Tr069QueueableEvent( TR069_EVENT(AUTO_TRANSFER_COMPLETE), CWMP_CONNECTION_FSM ) {}

   AutoTransfer(string fileName,string sTime, string cTime, bool isUploadSucc):
        tr069::Tr069QueueableEvent( TR069_EVENT(AUTO_TRANSFER_COMPLETE), CWMP_CONNECTION_FSM )
   {
      uploadFileName = fileName;
      startTime = sTime;
      completeTime = cTime;
      isUploadSuccess = isUploadSucc;
   }

   string GetFileName(){ return uploadFileName; }

   string GetStartTime(){ return startTime; }

   string GetCompleteTime(){ return completeTime; }

   bool GetUploadSuccess(){ return isUploadSuccess; }

   virtual ~AutoTransfer(){};
   
private:
  string uploadFileName,startTime,completeTime;
  bool isUploadSuccess;
};

}

#endif
