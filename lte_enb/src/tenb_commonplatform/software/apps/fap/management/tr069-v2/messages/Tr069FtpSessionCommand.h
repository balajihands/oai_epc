///////////////////////////////////////////////////////////////////////////////
//
// Tr069FtpSessionCommand.h
//
// Copyright radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __Tr069FtpSessionCommand_h_
#define __Tr069FtpSessionCommand_h_

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

#include <sstream>
#include <boost/shared_ptr.hpp>

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

#include "Tr069QueueableEvent.h"

namespace tr069
{

///////////////////////////////////////////////////////////////////////////////
// Constants
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Typedefs
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Forward Declarations
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Functions / Classes
///////////////////////////////////////////////////////////////////////////////



class FtpSessionCommand : public tr069::Tr069QueueableEvent
{
public:
    FtpSessionCommand( shared_ptr<Tr069QueueableEvent> event, Tr069QueueableEvent::Handler dst = FILE_TRANSFER_FSM ) :
        tr069::Tr069QueueableEvent( TR069_EVENT(FTP_SESSION_COMMAND), dst ),
        m_event(event)
        {
            RSYS_ASSERT(event);
        }

    virtual ~FtpSessionCommand(){}

    shared_ptr<Tr069QueueableEvent> GetEvent() const { return m_event; }

private:
    shared_ptr<Tr069QueueableEvent> m_event;
};

}

#endif
