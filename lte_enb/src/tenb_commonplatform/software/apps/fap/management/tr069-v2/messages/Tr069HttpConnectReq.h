///////////////////////////////////////////////////////////////////////////////
//
// Tr069Csoap
//
// Wraps the libcsoap interface into an easier to use OO class.
//
// Copyright radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __Tr069HttpConnectReq_h_
#define __Tr069HttpConnectReq_h_

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

#include <sstream>
#include <boost/shared_ptr.hpp>
#include <libcsoap/soap-env.h>
#include <libcsoap/soap-ctx.h>
#include <system/ThreadWithQueue.h>

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

#include "Tr069QueueableEvent.h"

namespace tr069
{

///////////////////////////////////////////////////////////////////////////////
// Constants
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// Typedefs
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Forward Declarations
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Functions / Classes
///////////////////////////////////////////////////////////////////////////////



class HttpConnectReq : public tr069::Tr069QueueableEvent
{


public:

    HttpConnectReq(const char * url) : tr069::Tr069QueueableEvent(HTTP_CONNECT_REQ, "HTTP-CONNECT-REQ"), m_url(url) { }
    virtual ~HttpConnectReq(){}

private:
    std::string & m_url
};

}

#endif
