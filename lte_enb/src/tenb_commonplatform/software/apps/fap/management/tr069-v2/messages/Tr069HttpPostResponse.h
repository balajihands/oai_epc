///////////////////////////////////////////////////////////////////////////////
//
// Tr069HttpPostResponse
//
// Copyright radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __Tr069HttpPostResponse_h_
#define __Tr069HttpPostResponse_h_

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

#include <sstream>
#include <boost/shared_ptr.hpp>
#include <libcsoap/soap-env.h>
#include <libcsoap/soap-ctx.h>
#include <system/ThreadWithQueue.h>
#include <nanohttp/nanohttp-client.h>
#include <map>

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

#include "Tr069Parser.h"
#include "Tr069QueueableEvent.h"

namespace tr069
{

///////////////////////////////////////////////////////////////////////////////
// Constants
///////////////////////////////////////////////////////////////////////////////

const char tr069XmlNsHeaderPreamble[] =
        " xmlns:soap-env=\"http://schemas.xmlsoap.org/soap/envelope/\""
        " xmlns:soap-enc=\"http://schemas.xmlsoap.org/soap/encoding/\""
        " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\""
        " xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\""
        " xmlns:cwmp=\"urn:dslforum-org:cwmp-1-0\"";

///////////////////////////////////////////////////////////////////////////////
// Typedefs
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Forward Declarations
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Functions / Classes
///////////////////////////////////////////////////////////////////////////////



class HttpPostResponse : public tr069::Tr069QueueableEvent
{


public:
    HttpPostResponse( hresponse_t  * response );

    ~HttpPostResponse()
    {
        if(m_SoapCtx)
        {
        	soap_ctx_free(m_SoapCtx);
        }
    }

public:
    shared_ptr<Tr069Parse> parsed;
    const char * ToString() const { return m_post.c_str(); }
    int  getResponseErrCode(){return responseErrCode;} 

private:
    int responseErrCode;
	map<string,string> digestMap;
    SoapCtx *m_SoapCtx;
    std::string m_post,m_realm,m_qop,m_nonce,m_opaque;

    SoapCtx * initSoapCtx(SoapEnv * soapEnv);
	void updateMap(string digestValues);
};

}

#endif
