///////////////////////////////////////////////////////////////////////////////
//
// Tr069SocketsConnectReq
//
// Copyright radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __Tr069TcpConnectReq_h_
#define __Tr069TcpConnectReq_h_

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////
#include <system/Url.h>

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

#include "Tr069QueueableEvent.h"

namespace tr069
{

///////////////////////////////////////////////////////////////////////////////
// Constants
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Typedefs
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Forward Declarations
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Functions / Classes
///////////////////////////////////////////////////////////////////////////////



class TcpConnectReq : public tr069::Tr069QueueableEvent
{
public:

    TcpConnectReq( const threeway::Url & socketUrl) :
        tr069::Tr069QueueableEvent( TR069_EVENT(TCP_CONNECT_REQ), SOCKET_INTERFACE_FSM),
        m_connectUrl(socketUrl){ }
    virtual ~TcpConnectReq(){};

    std::string GetConnectionUrl() { return m_connectUrl.Get(); }

private:
    threeway::Url m_connectUrl;
};

}

#endif
