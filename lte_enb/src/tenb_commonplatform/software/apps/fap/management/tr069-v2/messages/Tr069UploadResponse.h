///////////////////////////////////////////////////////////////////////////////
//
// Tr069UploadResponse
//
// Copyright radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __Tr069UploadResponse_h_
#define __Tr069UploadResponse_h_

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

#include <messaging/messages/common/FtpCompleteInd.h>

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

#include "Tr069QueueableEvent.h"

namespace tr069
{

///////////////////////////////////////////////////////////////////////////////
// Constants
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// Typedefs
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Forward Declarations
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Functions / Classes
///////////////////////////////////////////////////////////////////////////////



class UploadResponse : public tr069::Tr069QueueableEvent
{


public:

    UploadResponse( shared_ptr<UploadRequest> uploadRequest, shared_ptr<FtpCompleteInd> ftpCompleteInd ) :
        tr069::Tr069QueueableEvent( TR069_EVENT(UPLOAD_RESPONSE), TRANSACTION_SESSION_FSM ),
        m_uploadRequest(uploadRequest),
        m_ftpCompleteInd(ftpCompleteInd)
        { }
    virtual ~UploadResponse(){}

    shared_ptr<UploadRequest> GetUploadRequest(void) const { return m_uploadRequest; }
    shared_ptr<FtpCompleteInd> GetFtpCompleteInd(void) const { return m_ftpCompleteInd;}


private:
    shared_ptr<UploadRequest> m_uploadRequest;
    shared_ptr<FtpCompleteInd> m_ftpCompleteInd;
};

}

#endif
