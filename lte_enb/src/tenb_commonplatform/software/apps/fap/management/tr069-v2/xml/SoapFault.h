///////////////////////////////////////////////////////////////////////////////
//
// SoapFault.h
//
// Copyright radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __SoapFault_h_
#define __SoapFault_h_

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

#include <sstream>
#include <string>
#include <boost/shared_ptr.hpp>

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

#include "Tr069XmlStringUtils.h"
#include "Xmlable.h"
#include "CwmpFault.h"

using namespace std;
using namespace boost;
using namespace tr069;

namespace tr069
{

///////////////////////////////////////////////////////////////////////////////
// Constants
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Typedefs
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Forward Declarations
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Functions / Classes
///////////////////////////////////////////////////////////////////////////////

class SoapFault : public Xmlable
{
public:
    SoapFault() :
        m_faultCode("Server")
    {}

    virtual ~SoapFault()
    {}

    bool QueryValid() const
    {
        return true;
    }

    string Xmlise() const
    {
        string xmlString;

        if(QueryValid())
        {
            stringstream faultContent;

            faultContent
            << XmlStringUtils::ToElementString("faultcode", m_faultCode )
            << XmlStringUtils::ToElementString("faultstring", "CWMP fault" )
            << XmlStringUtils::ToElementString("detail", m_cmwpFault.Xmlise() );

            xmlString = XmlStringUtils::ToElementString( "soap-env:Fault", faultContent.str() );
        }

        return xmlString;
    }

    string m_faultCode;
    CwmpFault m_cmwpFault;
};

}

#endif
