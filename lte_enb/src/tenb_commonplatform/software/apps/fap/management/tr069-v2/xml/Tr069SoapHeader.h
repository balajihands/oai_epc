///////////////////////////////////////////////////////////////////////////////
//
// Tr069DeviceId.h
//
// Copyright radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __Tr069SoapHeader_h_
#define __Tr069SoapHeader_h_

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

#include <sstream>
#include <string>
#include <boost/shared_ptr.hpp>

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

#include "Tr069XmlStringUtils.h"

using namespace std;
using namespace boost;
using namespace tr069;

namespace tr069
{

///////////////////////////////////////////////////////////////////////////////
// Constants
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Typedefs
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Forward Declarations
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Functions / Classes
///////////////////////////////////////////////////////////////////////////////
static std::string cwmp_Id;
static std::string stimeout;


class SoapHeader
{
   public:
      SoapHeader()
      {}

      virtual ~SoapHeader()
      {}

      bool QueryValid();

      void SetCwmpId( std::string cwmpId)
      {
         cwmp_Id = cwmpId;
      }

      std::string GetCwmpId(void)const
      {
         return cwmp_Id;
      }

      void SetSoapTimeout( std::string timeout)
      {
         stimeout = timeout;
      }

      static string ToXml()
      {
         stringstream ss;

         ss <<
            "<soap-env:Header>"
            "<cwmp:ID soap-env:mustUnderstand=\"1\">"<< (string)cwmp_Id <<"</cwmp:ID>";
         if(stimeout.compare("")!=0)
         {
            ss <<
               "<cwmp:SessionTimeout soap-env:mustUnderstand=\"0\">"<< stimeout <<"</cwmp:SessionTimeout>";
         }
         ss <<
            "</soap-env:Header>";

         return ss.str();
      }
   private:

};

}

#endif
