##################
### Tenpin FSM ###
##################

fsm         Tenpin;
basename    Tenpin;
namespace   Tenpin;

#############
### Types ###
#############

type "void*";
type "shared_ptr<threeway::MessageSerialisedData>";

type_header "TenpinFsmTypes.h";

##############
### Events ###
##############

event Go                    type "void*";
event Stop                  type "void*";
event ExpiryGuardTimer      type "void*";
event ExpiryIkeGraceTimer   type "void*";
event OamStart              type "void*";

event DnsServerAddReq           type "shared_ptr<threeway::MessageSerialisedData>";
event FirewallOpenReq           type "shared_ptr<threeway::MessageSerialisedData>";
event FirewallOpenCnf           type "shared_ptr<threeway::MessageSerialisedData>";
event FirewallCloseReq          type "shared_ptr<threeway::MessageSerialisedData>";
event FirewallCloseCnf          type "shared_ptr<threeway::MessageSerialisedData>";
event SignatureVerifyReq        type "shared_ptr<threeway::MessageSerialisedData>";
event MibSubscribeAttributesInd type "shared_ptr<threeway::MessageSerialisedData>";
event IkeTunnelCreateReq        type "shared_ptr<threeway::MessageSerialisedData>";
event IkeTunnelDeleteReq        type "shared_ptr<threeway::MessageSerialisedData>";
event IkeTunnelConnectInd       type "shared_ptr<threeway::MessageSerialisedData>";
event IkeTunnelDisconnectInd    type "shared_ptr<threeway::MessageSerialisedData>";
event HwCryptoAvailableInd      type "shared_ptr<threeway::MessageSerialisedData>";

##############
### States ###
##############

superstate  All;
state       Initial;
state       Unusable;
superstate  Usable;
state       NotConfigured;
state       NotStarted;
state       Starting;
superstate  Started;
state       Operational;
state       Stopped;

junction    UsabilityTest;

##################
### Conditions ###
##################

### conditions performed but not generated by fsm compiler
#guard_condition CheckCertificates;
#guard_condition CheckFapId;
guard_condition CheckUsable;

###############
### Actions ###
###############

### actions performed but not generated by fsm compiler
#action ExtractCertificates;
#action ExtractFapId;
#action PublishFapId;
#action StartGuardTimer;
#action StopGuardTimer;
#action DeleteGuardTimer;
#action StartIkeGraceTimer;
#action StopIkeGraceTimer;
#action DeleteIkeGraceTimer;
#action SubscribeAttributes;
#action NotifyOamUnusable;
#action NotifyOamReady;
#action NotifyOamOperational;
#action StartIke;
#action StopIke;
#action SignatureVerify;
#action RegisterCliCommands;

action Extract;
action DnsServerAdd;
action FirewallOpen;
action FirewallOpened;
action FirewallClose;
action FirewallClosed;
action SignatureVerifyFailed;
action SignatureVerifyTest;
action StoreAttributes;
action TunnelCreate;
action TunnelDelete;
action TunnelConnected;
action TunnelDisconnected;
action HwCryptoCtrl;

###########
### Fsm ###
###########

initial_state Initial;

superstate All
{
    event Stop >> Stopped;

    event DnsServerAddReq           action DnsServerAdd;
    event FirewallOpenReq           action FirewallOpen;
    event FirewallOpenCnf           action FirewallOpened;
    event FirewallCloseReq          action FirewallClose;
    event FirewallCloseCnf          action FirewallClosed;
    event SignatureVerifyReq        action SignatureVerifyFailed;
    event MibSubscribeAttributesInd action StoreAttributes;
}

state Initial
{
    superstate All;

    event Go action Extract >> UsabilityTest;
}

junction UsabilityTest
{
    superstate All;

    if CheckUsable >> NotConfigured;
    else           >> Unusable;
}

state Unusable
{
    superstate All;

    entry; # NotifyOamUnusable
}

superstate Usable
{
    superstate All;

    event SignatureVerifyReq action SignatureVerifyTest;
}

state NotConfigured
{
    superstate Usable;

    entry; # SubscribeAttributes, StartGuardTimer
    exit;  # StopGuardTimer

    event ExpiryGuardTimer                                 >> NotConfigured;
    event MibSubscribeAttributesInd action StoreAttributes >> NotStarted;
}

state NotStarted
{
    superstate Usable;

    entry; # NotifyOamReady, StartGuardTimer

    event ExpiryGuardTimer >> NotStarted;
    event OamStart         >> Starting;
}

state Starting
{
    superstate Usable;

    entry; # StartIke, StartIkeGraceTimer
    exit;  # StopIkeGraceTimer

    event ExpiryIkeGraceTimer >> Operational;
}

superstate Started
{
    superstate Usable;

    entry; # DeleteGuardTimer, DeleteIkeGraceTimer
}

state Operational
{
    superstate Started;

    entry; # PublishFapId, RegisterCliCommands, NotifyOamOperational
    exit;  # StopIke

    event IkeTunnelCreateReq        action TunnelCreate;
    event IkeTunnelDeleteReq        action TunnelDelete;
    event IkeTunnelConnectInd       action TunnelConnected;
    event IkeTunnelDisconnectInd    action TunnelDisconnected;
    event HwCryptoAvailableInd      action HwCryptoCtrl;
}

state Stopped
{
    superstate All;
}
