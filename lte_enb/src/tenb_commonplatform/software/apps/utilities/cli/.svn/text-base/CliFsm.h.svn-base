///////////////////////////////////////////////////////////////////////////////
//
// CliIo.h
//
// Copyright Radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __CliFsm_h_
#define __CliFsm_h_

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

#include <boost/shared_ptr.hpp>
#include <system/TimerInterface.h>

#include "CliFsmInterface.h"
#include "Cli_fsm.h"

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

using namespace std;
using namespace boost;
using namespace threeway;

///////////////////////////////////////////////////////////////////////////////
// Local Constants
///////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Classes
/////////////////////////////////////////////////////////////////////////////////

class CliFsm
{
public:
    CliFsm( shared_ptr<CliFsmInterface> interface, const char * name = "CliFsm" ) :
        m_interface( interface ),
        m_fsm( *interface, true, name )
        {}
    virtual ~CliFsm() {};

    void Start();
    void Stop( const char * reason);
    void HandleMessage( shared_ptr<MessageSerialisedData> message );
    bool HandleTimerExpiry( TimerHandle id );
    void HandleCommandLine( shared_ptr<CliCommand> );

private:
    shared_ptr<CliFsmInterface> m_interface;
    CommandLineFsm m_fsm;
};


#endif
