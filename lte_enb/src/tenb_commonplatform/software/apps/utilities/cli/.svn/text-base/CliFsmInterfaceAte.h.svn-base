///////////////////////////////////////////////////////////////////////////////
//
// CliFsmInterfaceAte.h
//
// Copyright Radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __CliFsmInterfaceAte_h_
#define __CliFsmInterfaceAte_h_

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

#include <boost/shared_ptr.hpp>
#include <system/Serialisable.h>

#include "CliFsmInterface.h"

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

using namespace boost;

///////////////////////////////////////////////////////////////////////////////
// Local Constants
///////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Classes
/////////////////////////////////////////////////////////////////////////////////

class CliFsmInterfaceAte : public CliFsmInterface
{
public:
    CliFsmInterfaceAte( shared_ptr<CliInput> input) :
        CliFsmInterface(input),
        m_prompt("")
        {}
    virtual ~CliFsmInterfaceAte() {}

    virtual void FeedbackCompletionResult(shared_ptr<CliExecuteCmdCnf>);
    virtual void FeedbackCommandRejected(shared_ptr<CliCommand>);
    virtual void FeedbackProgress(shared_ptr<CliExecuteCmdProgressInd>) {};

    virtual const string & GetPrompt() { return m_prompt; }

private:
    string m_prompt;

};

#endif
