///////////////////////////////////////////////////////////////////////////////
//
// ValidatorCipheringAlgo.h
//
// CipheringAlgo validator.
//
// Copyright Radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __ValidatorCipheringAlgo_h_
#define __ValidatorCipheringAlgo_h_

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

#include "ValidatorStringArray.h"

///////////////////////////////////////////////////////////////////////////////
// Functions / Classes
///////////////////////////////////////////////////////////////////////////////

class ValidatorCipheringAlgo : public ValidatorStringArray
{
public:
    ValidatorCipheringAlgo() {};
    virtual ~ValidatorCipheringAlgo() {};

    virtual bool ValidateStringArray(const std::vector<std::string>& value, u32 minLength, u32 maxLength, s32 minValue, s32 maxValue, u32 maxInstances, ValidationFailureDescriptor& failureDescriptor);

};

#endif
