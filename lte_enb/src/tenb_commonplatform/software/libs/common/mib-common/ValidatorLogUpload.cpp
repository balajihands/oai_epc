///////////////////////////////////////////////////////////////////////////////
////
//// ValidatorDeltaFPUCCHFormat1b.cpp 
////
//// See header file for documentation.
////
//// Copyright Radisys Limited
////
/////////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////////
//// System Includes
/////////////////////////////////////////////////////////////////////////////////
//
#include <sstream>
#include <system/Trace.h>

/////////////////////////////////////////////////////////////////////////////////
//// Local Includes
/////////////////////////////////////////////////////////////////////////////////

#include "ValidatorLogUpload.h"

using namespace std;

/////////////////////////////////////////////////////////////////////////////////
//// Class Functions
/////////////////////////////////////////////////////////////////////////////////

bool ValidatorLogUpload::ValidateU32(u32 value, u32 min, u32 max, ValidationFailureDescriptor& failureDescriptor)
{
   ENTER();

   ostringstream description;
   bool isValid = true ;

   if(value != 0)
   {
      isValid = ValidatorU32::ValidateU32(value, min, max, failureDescriptor);
   }

   if(isValid )
   {
      if(value %5 != 0) 
      {
         isValid = false;
      }
   }
   if(!isValid)
   {
      description << "NotValidValue (" << value << ").Supported values are in multiples of 5";
      failureDescriptor.Set(ValidationFailureDescriptor::CAUSE_NOT_VALID_VALUE, description.str());
   }

   RETURN(isValid);
}
