///////////////////////////////////////////////////////////////////////////////
//
// ValidatorReportingThreshold.h
//
// A validator for Reporting Thresholds.
//
// Copyright Radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __ValidatorReportingThreshold_h_
#define __ValidatorReportingThreshold_h_

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

#include "ValidatorU32.h"

///////////////////////////////////////////////////////////////////////////////
// Functions / Classes
///////////////////////////////////////////////////////////////////////////////

class ValidatorReportingThreshold : public ValidatorU32
{
public:

    ValidatorReportingThreshold() {};
    virtual ~ValidatorReportingThreshold() {};

    /**
     * Validate a Reporting Threshold (as u32).
     *
     * \param value The value to validate.
     * \param min   The minimum allowed value.
     * \param max   The maximum allowed value.
     * \param failureDescriptor Gets filled in with information about any validation failure.
     */
    virtual bool ValidateU32(u32 value, u32 min, u32 max, ValidationFailureDescriptor& failureDescriptor);

protected:

private:

};

#endif
