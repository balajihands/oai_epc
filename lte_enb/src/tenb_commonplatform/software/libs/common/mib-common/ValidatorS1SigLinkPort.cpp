///////////////////////////////////////////////////////////////////////////////
//
// ValidatorS1SigLinkPort.cpp
//
// See header file for documentation.
//
// Copyright Radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

#include <sstream>
#include <system/Trace.h>

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

#include "ValidatorS1SigLinkPort.h"

using namespace std;

///////////////////////////////////////////////////////////////////////////////
// Class Functions
///////////////////////////////////////////////////////////////////////////////

ValidatorS1SigLinkPort::ValidatorS1SigLinkPort()
{
    ENTER();

    EXIT();
}

ValidatorS1SigLinkPort::~ValidatorS1SigLinkPort()
{
    ENTER();

    EXIT();
}

bool ValidatorS1SigLinkPort::ValidateU32(u32 value, u32 min, u32 max, ValidationFailureDescriptor& failureDescriptor)
{
    ENTER();
    if(value != 36412)
    {
        ostringstream description;
        description << "value=" << value << ", suggested value=" << 36412;
        failureDescriptor.Set(ValidationFailureDescriptor::CAUSE_INVALID, description.str());
        RETURN(false);
    }

    RETURN(true);
}
