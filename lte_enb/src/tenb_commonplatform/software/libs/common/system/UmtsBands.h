///////////////////////////////////////////////////////////////////////////////
//
// UmtsBands.h
//
// Class to do with handling Umts Bands.
//
// Copyright Radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __UmtsBands_h_
#define __UmtsBands_h_

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

#include <set>
#include <sstream>
#include <Radisys.h>
#include <system/UarfcnTypes.h>
///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Typedefs
///////////////////////////////////////////////////////////////////////////////

typedef std::set<UmtsBandId> UmtsBandIds;

class UmtsBands
{
public:
    UmtsBands(bool populateWithAllValidBands = true);

    UmtsBands & Merge(const UmtsBands& rhs);

    std::string ToString() const;

    std::string ToDetailedString() const;

    const UmtsBandIds & Get() const;

    void Clear();

    void Erase( UmtsBandId band );

    void Erase(const UmtsBands& rhs);

    void Insert(const UmtsBandIds& bands);

    void Insert( UmtsBandId band );

    bool Find( UmtsBandId band ) const;

    u16 Count() const;

    UmtsBandId UarfcnToUband(u16 uarfcn);

private:
    UmtsBandIds m_umtsBands;
};

///////////////////////////////////////////////////////////////////////////////
// Classes
///////////////////////////////////////////////////////////////////////////////

#endif

