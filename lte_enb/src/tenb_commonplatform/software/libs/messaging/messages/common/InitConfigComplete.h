///////////////////////////////////////////////////////////////////////////////
//
// InitConfigComplete.h
//
// Message sent to inform that eNodeB initial config is complete
//
// Copyright radisys Ltd
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __InitConfigComplete_h_
#define __InitConfigComplete_h_

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

#include <system/Serialisable.h>
#include <system/SerialisationIds.h>

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

using namespace std;

///////////////////////////////////////////////////////////////////////////////
// Classes
///////////////////////////////////////////////////////////////////////////////

class InitConfigComplete : public threeway::Serialisable
{
public:
    /**
     * Construction / destruction.
     */
    InitConfigComplete() {}
    virtual ~InitConfigComplete() {};

    virtual u32 GetSerialisationId() const { return SERIALISATION_ID_ENODEB_INIT_CONFIG_COMPLETE; }
    virtual s32 Serialise(u8* data, u32 dataMaxBytes) const { return 1; }
    virtual bool DeSerialise(const u8* data, u32 dataLen) { return true; }

    virtual std::string ToString() const { return "InitConfigComplete"; }

private:
};

#endif
