///////////////////////////////////////////////////////////////////////////////
//
// TenpinFirewallCloseCnf.cpp
//
// See header file for documentation.
//
// Copyright radisys Limited
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// System Includes
///////////////////////////////////////////////////////////////////////////////

#include <system/Trace.h>
#include <system/SerialisationUtils.h>

///////////////////////////////////////////////////////////////////////////////
// Local Includes
///////////////////////////////////////////////////////////////////////////////

#include "TenpinFirewallCloseCnf.h"

///////////////////////////////////////////////////////////////////////////////
// Class Functions
///////////////////////////////////////////////////////////////////////////////

s32 TenpinFirewallCloseCnf::Serialise(u8* data, u32 dataMaxBytes) const
{
    ENTER();

    u8 * start = data;

    if (4 <= dataMaxBytes)
    {
        SerialiseIt(m_token, data);
    }

    RETURN(data - start);
}

bool TenpinFirewallCloseCnf::DeSerialise(const u8* data, u32 dataLen)
{
    ENTER();

    bool decode = (4 <= dataLen);

    if (decode)
    {
        DeSerialiseIt(m_token, data);
    }

    RETURN(decode);
}

std::string TenpinFirewallCloseCnf::ToString() const
{
    ENTER();
    ostringstream stream;
    stream << "TenpinFirewallCloseCnf: token=" << m_token;
    RETURN(stream.str());
}
