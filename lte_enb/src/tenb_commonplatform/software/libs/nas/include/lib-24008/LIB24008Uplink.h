///////////////////////////////////////////////////////////////////////////////
//
// 3 Way Networks Source File
//
///////////////////////////////////////////////////////////////////////////////
//
// LIB24008Uplink.h
//
// Wrapper for the generated messages; we do this to hide the Encodix
// structures from the rest of the applications, so they don't need to 
// be exposed to the raw horror contained within.
//
// Copyright © 3 Way Networks, Ltd.
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __LIB24008Uplink_h_
#define __LIB24008Uplink_h_

///////////////////////////////////////////////////////////////////////////////
// Encodix Includes
///////////////////////////////////////////////////////////////////////////////

#include <Encodix24008.h>
#include <Layer3Constants.h>

///////////////////////////////////////////////////////////////////////////////
// Includes
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// Forward Declarations
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// Class: LIB24008Uplink
// Desc:  We don't want to have the memory management of the structures
//        exposed to the main applications to prevent memory leaks.
///////////////////////////////////////////////////////////////////////////////

class LIB24008Uplink
{
public:
	// Constructor / destructor.
	LIB24008Uplink ();
	virtual ~LIB24008Uplink ();

	// Just to check the content of the Encoxi stuff is valid.
	void SetPDUValid (int decodeResult);
	bool PDUIsValid () const;

	// Force leaf class to return the PD type: this lets us figure
	// out theleaf class type for casting.
	virtual GSM0408ProtocolDiscrim GetPD () const = 0;

protected:

	// The structure is populated by a successful call to the
	// Decode engine: the return of that call is stored here.
	bool m_pduPopulated;
};

#endif
